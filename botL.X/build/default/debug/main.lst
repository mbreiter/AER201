MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009 ;*******************************************************************************
                      00010 ; configuration settings
                      00011 ;*******************************************************************************
                      00012 
Warning[205]: Found directive in column 1. (list)
                      00013 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00014 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00015 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00016 #include <i2c.inc>
  0000                00001     extern      I2C_Master_INIT, I2C_Master_WAIT,I2C_Master_START,I2C_Master_RSTART,I2C_Master_STOP,I2C_Master_WRITE, I2C_Master_REA
                            D, I2C_ACKDT 
                      00002 
                      00003 
                      00017 
                      00018     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00019     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00020     CONFIG WDT = OFF, WDTPS = 32768
                      00021     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00022     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00023     CONFIG DEBUG = ON
                      00024     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00025     CONFIG CPB = OFF, CPD = OFF
                      00026     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00027     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00028     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00029     CONFIG EBTRB = OFF
                      00030 
                      00031 ;*******************************************************************************
                      00032 ; variable and constants
                      00033 ;*******************************************************************************
                      00034             CODE
                      00035 ; timers
                      00036 #define     timer_H     0x9E
                      00037 #define     timer_L     0x58
  00000010            00038 OP_sec      equ         0x10
  00000011            00039 OP_INT      equ         0x11
                      00040 
                      00041 ; keys
  00000000            00042 key1        equ         d'0'
  00000001            00043 key2        equ         d'1'
  00000002            00044 key3        equ         d'2'
  00000003            00045 keyA        equ         d'3'
  00000004            00046 key4        equ         d'4'
  00000005            00047 key5        equ         d'5'
  00000006            00048 key6        equ         d'6'
  00000007            00049 keyB        equ         d'7'
  00000008            00050 key7        equ         d'8'
  00000009            00051 key8        equ         d'9'
  0000000A            00052 key9        equ         d'10'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            00053 keyC        equ         d'11'
  0000000C            00054 keyS        equ         d'12'
  0000000D            00055 key0        equ         d'13'
  0000000E            00056 keyH        equ         d'14'
  0000000F            00057 keyD        equ         d'15'
                      00058 
  00000050            00059 KEY         equ         0x50
  00000051            00060 temp_KEY    equ         0x51
  00000052            00061 KEY_ISR     equ         0x52
                      00062 
                      00063 ; temporary variable used in isrs
  00000005            00064 temp_ISR    equ         0x05
                      00065 
                      00066 ; temporary registers to save W and status
  00000001            00067 temp_S      equ         0x01
  00000002            00068 temp_W      equ         0x02
  00000003            00069 counter     equ         0x03
  00000004            00070 counter2    equ         0x04
  00000006            00071 temp        equ         0x06
                      00072 
                      00073 ; delays for timers
  00000028            00074 delayR      equ         0x28        ; primary delay register
  00000029            00075 d5us        equ         0x29        ; 5 us delay
  00000030            00076 d200us      equ         0x30        ; 200 us delay
  00000031            00077 d50ms       equ         0x31        ; 50 ms delay
                      00078 
                      00079 ; EEPROM
                      00080 #define     temp_EE     d'220'
                      00081 #define     last_log    d'168'
  00000070            00082 clear_EE    equ         0x70
  00000071            00083 H_EE        equ         0x71
  00000072            00084 L_EE        equ         0x72
  00000073            00085 REG_EE      equ         0x73
  00000074            00086 tempH_EE    equ         0x74
  00000075            00087 tempL_EE    equ         0x75
  00000076            00088 MAX_EE      equ         0x76
  00000077            00089 READ_EE     equ         0x77
  00000078            00090 LED_Count   equ         0x78
  00000079            00091 SkipCount   equ         0x79
                      00092 
                      00093 ; execution
  00000080            00094 exe_sec     equ         0x80
  00000081            00095 exe_int     equ         0x81
                      00096 
                      00097 ; pc interface
                      00098 ; rtc
  00000090            00099 tens_digit  equ         0x90
  00000091            00100 ones_digit  equ         0x91
                      00101 
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
000000 6F62 4C74 0000 00105 Welcome         db          "botL", 0
000006 726D 6820 206C 00106 Team            db          "mr hl hg", 0
       6768 0000 
000010 7453 6E61 6264 00107 StandBy         db          "Standby", 0
       0079 
000018 6954 656D 003A 00108 Log1            db          "Time:",0
00001E 3231 303A 2030 00109 Log2            db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
00002C 6153 6576 3A64 00110 LogInfo1        db          "Saved:", 0
       0000 
000034 6142 6B63 3C20 00111 LogInfo2        db          "Back <0>", 0
       3E30 0000 
00003E 6F53 7472 6E69 00112 Exe             db          "Sorting...", 0
       2E67 2E2E 0000 
00004A 7453 706F 6570 00113 Stopped         db          "Stopped", 0
       0064 
000052 6954 656D 203A 00114 Op_Time         db          "Time: ", 0
       0000 
00005A 6153 6976 676E 00115 Save            db          "Saving...", 0
       2E2E 002E 
000064 7254 6E61 6673 00116 Transfer        db          "Transferring...", 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 6972 676E 
       2E2E 002E 
000074 6153 6566 7974 00117 Safety          db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
000084 2F4E 0041      00118 NoData          db          "N/A", 0
                      00119 
                      00120 ;*******************************************************************************
                      00121 ; macros
                      00122 ;*******************************************************************************
                      00123 
                      00124 movMSB  macro   port
                      00125         andlw   0xF0
                      00126         iorwf   port, f
                      00127         iorlw   0x0F
                      00128         andwf   port, f
                      00129         endm
                      00130 
                      00131 Delay50N macro count, N
                      00132         local   loop
                      00133         movlw   N
                      00134         movwf   count
                      00135 
                      00136 loop
                      00137         call    Delay50ms
                      00138         decfsz  count
                      00139         goto    loop
                      00140         endm
                      00141 
                      00142 Display macro   Message
                      00143         local   loop
                      00144         movlw   upper Message   ; Move Table<20:16>
                      00145         movwf   TBLPTRU
                      00146         movlw   high Message    ; Move Table<15:8>
                      00147         movwf   TBLPTRH
                      00148         movlw   low Message     ; Move Table<7:0>
                      00149         movwf   TBLPTRL
                      00150         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00151         movf    TABLAT, W
                      00152 loop
                      00153         call    WR_DATA         ; write to LCD
                      00154         tblrd+*                 ; next row in table
                      00155         movf    TABLAT, W
                      00156         bnz     loop
                      00157         endm
                      00158 
                      00159 DisplayLog  macro   addrH, addrL
                      00160             local   Again, Finish
                      00161             clrf    SkipCount
                      00162             clrf    MAX_EE
                      00163 
                      00164             ; Check if there is No Data first
                      00165             READEE      REG_EE, addrH, addrL
                      00166             movlw       0xFF
                      00167             cpfseq      REG_EE
                      00168             goto        Again
                      00169             Display     NoData
                      00170             goto        Finish
                      00171 Again
                      00172             ; Put a space every 3 Writes
                      00173             movlw       d'3'
                      00174             cpfslt      SkipCount
                      00175             cpfslt      MAX_EE
                      00176             goto        Finish
                      00177 
                      00178             ; read EEPROM
                      00179             READEE      REG_EE, addrH, addrL
                      00180             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00181             goto        Finish
                      00182 Finish
                      00183             endm
                      00184 
                      00185 
                      00186 WriteRTC    macro
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00187         movff   tens_digit, W
                      00188         call    WR_DATA
                      00189         movff   ones_digit, W
                      00190         call    WR_DATA
                      00191         endm
                      00192 
                      00193 WriteEE macro   word, addH, addL
                      00194         movff   addH, EEADRH    ; High address
                      00195         movff   addL, EEADRH    ; Low address
                      00196         movff   word, EEDATA    ; set word
                      00197 
                      00198         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00199         bra     $-2
                      00200 
                      00201         bcf     EECON1, EEPGD   ; Point to data memory
                      00202         bcf     EECON1, CFGS    ; Access EEPROM
                      00203         bsf     EECON1, WREN    ; enable write
                      00204         bcf     EECON1, GIE         ; disable interrupts during write
                      00205         bcf     PIR2, EEIF
                      00206 
                      00207         movlw   0x55
                      00208         movwf   EECON2      ; write 55h
                      00209         movlw   0xAA
                      00210         movwf   EECON2      ; write 0xAA
                      00211         bsf     EECON1, WR          ; begin write
                      00212         btfsc   EECON1, WR
                      00213         bra     $-2
                      00214 
                      00215         bsf     EECON1, GIE         ; enable interrupts after write
                      00216         bcf     ECON1, WREN         ; disable writes
                      00217         endm
                      00218 
                      00219 READEE  macro   file, addH, addL
                      00220         movff   addH, EEADRH        ; read to high
                      00221         movff   addL, EEADR         ; read to low
                      00222         bcf     EECON1, EEPGD       ; point to data memory
                      00223         bcf     EECON1, CFGS        ; access to EEPROM
                      00224         bsf     EECON1, RD          ; read EEPROM
                      00225         movff   EEDATA, file        ; put data into file
                      00226         endm
                      00227 
                      00228 ChangeMode  macro   ModeId, NextMode
                      00229         local Next, Exit
                      00230 
                      00231         movlw   ModeId              ; poll for mode
                      00232         cpfseq  KEY                 ; check this against key press
                      00233         goto    Exit
                      00234 
                      00235 Next
                      00236         clrf    LATA                ; clear pins before proceeding
                      00237         clrf    LATB
                      00238         clrf    LATC
                      00239         clrf    LATD
                      00240         goto    NextMode
                      00241 
                      00242 Exit
                      00243         nop
                      00244         endm
                      00245 
                      00246 saveContext macro
                      00247     movff   STATUS, temp_S          ; save STATUS first
                      00248     movwf   temp_W                  ; save W
                      00249     endm
                      00250 
                      00251 restContext macro
                      00252     swapf   temp_W, W               ; restore W first
                      00253     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00254     endm
                      00255 ;*******************************************************************************
                      00256 ; reset vector and isrs
                      00257 ;*******************************************************************************
                      00258         ORG     0x000               ; processor reset vector
000000 EF?? F???      00259         goto    INIT                ; go to beginning of program
                      00260 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00261         ORG     0x008
000008 EF?? F???      00262         goto    ISR_High
                      00263 
                      00264         ORG     0x018
000018 EF?? F???      00265         goto    ISR_LOW
                      00266 
00001C                00267 ISR_High
00001C 6E02           00268         movwf   temp_W              ; save current W
00001E CFD8 F001      00269         movff   STATUS, temp_S      ; save status
                      00270 
                      00271         ; ISR_High routines
000022 C001 FFD8      00272         movff   temp_S, STATUS      ; retreive status
000026 3A02           00273         swapf   temp_W, f
000028 3802           00274         swapf   temp_W, w           ; restore W
00002A 0010           00275         retfie
                      00276 
00002C                00277 ISR_LOW
                      00278         saveContext
00002C CFD8 F001          M     movff   STATUS, temp_S          ; save STATUS first
000030 6E02               M     movwf   temp_W                  ; save W
                      00279         ; KEYPAD INTERRUPT
000032 A0F0           00280         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
000034 EF?? F???      00281         goto            END_ISR_LOW
                      00282 
                      00283         ;Check operation status
                      00284 ;       movlw           0xFF                                    ; If in operation, skip return
                      00285 ;       cpfseq          InOperation
                      00286 ;       goto            END_ISR_LOW
                      00287 
                      00288         ; Process KEY
000038 3881           00289         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
00003A 0B0F           00290         andlw           0x0F
00003C 6E52           00291         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00292 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00293 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
00003E EF?? F???      00294         goto            END_ISR_LOW
                      00295 
                      00296         ; Reset program counter
000042 6AFF           00297         clrf            TOSU
000044 6AFE           00298         clrf            TOSH
000046 6AFD           00299         clrf            TOSL
                      00300 
000048                00301 END_ISR_LOW
000048 90F0           00302     bcf                 INTCON3, INT1IF         ; Clear flag for next interrupt
                      00303     restContext
00004A 3802               M     swapf   temp_W, W               ; restore W first
00004C C001 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00304 
000050 6E02           00305         movwf   temp_W              ; save current W
000052 CFD8 F001      00306         movff   STATUS, temp_S      ; save status
                      00307 
                      00308         ; ISR_Low routines
000056 C001 FFD8      00309         movff   temp_S, STATUS      ; retreive status
00005A 3A02           00310         swapf   temp_W, f
00005C 3802           00311         swapf   temp_W, w           ; restore W
00005E 0010           00312         retfie
                      00313 
                      00314 ;*******************************************************************************
                      00315 ; main
                      00316 ;*******************************************************************************
000060                00317 INIT
                      00318         ; i/o
000060 0E00           00319         movlw   b'00000000'
000062 6E92           00320         movwf   TRISA
000064 0EFF           00321         movlw   b'11111111'
000066 6E93           00322         movwf   TRISB               ; keypad
000068 0EBF           00323         movlw   b'10111111'
00006A 6E94           00324         movwf   TRISC
00006C 0E00           00325         movlw   b'00000000'
00006E 6E95           00326         movwf   TRISD
000070 0E07           00327         movlw   b'00000111'
000072 6E96           00328         movwf   TRISE
                      00329 
                      00330         ; analog/digital pins
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000074 0E0F           00331         movlw   b'00001111'     ; Set all AN pins to Digital
000076 6EC1           00332         movwf   ADCON1
                      00333 
                      00334         ; clear Ports
000078 6A89           00335         clrf    LATA
00007A 6A8A           00336         clrf    LATB
00007C 6A8B           00337         clrf    LATC
00007E 6A8C           00338         clrf    LATD
000080 6A8D           00339         clrf    LATE
                      00340 
                      00341         ; initializations
000082 EC?? F???      00342         call    InitLCD
000086 EC?? F???      00343         call    I2C_Master_INIT
00008A EC?? F???      00344         call    Delay50ms
                      00345         ;call   initUSART
                      00346         ;call   initEEPROM
                      00347 
00008E 0E08           00348         movlw   b'00001000'
000090 6ED5           00349         movwf   T0CON
                      00350 
                      00351         ; interrupts
000092 6AD0           00352         clrf    RCON
000094 6AF2           00353         clrf    INTCON
000096 6AF1           00354         clrf    INTCON2
000098 6AF0           00355         clrf    INTCON3
00009A 8ED0           00356         bsf     RCON, IPEN          ; priority mode
00009C 8EF2           00357         bsf     INTCON, GIEH        ; permit global interrupts
00009E 8CF2           00358         bsf     INTCON, GIEL
0000A0 8AF1           00359         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
0000A2 8AF2           00360         bsf     INTCON, TMR0IE
0000A4 84F1           00361         bsf     INTCON2, TMR0IP     ; set to high priority
0000A6 86F0           00362         bsf     INTCON3, INT1IE
0000A8 9CF0           00363         bcf     INTCON3, INT1IP
                      00364 
0000AA 6A71           00365         clrf    H_EE
0000AC 6A72           00366         clrf    L_EE
0000AE 6B90           00367         clrf    tens_digit
0000B0 6B91           00368         clrf    ones_digit
                      00369 
                      00370         ; set real time clock
0000B2 EC?? F???      00371         call    I2C_Master_START
0000B6 EC?? F???      00372         call    Delay50ms
0000BA 0ED0           00373         movlw   b'11010000'
0000BC EC?? F???      00374         call    I2C_Master_WRITE
0000C0 0E00           00375         movlw   0x00                ; memory point to seconds
0000C2 EC?? F???      00376         call    I2C_Master_WRITE
                      00377 
0000C6 0E00           00378         movlw   0x00                ; set seconds to 0
0000C8 EC?? F???      00379         call    I2C_Master_WRITE
0000CC 0E40           00380         movlw   0x40                ; set minutes to 40
0000CE EC?? F???      00381         call    I2C_Master_WRITE
0000D2 0E15           00382         movlw   0x15                ; set hours to 15
0000D4 EC?? F???      00383         call    I2C_Master_WRITE
0000D8 0E05           00384         movlw   0x5                 ; set day to 5
0000DA EC?? F???      00385         call    I2C_Master_WRITE
0000DE 0E02           00386         movlw   0x02                ; set month to feb
0000E0 EC?? F???      00387         call    I2C_Master_WRITE
0000E4 0E17           00388         movlw   0x17                ; set year to 17
0000E6 EC?? F???      00389         call    I2C_Master_STOP
                      00390 
                      00391         Display Welcome
  0000                    M         local   loop
0000EA 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0000EC 6EF8               M         movwf   TBLPTRU
0000EE 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0000F0 6EF7               M         movwf   TBLPTRH
0000F2 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0000F4 6EF6               M         movwf   TBLPTRL
0000F6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0000F8 50F5               M         movf    TABLAT, W
0000FA                    M loop
0000FA EC?? F???          M         call    WR_DATA         ; write to LCD
0000FE 000B               M         tblrd+*                 ; next row in table
000100 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000102 E1??               M         bnz     loop
000104 EC?? F???      00392         call LCD_L2
                      00393         Display Team
  0000                    M         local   loop
000108 0E??               M         movlw   upper Team      ; Move Table<20:16>
00010A 6EF8               M         movwf   TBLPTRU
00010C 0E??               M         movlw   high Team       ; Move Table<15:8>
00010E 6EF7               M         movwf   TBLPTRH
000110 0E??               M         movlw   low Team        ; Move Table<7:0>
000112 6EF6               M         movwf   TBLPTRL
000114 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000116 50F5               M         movf    TABLAT, W
000118                    M loop
000118 EC?? F???          M         call    WR_DATA         ; write to LCD
00011C 000B               M         tblrd+*                 ; next row in table
00011E 50F5               M         movf    TABLAT, W
000120 E1??               M         bnz     loop
                      00394         Delay50N delayR, 0x3C
  0000                    M         local   loop
000122 0E3C               M         movlw   0x3C
000124 6E28               M         movwf   delayR
                          M 
000126                    M loop
000126 EC?? F???          M         call    Delay50ms
00012A 2E28               M         decfsz  delayR
00012C EF?? F???          M         goto    loop
                      00395 
                      00396 ;*******************************************************************************
                      00397 ; standby mode
                      00398 ;*******************************************************************************
000130                00399 STANDBY
000130 EC?? F???      00400         call    ClrLCD
                      00401         Display StandBy
  0000                    M         local   loop
000134 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000136 6EF8               M         movwf   TBLPTRU
000138 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00013A 6EF7               M         movwf   TBLPTRH
00013C 0E??               M         movlw   low StandBy     ; Move Table<7:0>
00013E 6EF6               M         movwf   TBLPTRL
000140 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000142 50F5               M         movf    TABLAT, W
000144                    M loop
000144 EC?? F???          M         call    WR_DATA         ; write to LCD
000148 000B               M         tblrd+*                 ; next row in table
00014A 50F5               M         movf    TABLAT, W
00014C E1??               M         bnz     loop
                      00402 
00014E                00403 HOLD_STANDBY
00014E EC?? F???      00404         call    READ_KEY_RTC
                      00405         ;ChangeMode keyA, EXE
                      00406         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
000152 0E07               M         movlw   keyB                ; poll for mode
000154 6250               M         cpfseq  KEY                 ; check this against key press
000156 EF?? F???          M         goto    Exit
                          M 
00015A                    M Next
00015A 6A89               M         clrf    LATA                ; clear pins before proceeding
00015C 6A8A               M         clrf    LATB
00015E 6A8B               M         clrf    LATC
000160 6A8C               M         clrf    LATD
000162 EF?? F???          M         goto    LOG
                          M 
000166                    M Exit
000166 0000               M         nop
                      00407         ;ChangeMode keyC, PLOG
                      00408         ;ChangeMode keyD, PC
000168 D???           00409         bra     HOLD_STANDBY
                      00410 
                      00411 ;*******************************************************************************
                      00412 ; sorting statistics log mode
                      00413 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00016A                00414 LOG
00016A EC?? F???      00415         call    ClrLCD
                      00416         Display Log1
  0000                    M         local   loop
00016E 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000170 6EF8               M         movwf   TBLPTRU
000172 0E??               M         movlw   high Log1       ; Move Table<15:8>
000174 6EF7               M         movwf   TBLPTRH
000176 0E??               M         movlw   low Log1        ; Move Table<7:0>
000178 6EF6               M         movwf   TBLPTRL
00017A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00017C 50F5               M         movf    TABLAT, W
00017E                    M loop
00017E EC?? F???          M         call    WR_DATA         ; write to LCD
000182 000B               M         tblrd+*                 ; next row in table
000184 50F5               M         movf    TABLAT, W
000186 E1??               M         bnz     loop
                      00417 
                      00418         ; display most recent run data
000188 0E09           00419         movlw   d'9'
00018A 6E72           00420         movwf   L_EE
                      00421         READEE  OP_sec, H_EE, L_EE
00018C C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000190 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000194 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000196 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000198 80A6               M         bsf     EECON1, RD          ; read EEPROM
00019A CFA8 F010          M         movff   EEDATA, OP_sec      ; put data into file
00019E 2A72           00422         incf    L_EE
                      00423         READEE  OP_INT, H_EE, L_EE
0001A0 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0001A4 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0001A8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0001AA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0001AC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0001AE CFA8 F011          M         movff   EEDATA, OP_INT      ; put data into file
0001B2 2A72           00424         incf    L_EE
0001B4 EC?? F???      00425         call    DisplayTime
                      00426 
0001B8 EC?? F???      00427         call    LCD_L2
0001BC 6A72           00428         clrf    L_EE
0001BE EC?? F???      00429         call    DispOpRTC
                      00430 
0001C2                00431 HOLD_LOG
0001C2 EC?? F???      00432         call    READ_KEY
                      00433         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0001C6 0E07               M         movlw   keyB                ; poll for mode
0001C8 6250               M         cpfseq  KEY                 ; check this against key press
0001CA EF?? F???          M         goto    Exit
                          M 
0001CE                    M Next
0001CE 6A89               M         clrf    LATA                ; clear pins before proceeding
0001D0 6A8A               M         clrf    LATB
0001D2 6A8B               M         clrf    LATC
0001D4 6A8C               M         clrf    LATD
0001D6 EF?? F???          M         goto    LOG_INFO
                          M 
0001DA                    M Exit
0001DA 0000               M         nop
                      00434         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0001DC 0E0D               M         movlw   key0                ; poll for mode
0001DE 6250               M         cpfseq  KEY                 ; check this against key press
0001E0 EF?? F???          M         goto    Exit
                          M 
0001E4                    M Next
0001E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0001E6 6A8A               M         clrf    LATB
0001E8 6A8B               M         clrf    LATC
0001EA 6A8C               M         clrf    LATD
0001EC EF?? F???          M         goto    STANDBY
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0001F0                    M Exit
0001F0 0000               M         nop
0001F2 D???           00435         bra     HOLD_LOG
                      00436 
0001F4                00437 LOG_INFO
0001F4 EC?? F???      00438         call    ClrLCD
                      00439         Display LogInfo1
  0000                    M         local   loop
0001F8 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
0001FA 6EF8               M         movwf   TBLPTRU
0001FC 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
0001FE 6EF7               M         movwf   TBLPTRH
000200 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000202 6EF6               M         movwf   TBLPTRL
000204 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000206 50F5               M         movf    TABLAT, W
000208                    M loop
000208 EC?? F???          M         call    WR_DATA         ; write to LCD
00020C 000B               M         tblrd+*                 ; next row in table
00020E 50F5               M         movf    TABLAT, W
000210 E1??               M         bnz     loop
000212 EC?? F???      00440         call    LCD_L2
                      00441         Display LogInfo2
  0000                    M         local   loop
000216 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000218 6EF8               M         movwf   TBLPTRU
00021A 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00021C 6EF7               M         movwf   TBLPTRH
00021E 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000220 6EF6               M         movwf   TBLPTRL
000222 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000224 50F5               M         movf    TABLAT, W
000226                    M loop
000226 EC?? F???          M         call    WR_DATA         ; write to LCD
00022A 000B               M         tblrd+*                 ; next row in table
00022C 50F5               M         movf    TABLAT, W
00022E E1??               M         bnz     loop
                      00442 
000230 6A71           00443         clrf            H_EE    ; Display recent operation log
000232 6A72           00444         clrf            L_EE
                      00445         DisplayLog      H_EE, L_EE
  0000                    M             local   Again, Finish
000234 6A79               M             clrf    SkipCount
000236 6A76               M             clrf    MAX_EE
                          M 
                          M             ; Check if there is No Data first
                          M             READEE      REG_EE, H_EE,  L_EE
000238 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00023C C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000240 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000242 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000244 80A6               M         bsf     EECON1, RD          ; read EEPROM
000246 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
00024A 0EFF               M             movlw       0xFF
00024C 6273               M             cpfseq      REG_EE
00024E EF?? F???          M             goto        Again
                          M             Display     NoData
  0000                    M         local   loop
000252 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000254 6EF8               M         movwf   TBLPTRU
000256 0E??               M         movlw   high NoData     ; Move Table<15:8>
000258 6EF7               M         movwf   TBLPTRH
00025A 0E??               M         movlw   low NoData      ; Move Table<7:0>
00025C 6EF6               M         movwf   TBLPTRL
00025E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000260 50F5               M         movf    TABLAT, W
000262                    M loop
000262 EC?? F???          M         call    WR_DATA         ; write to LCD
000266 000B               M         tblrd+*                 ; next row in table
000268 50F5               M         movf    TABLAT, W
00026A E1??               M         bnz     loop
00026C EF?? F???          M             goto        Finish
000270                    M Again
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             ; Put a space every 3 Writes
000270 0E03               M             movlw       d'3'
000272 6079               M             cpfslt      SkipCount
000274 6076               M             cpfslt      MAX_EE
000276 EF?? F???          M             goto        Finish
                          M 
                          M             ; read EEPROM
                          M             READEE      REG_EE, H_EE,  L_EE
00027A C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00027E C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000282 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000284 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000286 80A6               M         bsf     EECON1, RD          ; read EEPROM
000288 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
00028C BE73               M             btfsc       REG_EE, 7       ; if bit 7 set then done
00028E EF?? F???          M             goto        Finish
000292                    M Finish
                      00446 
000292                00447 HOLD_LOG_INFO
000292 EC?? F???      00448         call    READ_KEY
                      00449         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000296 0E0D               M         movlw   key0                ; poll for mode
000298 6250               M         cpfseq  KEY                 ; check this against key press
00029A EF?? F???          M         goto    Exit
                          M 
00029E                    M Next
00029E 6A89               M         clrf    LATA                ; clear pins before proceeding
0002A0 6A8A               M         clrf    LATB
0002A2 6A8B               M         clrf    LATC
0002A4 6A8C               M         clrf    LATD
0002A6 EF?? F???          M         goto    LOG
                          M 
0002AA                    M Exit
0002AA 0000               M         nop
0002AC D???           00450         bra     HOLD_LOG
                      00451 
                      00452 ;*******************************************************************************
                      00453 ; subroutines
                      00454 ;*******************************************************************************
                      00455 
0002AE                00456 Delay5us
0002AE 0E78           00457         movlw   d'120'
0002B0 6E29           00458         movwf   d5us
                      00459 
0002B2                00460 loop5us
0002B2 2E29           00461         decfsz  d5us
0002B4 EF?? F???      00462         goto    loop5us
0002B8 0000           00463         nop
0002BA 0012           00464         return
                      00465 
0002BC                00466 Delay200us
0002BC 0EA4           00467         movlw   0xA4
0002BE 6E30           00468         movwf   d200us
                      00469 
0002C0                00470 loop200us
0002C0 2E30           00471         decfsz  d200us
0002C2 EF?? F???      00472         goto    loop200us
0002C6 0000           00473         nop
0002C8 0012           00474         return
                      00475 
0002CA                00476 Delay50ms
0002CA 0EF9           00477         movlw   0xF9
0002CC 6E31           00478         movwf   d50ms
                      00479 
0002CE                00480 loop50ms
0002CE EC?? F???      00481         call    Delay200us
0002D2 2E31           00482         decfsz  d50ms
                      00483 
0002D4                00484 Cycles
0002D4 EF?? F???      00485         goto    loop50ms
0002D8 EC?? F???      00486         call    Delay200us
0002DC 0012           00487         return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00488 
0002DE                00489 READ_KEY
0002DE                00490 HOLD_KEY
0002DE A281           00491         btfss   PORTB, 1        ; check for keypad interrupt
0002E0 EF?? F???      00492         goto    HOLD_KEY
0002E4 3881           00493         swapf   PORTB, W
0002E6 0B0F           00494         andlw   0x0F
0002E8 6E50           00495         movwf   KEY
0002EA B281           00496         btfsc   PORTB, 1
0002EC EF?? F???      00497         goto    $-2
0002F0 0012           00498         return
                      00499 
0002F2                00500 READ_KEY_RTC
0002F2                00501 HOLD_KEY_RTC
0002F2 EC?? F???      00502         call        LCD_L2      ; go to second line to print RTC
0002F6 EC?? F???      00503         call        I2C_Master_START
0002FA 0ED0           00504         movlw       b'11010000'
0002FC 0E00           00505         movlw       0x00
0002FE EC?? F???      00506         call        I2C_Master_WRITE
000302 EC?? F???      00507         call        I2C_Master_STOP
                      00508 
000306 0E01           00509         movlw       0x01        ; set ACKDT
000308 6E??           00510         movwf       I2C_ACKDT
                      00511 
00030A 0E02           00512         movlw       0x02        ; get hours
00030C EC?? F???      00513         call        I2C_Master_READ
000310 5190           00514         movf        tens_digit, W
000312 0B01           00515         andlw       b'00000001'
000314 0F30           00516         addlw       0x30
000316 EC?? F???      00517         call        WR_DATA
00031A 5191           00518         movf        ones_digit, W
00031C EC?? F???      00519         call        WR_DATA
000320 0E01           00520         movlw       0x01        ; get minutes
000322 EC?? F???      00521         call        I2C_Master_READ
                      00522         WriteRTC
000326 C090 F000          M         movff   tens_digit, W
00032A EC?? F???          M         call    WR_DATA
00032E C091 F000          M         movff   ones_digit, W
000332 EC?? F???          M         call    WR_DATA
000336 0E20           00523         movlw       " "         ; wow grate formatng very nice. thank you
000338 EC?? F???      00524         call        WR_DATA
00033C 0E05           00525         movlw       0x05        ; month
00033E EC?? F???      00526         call        I2C_Master_READ
                      00527         WriteRTC
000342 C090 F000          M         movff   tens_digit, W
000346 EC?? F???          M         call    WR_DATA
00034A C091 F000          M         movff   ones_digit, W
00034E EC?? F???          M         call    WR_DATA
000352 0E2F           00528         movlw       0x2F        ; ascii code for forward slash
000354 EC?? F???      00529         call        WR_DATA
000358 0E04           00530         movlw       0x04        ; get day
00035A EC?? F???      00531         call        I2C_Master_READ
                      00532         WriteRTC
00035E C090 F000          M         movff   tens_digit, W
000362 EC?? F???          M         call    WR_DATA
000366 C091 F000          M         movff   ones_digit, W
00036A EC?? F???          M         call    WR_DATA
00036E 0E2F           00533         movlw       0x2F        ; ascii code for forward slash
000370 EC?? F???      00534         call        WR_DATA
000374 0E00           00535         movlw       0x00        ; clear ACKDT
000376 6E??           00536         movwf       I2C_ACKDT
000378 0E06           00537         movlw    0x06           ; get year
00037A EC?? F???      00538         call        I2C_Master_READ
                      00539         WriteRTC
00037E C090 F000          M         movff   tens_digit, W
000382 EC?? F???          M         call    WR_DATA
000386 C091 F000          M         movff   ones_digit, W
00038A EC?? F???          M         call    WR_DATA
                      00540 
00038E A281           00541         btfss       PORTB, 1    ; keypad interrupt
000390 EF?? F???      00542         goto        HOLD_KEY_RTC
000394 3881           00543         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000396 0B0F           00544         andlw       0x0F        ; only want W3:0
000398 6E50           00545         movwf       KEY         ; write this value to the KEY
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00039A B281           00546         btfsc       PORTB, 1    ; wait for release
00039C EF?? F???      00547         goto        $-2         ; go back one instruction
0003A0 0012           00548         return
                      00549 
0003A2                00550 DisplayTime
                      00551         READEE  REG_EE, H_EE, L_EE
0003A2 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0003A6 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0003AA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0003AC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0003AE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0003B0 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0003B4 0EFF           00552         movlw   0xFF
0003B6 6273           00553         cpfseq  REG_EE
0003B8 EF?? F???      00554         goto    NoSkipDispOpTime
                      00555         Display NoData
  0000                    M         local   loop
0003BC 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0003BE 6EF8               M         movwf   TBLPTRU
0003C0 0E??               M         movlw   high NoData     ; Move Table<15:8>
0003C2 6EF7               M         movwf   TBLPTRH
0003C4 0E??               M         movlw   low NoData      ; Move Table<7:0>
0003C6 6EF6               M         movwf   TBLPTRL
0003C8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003CA 50F5               M         movf    TABLAT, W
0003CC                    M loop
0003CC EC?? F???          M         call    WR_DATA         ; write to LCD
0003D0 000B               M         tblrd+*                 ; next row in table
0003D2 50F5               M         movf    TABLAT, W
0003D4 E1??               M         bnz     loop
0003D6 0EFF           00556         movlw   0xFF
0003D8 6073           00557         cpfslt  REG_EE
0003DA EF?? F???      00558         goto    SkipDispOpTime
                      00559 
0003DE                00560 NoSkipDispOpTime
0003DE 3810           00561         swapf   OP_sec, W
0003E0 6E06           00562         movwf   temp
0003E2 0E0F           00563         movlw   0x0F
0003E4 1606           00564         andwf   temp
0003E6 C006 FFE8      00565         movff   temp, WREG
0003EA 0F30           00566         addlw   0x30
0003EC EC?? F???      00567         call    WR_DATA
                      00568 
0003F0 C010 F006      00569         movff   OP_sec, temp    ; 1's seconds
0003F4 0E0F           00570         movlw   0x0F
0003F6 1606           00571         andwf   temp            ; Temp = lower nibble of Op_Seconds
0003F8 C006 FFE8      00572         movff   temp, WREG      ; W = Temp
0003FC 0F30           00573         addlw   0x30            ; Convert to ASCII
0003FE EC?? F???      00574         call    WR_DATA
                      00575 
000402 0E2E           00576         movlw   0x2E            ; Write '.'
000404 EC?? F???      00577         call    WR_DATA
                      00578 
000408 0E73           00579         movlw   0x73            ; Write 's'
00040A EC?? F???      00580         call    WR_DATA
00040E EC?? F???      00581         call    LCD_L2
000412                00582 SkipDispOpTime
000412 0012           00583         return
                      00584 
000414                00585 DispOpRTC
000414 0E0B           00586         movlw   d'11'
000416 2672           00587         addwf   L_EE
                      00588 
                      00589         READEE  REG_EE, H_EE, L_EE
000418 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00041C C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000420 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000422 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000424 80A6               M         bsf     EECON1, RD          ; read EEPROM
000426 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
00042A 0EFF           00590         movlw   0xFF
00042C 6273           00591         cpfseq  REG_EE
00042E EF?? F???      00592         goto    NoSkipDispOpRTC
                      00593         Display NoData
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
000432 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000434 6EF8               M         movwf   TBLPTRU
000436 0E??               M         movlw   high NoData     ; Move Table<15:8>
000438 6EF7               M         movwf   TBLPTRH
00043A 0E??               M         movlw   low NoData      ; Move Table<7:0>
00043C 6EF6               M         movwf   TBLPTRL
00043E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000440 50F5               M         movf    TABLAT, W
000442                    M loop
000442 EC?? F???          M         call    WR_DATA         ; write to LCD
000446 000B               M         tblrd+*                 ; next row in table
000448 50F5               M         movf    TABLAT, W
00044A E1??               M         bnz     loop
00044C 0EFF           00594         movlw   0xFF
00044E 6073           00595         cpfslt  REG_EE
000450 EF?? F???      00596         goto    SkipDispOpRTC
                      00597 
000454                00598 NoSkipDispOpRTC
                      00599         READEE  REG_EE, H_EE, L_EE
000454 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000458 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
00045C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00045E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000460 80A6               M         bsf     EECON1, RD          ; read EEPROM
000462 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
000466 C073 FFE8      00600         movff   REG_EE, WREG
00046A 0BF1           00601         andlw   b'11110001'
00046C EC?? F???      00602         call    WR_DATA
000470 2A72           00603         incf    L_EE
                      00604         READEE  REG_EE, H_EE, L_EE
000472 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000476 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
00047A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00047C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00047E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000480 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
000484 C073 FFE8      00605         movff   REG_EE, WREG
000488 EC?? F???      00606         call    WR_DATA
00048C 2A72           00607         incf    L_EE
                      00608 
00048E 0E3A           00609         movlw           ":"
000490 EC?? F???      00610         call            WR_DATA
000494 EC?? F???      00611         call DispOpRTC_Helper
000498 0E20           00612         movlw           " "
00049A EC?? F???      00613         call            WR_DATA
00049E EC?? F???      00614         call DispOpRTC_Helper
0004A2 0E2F           00615         movlw           "/"
0004A4 EC?? F???      00616         call            WR_DATA
0004A8 EC?? F???      00617         call DispOpRTC_Helper
0004AC 0E2F           00618         movlw           "/"
0004AE EC?? F???      00619         call            WR_DATA
0004B2 EC?? F???      00620         call DispOpRTC_Helper
0004B6                00621 SkipDispOpRTC
0004B6 0012           00622                 return
0004B8                00623 DispOpRTC_Helper
                      00624         READEE          REG_EE, H_EE, L_EE
0004B8 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004BC C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0004C0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004C2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004C4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004C6 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0004CA C073 FFE8      00625         movff           REG_EE, WREG
0004CE EC?? F???      00626         call            WR_DATA
0004D2 2A72           00627         incf            L_EE
                      00628         READEE          REG_EE, H_EE, L_EE
0004D4 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004D8 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0004DC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004DE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004E0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004E2 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0004E6 C073 FFE8      00629         movff           REG_EE, WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  22:07:33         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004EA EC?? F???      00630         call            WR_DATA
0004EE 2A72           00631         incf            L_EE
0004F0 0012           00632         return
Warning[205]: Found directive in column 1. (end)
                      00633 end

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

