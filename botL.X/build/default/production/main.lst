MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         KEY_DETAILS
  00000012            00058         temp_KEY
  00000013            00059         KEY_ISR
  00000014            00060         temp_S  
  00000015            00061         temp_W
  00000016            00062         counter
  00000017            00063         counter2
  00000018            00064         temp
  00000019            00065         OP_sec
  0000001A            00066         OP_INT
  0000001B            00067         temp_ISR
  0000001C            00068         delayR
  0000001D            00069         d5us
  0000001E            00070         d200us
  0000001F            00071         d50ms
  00000020            00072         inExecution
  00000021            00073         clear_EE
  00000022            00074         H_EE    
  00000023            00075         L_EE    
  00000024            00076         REG_EE  
  00000025            00077         tempH_EE
  00000026            00078         tempL_EE
  00000027            00079         tempL_EEC
  00000028            00080         MAX_EE   
  00000029            00081         READ_EE
  0000002A            00082         last_log
  0000002B            00083         startHt
  0000002C            00084         startHo
  0000002D            00085         startMt
  0000002E            00086         startMo
  0000002F            00087         endHt
  00000030            00088         endHo
  00000031            00089         endMt
  00000032            00090         endMo
  00000033            00091         exe_sec
  00000034            00092         exe_int
  00000035            00093         timer_H
  00000036            00094         timer_L
  00000037            00095         convert_buffer
  00000038            00096         transferring
  00000039            00097         PC_PCL
  0000003A            00098         PC_PCLATH
  0000003B            00099         PC_PCLATU
  0000003C            00100         TIMCNT
  0000003D            00101         CPCNT
  0000003E            00102         TDATA
  0000003F            00103         DETECTION_VAL
  00000040            00104         ESKA
  00000041            00105         ESKA_NOCAP
  00000042            00106         YOP
  00000043            00107         YOP_NOCAP
  00000044            00108         TOTAL_BOTTLES
  00000045            00109         COLLECTIONS_COUNT
  00000046            00110         TRAY_COUNT
  00000047            00111         TRAY_CURRENT
  00000048            00112         TRAY_GOTO
                      00113     endc
                      00114     
  0000                00115     extern tens_digit, ones_digit
  0000                00116     extern READ_ARDUINO, INIT_RTC
                      00117     
                      00118 ;*******************************************************************************
                      00119 ; tables
                      00120 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000 6F62 4C74 0000 00121     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00122     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00123     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00124     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00125     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00126     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00127     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00128     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00129     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00130     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00131     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00132     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00133     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00134     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000096 6F43 706D 656C 00135     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000A0 6153 6976 676E 00136     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000AA 2F4E 0041      00137     NoData      db          "N/A", 0
                      00138         
                      00139 ;*******************************************************************************
                      00140 ; macros
                      00141 ;*******************************************************************************
                      00142 
                      00143 TransferTable macro table
                      00144         local loop
                      00145         
                      00146         movlw   upper table
                      00147         movwf   TBLPTRU
                      00148         movlw   high table
                      00149         movwf   TBLPTRH
                      00150         movlw   low table
                      00151         movwf   TBLPTRL
                      00152         tblrd*
                      00153         movff   TABLAT, WREG
                      00154 loop
                      00155         call    USART_WAIT
                      00156         tblrd+*
                      00157         movff   TABLAT, WREG
                      00158         bnz     loop
                      00159         endm
                      00160         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00161 ConfigLCD   macro
                      00162           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00163           call      WR_INS
                      00164 
                      00165           movlw     b'00001100'    ; display on/off
                      00166           call      WR_INS
                      00167           movlw     b'00000001'    ; Clear ram
                      00168           call      WR_INS
                      00169           endm
                      00170         
                      00171 movMSB  macro   port
                      00172         andlw   0xF0
                      00173         iorwf   port, f
                      00174         iorlw   0x0F
                      00175         andwf   port, f
                      00176         endm
                      00177 
                      00178 Delay50N macro count, N
                      00179         local   loop
                      00180         movlw   N
                      00181         movwf   count
                      00182 
                      00183 loop
                      00184         call    Delay50ms
                      00185         decfsz  count
                      00186         goto    loop
                      00187         endm
                      00188 
                      00189 Display macro   Message
                      00190         local   loop
                      00191         movlw   upper Message   ; Move Table<20:16>
                      00192         movwf   TBLPTRU
                      00193         movlw   high Message    ; Move Table<15:8>
                      00194         movwf   TBLPTRH
                      00195         movlw   low Message     ; Move Table<7:0>
                      00196         movwf   TBLPTRL
                      00197         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00198         movf    TABLAT, W
                      00199 loop
                      00200         call    WR_DATA         ; write to LCD
                      00201         tblrd+*                 ; next row in table
                      00202         movf    TABLAT, W
                      00203         bnz     loop
                      00204         endm
                      00205 
                      00206 DisplayLog  macro   addrH, addrL
                      00207             local   Again, Finish
                      00208             
                      00209             clrf    SkipCount
                      00210             clrf    MAX_EE
                      00211 
                      00212             ; Check if there is No Data first
                      00213             READEE      REG_EE, addrH, addrL
                      00214             movlw       0xFF
                      00215             cpfseq      REG_EE
                      00216             goto        Again
                      00217             Display     NoData
                      00218             goto        Finish
                      00219 Again
                      00220             ; Put a space every 3 Writes
                      00221             movlw       d'3'
                      00222             cpfslt      SkipCount
                      00223             cpfslt      MAX_EE
                      00224             goto        Finish
                      00225 
                      00226             ; read EEPROM
                      00227             READEE      REG_EE, addrH, addrL
                      00228             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00229             goto        Finish
                      00230 Finish
                      00231             endm
                      00232             
                      00233 ;TransferLog macro   addrH, addrL
                      00234         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00235 
                      00236 incf_BCD    macro   BCD
                      00237         local ones, endBCD
                      00238         movff   BCD, temp
                      00239         
                      00240         ;process ones digit
                      00241         movlw   0x0f
                      00242         andwf   temp
                      00243         movlw   d'9'
                      00244         
                      00245         ;skip if ones digit is 9
                      00246         cpfseq  temp
                      00247         goto    ones
                      00248         
                      00249         movlw   b'00010000'
                      00250         addwf   BCD
                      00251         movlw   0xf0
                      00252         andwf   BCD
                      00253         movlw   0xa0
                      00254         cpfslt  BCD
                      00255         
                      00256         clrf    BCD
                      00257         goto    endBCD
                      00258         
                      00259 ones
                      00260         incf    BCD
                      00261         goto    endBCD
                      00262 endBCD
                      00263         nop
                      00264         endm
                      00265         
                      00266 SUB16   macro   x, y        ; does not modify x nor y
                      00267         local   RESULTS
                      00268         movff   y+1, WREG   ; move high y into working register
                      00269         subwf   x+1, 0      ; do subtraction xH - yH => w
                      00270         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00271         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                      00272         
                      00273         movff   y+0, WREG
                      00274         subwf   x+0, 0  
                      00275 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00276         endm
                      00277 
                      00278 WriteRTC    macro
                      00279         movff   tens_digit, WREG
                      00280         call    WR_DATA
                      00281         movff   ones_digit, WREG
                      00282         call    WR_DATA
                      00283         endm
                      00284 
                      00285 WriteEE macro   word, addH, addL
                      00286         movff   addH, EEADRH        ; High address
                      00287         movff   addL, EEADR         ; Low address
                      00288         movff   word, EEDATA        ; set word
                      00289 
                      00290         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00291         bra     $-2
                      00292 
                      00293         bcf     EECON1, EEPGD       ; Point to data memory
                      00294         bcf     EECON1, CFGS        ; Access EEPROM
                      00295         bsf     EECON1, WREN        ; enable write
                      00296         bcf     INTCON, GIE         ; disable interrupts during write
                      00297         bcf     PIR2, EEIF
                      00298 
                      00299         movlw   0x55
                      00300         movwf   EECON2              ; write 55h
                      00301         movlw   0xaa
                      00302         movwf   EECON2              ; write 0xaa
                      00303         bsf     EECON1, WR          ; begin write
                      00304         btfsc   EECON1, WR
                      00305         bra     $-2
                      00306 
                      00307         bsf     INTCON, GIE         ; enable interrupts after write
                      00308         bcf     EECON1, WREN        ; disable writes
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309         endm
                      00310 
                      00311 READEE  macro   file, addH, addL
                      00312         movff   addH, EEADRH        ; read to high
                      00313         movff   addL, EEADR         ; read to low
                      00314         bcf     EECON1, EEPGD       ; point to data memory
                      00315         bcf     EECON1, CFGS        ; access to EEPROM
                      00316         bsf     EECON1, RD          ; read EEPROM
                      00317         movff   EEDATA, file        ; put data into file
                      00318         endm
                      00319 
                      00320 ChangeMode  macro   ModeId, NextMode
                      00321         local Next, Exit
                      00322 
                      00323         movlw   ModeId              ; poll for mode
                      00324         cpfseq  KEY                 ; check this against key press
                      00325         goto    Exit
                      00326 
                      00327 Next
                      00328         clrf    LATA                ; clear pins before proceeding
                      00329         clrf    LATB
                      00330         clrf    LATC
                      00331         clrf    LATD
                      00332         goto    NextMode
                      00333 
                      00334 Exit
                      00335         nop
                      00336         endm
                      00337 
                      00338 saveContext macro
                      00339     movff   STATUS, temp_S          ; save STATUS first
                      00340     movwf   temp_W                  ; save W
                      00341     endm
                      00342 
                      00343 restoreContext macro
                      00344     swapf   temp_W, 0               ; restore W first
                      00345     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00346     endm
                      00347 ;*******************************************************************************
                      00348 ; reset vector and isrs
                      00349 ;*******************************************************************************
                      00350         ORG     0x000               ; processor reset vector
000000 EF?? F???      00351         goto    INIT                ; go to beginning of program
                      00352 
                      00353         ORG     0x008
000008 EF?? F???      00354         goto    ISR_HIGH
                      00355 
                      00356         ORG     0x018
000018 EF?? F???      00357         goto    ISR_LOW
                      00358 
00001C                00359 ISR_HIGH
                      00360         saveContext
00001C CFD8 F014          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E15               M     movwf   temp_W                  ; save W
                      00361         
                      00362         ; displaying the execution time in seconds
Warning[202]: Argument out of range.  Least significant bits used.
000022 3819           00363         swapf   OP_sec, WREG    ; 100's seconds
000024 6E18           00364         movwf   temp
000026 0E0F           00365         movlw   0x0F
000028 1618           00366         andwf   temp
00002A C018 FFE8      00367         movff   temp, WREG
00002E 0F30           00368         addlw   0x30
000030 EC?? F???      00369         call    WR_DATA
                      00370 
000034 C019 F018      00371         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00372         movlw   0x0F
00003A 1618           00373         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C018 FFE8      00374         movff   temp, WREG      ; W = Temp
000040 0F30           00375         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00376         call    WR_DATA
                      00377         
Warning[202]: Argument out of range.  Least significant bits used.
000046 381A           00378         swapf   OP_INT, WREG    ;1's seconds
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000048 6E18           00379         movwf   temp
00004A 0E0F           00380         movlw   0x0f
00004C 1618           00381         andwf   temp
00004E C018 FFE8      00382         movff   temp, WREG
000052 0F30           00383         addlw   0x30
000054 EC?? F???      00384         call    WR_DATA
                      00385 
000058 0E73           00386         movlw   0x73            ; Write 's'
00005A EC?? F???      00387         call    WR_DATA
00005E EC?? F???      00388         call    LCD_L2
                      00389 
                      00390         ;reset timer 
000062 0EC6           00391         movlw   0xc6
000064 6ED7           00392         movwf   TMR0H
000066 0E3E           00393         movlw   0x3e
000068 6ED6           00394         movwf   TMR0L
                      00395                 
                      00396         ;timer interrupt
00006A A4F2           00397         btfss   INTCON, TMR0IF
00006C EF?? F???      00398         goto    END_ISR_HIGH
                      00399         
                      00400         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C01A F018          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1618               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6218               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 261A               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 161A               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 601A               M         cpfslt  OP_INT
                          M         
00008C 6A1A               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A1A               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00401         movlw   d'0'
00009C 621A           00402         cpfseq  OP_INT
00009E EF?? F???      00403         goto    END_ISR_HIGH
                      00404         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C019 F018          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1618               M         andwf   temp
0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6218               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2619               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1619               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6019               M         cpfslt  OP_sec
                          M         
0000BE 6A19               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
0000C4                    M ones
0000C4 2A19               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
0000CA 0000               M         nop
                      00405 
0000CC                00406 END_ISR_HIGH
0000CC 94F2           00407         bcf     INTCON, TMR0IF
                      00408         restoreContext
0000CE 3815               M     swapf   temp_W, 0               ; restore W first
0000D0 C014 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00409         retfie
                      00410 
0000D6                00411 ISR_LOW
                      00412         saveContext
0000D6 CFD8 F014          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E15               M     movwf   temp_W                  ; save W
                      00413         ; KEYPAD INTERRUPT
0000DC A0F0           00414         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00415         goto            END_ISR_LOW
                      00416 
                      00417         ;Check operation status
                      00418 ;       movlw           0xff                                    ; If in operation, skip return
                      00419 ;       cpfseq          InExecution
                      00420 ;       goto            END_ISR_LOW
                      00421 
                      00422         ; Process KEY
0000E2 3881           00423         swapf           PORTB, 0                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00424         andlw           0x0f
0000E6 6E13           00425         movwf           KEY_ISR                                 ; Put W into KEY_ISR
0000E8 0EFF           00426         movlw           0xff
0000EA 6220           00427         cpfseq          inExecution
0000EC EF?? F???      00428         goto            END_ISR_LOW
0000F0 0E0C           00429         movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
0000F2 6213           00430         cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000F4 EF?? F???      00431         goto            END_ISR_LOW
0000F8 EF?? F???      00432         goto    EXIT_EXE
                      00433         ; Reset program counter
0000FC 6AFF           00434         clrf            TOSU
0000FE 6AFE           00435         clrf            TOSH
000100 6AFD           00436         clrf            TOSL
                      00437 
000102                00438 END_ISR_LOW
000102 90F0           00439         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00440         restoreContext
000104 3815               M     swapf   temp_W, 0               ; restore W first
000106 C014 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00010A 0010           00441         retfie
                      00442 
                      00443 ;*******************************************************************************
                      00444 ; main
                      00445 ;*******************************************************************************
00010C                00446 INIT
                      00447         ; i/o
00010C 0E00           00448         movlw   b'00000000'
00010E 6E92           00449         movwf   TRISA
000110 0EFF           00450         movlw   b'11111111'
000112 6E93           00451         movwf   TRISB               ; keypad
000114 0E00           00452         movlw   b'00000000'
000116 6E94           00453         movwf   TRISC
000118 0E00           00454         movlw   b'00000000'
00011A 6E95           00455         movwf   TRISD
00011C 0E07           00456         movlw   b'00000111'
00011E 6E96           00457         movwf   TRISE
                      00458 
                      00459         ; clear ports
000120 0E00           00460         movlw   b'00000000'
000122 6E89           00461         movwf   LATA
000124 0E00           00462         movlw   b'00000000'
000126 6E8A           00463         movwf   LATB
000128 0E00           00464         movlw   b'00000000'
00012A 6E8B           00465         movwf   LATC
00012C 0E00           00466         movlw   b'00000000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00012E 6E8C           00467         movwf   LATD
000130 0E00           00468         movlw   b'00000000'
000132 6E8D           00469         movwf   LATE
                      00470         
000134 0E00           00471         movlw   b'00000000'
000136 6EC2           00472         movwf   ADCON0
000138 0EFF           00473         movlw   b'11111111'
00013A 6EC1           00474         movwf   ADCON1
                      00475         
                      00476         ; initializations
00013C EC?? F???      00477         call    InitLCD
                      00478         ConfigLCD
000140 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000142 EC?? F???          M           call      WR_INS
                          M 
000146 0E0C               M           movlw     b'00001100'    ; display on/off
000148 EC?? F???          M           call      WR_INS
00014C 0E01               M           movlw     b'00000001'    ; Clear ram
00014E EC?? F???          M           call      WR_INS
                      00479         
000152 EC?? F???      00480         call    i2c_common_setup
                      00481         
000156 EC?? F???      00482         call    RTC_INIT
00015A EC?? F???      00483         call    ARDUINO_INIT
                      00484         ;COLOUR_INIT
00015E EC?? F???      00485         call    INIT_USART
                      00486 
                      00487         ; interrupts
000162 6AD0           00488         clrf    RCON
000164 6AF2           00489         clrf    INTCON
000166 6AF1           00490         clrf    INTCON2
000168 6AF0           00491         clrf    INTCON3
00016A 8ED0           00492         bsf     RCON, IPEN          ; priority mode
00016C 8EF2           00493         bsf     INTCON, GIEH        ; permit global interrupts
00016E 8CF2           00494         bsf     INTCON, GIEL
000170 8AF1           00495         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000172 8AF2           00496         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000174 84F2           00497         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000176 84F1           00498         bsf     INTCON2, TMR0IP     ; set to high priority
000178 86F0           00499         bsf     INTCON3, INT1IE
00017A 9CF0           00500         bcf     INTCON3, INT1IP
                      00501         
                      00502         ; setting up timer to sychronize with 1 second clock intervals
00017C 9ED5           00503         bcf     T0CON, TMR0ON
00017E 9CD5           00504         bcf     T0CON, T08BIT
000180 9AD5           00505         bcf     T0CON, T0CS
000182 98D5           00506         bcf     T0CON, T0SE
000184 96D5           00507         bcf     T0CON, PSA
000186 94D5           00508         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
000188 82D5           00509         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
00018A 80D5           00510         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00511 
00018C 6A22           00512         clrf    H_EE
00018E 6A23           00513         clrf    L_EE
000190 6A??           00514         clrf    tens_digit
000192 6A??           00515         clrf    ones_digit
                      00516         
000194 6A3F           00517         clrf    DETECTION_VAL
000196 6A40           00518         clrf    ESKA
000198 6A41           00519         clrf    ESKA_NOCAP
00019A 6A42           00520         clrf    YOP
00019C 6A43           00521         clrf    YOP_NOCAP
00019E 6A44           00522         clrf    TOTAL_BOTTLES
0001A0 6A45           00523         clrf    COLLECTIONS_COUNT
                      00524         
0001A2 0EF2           00525         movlw     b'11110010'    ; Set required keypad inputs
0001A4 6E93           00526         movwf     TRISB
                      00527         
0001A6 EC?? F???      00528         call    ClrLCD
                      00529         Display Welcome
  0000                    M         local   loop
0001AA 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001AC 6EF8               M         movwf   TBLPTRU
0001AE 0E??               M         movlw   high Welcome    ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001B0 6EF7               M         movwf   TBLPTRH
0001B2 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001B4 6EF6               M         movwf   TBLPTRL
0001B6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001B8 50F5               M         movf    TABLAT, W
0001BA                    M loop
0001BA EC?? F???          M         call    WR_DATA         ; write to LCD
0001BE 000B               M         tblrd+*                 ; next row in table
0001C0 50F5               M         movf    TABLAT, W
0001C2 E1??               M         bnz     loop
0001C4 EC?? F???      00530         call LCD_L2
                      00531         Display Team
  0000                    M         local   loop
0001C8 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001CA 6EF8               M         movwf   TBLPTRU
0001CC 0E??               M         movlw   high Team       ; Move Table<15:8>
0001CE 6EF7               M         movwf   TBLPTRH
0001D0 0E??               M         movlw   low Team        ; Move Table<7:0>
0001D2 6EF6               M         movwf   TBLPTRL
0001D4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D6 50F5               M         movf    TABLAT, W
0001D8                    M loop
0001D8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001DC 000B               M         tblrd+*                 ; next row in table
0001DE 50F5               M         movf    TABLAT, W
0001E0 E1??               M         bnz     loop
                      00532         
                      00533         Delay50N delayR, 0x28
  0000                    M         local   loop
0001E2 0E28               M         movlw   0x28
0001E4 6E1C               M         movwf   delayR
                          M 
0001E6                    M loop
0001E6 EC?? F???          M         call    Delay50ms
0001EA 2E1C               M         decfsz  delayR
0001EC EF?? F???          M         goto    loop
                      00534 
                      00535 ;*******************************************************************************
                      00536 ; standby mode
                      00537 ;*******************************************************************************
0001F0                00538 STANDBY
0001F0 EC?? F???      00539         call    ClrLCD
                      00540         Display StandBy
  0000                    M         local   loop
0001F4 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F6 6EF8               M         movwf   TBLPTRU
0001F8 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001FA 6EF7               M         movwf   TBLPTRH
0001FC 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FE 6EF6               M         movwf   TBLPTRL
000200 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000202 50F5               M         movf    TABLAT, W
000204                    M loop
000204 EC?? F???          M         call    WR_DATA         ; write to LCD
000208 000B               M         tblrd+*                 ; next row in table
00020A 50F5               M         movf    TABLAT, W
00020C E1??               M         bnz     loop
                      00541 
00020E                00542 HOLD_STANDBY
00020E EC?? F???      00543         call    READ_KEY_TIME
                      00544         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000212 0E00               M         movlw   key1                ; poll for mode
000214 6210               M         cpfseq  KEY                 ; check this against key press
000216 EF?? F???          M         goto    Exit
                          M 
00021A                    M Next
00021A 6A89               M         clrf    LATA                ; clear pins before proceeding
00021C 6A8A               M         clrf    LATB
00021E 6A8B               M         clrf    LATC
000220 6A8C               M         clrf    LATD
000222 EF?? F???          M         goto    COLOUR_TEST
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000226                    M Exit
000226 0000               M         nop
                      00545         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000228 0E01               M         movlw   key2                ; poll for mode
00022A 6210               M         cpfseq  KEY                 ; check this against key press
00022C EF?? F???          M         goto    Exit
                          M 
000230                    M Next
000230 6A89               M         clrf    LATA                ; clear pins before proceeding
000232 6A8A               M         clrf    LATB
000234 6A8B               M         clrf    LATC
000236 6A8C               M         clrf    LATD
000238 EF?? F???          M         goto    STEP_TEST
                          M 
00023C                    M Exit
00023C 0000               M         nop
                      00546         ChangeMode  key3, IR_TEST
  0000                    M         local Next, Exit
                          M 
00023E 0E02               M         movlw   key3                ; poll for mode
000240 6210               M         cpfseq  KEY                 ; check this against key press
000242 EF?? F???          M         goto    Exit
                          M 
000246                    M Next
000246 6A89               M         clrf    LATA                ; clear pins before proceeding
000248 6A8A               M         clrf    LATB
00024A 6A8B               M         clrf    LATC
00024C 6A8C               M         clrf    LATD
00024E EF?? F???          M         goto    IR_TEST
                          M 
000252                    M Exit
000252 0000               M         nop
                      00547         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000254 0E03               M         movlw   keyA                ; poll for mode
000256 6210               M         cpfseq  KEY                 ; check this against key press
000258 EF?? F???          M         goto    Exit
                          M 
00025C                    M Next
00025C 6A89               M         clrf    LATA                ; clear pins before proceeding
00025E 6A8A               M         clrf    LATB
000260 6A8B               M         clrf    LATC
000262 6A8C               M         clrf    LATD
000264 EF?? F???          M         goto    EXECUTION
                          M 
000268                    M Exit
000268 0000               M         nop
                      00548         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
00026A 0E07               M         movlw   keyB                ; poll for mode
00026C 6210               M         cpfseq  KEY                 ; check this against key press
00026E EF?? F???          M         goto    Exit
                          M 
000272                    M Next
000272 6A89               M         clrf    LATA                ; clear pins before proceeding
000274 6A8A               M         clrf    LATB
000276 6A8B               M         clrf    LATC
000278 6A8C               M         clrf    LATD
00027A EF?? F???          M         goto    LOG
                          M 
00027E                    M Exit
00027E 0000               M         nop
                      00549         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000280 0E0B               M         movlw   keyC                ; poll for mode
000282 6210               M         cpfseq  KEY                 ; check this against key press
000284 EF?? F???          M         goto    Exit
                          M 
000288                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000288 6A89               M         clrf    LATA                ; clear pins before proceeding
00028A 6A8A               M         clrf    LATB
00028C 6A8B               M         clrf    LATC
00028E 6A8C               M         clrf    LATD
000290 EF?? F???          M         goto    PERM_LOG
                          M 
000294                    M Exit
000294 0000               M         nop
                      00550         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000296 0E0F               M         movlw   keyD                ; poll for mode
000298 6210               M         cpfseq  KEY                 ; check this against key press
00029A EF?? F???          M         goto    Exit
                          M 
00029E                    M Next
00029E 6A89               M         clrf    LATA                ; clear pins before proceeding
0002A0 6A8A               M         clrf    LATB
0002A2 6A8B               M         clrf    LATC
0002A4 6A8C               M         clrf    LATD
0002A6 EF?? F???          M         goto    PC_MODE
                          M 
0002AA                    M Exit
0002AA 0000               M         nop
0002AC D???           00551         bra     HOLD_STANDBY
                      00552         
                      00553 ;*******************************************************************************
                      00554 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00555 ;*******************************************************************************
0002AE                00556 IR_TEST
0002AE 0E63           00557         movlw   'c'
0002B0 B084           00558         btfsc   PORTE, 0
0002B2 0E6E           00559         movlw   'n'
0002B4 EC?? F???      00560         call    WR_DATA
                      00561         Delay50N delayR, 0x14
  0000                    M         local   loop
0002B8 0E14               M         movlw   0x14
0002BA 6E1C               M         movwf   delayR
                          M 
0002BC                    M loop
0002BC EC?? F???          M         call    Delay50ms
0002C0 2E1C               M         decfsz  delayR
0002C2 EF?? F???          M         goto    loop
0002C6 EC?? F???      00562         call    ClrLCD
                      00563         Delay50N delayR, 0x14
  0000                    M         local   loop
0002CA 0E14               M         movlw   0x14
0002CC 6E1C               M         movwf   delayR
                          M 
0002CE                    M loop
0002CE EC?? F???          M         call    Delay50ms
0002D2 2E1C               M         decfsz  delayR
0002D4 EF?? F???          M         goto    loop
Warning[203]: Found opcode in column 1. (bra)
0002D8 D???           00564 bra IR_TEST
                      00565         
0002DA                00566 STEP_TEST
0002DA 0E23           00567         movlw   b'00100011'
0002DC 6E80           00568         movwf   PORTA
0002DE EC?? F???      00569         call    delay5ms
                      00570         
0002E2 0E26           00571         movlw   b'00100110'
0002E4 6E80           00572         movwf   PORTA
0002E6 EC?? F???      00573         call    delay5ms
                      00574         
0002EA 0E2C           00575         movlw   b'00101100'
0002EC 6E80           00576         movwf   PORTA
0002EE EC?? F???      00577         call    delay5ms
                      00578 
0002F2 0E29           00579         movlw   b'00101001'
0002F4 6E80           00580         movwf   PORTA
0002F6 EC?? F???      00581         call    delay5ms
                      00582 
0002FA D???           00583         bra STEP_TEST
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00584         
0002FC                00585 COLOUR_TEST
                      00586 
0002FC                00587 LOOPING
                      00588         Delay50N delayR, 0x28
  0000                    M         local   loop
0002FC 0E28               M         movlw   0x28
0002FE 6E1C               M         movwf   delayR
                          M 
000300                    M loop
000300 EC?? F???          M         call    Delay50ms
000304 2E1C               M         decfsz  delayR
000306 EF?? F???          M         goto    loop
00030A EC?? F???      00589         call    ClrLCD
00030E EC?? F???      00590         call    READ_ARDUINO
                      00591         ;addlw  0x30
000312 EC?? F???      00592         call    WR_DATA
000316 D???           00593         bra LOOPING
                      00594 
                      00595 ;*******************************************************************************
                      00596 ; execution mode
                      00597 ;*******************************************************************************
                      00598         
000318                00599 EXECUTION
000318 EC?? F???      00600         call        ClearEEPROM_21
                      00601         ; save the starting time
00031C EC?? F???      00602         call        SAVE_TIME
                      00603                 
                      00604         ; display
000320 6820           00605         setf        inExecution
000322 EC?? F???      00606         call        ClrLCD
                      00607         Display     Exe1
  0000                    M         local   loop
000326 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000328 6EF8               M         movwf   TBLPTRU
00032A 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00032C 6EF7               M         movwf   TBLPTRH
00032E 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000330 6EF6               M         movwf   TBLPTRL
000332 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000334 50F5               M         movf    TABLAT, W
000336                    M loop
000336 EC?? F???          M         call    WR_DATA         ; write to LCD
00033A 000B               M         tblrd+*                 ; next row in table
00033C 50F5               M         movf    TABLAT, W
00033E E1??               M         bnz     loop
000340 EC?? F???      00608         call        LCD_L2
000344 0EC5           00609         movlw       0xc5                    ; setting up timer
000346 6ED7           00610         movwf       TMR0H
000348 0E44           00611         movlw       0x44    
00034A 6ED6           00612         movwf       TMR0L
                      00613         
00034C 8ED5           00614         bsf         T0CON, TMR0ON           ; turning on timer
                      00615         ; initialize variables
00034E 6A19           00616         clrf        OP_sec
000350 6A1A           00617         clrf        OP_INT
                      00618         
000352 6A40           00619         clrf        ESKA
000354 6A41           00620         clrf        ESKA_NOCAP
000356 6A42           00621         clrf        YOP
000358 6A43           00622         clrf        YOP_NOCAP
00035A 6A44           00623         clrf        TOTAL_BOTTLES
00035C 0E01           00624         movlw       d'1'
00035E 6E47           00625         movwf       TRAY_CURRENT
                      00626         
                      00627         ; todo: make sure tray is in position one on reset, add some delay
                      00628         
000360                00629 COLLECTIONS_STEP
000360 6A45           00630         clrf    COLLECTIONS_COUNT
000362                00631 ROTATE_90
000362 0E03           00632         movlw   b'00000011'
000364 6E80           00633         movwf   PORTA
                      00634         
000366 0E06           00635         movlw   b'00000110'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000368 6E80           00636         movwf   PORTA
                      00637         
00036A 0E0C           00638         movlw   b'00001100'
00036C 6E80           00639         movwf   PORTA
                      00640 
00036E 0E09           00641         movlw   b'00001001'
000370 6E80           00642         movwf   PORTA
                      00643         
000372 2A45           00644         incf    COLLECTIONS_COUNT
000374 0E0F           00645         movlw   d'15'
000376 6245           00646         cpfseq  COLLECTIONS_COUNT
000378 D???           00647         bra     ROTATE_90
                      00648         
00037A D???           00649         bra     DETECTIONS
                      00650         
00037C                00651 DETECTIONS
                      00652         ; first up, lets give the 0.5 seconds to process its data
                      00653         Delay50N delayR, 0x0a
  0000                    M         local   loop
00037C 0E0A               M         movlw   0x0a
00037E 6E1C               M         movwf   delayR
                          M 
000380                    M loop
000380 EC?? F???          M         call    Delay50ms
000384 2E1C               M         decfsz  delayR
000386 EF?? F???          M         goto    loop
                      00654         
                      00655         ; reading data from arduino - expect: 1 for eska cap, 2 for eska no cap
                      00656         ;                                     3 for yop cap, 4 for yop no cap
                      00657         ;                                     5 for no bottle, get outta here
                      00658         ;call   READ_ARDUINO
00038A 0E03           00659         movlw   d'3'                    ; testing!!!
00038C 6E3F           00660         movwf   DETECTION_VAL
                      00661         
                      00662         ; now for handling the comparisions
00038E 0E05           00663         movlw   d'5'
000390 603F           00664         cpfslt  DETECTION_VAL           ; If DETECTION_VAL = 5, make another collections step
000392 EF?? F???      00665         goto    COLLECTIONS_STEP
                      00666         
                      00667         ; okay we have a bottle, increment toal and see what it is
000396 2A44           00668         incf    TOTAL_BOTTLES
                      00669 
000398 0E04           00670         movlw   d'4'
00039A 5C3F           00671         subwf   DETECTION_VAL, 0
00039C E0??           00672         bz      INC_YOPNOCAP
                      00673         
00039E 0E03           00674         movlw   d'3'
0003A0 5C3F           00675         subwf   DETECTION_VAL, 0
0003A2 E0??           00676         bz      INC_YOPCAP
                      00677         
0003A4 0E02           00678         movlw   d'2'
0003A6 5C3F           00679         subwf   DETECTION_VAL, 0
0003A8 E0??           00680         bz      INC_ESKANOCAP
                      00681         
0003AA 0E01           00682         movlw   d'1'
0003AC 5C3F           00683         subwf   DETECTION_VAL, 0
0003AE E0??           00684         bz      INC_ESKACAP
                      00685         
                      00686         ;make some kind of fail safe here.
                      00687         
0003B0                00688 INC_YOPNOCAP
0003B0 2A43           00689         incf    YOP_NOCAP
0003B2 EF?? F???      00690         goto    TRAY_STEP_END
                      00691 
                      00692         ; determine what position to rotate the tray to: brute force, but w/e
0003B6 0E04           00693         movlw   d'4'
0003B8 6E48           00694         movwf   TRAY_GOTO
0003BA 5C47           00695         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0003BC E0??           00696         bz      TRAY_STEP_END
                      00697         
0003BE 0E03           00698         movlw   d'3'
0003C0 5C47           00699         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
                      00700         ;bz     ONE_CW  
                      00701         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003C2 0E02           00702         movlw   d'2'
0003C4 5C47           00703         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
                      00704         ;bz     TWO_CW
                      00705         
0003C6 0E01           00706         movlw   d'1'
0003C8 5C47           00707         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
                      00708         ;bz     THREE_CW
                      00709         
0003CA                00710 INC_YOPCAP
0003CA 2A42           00711         incf    YOP
0003CC EF?? F???      00712         goto    TRAY_STEP_END
                      00713         
                      00714         ; determine what position to rotate the tray to: brute force, but w/e
0003D0 0E03           00715         movlw   d'3'
0003D2 6E48           00716         movwf   TRAY_GOTO
0003D4 5C47           00717         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
                      00718         ;bz     TRAY_STEP_END
                      00719         
0003D6 0E04           00720         movlw   d'4'
0003D8 5C47           00721         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
                      00722         ;bz     ONE_CCW 
                      00723         
0003DA 0E02           00724         movlw   d'2'
0003DC 5C47           00725         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
                      00726         ;bz     ONE_CW
                      00727         
0003DE 0E01           00728         movlw   d'1'
0003E0 5C47           00729         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
                      00730         ;bz     TWO_CW
                      00731         
0003E2                00732 INC_ESKANOCAP
0003E2 2A41           00733         incf    ESKA_NOCAP
0003E4 EF?? F???      00734         goto    TRAY_STEP_END
                      00735         
                      00736         ; determine what position to rotate the tray to: brute force, but w/e
0003E8 0E02           00737         movlw   d'2'
0003EA 6E48           00738         movwf   TRAY_GOTO
0003EC 5C47           00739         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
                      00740         ;bz     TRAY_STEP_END
                      00741         
0003EE 0E04           00742         movlw   d'4'
0003F0 5C47           00743         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
                      00744         ;bz     TWO_CCW 
                      00745         
0003F2 0E03           00746         movlw   d'3'
0003F4 5C47           00747         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
                      00748         ;bz     ONE_CCW
                      00749         
0003F6 0E01           00750         movlw   d'1'
0003F8 5C47           00751         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
                      00752         ;bz     ONE_CW
                      00753         
0003FA                00754 INC_ESKACAP
0003FA 2A40           00755         incf    ESKA
0003FC EF?? F???      00756         goto    TRAY_STEP_END
                      00757         
                      00758         ; determine what position to rotate the tray to: brute force, but w/e
000400 0E01           00759         movlw   d'1'
000402 6E48           00760         movwf   TRAY_GOTO
000404 5C47           00761         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
                      00762         ;bz     TRAY_STEP_END
                      00763         
000406 0E04           00764         movlw   d'4'
000408 5C47           00765         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
                      00766         ;bz     THREE_CCW       
                      00767         
00040A 0E03           00768         movlw   d'3'
00040C 5C47           00769         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
                      00770         ;bz     TWO_CCW
                      00771         
00040E 0E01           00772         movlw   d'1'
000410 5C47           00773         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
                      00774         ;bz     ONE_CCW
                      00775 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000412                00776 TRAY_STEP
                      00777 
000412                00778 TRAY_STEP_END
                      00779         
000412                00780 CHECK_DONE
000412 0E09           00781         movlw   d'9'
000414 6244           00782         cpfseq  TOTAL_BOTTLES
000416 EF?? F???      00783         goto    COLLECTIONS_STEP
                      00784         
00041A D???           00785         bra     EXIT_EXE        
                      00786 
00041C                00787 HOLD_EXE
00041C EC?? F???      00788         call        READ_KEY
                      00789         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000420 0E0C               M         movlw   keyS                ; poll for mode
000422 6210               M         cpfseq  KEY                 ; check this against key press
000424 EF?? F???          M         goto    Exit
                          M 
000428                    M Next
000428 6A89               M         clrf    LATA                ; clear pins before proceeding
00042A 6A8A               M         clrf    LATB
00042C 6A8B               M         clrf    LATC
00042E 6A8C               M         clrf    LATD
000430 EF?? F???          M         goto    EXIT_EXE
                          M 
000434                    M Exit
000434 0000               M         nop
000436 D???           00790         bra         HOLD_EXE
                      00791         
000438                00792 EXIT_EXE
                      00793         ; stop timer and save the execution time to eeprom
000438 9ED5           00794         bcf         T0CON, TMR0ON
00043A EC?? F???      00795         call        SAVE_EXE_TIME
                      00796                 
                      00797         ; Clear inExecution flag to stop '*' interrupts
00043E 6A20           00798         clrf        inExecution
                      00799         
000440 C040 FFE8      00800         movff       ESKA, WREG
000444 0F30           00801         addlw       0x30
                      00802         WriteEE     WREG, H_EE, L_EE
000446 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
00044A C023 FFA9          M         movff   L_EE, EEADR         ; Low address
00044E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000452 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000454 D???               M         bra     $-2
                          M 
000456 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000458 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00045A 84A6               M         bsf     EECON1, WREN        ; enable write
00045C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00045E 98A1               M         bcf     PIR2, EEIF
                          M 
000460 0E55               M         movlw   0x55
000462 6EA7               M         movwf   EECON2              ; write 55h
000464 0EAA               M         movlw   0xaa
000466 6EA7               M         movwf   EECON2              ; write 0xaa
000468 82A6               M         bsf     EECON1, WR          ; begin write
00046A B2A6               M         btfsc   EECON1, WR
00046C D???               M         bra     $-2
                          M 
00046E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000470 94A6               M         bcf     EECON1, WREN        ; disable writes
000472 2A23           00803         incf        L_EE
                      00804         
000474 C041 FFE8      00805         movff       ESKA_NOCAP, WREG
000478 0F30           00806         addlw       0x30
                      00807         WriteEE     WREG, H_EE, L_EE
00047A C022 FFAA          M         movff   H_EE, EEADRH        ; High address
00047E C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000482 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000486 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000488 D???               M         bra     $-2
                          M 
00048A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00048C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00048E 84A6               M         bsf     EECON1, WREN        ; enable write
000490 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000492 98A1               M         bcf     PIR2, EEIF
                          M 
000494 0E55               M         movlw   0x55
000496 6EA7               M         movwf   EECON2              ; write 55h
000498 0EAA               M         movlw   0xaa
00049A 6EA7               M         movwf   EECON2              ; write 0xaa
00049C 82A6               M         bsf     EECON1, WR          ; begin write
00049E B2A6               M         btfsc   EECON1, WR
0004A0 D???               M         bra     $-2
                          M 
0004A2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004A4 94A6               M         bcf     EECON1, WREN        ; disable writes
0004A6 2A23           00808         incf        L_EE
                      00809         
0004A8 C042 FFE8      00810         movff       YOP, WREG
0004AC 0F30           00811         addlw       0x30
                      00812         WriteEE     WREG, H_EE, L_EE
0004AE C022 FFAA          M         movff   H_EE, EEADRH        ; High address
0004B2 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
0004B6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004BA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004BC D???               M         bra     $-2
                          M 
0004BE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004C0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004C2 84A6               M         bsf     EECON1, WREN        ; enable write
0004C4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004C6 98A1               M         bcf     PIR2, EEIF
                          M 
0004C8 0E55               M         movlw   0x55
0004CA 6EA7               M         movwf   EECON2              ; write 55h
0004CC 0EAA               M         movlw   0xaa
0004CE 6EA7               M         movwf   EECON2              ; write 0xaa
0004D0 82A6               M         bsf     EECON1, WR          ; begin write
0004D2 B2A6               M         btfsc   EECON1, WR
0004D4 D???               M         bra     $-2
                          M 
0004D6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004D8 94A6               M         bcf     EECON1, WREN        ; disable writes
0004DA 2A23           00813         incf        L_EE
                      00814         
0004DC C043 FFE8      00815         movff       YOP_NOCAP, WREG
0004E0 0F30           00816         addlw       0x30
                      00817         WriteEE     WREG, H_EE, L_EE
0004E2 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
0004E6 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
0004EA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004EE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004F0 D???               M         bra     $-2
                          M 
0004F2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004F4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004F6 84A6               M         bsf     EECON1, WREN        ; enable write
0004F8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004FA 98A1               M         bcf     PIR2, EEIF
                          M 
0004FC 0E55               M         movlw   0x55
0004FE 6EA7               M         movwf   EECON2              ; write 55h
000500 0EAA               M         movlw   0xaa
000502 6EA7               M         movwf   EECON2              ; write 0xaa
000504 82A6               M         bsf     EECON1, WR          ; begin write
000506 B2A6               M         btfsc   EECON1, WR
000508 D???               M         bra     $-2
                          M 
00050A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00050C 94A6               M         bcf     EECON1, WREN        ; disable writes
00050E 2A23           00818         incf        L_EE
                      00819         
000510 EF?? F???      00820         goto        SaveData
                      00821 
000514                00822 SaveData
000514 EC?? F???      00823         call        ClrLCD
                      00824         Display     SAVE
  0000                    M         local   loop
000518 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
00051A 6EF8               M         movwf   TBLPTRU
00051C 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00051E 6EF7               M         movwf   TBLPTRH
000520 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000522 6EF6               M         movwf   TBLPTRL
000524 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000526 50F5               M         movf    TABLAT, W
000528                    M loop
000528 EC?? F???          M         call    WR_DATA         ; write to LCD
00052C 000B               M         tblrd+*                 ; next row in table
00052E 50F5               M         movf    TABLAT, W
000530 E1??               M         bnz     loop
                      00825 
000532 0E00           00826         movlw       d'0'
000534 6E22           00827         movwf       H_EE
000536 0EA8           00828         movlw       d'168'              ; take d'168' as last
000538 6E23           00829         movwf       L_EE
00053A 0E00           00830         movlw       d'0'
00053C 6E25           00831         movwf       tempH_EE
00053E 0EDC           00832         movlw       d'220'              ; temp for low constant
000540 6E26           00833         movwf       tempL_EE
                      00834         
000542 6A17           00835         clrf        counter2
000544 6A16           00836         clrf        counter
                      00837         
000546                00838 ShiftLoop
000546 2A16           00839         incf            counter
                      00840         READEE          REG_EE, H_EE, L_EE
000548 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
00054C C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000550 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000552 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000554 80A6               M         bsf     EECON1, RD          ; read EEPROM
000556 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
00055A 0E15           00841         movlw           d'21'
00055C 2623           00842         addwf           L_EE
                      00843         WriteEE         REG_EE, H_EE, L_EE
00055E C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000562 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000566 C024 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
00056A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00056C D???               M         bra     $-2
                          M 
00056E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000570 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000572 84A6               M         bsf     EECON1, WREN        ; enable write
000574 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000576 98A1               M         bcf     PIR2, EEIF
                          M 
000578 0E55               M         movlw   0x55
00057A 6EA7               M         movwf   EECON2              ; write 55h
00057C 0EAA               M         movlw   0xaa
00057E 6EA7               M         movwf   EECON2              ; write 0xaa
000580 82A6               M         bsf     EECON1, WR          ; begin write
000582 B2A6               M         btfsc   EECON1, WR
000584 D???               M         bra     $-2
                          M 
000586 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000588 94A6               M         bcf     EECON1, WREN        ; disable writes
00058A 0E14           00844         movlw           d'20'
00058C 5E23           00845         subwf           L_EE
00058E 0E15           00846         movlw           d'21'
000590 6216           00847         cpfseq          counter
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000592 EF?? F???      00848         goto            ShiftLoop
                      00849         
                      00850         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000596 0E2A           00851         movlw           d'42'
000598 5E23           00852         subwf           L_EE
00059A 0EDC           00853         movlw           d'220'
00059C 6E26           00854         movwf           tempL_EE
00059E 6A16           00855         clrf            counter
0005A0 2A17           00856         incf            counter2
0005A2 0E09           00857         movlw           d'9'
0005A4 6217           00858         cpfseq          counter2        ; Skip if 9 shifts were made
0005A6 EF?? F???      00859         goto            ShiftLoop
                      00860 
0005AA EF?? F???      00861         goto            LOG
                      00862 
                      00863 ;*******************************************************************************
                      00864 ; sorting statistics log mode
                      00865 ;*******************************************************************************
                      00866         
0005AE                00867 LOG
0005AE EC?? F???      00868         call    ClrLCD
                      00869         Display Log1
  0000                    M         local   loop
0005B2 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0005B4 6EF8               M         movwf   TBLPTRU
0005B6 0E??               M         movlw   high Log1       ; Move Table<15:8>
0005B8 6EF7               M         movwf   TBLPTRH
0005BA 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005BC 6EF6               M         movwf   TBLPTRL
0005BE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005C0 50F5               M         movf    TABLAT, W
0005C2                    M loop
0005C2 EC?? F???          M         call    WR_DATA         ; write to LCD
0005C6 000B               M         tblrd+*                 ; next row in table
0005C8 50F5               M         movf    TABLAT, W
0005CA E1??               M         bnz     loop
                      00870 
                      00871         ; display most recent run data
0005CC 0E0A           00872         movlw   d'10'
0005CE 6E23           00873         movwf   L_EE
0005D0 EC?? F???      00874         call    DisplayExeTime
                      00875 
0005D4 EC?? F???      00876         call    LCD_L2
0005D8 0E0D           00877         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
0005DA 6E23           00878         movwf   L_EE
0005DC EC?? F???      00879         call    DispOpSort
                      00880 
0005E0                00881 HOLD_LOG
0005E0 EC?? F???      00882         call    READ_KEY
                      00883         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0005E4 0E07               M         movlw   keyB                ; poll for mode
0005E6 6210               M         cpfseq  KEY                 ; check this against key press
0005E8 EF?? F???          M         goto    Exit
                          M 
0005EC                    M Next
0005EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0005EE 6A8A               M         clrf    LATB
0005F0 6A8B               M         clrf    LATC
0005F2 6A8C               M         clrf    LATD
0005F4 EF?? F???          M         goto    LOG_INFO
                          M 
0005F8                    M Exit
0005F8 0000               M         nop
                      00884         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005FA 0E0D               M         movlw   key0                ; poll for mode
0005FC 6210               M         cpfseq  KEY                 ; check this against key press
0005FE EF?? F???          M         goto    Exit
                          M 
000602                    M Next
000602 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000604 6A8A               M         clrf    LATB
000606 6A8B               M         clrf    LATC
000608 6A8C               M         clrf    LATD
00060A EF?? F???          M         goto    STANDBY
                          M 
00060E                    M Exit
00060E 0000               M         nop
000610 D???           00885         bra     HOLD_LOG
                      00886 
000612                00887 LOG_INFO
000612 EC?? F???      00888         call    ClrLCD
000616 6A23           00889         clrf    L_EE
000618 EC?? F???      00890         call    DispOpRTC
                      00891         
00061C EC?? F???      00892         call    LCD_L2
                      00893         Display LogInfo2
  0000                    M         local   loop
000620 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000622 6EF8               M         movwf   TBLPTRU
000624 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000626 6EF7               M         movwf   TBLPTRH
000628 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
00062A 6EF6               M         movwf   TBLPTRL
00062C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00062E 50F5               M         movf    TABLAT, W
000630                    M loop
000630 EC?? F???          M         call    WR_DATA         ; write to LCD
000634 000B               M         tblrd+*                 ; next row in table
000636 50F5               M         movf    TABLAT, W
000638 E1??               M         bnz     loop
00063A 6A22           00894         clrf    H_EE
00063C 6A23           00895         clrf    L_EE
                      00896         ;DisplayLog  H_EE, L_EE
00063E                00897 HOLD_LOG_INFO
00063E EC?? F???      00898         call    READ_KEY
                      00899         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000642 0E0D               M         movlw   key0                ; poll for mode
000644 6210               M         cpfseq  KEY                 ; check this against key press
000646 EF?? F???          M         goto    Exit
                          M 
00064A                    M Next
00064A 6A89               M         clrf    LATA                ; clear pins before proceeding
00064C 6A8A               M         clrf    LATB
00064E 6A8B               M         clrf    LATC
000650 6A8C               M         clrf    LATD
000652 EF?? F???          M         goto    LOG
                          M 
000656                    M Exit
000656 0000               M         nop
000658 D???           00900         bra     HOLD_LOG
                      00901         
                      00902 ;*******************************************************************************
                      00903 ; permanent logs
                      00904 ;*******************************************************************************
                      00905 
00065A                00906 PERM_LOG
00065A EC?? F???      00907         call    ClrLCD
                      00908         Display PermLog1
  0000                    M         local   loop
00065E 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000660 6EF8               M         movwf   TBLPTRU
000662 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000664 6EF7               M         movwf   TBLPTRH
000666 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000668 6EF6               M         movwf   TBLPTRL
00066A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00066C 50F5               M         movf    TABLAT, W
00066E                    M loop
00066E EC?? F???          M         call    WR_DATA         ; write to LCD
000672 000B               M         tblrd+*                 ; next row in table
000674 50F5               M         movf    TABLAT, W
000676 E1??               M         bnz     loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000678 EC?? F???      00909         call    LCD_L2
                      00910         Display PermLog2
  0000                    M         local   loop
00067C 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00067E 6EF8               M         movwf   TBLPTRU
000680 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000682 6EF7               M         movwf   TBLPTRH
000684 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000686 6EF6               M         movwf   TBLPTRL
000688 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00068A 50F5               M         movf    TABLAT, W
00068C                    M loop
00068C EC?? F???          M         call    WR_DATA         ; write to LCD
000690 000B               M         tblrd+*                 ; next row in table
000692 50F5               M         movf    TABLAT, W
000694 E1??               M         bnz     loop
                      00911         
000696                00912 HOLD_PERM_LOG
000696 EC?? F???      00913         call    READ_KEY
                      00914         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00069A 0E0D               M         movlw   key0                ; poll for mode
00069C 6210               M         cpfseq  KEY                 ; check this against key press
00069E EF?? F???          M         goto    Exit
                          M 
0006A2                    M Next
0006A2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006A4 6A8A               M         clrf    LATB
0006A6 6A8B               M         clrf    LATC
0006A8 6A8C               M         clrf    LATD
0006AA EF?? F???          M         goto    STANDBY
                          M 
0006AE                    M Exit
0006AE 0000               M         nop
                      00915         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
0006B0 0E00               M         movlw   key1                ; poll for mode
0006B2 6210               M         cpfseq  KEY                 ; check this against key press
0006B4 EF?? F???          M         goto    Exit
                          M 
0006B8                    M Next
0006B8 6A89               M         clrf    LATA                ; clear pins before proceeding
0006BA 6A8A               M         clrf    LATB
0006BC 6A8B               M         clrf    LATC
0006BE 6A8C               M         clrf    LATD
0006C0 EF?? F???          M         goto    PLOG
                          M 
0006C4                    M Exit
0006C4 0000               M         nop
                      00916         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0006C6 0E01               M         movlw   key2                ; poll for mode
0006C8 6210               M         cpfseq  KEY                 ; check this against key press
0006CA EF?? F???          M         goto    Exit
                          M 
0006CE                    M Next
0006CE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D0 6A8A               M         clrf    LATB
0006D2 6A8B               M         clrf    LATC
0006D4 6A8C               M         clrf    LATD
0006D6 EF?? F???          M         goto    PLOG
                          M 
0006DA                    M Exit
0006DA 0000               M         nop
                      00917         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0006DC 0E02               M         movlw   key3                ; poll for mode
0006DE 6210               M         cpfseq  KEY                 ; check this against key press
0006E0 EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006E4                    M Next
0006E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E6 6A8A               M         clrf    LATB
0006E8 6A8B               M         clrf    LATC
0006EA 6A8C               M         clrf    LATD
0006EC EF?? F???          M         goto    PLOG
                          M 
0006F0                    M Exit
0006F0 0000               M         nop
                      00918         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006F2 0E04               M         movlw   key4                ; poll for mode
0006F4 6210               M         cpfseq  KEY                 ; check this against key press
0006F6 EF?? F???          M         goto    Exit
                          M 
0006FA                    M Next
0006FA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006FC 6A8A               M         clrf    LATB
0006FE 6A8B               M         clrf    LATC
000700 6A8C               M         clrf    LATD
000702 EF?? F???          M         goto    PLOG
                          M 
000706                    M Exit
000706 0000               M         nop
                      00919         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000708 0E05               M         movlw   key5                ; poll for mode
00070A 6210               M         cpfseq  KEY                 ; check this against key press
00070C EF?? F???          M         goto    Exit
                          M 
000710                    M Next
000710 6A89               M         clrf    LATA                ; clear pins before proceeding
000712 6A8A               M         clrf    LATB
000714 6A8B               M         clrf    LATC
000716 6A8C               M         clrf    LATD
000718 EF?? F???          M         goto    PLOG
                          M 
00071C                    M Exit
00071C 0000               M         nop
                      00920         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
00071E 0E06               M         movlw   key6                ; poll for mode
000720 6210               M         cpfseq  KEY                 ; check this against key press
000722 EF?? F???          M         goto    Exit
                          M 
000726                    M Next
000726 6A89               M         clrf    LATA                ; clear pins before proceeding
000728 6A8A               M         clrf    LATB
00072A 6A8B               M         clrf    LATC
00072C 6A8C               M         clrf    LATD
00072E EF?? F???          M         goto    PLOG
                          M 
000732                    M Exit
000732 0000               M         nop
                      00921         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000734 0E08               M         movlw   key7                ; poll for mode
000736 6210               M         cpfseq  KEY                 ; check this against key press
000738 EF?? F???          M         goto    Exit
                          M 
00073C                    M Next
00073C 6A89               M         clrf    LATA                ; clear pins before proceeding
00073E 6A8A               M         clrf    LATB
000740 6A8B               M         clrf    LATC
000742 6A8C               M         clrf    LATD
000744 EF?? F???          M         goto    PLOG
                          M 
000748                    M Exit
000748 0000               M         nop
                      00922         ChangeMode  key8, PLOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
00074A 0E09               M         movlw   key8                ; poll for mode
00074C 6210               M         cpfseq  KEY                 ; check this against key press
00074E EF?? F???          M         goto    Exit
                          M 
000752                    M Next
000752 6A89               M         clrf    LATA                ; clear pins before proceeding
000754 6A8A               M         clrf    LATB
000756 6A8B               M         clrf    LATC
000758 6A8C               M         clrf    LATD
00075A EF?? F???          M         goto    PLOG
                          M 
00075E                    M Exit
00075E 0000               M         nop
                      00923         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000760 0E0A               M         movlw   key9                ; poll for mode
000762 6210               M         cpfseq  KEY                 ; check this against key press
000764 EF?? F???          M         goto    Exit
                          M 
000768                    M Next
000768 6A89               M         clrf    LATA                ; clear pins before proceeding
00076A 6A8A               M         clrf    LATB
00076C 6A8B               M         clrf    LATC
00076E 6A8C               M         clrf    LATD
000770 EF?? F???          M         goto    PLOG
                          M 
000774                    M Exit
000774 0000               M         nop
000776 D???           00924         bra HOLD_PERM_LOG
                      00925         
000778                00926 PLOG
000778 EC?? F???      00927         call    ClrLCD
                      00928         Display PermLog1
  0000                    M         local   loop
00077C 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00077E 6EF8               M         movwf   TBLPTRU
000780 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000782 6EF7               M         movwf   TBLPTRH
000784 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000786 6EF6               M         movwf   TBLPTRL
000788 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00078A 50F5               M         movf    TABLAT, W
00078C                    M loop
00078C EC?? F???          M         call    WR_DATA         ; write to LCD
000790 000B               M         tblrd+*                 ; next row in table
000792 50F5               M         movf    TABLAT, W
000794 E1??               M         bnz     loop
                      00929         
                      00930         ; find the key press value
000796 C010 FFE8      00931         movff   KEY, WREG
00079A 2AE8           00932         incf    WREG        ; W = KEY+1
00079C 6E18           00933         movwf   temp
                      00934         
00079E 42E8           00935         rrncf   WREG        ; division by 4
0007A0 9EE8           00936         bcf     WREG, 7     ; clear last bit, overflow from rotate
0007A2 42E8           00937         rrncf   WREG        
0007A4 9EE8           00938         bcf     WREG, 7
0007A6 5E18           00939         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0007A8 C018 FFE8      00940         movff   temp, WREG
0007AC C018 F012      00941         movff   temp, temp_KEY
0007B0 0D15           00942         mullw   d'21'       ; indexed as mutliples of 21
                      00943 
0007B2                00944 displayNum
0007B2 C012 FFE8      00945         movff   temp_KEY, WREG
0007B6 0F30           00946         addlw   0x30
0007B8 EC?? F???      00947         call    WR_DATA
0007BC 0E3A           00948         movlw   ":"
0007BE EC?? F???      00949         call    WR_DATA
0007C2 0E20           00950         movlw   " "
0007C4 EC?? F???      00951         call    WR_DATA
                      00952         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007C8 CFF3 F023      00953         movff   PRODL, L_EE
0007CC 0E00           00954         movlw   d'0'
0007CE 2623           00955         addwf   L_EE
                      00956         READEE  OP_sec, H_EE, L_EE
0007D0 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007D4 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
0007D8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007DA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007DC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007DE CFA8 F019          M         movff   EEDATA, OP_sec      ; put data into file
0007E2 2A23           00957         incf    L_EE
                      00958         READEE  OP_INT, H_EE, L_EE
0007E4 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007E8 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
0007EC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007EE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007F0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007F2 CFA8 F01A          M         movff   EEDATA, OP_INT      ; put data into file
0007F6 2A23           00959         incf    L_EE
0007F8 EC?? F???      00960         call    DisplayExeTime
0007FC CFF3 F023      00961         movff   PRODL, L_EE
                      00962         
                      00963         ; reset eeprom to beginning
000800 EC?? F???      00964         call    LCD_L2
000804 CFF3 F023      00965         movff   PRODL, L_EE
000808 EC?? F???      00966         call    DispOpRTC
                      00967         
00080C                00968 HOLD_PLOG
00080C EC?? F???      00969         call    READ_KEY
                      00970         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
000810 0E03               M         movlw   keyA                ; poll for mode
000812 6210               M         cpfseq  KEY                 ; check this against key press
000814 EF?? F???          M         goto    Exit
                          M 
000818                    M Next
000818 6A89               M         clrf    LATA                ; clear pins before proceeding
00081A 6A8A               M         clrf    LATB
00081C 6A8B               M         clrf    LATC
00081E 6A8C               M         clrf    LATD
000820 EF?? F???          M         goto    PLOG_DETAILS
                          M 
000824                    M Exit
000824 0000               M         nop
                      00971         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000826 0E0D               M         movlw   key0                ; poll for mode
000828 6210               M         cpfseq  KEY                 ; check this against key press
00082A EF?? F???          M         goto    Exit
                          M 
00082E                    M Next
00082E 6A89               M         clrf    LATA                ; clear pins before proceeding
000830 6A8A               M         clrf    LATB
000832 6A8B               M         clrf    LATC
000834 6A8C               M         clrf    LATD
000836 EF?? F???          M         goto    PERM_LOG
                          M 
00083A                    M Exit
00083A 0000               M         nop
00083C D???           00972         bra HOLD_PLOG
                      00973         
00083E                00974 PLOG_DETAILS
00083E EC?? F???      00975         call    ClrLCD
                      00976         
                      00977         Display Log1
  0000                    M         local   loop
000842 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000844 6EF8               M         movwf   TBLPTRU
000846 0E??               M         movlw   high Log1       ; Move Table<15:8>
000848 6EF7               M         movwf   TBLPTRH
00084A 0E??               M         movlw   low Log1        ; Move Table<7:0>
00084C 6EF6               M         movwf   TBLPTRL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00084E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000850 50F5               M         movf    TABLAT, W
000852                    M loop
000852 EC?? F???          M         call    WR_DATA         ; write to LCD
000856 000B               M         tblrd+*                 ; next row in table
000858 50F5               M         movf    TABLAT, W
00085A E1??               M         bnz     loop
00085C EC?? F???      00978         call    DisplayExeTime
                      00979         
000860 EC?? F???      00980         call    LCD_L2
000864 EC?? F???      00981         call    DispOpSort
                      00982         
000868                00983 HOLD_PLOG_DETAILS
000868 EC?? F???      00984         call    READ_KEY
                      00985         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00086C 0E0D               M         movlw   key0                ; poll for mode
00086E 6210               M         cpfseq  KEY                 ; check this against key press
000870 EF?? F???          M         goto    Exit
                          M 
000874                    M Next
000874 6A89               M         clrf    LATA                ; clear pins before proceeding
000876 6A8A               M         clrf    LATB
000878 6A8B               M         clrf    LATC
00087A 6A8C               M         clrf    LATD
00087C EF?? F???          M         goto    PERM_LOG
                          M 
000880                    M Exit
000880 0000               M         nop
000882 D???           00986         bra HOLD_PLOG_DETAILS
                      00987         
                      00988 ;*******************************************************************************
                      00989 ; pc interface
                      00990 ;*******************************************************************************
                      00991 
000884                00992 PC_MODE
000884 EC?? F???      00993         call    ClrLCD
                      00994         Display PC1
  0000                    M         local   loop
000888 0E??               M         movlw   upper PC1       ; Move Table<20:16>
00088A 6EF8               M         movwf   TBLPTRU
00088C 0E??               M         movlw   high PC1        ; Move Table<15:8>
00088E 6EF7               M         movwf   TBLPTRH
000890 0E??               M         movlw   low PC1         ; Move Table<7:0>
000892 6EF6               M         movwf   TBLPTRL
000894 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000896 50F5               M         movf    TABLAT, W
000898                    M loop
000898 EC?? F???          M         call    WR_DATA         ; write to LCD
00089C 000B               M         tblrd+*                 ; next row in table
00089E 50F5               M         movf    TABLAT, W
0008A0 E1??               M         bnz     loop
0008A2 EC?? F???      00995         call    LCD_L2
                      00996         Display PC2
  0000                    M         local   loop
0008A6 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0008A8 6EF8               M         movwf   TBLPTRU
0008AA 0E??               M         movlw   high PC2        ; Move Table<15:8>
0008AC 6EF7               M         movwf   TBLPTRH
0008AE 0E??               M         movlw   low PC2         ; Move Table<7:0>
0008B0 6EF6               M         movwf   TBLPTRL
0008B2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008B4 50F5               M         movf    TABLAT, W
0008B6                    M loop
0008B6 EC?? F???          M         call    WR_DATA         ; write to LCD
0008BA 000B               M         tblrd+*                 ; next row in table
0008BC 50F5               M         movf    TABLAT, W
0008BE E1??               M         bnz     loop
0008C0 CFF9 F039      00997         movff   PCL, PC_PCL
0008C4 CFFA F03A      00998         movff   PCLATH, PC_PCLATH
0008C8 CFFB F03B      00999         movff   PCLATU, PC_PCLATU
                      01000         
0008CC                01001 HOLD_PC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008CC EC?? F???      01002         call    READ_KEY
                      01003         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008D0 0E0D               M         movlw   key0                ; poll for mode
0008D2 6210               M         cpfseq  KEY                 ; check this against key press
0008D4 EF?? F???          M         goto    Exit
                          M 
0008D8                    M Next
0008D8 6A89               M         clrf    LATA                ; clear pins before proceeding
0008DA 6A8A               M         clrf    LATB
0008DC 6A8B               M         clrf    LATC
0008DE 6A8C               M         clrf    LATD
0008E0 EF?? F???          M         goto    STANDBY
                          M 
0008E4                    M Exit
0008E4 0000               M         nop
                      01004         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008E6 0E0E               M         movlw   keyH                ; poll for mode
0008E8 6210               M         cpfseq  KEY                 ; check this against key press
0008EA EF?? F???          M         goto    Exit
                          M 
0008EE                    M Next
0008EE 6A89               M         clrf    LATA                ; clear pins before proceeding
0008F0 6A8A               M         clrf    LATB
0008F2 6A8B               M         clrf    LATC
0008F4 6A8C               M         clrf    LATD
0008F6 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008FA                    M Exit
0008FA 0000               M         nop
0008FC D???           01005         bra     HOLD_PC
                      01006 
0008FE                01007 PC_TRANSFER
0008FE 6838           01008         setf    transferring
000900 EC?? F???      01009         call    ClrLCD
                      01010         Display PCTransfer
  0000                    M         local   loop
000904 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000906 6EF8               M         movwf   TBLPTRU
000908 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
00090A 6EF7               M         movwf   TBLPTRH
00090C 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
00090E 6EF6               M         movwf   TBLPTRL
000910 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000912 50F5               M         movf    TABLAT, W
000914                    M loop
000914 EC?? F???          M         call    WR_DATA         ; write to LCD
000918 000B               M         tblrd+*                 ; next row in table
00091A 50F5               M         movf    TABLAT, W
00091C E1??               M         bnz     loop
00091E EC?? F???      01011         call    DataUSART
000922 6A38           01012         clrf    transferring
000924 D???           01013         bra     STANDBY
                      01014         
                      01015 ;*******************************************************************************
                      01016 ; subroutines
                      01017 ;*******************************************************************************
                      01018 
000926                01019 ARDUINO_INIT
Warning[203]: Found opcode in column 1. (return)
000926 0012           01020 return
                      01021         
000928                01022 RTC_INIT
                      01023         ; set sda and scl to high
000928 9882           01024         bcf     PORTC, 4
00092A 9682           01025         bcf     PORTC, 3
00092C 8894           01026         bsf     TRISC, 4
00092E 8694           01027         bsf     TRISC, 3
                      01028         
000930 EC?? F???      01029         call    INIT_RTC
                      01030         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01031         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000934 0012           01032 return
                      01033         
000936                01034 SAVE_TIME   
                      01035         rtc_read    0x02        ; hours
000936 0E02               M     movlw   0x02
000938 6E??               M     movwf   regaddress
00093A EC?? F???          M     call    read_rtc
00093E C??? FFE8          M     movff   datachar, WREG
000942 EC?? F???          M     call    rtc_convert
000946 EC?? F???      01036         call    WriteEE_RTC
                      01037         rtc_read    0x01        ; minutes
00094A 0E01               M     movlw   0x01
00094C 6E??               M     movwf   regaddress
00094E EC?? F???          M     call    read_rtc
000952 C??? FFE8          M     movff   datachar, WREG
000956 EC?? F???          M     call    rtc_convert
00095A EC?? F???      01038         call    WriteEE_RTC
                      01039         rtc_read    0x06        ; years
00095E 0E06               M     movlw   0x06
000960 6E??               M     movwf   regaddress
000962 EC?? F???          M     call    read_rtc
000966 C??? FFE8          M     movff   datachar, WREG
00096A EC?? F???          M     call    rtc_convert
00096E EC?? F???      01040         call    WriteEE_RTC
                      01041         rtc_read    0x05        ; months
000972 0E05               M     movlw   0x05
000974 6E??               M     movwf   regaddress
000976 EC?? F???          M     call    read_rtc
00097A C??? FFE8          M     movff   datachar, WREG
00097E EC?? F???          M     call    rtc_convert
000982 EC?? F???      01042         call    WriteEE_RTC
                      01043         rtc_read    0x04        ; days
000986 0E04               M     movlw   0x04
000988 6E??               M     movwf   regaddress
00098A EC?? F???          M     call    read_rtc
00098E C??? FFE8          M     movff   datachar, WREG
000992 EC?? F???          M     call    rtc_convert
000996 EC?? F???      01044         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
00099A 0012           01045 return
                      01046         
00099C                01047 SAVE_EXE_TIME
                      01048         
Warning[202]: Argument out of range.  Least significant bits used.
00099C 3819           01049         swapf   OP_sec, WREG    ; 100's seconds
00099E 6E18           01050         movwf   temp
0009A0 0E0F           01051         movlw   0x0F
0009A2 1618           01052         andwf   temp
0009A4 C018 FFE8      01053         movff   temp, WREG
0009A8 0F30           01054         addlw   0x30    
                      01055         WriteEE WREG, H_EE, L_EE
0009AA C022 FFAA          M         movff   H_EE, EEADRH        ; High address
0009AE C023 FFA9          M         movff   L_EE, EEADR         ; Low address
0009B2 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009B6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009B8 D???               M         bra     $-2
                          M 
0009BA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009BC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009BE 84A6               M         bsf     EECON1, WREN        ; enable write
0009C0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009C2 98A1               M         bcf     PIR2, EEIF
                          M 
0009C4 0E55               M         movlw   0x55
0009C6 6EA7               M         movwf   EECON2              ; write 55h
0009C8 0EAA               M         movlw   0xaa
0009CA 6EA7               M         movwf   EECON2              ; write 0xaa
0009CC 82A6               M         bsf     EECON1, WR          ; begin write
0009CE B2A6               M         btfsc   EECON1, WR
0009D0 D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009D2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009D4 94A6               M         bcf     EECON1, WREN        ; disable writes
0009D6 2A23           01056         incf    L_EE
                      01057         
0009D8 C019 F018      01058         movff   OP_sec, temp    ; 10's seconds
0009DC 0E0F           01059         movlw   0x0F
0009DE 1618           01060         andwf   temp            ; Temp = lower nibble of Op_sec
0009E0 C018 FFE8      01061         movff   temp, WREG      ; W = Temp
0009E4 0F30           01062         addlw   0x30            ; Convert to ASCII
                      01063         WriteEE WREG, H_EE, L_EE
0009E6 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
0009EA C023 FFA9          M         movff   L_EE, EEADR         ; Low address
0009EE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009F2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009F4 D???               M         bra     $-2
                          M 
0009F6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009F8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009FA 84A6               M         bsf     EECON1, WREN        ; enable write
0009FC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009FE 98A1               M         bcf     PIR2, EEIF
                          M 
000A00 0E55               M         movlw   0x55
000A02 6EA7               M         movwf   EECON2              ; write 55h
000A04 0EAA               M         movlw   0xaa
000A06 6EA7               M         movwf   EECON2              ; write 0xaa
000A08 82A6               M         bsf     EECON1, WR          ; begin write
000A0A B2A6               M         btfsc   EECON1, WR
000A0C D???               M         bra     $-2
                          M 
000A0E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A10 94A6               M         bcf     EECON1, WREN        ; disable writes
000A12 2A23           01064         incf    L_EE
                      01065         
Warning[202]: Argument out of range.  Least significant bits used.
000A14 381A           01066         swapf   OP_INT, WREG    ;1's seconds
000A16 6E18           01067         movwf   temp
000A18 0E0F           01068         movlw   0x0f
000A1A 1618           01069         andwf   temp
000A1C C018 FFE8      01070         movff   temp, WREG
000A20 0F30           01071         addlw   0x30
                      01072         WriteEE WREG, H_EE, L_EE
000A22 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000A26 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000A2A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A2E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A30 D???               M         bra     $-2
                          M 
000A32 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A34 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A36 84A6               M         bsf     EECON1, WREN        ; enable write
000A38 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A3A 98A1               M         bcf     PIR2, EEIF
                          M 
000A3C 0E55               M         movlw   0x55
000A3E 6EA7               M         movwf   EECON2              ; write 55h
000A40 0EAA               M         movlw   0xaa
000A42 6EA7               M         movwf   EECON2              ; write 0xaa
000A44 82A6               M         bsf     EECON1, WR          ; begin write
000A46 B2A6               M         btfsc   EECON1, WR
000A48 D???               M         bra     $-2
                          M 
000A4A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A4C 94A6               M         bcf     EECON1, WREN        ; disable writes
000A4E 2A23           01073         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000A50 0012           01074 return
                      01075         
                      01076                 
000A52                01077 DISPLAY_RTC
                      01078         ; display data in this format hh/minmin/yy yy/mm/dd
                      01079         rtc_read    0x02            ; 0x02 from DS1307 - hours
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A52 0E02               M     movlw   0x02
000A54 6E??               M     movwf   regaddress
000A56 EC?? F???          M     call    read_rtc
000A5A C??? FFE8          M     movff   datachar, WREG
000A5E EC?? F???          M     call    rtc_convert
000A62 C??? FFE8      01080         movff   tens_digit,WREG
000A66 EC?? F???      01081         call    WR_DATA
000A6A C??? FFE8      01082         movff   ones_digit,WREG
000A6E EC?? F???      01083         call    WR_DATA
000A72 0E68           01084         movlw   "h"
000A74 EC?? F???      01085         call    WR_DATA
                      01086         
                      01087         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000A78 0E01               M     movlw   0x01
000A7A 6E??               M     movwf   regaddress
000A7C EC?? F???          M     call    read_rtc
000A80 C??? FFE8          M     movff   datachar, WREG
000A84 EC?? F???          M     call    rtc_convert
000A88 C??? FFE8      01088         movff   tens_digit,WREG
000A8C EC?? F???      01089         call    WR_DATA
000A90 C??? FFE8      01090         movff   ones_digit,WREG
000A94 EC?? F???      01091         call    WR_DATA
                      01092         
                      01093         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000A98 0E00               M     movlw   0x00
000A9A 6E??               M     movwf   regaddress
000A9C EC?? F???          M     call    read_rtc
000AA0 C??? FFE8          M     movff   datachar, WREG
000AA4 EC?? F???          M     call    rtc_convert
000AA8 C??? FFE8      01094         movff   tens_digit,WREG
000AAC EC?? F???      01095         call    WR_DATA
000AB0 C??? FFE8      01096         movff   ones_digit,WREG
000AB4 EC?? F???      01097         call    WR_DATA
000AB8 0E20           01098         movlw   " "
000ABA EC?? F???      01099         call    WR_DATA
                      01100         
                      01101         rtc_read    0x06            ; 0x06 from DS1307 - years
000ABE 0E06               M     movlw   0x06
000AC0 6E??               M     movwf   regaddress
000AC2 EC?? F???          M     call    read_rtc
000AC6 C??? FFE8          M     movff   datachar, WREG
000ACA EC?? F???          M     call    rtc_convert
000ACE C??? FFE8      01102         movff   tens_digit,WREG
000AD2 EC?? F???      01103         call    WR_DATA
000AD6 C??? FFE8      01104         movff   ones_digit,WREG
000ADA EC?? F???      01105         call    WR_DATA
000ADE 0E2F           01106         movlw   "/"
000AE0 EC?? F???      01107         call    WR_DATA
                      01108         
                      01109         rtc_read    0x05            ; 0x05 from DS1307 - months
000AE4 0E05               M     movlw   0x05
000AE6 6E??               M     movwf   regaddress
000AE8 EC?? F???          M     call    read_rtc
000AEC C??? FFE8          M     movff   datachar, WREG
000AF0 EC?? F???          M     call    rtc_convert
000AF4 C??? FFE8      01110         movff   tens_digit,WREG
000AF8 EC?? F???      01111         call    WR_DATA
000AFC C??? FFE8      01112         movff   ones_digit,WREG
000B00 EC?? F???      01113         call    WR_DATA
000B04 0E2F           01114         movlw   "/"
000B06 EC?? F???      01115         call    WR_DATA
                      01116         
                      01117         rtc_read    0x04            ; 0x04 from DS1307 - days
000B0A 0E04               M     movlw   0x04
000B0C 6E??               M     movwf   regaddress
000B0E EC?? F???          M     call    read_rtc
000B12 C??? FFE8          M     movff   datachar, WREG
000B16 EC?? F???          M     call    rtc_convert
000B1A C??? FFE8      01118         movff   tens_digit,WREG
000B1E EC?? F???      01119         call    WR_DATA
000B22 C??? FFE8      01120         movff   ones_digit,WREG
000B26 EC?? F???      01121         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000B2A 0012           01122 return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01123         
000B2C                01124 SET_TIME
                      01125         rtc_resetAll
                          M 
000B2C 6A??               M     clrf    databyte
000B2E 0E06               M     movlw   6
000B30 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000B32                    M     del_loop0
000B32 EC?? F???          M     call    write_rtc
000B36 2E??               M     decfsz  regaddress
000B38 D???               M     bra     del_loop0
000B3A EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01126         
                      01127         rtc_set 0x00,   b'10000000'
000B3E 0E00               M     movlw   0x00
000B40 6E??               M     movwf   regaddress
000B42 0E80               M     movlw   b'10000000'
000B44 6E??               M     movwf   databyte
000B46 EC?? F???          M     call    write_rtc
                      01128 
                      01129         rtc_set 0x06,   b'00010111'             ; Year 17
000B4A 0E06               M     movlw   0x06
000B4C 6E??               M     movwf   regaddress
000B4E 0E17               M     movlw   b'00010111'
000B50 6E??               M     movwf   databyte
000B52 EC?? F???          M     call    write_rtc
                      01130         rtc_set 0x05,   b'00000010'             ; Month 2
000B56 0E05               M     movlw   0x05
000B58 6E??               M     movwf   regaddress
000B5A 0E02               M     movlw   b'00000010'
000B5C 6E??               M     movwf   databyte
000B5E EC?? F???          M     call    write_rtc
                      01131         rtc_set 0x04,   b'00100101'             ; Date 25
000B62 0E04               M     movlw   0x04
000B64 6E??               M     movwf   regaddress
000B66 0E25               M     movlw   b'00100101'
000B68 6E??               M     movwf   databyte
000B6A EC?? F???          M     call    write_rtc
                      01132         rtc_set 0x02,   b'00100010'             ; Hours 
000B6E 0E02               M     movlw   0x02
000B70 6E??               M     movwf   regaddress
000B72 0E22               M     movlw   b'00100010'
000B74 6E??               M     movwf   databyte
000B76 EC?? F???          M     call    write_rtc
                      01133         rtc_set 0x01,   b'00100101'             ; Minutes 25
000B7A 0E01               M     movlw   0x01
000B7C 6E??               M     movwf   regaddress
000B7E 0E25               M     movlw   b'00100101'
000B80 6E??               M     movwf   databyte
000B82 EC?? F???          M     call    write_rtc
                      01134         rtc_set 0x00,   b'00000000'             ; Seconds 0
000B86 0E00               M     movlw   0x00
000B88 6E??               M     movwf   regaddress
000B8A 0E00               M     movlw   b'00000000'
000B8C 6E??               M     movwf   databyte
000B8E EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000B92 0012           01135 return
                      01136         
000B94                01137 INIT_USART
                      01138         
000B94 8E94           01139         bsf     TRISC, 7        ; set RC7=USART RC
000B96 9C94           01140         bcf     TRISC, 6        ; clear RC6=USART TX
                      01141 
000B98 0E0F           01142         movlw   15              ; baud rate 9600
000B9A 6EAF           01143         movwf   SPBRG
000B9C 6AAC           01144         clrf    TXSTA
                      01145         
000B9E 6AAB           01146         clrf    RCSTA
000BA0 8EAB           01147         bsf     RCSTA,SPEN      ; asynchronous serial port enable
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BA2 88AB           01148         bsf     RCSTA,CREN      ; continous receive
                      01149         
000BA4 8AAC           01150         bsf     TXSTA, TXEN     ; transmit enabled
000BA6 0012           01151         return
                      01152 
000BA8                01153 DataUSART
000BA8 0E02           01154         movlw   0x02
000BAA EC?? F???      01155         call    USART_WAIT
000BAE 0E0D           01156         movlw   0x0D
000BB0 EC?? F???      01157         call    USART_WAIT
                      01158         
000BB4 6A16           01159         clrf    counter         ; used to cycle through past 9 eeprom logs
000BB6 6A17           01160         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01161         
000BB8                01162 TRANSFER_LOGS
000BB8 0E15           01163         movlw   d'21'           ; logs are 21 bits apart
000BBA 0216           01164         mulwf   counter         ; log number one starts at eeprom address 0
000BBC CFF3 F023      01165         movff   PRODL, L_EE     ; low address now points to count X 21
000BC0 6A17           01166         clrf    counter2
                      01167         
000BC2                01168 TRANSFER_DATA   
                      01169         READEE  WREG, H_EE, L_EE
000BC2 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000BC6 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000BCA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000BCC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000BCE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000BD0 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000BD4 EC?? F???      01170         call    USART_WAIT      ; transfer bit
000BD8 2A23           01171         incf    L_EE
                      01172         
000BDA 2A17           01173         incf    counter2
000BDC 0E12           01174         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000BDE 6217           01175         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000BE0 D???           01176         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01177         
000BE2 EC?? F???      01178         call    USART_LINE      ; new line because a e s t h e t i c
                      01179         
000BE6 2A16           01180         incf    counter
000BE8 0E08           01181         movlw   d'8'            ; we save up to the last 9 permanent logs
000BEA 6216           01182         cpfseq  counter
000BEC D???           01183         bra     TRANSFER_LOGS
                      01184         
000BEE EC?? F???      01185         call    LCD_L2
                      01186         Display PCComplete
  0000                    M         local   loop
000BF2 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000BF4 6EF8               M         movwf   TBLPTRU
000BF6 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000BF8 6EF7               M         movwf   TBLPTRH
000BFA 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000BFC 6EF6               M         movwf   TBLPTRL
000BFE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C00 50F5               M         movf    TABLAT, W
000C02                    M loop
000C02 EC?? F???          M         call    WR_DATA         ; write to LCD
000C06 000B               M         tblrd+*                 ; next row in table
000C08 50F5               M         movf    TABLAT, W
000C0A E1??               M         bnz     loop
                      01187         Delay50N delayR, 0x28   
  0000                    M         local   loop
000C0C 0E28               M         movlw   0x28
000C0E 6E1C               M         movwf   delayR
                          M 
000C10                    M loop
000C10 EC?? F???          M         call    Delay50ms
000C14 2E1C               M         decfsz  delayR
000C16 EF?? F???          M         goto    loop
000C1A 0012           01188         return                  ; done transmitting data
                      01189         
000C1C                01190 USART_WAIT
000C1C 6EAD           01191         movwf   TXREG
000C1E A2AC           01192         btfss   TXSTA, 1
000C20 EF?? F???      01193         goto    $-2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C24 0012           01194         return
                      01195 
000C26                01196 USART_LINE
000C26 0E0A           01197         movlw   0x0A
000C28 EC?? F???      01198         call    USART_WAIT
000C2C 0E0D           01199         movlw   0x0D
000C2E EC?? F???      01200         call    USART_WAIT
000C32 0012           01201         return
                      01202         
000C34                01203 Delay5us
000C34 0E78           01204         movlw   d'120'
000C36 6E1D           01205         movwf   d5us
                      01206 
000C38                01207 loop5us
000C38 2E1D           01208         decfsz  d5us
000C3A EF?? F???      01209         goto    loop5us
000C3E 0000           01210         nop
000C40 0012           01211         return
                      01212 
000C42                01213 Delay200us
000C42 0EA4           01214         movlw   0xA4
000C44 6E1E           01215         movwf   d200us
                      01216 
000C46                01217 loop200us
000C46 2E1E           01218         decfsz  d200us
000C48 EF?? F???      01219         goto    loop200us
000C4C 0000           01220         nop
000C4E 0012           01221         return
                      01222 
000C50                01223 Delay50ms
000C50 0EF9           01224         movlw   0xF9
000C52 6E1F           01225         movwf   d50ms
                      01226 
000C54                01227 loop50ms
000C54 EC?? F???      01228         call    Delay200us
000C58 2E1F           01229         decfsz  d50ms
                      01230 
000C5A                01231 Cycles
000C5A EF?? F???      01232         goto    loop50ms
000C5E EC?? F???      01233         call    Delay200us
000C62 0012           01234         return
                      01235 
000C64                01236 WriteEE_RTC
                      01237         WriteEE tens_digit, H_EE, L_EE
000C64 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000C68 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000C6C C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000C70 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C72 D???               M         bra     $-2
                          M 
000C74 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C76 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C78 84A6               M         bsf     EECON1, WREN        ; enable write
000C7A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C7C 98A1               M         bcf     PIR2, EEIF
                          M 
000C7E 0E55               M         movlw   0x55
000C80 6EA7               M         movwf   EECON2              ; write 55h
000C82 0EAA               M         movlw   0xaa
000C84 6EA7               M         movwf   EECON2              ; write 0xaa
000C86 82A6               M         bsf     EECON1, WR          ; begin write
000C88 B2A6               M         btfsc   EECON1, WR
000C8A D???               M         bra     $-2
                          M 
000C8C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C8E 94A6               M         bcf     EECON1, WREN        ; disable writes
000C90 2A23           01238         incf    L_EE
                      01239         WriteEE ones_digit, H_EE, L_EE
000C92 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000C96 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000C9A C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000C9E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CA0 D???               M         bra     $-2
                          M 
000CA2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CA4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CA6 84A6               M         bsf     EECON1, WREN        ; enable write
000CA8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CAA 98A1               M         bcf     PIR2, EEIF
                          M 
000CAC 0E55               M         movlw   0x55
000CAE 6EA7               M         movwf   EECON2              ; write 55h
000CB0 0EAA               M         movlw   0xaa
000CB2 6EA7               M         movwf   EECON2              ; write 0xaa
000CB4 82A6               M         bsf     EECON1, WR          ; begin write
000CB6 B2A6               M         btfsc   EECON1, WR
000CB8 D???               M         bra     $-2
                          M 
000CBA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CBC 94A6               M         bcf     EECON1, WREN        ; disable writes
000CBE 2A23           01240         incf    L_EE
000CC0 0012           01241         return
                      01242 
000CC2                01243 ClearEEPROM_21
000CC2 6A22           01244         clrf    H_EE
000CC4 6A23           01245         clrf    L_EE
000CC6 6821           01246         setf    clear_EE
000CC8 6A16           01247         clrf    counter
000CCA                01248 ClearNext
                      01249         WriteEE         clear_EE, H_EE, L_EE
000CCA C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000CCE C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000CD2 C021 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000CD6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000CD8 D???               M         bra     $-2
                          M 
000CDA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CDC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CDE 84A6               M         bsf     EECON1, WREN        ; enable write
000CE0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CE2 98A1               M         bcf     PIR2, EEIF
                          M 
000CE4 0E55               M         movlw   0x55
000CE6 6EA7               M         movwf   EECON2              ; write 55h
000CE8 0EAA               M         movlw   0xaa
000CEA 6EA7               M         movwf   EECON2              ; write 0xaa
000CEC 82A6               M         bsf     EECON1, WR          ; begin write
000CEE B2A6               M         btfsc   EECON1, WR
000CF0 D???               M         bra     $-2
                          M 
000CF2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CF4 94A6               M         bcf     EECON1, WREN        ; disable writes
000CF6 2A16           01250         incf            counter
000CF8 2A23           01251         incf            L_EE
000CFA 0E15           01252         movlw           d'21'
000CFC 6216           01253         cpfseq          counter
000CFE EF?? F???      01254         goto            ClearNext
000D02 6A22           01255         clrf            H_EE
000D04 6A23           01256         clrf            L_EE
000D06 0012           01257         return
                      01258         
000D08                01259 READ_KEY
000D08 A281           01260         btfss   PORTB, 1        ; check for keypad interrupt
000D0A EF?? F???      01261         goto    READ_KEY
000D0E 3881           01262         swapf   PORTB, W
000D10 0B0F           01263         andlw   0x0F
000D12 6E10           01264         movwf   KEY
000D14 B281           01265         btfsc   PORTB, 1
000D16 EF?? F???      01266         goto    $-2
000D1A 0012           01267         return
                      01268 
000D1C                01269 READ_KEY_TIME
000D1C EC?? F???      01270         call        LCD_L2          ; go to second line to print RTC
                      01271 
                      01272         ; display the time
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D20 EC?? F???      01273         call    DISPLAY_RTC
                      01274 
000D24 A281           01275         btfss       PORTB, 1    ; keypad interrupt
000D26 EF?? F???      01276         goto        READ_KEY_TIME
000D2A 3881           01277         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000D2C 0B0F           01278         andlw       0x0F        ; only want W3:0
000D2E 6E10           01279         movwf       KEY         ; write this value to the KEY
000D30 B281           01280         btfsc       PORTB, 1    ; wait for release
000D32 EF?? F???      01281         goto        $-2         ; go back one instruction
000D36 0012           01282         return
                      01283 
000D38                01284 DisplayExeTime
                      01285         READEE  REG_EE, H_EE, L_EE
000D38 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D3C C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000D40 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D42 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D44 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D46 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000D4A 0EFF           01286         movlw   0xFF
000D4C 6224           01287         cpfseq  REG_EE
000D4E EF?? F???      01288         goto    NoSkipDispExeTime
                      01289         Display NoData
  0000                    M         local   loop
000D52 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D54 6EF8               M         movwf   TBLPTRU
000D56 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D58 6EF7               M         movwf   TBLPTRH
000D5A 0E??               M         movlw   low NoData      ; Move Table<7:0>
000D5C 6EF6               M         movwf   TBLPTRL
000D5E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D60 50F5               M         movf    TABLAT, W
000D62                    M loop
000D62 EC?? F???          M         call    WR_DATA         ; write to LCD
000D66 000B               M         tblrd+*                 ; next row in table
000D68 50F5               M         movf    TABLAT, W
000D6A E1??               M         bnz     loop
000D6C 0EFF           01290         movlw   0xFF
000D6E 6024           01291         cpfslt  REG_EE
000D70 EF?? F???      01292         goto    SkipDispExeTime
000D74 0012           01293         return
                      01294 
000D76                01295 NoSkipDispExeTime
                      01296         READEE  WREG, H_EE, L_EE
000D76 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D7A C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000D7E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D80 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D82 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D84 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D88 EC?? F???      01297         call    WR_DATA
000D8C 2A23           01298         incf    L_EE
                      01299         
                      01300         READEE  WREG, H_EE, L_EE
000D8E C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D92 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000D96 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D98 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D9A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D9C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DA0 EC?? F???      01301         call    WR_DATA
000DA4 2A23           01302         incf    L_EE
                      01303         
                      01304         READEE  WREG, H_EE, L_EE
000DA6 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DAA C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000DAE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DB0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DB2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DB4 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DB8 EC?? F???      01305         call    WR_DATA
000DBC 2A23           01306         incf    L_EE
                      01307 
000DBE 0E73           01308         movlw   0x73            ; Write 's'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DC0 EC?? F???      01309         call    WR_DATA
000DC4 EC?? F???      01310         call    LCD_L2
000DC8                01311 SkipDispExeTime
000DC8 0012           01312         return
                      01313 
000DCA                01314 DispOpSort
                      01315         READEE  REG_EE, H_EE, L_EE
000DCA C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DCE C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000DD2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DD4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DD6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DD8 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000DDC 0EFF           01316         movlw   0xff
000DDE 6224           01317         cpfseq  REG_EE
000DE0 EF?? F???      01318         goto    NoSkipDispOpSort
                      01319         Display NoData
  0000                    M         local   loop
000DE4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000DE6 6EF8               M         movwf   TBLPTRU
000DE8 0E??               M         movlw   high NoData     ; Move Table<15:8>
000DEA 6EF7               M         movwf   TBLPTRH
000DEC 0E??               M         movlw   low NoData      ; Move Table<7:0>
000DEE 6EF6               M         movwf   TBLPTRL
000DF0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000DF2 50F5               M         movf    TABLAT, W
000DF4                    M loop
000DF4 EC?? F???          M         call    WR_DATA         ; write to LCD
000DF8 000B               M         tblrd+*                 ; next row in table
000DFA 50F5               M         movf    TABLAT, W
000DFC E1??               M         bnz     loop
000DFE 0EFF           01320         movlw   0xff
000E00 6024           01321         cpfslt  REG_EE
000E02 EF?? F???      01322         goto    SkipDispOpSort
                      01323 
000E06                01324 NoSkipDispOpSort
000E06 0E61           01325         movlw   "a"
000E08 EC?? F???      01326         call    WR_DATA
                      01327         
                      01328         READEE  REG_EE, H_EE, L_EE
000E0C C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E10 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E14 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E16 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E18 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E1A CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000E1E C024 FFE8      01329         movff   REG_EE, WREG
000E22 EC?? F???      01330         call    WR_DATA
000E26 2A23           01331         incf    L_EE
                      01332         
000E28 0E20           01333         movlw   " "
000E2A EC?? F???      01334         call    WR_DATA
                      01335         
000E2E 0E62           01336         movlw   "b"
000E30 EC?? F???      01337         call    WR_DATA
                      01338         
                      01339         READEE  REG_EE, H_EE, L_EE
000E34 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E38 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E3C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E3E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E40 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E42 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000E46 C024 FFE8      01340         movff   REG_EE, WREG
000E4A EC?? F???      01341         call    WR_DATA
000E4E 2A23           01342         incf    L_EE
                      01343         
000E50 0E20           01344         movlw   " "
000E52 EC?? F???      01345         call    WR_DATA
                      01346         
000E56 0E63           01347         movlw   "c"
000E58 EC?? F???      01348         call    WR_DATA
                      01349         
                      01350         READEE  REG_EE, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E5C C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E60 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E64 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E66 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E68 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E6A CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000E6E C024 FFE8      01351         movff   REG_EE, WREG
000E72 EC?? F???      01352         call    WR_DATA
000E76 2A23           01353         incf    L_EE
                      01354         
000E78 0E20           01355         movlw   " "
000E7A EC?? F???      01356         call    WR_DATA
                      01357         
000E7E 0E64           01358         movlw   "d"
000E80 EC?? F???      01359         call    WR_DATA
                      01360         
                      01361         READEE  REG_EE, H_EE, L_EE
000E84 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E88 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E8C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E8E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E90 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E92 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000E96 C024 FFE8      01362         movff   REG_EE, WREG
000E9A EC?? F???      01363         call    WR_DATA
000E9E 2A23           01364         incf    L_EE
                      01365 
000EA0                01366 SkipDispOpSort
000EA0 0012           01367         return
                      01368         
000EA2                01369 DispOpRTC
                      01370         READEE  REG_EE, H_EE, L_EE
000EA2 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EA6 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000EAA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EAC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EAE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EB0 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000EB4 0EFF           01371         movlw   0xff
000EB6 6224           01372         cpfseq  REG_EE
000EB8 EF?? F???      01373         goto    NoSkipDispOpRTC
                      01374         Display NoData
  0000                    M         local   loop
000EBC 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EBE 6EF8               M         movwf   TBLPTRU
000EC0 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EC2 6EF7               M         movwf   TBLPTRH
000EC4 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EC6 6EF6               M         movwf   TBLPTRL
000EC8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000ECA 50F5               M         movf    TABLAT, W
000ECC                    M loop
000ECC EC?? F???          M         call    WR_DATA         ; write to LCD
000ED0 000B               M         tblrd+*                 ; next row in table
000ED2 50F5               M         movf    TABLAT, W
000ED4 E1??               M         bnz     loop
000ED6 0EFF           01375         movlw   0xff
000ED8 6024           01376         cpfslt  REG_EE
000EDA EF?? F???      01377         goto    SkipDispOpRTC
                      01378 
000EDE                01379 NoSkipDispOpRTC
                      01380         READEE  REG_EE, H_EE, L_EE
000EDE C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EE2 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000EE6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EE8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EEA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EEC CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000EF0 C024 FFE8      01381         movff   REG_EE, WREG
000EF4 EC?? F???      01382         call    WR_DATA
000EF8 2A23           01383         incf    L_EE
                      01384         
                      01385         READEE  REG_EE, H_EE, L_EE
000EFA C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-27-2017  20:44:46         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EFE C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000F02 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F04 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F06 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F08 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000F0C C024 FFE8      01386         movff   REG_EE, WREG
000F10 EC?? F???      01387         call    WR_DATA
000F14 2A23           01388         incf    L_EE
                      01389 
000F16 0E68           01390         movlw   "h"
000F18 EC?? F???      01391         call    WR_DATA
                      01392         
000F1C EC?? F???      01393         call    DispOpRTC_Helper
                      01394         
000F20 0E20           01395         movlw   " "
000F22 EC?? F???      01396         call    WR_DATA
                      01397         
000F26 EC?? F???      01398         call    DispOpRTC_Helper
000F2A 0E2F           01399         movlw   "/"
000F2C EC?? F???      01400         call    WR_DATA
                      01401 
000F30 EC?? F???      01402         call    DispOpRTC_Helper
000F34 0E2F           01403         movlw   "/"
000F36 EC?? F???      01404         call    WR_DATA
000F3A EC?? F???      01405         call    DispOpRTC_Helper
000F3E                01406 SkipDispOpRTC
000F3E 0012           01407                 return
000F40                01408 DispOpRTC_Helper
                      01409         READEE          REG_EE, H_EE, L_EE
000F40 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F44 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000F48 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F4A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F4C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F4E CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000F52 C024 FFE8      01410         movff           REG_EE, WREG
000F56 EC?? F???      01411         call            WR_DATA
000F5A 2A23           01412         incf            L_EE
                      01413         READEE          REG_EE, H_EE, L_EE
000F5C C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F60 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000F64 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F66 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F68 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F6A CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000F6E C024 FFE8      01414         movff           REG_EE, WREG
000F72 EC?? F???      01415         call            WR_DATA
000F76 2A23           01416         incf            L_EE
000F78 0012           01417         return
Warning[205]: Found directive in column 1. (end)
                      01418 end

Errors   :     0
Warnings :    42 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

