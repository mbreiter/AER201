MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movf    datachar,w
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   datachar, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   datachar, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   datachar, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   datachar, red+1
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   datachar, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   datachar, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   datachar, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   datachar, blue+1
                      00102     endm
                      00103     
                      00019 
                      00020     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00021     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00022     CONFIG WDT = OFF, WDTPS = 32768
                      00023     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00024     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00025     CONFIG DEBUG = OFF
                      00026     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00027     CONFIG CPB = OFF, CPD = OFF
                      00028     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00029     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00030     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00031     CONFIG EBTRB = OFF
                      00032 
                      00033 ;*******************************************************************************
                      00034 ; variable and constants
                      00035 ;*******************************************************************************
                      00036     CODE
                      00037             
                      00038     cblock 0x00
  00000000            00039         key1
  00000001            00040         key2
  00000002            00041         key3
  00000003            00042         keyA
  00000004            00043         key4
  00000005            00044         key5
  00000006            00045         key6
  00000007            00046         keyB
  00000008            00047         key7
  00000009            00048         key8
  0000000A            00049         key9
  0000000B            00050         keyC
  0000000C            00051         keyS
  0000000D            00052         key0
  0000000E            00053         keyH
  0000000F            00054         keyD
  00000010            00055         KEY
  00000011            00056         temp_KEY
  00000012            00057         KEY_ISR
  00000013            00058         temp_S  
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000014            00059         temp_W
  00000015            00060         counter
  00000016            00061         counter2
  00000017            00062         temp
  00000018            00063         OP_sec
  00000019            00064         OP_INT
  0000001A            00065         temp_ISR
  0000001B            00066         delayR
  0000001C            00067         d5us
  0000001D            00068         d200us
  0000001E            00069         d50ms
  0000001F            00070         inExecution
  00000020            00071         clear_EE
  00000021            00072         H_EE    
  00000022            00073         L_EE    
  00000023            00074         REG_EE  
  00000024            00075         tempH_EE
  00000025            00076         tempL_EE
  00000026            00077         tempL_EEC
  00000027            00078         MAX_EE   
  00000028            00079         READ_EE
  00000029            00080         last_log
  0000002A            00081         startHt
  0000002B            00082         startHo
  0000002C            00083         startMt
  0000002D            00084         startMo
  0000002E            00085         endHt
  0000002F            00086         endHo
  00000030            00087         endMt
  00000031            00088         endMo
  00000032            00089         LED_Count
  00000033            00090         SkipCount
  00000034            00091         exe_sec
  00000035            00092         exe_int
  00000036            00093         timer_H
  00000037            00094         timer_L
  00000038            00095         convert_buffer
  00000039            00096         transferring
  0000003A            00097         PC_PCL
  0000003B            00098         PC_PCLATH
  0000003C            00099         PC_PCLATU
  0000003D            00100         TIMCNT
  0000003E            00101         CPCNT
  0000003F            00102         TDATA
  00000040            00103         CLEAR:2
  00000042            00104         RED:2
  00000044            00105         GREEN:2
  00000046            00106         BLUE:2
  00000048            00107         temp_colour:2   
                      00108     endc
                      00109     
  0000                00110     extern tens_digit, ones_digit
                      00111     
                      00112 ;*******************************************************************************
                      00113 ; tables
                      00114 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00115     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00116     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00117     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00118     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00119     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00120     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000034 6142 6B63 3C20 00121     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00122     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00123     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00124     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00125     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00126     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00127     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00128     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00129     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00130     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00131     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00132     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00133     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00134     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00135         
                      00136 ;*******************************************************************************
                      00137 ; macros
                      00138 ;*******************************************************************************
                      00139 
                      00140 TransferTable macro table
                      00141         local loop
                      00142         
                      00143         movlw   upper table
                      00144         movwf   TBLPTRU
                      00145         movlw   high table
                      00146         movwf   TBLPTRH
                      00147         movlw   low table
                      00148         movwf   TBLPTRL
                      00149         tblrd*
                      00150         movff   TABLAT, WREG
                      00151 loop
                      00152         call    USART_WAIT
                      00153         tblrd+*
                      00154         movff   TABLAT, WREG
                      00155         bnz     loop
                      00156         endm
                      00157         
                      00158 ConfigLCD   macro
                      00159           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00160           call      WR_INS
                      00161 
                      00162           movlw     b'00001100'    ; display on/off
                      00163           call      WR_INS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164          ; movlw     B'00000110'    ; Entry mode
                      00165          ; call      WR_INS
                      00166           movlw     b'00000001'    ; Clear ram
                      00167           call      WR_INS
                      00168           endm
                      00169         
                      00170 movMSB  macro   port
                      00171         andlw   0xF0
                      00172         iorwf   port, f
                      00173         iorlw   0x0F
                      00174         andwf   port, f
                      00175         endm
                      00176 
                      00177 Delay50N macro count, N
                      00178         local   loop
                      00179         movlw   N
                      00180         movwf   count
                      00181 
                      00182 loop
                      00183         call    Delay50ms
                      00184         decfsz  count
                      00185         goto    loop
                      00186         endm
                      00187 
                      00188 Display macro   Message
                      00189         local   loop
                      00190         movlw   upper Message   ; Move Table<20:16>
                      00191         movwf   TBLPTRU
                      00192         movlw   high Message    ; Move Table<15:8>
                      00193         movwf   TBLPTRH
                      00194         movlw   low Message     ; Move Table<7:0>
                      00195         movwf   TBLPTRL
                      00196         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00197         movf    TABLAT, W
                      00198 loop
                      00199         call    WR_DATA         ; write to LCD
                      00200         tblrd+*                 ; next row in table
                      00201         movf    TABLAT, W
                      00202         bnz     loop
                      00203         endm
                      00204 
                      00205 DisplayLog  macro   addrH, addrL
                      00206             local   Again, Finish
                      00207             
                      00208             clrf    SkipCount
                      00209             clrf    MAX_EE
                      00210 
                      00211             ; Check if there is No Data first
                      00212             READEE      REG_EE, addrH, addrL
                      00213             movlw       0xFF
                      00214             cpfseq      REG_EE
                      00215             goto        Again
                      00216             Display     NoData
                      00217             goto        Finish
                      00218 Again
                      00219             ; Put a space every 3 Writes
                      00220             movlw       d'3'
                      00221             cpfslt      SkipCount
                      00222             cpfslt      MAX_EE
                      00223             goto        Finish
                      00224 
                      00225             ; read EEPROM
                      00226             READEE      REG_EE, addrH, addrL
                      00227             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00228             goto        Finish
                      00229 Finish
                      00230             endm
                      00231             
                      00232 ;TransferLog macro   addrH, addrL
                      00233         
                      00234 
                      00235 incf_BCD    macro   BCD
                      00236         local ones, endBCD
                      00237         movff   BCD, temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00238         
                      00239         ;process ones digit
                      00240         movlw   0x0f
                      00241         andwf   temp
                      00242         movlw   d'9'
                      00243         
                      00244         ;skip if ones digit is 9
                      00245         cpfseq  temp
                      00246         goto    ones
                      00247         
                      00248         movlw   b'00010000'
                      00249         addwf   BCD
                      00250         movlw   0xf0
                      00251         andwf   BCD
                      00252         movlw   0xa0
                      00253         cpfslt  BCD
                      00254         
                      00255         clrf    BCD
                      00256         goto    endBCD
                      00257         
                      00258 ones
                      00259         incf    BCD
                      00260         goto    endBCD
                      00261 endBCD
                      00262         nop
                      00263         endm
                      00264         
                      00265 SUB16   macro   x, y        ; does not modify x nor y
                      00266         local RESULTS
                      00267         movf    y+1, WREG   ; move high y into working register
                      00268         subwf   x+1, 0      ; do subtraction x - w => w
                      00269         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00270         goto    RESULTS     ; if it is, need to check lower bytes
                      00271         
                      00272         movf    y, WREG
                      00273         subwf   x, 0    
                      00274 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00275         endm
                      00276 
                      00277 WriteRTC    macro
                      00278         movff   tens_digit, WREG
                      00279         call    WR_DATA
                      00280         movff   ones_digit, WREG
                      00281         call    WR_DATA
                      00282         endm
                      00283 
                      00284 WriteEE macro   word, addH, addL
                      00285         movff   addH, EEADRH        ; High address
                      00286         movff   addL, EEADR         ; Low address
                      00287         movff   word, EEDATA        ; set word
                      00288 
                      00289         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00290         bra     $-2
                      00291 
                      00292         bcf     EECON1, EEPGD       ; Point to data memory
                      00293         bcf     EECON1, CFGS        ; Access EEPROM
                      00294         bsf     EECON1, WREN        ; enable write
                      00295         bcf     INTCON, GIE         ; disable interrupts during write
                      00296         bcf     PIR2, EEIF
                      00297 
                      00298         movlw   0x55
                      00299         movwf   EECON2              ; write 55h
                      00300         movlw   0xaa
                      00301         movwf   EECON2              ; write 0xaa
                      00302         bsf     EECON1, WR          ; begin write
                      00303         btfsc   EECON1, WR
                      00304         bra     $-2
                      00305 
                      00306         bsf     INTCON, GIE         ; enable interrupts after write
                      00307         bcf     EECON1, WREN        ; disable writes
                      00308         endm
                      00309 
                      00310 READEE  macro   file, addH, addL
                      00311         movff   addH, EEADRH        ; read to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312         movff   addL, EEADR         ; read to low
                      00313         bcf     EECON1, EEPGD       ; point to data memory
                      00314         bcf     EECON1, CFGS        ; access to EEPROM
                      00315         bsf     EECON1, RD          ; read EEPROM
                      00316         movff   EEDATA, file        ; put data into file
                      00317         endm
                      00318 
                      00319 ChangeMode  macro   ModeId, NextMode
                      00320         local Next, Exit
                      00321 
                      00322         movlw   ModeId              ; poll for mode
                      00323         cpfseq  KEY                 ; check this against key press
                      00324         goto    Exit
                      00325 
                      00326 Next
                      00327         clrf    LATA                ; clear pins before proceeding
                      00328         clrf    LATB
                      00329         clrf    LATC
                      00330         clrf    LATD
                      00331         goto    NextMode
                      00332 
                      00333 Exit
                      00334         nop
                      00335         endm
                      00336 
                      00337 saveContext macro
                      00338     movff   STATUS, temp_S          ; save STATUS first
                      00339     movwf   temp_W                  ; save W
                      00340     endm
                      00341 
                      00342 restoreContext macro
                      00343     swapf   temp_W, W               ; restore W first
                      00344     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00345     endm
                      00346 ;*******************************************************************************
                      00347 ; reset vector and isrs
                      00348 ;*******************************************************************************
                      00349         ORG     0x000               ; processor reset vector
000000 EF?? F???      00350         goto    INIT                ; go to beginning of program
                      00351 
                      00352         ORG     0x008
000008 EF?? F???      00353         goto    ISR_HIGH
                      00354 
                      00355         ORG     0x018
000018 EF?? F???      00356         goto    ISR_LOW
                      00357 
00001C                00358 ISR_HIGH
                      00359         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00360 
                      00361         ;reset timer
000022 0EBD           00362         movlw   0xbd
000024 6ED7           00363         movwf   TMR0H
000026 0EDC           00364         movlw   0xdc
000028 6ED6           00365         movwf   TMR0L
                      00366                 
                      00367         ;timer interrupt
00002A A4F2           00368         btfss   INTCON, TMR0IF
00002C EF?? F???      00369         goto    END_ISR_HIGH
                      00370         
                      00371         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0f
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0EF0               M         movlw   0xf0
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xa0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00372         movlw   d'0'
00005C 6219           00373         cpfseq  OP_INT
00005E EF?? F???      00374         goto    END_ISR_HIGH
                      00375         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0f
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0EF0               M         movlw   0xf0
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xa0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00376 
00008C                00377 END_ISR_HIGH
00008C 94F2           00378         bcf     INTCON, TMR0IF
                      00379         restoreContext
00008E 3814               M     swapf   temp_W, W               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00380         retfie
                      00381 
000096                00382 ISR_LOW
                      00383         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00384         ; KEYPAD INTERRUPT
00009C A0F0           00385         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00386         goto            END_ISR_LOW
                      00387 
                      00388         ;Check operation status
                      00389 ;       movlw           0xFF                                    ; If in operation, skip return
                      00390 ;       cpfseq          InExecution
                      00391 ;       goto            END_ISR_LOW
                      00392 
                      00393         ; Process KEY
0000A2 3881           00394         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00395         andlw           0x0F
0000A6 6E12           00396         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00397 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00398 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00399         goto            END_ISR_LOW
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00400 
                      00401         ; Reset program counter
0000AC 6AFF           00402         clrf            TOSU
0000AE 6AFE           00403         clrf            TOSH
0000B0 6AFD           00404         clrf            TOSL
                      00405 
0000B2                00406 END_ISR_LOW
0000B2 90F0           00407         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00408         restoreContext
0000B4 3814               M     swapf   temp_W, W               ; restore W first
0000B6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00409         
0000BA 6E14           00410         movwf   temp_W              ; save current W
0000BC CFD8 F013      00411         movff   STATUS, temp_S      ; save status
                      00412 
                      00413         ; ISR_Low routines
0000C0 C013 FFD8      00414         movff   temp_S, STATUS      ; retreive status
0000C4 3A14           00415         swapf   temp_W, f
0000C6 3814           00416         swapf   temp_W, w           ; restore W
0000C8 0010           00417         retfie
                      00418 
                      00419 ;*******************************************************************************
                      00420 ; main
                      00421 ;*******************************************************************************
0000CA                00422 INIT
                      00423         ; i/o
0000CA 0EFF           00424         movlw   b'11111111'
0000CC 6E92           00425         movwf   TRISA
0000CE 0EFF           00426         movlw   b'11111111'
0000D0 6E93           00427         movwf   TRISB               ; keypad
0000D2 0E00           00428         movlw   b'00000000'
0000D4 6E94           00429         movwf   TRISC
0000D6 0E00           00430         movlw   b'00000000'
0000D8 6E95           00431         movwf   TRISD
0000DA 0E07           00432         movlw   b'00000111'
0000DC 6E96           00433         movwf   TRISE
                      00434 
                      00435         ; analog/digital pins
0000DE 0E0F           00436         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00437         movwf   ADCON1
                      00438 
                      00439         ; clear ports
0000E2 6A89           00440         clrf    LATA
0000E4 6A8A           00441         clrf    LATB
                      00442 ;       bcf     TRISC, SCL
                      00443 ;       bcf     TRISC, SDA
0000E6 6A8B           00444         clrf    LATC
0000E8 6A8C           00445         clrf    LATD
0000EA 6A8D           00446         clrf    LATE
                      00447         
0000EC 0E00           00448         movlw   b'00000000'
0000EE 6EC2           00449         movwf   ADCON0
0000F0 0EFF           00450         movlw   b'11111111'
0000F2 6EC1           00451         movwf   ADCON1
                      00452         
                      00453         ; initializations
                      00454         
0000F4 EC?? F???      00455         call    InitLCD
                      00456         ConfigLCD
0000F8 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
0000FA EC?? F???          M           call      WR_INS
                          M 
0000FE 0E0C               M           movlw     b'00001100'    ; display on/off
000100 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000104 0E01               M           movlw     b'00000001'    ; Clear ram
000106 EC?? F???          M           call      WR_INS
                      00457         
00010A EC?? F???      00458         call    RTC_INIT
00010E EC?? F???      00459         call    Delay50ms
                      00460         
                      00461         COLOUR_INIT
                          M         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000112 0E00               M         movlw   0x00
000114 6E??               M         movwf   regaddress
000116 0E01               M         movlw   0x01
000118 6E??               M         movwf   databyte
00011A EC?? F???          M         call    WRITE_COLOUR_I2C
00011E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
000122 0E00               M         movlw   0x00
000124 6E??               M         movwf   regaddress
000126 0E03               M         movlw   0x03
000128 6E??               M         movwf   databyte
00012A EC?? F???          M         call    WRITE_COLOUR_I2C
00012E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
000132 0E01               M         movlw   0x01
000134 6E??               M         movwf   regaddress
000136 0ED6               M         movlw   0xd6
000138 6E??               M         movwf   databyte
00013A EC?? F???          M         call    WRITE_COLOUR_I2C
00013E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
000142 0E0F               M         movlw   0x0f
000144 6E??               M         movwf   regaddress
000146 0E03               M         movlw   0x03
000148 6E??               M         movwf   databyte
00014A EC?? F???          M         call    WRITE_COLOUR_I2C
00014E EC?? F???          M         call    delay5ms
                      00462         
000152 EC?? F???      00463         call    INIT_USART
                      00464 
                      00465         ; interrupts
000156 6AD0           00466         clrf    RCON
000158 6AF2           00467         clrf    INTCON
00015A 6AF1           00468         clrf    INTCON2
00015C 6AF0           00469         clrf    INTCON3
00015E 8ED0           00470         bsf     RCON, IPEN          ; priority mode
000160 8EF2           00471         bsf     INTCON, GIEH        ; permit global interrupts
000162 8CF2           00472         bsf     INTCON, GIEL
000164 8AF1           00473         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000166 8AF2           00474         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000168 84F2           00475         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00016A 84F1           00476         bsf     INTCON2, TMR0IP     ; set to high priority
00016C 86F0           00477         bsf     INTCON3, INT1IE
00016E 9CF0           00478         bcf     INTCON3, INT1IP
                      00479         
                      00480         ; setting up timer to sychronize with 1 second clock intervals
000170 9CD5           00481         bcf     T0CON, T08BIT
000172 9AD5           00482         bcf     T0CON, T0CS
000174 98D5           00483         bcf     T0CON, T0SE
000176 96D5           00484         bcf     T0CON, PSA
000178 94D5           00485         bcf     T0CON, T0PS2
00017A 82D5           00486         bsf     T0CON, T0PS1
00017C 80D5           00487         bsf     T0CON, T0PS0
                      00488 
00017E 6A21           00489         clrf    H_EE
000180 6A22           00490         clrf    L_EE
000182 6A??           00491         clrf    tens_digit
000184 6A??           00492         clrf    ones_digit
                      00493         
000186 0EF2           00494         movlw     b'11110010'    ; Set required keypad inputs
000188 6E93           00495         movwf     TRISB
                      00496         
                      00497         Display Welcome
  0000                    M         local   loop
00018A 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00018C 6EF8               M         movwf   TBLPTRU
00018E 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000190 6EF7               M         movwf   TBLPTRH
000192 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000194 6EF6               M         movwf   TBLPTRL
000196 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000198 50F5               M         movf    TABLAT, W
00019A                    M loop
00019A EC?? F???          M         call    WR_DATA         ; write to LCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00019E 000B               M         tblrd+*                 ; next row in table
0001A0 50F5               M         movf    TABLAT, W
0001A2 E1??               M         bnz     loop
0001A4 EC?? F???      00498         call LCD_L2
                      00499         Display Team
  0000                    M         local   loop
0001A8 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001AA 6EF8               M         movwf   TBLPTRU
0001AC 0E??               M         movlw   high Team       ; Move Table<15:8>
0001AE 6EF7               M         movwf   TBLPTRH
0001B0 0E??               M         movlw   low Team        ; Move Table<7:0>
0001B2 6EF6               M         movwf   TBLPTRL
0001B4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001B6 50F5               M         movf    TABLAT, W
0001B8                    M loop
0001B8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001BC 000B               M         tblrd+*                 ; next row in table
0001BE 50F5               M         movf    TABLAT, W
0001C0 E1??               M         bnz     loop
                      00500         
                      00501         Delay50N delayR, 0x14
  0000                    M         local   loop
0001C2 0E14               M         movlw   0x14
0001C4 6E1B               M         movwf   delayR
                          M 
0001C6                    M loop
0001C6 EC?? F???          M         call    Delay50ms
0001CA 2E1B               M         decfsz  delayR
0001CC EF?? F???          M         goto    loop
                      00502 
                      00503 ;*******************************************************************************
                      00504 ; standby mode
                      00505 ;*******************************************************************************
0001D0                00506 STANDBY
0001D0 EC?? F???      00507         call    ClrLCD
                      00508         Display StandBy
  0000                    M         local   loop
0001D4 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001D6 6EF8               M         movwf   TBLPTRU
0001D8 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001DA 6EF7               M         movwf   TBLPTRH
0001DC 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001DE 6EF6               M         movwf   TBLPTRL
0001E0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001E2 50F5               M         movf    TABLAT, W
0001E4                    M loop
0001E4 EC?? F???          M         call    WR_DATA         ; write to LCD
0001E8 000B               M         tblrd+*                 ; next row in table
0001EA 50F5               M         movf    TABLAT, W
0001EC E1??               M         bnz     loop
                      00509 
0001EE                00510 HOLD_STANDBY
0001EE EC?? F???      00511         call    READ_KEY_TIME
                      00512         ChangeMode key5, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
0001F2 0E05               M         movlw   key5                ; poll for mode
0001F4 6210               M         cpfseq  KEY                 ; check this against key press
0001F6 EF?? F???          M         goto    Exit
                          M 
0001FA                    M Next
0001FA 6A89               M         clrf    LATA                ; clear pins before proceeding
0001FC 6A8A               M         clrf    LATB
0001FE 6A8B               M         clrf    LATC
000200 6A8C               M         clrf    LATD
000202 EF?? F???          M         goto    COLOUR_TEST
                          M 
000206                    M Exit
000206 0000               M         nop
                      00513         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000208 0E03               M         movlw   keyA                ; poll for mode
00020A 6210               M         cpfseq  KEY                 ; check this against key press
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00020C EF?? F???          M         goto    Exit
                          M 
000210                    M Next
000210 6A89               M         clrf    LATA                ; clear pins before proceeding
000212 6A8A               M         clrf    LATB
000214 6A8B               M         clrf    LATC
000216 6A8C               M         clrf    LATD
000218 EF?? F???          M         goto    EXECUTION
                          M 
00021C                    M Exit
00021C 0000               M         nop
                      00514         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
00021E 0E07               M         movlw   keyB                ; poll for mode
000220 6210               M         cpfseq  KEY                 ; check this against key press
000222 EF?? F???          M         goto    Exit
                          M 
000226                    M Next
000226 6A89               M         clrf    LATA                ; clear pins before proceeding
000228 6A8A               M         clrf    LATB
00022A 6A8B               M         clrf    LATC
00022C 6A8C               M         clrf    LATD
00022E EF?? F???          M         goto    LOG
                          M 
000232                    M Exit
000232 0000               M         nop
                      00515         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000234 0E0B               M         movlw   keyC                ; poll for mode
000236 6210               M         cpfseq  KEY                 ; check this against key press
000238 EF?? F???          M         goto    Exit
                          M 
00023C                    M Next
00023C 6A89               M         clrf    LATA                ; clear pins before proceeding
00023E 6A8A               M         clrf    LATB
000240 6A8B               M         clrf    LATC
000242 6A8C               M         clrf    LATD
000244 EF?? F???          M         goto    PERM_LOG
                          M 
000248                    M Exit
000248 0000               M         nop
                      00516         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
00024A 0E0F               M         movlw   keyD                ; poll for mode
00024C 6210               M         cpfseq  KEY                 ; check this against key press
00024E EF?? F???          M         goto    Exit
                          M 
000252                    M Next
000252 6A89               M         clrf    LATA                ; clear pins before proceeding
000254 6A8A               M         clrf    LATB
000256 6A8B               M         clrf    LATC
000258 6A8C               M         clrf    LATD
00025A EF?? F???          M         goto    PC_MODE
                          M 
00025E                    M Exit
00025E 0000               M         nop
000260 D???           00517         bra     HOLD_STANDBY
                      00518 
                      00519 ;*******************************************************************************
                      00520 ; execution mode
                      00521 ;*******************************************************************************
                      00522 
000262                00523 CHECK_CLEAR
                      00524         SUB16   CLEAR, RED                  ; check first against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000262 5043               M         movf    RED+1, WREG ; move high y into working register
000264 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
000266 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000268 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[202]: Argument out of range.  Least significant bits used.
00026C 5042               M         movf    RED, WREG
00026E 5C40               M         subwf   CLEAR, 0 
000270                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000270 A0D8           00525         btfss   STATUS, C
000272 0012           00526         return                              ; RED > CLEAR
                      00527         
                      00528         SUB16   CLEAR, GREEN                ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000274 5045               M         movf    GREEN+1, WREG ; move high y into working register
000276 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
000278 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00027A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00027E 5044               M         movf    GREEN, WREG
000280 5C40               M         subwf   CLEAR, 0 
000282                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000282 A0D8           00529         btfss   STATUS, C
000284 0012           00530         return                              ; GREEN > CLEAR
                      00531         
                      00532         SUB16   CLEAR, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000286 5047               M         movf    BLUE+1, WREG ; move high y into working register
000288 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
00028A B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00028C EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000290 5046               M         movf    BLUE, WREG
000292 5C40               M         subwf   CLEAR, 0 
000294                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000294 A0D8           00533         btfss   STATUS, C
000296 0012           00534         return                              ; BLUE > CLEAR
                      00535         
000298 0E63           00536         movlw   'c'                         ; CLEAR > everything else
00029A EC?? F???      00537         call    WR_DATA
00029E D???           00538         bra     LOOPING
                      00539 
0002A0                00540 CHECK_RED
                      00541         SUB16   RED, CLEAR                  ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002A0 5041               M         movf    CLEAR+1, WREG ; move high y into working register
0002A2 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002A4 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002A6 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002AA 5040               M         movf    CLEAR, WREG
0002AC 5C42               M         subwf   RED, 0  
0002AE                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002AE A0D8           00542         btfss   STATUS, C
0002B0 0012           00543         return                              ; CLEAR > RED
                      00544         
                      00545         SUB16   RED, GREEN                  ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002B2 5045               M         movf    GREEN+1, WREG ; move high y into working register
0002B4 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002B6 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002B8 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002BC 5044               M         movf    GREEN, WREG
0002BE 5C42               M         subwf   RED, 0  
0002C0                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002C0 A0D8           00546         btfss   STATUS, C
0002C2 0012           00547         return                              ; GREEN > RED
                      00548         
                      00549         SUB16   RED, BLUE                   ; check against blue
  0000                    M         local RESULTS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[202]: Argument out of range.  Least significant bits used.
0002C4 5047               M         movf    BLUE+1, WREG ; move high y into working register
0002C6 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002C8 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002CA EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002CE 5046               M         movf    BLUE, WREG
0002D0 5C42               M         subwf   RED, 0  
0002D2                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002D2 A0D8           00550         btfss   STATUS, C
0002D4 0012           00551         return                              ; BLUE > RED
                      00552         
0002D6 0E72           00553         movlw   'r'                         ; RED > everything else
0002D8 EC?? F???      00554         call    WR_DATA
0002DC D???           00555         bra     LOOPING
                      00556         
0002DE                00557 CHECK_GREEN
                      00558         SUB16   GREEN, CLEAR                ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002DE 5041               M         movf    CLEAR+1, WREG ; move high y into working register
0002E0 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
0002E2 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002E4 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002E8 5040               M         movf    CLEAR, WREG
0002EA 5C44               M         subwf   GREEN, 0 
0002EC                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002EC A0D8           00559         btfss   STATUS, C
0002EE 0012           00560         return                              ; CLEAR > GREEN
                      00561         
                      00562         SUB16   GREEN, RED                  ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002F0 5043               M         movf    RED+1, WREG ; move high y into working register
0002F2 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
0002F4 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002F6 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002FA 5042               M         movf    RED, WREG
0002FC 5C44               M         subwf   GREEN, 0 
0002FE                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002FE A0D8           00563         btfss   STATUS, C
000300 0012           00564         return                              ; RED > GREEN
                      00565         
                      00566         SUB16   GREEN, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000302 5047               M         movf    BLUE+1, WREG ; move high y into working register
000304 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000306 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000308 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00030C 5046               M         movf    BLUE, WREG
00030E 5C44               M         subwf   GREEN, 0 
000310                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000310 A0D8           00567         btfss   STATUS, C
000312 0012           00568         return                              ; BLUE > GREEN
                      00569         
000314 0E67           00570         movlw   'g'                         ; GREEN > everything else
000316 EC?? F???      00571         call    WR_DATA
00031A D???           00572         bra     LOOPING
                      00573         
00031C                00574 CHECK_BLUE
                      00575         SUB16   BLUE, CLEAR                 ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00031C 5041               M         movf    CLEAR+1, WREG ; move high y into working register
00031E 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000320 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000322 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000326 5040               M         movf    CLEAR, WREG
000328 5C46               M         subwf   BLUE, 0 
00032A                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00032A A0D8           00576         btfss   STATUS, C
00032C 0012           00577         return                              ; CLEAR > BLUE
                      00578         
                      00579         SUB16   BLUE, RED                   ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00032E 5043               M         movf    RED+1, WREG ; move high y into working register
000330 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000332 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000334 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000338 5042               M         movf    RED, WREG
00033A 5C46               M         subwf   BLUE, 0 
00033C                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00033C A0D8           00580         btfss   STATUS, C
00033E 0012           00581         return                              ; RED > BLUE
                      00582 
                      00583         SUB16   BLUE, GREEN                 ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000340 5045               M         movf    GREEN+1, WREG ; move high y into working register
000342 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000344 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000346 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00034A 5044               M         movf    GREEN, WREG
00034C 5C46               M         subwf   BLUE, 0 
00034E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00034E A0D8           00584         btfss   STATUS, C
000350 0012           00585         return                              ; GREEN > CLEAR
                      00586         
000352 0E62           00587         movlw   'b'                         ; BLUE > everything else
000354 EC?? F???      00588         call    WR_DATA
000358 0012           00589         return
                      00590         
00035A                00591 COLOUR_TEST
                      00592 
00035A                00593 LOOPING
                      00594         Delay50N delayR, 0x28
  0000                    M         local   loop
00035A 0E28               M         movlw   0x28
00035C 6E1B               M         movwf   delayR
                          M 
00035E                    M loop
00035E EC?? F???          M         call    Delay50ms
000362 2E1B               M         decfsz  delayR
000364 EF?? F???          M         goto    loop
000368 EC?? F???      00595         call    ClrLCD
                      00596         COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
00036C EC?? F???          M         call    delay5ms
                          M         
                          M         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
000370 0E14               M         movlw   0x14
000372 6E??               M         movwf   regaddress
000374 EC?? F???          M         call    READ_COLOUR_I2C
000378 C??? F040          M         movff   datachar, CLEAR+0
                          M         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
00037C 0E15               M         movlw   0x15
00037E 6E??               M         movwf   regaddress
000380 EC?? F???          M         call    READ_COLOUR_I2C
000384 C??? F041          M         movff   datachar, CLEAR+1
                          M                 
                          M         COLOUR_READ 0x16    ; read red colour address low, command bits set later
000388 0E16               M         movlw   0x16
00038A 6E??               M         movwf   regaddress
00038C EC?? F???          M         call    READ_COLOUR_I2C
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000390 C??? F042          M         movff   datachar, RED+0
                          M         COLOUR_READ 0x17    ; read red colour address high, command bits set later
000394 0E17               M         movlw   0x17
000396 6E??               M         movwf   regaddress
000398 EC?? F???          M         call    READ_COLOUR_I2C
00039C C??? F043          M         movff   datachar, RED+1
                          M         
                          M         COLOUR_READ 0x18    ; read green colour address low, command bits set later
0003A0 0E18               M         movlw   0x18
0003A2 6E??               M         movwf   regaddress
0003A4 EC?? F???          M         call    READ_COLOUR_I2C
0003A8 C??? F044          M         movff   datachar, GREEN+0
                          M         COLOUR_READ 0x19    ; read green colour address high, command bits set later
0003AC 0E19               M         movlw   0x19
0003AE 6E??               M         movwf   regaddress
0003B0 EC?? F???          M         call    READ_COLOUR_I2C
0003B4 C??? F045          M         movff   datachar, GREEN+1
                          M         
                          M         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
0003B8 0E1A               M         movlw   0x1a
0003BA 6E??               M         movwf   regaddress
0003BC EC?? F???          M         call    READ_COLOUR_I2C
0003C0 C??? F046          M         movff   datachar, BLUE+0
                          M         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
0003C4 0E1B               M         movlw   0x1b
0003C6 6E??               M         movwf   regaddress
0003C8 EC?? F???          M         call    READ_COLOUR_I2C
0003CC C??? F047          M         movff   datachar, BLUE+1
                      00597         
0003D0 EC?? F???      00598         call    CHECK_CLEAR
0003D4 EC?? F???      00599         call    CHECK_RED
0003D8 EC?? F???      00600         call    CHECK_GREEN
0003DC EC?? F???      00601         call    CHECK_BLUE
0003E0 D???           00602         bra LOOPING
                      00603         
0003E2                00604 EXECUTION
                      00605         ; save the starting time
0003E2 EC?? F???      00606         call        SAVE_TIME
                      00607                 
                      00608         ; display
0003E6 681F           00609         setf        inExecution
0003E8 EC?? F???      00610         call        ClrLCD
                      00611         Display     Exe1
  0000                    M         local   loop
0003EC 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003EE 6EF8               M         movwf   TBLPTRU
0003F0 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003F2 6EF7               M         movwf   TBLPTRH
0003F4 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003F6 6EF6               M         movwf   TBLPTRL
0003F8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003FA 50F5               M         movf    TABLAT, W
0003FC                    M loop
0003FC EC?? F???          M         call    WR_DATA         ; write to LCD
000400 000B               M         tblrd+*                 ; next row in table
000402 50F5               M         movf    TABLAT, W
000404 E1??               M         bnz     loop
000406 EC?? F???      00612         call        LCD_L2
                      00613         Display     Exe2
  0000                    M         local   loop
00040A 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
00040C 6EF8               M         movwf   TBLPTRU
00040E 0E??               M         movlw   high Exe2       ; Move Table<15:8>
000410 6EF7               M         movwf   TBLPTRH
000412 0E??               M         movlw   low Exe2        ; Move Table<7:0>
000414 6EF6               M         movwf   TBLPTRL
000416 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000418 50F5               M         movf    TABLAT, W
00041A                    M loop
00041A EC?? F???          M         call    WR_DATA         ; write to LCD
00041E 000B               M         tblrd+*                 ; next row in table
000420 50F5               M         movf    TABLAT, W
000422 E1??               M         bnz     loop
                      00614         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000424 0EBD           00615         movlw       0xbd                    ; setting up timer
000426 6ED7           00616         movwf       TMR0H
000428 0EDC           00617         movlw       0xdc    
00042A 6ED6           00618         movwf       TMR0L
                      00619         
00042C 8ED5           00620         bsf         T0CON, TMR0ON           ; turning on timer
00042E EC?? F???      00621         call        ClearEEPROM_21
                      00622         
                      00623         ; initialize variables
000432 6A18           00624         clrf        OP_sec
000434 6A19           00625         clrf        OP_INT
000436 6A40           00626         clrf        CLEAR
000438 6A44           00627         clrf        GREEN
00043A 6A42           00628         clrf        RED
00043C 6A46           00629         clrf        BLUE
                      00630 
00043E                00631 HOLD_EXE
00043E EC?? F???      00632         call        READ_KEY
                      00633         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000442 0E0C               M         movlw   keyS                ; poll for mode
000444 6210               M         cpfseq  KEY                 ; check this against key press
000446 EF?? F???          M         goto    Exit
                          M 
00044A                    M Next
00044A 6A89               M         clrf    LATA                ; clear pins before proceeding
00044C 6A8A               M         clrf    LATB
00044E 6A8B               M         clrf    LATC
000450 6A8C               M         clrf    LATD
000452 EF?? F???          M         goto    EXIT_EXE
                          M 
000456                    M Exit
000456 0000               M         nop
000458 D???           00634         bra         HOLD_EXE
                      00635         
00045A                00636 EXIT_EXE
                      00637         WriteEE     OP_sec, H_EE, L_EE
00045A C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00045E C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000462 C018 FFA8          M         movff   OP_sec, EEDATA      ; set word
                          M 
000466 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000468 D???               M         bra     $-2
                          M 
00046A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00046C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00046E 84A6               M         bsf     EECON1, WREN        ; enable write
000470 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000472 98A1               M         bcf     PIR2, EEIF
                          M 
000474 0E55               M         movlw   0x55
000476 6EA7               M         movwf   EECON2              ; write 55h
000478 0EAA               M         movlw   0xaa
00047A 6EA7               M         movwf   EECON2              ; write 0xaa
00047C 82A6               M         bsf     EECON1, WR          ; begin write
00047E B2A6               M         btfsc   EECON1, WR
000480 D???               M         bra     $-2
                          M 
000482 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000484 94A6               M         bcf     EECON1, WREN        ; disable writes
000486 2A22           00638         incf        L_EE
                      00639         WriteEE     OP_INT, H_EE, L_EE
000488 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00048C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000490 C019 FFA8          M         movff   OP_INT, EEDATA      ; set word
                          M 
000494 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000496 D???               M         bra     $-2
                          M 
000498 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00049A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00049C 84A6               M         bsf     EECON1, WREN        ; enable write
00049E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004A0 98A1               M         bcf     PIR2, EEIF
                          M 
0004A2 0E55               M         movlw   0x55
0004A4 6EA7               M         movwf   EECON2              ; write 55h
0004A6 0EAA               M         movlw   0xaa
0004A8 6EA7               M         movwf   EECON2              ; write 0xaa
0004AA 82A6               M         bsf     EECON1, WR          ; begin write
0004AC B2A6               M         btfsc   EECON1, WR
0004AE D???               M         bra     $-2
                          M 
0004B0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004B2 94A6               M         bcf     EECON1, WREN        ; disable writes
0004B4 2A22           00640         incf        L_EE
                      00641         
0004B6 EC?? F???      00642         call        SAVE_TIME
                      00643         
                      00644         ; Clear inExecution flag to stop '*' interrupts
0004BA 6A1F           00645         clrf        inExecution
0004BC EF?? F???      00646         goto        SaveData
                      00647 
0004C0                00648 SaveData
0004C0 EC?? F???      00649         call        ClrLCD
                      00650         Display     SAVE
  0000                    M         local   loop
0004C4 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0004C6 6EF8               M         movwf   TBLPTRU
0004C8 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0004CA 6EF7               M         movwf   TBLPTRH
0004CC 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0004CE 6EF6               M         movwf   TBLPTRL
0004D0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004D2 50F5               M         movf    TABLAT, W
0004D4                    M loop
0004D4 EC?? F???          M         call    WR_DATA         ; write to LCD
0004D8 000B               M         tblrd+*                 ; next row in table
0004DA 50F5               M         movf    TABLAT, W
0004DC E1??               M         bnz     loop
                      00651 
0004DE 0E00           00652         movlw       d'0'
0004E0 6E21           00653         movwf       H_EE
0004E2 0EA8           00654         movlw       d'168'              ; take d'168' as last
0004E4 6E22           00655         movwf       L_EE
0004E6 0E00           00656         movlw       d'0'
0004E8 6E24           00657         movwf       tempH_EE
0004EA 0EDC           00658         movlw       d'220'              ; temp for low constant
0004EC 6E25           00659         movwf       tempL_EE
                      00660         
0004EE 6A16           00661         clrf        counter2
0004F0 6A15           00662         clrf        counter
                      00663 
0004F2                00664 ShiftLoop
0004F2 2A15           00665         incf            counter
                      00666         READEE          REG_EE, H_EE, L_EE
0004F4 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004F8 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0004FC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004FE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000500 80A6               M         bsf     EECON1, RD          ; read EEPROM
000502 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000506 0E15           00667         movlw           d'21'
000508 2622           00668         addwf           L_EE
                      00669         WriteEE         REG_EE, H_EE, L_EE
00050A C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00050E C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000512 C023 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000516 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000518 D???               M         bra     $-2
                          M 
00051A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00051C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00051E 84A6               M         bsf     EECON1, WREN        ; enable write
000520 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000522 98A1               M         bcf     PIR2, EEIF
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000524 0E55               M         movlw   0x55
000526 6EA7               M         movwf   EECON2              ; write 55h
000528 0EAA               M         movlw   0xaa
00052A 6EA7               M         movwf   EECON2              ; write 0xaa
00052C 82A6               M         bsf     EECON1, WR          ; begin write
00052E B2A6               M         btfsc   EECON1, WR
000530 D???               M         bra     $-2
                          M 
000532 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000534 94A6               M         bcf     EECON1, WREN        ; disable writes
000536 0E14           00670         movlw           d'20'
000538 5E22           00671         subwf           L_EE
00053A 0E15           00672         movlw           d'21'
00053C 6215           00673         cpfseq          counter
00053E EF?? F???      00674         goto            ShiftLoop
                      00675         
                      00676         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000542 0E2A           00677         movlw           d'42'
000544 5E22           00678         subwf           L_EE
000546 0EDC           00679         movlw           d'220'
000548 6E25           00680         movwf           tempL_EE
00054A 6A15           00681         clrf            counter
00054C 2A16           00682         incf            counter2
00054E 0E09           00683         movlw           d'9'
000550 6216           00684         cpfseq          counter2        ; Skip if 9 shifts were made
000552 EF?? F???      00685         goto            ShiftLoop
                      00686         
                      00687         ; Finish Saving Data
                      00688         ; Stop Timer and goto logs
000556 9ED5           00689         bcf             T0CON, TMR0ON
000558 0E09           00690         movlw           d'9'
00055A 6E22           00691         movwf           L_EE
                      00692         WriteEE         OP_sec, H_EE, L_EE
00055C C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000560 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000564 C018 FFA8          M         movff   OP_sec, EEDATA      ; set word
                          M 
000568 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00056A D???               M         bra     $-2
                          M 
00056C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00056E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000570 84A6               M         bsf     EECON1, WREN        ; enable write
000572 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000574 98A1               M         bcf     PIR2, EEIF
                          M 
000576 0E55               M         movlw   0x55
000578 6EA7               M         movwf   EECON2              ; write 55h
00057A 0EAA               M         movlw   0xaa
00057C 6EA7               M         movwf   EECON2              ; write 0xaa
00057E 82A6               M         bsf     EECON1, WR          ; begin write
000580 B2A6               M         btfsc   EECON1, WR
000582 D???               M         bra     $-2
                          M 
000584 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000586 94A6               M         bcf     EECON1, WREN        ; disable writes
000588 2A22           00693         incf            L_EE
                      00694         WriteEE         OP_INT, H_EE, L_EE
00058A C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00058E C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000592 C019 FFA8          M         movff   OP_INT, EEDATA      ; set word
                          M 
000596 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000598 D???               M         bra     $-2
                          M 
00059A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00059C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00059E 84A6               M         bsf     EECON1, WREN        ; enable write
0005A0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0005A2 98A1               M         bcf     PIR2, EEIF
                          M 
0005A4 0E55               M         movlw   0x55
0005A6 6EA7               M         movwf   EECON2              ; write 55h
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005A8 0EAA               M         movlw   0xaa
0005AA 6EA7               M         movwf   EECON2              ; write 0xaa
0005AC 82A6               M         bsf     EECON1, WR          ; begin write
0005AE B2A6               M         btfsc   EECON1, WR
0005B0 D???               M         bra     $-2
                          M 
0005B2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0005B4 94A6               M         bcf     EECON1, WREN        ; disable writes
0005B6 2A22           00695         incf            L_EE
0005B8 EF?? F???      00696         goto            LOG
                      00697 
                      00698 ;*******************************************************************************
                      00699 ; sorting statistics log mode
                      00700 ;*******************************************************************************
                      00701         
0005BC                00702 LOG
0005BC EC?? F???      00703         call    ClrLCD
                      00704         Display Log1
  0000                    M         local   loop
0005C0 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0005C2 6EF8               M         movwf   TBLPTRU
0005C4 0E??               M         movlw   high Log1       ; Move Table<15:8>
0005C6 6EF7               M         movwf   TBLPTRH
0005C8 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005CA 6EF6               M         movwf   TBLPTRL
0005CC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005CE 50F5               M         movf    TABLAT, W
0005D0                    M loop
0005D0 EC?? F???          M         call    WR_DATA         ; write to LCD
0005D4 000B               M         tblrd+*                 ; next row in table
0005D6 50F5               M         movf    TABLAT, W
0005D8 E1??               M         bnz     loop
                      00705 
                      00706         ; display most recent run data
0005DA 0E09           00707         movlw   d'9'
0005DC 6E22           00708         movwf   L_EE
                      00709         READEE  OP_sec, H_EE, L_EE
0005DE C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005E2 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005E6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005E8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005EA 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005EC CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0005F0 2A22           00710         incf    L_EE
                      00711         READEE  OP_INT, H_EE, L_EE
0005F2 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005F6 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005FA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005FC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005FE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000600 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000604 2A22           00712         incf    L_EE
000606 EC?? F???      00713         call    DisplayExeTime
                      00714 
00060A EC?? F???      00715         call    LCD_L2
00060E 6A22           00716         clrf    L_EE
000610 EC?? F???      00717         call    DispOpRTC
                      00718 
000614                00719 HOLD_LOG
000614 EC?? F???      00720         call    READ_KEY
                      00721         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000618 0E07               M         movlw   keyB                ; poll for mode
00061A 6210               M         cpfseq  KEY                 ; check this against key press
00061C EF?? F???          M         goto    Exit
                          M 
000620                    M Next
000620 6A89               M         clrf    LATA                ; clear pins before proceeding
000622 6A8A               M         clrf    LATB
000624 6A8B               M         clrf    LATC
000626 6A8C               M         clrf    LATD
000628 EF?? F???          M         goto    LOG_INFO
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00062C                    M Exit
00062C 0000               M         nop
                      00722         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00062E 0E0D               M         movlw   key0                ; poll for mode
000630 6210               M         cpfseq  KEY                 ; check this against key press
000632 EF?? F???          M         goto    Exit
                          M 
000636                    M Next
000636 6A89               M         clrf    LATA                ; clear pins before proceeding
000638 6A8A               M         clrf    LATB
00063A 6A8B               M         clrf    LATC
00063C 6A8C               M         clrf    LATD
00063E EF?? F???          M         goto    STANDBY
                          M 
000642                    M Exit
000642 0000               M         nop
000644 D???           00723         bra     HOLD_LOG
                      00724 
000646                00725 LOG_INFO
000646 EC?? F???      00726         call    ClrLCD
                      00727         Display LogInfo1
  0000                    M         local   loop
00064A 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
00064C 6EF8               M         movwf   TBLPTRU
00064E 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000650 6EF7               M         movwf   TBLPTRH
000652 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000654 6EF6               M         movwf   TBLPTRL
000656 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000658 50F5               M         movf    TABLAT, W
00065A                    M loop
00065A EC?? F???          M         call    WR_DATA         ; write to LCD
00065E 000B               M         tblrd+*                 ; next row in table
000660 50F5               M         movf    TABLAT, W
000662 E1??               M         bnz     loop
000664 EC?? F???      00728         call    LCD_L2
                      00729         Display LogInfo2
  0000                    M         local   loop
000668 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00066A 6EF8               M         movwf   TBLPTRU
00066C 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00066E 6EF7               M         movwf   TBLPTRH
000670 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000672 6EF6               M         movwf   TBLPTRL
000674 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000676 50F5               M         movf    TABLAT, W
000678                    M loop
000678 EC?? F???          M         call    WR_DATA         ; write to LCD
00067C 000B               M         tblrd+*                 ; next row in table
00067E 50F5               M         movf    TABLAT, W
000680 E1??               M         bnz     loop
000682 6A21           00730         clrf    H_EE
000684 6A22           00731         clrf    L_EE
                      00732         DisplayLog  H_EE, L_EE
  0000                    M             local   Again, Finish
                          M             
000686 6A33               M             clrf    SkipCount
000688 6A27               M             clrf    MAX_EE
                          M 
                          M             ; Check if there is No Data first
                          M             READEE      REG_EE, H_EE,  L_EE
00068A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00068E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000692 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000694 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000696 80A6               M         bsf     EECON1, RD          ; read EEPROM
000698 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
00069C 0EFF               M             movlw       0xFF
00069E 6223               M             cpfseq      REG_EE
0006A0 EF?? F???          M             goto        Again
                          M             Display     NoData
  0000                    M         local   loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006A4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0006A6 6EF8               M         movwf   TBLPTRU
0006A8 0E??               M         movlw   high NoData     ; Move Table<15:8>
0006AA 6EF7               M         movwf   TBLPTRH
0006AC 0E??               M         movlw   low NoData      ; Move Table<7:0>
0006AE 6EF6               M         movwf   TBLPTRL
0006B0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006B2 50F5               M         movf    TABLAT, W
0006B4                    M loop
0006B4 EC?? F???          M         call    WR_DATA         ; write to LCD
0006B8 000B               M         tblrd+*                 ; next row in table
0006BA 50F5               M         movf    TABLAT, W
0006BC E1??               M         bnz     loop
0006BE EF?? F???          M             goto        Finish
0006C2                    M Again
                          M             ; Put a space every 3 Writes
0006C2 0E03               M             movlw       d'3'
0006C4 6033               M             cpfslt      SkipCount
0006C6 6027               M             cpfslt      MAX_EE
0006C8 EF?? F???          M             goto        Finish
                          M 
                          M             ; read EEPROM
                          M             READEE      REG_EE, H_EE,  L_EE
0006CC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0006D0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0006D4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006D6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0006D8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0006DA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0006DE BE23               M             btfsc       REG_EE, 7       ; if bit 7 set then done
0006E0 EF?? F???          M             goto        Finish
0006E4                    M Finish
0006E4                00733 HOLD_LOG_INFO
0006E4 EC?? F???      00734         call    READ_KEY
                      00735         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0006E8 0E0D               M         movlw   key0                ; poll for mode
0006EA 6210               M         cpfseq  KEY                 ; check this against key press
0006EC EF?? F???          M         goto    Exit
                          M 
0006F0                    M Next
0006F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F2 6A8A               M         clrf    LATB
0006F4 6A8B               M         clrf    LATC
0006F6 6A8C               M         clrf    LATD
0006F8 EF?? F???          M         goto    LOG
                          M 
0006FC                    M Exit
0006FC 0000               M         nop
0006FE D???           00736         bra     HOLD_LOG
                      00737         
                      00738 ;*******************************************************************************
                      00739 ; permanent logs
                      00740 ;*******************************************************************************
                      00741 
000700                00742 PERM_LOG
000700 EC?? F???      00743         call    ClrLCD
                      00744         Display PermLog1
  0000                    M         local   loop
000704 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000706 6EF8               M         movwf   TBLPTRU
000708 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00070A 6EF7               M         movwf   TBLPTRH
00070C 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00070E 6EF6               M         movwf   TBLPTRL
000710 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000712 50F5               M         movf    TABLAT, W
000714                    M loop
000714 EC?? F???          M         call    WR_DATA         ; write to LCD
000718 000B               M         tblrd+*                 ; next row in table
00071A 50F5               M         movf    TABLAT, W
00071C E1??               M         bnz     loop
00071E EC?? F???      00745         call    LCD_L2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00746         Display PermLog2
  0000                    M         local   loop
000722 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000724 6EF8               M         movwf   TBLPTRU
000726 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000728 6EF7               M         movwf   TBLPTRH
00072A 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
00072C 6EF6               M         movwf   TBLPTRL
00072E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000730 50F5               M         movf    TABLAT, W
000732                    M loop
000732 EC?? F???          M         call    WR_DATA         ; write to LCD
000736 000B               M         tblrd+*                 ; next row in table
000738 50F5               M         movf    TABLAT, W
00073A E1??               M         bnz     loop
                      00747         
00073C                00748 HOLD_PERM_LOG
00073C EC?? F???      00749         call    READ_KEY
                      00750         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000740 0E0D               M         movlw   key0                ; poll for mode
000742 6210               M         cpfseq  KEY                 ; check this against key press
000744 EF?? F???          M         goto    Exit
                          M 
000748                    M Next
000748 6A89               M         clrf    LATA                ; clear pins before proceeding
00074A 6A8A               M         clrf    LATB
00074C 6A8B               M         clrf    LATC
00074E 6A8C               M         clrf    LATD
000750 EF?? F???          M         goto    STANDBY
                          M 
000754                    M Exit
000754 0000               M         nop
                      00751         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000756 0E00               M         movlw   key1                ; poll for mode
000758 6210               M         cpfseq  KEY                 ; check this against key press
00075A EF?? F???          M         goto    Exit
                          M 
00075E                    M Next
00075E 6A89               M         clrf    LATA                ; clear pins before proceeding
000760 6A8A               M         clrf    LATB
000762 6A8B               M         clrf    LATC
000764 6A8C               M         clrf    LATD
000766 EF?? F???          M         goto    PLOG
                          M 
00076A                    M Exit
00076A 0000               M         nop
                      00752         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00076C 0E01               M         movlw   key2                ; poll for mode
00076E 6210               M         cpfseq  KEY                 ; check this against key press
000770 EF?? F???          M         goto    Exit
                          M 
000774                    M Next
000774 6A89               M         clrf    LATA                ; clear pins before proceeding
000776 6A8A               M         clrf    LATB
000778 6A8B               M         clrf    LATC
00077A 6A8C               M         clrf    LATD
00077C EF?? F???          M         goto    PLOG
                          M 
000780                    M Exit
000780 0000               M         nop
                      00753         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000782 0E02               M         movlw   key3                ; poll for mode
000784 6210               M         cpfseq  KEY                 ; check this against key press
000786 EF?? F???          M         goto    Exit
                          M 
00078A                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00078A 6A89               M         clrf    LATA                ; clear pins before proceeding
00078C 6A8A               M         clrf    LATB
00078E 6A8B               M         clrf    LATC
000790 6A8C               M         clrf    LATD
000792 EF?? F???          M         goto    PLOG
                          M 
000796                    M Exit
000796 0000               M         nop
                      00754         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000798 0E04               M         movlw   key4                ; poll for mode
00079A 6210               M         cpfseq  KEY                 ; check this against key press
00079C EF?? F???          M         goto    Exit
                          M 
0007A0                    M Next
0007A0 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A2 6A8A               M         clrf    LATB
0007A4 6A8B               M         clrf    LATC
0007A6 6A8C               M         clrf    LATD
0007A8 EF?? F???          M         goto    PLOG
                          M 
0007AC                    M Exit
0007AC 0000               M         nop
                      00755         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0007AE 0E05               M         movlw   key5                ; poll for mode
0007B0 6210               M         cpfseq  KEY                 ; check this against key press
0007B2 EF?? F???          M         goto    Exit
                          M 
0007B6                    M Next
0007B6 6A89               M         clrf    LATA                ; clear pins before proceeding
0007B8 6A8A               M         clrf    LATB
0007BA 6A8B               M         clrf    LATC
0007BC 6A8C               M         clrf    LATD
0007BE EF?? F???          M         goto    PLOG
                          M 
0007C2                    M Exit
0007C2 0000               M         nop
                      00756         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0007C4 0E06               M         movlw   key6                ; poll for mode
0007C6 6210               M         cpfseq  KEY                 ; check this against key press
0007C8 EF?? F???          M         goto    Exit
                          M 
0007CC                    M Next
0007CC 6A89               M         clrf    LATA                ; clear pins before proceeding
0007CE 6A8A               M         clrf    LATB
0007D0 6A8B               M         clrf    LATC
0007D2 6A8C               M         clrf    LATD
0007D4 EF?? F???          M         goto    PLOG
                          M 
0007D8                    M Exit
0007D8 0000               M         nop
                      00757         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0007DA 0E08               M         movlw   key7                ; poll for mode
0007DC 6210               M         cpfseq  KEY                 ; check this against key press
0007DE EF?? F???          M         goto    Exit
                          M 
0007E2                    M Next
0007E2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007E4 6A8A               M         clrf    LATB
0007E6 6A8B               M         clrf    LATC
0007E8 6A8C               M         clrf    LATD
0007EA EF?? F???          M         goto    PLOG
                          M 
0007EE                    M Exit
0007EE 0000               M         nop
                      00758         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0007F0 0E09               M         movlw   key8                ; poll for mode
0007F2 6210               M         cpfseq  KEY                 ; check this against key press
0007F4 EF?? F???          M         goto    Exit
                          M 
0007F8                    M Next
0007F8 6A89               M         clrf    LATA                ; clear pins before proceeding
0007FA 6A8A               M         clrf    LATB
0007FC 6A8B               M         clrf    LATC
0007FE 6A8C               M         clrf    LATD
000800 EF?? F???          M         goto    PLOG
                          M 
000804                    M Exit
000804 0000               M         nop
                      00759         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000806 0E0A               M         movlw   key9                ; poll for mode
000808 6210               M         cpfseq  KEY                 ; check this against key press
00080A EF?? F???          M         goto    Exit
                          M 
00080E                    M Next
00080E 6A89               M         clrf    LATA                ; clear pins before proceeding
000810 6A8A               M         clrf    LATB
000812 6A8B               M         clrf    LATC
000814 6A8C               M         clrf    LATD
000816 EF?? F???          M         goto    PLOG
                          M 
00081A                    M Exit
00081A 0000               M         nop
00081C D???           00760         bra HOLD_PERM_LOG
                      00761         
00081E                00762 PLOG
00081E EC?? F???      00763         call    ClrLCD
                      00764         Display PermLog1
  0000                    M         local   loop
000822 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000824 6EF8               M         movwf   TBLPTRU
000826 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000828 6EF7               M         movwf   TBLPTRH
00082A 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00082C 6EF6               M         movwf   TBLPTRL
00082E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000830 50F5               M         movf    TABLAT, W
000832                    M loop
000832 EC?? F???          M         call    WR_DATA         ; write to LCD
000836 000B               M         tblrd+*                 ; next row in table
000838 50F5               M         movf    TABLAT, W
00083A E1??               M         bnz     loop
                      00765         
                      00766         ; find the key press value
00083C C010 FFE8      00767         movff   KEY, WREG
000840 2AE8           00768         incf    WREG        ; W = KEY+1
000842 6E17           00769         movwf   temp
                      00770         
000844 42E8           00771         rrncf   WREG        ; division by 4
000846 9EE8           00772         bcf     WREG, 7     ; clear last bit, overflow from rotate
000848 42E8           00773         rrncf   WREG        
00084A 9EE8           00774         bcf     WREG, 7
00084C 5E17           00775         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00084E C017 FFE8      00776         movff   temp, WREG
000852 C017 F011      00777         movff   temp, temp_KEY
000856 0D15           00778         mullw   d'21'       ; indexed as mutliples of 21
                      00779 
000858                00780 displayNum
000858 C011 FFE8      00781         movff   temp_KEY, WREG
00085C 0F30           00782         addlw   0x30
00085E EC?? F???      00783         call    WR_DATA
000862 0E3A           00784         movlw   ":"
000864 EC?? F???      00785         call    WR_DATA
000868 0E20           00786         movlw   " "
00086A EC?? F???      00787         call    WR_DATA
                      00788         
00086E CFF3 F022      00789         movff   PRODL, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000872 0E00           00790         movlw   d'0'
000874 2622           00791         addwf   L_EE
                      00792         READEE  OP_sec, H_EE, L_EE
000876 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00087A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00087E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000880 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000882 80A6               M         bsf     EECON1, RD          ; read EEPROM
000884 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000888 2A22           00793         incf    L_EE
                      00794         READEE  OP_INT, H_EE, L_EE
00088A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00088E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000892 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000894 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000896 80A6               M         bsf     EECON1, RD          ; read EEPROM
000898 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00089C 2A22           00795         incf    L_EE
00089E EC?? F???      00796         call    DisplayExeTime
0008A2 CFF3 F022      00797         movff   PRODL, L_EE
                      00798         
                      00799         ; reset eeprom to beginning
0008A6 EC?? F???      00800         call    LCD_L2
0008AA CFF3 F022      00801         movff   PRODL, L_EE
0008AE EC?? F???      00802         call    DispOpRTC
                      00803         
0008B2                00804 HOLD_PLOG
0008B2 EC?? F???      00805         call    READ_KEY
                      00806         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0008B6 0E0D               M         movlw   key0                ; poll for mode
0008B8 6210               M         cpfseq  KEY                 ; check this against key press
0008BA EF?? F???          M         goto    Exit
                          M 
0008BE                    M Next
0008BE 6A89               M         clrf    LATA                ; clear pins before proceeding
0008C0 6A8A               M         clrf    LATB
0008C2 6A8B               M         clrf    LATC
0008C4 6A8C               M         clrf    LATD
0008C6 EF?? F???          M         goto    PERM_LOG
                          M 
0008CA                    M Exit
0008CA 0000               M         nop
0008CC D???           00807         bra HOLD_PLOG
                      00808         
                      00809 ;*******************************************************************************
                      00810 ; pc interface
                      00811 ;*******************************************************************************
                      00812 
0008CE                00813 PC_MODE
0008CE EC?? F???      00814         call    ClrLCD
                      00815         Display PC1
  0000                    M         local   loop
0008D2 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0008D4 6EF8               M         movwf   TBLPTRU
0008D6 0E??               M         movlw   high PC1        ; Move Table<15:8>
0008D8 6EF7               M         movwf   TBLPTRH
0008DA 0E??               M         movlw   low PC1         ; Move Table<7:0>
0008DC 6EF6               M         movwf   TBLPTRL
0008DE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008E0 50F5               M         movf    TABLAT, W
0008E2                    M loop
0008E2 EC?? F???          M         call    WR_DATA         ; write to LCD
0008E6 000B               M         tblrd+*                 ; next row in table
0008E8 50F5               M         movf    TABLAT, W
0008EA E1??               M         bnz     loop
0008EC EC?? F???      00816         call    LCD_L2
                      00817         Display PC2
  0000                    M         local   loop
0008F0 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0008F2 6EF8               M         movwf   TBLPTRU
0008F4 0E??               M         movlw   high PC2        ; Move Table<15:8>
0008F6 6EF7               M         movwf   TBLPTRH
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008F8 0E??               M         movlw   low PC2         ; Move Table<7:0>
0008FA 6EF6               M         movwf   TBLPTRL
0008FC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008FE 50F5               M         movf    TABLAT, W
000900                    M loop
000900 EC?? F???          M         call    WR_DATA         ; write to LCD
000904 000B               M         tblrd+*                 ; next row in table
000906 50F5               M         movf    TABLAT, W
000908 E1??               M         bnz     loop
00090A CFF9 F03A      00818         movff   PCL, PC_PCL
00090E CFFA F03B      00819         movff   PCLATH, PC_PCLATH
000912 CFFB F03C      00820         movff   PCLATU, PC_PCLATU
                      00821         
000916                00822 HOLD_PC
000916 EC?? F???      00823         call    READ_KEY
                      00824         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00091A 0E0D               M         movlw   key0                ; poll for mode
00091C 6210               M         cpfseq  KEY                 ; check this against key press
00091E EF?? F???          M         goto    Exit
                          M 
000922                    M Next
000922 6A89               M         clrf    LATA                ; clear pins before proceeding
000924 6A8A               M         clrf    LATB
000926 6A8B               M         clrf    LATC
000928 6A8C               M         clrf    LATD
00092A EF?? F???          M         goto    STANDBY
                          M 
00092E                    M Exit
00092E 0000               M         nop
                      00825         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000930 0E0E               M         movlw   keyH                ; poll for mode
000932 6210               M         cpfseq  KEY                 ; check this against key press
000934 EF?? F???          M         goto    Exit
                          M 
000938                    M Next
000938 6A89               M         clrf    LATA                ; clear pins before proceeding
00093A 6A8A               M         clrf    LATB
00093C 6A8B               M         clrf    LATC
00093E 6A8C               M         clrf    LATD
000940 EF?? F???          M         goto    PC_TRANSFER
                          M 
000944                    M Exit
000944 0000               M         nop
000946 D???           00826         bra     HOLD_PC
                      00827 
000948                00828 PC_TRANSFER
000948 6839           00829         setf    transferring
00094A EC?? F???      00830         call    ClrLCD
                      00831         Display PCTransfer
  0000                    M         local   loop
00094E 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000950 6EF8               M         movwf   TBLPTRU
000952 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000954 6EF7               M         movwf   TBLPTRH
000956 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000958 6EF6               M         movwf   TBLPTRL
00095A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00095C 50F5               M         movf    TABLAT, W
00095E                    M loop
00095E EC?? F???          M         call    WR_DATA         ; write to LCD
000962 000B               M         tblrd+*                 ; next row in table
000964 50F5               M         movf    TABLAT, W
000966 E1??               M         bnz     loop
                      00832         ;call   DataUSART
000968 6A39           00833         clrf    transferring
00096A D???           00834         bra     HOLD_PC
                      00835         
                      00836 ;*******************************************************************************
                      00837 ; subroutines
                      00838 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00839 
00096C                00840 RTC_INIT
                      00841         ; set sda and scl to high-z
00096C 9882           00842         bcf     PORTC, 4
00096E 9682           00843         bcf     PORTC, 3
000970 8894           00844         bsf     TRISC, 4
000972 8694           00845         bsf     TRISC, 3
                      00846         
000974 EC?? F???      00847         call    i2c_common_setup
                      00848         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000978 0012           00849 return
                      00850         
00097A                00851 SAVE_TIME   
                      00852         rtc_read    0x02        ; hours
00097A 0E02               M     movlw   0x02
00097C 6E??               M     movwf   regaddress
00097E EC?? F???          M     call    read_rtc
000982 50??               M     movf    datachar,w
000984 EC?? F???          M     call    rtc_convert
000988 EC?? F???      00853         call    WriteEE_RTC
                      00854         rtc_read    0x01        ; minutes
00098C 0E01               M     movlw   0x01
00098E 6E??               M     movwf   regaddress
000990 EC?? F???          M     call    read_rtc
000994 50??               M     movf    datachar,w
000996 EC?? F???          M     call    rtc_convert
00099A EC?? F???      00855         call    WriteEE_RTC
                      00856         rtc_read    0x06        ; years
00099E 0E06               M     movlw   0x06
0009A0 6E??               M     movwf   regaddress
0009A2 EC?? F???          M     call    read_rtc
0009A6 50??               M     movf    datachar,w
0009A8 EC?? F???          M     call    rtc_convert
0009AC EC?? F???      00857         call    WriteEE_RTC
                      00858         rtc_read    0x05        ; months
0009B0 0E05               M     movlw   0x05
0009B2 6E??               M     movwf   regaddress
0009B4 EC?? F???          M     call    read_rtc
0009B8 50??               M     movf    datachar,w
0009BA EC?? F???          M     call    rtc_convert
0009BE EC?? F???      00859         call    WriteEE_RTC
                      00860         rtc_read    0x04        ; days
0009C2 0E04               M     movlw   0x04
0009C4 6E??               M     movwf   regaddress
0009C6 EC?? F???          M     call    read_rtc
0009CA 50??               M     movf    datachar,w
0009CC EC?? F???          M     call    rtc_convert
0009D0 EC?? F???      00861         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0009D4 0012           00862 return
                      00863                 
0009D6                00864 DISPLAY_RTC     
                      00865         ; display data in this format hh/minmin/yy yy/mm/dd
                      00866         rtc_read    0x02            ; 0x02 from DS1307 - hours
0009D6 0E02               M     movlw   0x02
0009D8 6E??               M     movwf   regaddress
0009DA EC?? F???          M     call    read_rtc
0009DE 50??               M     movf    datachar,w
0009E0 EC?? F???          M     call    rtc_convert
0009E4 C??? FFE8      00867         movff   tens_digit,WREG
0009E8 EC?? F???      00868         call    WR_DATA
0009EC C??? FFE8      00869         movff   ones_digit,WREG
0009F0 EC?? F???      00870         call    WR_DATA
0009F4 0E68           00871         movlw   "h"
0009F6 EC?? F???      00872         call    WR_DATA
                      00873         
                      00874         rtc_read    0x01            ; 0x01 from DS1307 - minutes
0009FA 0E01               M     movlw   0x01
0009FC 6E??               M     movwf   regaddress
0009FE EC?? F???          M     call    read_rtc
000A02 50??               M     movf    datachar,w
000A04 EC?? F???          M     call    rtc_convert
000A08 C??? FFE8      00875         movff   tens_digit,WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A0C EC?? F???      00876         call    WR_DATA
000A10 C??? FFE8      00877         movff   ones_digit,WREG
000A14 EC?? F???      00878         call    WR_DATA
                      00879         
                      00880         rtc_read    0x00            ; 0x01 from DS1307 - seconds
000A18 0E00               M     movlw   0x00
000A1A 6E??               M     movwf   regaddress
000A1C EC?? F???          M     call    read_rtc
000A20 50??               M     movf    datachar,w
000A22 EC?? F???          M     call    rtc_convert
000A26 C??? FFE8      00881         movff   tens_digit,WREG
000A2A EC?? F???      00882         call    WR_DATA
000A2E C??? FFE8      00883         movff   ones_digit,WREG
000A32 EC?? F???      00884         call    WR_DATA
000A36 0E20           00885         movlw   " "
000A38 EC?? F???      00886         call    WR_DATA
                      00887         
                      00888         rtc_read    0x06            ; 0x06 from DS1307 - years
000A3C 0E06               M     movlw   0x06
000A3E 6E??               M     movwf   regaddress
000A40 EC?? F???          M     call    read_rtc
000A44 50??               M     movf    datachar,w
000A46 EC?? F???          M     call    rtc_convert
000A4A C??? FFE8      00889         movff   tens_digit,WREG
000A4E EC?? F???      00890         call    WR_DATA
000A52 C??? FFE8      00891         movff   ones_digit,WREG
000A56 EC?? F???      00892         call    WR_DATA
000A5A 0E2F           00893         movlw   "/"
000A5C EC?? F???      00894         call    WR_DATA
                      00895         
                      00896         rtc_read    0x05            ; 0x05 from DS1307 - months
000A60 0E05               M     movlw   0x05
000A62 6E??               M     movwf   regaddress
000A64 EC?? F???          M     call    read_rtc
000A68 50??               M     movf    datachar,w
000A6A EC?? F???          M     call    rtc_convert
000A6E C??? FFE8      00897         movff   tens_digit,WREG
000A72 EC?? F???      00898         call    WR_DATA
000A76 C??? FFE8      00899         movff   ones_digit,WREG
000A7A EC?? F???      00900         call    WR_DATA
000A7E 0E2F           00901         movlw   "/"
000A80 EC?? F???      00902         call    WR_DATA
                      00903         
                      00904         rtc_read    0x04            ; 0x04 from DS1307 - days
000A84 0E04               M     movlw   0x04
000A86 6E??               M     movwf   regaddress
000A88 EC?? F???          M     call    read_rtc
000A8C 50??               M     movf    datachar,w
000A8E EC?? F???          M     call    rtc_convert
000A92 C??? FFE8      00905         movff   tens_digit,WREG
000A96 EC?? F???      00906         call    WR_DATA
000A9A C??? FFE8      00907         movff   ones_digit,WREG
000A9E EC?? F???      00908         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000AA2 0012           00909 return
                      00910         
000AA4                00911 SET_TIME
                      00912         rtc_resetAll
                          M 
000AA4 6A??               M     clrf    databyte
000AA6 0E06               M     movlw   6
000AA8 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000AAA                    M     del_loop0
000AAA EC?? F???          M     call    write_rtc
000AAE 2E??               M     decfsz  regaddress
000AB0 D???               M     bra     del_loop0
000AB2 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      00913         
                      00914         rtc_set 0x00,   b'10000000'
000AB6 0E00               M     movlw   0x00
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AB8 6E??               M     movwf   regaddress
000ABA 0E80               M     movlw   b'10000000'
000ABC 6E??               M     movwf   databyte
000ABE EC?? F???          M     call    write_rtc
                      00915 
                      00916         rtc_set 0x06,   b'00010111'             ; Year 17
000AC2 0E06               M     movlw   0x06
000AC4 6E??               M     movwf   regaddress
000AC6 0E17               M     movlw   b'00010111'
000AC8 6E??               M     movwf   databyte
000ACA EC?? F???          M     call    write_rtc
                      00917         rtc_set 0x05,   b'00000010'             ; Month 2
000ACE 0E05               M     movlw   0x05
000AD0 6E??               M     movwf   regaddress
000AD2 0E02               M     movlw   b'00000010'
000AD4 6E??               M     movwf   databyte
000AD6 EC?? F???          M     call    write_rtc
                      00918         rtc_set 0x04,   b'00011001'             ; Date 19
000ADA 0E04               M     movlw   0x04
000ADC 6E??               M     movwf   regaddress
000ADE 0E19               M     movlw   b'00011001'
000AE0 6E??               M     movwf   databyte
000AE2 EC?? F???          M     call    write_rtc
                      00919         rtc_set 0x02,   b'00010001'             ; Hours 11
000AE6 0E02               M     movlw   0x02
000AE8 6E??               M     movwf   regaddress
000AEA 0E11               M     movlw   b'00010001'
000AEC 6E??               M     movwf   databyte
000AEE EC?? F???          M     call    write_rtc
                      00920         rtc_set 0x01,   b'00111000'             ; Minutes 38
000AF2 0E01               M     movlw   0x01
000AF4 6E??               M     movwf   regaddress
000AF6 0E38               M     movlw   b'00111000'
000AF8 6E??               M     movwf   databyte
000AFA EC?? F???          M     call    write_rtc
                      00921         rtc_set 0x00,   b'00000000'             ; Seconds 0
000AFE 0E00               M     movlw   0x00
000B00 6E??               M     movwf   regaddress
000B02 0E00               M     movlw   b'00000000'
000B04 6E??               M     movwf   databyte
000B06 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000B0A 0012           00922 return
                      00923         
000B0C                00924 INIT_USART
000B0C 0E0F           00925         movlw   15      ; baud rate 9600
000B0E 6EAF           00926         movwf   SPBRG
000B10 6AAC           00927         clrf    TXSTA
                      00928         
000B12 6AAB           00929         clrf    RCSTA
000B14 8EAB           00930         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000B16 88AB           00931         bsf     RCSTA,CREN      ; continous receive
                      00932         
000B18 8AAC           00933         bsf     TXSTA, TXEN     ; transmit enabled
000B1A 0012           00934         return
                      00935 
                      00936 ;DataUSART
                      00937 ;       
                      00938 ;       movlw   0x02
                      00939 ;       call    USART_WAIT
                      00940 ;       movlw   0x0D
                      00941 ;       call    USART_WAIT
                      00942 ;       
                      00943 ;       movlw   d'21'       ; start of permanent logs
                      00944 ;       movff   w, L_EE
                      00945 ;       TransferTable   PCLog1
                      00946 ;       
                      00947 ;       ; display time here
                      00948 ;;      rtc_read        0x02
                      00949 ;;              movf        tens_digit, W
                      00950 ;;        andlw       b'00000001'
                      00951 ;;        addlw       0x30
                      00952 ;;        call        TransmitWaitUSART
                      00953 ;;        movf        ones_digit, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00954 ;;        call        TransmitWaitUSART
                      00955 ;;              movlw           ":"
                      00956 ;;              call            TransmitWaitUSART
                      00957 ;;              ; Dispay minutes
                      00958 ;;              rtc_read        0x01
                      00959 ;;              call        SendRTC_USART
                      00960 ;;              ; Dispay AM/PM
                      00961 ;;              rtc_read        0x02
                      00962 ;;        movlw       "P"
                      00963 ;;        btfss       tens_digit, 1
                      00964 ;;        movlw       "A"
                      00965 ;;        call        TransmitWaitUSART
                      00966 ;;        movlw       "M"
                      00967 ;;        call        TransmitWaitUSART
                      00968 ;;              movlw           " "
                      00969 ;;        call        TransmitWaitUSART
                      00970 ;;              ; Display month
                      00971 ;;              rtc_read        0x05
                      00972 ;;              call        SendRTC_USART
                      00973 ;;              movlw           0x2F            ; ASCII '/'
                      00974 ;;              call            TransmitWaitUSART
                      00975 ;;              ; Display day
                      00976 ;;              rtc_read        0x04
                      00977 ;;              call        SendRTC_USART
                      00978 ;;              movlw           0x2F            ; ASCII '/'
                      00979 ;;              call            TransmitWaitUSART
                      00980 ;;              ; Display year
                      00981 ;;              rtc_read        0x06
                      00982 ;;              call        SendRTC_USART
                      00983 ;       
                      00984 ;       call    USART_LINE
                      00985 ;       call    USART_LINE
                      00986 ;       
                      00987 ;       clrf    counter
                      00988 ;       incf    counter
                      00989 ;
                      00990 ;USART_TRANSFER
                      00991 ;       movlw   d'21'
                      00992 ;       mulwf   counter
                      00993 ;       movff   PRODL, L_EE
                      00994 ;       movlw   d'9'
                      00995 ;       addwf   L_EE
                      00996 ;       READEE  OP_sec, H_EE, L_EE
                      00997 ;       incf    L_EE
                      00998 ;       READEE  OP_INT, H_EE, L_EE
                      00999 ;       incf    L_EE
                      01000 ;       ; call  TransferTime
                      01001 ;       
                      01002 ;       ; send rtc
                      01003 ;       movlw   0x09
                      01004 ;       call    USART_WAIT
                      01005 ;       movff   PRODL, L_EE
                      01006 ;       ;call   TransferRTC
                      01007 ;       call    USART_LINE
                      01008 ;       
                      01009 ;       
                      01010 ;       
                      01011 ;       
                      01012 ;USART_WAIT
                      01013 ;       movwf   TXREG
                      01014 ;       btfss   TXSTA,1
                      01015 ;       goto    $-2
                      01016 ;       return
                      01017 ;
                      01018 ;USART_LINE
                      01019 ;       movlw   0x0A
                      01020 ;       call    USART_WAIT
                      01021 ;       movlw   0x0D
                      01022 ;       call    USART_WAIT
                      01023 ;       return
                      01024         
                      01025         
000B1C                01026 Delay5us
000B1C 0E78           01027         movlw   d'120'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B1E 6E1C           01028         movwf   d5us
                      01029 
000B20                01030 loop5us
000B20 2E1C           01031         decfsz  d5us
000B22 EF?? F???      01032         goto    loop5us
000B26 0000           01033         nop
000B28 0012           01034         return
                      01035 
000B2A                01036 Delay200us
000B2A 0EA4           01037         movlw   0xA4
000B2C 6E1D           01038         movwf   d200us
                      01039 
000B2E                01040 loop200us
000B2E 2E1D           01041         decfsz  d200us
000B30 EF?? F???      01042         goto    loop200us
000B34 0000           01043         nop
000B36 0012           01044         return
                      01045 
000B38                01046 Delay50ms
000B38 0EF9           01047         movlw   0xF9
000B3A 6E1E           01048         movwf   d50ms
                      01049 
000B3C                01050 loop50ms
000B3C EC?? F???      01051         call    Delay200us
000B40 2E1E           01052         decfsz  d50ms
                      01053 
000B42                01054 Cycles
000B42 EF?? F???      01055         goto    loop50ms
000B46 EC?? F???      01056         call    Delay200us
000B4A 0012           01057         return
                      01058 
000B4C                01059 WriteEE_RTC
                      01060         WriteEE tens_digit, H_EE, L_EE
000B4C C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000B50 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000B54 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000B58 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B5A D???               M         bra     $-2
                          M 
000B5C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B5E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B60 84A6               M         bsf     EECON1, WREN        ; enable write
000B62 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B64 98A1               M         bcf     PIR2, EEIF
                          M 
000B66 0E55               M         movlw   0x55
000B68 6EA7               M         movwf   EECON2              ; write 55h
000B6A 0EAA               M         movlw   0xaa
000B6C 6EA7               M         movwf   EECON2              ; write 0xaa
000B6E 82A6               M         bsf     EECON1, WR          ; begin write
000B70 B2A6               M         btfsc   EECON1, WR
000B72 D???               M         bra     $-2
                          M 
000B74 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B76 94A6               M         bcf     EECON1, WREN        ; disable writes
000B78 2A22           01061         incf    L_EE
                      01062         WriteEE ones_digit, H_EE, L_EE
000B7A C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000B7E C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000B82 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000B86 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B88 D???               M         bra     $-2
                          M 
000B8A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B8C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B8E 84A6               M         bsf     EECON1, WREN        ; enable write
000B90 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B92 98A1               M         bcf     PIR2, EEIF
                          M 
000B94 0E55               M         movlw   0x55
000B96 6EA7               M         movwf   EECON2              ; write 55h
000B98 0EAA               M         movlw   0xaa
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B9A 6EA7               M         movwf   EECON2              ; write 0xaa
000B9C 82A6               M         bsf     EECON1, WR          ; begin write
000B9E B2A6               M         btfsc   EECON1, WR
000BA0 D???               M         bra     $-2
                          M 
000BA2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BA4 94A6               M         bcf     EECON1, WREN        ; disable writes
000BA6 2A22           01063         incf    L_EE
000BA8 0012           01064         return
                      01065 
000BAA                01066 ClearEEPROM_21
000BAA 6A21           01067         clrf    H_EE
000BAC 6A22           01068         clrf    L_EE
000BAE 6820           01069         setf    clear_EE
000BB0 6A15           01070         clrf    counter
000BB2                01071 ClearNext
                      01072         WriteEE         clear_EE, H_EE, L_EE
000BB2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BB6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BBA C020 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000BBE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BC0 D???               M         bra     $-2
                          M 
000BC2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BC4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BC6 84A6               M         bsf     EECON1, WREN        ; enable write
000BC8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BCA 98A1               M         bcf     PIR2, EEIF
                          M 
000BCC 0E55               M         movlw   0x55
000BCE 6EA7               M         movwf   EECON2              ; write 55h
000BD0 0EAA               M         movlw   0xaa
000BD2 6EA7               M         movwf   EECON2              ; write 0xaa
000BD4 82A6               M         bsf     EECON1, WR          ; begin write
000BD6 B2A6               M         btfsc   EECON1, WR
000BD8 D???               M         bra     $-2
                          M 
000BDA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BDC 94A6               M         bcf     EECON1, WREN        ; disable writes
000BDE 2A15           01073         incf            counter
000BE0 2A22           01074         incf            L_EE
000BE2 0E15           01075         movlw           d'21'
000BE4 6215           01076         cpfseq          counter
000BE6 EF?? F???      01077         goto            ClearNext
000BEA 6A21           01078         clrf            H_EE
000BEC 6A22           01079         clrf            L_EE
000BEE 0012           01080         return
                      01081         
000BF0                01082 READ_KEY
000BF0 A281           01083         btfss   PORTB, 1        ; check for keypad interrupt
000BF2 EF?? F???      01084         goto    READ_KEY
000BF6 3881           01085         swapf   PORTB, W
000BF8 0B0F           01086         andlw   0x0F
000BFA 6E10           01087         movwf   KEY
000BFC B281           01088         btfsc   PORTB, 1
000BFE EF?? F???      01089         goto    $-2
000C02 0012           01090         return
                      01091 
000C04                01092 READ_KEY_TIME
000C04 EC?? F???      01093         call        LCD_L2          ; go to second line to print RTC
                      01094 
                      01095         ; display the time
000C08 EC?? F???      01096         call    DISPLAY_RTC
                      01097 
000C0C A281           01098         btfss       PORTB, 1    ; keypad interrupt
000C0E EF?? F???      01099         goto        READ_KEY_TIME
000C12 3881           01100         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000C14 0B0F           01101         andlw       0x0F        ; only want W3:0
000C16 6E10           01102         movwf       KEY         ; write this value to the KEY
000C18 B281           01103         btfsc       PORTB, 1    ; wait for release
000C1A EF?? F???      01104         goto        $-2         ; go back one instruction
000C1E 0012           01105         return
                      01106 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C20                01107 DisplayExeTime
                      01108         READEE  REG_EE, H_EE, L_EE
000C20 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C24 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C28 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C2A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C2C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C2E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000C32 0EFF           01109         movlw   0xFF
000C34 6223           01110         cpfseq  REG_EE
000C36 EF?? F???      01111         goto    NoSkipDispExeTime
                      01112         Display NoData
  0000                    M         local   loop
000C3A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000C3C 6EF8               M         movwf   TBLPTRU
000C3E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000C40 6EF7               M         movwf   TBLPTRH
000C42 0E??               M         movlw   low NoData      ; Move Table<7:0>
000C44 6EF6               M         movwf   TBLPTRL
000C46 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C48 50F5               M         movf    TABLAT, W
000C4A                    M loop
000C4A EC?? F???          M         call    WR_DATA         ; write to LCD
000C4E 000B               M         tblrd+*                 ; next row in table
000C50 50F5               M         movf    TABLAT, W
000C52 E1??               M         bnz     loop
000C54 0EFF           01113         movlw   0xFF
000C56 6023           01114         cpfslt  REG_EE
000C58 EF?? F???      01115         goto    SkipDispExeTime
000C5C 0012           01116         return
                      01117 
000C5E                01118 NoSkipDispExeTime
Warning[202]: Argument out of range.  Least significant bits used.
000C5E 3818           01119         swapf   OP_sec, WREG    ; 100's seconds
000C60 6E17           01120         movwf   temp
000C62 0E0F           01121         movlw   0x0F
000C64 1617           01122         andwf   temp
000C66 C017 FFE8      01123         movff   temp, WREG
000C6A 0F30           01124         addlw   0x30
000C6C EC?? F???      01125         call    WR_DATA
                      01126 
000C70 C018 F017      01127         movff   OP_sec, temp    ; 10's seconds
000C74 0E0F           01128         movlw   0x0F
000C76 1617           01129         andwf   temp            ; Temp = lower nibble of Op_sec
000C78 C017 FFE8      01130         movff   temp, WREG      ; W = Temp
000C7C 0F30           01131         addlw   0x30            ; Convert to ASCII
000C7E EC?? F???      01132         call    WR_DATA
                      01133         
Warning[202]: Argument out of range.  Least significant bits used.
000C82 3819           01134         swapf   OP_INT, WREG    ;1's seconds
000C84 6E17           01135         movwf   temp
000C86 0E0F           01136         movlw   0x0f
000C88 1617           01137         andwf   temp
000C8A C017 FFE8      01138         movff   temp, WREG
000C8E 0F30           01139         addlw   0x30
000C90 EC?? F???      01140         call    WR_DATA
                      01141 
000C94 0E73           01142         movlw   0x73            ; Write 's'
000C96 EC?? F???      01143         call    WR_DATA
000C9A EC?? F???      01144         call    LCD_L2
000C9E                01145 SkipDispExeTime
000C9E 0012           01146         return
                      01147 
000CA0                01148 DispOpRTC
000CA0 0E02           01149         movlw   d'2'
000CA2 2622           01150         addwf   L_EE
                      01151 
                      01152         READEE  REG_EE, H_EE, L_EE
000CA4 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CA8 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CAC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CAE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CB0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CB2 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CB6 0EFF           01153         movlw   0xff
000CB8 6223           01154         cpfseq  REG_EE
000CBA EF?? F???      01155         goto    NoSkipDispOpRTC
                      01156         Display NoData
  0000                    M         local   loop
000CBE 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000CC0 6EF8               M         movwf   TBLPTRU
000CC2 0E??               M         movlw   high NoData     ; Move Table<15:8>
000CC4 6EF7               M         movwf   TBLPTRH
000CC6 0E??               M         movlw   low NoData      ; Move Table<7:0>
000CC8 6EF6               M         movwf   TBLPTRL
000CCA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CCC 50F5               M         movf    TABLAT, W
000CCE                    M loop
000CCE EC?? F???          M         call    WR_DATA         ; write to LCD
000CD2 000B               M         tblrd+*                 ; next row in table
000CD4 50F5               M         movf    TABLAT, W
000CD6 E1??               M         bnz     loop
000CD8 0EFF           01157         movlw   0xff
000CDA 6023           01158         cpfslt  REG_EE
000CDC EF?? F???      01159         goto    SkipDispOpRTC
                      01160 
000CE0                01161 NoSkipDispOpRTC
                      01162         READEE  REG_EE, H_EE, L_EE
000CE0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CE4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CE8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CEA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CEC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CEE CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000CF2 C023 FFE8      01163         movff   REG_EE, WREG
000CF6 0BF1           01164         andlw   b'11110001'
000CF8 EC?? F???      01165         call    WR_DATA
                      01166         
000CFC 2A22           01167         incf    L_EE
                      01168         READEE  REG_EE, H_EE, L_EE
000CFE C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D02 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D06 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D08 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D0A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D0C CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D10 C023 FFE8      01169         movff   REG_EE, WREG
000D14 EC?? F???      01170         call    WR_DATA
000D18 2A22           01171         incf    L_EE
                      01172 
000D1A 0E68           01173         movlw           "h"
000D1C EC?? F???      01174         call            WR_DATA
                      01175         
000D20 EC?? F???      01176         call DispOpRTC_Helper
                      01177         
000D24 0E20           01178         movlw           " "
000D26 EC?? F???      01179         call            WR_DATA
                      01180         
000D2A EC?? F???      01181         call DispOpRTC_Helper
000D2E 0E2F           01182         movlw           "/"
000D30 EC?? F???      01183         call            WR_DATA
                      01184 
000D34 EC?? F???      01185         call DispOpRTC_Helper
000D38 0E2F           01186         movlw           "/"
000D3A EC?? F???      01187         call            WR_DATA
000D3E EC?? F???      01188         call DispOpRTC_Helper
000D42                01189 SkipDispOpRTC
000D42 0012           01190                 return
000D44                01191 DispOpRTC_Helper
                      01192         READEE          REG_EE, H_EE, L_EE
000D44 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D48 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D4C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D4E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D50 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D52 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D56 C023 FFE8      01193         movff           REG_EE, WREG
000D5A EC?? F???      01194         call            WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  17:37:54         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D5E 2A22           01195         incf            L_EE
                      01196         READEE          REG_EE, H_EE, L_EE
000D60 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D64 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D68 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D6A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D6C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D6E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D72 C023 FFE8      01197         movff           REG_EE, WREG
000D76 EC?? F???      01198         call            WR_DATA
000D7A 2A22           01199         incf            L_EE
000D7C 0012           01200         return
Warning[205]: Found directive in column 1. (end)
                      01201 end

Errors   :     0
Warnings :    63 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

