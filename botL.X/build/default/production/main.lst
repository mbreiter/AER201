MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008     
                      00009     
                      00010 
                      00011 
                      00012 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00047         keyB
  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit, databyte
  0000                00100     extern WRITE_ARDUINO, READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7473 6E61 6964 00107     StandBy     db          "standing by ... ... standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7473 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 613C 733E 726F 00108     StandbyInfo db          "<a>sort <b>last log <c>perm logs <d>pc", 0
       2074 623C 6C3E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7361 2074 6F6C 
       2067 633C 703E 
       7265 206D 6F6C 
       7367 3C20 3E64 
       6370 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6974 656D 003A 00109     Log1        db          "time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6173 6576 3A64 00111     LogInfo1    db          "saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6162 6B63 3C20 00112     LogInfo2    db          "back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6570 6D72 6E61 00113     PermLog1    db          "permanent logs ", 0
       6E65 2074 6F6C 
       7367 0020 
Warning[207]: Found label after column 1. (PermLog2)
000096 6361 6563 7373 00114     PermLog2    db          "access up to 9 logs, press <1> ... <9>", 0 
       7520 2070 6F74 
       3920 6C20 676F 
       2C73 7020 6572 
       7373 3C20 3E31 
       2E20 2E2E 3C20 
       3E39 0000 
Warning[207]: Found label after column 1. (Exe1)
0000BE 6F73 7472 6E69 00115     Exe1        db          "sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000CA 6E65 2064 2A3C 00116     Exe2        db          "end <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000D2 6370 6920 746E 00117     PC1         db          "pc interface ... pc interface ... ", 0
       7265 6166 6563 
       2E20 2E2E 7020 
       2063 6E69 6574 
       6672 6361 2065 
       2E2E 202E 0000 
Warning[207]: Found label after column 1. (PC2)
0000F6 7270 7365 2073 00118     PC2         db          "press <#> to begin log transfer", 0
       233C 203E 6F74 
       6220 6765 6E69 
       6C20 676F 7420 
       6172 736E 6566 
       0072 
Warning[207]: Found label after column 1. (PCTransfer)
000116 7274 6E61 6673 00119     PCTransfer  db          "transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000126 6F63 706D 656C 00120     PCComplete  db          "complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
000130 6173 6976 676E 00121     SAVE        db          "saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
00013A 2F6E 0061      00122     NoData      db          "n/a", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 LOAD_STANDBY_TIME
00001C 0EFF           00271         movlw   0xff
00001E 6ED7           00272         movwf   TMR0H
000020 0EFF           00273         movlw   0xff
000022 6ED6           00274         movwf   TMR0L
                      00275 
000024 0012           00276         return  
                      00277 
000026                00278 LOAD_EXE_TIME
000026 0EC3           00279         movlw   0xc3
000028 6ED7           00280         movwf   TMR0H
00002A 0E28           00281         movlw   0x28
00002C 6ED6           00282         movwf   TMR0L
                      00283         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00002E 0012           00284         return
                      00285         
000030                00286 ISR_HIGH
                      00287         saveContext
000030 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000034 6E14               M     movwf   temp_W                  ; save W
                      00288         
000036 0E00           00289         movlw   0x00
000038 6238           00290         cpfseq  inStandby
00003A EC?? F???      00291         call    Shift
                      00292         
                      00293         ;reset timer, but need to check which time increment 
00003E 0E00           00294         movlw   0x00
000040 6238           00295         cpfseq  inStandby
000042 EC?? F???      00296         call    LOAD_STANDBY_TIME
                      00297         
000046 0EFF           00298         movlw   0xff
000048 6238           00299         cpfseq  inStandby
00004A EC?? F???      00300         call    LOAD_EXE_TIME
                      00301                 
                      00302         ;timer interrupt
00004E A4F2           00303         btfss   INTCON, TMR0IF
000050 EF?? F???      00304         goto    END_ISR_HIGH
                      00305         
                      00306         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000054 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000058 0E0F               M         movlw   0x0f
00005A 1617               M         andwf   temp
00005C 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00005E 6217               M         cpfseq  temp
000060 EF?? F???          M         goto    ones
                          M         
000064 0E10               M         movlw   b'00010000'
000066 2619               M         addwf   OP_INT
000068 0EF0               M         movlw   0xf0
00006A 1619               M         andwf   OP_INT
00006C 0EA0               M         movlw   0xa0
00006E 6019               M         cpfslt  OP_INT
                          M         
000070 6A19               M         clrf    OP_INT
000072 EF?? F???          M         goto    endBCD
                          M         
000076                    M ones
000076 2A19               M         incf    OP_INT
000078 EF?? F???          M         goto    endBCD
00007C                    M endBCD
00007C 0000               M         nop
00007E 0E00           00307         movlw   d'0'
000080 6219           00308         cpfseq  OP_INT
000082 EF?? F???      00309         goto    END_ISR_HIGH
                      00310         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000086 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
00008A 0E0F               M         movlw   0x0f
00008C 1617               M         andwf   temp
00008E 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000090 6217               M         cpfseq  temp
000092 EF?? F???          M         goto    ones
                          M         
000096 0E10               M         movlw   b'00010000'
000098 2618               M         addwf   OP_sec
00009A 0EF0               M         movlw   0xf0
00009C 1618               M         andwf   OP_sec
00009E 0EA0               M         movlw   0xa0
0000A0 6018               M         cpfslt  OP_sec
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
0000A2 6A18               M         clrf    OP_sec
0000A4 EF?? F???          M         goto    endBCD
                          M         
0000A8                    M ones
0000A8 2A18               M         incf    OP_sec
0000AA EF?? F???          M         goto    endBCD
0000AE                    M endBCD
0000AE 0000               M         nop
                      00311 
0000B0                00312 END_ISR_HIGH
0000B0 94F2           00313         bcf     INTCON, TMR0IF
                      00314         restoreContext
0000B2 3814               M     swapf   temp_W, 0               ; restore W first
0000B4 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000B8 0010           00315         retfie
                      00316 
0000BA                00317 ISR_LOW
                      00318         saveContext
0000BA CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000BE 6E14               M     movwf   temp_W                  ; save W
                      00319         ; KEYPAD INTERRUPT
0000C0 A0F0           00320         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000C2 EF?? F???      00321         goto    END_ISR_LOW
                      00322 
                      00323         ; check operation status
0000C6 0EFF           00324         movlw   0xff                    ; If in operation, skip return
0000C8 621E           00325         cpfseq  inExecution
0000CA EF?? F???      00326         goto    END_ISR_LOW
                      00327 
                      00328         ; process KEY
0000CE 3881           00329         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D0 0B0F           00330         andlw   0x0f
0000D2 6E12           00331         movwf   KEY_ISR
                      00332         
0000D4 0E0C           00333         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000D6 6212           00334         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000D8 EF?? F???      00335         goto    END_ISR_LOW
                      00336         
                      00337         ; reset program counter - emergency stop recorded. 
0000DC 9ED5           00338         bcf     T0CON, TMR0ON
0000DE EC?? F???      00339         call    SAVE_EXE_TIME
                      00340                 
                      00341         ; Clear inExecution flag to stop '*' interrupts
0000E2 6A1E           00342         clrf    inExecution
0000E4 0E01           00343         movlw   d'1'
0000E6 6E37           00344         movwf   STOP_CONDITION
                      00345         
                      00346         ; turn off the motor
0000E8 0E00           00347         movlw   d'0'
0000EA CFE8 F???      00348         movff   WREG, databyte
0000EE EC?? F???      00349         call    WRITE_ARDUINO
                      00350         
0000F2 EC?? F???      00351         call    SaveData
                      00352         
0000F6 6AFF           00353         clrf    TOSU
0000F8 6AFE           00354         clrf    TOSH
0000FA 6AFD           00355         clrf    TOSL
0000FC 90F0           00356         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00357         restoreContext
0000FE 3814               M     swapf   temp_W, 0               ; restore W first
000100 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000104 0010           00358         retfie
                      00359 
000106                00360 END_ISR_LOW
000106 90F0           00361         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00362         restoreContext
000108 3814               M     swapf   temp_W, 0               ; restore W first
00010A C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00010E 0010           00363         retfie
                      00364 
                      00365 ;*******************************************************************************
                      00366 ; main
                      00367 ;*******************************************************************************
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000110                00368 INIT
000110 0E70           00369         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000112 6ED3           00370         movwf   OSCCON
                      00371         
                      00372         ; i/o
000114 0E00           00373         movlw   b'00000000'
000116 6E92           00374         movwf   TRISA
000118 0EFF           00375         movlw   b'11111111'
00011A 6E93           00376         movwf   TRISB               ; keypad
00011C 0E00           00377         movlw   b'00000000'
00011E 6E94           00378         movwf   TRISC
000120 0E00           00379         movlw   b'00000000'
000122 6E95           00380         movwf   TRISD
000124 0E00           00381         movlw   b'00000000'
000126 6E96           00382         movwf   TRISE
                      00383 
                      00384         ; clear ports
000128 0E00           00385         movlw   b'00000000'
00012A 6E89           00386         movwf   LATA
00012C 0E00           00387         movlw   b'00000000'
00012E 6E8A           00388         movwf   LATB
000130 0E00           00389         movlw   b'00000000'
000132 6E8B           00390         movwf   LATC
000134 0E00           00391         movlw   b'00000000'
000136 6E8C           00392         movwf   LATD
000138 0E00           00393         movlw   b'00000000'
00013A 6E8D           00394         movwf   LATE
                      00395         
00013C 0E00           00396         movlw   b'00000000'
00013E 6EC2           00397         movwf   ADCON0
                      00398         
                      00399         ; initializations
000140 EC?? F???      00400         call    InitLCD
                      00401         ConfigLCD
000144 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000146 EC?? F???          M           call      WR_INS
                          M 
00014A 0E0C               M           movlw     b'00001100'    ; display on/off
00014C EC?? F???          M           call      WR_INS
000150 0E01               M           movlw     b'00000001'    ; Clear ram
000152 EC?? F???          M           call      WR_INS
                      00402         
000156 EC?? F???      00403         call    i2c_common_setup
                      00404         
00015A EC?? F???      00405         call    RTC_INIT
                      00406         ;COLOUR_INIT
00015E EC?? F???      00407         call    INIT_USART
                      00408 
                      00409         ; interrupts
000162 6AD0           00410         clrf    RCON
000164 6AF2           00411         clrf    INTCON
000166 6AF1           00412         clrf    INTCON2
000168 6AF0           00413         clrf    INTCON3
00016A 8ED0           00414         bsf     RCON, IPEN          ; priority mode
00016C 8EF2           00415         bsf     INTCON, GIEH        ; permit global interrupts
00016E 8CF2           00416         bsf     INTCON, GIEL
000170 8AF1           00417         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000172 8AF2           00418         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000174 84F2           00419         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000176 84F1           00420         bsf     INTCON2, TMR0IP     ; set to high priority
000178 86F0           00421         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
00017A 9CF0           00422         bcf     INTCON3, INT1IP     ; keyboard to low priority
                      00423         
                      00424         ; setting up timer to sychronize with 1 second clock intervals
00017C 9ED5           00425         bcf     T0CON, TMR0ON
00017E 9CD5           00426         bcf     T0CON, T08BIT
000180 9AD5           00427         bcf     T0CON, T0CS
000182 98D5           00428         bcf     T0CON, T0SE
000184 96D5           00429         bcf     T0CON, PSA
000186 94D5           00430         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
000188 82D5           00431         bsf     T0CON, T0PS1
00018A 80D5           00432         bsf     T0CON, T0PS0
                      00433 
00018C 6A20           00434         clrf    H_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00018E 6A21           00435         clrf    L_EE
000190 6A??           00436         clrf    tens_digit
000192 6A??           00437         clrf    ones_digit
                      00438         
                      00439         ;ensure that the motor is indeed off
000194 0E00           00440         movlw   d'0'
000196 CFE8 F???      00441         movff   WREG, databyte
00019A EC?? F???      00442         call    WRITE_ARDUINO
                      00443         
00019E 6A2C           00444         clrf    DETECTION_VAL
0001A0 6A2D           00445         clrf    ESKA
0001A2 6A2E           00446         clrf    ESKA_NOCAP
0001A4 6A2F           00447         clrf    YOP
0001A6 6A30           00448         clrf    YOP_NOCAP
0001A8 6A31           00449         clrf    TOTAL_BOTTLES
0001AA 6A32           00450         clrf    COLLECTIONS_COUNT
                      00451         
0001AC 0EF2           00452         movlw     b'11110010'    ; Set required keypad inputs
0001AE 6E93           00453         movwf     TRISB
                      00454         
0001B0 EC?? F???      00455         call    ClrLCD
                      00456         Display Welcome
  0000                    M         local   loop
0001B4 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001B6 6EF8               M         movwf   TBLPTRU
0001B8 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001BA 6EF7               M         movwf   TBLPTRH
0001BC 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001BE 6EF6               M         movwf   TBLPTRL
0001C0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001C2 50F5               M         movf    TABLAT, W
0001C4                    M loop
0001C4 EC?? F???          M         call    WR_DATA         ; write to LCD
0001C8 000B               M         tblrd+*                 ; next row in table
0001CA 50F5               M         movf    TABLAT, W
0001CC E1??               M         bnz     loop
0001CE EC?? F???      00457         call LCD_L2
                      00458         Display Team
  0000                    M         local   loop
0001D2 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001D4 6EF8               M         movwf   TBLPTRU
0001D6 0E??               M         movlw   high Team       ; Move Table<15:8>
0001D8 6EF7               M         movwf   TBLPTRH
0001DA 0E??               M         movlw   low Team        ; Move Table<7:0>
0001DC 6EF6               M         movwf   TBLPTRL
0001DE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001E0 50F5               M         movf    TABLAT, W
0001E2                    M loop
0001E2 EC?? F???          M         call    WR_DATA         ; write to LCD
0001E6 000B               M         tblrd+*                 ; next row in table
0001E8 50F5               M         movf    TABLAT, W
0001EA E1??               M         bnz     loop
                      00459         
                      00460         Delay50N delayR, 0x28
  0000                    M         local   loop
0001EC 0E28               M         movlw   0x28
0001EE 6E1A               M         movwf   delayR
                          M 
0001F0                    M loop
0001F0 EC?? F???          M         call    Delay50ms
0001F4 2E1A               M         decfsz  delayR
0001F6 EF?? F???          M         goto    loop
                      00461 
                      00462 ;*******************************************************************************
                      00463 ; standby mode
                      00464 ;*******************************************************************************
0001FA                00465 STANDBY
0001FA 0E00           00466         movlw   b'00000000'
0001FC 6E84           00467         movwf   PORTE
0001FE 0E00           00468         movlw   b'00000000'
000200 6E80           00469         movwf   PORTA
                      00470         
                      00471         
000202 6838           00472         setf    inStandby       
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000204 EC?? F???      00473         call    ClrLCD
                      00474         Display StandBy
  0000                    M         local   loop
000208 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
00020A 6EF8               M         movwf   TBLPTRU
00020C 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00020E 6EF7               M         movwf   TBLPTRH
000210 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000212 6EF6               M         movwf   TBLPTRL
000214 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000216 50F5               M         movf    TABLAT, W
000218                    M loop
000218 EC?? F???          M         call    WR_DATA         ; write to LCD
00021C 000B               M         tblrd+*                 ; next row in table
00021E 50F5               M         movf    TABLAT, W
000220 E1??               M         bnz     loop
000222 EC?? F???      00475         call    LCD_L2
                      00476         Display StandbyInfo
  0000                    M         local   loop
000226 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
000228 6EF8               M         movwf   TBLPTRU
00022A 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
00022C 6EF7               M         movwf   TBLPTRH
00022E 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
000230 6EF6               M         movwf   TBLPTRL
000232 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000234 50F5               M         movf    TABLAT, W
000236                    M loop
000236 EC?? F???          M         call    WR_DATA         ; write to LCD
00023A 000B               M         tblrd+*                 ; next row in table
00023C 50F5               M         movf    TABLAT, W
00023E E1??               M         bnz     loop
                      00477         
000240 0EFF           00478         movlw   0xff
000242 6ED7           00479         movwf   TMR0H
000244 0EFF           00480         movlw   0xff
000246 6ED6           00481         movwf   TMR0L
000248 8ED5           00482         bsf     T0CON, TMR0ON       ; turning on timer
                      00483 
                      00484 
00024A                00485 HOLD_STANDBY
00024A EC?? F???      00486         call    READ_KEY_TIME
                      00487 
                      00488         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
00024E 0E00               M         movlw   key1                ; poll for mode
000250 6210               M         cpfseq  KEY                 ; check this against key press
000252 EF?? F???          M         goto    Exit
                          M 
000256                    M Next
000256 6A89               M         clrf    LATA                ; clear pins before proceeding
000258 6A8A               M         clrf    LATB
00025A 6A8B               M         clrf    LATC
00025C 6A8C               M         clrf    LATD
00025E EF?? F???          M         goto    COLOUR_TEST
                          M 
000262                    M Exit
000262 0000               M         nop
                      00489         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000264 0E03               M         movlw   keyA                ; poll for mode
000266 6210               M         cpfseq  KEY                 ; check this against key press
000268 EF?? F???          M         goto    Exit
                          M 
00026C                    M Next
00026C 6A89               M         clrf    LATA                ; clear pins before proceeding
00026E 6A8A               M         clrf    LATB
000270 6A8B               M         clrf    LATC
000272 6A8C               M         clrf    LATD
000274 EF?? F???          M         goto    EXECUTION
                          M 
000278                    M Exit
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000278 0000               M         nop
                      00490         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
00027A 0E07               M         movlw   keyB                ; poll for mode
00027C 6210               M         cpfseq  KEY                 ; check this against key press
00027E EF?? F???          M         goto    Exit
                          M 
000282                    M Next
000282 6A89               M         clrf    LATA                ; clear pins before proceeding
000284 6A8A               M         clrf    LATB
000286 6A8B               M         clrf    LATC
000288 6A8C               M         clrf    LATD
00028A EF?? F???          M         goto    LOG
                          M 
00028E                    M Exit
00028E 0000               M         nop
                      00491         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000290 0E0B               M         movlw   keyC                ; poll for mode
000292 6210               M         cpfseq  KEY                 ; check this against key press
000294 EF?? F???          M         goto    Exit
                          M 
000298                    M Next
000298 6A89               M         clrf    LATA                ; clear pins before proceeding
00029A 6A8A               M         clrf    LATB
00029C 6A8B               M         clrf    LATC
00029E 6A8C               M         clrf    LATD
0002A0 EF?? F???          M         goto    PERM_LOG
                          M 
0002A4                    M Exit
0002A4 0000               M         nop
                      00492         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002A6 0E0F               M         movlw   keyD                ; poll for mode
0002A8 6210               M         cpfseq  KEY                 ; check this against key press
0002AA EF?? F???          M         goto    Exit
                          M 
0002AE                    M Next
0002AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0002B0 6A8A               M         clrf    LATB
0002B2 6A8B               M         clrf    LATC
0002B4 6A8C               M         clrf    LATD
0002B6 EF?? F???          M         goto    PC_MODE
                          M 
0002BA                    M Exit
0002BA 0000               M         nop
0002BC D???           00493         bra     HOLD_STANDBY
                      00494         
0002BE                00495 COLOUR_TEST
0002BE EC?? F???      00496         call    ClrLCD
0002C2 6A38           00497         clrf    inStandby
0002C4 0E01           00498         movlw   b'00000001'
0002C6 6E84           00499         movwf   PORTE
                      00500 
0002C8                00501 LOOPING
                      00502         Delay50N delayR, 0x3c
  0000                    M         local   loop
0002C8 0E3C               M         movlw   0x3c
0002CA 6E1A               M         movwf   delayR
                          M 
0002CC                    M loop
0002CC EC?? F???          M         call    Delay50ms
0002D0 2E1A               M         decfsz  delayR
0002D2 EF?? F???          M         goto    loop
0002D6 EC?? F???      00503         call    READ_ARDUINO
0002DA 6E2C           00504         movwf   DETECTION_VAL
0002DC 0F30           00505         addlw   0x30
0002DE EC?? F???      00506         call    WR_DATA
                      00507         Delay50N delayR, 0x3c
  0000                    M         local   loop
0002E2 0E3C               M         movlw   0x3c
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002E4 6E1A               M         movwf   delayR
                          M 
0002E6                    M loop
0002E6 EC?? F???          M         call    Delay50ms
0002EA 2E1A               M         decfsz  delayR
0002EC EF?? F???          M         goto    loop
                      00508         
0002F0 D???           00509         bra COLOUR_TEST
                      00510 
                      00511 ;*******************************************************************************
                      00512 ; execution mode
                      00513 ;*******************************************************************************
                      00514         
0002F2                00515 EXECUTION
0002F2 9ED5           00516         bcf     T0CON, TMR0ON       ; turning on timer
0002F4 6A38           00517         clrf    inStandby       
0002F6 EC?? F???      00518         call    ClearEEPROM_21
                      00519         
                      00520         ; save the starting time
0002FA EC?? F???      00521         call    SAVE_TIME
                      00522                 
                      00523         ; display
0002FE 681E           00524         setf    inExecution
000300 EC?? F???      00525         call    ClrLCD
                      00526         Display Exe1
  0000                    M         local   loop
000304 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000306 6EF8               M         movwf   TBLPTRU
000308 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00030A 6EF7               M         movwf   TBLPTRH
00030C 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00030E 6EF6               M         movwf   TBLPTRL
000310 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000312 50F5               M         movf    TABLAT, W
000314                    M loop
000314 EC?? F???          M         call    WR_DATA         ; write to LCD
000318 000B               M         tblrd+*                 ; next row in table
00031A 50F5               M         movf    TABLAT, W
00031C E1??               M         bnz     loop
00031E EC?? F???      00527         call    LCD_L2
                      00528         
000322 0EC3           00529         movlw   0xc3
000324 6ED7           00530         movwf   TMR0H
000326 0E28           00531         movlw   0x28
000328 6ED6           00532         movwf   TMR0L
                      00533         
00032A 8ED5           00534         bsf     T0CON, TMR0ON       ; turning on timer
                      00535         
                      00536         ; initialize variables
00032C 6A18           00537         clrf    OP_sec
00032E 6A19           00538         clrf    OP_INT
                      00539         
000330 6A2D           00540         clrf    ESKA
000332 6A2E           00541         clrf    ESKA_NOCAP
000334 6A2F           00542         clrf    YOP
000336 6A30           00543         clrf    YOP_NOCAP
000338 6A31           00544         clrf    TOTAL_BOTTLES
00033A 0E01           00545         movlw   d'1'
00033C 6E35           00546         movwf   TRAY_CURRENT
00033E 6A34           00547         clrf    TRAY_DELAY
                      00548         
000340 0E01           00549         movlw   d'1'
000342 CFE8 F???      00550         movff   WREG, databyte
000346 EC?? F???      00551         call    WRITE_ARDUINO
                      00552         Delay50N delayR, 0x03
  0000                    M         local   loop
00034A 0E03               M         movlw   0x03
00034C 6E1A               M         movwf   delayR
                          M 
00034E                    M loop
00034E EC?? F???          M         call    Delay50ms
000352 2E1A               M         decfsz  delayR
000354 EF?? F???          M         goto    loop
                      00553         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000358 EF?? F???      00554         goto    DETECTIONS
                      00555         
00035C                00556 CHECK_TIMEOUT
00035C 3818           00557     swapf       OP_sec, 0; 100's seconds
00035E 6E17           00558     movwf       temp
000360 0E0F           00559     movlw       0x0f
000362 1617           00560     andwf       temp
000364 0E01           00561     movlw       d'1'
000366 5E17           00562     subwf       temp
000368 E0??           00563     bz  EXIT_EXE        ; if 100 second, continue to check for 150s then 120s.
                      00564 
00036A 0012           00565     return
                      00566         
00036C                00567 DETECTIONS
00036C EC?? F???      00568         call    ClrLCD
                      00569         Display Welcome
  0000                    M         local   loop
000370 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
000372 6EF8               M         movwf   TBLPTRU
000374 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000376 6EF7               M         movwf   TBLPTRH
000378 0E??               M         movlw   low Welcome     ; Move Table<7:0>
00037A 6EF6               M         movwf   TBLPTRL
00037C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00037E 50F5               M         movf    TABLAT, W
000380                    M loop
000380 EC?? F???          M         call    WR_DATA         ; write to LCD
000384 000B               M         tblrd+*                 ; next row in table
000386 50F5               M         movf    TABLAT, W
000388 E1??               M         bnz     loop
                      00570 
                      00571         ; reading data from arduino 
                      00572         ; expect:   1 for eska cap
                      00573         ;           2 for eska no cap
                      00574         ;           3 for yop cap
                      00575         ;           4 for yop no cap
                      00576         ;           5 for no bottle, get outta here
                      00577         
00038A 0E02           00578         movlw   d'2'
00038C 6E37           00579         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
00038E C018 F017      00580         movff   OP_sec, temp    ; 10's seconds
000392 0E0F           00581         movlw   0x0f
000394 1617           00582         andwf   temp
000396 0E02           00583         movlw   d'2'
000398 6017           00584         cpfslt  temp, 0
00039A EC?? F???      00585         call    CHECK_TIMEOUT   ; if 120 second, terminate
                      00586         
00039E 6A37           00587         clrf    STOP_CONDITION  ; regular stop, saved in eeprom as 0
0003A0 0E0A           00588         movlw   d'10'
0003A2 5C31           00589         subwf   TOTAL_BOTTLES, 0
0003A4 E0??           00590         bz      EXIT_EXE
                      00591         
                      00592         Delay50N delayR, 0x0a
  0000                    M         local   loop
0003A6 0E0A               M         movlw   0x0a
0003A8 6E1A               M         movwf   delayR
                          M 
0003AA                    M loop
0003AA EC?? F???          M         call    Delay50ms
0003AE 2E1A               M         decfsz  delayR
0003B0 EF?? F???          M         goto    loop
0003B4 EC?? F???      00593         call    READ_ARDUINO
0003B8 6E2C           00594         movwf   DETECTION_VAL
                      00595         
                      00596         ; first check if there was a bottle detected, if so go to COLLECTIONS_STEP
0003BA 0E05           00597         movlw   d'5'
0003BC 5C2C           00598         subwf   DETECTION_VAL, 0
0003BE E0??           00599         bz      DETECTIONS
                      00600         
                      00601         ; okay we have a bottle, first increment total count then see what it is
0003C0 2A31           00602         incf    TOTAL_BOTTLES
                      00603         
                      00604         ; yop no cap
0003C2 0E04           00605         movlw   d'4'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003C4 5C2C           00606         subwf   DETECTION_VAL, 0
0003C6 E0??           00607         bz      INC_YOPNOCAP
                      00608         
                      00609         ; yop with cap
0003C8 0E03           00610         movlw   d'3'
0003CA 5C2C           00611         subwf   DETECTION_VAL, 0
0003CC E0??           00612         bz      INC_YOPCAP
                      00613         
                      00614         ; eska no cap
0003CE 0E02           00615         movlw   d'2'
0003D0 5C2C           00616         subwf   DETECTION_VAL, 0
0003D2 E0??           00617         bz      INC_ESKANOCAP
                      00618         
                      00619         ; eksa with cap
0003D4 0E01           00620         movlw   d'1'
0003D6 5C2C           00621         subwf   DETECTION_VAL, 0
0003D8 E0??           00622         bz      INC_ESKACAP
                      00623         
                      00624         ; edge case, cant determine bottle so check if done sorting
0003DA D???           00625         bra     DETECTIONS
                      00626         
0003DC                00627 INC_YOPNOCAP
0003DC 2A30           00628         incf    YOP_NOCAP
0003DE D???           00629         bra     DETECTIONS
                      00630         
0003E0                00631 INC_YOPCAP
0003E0 2A2F           00632         incf    YOP
0003E2 D???           00633         bra     DETECTIONS
                      00634         
0003E4                00635 INC_ESKANOCAP
0003E4 2A2E           00636         incf    ESKA_NOCAP
0003E6 D???           00637         bra     DETECTIONS
                      00638         
0003E8                00639 INC_ESKACAP
0003E8 2A2D           00640         incf    ESKA
0003EA D???           00641         bra     DETECTIONS
                      00642         
0003EC                00643 CHECK_DONE
                      00644         ; Challenging:  logic to figure out when the machine is done sorting 
                      00645         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00646         
                      00647         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00648         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00649         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00650         ; 150s then stop.
                      00651         
                      00652         ; NUMBER: 
                      00653         ; if the total bottle count is 10, then we are done (most basic end condition)
0003EC 6A37           00654         clrf    STOP_CONDITION  ; regular stop, saved in eeprom as 0
0003EE 0E0A           00655         movlw   d'10'
0003F0 5C31           00656         subwf   TOTAL_BOTTLES, 0
0003F2 E0??           00657         bz      EXIT_EXE
                      00658         
0003F4 D???           00659         bra     DETECTIONS
                      00660         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00661         ; qualified run has at least 4 bottles, with 1 of each different kind
0003F6 0E03           00662         movlw   d'3'
0003F8 6431           00663         cpfsgt  TOTAL_BOTTLES
0003FA EF?? F???      00664         goto    DETECTIONS
                      00665 
0003FE 0E00           00666         movlw   d'0'
000400 6430           00667         cpfsgt  YOP_NOCAP, 0
000402 EF?? F???      00668         goto    DETECTIONS
                      00669         
000406 0E00           00670         movlw   d'0'
000408 642F           00671         cpfsgt  YOP, 0
00040A EF?? F???      00672         goto    DETECTIONS
                      00673         
00040E 0E00           00674         movlw   d'0'
000410 642E           00675         cpfsgt  ESKA_NOCAP, 0
000412 EF?? F???      00676         goto    DETECTIONS
                      00677         
000416 0E00           00678         movlw   d'0'
000418 642D           00679         cpfsgt  ESKA, 0
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00041A EF?? F???      00680         goto    DETECTIONS
                      00681         
                      00682         ; finally, if we get here then consider the termination optimized.
00041E 0E03           00683         movlw   d'3'
000420 6E37           00684         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
000422 EF?? F???      00685         goto    EXIT_EXE
                      00686         
000426                00687 EXIT_EXE
                      00688         ; stop timer and save the execution time to eeprom
000426 9ED5           00689         bcf         T0CON, TMR0ON
000428 EC?? F???      00690         call        SAVE_EXE_TIME
                      00691                 
                      00692         ; Clear inExecution flag to stop '*' interrupts
00042C 6A1E           00693         clrf        inExecution
                      00694                 
                      00695         ; turn off the dc motor
00042E 0E00           00696         movlw   d'0'
000430 CFE8 F???      00697         movff   WREG, databyte
000434 EC?? F???      00698         call    WRITE_ARDUINO
                      00699         
000438 EC?? F???      00700         call        ClrLCD
                      00701         Display     SAVE
  0000                    M         local   loop
00043C 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
00043E 6EF8               M         movwf   TBLPTRU
000440 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000442 6EF7               M         movwf   TBLPTRH
000444 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000446 6EF6               M         movwf   TBLPTRL
000448 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00044A 50F5               M         movf    TABLAT, W
00044C                    M loop
00044C EC?? F???          M         call    WR_DATA         ; write to LCD
000450 000B               M         tblrd+*                 ; next row in table
000452 50F5               M         movf    TABLAT, W
000454 E1??               M         bnz     loop
000456 EC?? F???      00702         call        SaveData
00045A EF?? F???      00703         goto        LOG
                      00704 
                      00705 ;*******************************************************************************
                      00706 ; sorting statistics log mode
                      00707 ;*******************************************************************************
                      00708         
00045E                00709 LOG
00045E 6A38           00710         clrf    inStandby
000460 EC?? F???      00711         call    ClrLCD
                      00712         Display Log1
  0000                    M         local   loop
000464 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000466 6EF8               M         movwf   TBLPTRU
000468 0E??               M         movlw   high Log1       ; Move Table<15:8>
00046A 6EF7               M         movwf   TBLPTRH
00046C 0E??               M         movlw   low Log1        ; Move Table<7:0>
00046E 6EF6               M         movwf   TBLPTRL
000470 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000472 50F5               M         movf    TABLAT, W
000474                    M loop
000474 EC?? F???          M         call    WR_DATA         ; write to LCD
000478 000B               M         tblrd+*                 ; next row in table
00047A 50F5               M         movf    TABLAT, W
00047C E1??               M         bnz     loop
                      00713 
                      00714         ; display most recent run data
00047E 0E0A           00715         movlw   d'10'
000480 6E21           00716         movwf   L_EE
000482 EC?? F???      00717         call    DisplayExeTime
                      00718 
000486 EC?? F???      00719         call    LCD_L2
00048A 0E0D           00720         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
00048C 6E21           00721         movwf   L_EE
00048E EC?? F???      00722         call    DispOpSort
                      00723 
000492                00724 HOLD_LOG
000492 EC?? F???      00725         call    READ_KEY
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00726         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000496 0E07               M         movlw   keyB                ; poll for mode
000498 6210               M         cpfseq  KEY                 ; check this against key press
00049A EF?? F???          M         goto    Exit
                          M 
00049E                    M Next
00049E 6A89               M         clrf    LATA                ; clear pins before proceeding
0004A0 6A8A               M         clrf    LATB
0004A2 6A8B               M         clrf    LATC
0004A4 6A8C               M         clrf    LATD
0004A6 EF?? F???          M         goto    LOG_INFO
                          M 
0004AA                    M Exit
0004AA 0000               M         nop
                      00727         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0004AC 0E0D               M         movlw   key0                ; poll for mode
0004AE 6210               M         cpfseq  KEY                 ; check this against key press
0004B0 EF?? F???          M         goto    Exit
                          M 
0004B4                    M Next
0004B4 6A89               M         clrf    LATA                ; clear pins before proceeding
0004B6 6A8A               M         clrf    LATB
0004B8 6A8B               M         clrf    LATC
0004BA 6A8C               M         clrf    LATD
0004BC EF?? F???          M         goto    STANDBY
                          M 
0004C0                    M Exit
0004C0 0000               M         nop
0004C2 D???           00728         bra     HOLD_LOG
                      00729 
0004C4                00730 LOG_INFO
0004C4 EC?? F???      00731         call    ClrLCD
0004C8 6A21           00732         clrf    L_EE
0004CA EC?? F???      00733         call    DispOpRTC
                      00734         
0004CE EC?? F???      00735         call    LCD_L2
                      00736         Display LogInfo2
  0000                    M         local   loop
0004D2 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0004D4 6EF8               M         movwf   TBLPTRU
0004D6 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0004D8 6EF7               M         movwf   TBLPTRH
0004DA 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0004DC 6EF6               M         movwf   TBLPTRL
0004DE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004E0 50F5               M         movf    TABLAT, W
0004E2                    M loop
0004E2 EC?? F???          M         call    WR_DATA         ; write to LCD
0004E6 000B               M         tblrd+*                 ; next row in table
0004E8 50F5               M         movf    TABLAT, W
0004EA E1??               M         bnz     loop
0004EC 6A20           00737         clrf    H_EE
0004EE 6A21           00738         clrf    L_EE
0004F0                00739 HOLD_LOG_INFO
0004F0 EC?? F???      00740         call    READ_KEY
                      00741         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0004F4 0E0D               M         movlw   key0                ; poll for mode
0004F6 6210               M         cpfseq  KEY                 ; check this against key press
0004F8 EF?? F???          M         goto    Exit
                          M 
0004FC                    M Next
0004FC 6A89               M         clrf    LATA                ; clear pins before proceeding
0004FE 6A8A               M         clrf    LATB
000500 6A8B               M         clrf    LATC
000502 6A8C               M         clrf    LATD
000504 EF?? F???          M         goto    LOG
                          M 
000508                    M Exit
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000508 0000               M         nop
00050A D???           00742         bra     HOLD_LOG
                      00743         
                      00744 ;*******************************************************************************
                      00745 ; permanent logs
                      00746 ;*******************************************************************************
                      00747 
00050C                00748 PERM_LOG
00050C 6838           00749         setf    inStandby
00050E EC?? F???      00750         call    ClrLCD
                      00751         Display PermLog1
  0000                    M         local   loop
000512 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000514 6EF8               M         movwf   TBLPTRU
000516 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000518 6EF7               M         movwf   TBLPTRH
00051A 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00051C 6EF6               M         movwf   TBLPTRL
00051E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000520 50F5               M         movf    TABLAT, W
000522                    M loop
000522 EC?? F???          M         call    WR_DATA         ; write to LCD
000526 000B               M         tblrd+*                 ; next row in table
000528 50F5               M         movf    TABLAT, W
00052A E1??               M         bnz     loop
00052C EC?? F???      00752         call    LCD_L2
                      00753         Display PermLog2
  0000                    M         local   loop
000530 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000532 6EF8               M         movwf   TBLPTRU
000534 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000536 6EF7               M         movwf   TBLPTRH
000538 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
00053A 6EF6               M         movwf   TBLPTRL
00053C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00053E 50F5               M         movf    TABLAT, W
000540                    M loop
000540 EC?? F???          M         call    WR_DATA         ; write to LCD
000544 000B               M         tblrd+*                 ; next row in table
000546 50F5               M         movf    TABLAT, W
000548 E1??               M         bnz     loop
                      00754         
00054A                00755 HOLD_PERM_LOG
00054A EC?? F???      00756         call    READ_KEY
                      00757         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00054E 0E0D               M         movlw   key0                ; poll for mode
000550 6210               M         cpfseq  KEY                 ; check this against key press
000552 EF?? F???          M         goto    Exit
                          M 
000556                    M Next
000556 6A89               M         clrf    LATA                ; clear pins before proceeding
000558 6A8A               M         clrf    LATB
00055A 6A8B               M         clrf    LATC
00055C 6A8C               M         clrf    LATD
00055E EF?? F???          M         goto    STANDBY
                          M 
000562                    M Exit
000562 0000               M         nop
                      00758         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000564 0E00               M         movlw   key1                ; poll for mode
000566 6210               M         cpfseq  KEY                 ; check this against key press
000568 EF?? F???          M         goto    Exit
                          M 
00056C                    M Next
00056C 6A89               M         clrf    LATA                ; clear pins before proceeding
00056E 6A8A               M         clrf    LATB
000570 6A8B               M         clrf    LATC
000572 6A8C               M         clrf    LATD
000574 EF?? F???          M         goto    PLOG
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000578                    M Exit
000578 0000               M         nop
                      00759         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00057A 0E01               M         movlw   key2                ; poll for mode
00057C 6210               M         cpfseq  KEY                 ; check this against key press
00057E EF?? F???          M         goto    Exit
                          M 
000582                    M Next
000582 6A89               M         clrf    LATA                ; clear pins before proceeding
000584 6A8A               M         clrf    LATB
000586 6A8B               M         clrf    LATC
000588 6A8C               M         clrf    LATD
00058A EF?? F???          M         goto    PLOG
                          M 
00058E                    M Exit
00058E 0000               M         nop
                      00760         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000590 0E02               M         movlw   key3                ; poll for mode
000592 6210               M         cpfseq  KEY                 ; check this against key press
000594 EF?? F???          M         goto    Exit
                          M 
000598                    M Next
000598 6A89               M         clrf    LATA                ; clear pins before proceeding
00059A 6A8A               M         clrf    LATB
00059C 6A8B               M         clrf    LATC
00059E 6A8C               M         clrf    LATD
0005A0 EF?? F???          M         goto    PLOG
                          M 
0005A4                    M Exit
0005A4 0000               M         nop
                      00761         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0005A6 0E04               M         movlw   key4                ; poll for mode
0005A8 6210               M         cpfseq  KEY                 ; check this against key press
0005AA EF?? F???          M         goto    Exit
                          M 
0005AE                    M Next
0005AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0005B0 6A8A               M         clrf    LATB
0005B2 6A8B               M         clrf    LATC
0005B4 6A8C               M         clrf    LATD
0005B6 EF?? F???          M         goto    PLOG
                          M 
0005BA                    M Exit
0005BA 0000               M         nop
                      00762         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0005BC 0E05               M         movlw   key5                ; poll for mode
0005BE 6210               M         cpfseq  KEY                 ; check this against key press
0005C0 EF?? F???          M         goto    Exit
                          M 
0005C4                    M Next
0005C4 6A89               M         clrf    LATA                ; clear pins before proceeding
0005C6 6A8A               M         clrf    LATB
0005C8 6A8B               M         clrf    LATC
0005CA 6A8C               M         clrf    LATD
0005CC EF?? F???          M         goto    PLOG
                          M 
0005D0                    M Exit
0005D0 0000               M         nop
                      00763         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0005D2 0E06               M         movlw   key6                ; poll for mode
0005D4 6210               M         cpfseq  KEY                 ; check this against key press
0005D6 EF?? F???          M         goto    Exit
                          M 
0005DA                    M Next
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0005DC 6A8A               M         clrf    LATB
0005DE 6A8B               M         clrf    LATC
0005E0 6A8C               M         clrf    LATD
0005E2 EF?? F???          M         goto    PLOG
                          M 
0005E6                    M Exit
0005E6 0000               M         nop
                      00764         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0005E8 0E08               M         movlw   key7                ; poll for mode
0005EA 6210               M         cpfseq  KEY                 ; check this against key press
0005EC EF?? F???          M         goto    Exit
                          M 
0005F0                    M Next
0005F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005F2 6A8A               M         clrf    LATB
0005F4 6A8B               M         clrf    LATC
0005F6 6A8C               M         clrf    LATD
0005F8 EF?? F???          M         goto    PLOG
                          M 
0005FC                    M Exit
0005FC 0000               M         nop
                      00765         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0005FE 0E09               M         movlw   key8                ; poll for mode
000600 6210               M         cpfseq  KEY                 ; check this against key press
000602 EF?? F???          M         goto    Exit
                          M 
000606                    M Next
000606 6A89               M         clrf    LATA                ; clear pins before proceeding
000608 6A8A               M         clrf    LATB
00060A 6A8B               M         clrf    LATC
00060C 6A8C               M         clrf    LATD
00060E EF?? F???          M         goto    PLOG
                          M 
000612                    M Exit
000612 0000               M         nop
                      00766         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000614 0E0A               M         movlw   key9                ; poll for mode
000616 6210               M         cpfseq  KEY                 ; check this against key press
000618 EF?? F???          M         goto    Exit
                          M 
00061C                    M Next
00061C 6A89               M         clrf    LATA                ; clear pins before proceeding
00061E 6A8A               M         clrf    LATB
000620 6A8B               M         clrf    LATC
000622 6A8C               M         clrf    LATD
000624 EF?? F???          M         goto    PLOG
                          M 
000628                    M Exit
000628 0000               M         nop
00062A D???           00767         bra HOLD_PERM_LOG
                      00768         
00062C                00769 PLOG
00062C 6A38           00770         clrf    inStandby
00062E EC?? F???      00771         call    ClrLCD
                      00772         Display PermLog1
  0000                    M         local   loop
000632 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000634 6EF8               M         movwf   TBLPTRU
000636 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000638 6EF7               M         movwf   TBLPTRH
00063A 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00063C 6EF6               M         movwf   TBLPTRL
00063E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000640 50F5               M         movf    TABLAT, W
000642                    M loop
000642 EC?? F???          M         call    WR_DATA         ; write to LCD
000646 000B               M         tblrd+*                 ; next row in table
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000648 50F5               M         movf    TABLAT, W
00064A E1??               M         bnz     loop
                      00773         
                      00774         ; find the key press value
00064C C010 FFE8      00775         movff   KEY, WREG
000650 2AE8           00776         incf    WREG        ; W = KEY+1
000652 6E17           00777         movwf   temp
                      00778         
000654 42E8           00779         rrncf   WREG        ; division by 4
000656 9EE8           00780         bcf     WREG, 7     ; clear last bit, overflow from rotate
000658 42E8           00781         rrncf   WREG        
00065A 9EE8           00782         bcf     WREG, 7
00065C 5E17           00783         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00065E C017 FFE8      00784         movff   temp, WREG
000662 C017 F011      00785         movff   temp, temp_KEY
000666 0D15           00786         mullw   d'21'       ; indexed as mutliples of 21
                      00787 
000668                00788 displayNum
000668 C011 FFE8      00789         movff   temp_KEY, WREG
00066C 0F30           00790         addlw   0x30
00066E EC?? F???      00791         call    WR_DATA
000672 0E3A           00792         movlw   ":"
000674 EC?? F???      00793         call    WR_DATA
000678 0E20           00794         movlw   " "
00067A EC?? F???      00795         call    WR_DATA
                      00796         
00067E CFF3 F021      00797         movff   PRODL, L_EE
000682 0E00           00798         movlw   d'0'
000684 2621           00799         addwf   L_EE
                      00800         READEE  OP_sec, H_EE, L_EE
000686 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00068A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00068E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000690 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000692 80A6               M         bsf     EECON1, RD          ; read EEPROM
000694 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000698 2A21           00801         incf    L_EE
                      00802         READEE  OP_INT, H_EE, L_EE
00069A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00069E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0006A2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006A4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0006A6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0006A8 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0006AC 2A21           00803         incf    L_EE
0006AE EC?? F???      00804         call    DisplayExeTime
0006B2 CFF3 F021      00805         movff   PRODL, L_EE
                      00806         
                      00807         ; reset eeprom to beginning
0006B6 EC?? F???      00808         call    LCD_L2
0006BA CFF3 F021      00809         movff   PRODL, L_EE
0006BE EC?? F???      00810         call    DispOpRTC
                      00811         
0006C2                00812 HOLD_PLOG
0006C2 EC?? F???      00813         call    READ_KEY
                      00814         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0006C6 0E03               M         movlw   keyA                ; poll for mode
0006C8 6210               M         cpfseq  KEY                 ; check this against key press
0006CA EF?? F???          M         goto    Exit
                          M 
0006CE                    M Next
0006CE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D0 6A8A               M         clrf    LATB
0006D2 6A8B               M         clrf    LATC
0006D4 6A8C               M         clrf    LATD
0006D6 EF?? F???          M         goto    PLOG_DETAILS
                          M 
0006DA                    M Exit
0006DA 0000               M         nop
                      00815         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006DC 0E0D               M         movlw   key0                ; poll for mode
0006DE 6210               M         cpfseq  KEY                 ; check this against key press
0006E0 EF?? F???          M         goto    Exit
                          M 
0006E4                    M Next
0006E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E6 6A8A               M         clrf    LATB
0006E8 6A8B               M         clrf    LATC
0006EA 6A8C               M         clrf    LATD
0006EC EF?? F???          M         goto    PERM_LOG
                          M 
0006F0                    M Exit
0006F0 0000               M         nop
0006F2 D???           00816         bra HOLD_PLOG
                      00817         
0006F4                00818 PLOG_DETAILS
0006F4 EC?? F???      00819         call    ClrLCD
                      00820         
                      00821         Display Log1
  0000                    M         local   loop
0006F8 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0006FA 6EF8               M         movwf   TBLPTRU
0006FC 0E??               M         movlw   high Log1       ; Move Table<15:8>
0006FE 6EF7               M         movwf   TBLPTRH
000700 0E??               M         movlw   low Log1        ; Move Table<7:0>
000702 6EF6               M         movwf   TBLPTRL
000704 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000706 50F5               M         movf    TABLAT, W
000708                    M loop
000708 EC?? F???          M         call    WR_DATA         ; write to LCD
00070C 000B               M         tblrd+*                 ; next row in table
00070E 50F5               M         movf    TABLAT, W
000710 E1??               M         bnz     loop
000712 EC?? F???      00822         call    DisplayExeTime
                      00823         
000716 EC?? F???      00824         call    LCD_L2
00071A EC?? F???      00825         call    DispOpSort
                      00826         
00071E                00827 HOLD_PLOG_DETAILS
00071E EC?? F???      00828         call    READ_KEY
                      00829         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000722 0E0D               M         movlw   key0                ; poll for mode
000724 6210               M         cpfseq  KEY                 ; check this against key press
000726 EF?? F???          M         goto    Exit
                          M 
00072A                    M Next
00072A 6A89               M         clrf    LATA                ; clear pins before proceeding
00072C 6A8A               M         clrf    LATB
00072E 6A8B               M         clrf    LATC
000730 6A8C               M         clrf    LATD
000732 EF?? F???          M         goto    PERM_LOG
                          M 
000736                    M Exit
000736 0000               M         nop
000738 D???           00830         bra HOLD_PLOG_DETAILS
                      00831         
                      00832 ;*******************************************************************************
                      00833 ; pc interface
                      00834 ;*******************************************************************************
                      00835 
00073A                00836 PC_MODE
00073A 6838           00837         setf    inStandby
00073C EC?? F???      00838         call    ClrLCD
                      00839         Display PC1
  0000                    M         local   loop
000740 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000742 6EF8               M         movwf   TBLPTRU
000744 0E??               M         movlw   high PC1        ; Move Table<15:8>
000746 6EF7               M         movwf   TBLPTRH
000748 0E??               M         movlw   low PC1         ; Move Table<7:0>
00074A 6EF6               M         movwf   TBLPTRL
00074C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00074E 50F5               M         movf    TABLAT, W
000750                    M loop
000750 EC?? F???          M         call    WR_DATA         ; write to LCD
000754 000B               M         tblrd+*                 ; next row in table
000756 50F5               M         movf    TABLAT, W
000758 E1??               M         bnz     loop
00075A EC?? F???      00840         call    LCD_L2
                      00841         Display PC2
  0000                    M         local   loop
00075E 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000760 6EF8               M         movwf   TBLPTRU
000762 0E??               M         movlw   high PC2        ; Move Table<15:8>
000764 6EF7               M         movwf   TBLPTRH
000766 0E??               M         movlw   low PC2         ; Move Table<7:0>
000768 6EF6               M         movwf   TBLPTRL
00076A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00076C 50F5               M         movf    TABLAT, W
00076E                    M loop
00076E EC?? F???          M         call    WR_DATA         ; write to LCD
000772 000B               M         tblrd+*                 ; next row in table
000774 50F5               M         movf    TABLAT, W
000776 E1??               M         bnz     loop
000778 CFF9 F029      00842         movff   PCL, PC_PCL
00077C CFFA F02A      00843         movff   PCLATH, PC_PCLATH
000780 CFFB F02B      00844         movff   PCLATU, PC_PCLATU
                      00845         
000784                00846 HOLD_PC
000784 EC?? F???      00847         call    READ_KEY
                      00848         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000788 0E0D               M         movlw   key0                ; poll for mode
00078A 6210               M         cpfseq  KEY                 ; check this against key press
00078C EF?? F???          M         goto    Exit
                          M 
000790                    M Next
000790 6A89               M         clrf    LATA                ; clear pins before proceeding
000792 6A8A               M         clrf    LATB
000794 6A8B               M         clrf    LATC
000796 6A8C               M         clrf    LATD
000798 EF?? F???          M         goto    STANDBY
                          M 
00079C                    M Exit
00079C 0000               M         nop
                      00849         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
00079E 0E0E               M         movlw   keyH                ; poll for mode
0007A0 6210               M         cpfseq  KEY                 ; check this against key press
0007A2 EF?? F???          M         goto    Exit
                          M 
0007A6                    M Next
0007A6 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A8 6A8A               M         clrf    LATB
0007AA 6A8B               M         clrf    LATC
0007AC 6A8C               M         clrf    LATD
0007AE EF?? F???          M         goto    PC_TRANSFER
                          M 
0007B2                    M Exit
0007B2 0000               M         nop
0007B4 D???           00850         bra     HOLD_PC
                      00851 
0007B6                00852 PC_TRANSFER
0007B6 6A38           00853         clrf    inStandby
0007B8 6828           00854         setf    transferring
0007BA EC?? F???      00855         call    ClrLCD
                      00856         Display PCTransfer
  0000                    M         local   loop
0007BE 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0007C0 6EF8               M         movwf   TBLPTRU
0007C2 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0007C4 6EF7               M         movwf   TBLPTRH
0007C6 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0007C8 6EF6               M         movwf   TBLPTRL
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007CA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007CC 50F5               M         movf    TABLAT, W
0007CE                    M loop
0007CE EC?? F???          M         call    WR_DATA         ; write to LCD
0007D2 000B               M         tblrd+*                 ; next row in table
0007D4 50F5               M         movf    TABLAT, W
0007D6 E1??               M         bnz     loop
0007D8 EC?? F???      00857         call    DataUSART
0007DC 6A28           00858         clrf    transferring
0007DE EF?? F???      00859         goto    STANDBY
                      00860         
                      00861 ;*******************************************************************************
                      00862 ; subroutines
                      00863 ;*******************************************************************************
                      00864 
0007E2                00865 SaveData
0007E2 C02D FFE8      00866         movff       ESKA, WREG
0007E6 0F30           00867         addlw       0x30
                      00868         WriteEE     WREG, H_EE, L_EE
0007E8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0007EC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0007F0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0007F4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0007F6 D???               M         bra     $-2
                          M 
0007F8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0007FA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0007FC 84A6               M         bsf     EECON1, WREN        ; enable write
0007FE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000800 98A1               M         bcf     PIR2, EEIF
                          M 
000802 0E55               M         movlw   0x55
000804 6EA7               M         movwf   EECON2              ; write 55h
000806 0EAA               M         movlw   0xaa
000808 6EA7               M         movwf   EECON2              ; write 0xaa
00080A 82A6               M         bsf     EECON1, WR          ; begin write
00080C B2A6               M         btfsc   EECON1, WR
00080E D???               M         bra     $-2
                          M 
000810 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000812 94A6               M         bcf     EECON1, WREN        ; disable writes
000814 2A21           00869         incf        L_EE
                      00870         
000816 C02E FFE8      00871         movff       ESKA_NOCAP, WREG
00081A 0F30           00872         addlw       0x30
                      00873         WriteEE     WREG, H_EE, L_EE
00081C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000820 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000824 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000828 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00082A D???               M         bra     $-2
                          M 
00082C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00082E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000830 84A6               M         bsf     EECON1, WREN        ; enable write
000832 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000834 98A1               M         bcf     PIR2, EEIF
                          M 
000836 0E55               M         movlw   0x55
000838 6EA7               M         movwf   EECON2              ; write 55h
00083A 0EAA               M         movlw   0xaa
00083C 6EA7               M         movwf   EECON2              ; write 0xaa
00083E 82A6               M         bsf     EECON1, WR          ; begin write
000840 B2A6               M         btfsc   EECON1, WR
000842 D???               M         bra     $-2
                          M 
000844 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000846 94A6               M         bcf     EECON1, WREN        ; disable writes
000848 2A21           00874         incf        L_EE
                      00875         
00084A C02F FFE8      00876         movff       YOP, WREG
00084E 0F30           00877         addlw       0x30
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00878         WriteEE     WREG, H_EE, L_EE
000850 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000854 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000858 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00085C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00085E D???               M         bra     $-2
                          M 
000860 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000862 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000864 84A6               M         bsf     EECON1, WREN        ; enable write
000866 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000868 98A1               M         bcf     PIR2, EEIF
                          M 
00086A 0E55               M         movlw   0x55
00086C 6EA7               M         movwf   EECON2              ; write 55h
00086E 0EAA               M         movlw   0xaa
000870 6EA7               M         movwf   EECON2              ; write 0xaa
000872 82A6               M         bsf     EECON1, WR          ; begin write
000874 B2A6               M         btfsc   EECON1, WR
000876 D???               M         bra     $-2
                          M 
000878 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00087A 94A6               M         bcf     EECON1, WREN        ; disable writes
00087C 2A21           00879         incf        L_EE
                      00880         
00087E C030 FFE8      00881         movff       YOP_NOCAP, WREG
000882 0F30           00882         addlw       0x30
                      00883         WriteEE     WREG, H_EE, L_EE
000884 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000888 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00088C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000890 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000892 D???               M         bra     $-2
                          M 
000894 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000896 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000898 84A6               M         bsf     EECON1, WREN        ; enable write
00089A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00089C 98A1               M         bcf     PIR2, EEIF
                          M 
00089E 0E55               M         movlw   0x55
0008A0 6EA7               M         movwf   EECON2              ; write 55h
0008A2 0EAA               M         movlw   0xaa
0008A4 6EA7               M         movwf   EECON2              ; write 0xaa
0008A6 82A6               M         bsf     EECON1, WR          ; begin write
0008A8 B2A6               M         btfsc   EECON1, WR
0008AA D???               M         bra     $-2
                          M 
0008AC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008AE 94A6               M         bcf     EECON1, WREN        ; disable writes
0008B0 2A21           00884         incf        L_EE
                      00885         
0008B2 C037 FFE8      00886         movff       STOP_CONDITION, WREG
0008B6 0F30           00887         addlw       0x30
                      00888         WriteEE     WREG, H_EE, L_EE
0008B8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008BC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008C0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008C4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008C6 D???               M         bra     $-2
                          M 
0008C8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008CA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008CC 84A6               M         bsf     EECON1, WREN        ; enable write
0008CE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008D0 98A1               M         bcf     PIR2, EEIF
                          M 
0008D2 0E55               M         movlw   0x55
0008D4 6EA7               M         movwf   EECON2              ; write 55h
0008D6 0EAA               M         movlw   0xaa
0008D8 6EA7               M         movwf   EECON2              ; write 0xaa
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008DA 82A6               M         bsf     EECON1, WR          ; begin write
0008DC B2A6               M         btfsc   EECON1, WR
0008DE D???               M         bra     $-2
                          M 
0008E0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008E2 94A6               M         bcf     EECON1, WREN        ; disable writes
0008E4 2A21           00889         incf        L_EE
                      00890         
0008E6 0E00           00891         movlw       d'0'
0008E8 6E20           00892         movwf       H_EE
0008EA 0EA8           00893         movlw       d'168'              ; take d'168' as last
0008EC 6E21           00894         movwf       L_EE
0008EE 0E00           00895         movlw       d'0'
0008F0 6E23           00896         movwf       tempH_EE
0008F2 0EDC           00897         movlw       d'220'              ; temp for low constant
0008F4 6E24           00898         movwf       tempL_EE
                      00899         
0008F6 6A16           00900         clrf        counter2
0008F8 6A15           00901         clrf        counter
                      00902         
0008FA                00903 ShiftLoop
0008FA 2A15           00904         incf            counter
                      00905         READEE          REG_EE, H_EE, L_EE
0008FC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000900 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000904 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000906 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000908 80A6               M         bsf     EECON1, RD          ; read EEPROM
00090A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00090E 0E15           00906         movlw           d'21'
000910 2621           00907         addwf           L_EE
                      00908         WriteEE         REG_EE, H_EE, L_EE
000912 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000916 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00091A C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
00091E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000920 D???               M         bra     $-2
                          M 
000922 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000924 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000926 84A6               M         bsf     EECON1, WREN        ; enable write
000928 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00092A 98A1               M         bcf     PIR2, EEIF
                          M 
00092C 0E55               M         movlw   0x55
00092E 6EA7               M         movwf   EECON2              ; write 55h
000930 0EAA               M         movlw   0xaa
000932 6EA7               M         movwf   EECON2              ; write 0xaa
000934 82A6               M         bsf     EECON1, WR          ; begin write
000936 B2A6               M         btfsc   EECON1, WR
000938 D???               M         bra     $-2
                          M 
00093A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00093C 94A6               M         bcf     EECON1, WREN        ; disable writes
00093E 0E14           00909         movlw           d'20'
000940 5E21           00910         subwf           L_EE
000942 0E15           00911         movlw           d'21'
000944 6215           00912         cpfseq          counter
000946 EF?? F???      00913         goto            ShiftLoop
                      00914         
                      00915         ; Set EEPROM address to the previous 21 byte block, and reset temp address
00094A 0E2A           00916         movlw           d'42'
00094C 5E21           00917         subwf           L_EE
00094E 0EDC           00918         movlw           d'220'
000950 6E24           00919         movwf           tempL_EE
000952 6A15           00920         clrf            counter
000954 2A16           00921         incf            counter2
000956 0E09           00922         movlw           d'9'
000958 6216           00923         cpfseq          counter2        ; Skip if 9 shifts were made
00095A EF?? F???      00924         goto            ShiftLoop
                      00925 
00095E 0012           00926         return
                      00927         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000960                00928 RTC_INIT
                      00929         ; set sda and scl to high
000960 9882           00930         bcf     PORTC, 4
000962 9682           00931         bcf     PORTC, 3
000964 8894           00932         bsf     TRISC, 4
000966 8694           00933         bsf     TRISC, 3
                      00934         
000968 EC?? F???      00935         call    INIT_RTC
                      00936         
                      00937         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
00096C 0012           00938 return
                      00939         
00096E                00940 SAVE_TIME
                      00941         rtc_read    0x02        ; hours     ; need to call this twice idk y
00096E 0E02               M     movlw   0x02
000970 6E??               M     movwf   regaddress
000972 EC?? F???          M     call    read_rtc
000976 C??? FFE8          M     movff   datachar, WREG
00097A EC?? F???          M     call    rtc_convert
                      00942         rtc_read    0x02        ; hours
00097E 0E02               M     movlw   0x02
000980 6E??               M     movwf   regaddress
000982 EC?? F???          M     call    read_rtc
000986 C??? FFE8          M     movff   datachar, WREG
00098A EC?? F???          M     call    rtc_convert
00098E EC?? F???      00943         call    WriteEE_RTC
                      00944         rtc_read    0x01        ; minutes
000992 0E01               M     movlw   0x01
000994 6E??               M     movwf   regaddress
000996 EC?? F???          M     call    read_rtc
00099A C??? FFE8          M     movff   datachar, WREG
00099E EC?? F???          M     call    rtc_convert
0009A2 EC?? F???      00945         call    WriteEE_RTC
                      00946         rtc_read    0x06        ; years
0009A6 0E06               M     movlw   0x06
0009A8 6E??               M     movwf   regaddress
0009AA EC?? F???          M     call    read_rtc
0009AE C??? FFE8          M     movff   datachar, WREG
0009B2 EC?? F???          M     call    rtc_convert
0009B6 EC?? F???      00947         call    WriteEE_RTC
                      00948         rtc_read    0x05        ; months
0009BA 0E05               M     movlw   0x05
0009BC 6E??               M     movwf   regaddress
0009BE EC?? F???          M     call    read_rtc
0009C2 C??? FFE8          M     movff   datachar, WREG
0009C6 EC?? F???          M     call    rtc_convert
0009CA EC?? F???      00949         call    WriteEE_RTC
                      00950         rtc_read    0x04        ; days
0009CE 0E04               M     movlw   0x04
0009D0 6E??               M     movwf   regaddress
0009D2 EC?? F???          M     call    read_rtc
0009D6 C??? FFE8          M     movff   datachar, WREG
0009DA EC?? F???          M     call    rtc_convert
0009DE EC?? F???      00951         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0009E2 0012           00952 return
                      00953         
0009E4                00954 SAVE_EXE_TIME
                      00955         
Warning[202]: Argument out of range.  Least significant bits used.
0009E4 3818           00956         swapf   OP_sec, WREG    ; 100's seconds
0009E6 6E17           00957         movwf   temp
0009E8 0E0F           00958         movlw   0x0f
0009EA 1617           00959         andwf   temp
0009EC C017 FFE8      00960         movff   temp, WREG
0009F0 0F30           00961         addlw   0x30    
                      00962         WriteEE WREG, H_EE, L_EE
0009F2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009F6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009FA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009FE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A00 D???               M         bra     $-2
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000A02 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A04 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A06 84A6               M         bsf     EECON1, WREN        ; enable write
000A08 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A0A 98A1               M         bcf     PIR2, EEIF
                          M 
000A0C 0E55               M         movlw   0x55
000A0E 6EA7               M         movwf   EECON2              ; write 55h
000A10 0EAA               M         movlw   0xaa
000A12 6EA7               M         movwf   EECON2              ; write 0xaa
000A14 82A6               M         bsf     EECON1, WR          ; begin write
000A16 B2A6               M         btfsc   EECON1, WR
000A18 D???               M         bra     $-2
                          M 
000A1A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A1C 94A6               M         bcf     EECON1, WREN        ; disable writes
000A1E 2A21           00963         incf    L_EE
                      00964         
000A20 C018 F017      00965         movff   OP_sec, temp    ; 10's seconds
000A24 0E0F           00966         movlw   0x0f
000A26 1617           00967         andwf   temp            ; Temp = lower nibble of Op_sec
000A28 C017 FFE8      00968         movff   temp, WREG      ; W = Temp
000A2C 0F30           00969         addlw   0x30            ; Convert to ASCII
                      00970         WriteEE WREG, H_EE, L_EE
000A2E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A32 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A36 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A3A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A3C D???               M         bra     $-2
                          M 
000A3E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A40 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A42 84A6               M         bsf     EECON1, WREN        ; enable write
000A44 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A46 98A1               M         bcf     PIR2, EEIF
                          M 
000A48 0E55               M         movlw   0x55
000A4A 6EA7               M         movwf   EECON2              ; write 55h
000A4C 0EAA               M         movlw   0xaa
000A4E 6EA7               M         movwf   EECON2              ; write 0xaa
000A50 82A6               M         bsf     EECON1, WR          ; begin write
000A52 B2A6               M         btfsc   EECON1, WR
000A54 D???               M         bra     $-2
                          M 
000A56 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A58 94A6               M         bcf     EECON1, WREN        ; disable writes
000A5A 2A21           00971         incf    L_EE
                      00972         
Warning[202]: Argument out of range.  Least significant bits used.
000A5C 3819           00973         swapf   OP_INT, WREG    ;1's seconds
000A5E 6E17           00974         movwf   temp
000A60 0E0F           00975         movlw   0x0f
000A62 1617           00976         andwf   temp
000A64 C017 FFE8      00977         movff   temp, WREG
000A68 0F30           00978         addlw   0x30
                      00979         WriteEE WREG, H_EE, L_EE
000A6A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A6E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A72 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A76 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A78 D???               M         bra     $-2
                          M 
000A7A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A7C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A7E 84A6               M         bsf     EECON1, WREN        ; enable write
000A80 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A82 98A1               M         bcf     PIR2, EEIF
                          M 
000A84 0E55               M         movlw   0x55
000A86 6EA7               M         movwf   EECON2              ; write 55h
000A88 0EAA               M         movlw   0xaa
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A8A 6EA7               M         movwf   EECON2              ; write 0xaa
000A8C 82A6               M         bsf     EECON1, WR          ; begin write
000A8E B2A6               M         btfsc   EECON1, WR
000A90 D???               M         bra     $-2
                          M 
000A92 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A94 94A6               M         bcf     EECON1, WREN        ; disable writes
000A96 2A21           00980         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000A98 0012           00981 return
                      00982         
                      00983                 
000A9A                00984 DISPLAY_RTC
                      00985         ; display data in this format hh/minmin/yy yy/mm/dd
                      00986         
                      00987         rtc_read    0x02            ; 0x02 from DS1307 - hours
000A9A 0E02               M     movlw   0x02
000A9C 6E??               M     movwf   regaddress
000A9E EC?? F???          M     call    read_rtc
000AA2 C??? FFE8          M     movff   datachar, WREG
000AA6 EC?? F???          M     call    rtc_convert
000AAA C??? FFE8      00988         movff   tens_digit,WREG
000AAE EC?? F???      00989         call    WR_DATA
000AB2 C??? FFE8      00990         movff   ones_digit,WREG
000AB6 EC?? F???      00991         call    WR_DATA
000ABA 0E68           00992         movlw   "h"
000ABC EC?? F???      00993         call    WR_DATA
                      00994         
                      00995         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000AC0 0E01               M     movlw   0x01
000AC2 6E??               M     movwf   regaddress
000AC4 EC?? F???          M     call    read_rtc
000AC8 C??? FFE8          M     movff   datachar, WREG
000ACC EC?? F???          M     call    rtc_convert
000AD0 C??? FFE8      00996         movff   tens_digit,WREG
000AD4 EC?? F???      00997         call    WR_DATA
000AD8 C??? FFE8      00998         movff   ones_digit,WREG
000ADC EC?? F???      00999         call    WR_DATA
                      01000         
                      01001         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000AE0 0E00               M     movlw   0x00
000AE2 6E??               M     movwf   regaddress
000AE4 EC?? F???          M     call    read_rtc
000AE8 C??? FFE8          M     movff   datachar, WREG
000AEC EC?? F???          M     call    rtc_convert
000AF0 C??? FFE8      01002         movff   tens_digit,WREG
000AF4 EC?? F???      01003         call    WR_DATA
000AF8 C??? FFE8      01004         movff   ones_digit,WREG
000AFC EC?? F???      01005         call    WR_DATA
000B00 0E20           01006         movlw   " "
000B02 EC?? F???      01007         call    WR_DATA
                      01008         
                      01009         rtc_read    0x06            ; 0x06 from DS1307 - years
000B06 0E06               M     movlw   0x06
000B08 6E??               M     movwf   regaddress
000B0A EC?? F???          M     call    read_rtc
000B0E C??? FFE8          M     movff   datachar, WREG
000B12 EC?? F???          M     call    rtc_convert
000B16 C??? FFE8      01010         movff   tens_digit,WREG
000B1A EC?? F???      01011         call    WR_DATA
000B1E C??? FFE8      01012         movff   ones_digit,WREG
000B22 EC?? F???      01013         call    WR_DATA
000B26 0E2F           01014         movlw   "/"
000B28 EC?? F???      01015         call    WR_DATA
                      01016         
                      01017         rtc_read    0x05            ; 0x05 from DS1307 - months
000B2C 0E05               M     movlw   0x05
000B2E 6E??               M     movwf   regaddress
000B30 EC?? F???          M     call    read_rtc
000B34 C??? FFE8          M     movff   datachar, WREG
000B38 EC?? F???          M     call    rtc_convert
000B3C C??? FFE8      01018         movff   tens_digit,WREG
000B40 EC?? F???      01019         call    WR_DATA
000B44 C??? FFE8      01020         movff   ones_digit,WREG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B48 EC?? F???      01021         call    WR_DATA
000B4C 0E2F           01022         movlw   "/"
000B4E EC?? F???      01023         call    WR_DATA
                      01024         
                      01025         rtc_read    0x04            ; 0x04 from DS1307 - days
000B52 0E04               M     movlw   0x04
000B54 6E??               M     movwf   regaddress
000B56 EC?? F???          M     call    read_rtc
000B5A C??? FFE8          M     movff   datachar, WREG
000B5E EC?? F???          M     call    rtc_convert
000B62 C??? FFE8      01026         movff   tens_digit,WREG
000B66 EC?? F???      01027         call    WR_DATA
000B6A C??? FFE8      01028         movff   ones_digit,WREG
000B6E EC?? F???      01029         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000B72 0012           01030 return
                      01031         
000B74                01032 SET_TIME
                      01033         rtc_resetAll
                          M 
000B74 6A??               M     clrf    databyte
000B76 0E06               M     movlw   6
000B78 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000B7A                    M     del_loop0
000B7A EC?? F???          M     call    write_rtc
000B7E 2E??               M     decfsz  regaddress
000B80 D???               M     bra     del_loop0
000B82 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01034         
                      01035         rtc_set 0x00,   b'10000000'
000B86 0E00               M     movlw   0x00
000B88 6E??               M     movwf   regaddress
000B8A 0E80               M     movlw   b'10000000'
000B8C 6E??               M     movwf   databyte
000B8E EC?? F???          M     call    write_rtc
                      01036 
                      01037         rtc_set 0x06,   b'00010111'             ; year 17
000B92 0E06               M     movlw   0x06
000B94 6E??               M     movwf   regaddress
000B96 0E17               M     movlw   b'00010111'
000B98 6E??               M     movwf   databyte
000B9A EC?? F???          M     call    write_rtc
                      01038         rtc_set 0x05,   b'00000100'             ; month 04
000B9E 0E05               M     movlw   0x05
000BA0 6E??               M     movwf   regaddress
000BA2 0E04               M     movlw   b'00000100'
000BA4 6E??               M     movwf   databyte
000BA6 EC?? F???          M     call    write_rtc
                      01039         rtc_set 0x04,   b'00000110'             ; day of month 06
000BAA 0E04               M     movlw   0x04
000BAC 6E??               M     movwf   regaddress
000BAE 0E06               M     movlw   b'00000110'
000BB0 6E??               M     movwf   databyte
000BB2 EC?? F???          M     call    write_rtc
                      01040         rtc_set 0x02,   b'00100010'             ; hours 22
000BB6 0E02               M     movlw   0x02
000BB8 6E??               M     movwf   regaddress
000BBA 0E22               M     movlw   b'00100010'
000BBC 6E??               M     movwf   databyte
000BBE EC?? F???          M     call    write_rtc
                      01041         rtc_set 0x01,   b'00010101'             ; minutes 13
000BC2 0E01               M     movlw   0x01
000BC4 6E??               M     movwf   regaddress
000BC6 0E15               M     movlw   b'00010101'
000BC8 6E??               M     movwf   databyte
000BCA EC?? F???          M     call    write_rtc
                      01042         rtc_set 0x00,   b'00000000'             ; seconds 0
000BCE 0E00               M     movlw   0x00
000BD0 6E??               M     movwf   regaddress
000BD2 0E00               M     movlw   b'00000000'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BD4 6E??               M     movwf   databyte
000BD6 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000BDA 0012           01043 return
                      01044         
000BDC                01045 INIT_USART
                      01046         
000BDC 8E94           01047         bsf     TRISC, 7        ; set RC7=USART RC
000BDE 9C94           01048         bcf     TRISC, 6        ; clear RC6=USART TX
                      01049 
000BE0 0E0F           01050         movlw   15              ; baud rate 9600
000BE2 6EAF           01051         movwf   SPBRG
000BE4 6AAC           01052         clrf    TXSTA
                      01053         
000BE6 6AAB           01054         clrf    RCSTA
000BE8 8EAB           01055         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000BEA 88AB           01056         bsf     RCSTA,CREN      ; continous receive
                      01057         
000BEC 8AAC           01058         bsf     TXSTA, TXEN     ; transmit enabled
000BEE 0012           01059         return
                      01060 
000BF0                01061 DataUSART
000BF0 0E02           01062         movlw   0x02
000BF2 EC?? F???      01063         call    USART_WAIT
000BF6 0E0D           01064         movlw   0x0D
000BF8 EC?? F???      01065         call    USART_WAIT
                      01066         
000BFC 6A15           01067         clrf    counter         ; used to cycle through past 9 eeprom logs
000BFE 6A16           01068         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01069         
000C00                01070 TRANSFER_LOGS
000C00 0E15           01071         movlw   d'21'           ; logs are 21 bits apart
000C02 0215           01072         mulwf   counter         ; log number one starts at eeprom address 0
000C04 CFF3 F021      01073         movff   PRODL, L_EE     ; low address now points to count X 21
000C08 6A16           01074         clrf    counter2
                      01075         
000C0A                01076 TRANSFER_DATA   
                      01077         READEE  WREG, H_EE, L_EE
000C0A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C0E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000C12 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C14 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C16 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C18 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000C1C EC?? F???      01078         call    USART_WAIT      ; transfer bit
000C20 2A21           01079         incf    L_EE
                      01080         
000C22 2A16           01081         incf    counter2
000C24 0E12           01082         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000C26 6216           01083         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000C28 D???           01084         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01085         
000C2A EC?? F???      01086         call    USART_LINE      ; new line because a e s t h e t i c
                      01087         
000C2E 2A15           01088         incf    counter
000C30 0E08           01089         movlw   d'8'            ; we save up to the last 9 permanent logs
000C32 6215           01090         cpfseq  counter
000C34 D???           01091         bra     TRANSFER_LOGS
                      01092         
000C36 EC?? F???      01093         call    LCD_L2
                      01094         Display PCComplete
  0000                    M         local   loop
000C3A 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000C3C 6EF8               M         movwf   TBLPTRU
000C3E 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000C40 6EF7               M         movwf   TBLPTRH
000C42 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000C44 6EF6               M         movwf   TBLPTRL
000C46 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C48 50F5               M         movf    TABLAT, W
000C4A                    M loop
000C4A EC?? F???          M         call    WR_DATA         ; write to LCD
000C4E 000B               M         tblrd+*                 ; next row in table
000C50 50F5               M         movf    TABLAT, W
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C52 E1??               M         bnz     loop
                      01095         Delay50N delayR, 0x28   
  0000                    M         local   loop
000C54 0E28               M         movlw   0x28
000C56 6E1A               M         movwf   delayR
                          M 
000C58                    M loop
000C58 EC?? F???          M         call    Delay50ms
000C5C 2E1A               M         decfsz  delayR
000C5E EF?? F???          M         goto    loop
000C62 0012           01096         return                  ; done transmitting data
                      01097         
000C64                01098 USART_WAIT
000C64 6EAD           01099         movwf   TXREG
000C66 A2AC           01100         btfss   TXSTA, 1
000C68 EF?? F???      01101         goto    $-2
000C6C 0012           01102         return
                      01103 
000C6E                01104 USART_LINE
000C6E 0E0A           01105         movlw   0x0A
000C70 EC?? F???      01106         call    USART_WAIT
000C74 0E0D           01107         movlw   0x0D
000C76 EC?? F???      01108         call    USART_WAIT
000C7A 0012           01109         return
                      01110         
000C7C                01111 Delay5us
000C7C 0E78           01112         movlw   d'120'
000C7E 6E1B           01113         movwf   d5us
                      01114 
000C80                01115 loop5us
000C80 2E1B           01116         decfsz  d5us
000C82 EF?? F???      01117         goto    loop5us
000C86 0000           01118         nop
000C88 0012           01119         return
                      01120 
000C8A                01121 Delay200us
000C8A 0EA4           01122         movlw   0xA4
000C8C 6E1C           01123         movwf   d200us
                      01124 
000C8E                01125 loop200us
000C8E 2E1C           01126         decfsz  d200us
000C90 EF?? F???      01127         goto    loop200us
000C94 0000           01128         nop
000C96 0012           01129         return
                      01130 
000C98                01131 Delay50ms
000C98 0EF9           01132         movlw   0xF9
000C9A 6E1D           01133         movwf   d50ms
                      01134 
000C9C                01135 loop50ms
000C9C EC?? F???      01136         call    Delay200us
000CA0 2E1D           01137         decfsz  d50ms
                      01138 
000CA2                01139 Cycles
000CA2 EF?? F???      01140         goto    loop50ms
000CA6 EC?? F???      01141         call    Delay200us
000CAA 0012           01142         return
                      01143 
000CAC                01144 WriteEE_RTC
                      01145         WriteEE tens_digit, H_EE, L_EE
000CAC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000CB0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000CB4 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000CB8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000CBA D???               M         bra     $-2
                          M 
000CBC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CBE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CC0 84A6               M         bsf     EECON1, WREN        ; enable write
000CC2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CC4 98A1               M         bcf     PIR2, EEIF
                          M 
000CC6 0E55               M         movlw   0x55
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CC8 6EA7               M         movwf   EECON2              ; write 55h
000CCA 0EAA               M         movlw   0xaa
000CCC 6EA7               M         movwf   EECON2              ; write 0xaa
000CCE 82A6               M         bsf     EECON1, WR          ; begin write
000CD0 B2A6               M         btfsc   EECON1, WR
000CD2 D???               M         bra     $-2
                          M 
000CD4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CD6 94A6               M         bcf     EECON1, WREN        ; disable writes
000CD8 2A21           01146         incf    L_EE
                      01147         WriteEE ones_digit, H_EE, L_EE
000CDA C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000CDE C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000CE2 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000CE6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000CE8 D???               M         bra     $-2
                          M 
000CEA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CEC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CEE 84A6               M         bsf     EECON1, WREN        ; enable write
000CF0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CF2 98A1               M         bcf     PIR2, EEIF
                          M 
000CF4 0E55               M         movlw   0x55
000CF6 6EA7               M         movwf   EECON2              ; write 55h
000CF8 0EAA               M         movlw   0xaa
000CFA 6EA7               M         movwf   EECON2              ; write 0xaa
000CFC 82A6               M         bsf     EECON1, WR          ; begin write
000CFE B2A6               M         btfsc   EECON1, WR
000D00 D???               M         bra     $-2
                          M 
000D02 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D04 94A6               M         bcf     EECON1, WREN        ; disable writes
000D06 2A21           01148         incf    L_EE
000D08 0012           01149         return
                      01150 
000D0A                01151 ClearEEPROM_21
000D0A 6A20           01152         clrf    H_EE
000D0C 6A21           01153         clrf    L_EE
000D0E 681F           01154         setf    clear_EE
000D10 6A15           01155         clrf    counter
000D12                01156 ClearNext
                      01157         WriteEE         clear_EE, H_EE, L_EE
000D12 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D16 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D1A C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000D1E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D20 D???               M         bra     $-2
                          M 
000D22 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D24 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D26 84A6               M         bsf     EECON1, WREN        ; enable write
000D28 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D2A 98A1               M         bcf     PIR2, EEIF
                          M 
000D2C 0E55               M         movlw   0x55
000D2E 6EA7               M         movwf   EECON2              ; write 55h
000D30 0EAA               M         movlw   0xaa
000D32 6EA7               M         movwf   EECON2              ; write 0xaa
000D34 82A6               M         bsf     EECON1, WR          ; begin write
000D36 B2A6               M         btfsc   EECON1, WR
000D38 D???               M         bra     $-2
                          M 
000D3A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D3C 94A6               M         bcf     EECON1, WREN        ; disable writes
000D3E 2A15           01158         incf            counter
000D40 2A21           01159         incf            L_EE
000D42 0E15           01160         movlw           d'21'
000D44 6215           01161         cpfseq          counter
000D46 EF?? F???      01162         goto            ClearNext
000D4A 6A20           01163         clrf            H_EE
000D4C 6A21           01164         clrf            L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D4E 0012           01165         return
                      01166         
000D50                01167 READ_KEY
000D50 A281           01168         btfss   PORTB, 1        ; check for keypad interrupt
000D52 EF?? F???      01169         goto    READ_KEY
000D56 3881           01170         swapf   PORTB, W
000D58 0B0F           01171         andlw   0x0F
000D5A 6E10           01172         movwf   KEY
000D5C B281           01173         btfsc   PORTB, 1
000D5E EF?? F???      01174         goto    $-2
000D62 0012           01175         return
                      01176 
000D64                01177 READ_KEY_TIME
000D64 EC?? F???      01178         call        LCD_L2          ; go to second line to print RTC    
                      01179         ; display the time
                      01180         ; call      DISPLAY_RTC 
                      01181 
000D68 A281           01182         btfss       PORTB, 1    ; keypad interrupt
000D6A EF?? F???      01183         goto        READ_KEY_TIME
000D6E 3881           01184         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000D70 0B0F           01185         andlw       0x0F        ; only want W3:0
000D72 6E10           01186         movwf       KEY         ; write this value to the KEY
000D74 B281           01187         btfsc       PORTB, 1    ; wait for release
000D76 EF?? F???      01188         goto        $-2         ; go back one instruction
000D7A 0012           01189         return
                      01190 
000D7C                01191 DisplayExeTime
                      01192         READEE  REG_EE, H_EE, L_EE
000D7C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D80 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D84 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D86 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D88 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D8A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000D8E 0EFF           01193         movlw   0xFF
000D90 6222           01194         cpfseq  REG_EE
000D92 EF?? F???      01195         goto    NoSkipDispExeTime
                      01196         Display NoData
  0000                    M         local   loop
000D96 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D98 6EF8               M         movwf   TBLPTRU
000D9A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D9C 6EF7               M         movwf   TBLPTRH
000D9E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000DA0 6EF6               M         movwf   TBLPTRL
000DA2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000DA4 50F5               M         movf    TABLAT, W
000DA6                    M loop
000DA6 EC?? F???          M         call    WR_DATA         ; write to LCD
000DAA 000B               M         tblrd+*                 ; next row in table
000DAC 50F5               M         movf    TABLAT, W
000DAE E1??               M         bnz     loop
000DB0 0EFF           01197         movlw   0xFF
000DB2 6022           01198         cpfslt  REG_EE
000DB4 EF?? F???      01199         goto    SkipDispExeTime
000DB8 0012           01200         return
                      01201 
000DBA                01202 NoSkipDispExeTime
                      01203         READEE  WREG, H_EE, L_EE
000DBA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DBE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DC2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DC4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DC6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DC8 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DCC EC?? F???      01204         call    WR_DATA
000DD0 2A21           01205         incf    L_EE
                      01206         
                      01207         READEE  WREG, H_EE, L_EE
000DD2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DD6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DDA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DDC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DDE 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DE0 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DE4 EC?? F???      01208         call    WR_DATA
000DE8 2A21           01209         incf    L_EE
                      01210         
                      01211         READEE  WREG, H_EE, L_EE
000DEA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DEE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DF2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DF4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DF6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DF8 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DFC EC?? F???      01212         call    WR_DATA
000E00 2A21           01213         incf    L_EE
                      01214 
000E02 0E73           01215         movlw   0x73            ; Write 's'
000E04 EC?? F???      01216         call    WR_DATA
000E08 EC?? F???      01217         call    LCD_L2
000E0C                01218 SkipDispExeTime
000E0C 0012           01219         return
                      01220 
000E0E                01221 DispOpSort
                      01222         READEE  REG_EE, H_EE, L_EE
000E0E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E12 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E16 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E18 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E1A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E1C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E20 0EFF           01223         movlw   0xff
000E22 6222           01224         cpfseq  REG_EE
000E24 EF?? F???      01225         goto    NoSkipDispOpSort
                      01226         Display NoData
  0000                    M         local   loop
000E28 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E2A 6EF8               M         movwf   TBLPTRU
000E2C 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E2E 6EF7               M         movwf   TBLPTRH
000E30 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E32 6EF6               M         movwf   TBLPTRL
000E34 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E36 50F5               M         movf    TABLAT, W
000E38                    M loop
000E38 EC?? F???          M         call    WR_DATA         ; write to LCD
000E3C 000B               M         tblrd+*                 ; next row in table
000E3E 50F5               M         movf    TABLAT, W
000E40 E1??               M         bnz     loop
000E42 0EFF           01227         movlw   0xff
000E44 6022           01228         cpfslt  REG_EE
000E46 EF?? F???      01229         goto    SkipDispOpSort
                      01230 
000E4A                01231 NoSkipDispOpSort
000E4A 0E61           01232         movlw   "a"
000E4C EC?? F???      01233         call    WR_DATA
                      01234         
                      01235         READEE  REG_EE, H_EE, L_EE
000E50 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E54 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E58 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E5A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E5C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E5E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E62 C022 FFE8      01236         movff   REG_EE, WREG
000E66 EC?? F???      01237         call    WR_DATA
000E6A 2A21           01238         incf    L_EE
                      01239         
000E6C 0E20           01240         movlw   " "
000E6E EC?? F???      01241         call    WR_DATA
                      01242         
000E72 0E62           01243         movlw   "b"
000E74 EC?? F???      01244         call    WR_DATA
                      01245         
                      01246         READEE  REG_EE, H_EE, L_EE
000E78 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E7C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E80 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E82 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E84 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E86 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E8A C022 FFE8      01247         movff   REG_EE, WREG
000E8E EC?? F???      01248         call    WR_DATA
000E92 2A21           01249         incf    L_EE
                      01250         
000E94 0E20           01251         movlw   " "
000E96 EC?? F???      01252         call    WR_DATA
                      01253         
000E9A 0E63           01254         movlw   "c"
000E9C EC?? F???      01255         call    WR_DATA
                      01256         
                      01257         READEE  REG_EE, H_EE, L_EE
000EA0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EA4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EA8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EAA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EAC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EAE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EB2 C022 FFE8      01258         movff   REG_EE, WREG
000EB6 EC?? F???      01259         call    WR_DATA
000EBA 2A21           01260         incf    L_EE
                      01261         
000EBC 0E20           01262         movlw   " "
000EBE EC?? F???      01263         call    WR_DATA
                      01264         
000EC2 0E64           01265         movlw   "d"
000EC4 EC?? F???      01266         call    WR_DATA
                      01267         
                      01268         READEE  REG_EE, H_EE, L_EE
000EC8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000ECC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000ED0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000ED2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ED4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ED6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EDA C022 FFE8      01269         movff   REG_EE, WREG
000EDE EC?? F???      01270         call    WR_DATA
000EE2 2A21           01271         incf    L_EE
                      01272 
000EE4                01273 SkipDispOpSort
000EE4 0012           01274         return
                      01275         
000EE6                01276 DispOpRTC
                      01277         READEE  REG_EE, H_EE, L_EE
000EE6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EEA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EEE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EF0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EF2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EF4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EF8 0EFF           01278         movlw   0xff
000EFA 6222           01279         cpfseq  REG_EE
000EFC EF?? F???      01280         goto    NoSkipDispOpRTC
                      01281         Display NoData
  0000                    M         local   loop
000F00 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F02 6EF8               M         movwf   TBLPTRU
000F04 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F06 6EF7               M         movwf   TBLPTRH
000F08 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F0A 6EF6               M         movwf   TBLPTRL
000F0C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F0E 50F5               M         movf    TABLAT, W
000F10                    M loop
000F10 EC?? F???          M         call    WR_DATA         ; write to LCD
000F14 000B               M         tblrd+*                 ; next row in table
000F16 50F5               M         movf    TABLAT, W
000F18 E1??               M         bnz     loop
000F1A 0EFF           01282         movlw   0xff
000F1C 6022           01283         cpfslt  REG_EE
000F1E EF?? F???      01284         goto    SkipDispOpRTC
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-6-2017  22:26:53         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01285 
000F22                01286 NoSkipDispOpRTC
                      01287         READEE  REG_EE, H_EE, L_EE
000F22 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F26 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F2A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F2C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F2E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F30 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F34 C022 FFE8      01288         movff   REG_EE, WREG
000F38 EC?? F???      01289         call    WR_DATA
000F3C 2A21           01290         incf    L_EE
                      01291         
                      01292         READEE  REG_EE, H_EE, L_EE
000F3E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F42 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F46 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F48 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F4A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F4C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F50 C022 FFE8      01293         movff   REG_EE, WREG
000F54 EC?? F???      01294         call    WR_DATA
000F58 2A21           01295         incf    L_EE
                      01296 
000F5A 0E68           01297         movlw   "h"
000F5C EC?? F???      01298         call    WR_DATA
                      01299         
000F60 EC?? F???      01300         call    DispOpRTC_Helper
                      01301         
000F64 0E20           01302         movlw   " "
000F66 EC?? F???      01303         call    WR_DATA
                      01304         
000F6A EC?? F???      01305         call    DispOpRTC_Helper
000F6E 0E2F           01306         movlw   "/"
000F70 EC?? F???      01307         call    WR_DATA
                      01308 
000F74 EC?? F???      01309         call    DispOpRTC_Helper
000F78 0E2F           01310         movlw   "/"
000F7A EC?? F???      01311         call    WR_DATA
000F7E EC?? F???      01312         call    DispOpRTC_Helper
000F82                01313 SkipDispOpRTC
000F82 0012           01314                 return
000F84                01315 DispOpRTC_Helper
                      01316         READEE          REG_EE, H_EE, L_EE
000F84 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F88 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F8C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F8E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F90 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F92 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F96 C022 FFE8      01317         movff           REG_EE, WREG
000F9A EC?? F???      01318         call            WR_DATA
000F9E 2A21           01319         incf            L_EE
                      01320         READEE          REG_EE, H_EE, L_EE
000FA0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FA4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FA8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FAA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FAC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FAE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FB2 C022 FFE8      01321         movff           REG_EE, WREG
000FB6 EC?? F???      01322         call            WR_DATA
000FBA 2A21           01323         incf            L_EE
000FBC 0012           01324         return
Warning[205]: Found directive in column 1. (end)
                      01325 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

