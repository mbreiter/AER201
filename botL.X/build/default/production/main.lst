MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
                      00001 ;External labels
Warning[205]: Found directive in column 1. (extern)
  0000                00002 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00003 
                      00004 ;; RTC MACROS
                      00005 ;;
                      00006 ;; Sebastian K, commit 110219-2205
                      00007 ;; forked off PIC16 sample code
                      00008 ;; for PIC18F4620
                      00009 ;; relocatable labels, declared in another file
                      00010 
Warning[205]: Found directive in column 1. (variable)
  0000                00011 variable _loopknt=0
                      00012 
                      00013 rtc_resetAll macro
                      00014 ;input: none
                      00015 ;output: none
                      00016 ;desc: Resets all the time keeping registers on the RTC to zero
                      00017 
                      00018 clrf databyte
                      00019 movlw 6
                      00020 movwf regaddress ;start at 6 and go down, and set all to 0
                      00021 
                      00022 del_loop#v(_loopknt)
                      00023 call write_rtc
                      00024 decfsz regaddress
                      00025 bra del_loop#v(_loopknt)
                      00026 call write_rtc ;sets registers 0-6 to zero
                      00027 _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00028 endm
                      00029 
                      00030 rtc_set macro addliteral,datliteral
                      00031 ;input: addliteral: value of address
                      00032 ; datliteral: value of data
                      00033 ;output: none
                      00034 ;desc: loads the data in datliteral into the
                      00035 ; address specified by addliteral in the RTC
                      00036 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037 movlw addliteral
                      00038 movwf regaddress
                      00039 movlw datliteral
                      00040 movwf databyte
                      00041 call write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00042 endm
                      00043 
                      00044 rtc_read macro addliteral
                      00045 ;input: addliteral
                      00046 ;output: datachar, tens_digit, ones_digit
                      00047 ;desc: From the selected register in the RTC, read the data
                      00048 ; and load it into 0x75. 0x75 is also converted into
                      00049 ; ASCII characters and the tens digit is placed into
                      00050 ; 0x77 and the ones digit is placed in 0x78
                      00051 movlw addliteral
                      00052 movwf regaddress
                      00053 call read_rtc
                      00054 movf datachar,w
                      00055 call rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00056 endm
                      00018 
                      00019     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00020     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00021     CONFIG WDT = OFF, WDTPS = 32768
                      00022     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00023     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00024     CONFIG DEBUG = OFF
                      00025     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00026     CONFIG CPB = OFF, CPD = OFF
                      00027     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00028     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00029     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00030     CONFIG EBTRB = OFF
                      00031 
                      00032 ;*******************************************************************************
                      00033 ; variable and constants
                      00034 ;*******************************************************************************
                      00035     CODE
                      00036             
                      00037     cblock 0x00
  00000000            00038         key1
  00000001            00039         key2
  00000002            00040         key3
  00000003            00041         keyA
  00000004            00042         key4
  00000005            00043         key5
  00000006            00044         key6
  00000007            00045         keyB
  00000008            00046         key7
  00000009            00047         key8
  0000000A            00048         key9
  0000000B            00049         keyC
  0000000C            00050         keyS
  0000000D            00051         key0
  0000000E            00052         keyH
  0000000F            00053         keyD
  00000010            00054         KEY
  00000011            00055         temp_KEY
  00000012            00056         KEY_ISR
  00000013            00057         temp_S  
  00000014            00058         temp_W
  00000015            00059         counter
  00000016            00060         counter2
  00000017            00061         temp
  00000018            00062         OP_sec
  00000019            00063         OP_INT
  0000001A            00064         temp_ISR
  0000001B            00065         delayR
  0000001C            00066         d5us
  0000001D            00067         d200us
  0000001E            00068         d50ms
  0000001F            00069         inExecution
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000020            00070         clear_EE
  00000021            00071         H_EE    
  00000022            00072         L_EE    
  00000023            00073         REG_EE  
  00000024            00074         tempH_EE
  00000025            00075         tempL_EE
  00000026            00076         tempL_EEC
  00000027            00077         MAX_EE   
  00000028            00078         READ_EE
  00000029            00079         last_log
  0000002A            00080         startHt
  0000002B            00081         startHo
  0000002C            00082         startMt
  0000002D            00083         startMo
  0000002E            00084         endHt
  0000002F            00085         endHo
  00000030            00086         endMt
  00000031            00087         endMo
  00000032            00088         LED_Count
  00000033            00089         SkipCount
  00000034            00090         exe_sec
  00000035            00091         exe_int
  00000036            00092         timer_H
  00000037            00093         timer_L
  00000038            00094         convert_buffer
  00000039            00095         transferring
  0000003A            00096         PC_PCL
  0000003B            00097         PC_PCLATH
  0000003C            00098         PC_PCLATU
  0000003D            00099         TIMCNT
  0000003E            00100         CPCNT
  0000003F            00101         TDATA
                      00102     endc
                      00103     
                      00104 
                      00105 
                      00106 ;*******************************************************************************
                      00107 ; tables
                      00108 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00109     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00110     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00111     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00112     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00113     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00114     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00115     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00116     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00117     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00118     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00119     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00120     PC1         db          "PC Interface", 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00121     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00122     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00123     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00124     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00125     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00126     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00127     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00128     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00129         
                      00130 ;*******************************************************************************
                      00131 ; macros
                      00132 ;*******************************************************************************
                      00133 
                      00134 TransferTable macro table
                      00135         local loop
                      00136         
                      00137         movlw   upper table
                      00138         movwf   TBLPTRU
                      00139         movlw   high table
                      00140         movwf   TBLPTRH
                      00141         movlw   low table
                      00142         movwf   TBLPTRL
                      00143         tblrd*
                      00144         movf    TABLAT, W
                      00145 loop
                      00146         call    USART_WAIT
                      00147         tblrd+*
                      00148         movf    TABLAT, W
                      00149         bnz     loop
                      00150         endm
                      00151         
                      00152 ConfigLCD   macro
                      00153           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00154           call      WR_INS
                      00155 
                      00156           movlw     b'00001100'    ; display on/off
                      00157           call      WR_INS
                      00158          ; movlw     B'00000110'    ; Entry mode
                      00159          ; call      WR_INS
                      00160           movlw     b'00000001'    ; Clear ram
                      00161           call      WR_INS
                      00162           endm
                      00163         
                      00164 movMSB  macro   port
                      00165         andlw   0xF0
                      00166         iorwf   port, f
                      00167         iorlw   0x0F
                      00168         andwf   port, f
                      00169         endm
                      00170 
                      00171 Delay50N macro count, N
                      00172         local   loop
                      00173         movlw   N
                      00174         movwf   count
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00175 
                      00176 loop
                      00177         call    Delay50ms
                      00178         decfsz  count
                      00179         goto    loop
                      00180         endm
                      00181 
                      00182 Display macro   Message
                      00183         local   loop
                      00184         movlw   upper Message   ; Move Table<20:16>
                      00185         movwf   TBLPTRU
                      00186         movlw   high Message    ; Move Table<15:8>
                      00187         movwf   TBLPTRH
                      00188         movlw   low Message     ; Move Table<7:0>
                      00189         movwf   TBLPTRL
                      00190         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00191         movf    TABLAT, W
                      00192 loop
                      00193         call    WR_DATA         ; write to LCD
                      00194         tblrd+*                 ; next row in table
                      00195         movf    TABLAT, W
                      00196         bnz     loop
                      00197         endm
                      00198 
                      00199 DisplayLog  macro   addrH, addrL
                      00200             local   Again, Finish
                      00201             clrf    SkipCount
                      00202             clrf    MAX_EE
                      00203 
                      00204             ; Check if there is No Data first
                      00205             READEE      REG_EE, addrH, addrL
                      00206             movlw       0xFF
                      00207             cpfseq      REG_EE
                      00208             goto        Again
                      00209             Display     NoData
                      00210             goto        Finish
                      00211 Again
                      00212             ; Put a space every 3 Writes
                      00213             movlw       d'3'
                      00214             cpfslt      SkipCount
                      00215             cpfslt      MAX_EE
                      00216             goto        Finish
                      00217 
                      00218             ; read EEPROM
                      00219             READEE      REG_EE, addrH, addrL
                      00220             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00221             goto        Finish
                      00222 Finish
                      00223             endm
                      00224             
                      00225 ;TransferLog macro   addrH, addrL
                      00226         
                      00227 
                      00228 incf_BCD    macro   BCD
                      00229         local ones, endBCD
                      00230         movff   BCD, temp
                      00231         
                      00232         ;process ones digit
                      00233         movlw   0x0F
                      00234         andwf   temp
                      00235         movlw   d'9'
                      00236         
                      00237         ;skip if ones digit is 9
                      00238         cpfseq  temp
                      00239         goto    ones
                      00240         
                      00241         movlw   b'00010000'
                      00242         addwf   BCD
                      00243         movlw   0x0F
                      00244         andwf   BCD
                      00245         movlw   0xA0
                      00246         cpfslt  BCD
                      00247         
                      00248         clrf    BCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00249         goto    endBCD
                      00250         
                      00251 ones
                      00252         incf    BCD
                      00253         goto    endBCD
                      00254 endBCD
                      00255         nop
                      00256         endm
                      00257 
                      00258 WriteRTC    macro
                      00259         movf    tens_digit, W
                      00260         call    WR_DATA
                      00261         movf    ones_digit, W
                      00262         call    WR_DATA
                      00263         endm
                      00264 
                      00265 WriteEE macro   word, addH, addL
                      00266         movff   addH, EEADRH    ; High address
                      00267         movff   addL, EEADRH    ; Low address
                      00268         movff   word, EEDATA    ; set word
                      00269 
                      00270         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00271         bra     $-2
                      00272 
                      00273         bcf     EECON1, EEPGD   ; Point to data memory
                      00274         bcf     EECON1, CFGS    ; Access EEPROM
                      00275         bsf     EECON1, WREN    ; enable write
                      00276         bcf     EECON1, GIE         ; disable interrupts during write
                      00277         bcf     PIR2, EEIF
                      00278 
                      00279         movlw   0x55
                      00280         movwf   EECON2      ; write 55h
                      00281         movlw   0xAA
                      00282         movwf   EECON2      ; write 0xAA
                      00283         bsf     EECON1, WR          ; begin write
                      00284         btfsc   EECON1, WR
                      00285         bra     $-2
                      00286 
                      00287         bsf     EECON1, GIE         ; enable interrupts after write
                      00288         bcf     EECON1, WREN        ; disable writes
                      00289         endm
                      00290 
                      00291 READEE  macro   file, addH, addL
                      00292         movff   addH, EEADRH        ; read to high
                      00293         movff   addL, EEADR         ; read to low
                      00294         bcf     EECON1, EEPGD       ; point to data memory
                      00295         bcf     EECON1, CFGS        ; access to EEPROM
                      00296         bsf     EECON1, RD          ; read EEPROM
                      00297         movff   EEDATA, file        ; put data into file
                      00298         endm
                      00299 
                      00300 ChangeMode  macro   ModeId, NextMode
                      00301         local Next, Exit
                      00302 
                      00303         movlw   ModeId              ; poll for mode
                      00304         cpfseq  KEY                 ; check this against key press
                      00305         goto    Exit
                      00306 
                      00307 Next
                      00308         clrf    LATA                ; clear pins before proceeding
                      00309         clrf    LATB
                      00310         clrf    LATC
                      00311         clrf    LATD
                      00312         goto    NextMode
                      00313 
                      00314 Exit
                      00315         nop
                      00316         endm
                      00317 
                      00318 saveContext macro
                      00319     movff   STATUS, temp_S          ; save STATUS first
                      00320     movwf   temp_W                  ; save W
                      00321     endm
                      00322 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00323 restoreContext macro
                      00324     swapf   temp_W, W               ; restore W first
                      00325     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00326     endm
                      00327 ;*******************************************************************************
                      00328 ; reset vector and isrs
                      00329 ;*******************************************************************************
                      00330         ORG     0x000               ; processor reset vector
000000 EF?? F???      00331         goto    INIT                ; go to beginning of program
                      00332 
                      00333         ORG     0x008
000008 EF?? F???      00334         goto    ISR_HIGH
                      00335 
                      00336         ORG     0x018
000018 EF?? F???      00337         goto    ISR_LOW
                      00338 
00001C                00339 ISR_HIGH
                      00340         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00341 
                      00342         ;reset timer
000022 0E0B           00343         movlw   0xb
000024 6ED7           00344         movwf   TMR0H
000026 0EDC           00345         movlw   0xdc
000028 6ED6           00346         movwf   TMR0L
                      00347         
                      00348         ;call   DISPLAY_RTC
                      00349         
                      00350         ;timer interrupt
00002A A4F2           00351         btfss   INTCON, TMR0IF
00002C EF?? F???      00352         goto    END_ISR_HIGH
                      00353         
                      00354         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0F
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0E0F               M         movlw   0x0F
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xA0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00355         movlw   d'0'
00005C 6219           00356         cpfseq  OP_INT
00005E EF?? F???      00357         goto    END_ISR_HIGH
                      00358         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0F
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0E0F               M         movlw   0x0F
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xA0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00359 
00008C                00360 END_ISR_HIGH
00008C 94F2           00361         bcf     INTCON, TMR0IF
                      00362         restoreContext
00008E 3814               M     swapf   temp_W, W               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00363         retfie
                      00364 
000096                00365 ISR_LOW
                      00366         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00367         ; KEYPAD INTERRUPT
00009C A0F0           00368         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00369         goto            END_ISR_LOW
                      00370 
                      00371         ;Check operation status
                      00372 ;       movlw           0xFF                                    ; If in operation, skip return
                      00373 ;       cpfseq          InExecution
                      00374 ;       goto            END_ISR_LOW
                      00375 
                      00376         ; Process KEY
0000A2 3881           00377         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00378         andlw           0x0F
0000A6 6E12           00379         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00380 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00381 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00382         goto            END_ISR_LOW
                      00383 
                      00384         ; Reset program counter
0000AC 6AFF           00385         clrf            TOSU
0000AE 6AFE           00386         clrf            TOSH
0000B0 6AFD           00387         clrf            TOSL
                      00388 
0000B2                00389 END_ISR_LOW
0000B2 90F0           00390         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00391         restoreContext
0000B4 3814               M     swapf   temp_W, W               ; restore W first
0000B6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00392         
0000BA 6E14           00393         movwf   temp_W              ; save current W
0000BC CFD8 F013      00394         movff   STATUS, temp_S      ; save status
                      00395 
                      00396         ; ISR_Low routines
0000C0 C013 FFD8      00397         movff   temp_S, STATUS      ; retreive status
0000C4 3A14           00398         swapf   temp_W, f
0000C6 3814           00399         swapf   temp_W, w           ; restore W
0000C8 0010           00400         retfie
                      00401 
                      00402 ;*******************************************************************************
                      00403 ; main
                      00404 ;*******************************************************************************
0000CA                00405 INIT
                      00406         ; i/o
0000CA 0EFF           00407         movlw   b'11111111'
0000CC 6E92           00408         movwf   TRISA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CE 0EFF           00409         movlw   b'11111111'
0000D0 6E93           00410         movwf   TRISB               ; keypad
0000D2 0E00           00411         movlw   b'00000000'
0000D4 6E94           00412         movwf   TRISC
0000D6 0E00           00413         movlw   b'00000000'
0000D8 6E95           00414         movwf   TRISD
0000DA 0E07           00415         movlw   b'00000111'
0000DC 6E96           00416         movwf   TRISE
                      00417 
                      00418         ; analog/digital pins
0000DE 0E0F           00419         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00420         movwf   ADCON1
                      00421 
                      00422         ; clear ports
0000E2 6A89           00423         clrf    LATA
0000E4 6A8A           00424         clrf    LATB
                      00425 ;       bcf     TRISC, SCL
                      00426 ;       bcf     TRISC, SDA
0000E6 6A8B           00427         clrf    LATC
0000E8 6A8C           00428         clrf    LATD
0000EA 6A8D           00429         clrf    LATE
                      00430         
0000EC 0E00           00431         movlw   b'00000000'
0000EE 6EC2           00432         movwf   ADCON0
0000F0 0EFF           00433         movlw   b'11111111'
0000F2 6EC1           00434         movwf   ADCON1
                      00435         
                      00436         ; initializations
                      00437         
0000F4 EC?? F???      00438         call    InitLCD
                      00439         ConfigLCD
0000F8 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
0000FA EC?? F???          M           call      WR_INS
                          M 
0000FE 0E0C               M           movlw     b'00001100'    ; display on/off
000100 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000104 0E01               M           movlw     b'00000001'    ; Clear ram
000106 EC?? F???          M           call      WR_INS
                      00440         
00010A EC?? F???      00441         call    RTC_INIT
00010E EC?? F???      00442         call    Delay50ms
                      00443         
000112 EC?? F???      00444         call    INIT_USART
                      00445 
                      00446         ; interrupts
000116 6AD0           00447         clrf    RCON
000118 6AF2           00448         clrf    INTCON
00011A 6AF1           00449         clrf    INTCON2
00011C 6AF0           00450         clrf    INTCON3
00011E 8ED0           00451         bsf     RCON, IPEN          ; priority mode
000120 8EF2           00452         bsf     INTCON, GIEH        ; permit global interrupts
000122 8CF2           00453         bsf     INTCON, GIEL
000124 8AF1           00454         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000126 8AF2           00455         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000128 84F2           00456         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00012A 84F1           00457         bsf     INTCON2, TMR0IP     ; set to high priority
00012C 86F0           00458         bsf     INTCON3, INT1IE
00012E 9CF0           00459         bcf     INTCON3, INT1IP
                      00460         
                      00461         ; setting up timer to sychronize with 1 second clock intervals
000130 9CD5           00462         bcf     T0CON, T08BIT
000132 9AD5           00463         bcf     T0CON, T0CS
000134 96D5           00464         bcf     T0CON, PSA
000136 84D5           00465         bsf     T0CON, T0PS2
000138 92D5           00466         bcf     T0CON, T0PS1
00013A 90D5           00467         bcf     T0CON, T0PS0
00013C 0E0B           00468         movlw   0xb
00013E 6ED7           00469         movwf   TMR0H
000140 0EDC           00470         movlw   0xdc
000142 6ED6           00471         movwf   TMR0L
                      00472 
000144 6A21           00473         clrf    H_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000146 6A22           00474         clrf    L_EE
000148 6A??           00475         clrf    tens_digit
00014A 6A??           00476         clrf    ones_digit
                      00477         
00014C 0EF2           00478         movlw     b'11110010'    ; Set required keypad inputs
00014E 6E93           00479         movwf     TRISB
                      00480         
                      00481         Display Welcome
  0000                    M         local   loop
000150 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
000152 6EF8               M         movwf   TBLPTRU
000154 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000156 6EF7               M         movwf   TBLPTRH
000158 0E??               M         movlw   low Welcome     ; Move Table<7:0>
00015A 6EF6               M         movwf   TBLPTRL
00015C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00015E 50F5               M         movf    TABLAT, W
000160                    M loop
000160 EC?? F???          M         call    WR_DATA         ; write to LCD
000164 000B               M         tblrd+*                 ; next row in table
000166 50F5               M         movf    TABLAT, W
000168 E1??               M         bnz     loop
00016A EC?? F???      00482         call LCD_L2
                      00483         Display Team
  0000                    M         local   loop
00016E 0E??               M         movlw   upper Team      ; Move Table<20:16>
000170 6EF8               M         movwf   TBLPTRU
000172 0E??               M         movlw   high Team       ; Move Table<15:8>
000174 6EF7               M         movwf   TBLPTRH
000176 0E??               M         movlw   low Team        ; Move Table<7:0>
000178 6EF6               M         movwf   TBLPTRL
00017A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00017C 50F5               M         movf    TABLAT, W
00017E                    M loop
00017E EC?? F???          M         call    WR_DATA         ; write to LCD
000182 000B               M         tblrd+*                 ; next row in table
000184 50F5               M         movf    TABLAT, W
000186 E1??               M         bnz     loop
                      00484         Delay50N delayR, 0x3C
  0000                    M         local   loop
000188 0E3C               M         movlw   0x3C
00018A 6E1B               M         movwf   delayR
                          M 
00018C                    M loop
00018C EC?? F???          M         call    Delay50ms
000190 2E1B               M         decfsz  delayR
000192 EF?? F???          M         goto    loop
                      00485 
                      00486 ;*******************************************************************************
                      00487 ; standby mode
                      00488 ;*******************************************************************************
000196                00489 STANDBY
000196 EC?? F???      00490         call    ClrLCD
                      00491         Display StandBy
  0000                    M         local   loop
00019A 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
00019C 6EF8               M         movwf   TBLPTRU
00019E 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001A0 6EF7               M         movwf   TBLPTRH
0001A2 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001A4 6EF6               M         movwf   TBLPTRL
0001A6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001A8 50F5               M         movf    TABLAT, W
0001AA                    M loop
0001AA EC?? F???          M         call    WR_DATA         ; write to LCD
0001AE 000B               M         tblrd+*                 ; next row in table
0001B0 50F5               M         movf    TABLAT, W
0001B2 E1??               M         bnz     loop
                      00492 
0001B4                00493 HOLD_STANDBY
0001B4 EC?? F???      00494         call    READ_KEY_TIME
                      00495         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001B8 0E03               M         movlw   keyA                ; poll for mode
0001BA 6210               M         cpfseq  KEY                 ; check this against key press
0001BC EF?? F???          M         goto    Exit
                          M 
0001C0                    M Next
0001C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0001C2 6A8A               M         clrf    LATB
0001C4 6A8B               M         clrf    LATC
0001C6 6A8C               M         clrf    LATD
0001C8 EF?? F???          M         goto    EXECUTION
                          M 
0001CC                    M Exit
0001CC 0000               M         nop
                      00496         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
0001CE 0E07               M         movlw   keyB                ; poll for mode
0001D0 6210               M         cpfseq  KEY                 ; check this against key press
0001D2 EF?? F???          M         goto    Exit
                          M 
0001D6                    M Next
0001D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0001D8 6A8A               M         clrf    LATB
0001DA 6A8B               M         clrf    LATC
0001DC 6A8C               M         clrf    LATD
0001DE EF?? F???          M         goto    LOG
                          M 
0001E2                    M Exit
0001E2 0000               M         nop
                      00497         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0001E4 0E0B               M         movlw   keyC                ; poll for mode
0001E6 6210               M         cpfseq  KEY                 ; check this against key press
0001E8 EF?? F???          M         goto    Exit
                          M 
0001EC                    M Next
0001EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0001EE 6A8A               M         clrf    LATB
0001F0 6A8B               M         clrf    LATC
0001F2 6A8C               M         clrf    LATD
0001F4 EF?? F???          M         goto    PERM_LOG
                          M 
0001F8                    M Exit
0001F8 0000               M         nop
                      00498         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0001FA 0E0F               M         movlw   keyD                ; poll for mode
0001FC 6210               M         cpfseq  KEY                 ; check this against key press
0001FE EF?? F???          M         goto    Exit
                          M 
000202                    M Next
000202 6A89               M         clrf    LATA                ; clear pins before proceeding
000204 6A8A               M         clrf    LATB
000206 6A8B               M         clrf    LATC
000208 6A8C               M         clrf    LATD
00020A EF?? F???          M         goto    PC_MODE
                          M 
00020E                    M Exit
00020E 0000               M         nop
000210 D???           00499         bra     HOLD_STANDBY
                      00500 
                      00501 ;*******************************************************************************
                      00502 ; execution mode
                      00503 ;*******************************************************************************
                      00504 
000212                00505 EXECUTION
                      00506         ; save the starting time
000212 EC?? F???      00507         call        SAVE_TIME
                      00508                 
                      00509         ; display
000216 681F           00510         setf        inExecution
000218 EC?? F???      00511         call        ClrLCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00512         Display     Exe1
  0000                    M         local   loop
00021C 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
00021E 6EF8               M         movwf   TBLPTRU
000220 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000222 6EF7               M         movwf   TBLPTRH
000224 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000226 6EF6               M         movwf   TBLPTRL
000228 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00022A 50F5               M         movf    TABLAT, W
00022C                    M loop
00022C EC?? F???          M         call    WR_DATA         ; write to LCD
000230 000B               M         tblrd+*                 ; next row in table
000232 50F5               M         movf    TABLAT, W
000234 E1??               M         bnz     loop
000236 EC?? F???      00513         call        LCD_L2
                      00514         Display     Exe2
  0000                    M         local   loop
00023A 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
00023C 6EF8               M         movwf   TBLPTRU
00023E 0E??               M         movlw   high Exe2       ; Move Table<15:8>
000240 6EF7               M         movwf   TBLPTRH
000242 0E??               M         movlw   low Exe2        ; Move Table<7:0>
000244 6EF6               M         movwf   TBLPTRL
000246 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000248 50F5               M         movf    TABLAT, W
00024A                    M loop
00024A EC?? F???          M         call    WR_DATA         ; write to LCD
00024E 000B               M         tblrd+*                 ; next row in table
000250 50F5               M         movf    TABLAT, W
000252 E1??               M         bnz     loop
                      00515         
                      00516         ; start timer
000254 8ED5           00517         bsf         T0CON, TMR0ON                       ; Turn on timer
000256 EC?? F???      00518         call        ClearEEPROM_21
                      00519         
                      00520         ; initialize variables
00025A 6A18           00521         clrf        OP_sec
00025C 6A19           00522         clrf        OP_INT
                      00523 
00025E                00524 HOLD_EXE
00025E EC?? F???      00525         call        READ_KEY
                      00526         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000262 0E0C               M         movlw   keyS                ; poll for mode
000264 6210               M         cpfseq  KEY                 ; check this against key press
000266 EF?? F???          M         goto    Exit
                          M 
00026A                    M Next
00026A 6A89               M         clrf    LATA                ; clear pins before proceeding
00026C 6A8A               M         clrf    LATB
00026E 6A8B               M         clrf    LATC
000270 6A8C               M         clrf    LATD
000272 EF?? F???          M         goto    EXIT_EXE
                          M 
000276                    M Exit
000276 0000               M         nop
000278 D???           00527         bra         HOLD_EXE
                      00528         
00027A                00529 EXIT_EXE
                      00530 ;       WriteEE     OP_sec, H_EE, L_EE
                      00531 ;       incf        L_EE
                      00532 ;       WriteEE     OP_INT, H_EE, L_EE
                      00533 ;       incf        L_EE
                      00534         
00027A EC?? F???      00535         call        SAVE_TIME
                      00536         
                      00537         ; Clear InOperation flag to stop '*' interrupts
00027E 6A1F           00538         clrf        inExecution
000280 EF?? F???      00539         goto        SaveData
                      00540 
000284                00541 SaveData
000284 EC?? F???      00542         call        ClrLCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00543         Display     SAVE
  0000                    M         local   loop
000288 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
00028A 6EF8               M         movwf   TBLPTRU
00028C 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00028E 6EF7               M         movwf   TBLPTRH
000290 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000292 6EF6               M         movwf   TBLPTRL
000294 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000296 50F5               M         movf    TABLAT, W
000298                    M loop
000298 EC?? F???          M         call    WR_DATA         ; write to LCD
00029C 000B               M         tblrd+*                 ; next row in table
00029E 50F5               M         movf    TABLAT, W
0002A0 E1??               M         bnz     loop
0002A2 0E00           00544         movlw       d'0'
0002A4 6E21           00545         movwf       H_EE
0002A6 C029 F022      00546         movff       last_log, L_EE
0002AA 0E00           00547         movlw       d'0'
0002AC 6E24           00548         movwf       tempH_EE
0002AE C026 F025      00549         movff       tempL_EEC, tempL_EE
0002B2 6A16           00550         clrf        counter2
0002B4 6A15           00551         clrf        counter
                      00552 
0002B6                00553 ShiftLoop
0002B6 2A15           00554         incf            counter
                      00555         READEE          REG_EE, H_EE, L_EE
0002B8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0002BC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0002C0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0002C2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0002C4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0002C6 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0002CA 0E15           00556         movlw           d'21'
0002CC 2622           00557         addwf           L_EE
                      00558         WriteEE         REG_EE, H_EE, L_EE
0002CE C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0002D2 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0002D6 C023 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
0002DA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0002DC D???               M         bra     $-2
                          M 
0002DE 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0002E0 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0002E2 84A6               M         bsf     EECON1, WREN    ; enable write
0002E4 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0002E6 98A1               M         bcf     PIR2, EEIF
                          M 
0002E8 0E55               M         movlw   0x55
0002EA 6EA7               M         movwf   EECON2      ; write 55h
0002EC 0EAA               M         movlw   0xAA
0002EE 6EA7               M         movwf   EECON2      ; write 0xAA
0002F0 82A6               M         bsf     EECON1, WR          ; begin write
0002F2 B2A6               M         btfsc   EECON1, WR
0002F4 D???               M         bra     $-2
                          M 
0002F6 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002F8 94A6               M         bcf     EECON1, WREN        ; disable writes
0002FA 0E14           00559         movlw           d'20'
0002FC 5E22           00560         subwf           L_EE
0002FE 0E15           00561         movlw           d'21'
000300 6215           00562         cpfseq          counter
000302 EF?? F???      00563         goto            ShiftLoop
                      00564         
                      00565         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
000306 0E2A           00566         movlw           d'42'
000308 5E22           00567         subwf           L_EE
00030A C026 F025      00568         movff           tempL_EEC, tempL_EE
00030E 6A15           00569         clrf            counter
000310 2A16           00570         incf            counter2
000312 0E09           00571         movlw           d'9'
000314 6216           00572         cpfseq          counter2                                        ; Skip if 9 shifts were made
000316 EF?? F???      00573         goto            ShiftLoop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00574         
                      00575         ; Finish Saving Data
                      00576         ; Stop Timer and goto logs
00031A 9ED5           00577         bcf             T0CON, TMR0ON
00031C 0E09           00578         movlw           d'9'
00031E 6E22           00579         movwf           L_EE
                      00580         WriteEE         OP_sec, H_EE, L_EE
000320 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000324 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000328 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
00032C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00032E D???               M         bra     $-2
                          M 
000330 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000332 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000334 84A6               M         bsf     EECON1, WREN    ; enable write
000336 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000338 98A1               M         bcf     PIR2, EEIF
                          M 
00033A 0E55               M         movlw   0x55
00033C 6EA7               M         movwf   EECON2      ; write 55h
00033E 0EAA               M         movlw   0xAA
000340 6EA7               M         movwf   EECON2      ; write 0xAA
000342 82A6               M         bsf     EECON1, WR          ; begin write
000344 B2A6               M         btfsc   EECON1, WR
000346 D???               M         bra     $-2
                          M 
000348 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00034A 94A6               M         bcf     EECON1, WREN        ; disable writes
00034C 2A22           00581         incf            L_EE
                      00582         WriteEE         OP_INT, H_EE, L_EE
00034E C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000352 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000356 C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
00035A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00035C D???               M         bra     $-2
                          M 
00035E 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000360 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000362 84A6               M         bsf     EECON1, WREN    ; enable write
000364 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000366 98A1               M         bcf     PIR2, EEIF
                          M 
000368 0E55               M         movlw   0x55
00036A 6EA7               M         movwf   EECON2      ; write 55h
00036C 0EAA               M         movlw   0xAA
00036E 6EA7               M         movwf   EECON2      ; write 0xAA
000370 82A6               M         bsf     EECON1, WR          ; begin write
000372 B2A6               M         btfsc   EECON1, WR
000374 D???               M         bra     $-2
                          M 
000376 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000378 94A6               M         bcf     EECON1, WREN        ; disable writes
00037A 2A22           00583         incf            L_EE
00037C EF?? F???      00584         goto            LOG
                      00585 
                      00586 ;*******************************************************************************
                      00587 ; sorting statistics log mode
                      00588 ;*******************************************************************************
                      00589         
000380                00590 LOG
000380 EC?? F???      00591         call    ClrLCD
                      00592         Display Log1
  0000                    M         local   loop
000384 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000386 6EF8               M         movwf   TBLPTRU
000388 0E??               M         movlw   high Log1       ; Move Table<15:8>
00038A 6EF7               M         movwf   TBLPTRH
00038C 0E??               M         movlw   low Log1        ; Move Table<7:0>
00038E 6EF6               M         movwf   TBLPTRL
000390 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000392 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000394                    M loop
000394 EC?? F???          M         call    WR_DATA         ; write to LCD
000398 000B               M         tblrd+*                 ; next row in table
00039A 50F5               M         movf    TABLAT, W
00039C E1??               M         bnz     loop
                      00593 
                      00594         ; display most recent run data
00039E 0E09           00595         movlw   d'9'
0003A0 6E22           00596         movwf   L_EE
                      00597         READEE  OP_sec, H_EE, L_EE
0003A2 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0003A6 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0003AA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0003AC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0003AE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0003B0 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0003B4 2A22           00598         incf    L_EE
                      00599         READEE  OP_INT, H_EE, L_EE
0003B6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0003BA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0003BE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0003C0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0003C2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0003C4 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0003C8 2A22           00600         incf    L_EE
0003CA EC?? F???      00601         call    DisplayTime
                      00602 
0003CE EC?? F???      00603         call    LCD_L2
0003D2 6A22           00604         clrf    L_EE
0003D4 EC?? F???      00605         call    DispOpRTC
                      00606 
0003D8                00607 HOLD_LOG
0003D8 EC?? F???      00608         call    READ_KEY
                      00609         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0003DC 0E07               M         movlw   keyB                ; poll for mode
0003DE 6210               M         cpfseq  KEY                 ; check this against key press
0003E0 EF?? F???          M         goto    Exit
                          M 
0003E4                    M Next
0003E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0003E6 6A8A               M         clrf    LATB
0003E8 6A8B               M         clrf    LATC
0003EA 6A8C               M         clrf    LATD
0003EC EF?? F???          M         goto    LOG_INFO
                          M 
0003F0                    M Exit
0003F0 0000               M         nop
                      00610         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0003F2 0E0D               M         movlw   key0                ; poll for mode
0003F4 6210               M         cpfseq  KEY                 ; check this against key press
0003F6 EF?? F???          M         goto    Exit
                          M 
0003FA                    M Next
0003FA 6A89               M         clrf    LATA                ; clear pins before proceeding
0003FC 6A8A               M         clrf    LATB
0003FE 6A8B               M         clrf    LATC
000400 6A8C               M         clrf    LATD
000402 EF?? F???          M         goto    STANDBY
                          M 
000406                    M Exit
000406 0000               M         nop
000408 D???           00611         bra     HOLD_LOG
                      00612 
00040A                00613 LOG_INFO
00040A EC?? F???      00614         call    ClrLCD
                      00615         Display LogInfo1
  0000                    M         local   loop
00040E 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
000410 6EF8               M         movwf   TBLPTRU
000412 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000414 6EF7               M         movwf   TBLPTRH
000416 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000418 6EF6               M         movwf   TBLPTRL
00041A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00041C 50F5               M         movf    TABLAT, W
00041E                    M loop
00041E EC?? F???          M         call    WR_DATA         ; write to LCD
000422 000B               M         tblrd+*                 ; next row in table
000424 50F5               M         movf    TABLAT, W
000426 E1??               M         bnz     loop
000428 EC?? F???      00616         call    LCD_L2
                      00617         Display LogInfo2
  0000                    M         local   loop
00042C 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00042E 6EF8               M         movwf   TBLPTRU
000430 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000432 6EF7               M         movwf   TBLPTRH
000434 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000436 6EF6               M         movwf   TBLPTRL
000438 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00043A 50F5               M         movf    TABLAT, W
00043C                    M loop
00043C EC?? F???          M         call    WR_DATA         ; write to LCD
000440 000B               M         tblrd+*                 ; next row in table
000442 50F5               M         movf    TABLAT, W
000444 E1??               M         bnz     loop
000446                00618 HOLD_LOG_INFO
000446 EC?? F???      00619         call    READ_KEY
                      00620         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
00044A 0E0D               M         movlw   key0                ; poll for mode
00044C 6210               M         cpfseq  KEY                 ; check this against key press
00044E EF?? F???          M         goto    Exit
                          M 
000452                    M Next
000452 6A89               M         clrf    LATA                ; clear pins before proceeding
000454 6A8A               M         clrf    LATB
000456 6A8B               M         clrf    LATC
000458 6A8C               M         clrf    LATD
00045A EF?? F???          M         goto    LOG
                          M 
00045E                    M Exit
00045E 0000               M         nop
000460 D???           00621         bra     HOLD_LOG
                      00622         
                      00623 ;*******************************************************************************
                      00624 ; permanent logs
                      00625 ;*******************************************************************************
                      00626 
000462                00627 PERM_LOG
000462 EC?? F???      00628         call    ClrLCD
                      00629         Display PermLog1
  0000                    M         local   loop
000466 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000468 6EF8               M         movwf   TBLPTRU
00046A 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00046C 6EF7               M         movwf   TBLPTRH
00046E 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000470 6EF6               M         movwf   TBLPTRL
000472 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000474 50F5               M         movf    TABLAT, W
000476                    M loop
000476 EC?? F???          M         call    WR_DATA         ; write to LCD
00047A 000B               M         tblrd+*                 ; next row in table
00047C 50F5               M         movf    TABLAT, W
00047E E1??               M         bnz     loop
000480 EC?? F???      00630         call    LCD_L2
                      00631         Display PermLog2
  0000                    M         local   loop
000484 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000486 6EF8               M         movwf   TBLPTRU
000488 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
00048A 6EF7               M         movwf   TBLPTRH
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00048C 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
00048E 6EF6               M         movwf   TBLPTRL
000490 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000492 50F5               M         movf    TABLAT, W
000494                    M loop
000494 EC?? F???          M         call    WR_DATA         ; write to LCD
000498 000B               M         tblrd+*                 ; next row in table
00049A 50F5               M         movf    TABLAT, W
00049C E1??               M         bnz     loop
                      00632         
00049E                00633 HOLD_PERM_LOG
00049E EC?? F???      00634         call    READ_KEY
                      00635         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0004A2 0E0D               M         movlw   key0                ; poll for mode
0004A4 6210               M         cpfseq  KEY                 ; check this against key press
0004A6 EF?? F???          M         goto    Exit
                          M 
0004AA                    M Next
0004AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0004AC 6A8A               M         clrf    LATB
0004AE 6A8B               M         clrf    LATC
0004B0 6A8C               M         clrf    LATD
0004B2 EF?? F???          M         goto    STANDBY
                          M 
0004B6                    M Exit
0004B6 0000               M         nop
                      00636         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
0004B8 0E00               M         movlw   key1                ; poll for mode
0004BA 6210               M         cpfseq  KEY                 ; check this against key press
0004BC EF?? F???          M         goto    Exit
                          M 
0004C0                    M Next
0004C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0004C2 6A8A               M         clrf    LATB
0004C4 6A8B               M         clrf    LATC
0004C6 6A8C               M         clrf    LATD
0004C8 EF?? F???          M         goto    PLOG
                          M 
0004CC                    M Exit
0004CC 0000               M         nop
                      00637         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0004CE 0E01               M         movlw   key2                ; poll for mode
0004D0 6210               M         cpfseq  KEY                 ; check this against key press
0004D2 EF?? F???          M         goto    Exit
                          M 
0004D6                    M Next
0004D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0004D8 6A8A               M         clrf    LATB
0004DA 6A8B               M         clrf    LATC
0004DC 6A8C               M         clrf    LATD
0004DE EF?? F???          M         goto    PLOG
                          M 
0004E2                    M Exit
0004E2 0000               M         nop
                      00638         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0004E4 0E02               M         movlw   key3                ; poll for mode
0004E6 6210               M         cpfseq  KEY                 ; check this against key press
0004E8 EF?? F???          M         goto    Exit
                          M 
0004EC                    M Next
0004EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0004EE 6A8A               M         clrf    LATB
0004F0 6A8B               M         clrf    LATC
0004F2 6A8C               M         clrf    LATD
0004F4 EF?? F???          M         goto    PLOG
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004F8                    M Exit
0004F8 0000               M         nop
                      00639         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0004FA 0E04               M         movlw   key4                ; poll for mode
0004FC 6210               M         cpfseq  KEY                 ; check this against key press
0004FE EF?? F???          M         goto    Exit
                          M 
000502                    M Next
000502 6A89               M         clrf    LATA                ; clear pins before proceeding
000504 6A8A               M         clrf    LATB
000506 6A8B               M         clrf    LATC
000508 6A8C               M         clrf    LATD
00050A EF?? F???          M         goto    PLOG
                          M 
00050E                    M Exit
00050E 0000               M         nop
                      00640         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000510 0E05               M         movlw   key5                ; poll for mode
000512 6210               M         cpfseq  KEY                 ; check this against key press
000514 EF?? F???          M         goto    Exit
                          M 
000518                    M Next
000518 6A89               M         clrf    LATA                ; clear pins before proceeding
00051A 6A8A               M         clrf    LATB
00051C 6A8B               M         clrf    LATC
00051E 6A8C               M         clrf    LATD
000520 EF?? F???          M         goto    PLOG
                          M 
000524                    M Exit
000524 0000               M         nop
                      00641         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000526 0E06               M         movlw   key6                ; poll for mode
000528 6210               M         cpfseq  KEY                 ; check this against key press
00052A EF?? F???          M         goto    Exit
                          M 
00052E                    M Next
00052E 6A89               M         clrf    LATA                ; clear pins before proceeding
000530 6A8A               M         clrf    LATB
000532 6A8B               M         clrf    LATC
000534 6A8C               M         clrf    LATD
000536 EF?? F???          M         goto    PLOG
                          M 
00053A                    M Exit
00053A 0000               M         nop
                      00642         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
00053C 0E08               M         movlw   key7                ; poll for mode
00053E 6210               M         cpfseq  KEY                 ; check this against key press
000540 EF?? F???          M         goto    Exit
                          M 
000544                    M Next
000544 6A89               M         clrf    LATA                ; clear pins before proceeding
000546 6A8A               M         clrf    LATB
000548 6A8B               M         clrf    LATC
00054A 6A8C               M         clrf    LATD
00054C EF?? F???          M         goto    PLOG
                          M 
000550                    M Exit
000550 0000               M         nop
                      00643         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000552 0E09               M         movlw   key8                ; poll for mode
000554 6210               M         cpfseq  KEY                 ; check this against key press
000556 EF?? F???          M         goto    Exit
                          M 
00055A                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00055A 6A89               M         clrf    LATA                ; clear pins before proceeding
00055C 6A8A               M         clrf    LATB
00055E 6A8B               M         clrf    LATC
000560 6A8C               M         clrf    LATD
000562 EF?? F???          M         goto    PLOG
                          M 
000566                    M Exit
000566 0000               M         nop
                      00644         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000568 0E0A               M         movlw   key9                ; poll for mode
00056A 6210               M         cpfseq  KEY                 ; check this against key press
00056C EF?? F???          M         goto    Exit
                          M 
000570                    M Next
000570 6A89               M         clrf    LATA                ; clear pins before proceeding
000572 6A8A               M         clrf    LATB
000574 6A8B               M         clrf    LATC
000576 6A8C               M         clrf    LATD
000578 EF?? F???          M         goto    PLOG
                          M 
00057C                    M Exit
00057C 0000               M         nop
00057E D???           00645         bra HOLD_PERM_LOG
                      00646         
000580                00647 PLOG
000580 EC?? F???      00648         call    ClrLCD
                      00649         Display PermLog1
  0000                    M         local   loop
000584 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000586 6EF8               M         movwf   TBLPTRU
000588 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00058A 6EF7               M         movwf   TBLPTRH
00058C 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00058E 6EF6               M         movwf   TBLPTRL
000590 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000592 50F5               M         movf    TABLAT, W
000594                    M loop
000594 EC?? F???          M         call    WR_DATA         ; write to LCD
000598 000B               M         tblrd+*                 ; next row in table
00059A 50F5               M         movf    TABLAT, W
00059C E1??               M         bnz     loop
                      00650         
                      00651         ; find the key press value
00059E C010 FFE8      00652         movff   KEY, WREG
0005A2 2AE8           00653         incf    WREG        ; W = KEY+1
0005A4 6E17           00654         movwf   temp
                      00655         
0005A6 42E8           00656         rrncf   WREG        ; division by 4
0005A8 9EE8           00657         bcf     WREG, 7     ; clear last bit, overflow from rotate
0005AA 42E8           00658         rrncf   WREG        
0005AC 9EE8           00659         bcf     WREG, 7
0005AE 5E17           00660         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0005B0 C017 FFE8      00661         movff   temp, WREG
0005B4 C017 F011      00662         movff   temp, temp_KEY
0005B8 0D15           00663         mullw   d'21'       ; indexed as mutliples of 21
                      00664 
0005BA                00665 displayNum
0005BA C011 FFE8      00666         movff   temp_KEY, WREG
0005BE 0F30           00667         addlw   0x30
0005C0 EC?? F???      00668         call    WR_DATA
0005C4 0E3A           00669         movlw   ":"
0005C6 EC?? F???      00670         call    WR_DATA
0005CA 0E20           00671         movlw   " "
0005CC EC?? F???      00672         call    WR_DATA
                      00673         
0005D0 CFF3 F022      00674         movff   PRODL, L_EE
0005D4 0E00           00675         movlw   d'0'
0005D6 2622           00676         addwf   L_EE
                      00677         READEE  OP_sec, H_EE, L_EE
0005D8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005DC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005E0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005E2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005E4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005E6 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0005EA 2A22           00678         incf    L_EE
                      00679         READEE  OP_INT, H_EE, L_EE
0005EC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005F0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005F4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005F6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005F8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005FA CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0005FE 2A22           00680         incf    L_EE
000600 EC?? F???      00681         call    DisplayTime
000604 CFF3 F022      00682         movff   PRODL, L_EE
                      00683         
                      00684         ; reset eeprom to beginning
000608 EC?? F???      00685         call    LCD_L2
00060C CFF3 F022      00686         movff   PRODL, L_EE
000610 EC?? F???      00687         call    DispOpRTC
                      00688         
000614                00689 HOLD_PLOG
000614 EC?? F???      00690         call    READ_KEY
                      00691         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000618 0E0D               M         movlw   key0                ; poll for mode
00061A 6210               M         cpfseq  KEY                 ; check this against key press
00061C EF?? F???          M         goto    Exit
                          M 
000620                    M Next
000620 6A89               M         clrf    LATA                ; clear pins before proceeding
000622 6A8A               M         clrf    LATB
000624 6A8B               M         clrf    LATC
000626 6A8C               M         clrf    LATD
000628 EF?? F???          M         goto    PERM_LOG
                          M 
00062C                    M Exit
00062C 0000               M         nop
00062E D???           00692         bra HOLD_PERM_LOG
                      00693         
                      00694 ;*******************************************************************************
                      00695 ; pc interface
                      00696 ;*******************************************************************************
                      00697 
000630                00698 PC_MODE
000630 EC?? F???      00699         call    ClrLCD
                      00700         Display PC1
  0000                    M         local   loop
000634 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000636 6EF8               M         movwf   TBLPTRU
000638 0E??               M         movlw   high PC1        ; Move Table<15:8>
00063A 6EF7               M         movwf   TBLPTRH
00063C 0E??               M         movlw   low PC1         ; Move Table<7:0>
00063E 6EF6               M         movwf   TBLPTRL
000640 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000642 50F5               M         movf    TABLAT, W
000644                    M loop
000644 EC?? F???          M         call    WR_DATA         ; write to LCD
000648 000B               M         tblrd+*                 ; next row in table
00064A 50F5               M         movf    TABLAT, W
00064C E1??               M         bnz     loop
00064E EC?? F???      00701         call    LCD_L2
                      00702         Display PC2
  0000                    M         local   loop
000652 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000654 6EF8               M         movwf   TBLPTRU
000656 0E??               M         movlw   high PC2        ; Move Table<15:8>
000658 6EF7               M         movwf   TBLPTRH
00065A 0E??               M         movlw   low PC2         ; Move Table<7:0>
00065C 6EF6               M         movwf   TBLPTRL
00065E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000660 50F5               M         movf    TABLAT, W
000662                    M loop
000662 EC?? F???          M         call    WR_DATA         ; write to LCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000666 000B               M         tblrd+*                 ; next row in table
000668 50F5               M         movf    TABLAT, W
00066A E1??               M         bnz     loop
00066C CFF9 F03A      00703         movff   PCL, PC_PCL
000670 CFFA F03B      00704         movff   PCLATH, PC_PCLATH
000674 CFFB F03C      00705         movff   PCLATU, PC_PCLATU
                      00706         
000678                00707 HOLD_PC
000678 EC?? F???      00708         call    READ_KEY
                      00709         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00067C 0E0D               M         movlw   key0                ; poll for mode
00067E 6210               M         cpfseq  KEY                 ; check this against key press
000680 EF?? F???          M         goto    Exit
                          M 
000684                    M Next
000684 6A89               M         clrf    LATA                ; clear pins before proceeding
000686 6A8A               M         clrf    LATB
000688 6A8B               M         clrf    LATC
00068A 6A8C               M         clrf    LATD
00068C EF?? F???          M         goto    STANDBY
                          M 
000690                    M Exit
000690 0000               M         nop
                      00710         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000692 0E0E               M         movlw   keyH                ; poll for mode
000694 6210               M         cpfseq  KEY                 ; check this against key press
000696 EF?? F???          M         goto    Exit
                          M 
00069A                    M Next
00069A 6A89               M         clrf    LATA                ; clear pins before proceeding
00069C 6A8A               M         clrf    LATB
00069E 6A8B               M         clrf    LATC
0006A0 6A8C               M         clrf    LATD
0006A2 EF?? F???          M         goto    PC_TRANSFER
                          M 
0006A6                    M Exit
0006A6 0000               M         nop
0006A8 D???           00711         bra     HOLD_PC
                      00712 
0006AA                00713 PC_TRANSFER
0006AA 6839           00714         setf    transferring
0006AC EC?? F???      00715         call    ClrLCD
                      00716         Display PCTransfer
  0000                    M         local   loop
0006B0 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0006B2 6EF8               M         movwf   TBLPTRU
0006B4 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0006B6 6EF7               M         movwf   TBLPTRH
0006B8 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0006BA 6EF6               M         movwf   TBLPTRL
0006BC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006BE 50F5               M         movf    TABLAT, W
0006C0                    M loop
0006C0 EC?? F???          M         call    WR_DATA         ; write to LCD
0006C4 000B               M         tblrd+*                 ; next row in table
0006C6 50F5               M         movf    TABLAT, W
0006C8 E1??               M         bnz     loop
                      00717         ;call   DataUSART
0006CA 6A39           00718         clrf    transferring
0006CC D???           00719         bra     HOLD_PC
                      00720         
                      00721 ;*******************************************************************************
                      00722 ; subroutines
                      00723 ;*******************************************************************************
                      00724 
0006CE                00725 RTC_INIT
                      00726         ; set sda and scl to high-z
0006CE 9882           00727         bcf     PORTC, 4
0006D0 9682           00728         bcf     PORTC, 3
0006D2 8894           00729         bsf     TRISC, 4
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006D4 8694           00730         bsf     TRISC, 3
                      00731 
0006D6 EC?? F???      00732         call    i2c_common_setup
                      00733         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
0006DA 0012           00734 return
                      00735         
0006DC                00736 SAVE_TIME   
                      00737         rtc_read    0x02        ; hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0006DC 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
0006DE 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0006E0 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0006E4 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0006E6 EC?? F???          M call rtc_convert
0006EA EC?? F???      00738         call    WriteEE_RTC
                      00739         rtc_read    0x01        ; minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0006EE 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
0006F0 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0006F2 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0006F6 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0006F8 EC?? F???          M call rtc_convert
0006FC EC?? F???      00740         call    WriteEE_RTC
                      00741         rtc_read    0x06        ; years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000700 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
000702 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000704 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000708 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00070A EC?? F???          M call rtc_convert
00070E EC?? F???      00742         call    WriteEE_RTC
                      00743         rtc_read    0x05        ; months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000712 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
000714 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000716 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00071A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00071C EC?? F???          M call rtc_convert
000720 EC?? F???      00744         call    WriteEE_RTC
                      00745         rtc_read    0x04        ; days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000724 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
000726 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000728 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00072C 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00072E EC?? F???          M call rtc_convert
000732 EC?? F???      00746         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000736 0012           00747 return
                      00748                 
000738                00749 DISPLAY_RTC
                      00750         
                      00751         ; display data in this format hh/minmin/yy yy/mm/dd
                      00752         rtc_read    0x02            ; 0x02 from DS1307 - hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000738 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
00073A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00073C EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000740 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000742 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000746 5000           00753         movf    tens_digit,WREG
000748 EC?? F???      00754         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00074C 5000           00755         movf    ones_digit,WREG
00074E EC?? F???      00756         call    WR_DATA
000752 0E68           00757         movlw   "h"
000754 EC?? F???      00758         call    WR_DATA
                      00759         
                      00760         rtc_read    0x01            ; 0x01 from DS1307 - minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000758 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
00075A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00075C EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000760 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000762 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000766 5000           00761         movf    tens_digit,WREG
000768 EC?? F???      00762         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00076C 5000           00763         movf    ones_digit,WREG
00076E EC?? F???      00764         call    WR_DATA
000772 0E20           00765         movlw   " "
000774 EC?? F???      00766         call    WR_DATA
                      00767         
                      00768         rtc_read    0x06            ; 0x06 from DS1307 - years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000778 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
00077A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00077C EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000780 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000782 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000786 5000           00769         movf    tens_digit,WREG
000788 EC?? F???      00770         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00078C 5000           00771         movf    ones_digit,WREG
00078E EC?? F???      00772         call    WR_DATA
000792 0E2F           00773         movlw   "/"
000794 EC?? F???      00774         call    WR_DATA
                      00775         
                      00776         rtc_read    0x05            ; 0x06 from DS1307 - months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000798 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
00079A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00079C EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007A0 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007A2 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0007A6 5000           00777         movf    tens_digit,WREG
0007A8 EC?? F???      00778         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0007AC 5000           00779         movf    ones_digit,WREG
0007AE EC?? F???      00780         call    WR_DATA
0007B2 0E2F           00781         movlw   "/"
0007B4 EC?? F???      00782         call    WR_DATA
                      00783         
                      00784         rtc_read    0x04            ; 0x06 from DS1307 - days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007B8 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
0007BA 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007BC EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007C0 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007C2 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0007C6 5000           00785         movf    tens_digit,WREG
0007C8 EC?? F???      00786         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0007CC 5000           00787         movf    ones_digit,WREG
0007CE EC?? F???      00788         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
0007D2 0012           00789 return
                      00790         
0007D4                00791 SET_TIME
                      00792         rtc_resetAll
                          M ;input: none
                          M ;output: none
                          M ;desc: Resets all the time keeping registers on the RTC to zero
                          M 
Warning[203]: Found opcode in column 1. (clrf)
0007D4 6A??               M clrf databyte
Warning[203]: Found opcode in column 1. (movlw)
0007D6 0E06               M movlw 6
Warning[203]: Found opcode in column 1. (movwf)
0007D8 6E??               M movwf regaddress ;start at 6 and go down, and set all to 0
                          M 
0007DA                    M del_loop0
Warning[203]: Found opcode in column 1. (call)
0007DA EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (decfsz)
0007DE 2E??               M decfsz regaddress
Warning[203]: Found opcode in column 1. (bra)
0007E0 D???               M bra del_loop0
Warning[203]: Found opcode in column 1. (call)
0007E2 EC?? F???          M call write_rtc ;sets registers 0-6 to zero
  00000001                M _loopknt set _loopknt+1
                      00793         
                      00794         rtc_set 0x00,   b'10000000'
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0007E6 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
0007E8 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0007EA 0E80               M movlw b'10000000'
Warning[203]: Found opcode in column 1. (movwf)
0007EC 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0007EE EC?? F???          M call write_rtc
                      00795 
                      00796         rtc_set 0x06,   b'00010111'             ; Year 17
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0007F2 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
0007F4 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0007F6 0E17               M movlw b'00010111'
Warning[203]: Found opcode in column 1. (movwf)
0007F8 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0007FA EC?? F???          M call write_rtc
                      00797         rtc_set 0x05,   b'00000010'             ; Month 2
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0007FE 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
000800 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000802 0E02               M movlw b'00000010'
Warning[203]: Found opcode in column 1. (movwf)
000804 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000806 EC?? F???          M call write_rtc
                      00798         rtc_set 0x04,   b'00010010'             ; Date 12
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00080A 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
00080C 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
00080E 0E12               M movlw b'00010010'
Warning[203]: Found opcode in column 1. (movwf)
000810 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000812 EC?? F???          M call write_rtc
                      00799         rtc_set 0x02,   b'00010011'             ; Hours 13
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000816 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000818 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
00081A 0E13               M movlw b'00010011'
Warning[203]: Found opcode in column 1. (movwf)
00081C 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
00081E EC?? F???          M call write_rtc
                      00800         rtc_set 0x01,   b'01000111'             ; Minutes 45
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000822 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
000824 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000826 0E47               M movlw b'01000111'
Warning[203]: Found opcode in column 1. (movwf)
000828 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
00082A EC?? F???          M call write_rtc
                      00801         rtc_set 0x00,   b'00000000'             ; Seconds 0
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00082E 0E00               M movlw 0x00
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (movwf)
000830 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000832 0E00               M movlw b'00000000'
Warning[203]: Found opcode in column 1. (movwf)
000834 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000836 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (return)
00083A 0012           00802 return
                      00803         
00083C                00804 INIT_USART
00083C 0E0F           00805         movlw   15      ; baud rate 9600
00083E 6EAF           00806         movwf   SPBRG
000840 6AAC           00807         clrf    TXSTA
                      00808         
000842 6AAB           00809         clrf    RCSTA
000844 8EAB           00810         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000846 88AB           00811         bsf     RCSTA,CREN      ; continous receive
                      00812         
000848 8AAC           00813         bsf     TXSTA, TXEN     ; transmit enabled
00084A 0012           00814         return
                      00815 
                      00816 ;DataUSART
                      00817 ;       
                      00818 ;       movlw   0x02
                      00819 ;       call    USART_WAIT
                      00820 ;       movlw   0x0D
                      00821 ;       call    USART_WAIT
                      00822 ;       
                      00823 ;       movlw   d'21'       ; start of permanent logs
                      00824 ;       movff   w, L_EE
                      00825 ;       TransferTable   PCLog1
                      00826 ;       
                      00827 ;       ; display time here
                      00828 ;;      rtc_read        0x02
                      00829 ;;              movf        tens_digit, W
                      00830 ;;        andlw       b'00000001'
                      00831 ;;        addlw       0x30
                      00832 ;;        call        TransmitWaitUSART
                      00833 ;;        movf        ones_digit, W
                      00834 ;;        call        TransmitWaitUSART
                      00835 ;;              movlw           ":"
                      00836 ;;              call            TransmitWaitUSART
                      00837 ;;              ; Dispay minutes
                      00838 ;;              rtc_read        0x01
                      00839 ;;              call        SendRTC_USART
                      00840 ;;              ; Dispay AM/PM
                      00841 ;;              rtc_read        0x02
                      00842 ;;        movlw       "P"
                      00843 ;;        btfss       tens_digit, 1
                      00844 ;;        movlw       "A"
                      00845 ;;        call        TransmitWaitUSART
                      00846 ;;        movlw       "M"
                      00847 ;;        call        TransmitWaitUSART
                      00848 ;;              movlw           " "
                      00849 ;;        call        TransmitWaitUSART
                      00850 ;;              ; Display month
                      00851 ;;              rtc_read        0x05
                      00852 ;;              call        SendRTC_USART
                      00853 ;;              movlw           0x2F            ; ASCII '/'
                      00854 ;;              call            TransmitWaitUSART
                      00855 ;;              ; Display day
                      00856 ;;              rtc_read        0x04
                      00857 ;;              call        SendRTC_USART
                      00858 ;;              movlw           0x2F            ; ASCII '/'
                      00859 ;;              call            TransmitWaitUSART
                      00860 ;;              ; Display year
                      00861 ;;              rtc_read        0x06
                      00862 ;;              call        SendRTC_USART
                      00863 ;       
                      00864 ;       call    USART_LINE
                      00865 ;       call    USART_LINE
                      00866 ;       
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00867 ;       clrf    counter
                      00868 ;       incf    counter
                      00869 ;
                      00870 ;USART_TRANSFER
                      00871 ;       movlw   d'21'
                      00872 ;       mulwf   counter
                      00873 ;       movff   PRODL, L_EE
                      00874 ;       movlw   d'9'
                      00875 ;       addwf   L_EE
                      00876 ;       READEE  OP_sec, H_EE, L_EE
                      00877 ;       incf    L_EE
                      00878 ;       READEE  OP_INT, H_EE, L_EE
                      00879 ;       incf    L_EE
                      00880 ;       ; call  TransferTime
                      00881 ;       
                      00882 ;       ; send rtc
                      00883 ;       movlw   0x09
                      00884 ;       call    USART_WAIT
                      00885 ;       movff   PRODL, L_EE
                      00886 ;       ;call   TransferRTC
                      00887 ;       call    USART_LINE
                      00888 ;       
                      00889 ;       
                      00890 ;       
                      00891 ;       
                      00892 ;USART_WAIT
                      00893 ;       movwf   TXREG
                      00894 ;       btfss   TXSTA,1
                      00895 ;       goto    $-2
                      00896 ;       return
                      00897 ;
                      00898 ;USART_LINE
                      00899 ;       movlw   0x0A
                      00900 ;       call    USART_WAIT
                      00901 ;       movlw   0x0D
                      00902 ;       call    USART_WAIT
                      00903 ;       return
                      00904         
                      00905         
00084C                00906 Delay5us
00084C 0E78           00907         movlw   d'120'
00084E 6E1C           00908         movwf   d5us
                      00909 
000850                00910 loop5us
000850 2E1C           00911         decfsz  d5us
000852 EF?? F???      00912         goto    loop5us
000856 0000           00913         nop
000858 0012           00914         return
                      00915 
00085A                00916 Delay200us
00085A 0EA4           00917         movlw   0xA4
00085C 6E1D           00918         movwf   d200us
                      00919 
00085E                00920 loop200us
00085E 2E1D           00921         decfsz  d200us
000860 EF?? F???      00922         goto    loop200us
000864 0000           00923         nop
000866 0012           00924         return
                      00925 
000868                00926 Delay50ms
000868 0EF9           00927         movlw   0xF9
00086A 6E1E           00928         movwf   d50ms
                      00929 
00086C                00930 loop50ms
00086C EC?? F???      00931         call    Delay200us
000870 2E1E           00932         decfsz  d50ms
                      00933 
000872                00934 Cycles
000872 EF?? F???      00935         goto    loop50ms
000876 EC?? F???      00936         call    Delay200us
00087A 0012           00937         return
                      00938 
00087C                00939 WriteEE_RTC
                      00940         WriteEE tens_digit, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00087C C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000880 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000884 C??? FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
000888 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00088A D???               M         bra     $-2
                          M 
00088C 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00088E 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000890 84A6               M         bsf     EECON1, WREN    ; enable write
000892 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000894 98A1               M         bcf     PIR2, EEIF
                          M 
000896 0E55               M         movlw   0x55
000898 6EA7               M         movwf   EECON2      ; write 55h
00089A 0EAA               M         movlw   0xAA
00089C 6EA7               M         movwf   EECON2      ; write 0xAA
00089E 82A6               M         bsf     EECON1, WR          ; begin write
0008A0 B2A6               M         btfsc   EECON1, WR
0008A2 D???               M         bra     $-2
                          M 
0008A4 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0008A6 94A6               M         bcf     EECON1, WREN        ; disable writes
0008A8 2A22           00941         incf    L_EE
                      00942         WriteEE ones_digit, H_EE, L_EE
0008AA C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0008AE C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0008B2 C??? FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
0008B6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008B8 D???               M         bra     $-2
                          M 
0008BA 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0008BC 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0008BE 84A6               M         bsf     EECON1, WREN    ; enable write
0008C0 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0008C2 98A1               M         bcf     PIR2, EEIF
                          M 
0008C4 0E55               M         movlw   0x55
0008C6 6EA7               M         movwf   EECON2      ; write 55h
0008C8 0EAA               M         movlw   0xAA
0008CA 6EA7               M         movwf   EECON2      ; write 0xAA
0008CC 82A6               M         bsf     EECON1, WR          ; begin write
0008CE B2A6               M         btfsc   EECON1, WR
0008D0 D???               M         bra     $-2
                          M 
0008D2 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0008D4 94A6               M         bcf     EECON1, WREN        ; disable writes
0008D6 2A22           00943         incf    L_EE
0008D8 0012           00944         return
                      00945 
0008DA                00946 ClearEEPROM_21
0008DA 6A21           00947         clrf    H_EE
0008DC 6A22           00948         clrf    L_EE
0008DE 6820           00949         setf    clear_EE
0008E0 6A15           00950         clrf    counter
0008E2                00951 ClearNext
                      00952         WriteEE         clear_EE, H_EE, L_EE
0008E2 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0008E6 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0008EA C020 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
0008EE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008F0 D???               M         bra     $-2
                          M 
0008F2 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0008F4 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0008F6 84A6               M         bsf     EECON1, WREN    ; enable write
0008F8 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0008FA 98A1               M         bcf     PIR2, EEIF
                          M 
0008FC 0E55               M         movlw   0x55
0008FE 6EA7               M         movwf   EECON2      ; write 55h
000900 0EAA               M         movlw   0xAA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000902 6EA7               M         movwf   EECON2      ; write 0xAA
000904 82A6               M         bsf     EECON1, WR          ; begin write
000906 B2A6               M         btfsc   EECON1, WR
000908 D???               M         bra     $-2
                          M 
00090A 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00090C 94A6               M         bcf     EECON1, WREN        ; disable writes
00090E 2A15           00953         incf            counter
000910 2A22           00954         incf            L_EE
000912 0E15           00955         movlw           d'21'
000914 6215           00956         cpfseq          counter
000916 EF?? F???      00957         goto            ClearNext
00091A 6A21           00958         clrf            H_EE            ; reset EEPROMaddr
00091C 6A22           00959         clrf            L_EE
00091E 0012           00960         return
                      00961         
000920                00962 READ_KEY
000920 A281           00963         btfss   PORTB, 1        ; check for keypad interrupt
000922 EF?? F???      00964         goto    READ_KEY
000926 3881           00965         swapf   PORTB, W
000928 0B0F           00966         andlw   0x0F
00092A 6E10           00967         movwf   KEY
00092C B281           00968         btfsc   PORTB, 1
00092E EF?? F???      00969         goto    $-2
000932 0012           00970         return
                      00971 
000934                00972 READ_KEY_TIME
000934 EC?? F???      00973         call        LCD_L2          ; go to second line to print RTC
                      00974 
                      00975         ; display the time
000938 EC?? F???      00976         call    DISPLAY_RTC
                      00977 
00093C A281           00978         btfss       PORTB, 1    ; keypad interrupt
00093E EF?? F???      00979         goto        READ_KEY_TIME
000942 3881           00980         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000944 0B0F           00981         andlw       0x0F        ; only want W3:0
000946 6E10           00982         movwf       KEY         ; write this value to the KEY
000948 B281           00983         btfsc       PORTB, 1    ; wait for release
00094A EF?? F???      00984         goto        $-2         ; go back one instruction
00094E 0012           00985         return
                      00986 
000950                00987 DisplayTime
                      00988         READEE  REG_EE, H_EE, L_EE
000950 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000954 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000958 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00095A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00095C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00095E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000962 0EFF           00989         movlw   0xFF
000964 6223           00990         cpfseq  REG_EE
000966 EF?? F???      00991         goto    NoSkipDispOpTime
                      00992         Display NoData
  0000                    M         local   loop
00096A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
00096C 6EF8               M         movwf   TBLPTRU
00096E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000970 6EF7               M         movwf   TBLPTRH
000972 0E??               M         movlw   low NoData      ; Move Table<7:0>
000974 6EF6               M         movwf   TBLPTRL
000976 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000978 50F5               M         movf    TABLAT, W
00097A                    M loop
00097A EC?? F???          M         call    WR_DATA         ; write to LCD
00097E 000B               M         tblrd+*                 ; next row in table
000980 50F5               M         movf    TABLAT, W
000982 E1??               M         bnz     loop
000984 0EFF           00993         movlw   0xFF
000986 6023           00994         cpfslt  REG_EE
000988 EF?? F???      00995         goto    SkipDispOpTime
                      00996 
00098C                00997 NoSkipDispOpTime
00098C 3818           00998         swapf   OP_sec, W
00098E 6E17           00999         movwf   temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000990 0E0F           01000         movlw   0x0F
000992 1617           01001         andwf   temp
000994 C017 FFE8      01002         movff   temp, WREG
000998 0F30           01003         addlw   0x30
00099A EC?? F???      01004         call    WR_DATA
                      01005 
00099E C018 F017      01006         movff   OP_sec, temp    ; 1's seconds
0009A2 0E0F           01007         movlw   0x0F
0009A4 1617           01008         andwf   temp            ; Temp = lower nibble of Op_Seconds
0009A6 C017 FFE8      01009         movff   temp, WREG      ; W = Temp
0009AA 0F30           01010         addlw   0x30            ; Convert to ASCII
0009AC EC?? F???      01011         call    WR_DATA
                      01012 
0009B0 0E2E           01013         movlw   0x2E            ; Write '.'
0009B2 EC?? F???      01014         call    WR_DATA
                      01015 
0009B6 0E73           01016         movlw   0x73            ; Write 's'
0009B8 EC?? F???      01017         call    WR_DATA
0009BC EC?? F???      01018         call    LCD_L2
0009C0                01019 SkipDispOpTime
0009C0 0012           01020         return
                      01021 
0009C2                01022 DispOpRTC
0009C2 0E0B           01023         movlw   d'11'
0009C4 2622           01024         addwf   L_EE
                      01025 
                      01026         READEE  REG_EE, H_EE, L_EE
0009C6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0009CA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0009CE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009D0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009D2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009D4 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0009D8 0EFF           01027         movlw   0xFF
0009DA 6223           01028         cpfseq  REG_EE
0009DC EF?? F???      01029         goto    NoSkipDispOpRTC
                      01030         Display NoData
  0000                    M         local   loop
0009E0 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0009E2 6EF8               M         movwf   TBLPTRU
0009E4 0E??               M         movlw   high NoData     ; Move Table<15:8>
0009E6 6EF7               M         movwf   TBLPTRH
0009E8 0E??               M         movlw   low NoData      ; Move Table<7:0>
0009EA 6EF6               M         movwf   TBLPTRL
0009EC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0009EE 50F5               M         movf    TABLAT, W
0009F0                    M loop
0009F0 EC?? F???          M         call    WR_DATA         ; write to LCD
0009F4 000B               M         tblrd+*                 ; next row in table
0009F6 50F5               M         movf    TABLAT, W
0009F8 E1??               M         bnz     loop
0009FA 0EFF           01031         movlw   0xFF
0009FC 6023           01032         cpfslt  REG_EE
0009FE EF?? F???      01033         goto    SkipDispOpRTC
                      01034 
000A02                01035 NoSkipDispOpRTC
                      01036         READEE  REG_EE, H_EE, L_EE
000A02 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A06 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A0A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A0C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A0E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A10 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A14 C023 FFE8      01037         movff   REG_EE, WREG
000A18 0BF1           01038         andlw   b'11110001'
000A1A EC?? F???      01039         call    WR_DATA
000A1E 2A22           01040         incf    L_EE
                      01041         READEE  REG_EE, H_EE, L_EE
000A20 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A24 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A28 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A2A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A2C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A2E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  13:46:53         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A32 C023 FFE8      01042         movff   REG_EE, WREG
000A36 EC?? F???      01043         call    WR_DATA
000A3A 2A22           01044         incf    L_EE
                      01045 
000A3C 0E3A           01046         movlw           ":"
000A3E EC?? F???      01047         call            WR_DATA
000A42 EC?? F???      01048         call DispOpRTC_Helper
000A46 0E20           01049         movlw           " "
000A48 EC?? F???      01050         call            WR_DATA
000A4C EC?? F???      01051         call DispOpRTC_Helper
000A50 0E2F           01052         movlw           "/"
000A52 EC?? F???      01053         call            WR_DATA
000A56 EC?? F???      01054         call DispOpRTC_Helper
000A5A 0E2F           01055         movlw           "/"
000A5C EC?? F???      01056         call            WR_DATA
000A60 EC?? F???      01057         call DispOpRTC_Helper
000A64                01058 SkipDispOpRTC
000A64 0012           01059                 return
000A66                01060 DispOpRTC_Helper
                      01061         READEE          REG_EE, H_EE, L_EE
000A66 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A6A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A6E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A70 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A72 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A74 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A78 C023 FFE8      01062         movff           REG_EE, WREG
000A7C EC?? F???      01063         call            WR_DATA
000A80 2A22           01064         incf            L_EE
                      01065         READEE          REG_EE, H_EE, L_EE
000A82 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A86 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A8A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A8C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A8E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A90 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A94 C023 FFE8      01066         movff           REG_EE, WREG
000A98 EC?? F???      01067         call            WR_DATA
000A9C 2A22           01068         incf            L_EE
000A9E 0012           01069         return
Warning[205]: Found directive in column 1. (end)
                      01070 end

Errors   :     0
Warnings :   133 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

