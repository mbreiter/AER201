MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         temp_ISR
  0000001B            00067         delayR
  0000001C            00068         d5us
  0000001D            00069         d200us
  0000001E            00070         d50ms
  0000001F            00071         inExecution
  00000020            00072         clear_EE
  00000021            00073         H_EE    
  00000022            00074         L_EE    
  00000023            00075         REG_EE  
  00000024            00076         tempH_EE
  00000025            00077         tempL_EE
  00000026            00078         tempL_EEC
  00000027            00079         MAX_EE   
  00000028            00080         READ_EE
  00000029            00081         last_log
  0000002A            00082         startHt
  0000002B            00083         startHo
  0000002C            00084         startMt
  0000002D            00085         startMo
  0000002E            00086         endHt
  0000002F            00087         endHo
  00000030            00088         endMt
  00000031            00089         endMo
  00000032            00090         LED_Count
  00000033            00091         SkipCount
  00000034            00092         exe_sec
  00000035            00093         exe_int
  00000036            00094         timer_H
  00000037            00095         timer_L
  00000038            00096         convert_buffer
  00000039            00097         transferring
  0000003A            00098         PC_PCL
  0000003B            00099         PC_PCLATH
  0000003C            00100         PC_PCLATU
  0000003D            00101         TIMCNT
  0000003E            00102         CPCNT
  0000003F            00103         TDATA
  00000040            00104         DETECTION_VAL
  00000041            00105         ESKA
  00000042            00106         ESKA_CAP
  00000043            00107         YOP
  00000044            00108         YOP_CAP
  00000045            00109         CLEAR:2
  00000047            00110         RED:2
  00000049            00111         GREEN:2
  0000004B            00112         BLUE:2
  0000004D            00113         temp_colour:2
                      00114     endc
                      00115     
  0000                00116     extern tens_digit, ones_digit
  0000                00117     extern READ_ARDUINO, INIT_RTC
                      00118     
                      00119 ;*******************************************************************************
                      00120 ; tables
                      00121 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00122     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00123     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00124     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00125     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00126     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00127     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00128     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00129     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00130     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00131     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00132     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00133     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00134     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00135     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000096 6F43 706D 656C 00136     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (Stopped)
0000A0 7453 706F 6570 00137     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Exe_Time)
0000A8 6954 656D 203A 00138     Exe_Time    db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000B0 6153 6976 676E 00139     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000BA 6153 6566 7974 00140     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000CA 2F4E 0041      00141     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000CE 6954 656D 6120 00142     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00143         
                      00144 ;*******************************************************************************
                      00145 ; macros
                      00146 ;*******************************************************************************
                      00147 
                      00148 TransferTable macro table
                      00149         local loop
                      00150         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00151         movlw   upper table
                      00152         movwf   TBLPTRU
                      00153         movlw   high table
                      00154         movwf   TBLPTRH
                      00155         movlw   low table
                      00156         movwf   TBLPTRL
                      00157         tblrd*
                      00158         movff   TABLAT, WREG
                      00159 loop
                      00160         call    USART_WAIT
                      00161         tblrd+*
                      00162         movff   TABLAT, WREG
                      00163         bnz     loop
                      00164         endm
                      00165         
                      00166 ConfigLCD   macro
                      00167           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00168           call      WR_INS
                      00169 
                      00170           movlw     b'00001100'    ; display on/off
                      00171           call      WR_INS
                      00172           movlw     b'00000001'    ; Clear ram
                      00173           call      WR_INS
                      00174           endm
                      00175         
                      00176 movMSB  macro   port
                      00177         andlw   0xF0
                      00178         iorwf   port, f
                      00179         iorlw   0x0F
                      00180         andwf   port, f
                      00181         endm
                      00182 
                      00183 Delay50N macro count, N
                      00184         local   loop
                      00185         movlw   N
                      00186         movwf   count
                      00187 
                      00188 loop
                      00189         call    Delay50ms
                      00190         decfsz  count
                      00191         goto    loop
                      00192         endm
                      00193 
                      00194 Display macro   Message
                      00195         local   loop
                      00196         movlw   upper Message   ; Move Table<20:16>
                      00197         movwf   TBLPTRU
                      00198         movlw   high Message    ; Move Table<15:8>
                      00199         movwf   TBLPTRH
                      00200         movlw   low Message     ; Move Table<7:0>
                      00201         movwf   TBLPTRL
                      00202         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00203         movf    TABLAT, W
                      00204 loop
                      00205         call    WR_DATA         ; write to LCD
                      00206         tblrd+*                 ; next row in table
                      00207         movf    TABLAT, W
                      00208         bnz     loop
                      00209         endm
                      00210 
                      00211 DisplayLog  macro   addrH, addrL
                      00212             local   Again, Finish
                      00213             
                      00214             clrf    SkipCount
                      00215             clrf    MAX_EE
                      00216 
                      00217             ; Check if there is No Data first
                      00218             READEE      REG_EE, addrH, addrL
                      00219             movlw       0xFF
                      00220             cpfseq      REG_EE
                      00221             goto        Again
                      00222             Display     NoData
                      00223             goto        Finish
                      00224 Again
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00225             ; Put a space every 3 Writes
                      00226             movlw       d'3'
                      00227             cpfslt      SkipCount
                      00228             cpfslt      MAX_EE
                      00229             goto        Finish
                      00230 
                      00231             ; read EEPROM
                      00232             READEE      REG_EE, addrH, addrL
                      00233             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00234             goto        Finish
                      00235 Finish
                      00236             endm
                      00237             
                      00238 ;TransferLog macro   addrH, addrL
                      00239         
                      00240 
                      00241 incf_BCD    macro   BCD
                      00242         local ones, endBCD
                      00243         movff   BCD, temp
                      00244         
                      00245         ;process ones digit
                      00246         movlw   0x0f
                      00247         andwf   temp
                      00248         movlw   d'9'
                      00249         
                      00250         ;skip if ones digit is 9
                      00251         cpfseq  temp
                      00252         goto    ones
                      00253         
                      00254         movlw   b'00010000'
                      00255         addwf   BCD
                      00256         movlw   0xf0
                      00257         andwf   BCD
                      00258         movlw   0xa0
                      00259         cpfslt  BCD
                      00260         
                      00261         clrf    BCD
                      00262         goto    endBCD
                      00263         
                      00264 ones
                      00265         incf    BCD
                      00266         goto    endBCD
                      00267 endBCD
                      00268         nop
                      00269         endm
                      00270         
                      00271 SUB16   macro   x, y        ; does not modify x nor y
                      00272         local   RESULTS
                      00273         movff   y+1, WREG   ; move high y into working register
                      00274         subwf   x+1, 0      ; do subtraction xH - yH => w
                      00275         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00276         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                      00277         
                      00278         movff   y+0, WREG
                      00279         subwf   x+0, 0  
                      00280 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00281         endm
                      00282 
                      00283 WriteRTC    macro
                      00284         movff   tens_digit, WREG
                      00285         call    WR_DATA
                      00286         movff   ones_digit, WREG
                      00287         call    WR_DATA
                      00288         endm
                      00289 
                      00290 WriteEE macro   word, addH, addL
                      00291         movff   addH, EEADRH        ; High address
                      00292         movff   addL, EEADR         ; Low address
                      00293         movff   word, EEDATA        ; set word
                      00294 
                      00295         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00296         bra     $-2
                      00297 
                      00298         bcf     EECON1, EEPGD       ; Point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00299         bcf     EECON1, CFGS        ; Access EEPROM
                      00300         bsf     EECON1, WREN        ; enable write
                      00301         bcf     INTCON, GIE         ; disable interrupts during write
                      00302         bcf     PIR2, EEIF
                      00303 
                      00304         movlw   0x55
                      00305         movwf   EECON2              ; write 55h
                      00306         movlw   0xaa
                      00307         movwf   EECON2              ; write 0xaa
                      00308         bsf     EECON1, WR          ; begin write
                      00309         btfsc   EECON1, WR
                      00310         bra     $-2
                      00311 
                      00312         bsf     INTCON, GIE         ; enable interrupts after write
                      00313         bcf     EECON1, WREN        ; disable writes
                      00314         endm
                      00315 
                      00316 READEE  macro   file, addH, addL
                      00317         movff   addH, EEADRH        ; read to high
                      00318         movff   addL, EEADR         ; read to low
                      00319         bcf     EECON1, EEPGD       ; point to data memory
                      00320         bcf     EECON1, CFGS        ; access to EEPROM
                      00321         bsf     EECON1, RD          ; read EEPROM
                      00322         movff   EEDATA, file        ; put data into file
                      00323         endm
                      00324 
                      00325 ChangeMode  macro   ModeId, NextMode
                      00326         local Next, Exit
                      00327 
                      00328         movlw   ModeId              ; poll for mode
                      00329         cpfseq  KEY                 ; check this against key press
                      00330         goto    Exit
                      00331 
                      00332 Next
                      00333         clrf    LATA                ; clear pins before proceeding
                      00334         clrf    LATB
                      00335         clrf    LATC
                      00336         clrf    LATD
                      00337         goto    NextMode
                      00338 
                      00339 Exit
                      00340         nop
                      00341         endm
                      00342 
                      00343 saveContext macro
                      00344     movff   STATUS, temp_S          ; save STATUS first
                      00345     movwf   temp_W                  ; save W
                      00346     endm
                      00347 
                      00348 restoreContext macro
                      00349     swapf   temp_W, 0               ; restore W first
                      00350     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00351     endm
                      00352 ;*******************************************************************************
                      00353 ; reset vector and isrs
                      00354 ;*******************************************************************************
                      00355         ORG     0x000               ; processor reset vector
000000 EF?? F???      00356         goto    INIT                ; go to beginning of program
                      00357 
                      00358         ORG     0x008
000008 EF?? F???      00359         goto    ISR_HIGH
                      00360 
                      00361         ORG     0x018
000018 EF?? F???      00362         goto    ISR_LOW
                      00363 
00001C                00364 ISR_HIGH
                      00365         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00366         
                      00367         ; displaying the execution time in seconds
Warning[202]: Argument out of range.  Least significant bits used.
000022 3818           00368         swapf   OP_sec, WREG    ; 100's seconds
000024 6E17           00369         movwf   temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000026 0E0F           00370         movlw   0x0F
000028 1617           00371         andwf   temp
00002A C017 FFE8      00372         movff   temp, WREG
00002E 0F30           00373         addlw   0x30
000030 EC?? F???      00374         call    WR_DATA
                      00375 
000034 C018 F017      00376         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00377         movlw   0x0F
00003A 1617           00378         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C017 FFE8      00379         movff   temp, WREG      ; W = Temp
000040 0F30           00380         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00381         call    WR_DATA
                      00382         
Warning[202]: Argument out of range.  Least significant bits used.
000046 3819           00383         swapf   OP_INT, WREG    ;1's seconds
000048 6E17           00384         movwf   temp
00004A 0E0F           00385         movlw   0x0f
00004C 1617           00386         andwf   temp
00004E C017 FFE8      00387         movff   temp, WREG
000052 0F30           00388         addlw   0x30
000054 EC?? F???      00389         call    WR_DATA
                      00390 
000058 0E73           00391         movlw   0x73            ; Write 's'
00005A EC?? F???      00392         call    WR_DATA
00005E EC?? F???      00393         call    LCD_L2
                      00394 
                      00395         ;reset timer 
000062 0EC6           00396         movlw   0xc6
000064 6ED7           00397         movwf   TMR0H
000066 0E3E           00398         movlw   0x3e
000068 6ED6           00399         movwf   TMR0L
                      00400                 
                      00401         ;timer interrupt
00006A A4F2           00402         btfss   INTCON, TMR0IF
00006C EF?? F???      00403         goto    END_ISR_HIGH
                      00404         
                      00405         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1617               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6217               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 2619               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 1619               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 6019               M         cpfslt  OP_INT
                          M         
00008C 6A19               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A19               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00406         movlw   d'0'
00009C 6219           00407         cpfseq  OP_INT
00009E EF?? F???      00408         goto    END_ISR_HIGH
                      00409         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1617               M         andwf   temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6217               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2618               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1618               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6018               M         cpfslt  OP_sec
                          M         
0000BE 6A18               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
                          M         
0000C4                    M ones
0000C4 2A18               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
0000CA 0000               M         nop
                      00410 
0000CC                00411 END_ISR_HIGH
0000CC 94F2           00412         bcf     INTCON, TMR0IF
                      00413         restoreContext
0000CE 3814               M     swapf   temp_W, 0               ; restore W first
0000D0 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00414         retfie
                      00415 
0000D6                00416 ISR_LOW
                      00417         saveContext
0000D6 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E14               M     movwf   temp_W                  ; save W
                      00418         ; KEYPAD INTERRUPT
0000DC A0F0           00419         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00420         goto            END_ISR_LOW
                      00421 
                      00422         ;Check operation status
                      00423 ;       movlw           0xff                                    ; If in operation, skip return
                      00424 ;       cpfseq          InExecution
                      00425 ;       goto            END_ISR_LOW
                      00426 
                      00427         ; Process KEY
0000E2 3881           00428         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00429         andlw           0x0f
0000E6 6E12           00430         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00431 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00432 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000E8 EF?? F???      00433         goto            END_ISR_LOW
                      00434 
                      00435         ; Reset program counter
0000EC 6AFF           00436         clrf            TOSU
0000EE 6AFE           00437         clrf            TOSH
0000F0 6AFD           00438         clrf            TOSL
                      00439 
0000F2                00440 END_ISR_LOW
0000F2 90F0           00441         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00442         restoreContext
0000F4 3814               M     swapf   temp_W, 0               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000FA 0010           00443         retfie
                      00444 
                      00445 ;*******************************************************************************
                      00446 ; main
                      00447 ;*******************************************************************************
0000FC                00448 INIT
                      00449         ; i/o
0000FC 0E00           00450         movlw   b'00000000'
0000FE 6E92           00451         movwf   TRISA
000100 0EFF           00452         movlw   b'11111111'
000102 6E93           00453         movwf   TRISB               ; keypad
000104 0E00           00454         movlw   b'00000000'
000106 6E94           00455         movwf   TRISC
000108 0E00           00456         movlw   b'00000000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00010A 6E95           00457         movwf   TRISD
00010C 0E07           00458         movlw   b'00000111'
00010E 6E96           00459         movwf   TRISE
                      00460 
                      00461         ; clear ports
000110 0E00           00462         movlw   b'00000000'
000112 6E89           00463         movwf   LATA
000114 0E00           00464         movlw   b'00000000'
000116 6E8A           00465         movwf   LATB
000118 0E00           00466         movlw   b'00000000'
00011A 6E8B           00467         movwf   LATC
00011C 0E00           00468         movlw   b'00000000'
00011E 6E8C           00469         movwf   LATD
000120 0E00           00470         movlw   b'00000000'
000122 6E8D           00471         movwf   LATE
                      00472         
000124 0E00           00473         movlw   b'00000000'
000126 6EC2           00474         movwf   ADCON0
000128 0EFF           00475         movlw   b'11111111'
00012A 6EC1           00476         movwf   ADCON1
                      00477         
                      00478         ; initializations
00012C EC?? F???      00479         call    InitLCD
                      00480         ConfigLCD
000130 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000132 EC?? F???          M           call      WR_INS
                          M 
000136 0E0C               M           movlw     b'00001100'    ; display on/off
000138 EC?? F???          M           call      WR_INS
00013C 0E01               M           movlw     b'00000001'    ; Clear ram
00013E EC?? F???          M           call      WR_INS
                      00481         
000142 EC?? F???      00482         call    i2c_common_setup
                      00483         
000146 EC?? F???      00484         call    RTC_INIT
00014A EC?? F???      00485         call    ARDUINO_INIT
                      00486         ;COLOUR_INIT
00014E EC?? F???      00487         call    INIT_USART
                      00488 
                      00489         ; interrupts
000152 6AD0           00490         clrf    RCON
000154 6AF2           00491         clrf    INTCON
000156 6AF1           00492         clrf    INTCON2
000158 6AF0           00493         clrf    INTCON3
00015A 8ED0           00494         bsf     RCON, IPEN          ; priority mode
00015C 8EF2           00495         bsf     INTCON, GIEH        ; permit global interrupts
00015E 8CF2           00496         bsf     INTCON, GIEL
000160 8AF1           00497         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000162 8AF2           00498         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000164 84F2           00499         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000166 84F1           00500         bsf     INTCON2, TMR0IP     ; set to high priority
000168 86F0           00501         bsf     INTCON3, INT1IE
00016A 9CF0           00502         bcf     INTCON3, INT1IP
                      00503         
                      00504         ; setting up timer to sychronize with 1 second clock intervals
00016C 9ED5           00505         bcf     T0CON, TMR0ON
00016E 9CD5           00506         bcf     T0CON, T08BIT
000170 9AD5           00507         bcf     T0CON, T0CS
000172 98D5           00508         bcf     T0CON, T0SE
000174 96D5           00509         bcf     T0CON, PSA
000176 94D5           00510         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
000178 82D5           00511         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
00017A 80D5           00512         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00513 
00017C 6A21           00514         clrf    H_EE
00017E 6A22           00515         clrf    L_EE
000180 6A??           00516         clrf    tens_digit
000182 6A??           00517         clrf    ones_digit
000184 6A40           00518         clrf    DETECTION_VAL
000186 6A41           00519         clrf    ESKA
000188 6A42           00520         clrf    ESKA_CAP
00018A 6A43           00521         clrf    YOP
00018C 6A44           00522         clrf    YOP_CAP
00018E 6A45           00523         clrf    CLEAR+0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000190 6A46           00524         clrf    CLEAR+1 
000192 6A47           00525         clrf    RED+0
000194 6A48           00526         clrf    RED+1
000196 6A49           00527         clrf    GREEN+0
000198 6A4A           00528         clrf    GREEN+1
00019A 6A4B           00529         clrf    BLUE+0
00019C 6A4C           00530         clrf    BLUE+1
                      00531         
00019E 0EF2           00532         movlw     b'11110010'    ; Set required keypad inputs
0001A0 6E93           00533         movwf     TRISB
                      00534         
0001A2 EC?? F???      00535         call    ClrLCD
                      00536         Display Welcome
  0000                    M         local   loop
0001A6 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001A8 6EF8               M         movwf   TBLPTRU
0001AA 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001AC 6EF7               M         movwf   TBLPTRH
0001AE 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001B0 6EF6               M         movwf   TBLPTRL
0001B2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001B4 50F5               M         movf    TABLAT, W
0001B6                    M loop
0001B6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001BA 000B               M         tblrd+*                 ; next row in table
0001BC 50F5               M         movf    TABLAT, W
0001BE E1??               M         bnz     loop
0001C0 EC?? F???      00537         call LCD_L2
                      00538         Display Team
  0000                    M         local   loop
0001C4 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001C6 6EF8               M         movwf   TBLPTRU
0001C8 0E??               M         movlw   high Team       ; Move Table<15:8>
0001CA 6EF7               M         movwf   TBLPTRH
0001CC 0E??               M         movlw   low Team        ; Move Table<7:0>
0001CE 6EF6               M         movwf   TBLPTRL
0001D0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D2 50F5               M         movf    TABLAT, W
0001D4                    M loop
0001D4 EC?? F???          M         call    WR_DATA         ; write to LCD
0001D8 000B               M         tblrd+*                 ; next row in table
0001DA 50F5               M         movf    TABLAT, W
0001DC E1??               M         bnz     loop
                      00539         
                      00540         Delay50N delayR, 0x28
  0000                    M         local   loop
0001DE 0E28               M         movlw   0x28
0001E0 6E1B               M         movwf   delayR
                          M 
0001E2                    M loop
0001E2 EC?? F???          M         call    Delay50ms
0001E6 2E1B               M         decfsz  delayR
0001E8 EF?? F???          M         goto    loop
                      00541 
                      00542 ;*******************************************************************************
                      00543 ; standby mode
                      00544 ;*******************************************************************************
0001EC                00545 STANDBY
0001EC EC?? F???      00546         call    ClrLCD
                      00547         Display StandBy
  0000                    M         local   loop
0001F0 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F2 6EF8               M         movwf   TBLPTRU
0001F4 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001F6 6EF7               M         movwf   TBLPTRH
0001F8 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FA 6EF6               M         movwf   TBLPTRL
0001FC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001FE 50F5               M         movf    TABLAT, W
000200                    M loop
000200 EC?? F???          M         call    WR_DATA         ; write to LCD
000204 000B               M         tblrd+*                 ; next row in table
000206 50F5               M         movf    TABLAT, W
000208 E1??               M         bnz     loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00548 
00020A                00549 HOLD_STANDBY
00020A EC?? F???      00550         call    READ_KEY_TIME
                      00551         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
00020E 0E00               M         movlw   key1                ; poll for mode
000210 6210               M         cpfseq  KEY                 ; check this against key press
000212 EF?? F???          M         goto    Exit
                          M 
000216                    M Next
000216 6A89               M         clrf    LATA                ; clear pins before proceeding
000218 6A8A               M         clrf    LATB
00021A 6A8B               M         clrf    LATC
00021C 6A8C               M         clrf    LATD
00021E EF?? F???          M         goto    COLOUR_TEST
                          M 
000222                    M Exit
000222 0000               M         nop
                      00552         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000224 0E01               M         movlw   key2                ; poll for mode
000226 6210               M         cpfseq  KEY                 ; check this against key press
000228 EF?? F???          M         goto    Exit
                          M 
00022C                    M Next
00022C 6A89               M         clrf    LATA                ; clear pins before proceeding
00022E 6A8A               M         clrf    LATB
000230 6A8B               M         clrf    LATC
000232 6A8C               M         clrf    LATD
000234 EF?? F???          M         goto    STEP_TEST
                          M 
000238                    M Exit
000238 0000               M         nop
                      00553         ChangeMode  key3, IR_TEST
  0000                    M         local Next, Exit
                          M 
00023A 0E02               M         movlw   key3                ; poll for mode
00023C 6210               M         cpfseq  KEY                 ; check this against key press
00023E EF?? F???          M         goto    Exit
                          M 
000242                    M Next
000242 6A89               M         clrf    LATA                ; clear pins before proceeding
000244 6A8A               M         clrf    LATB
000246 6A8B               M         clrf    LATC
000248 6A8C               M         clrf    LATD
00024A EF?? F???          M         goto    IR_TEST
                          M 
00024E                    M Exit
00024E 0000               M         nop
                      00554         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000250 0E03               M         movlw   keyA                ; poll for mode
000252 6210               M         cpfseq  KEY                 ; check this against key press
000254 EF?? F???          M         goto    Exit
                          M 
000258                    M Next
000258 6A89               M         clrf    LATA                ; clear pins before proceeding
00025A 6A8A               M         clrf    LATB
00025C 6A8B               M         clrf    LATC
00025E 6A8C               M         clrf    LATD
000260 EF?? F???          M         goto    EXECUTION
                          M 
000264                    M Exit
000264 0000               M         nop
                      00555         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
000266 0E07               M         movlw   keyB                ; poll for mode
000268 6210               M         cpfseq  KEY                 ; check this against key press
00026A EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00026E                    M Next
00026E 6A89               M         clrf    LATA                ; clear pins before proceeding
000270 6A8A               M         clrf    LATB
000272 6A8B               M         clrf    LATC
000274 6A8C               M         clrf    LATD
000276 EF?? F???          M         goto    LOG
                          M 
00027A                    M Exit
00027A 0000               M         nop
                      00556         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
00027C 0E0B               M         movlw   keyC                ; poll for mode
00027E 6210               M         cpfseq  KEY                 ; check this against key press
000280 EF?? F???          M         goto    Exit
                          M 
000284                    M Next
000284 6A89               M         clrf    LATA                ; clear pins before proceeding
000286 6A8A               M         clrf    LATB
000288 6A8B               M         clrf    LATC
00028A 6A8C               M         clrf    LATD
00028C EF?? F???          M         goto    PERM_LOG
                          M 
000290                    M Exit
000290 0000               M         nop
                      00557         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000292 0E0F               M         movlw   keyD                ; poll for mode
000294 6210               M         cpfseq  KEY                 ; check this against key press
000296 EF?? F???          M         goto    Exit
                          M 
00029A                    M Next
00029A 6A89               M         clrf    LATA                ; clear pins before proceeding
00029C 6A8A               M         clrf    LATB
00029E 6A8B               M         clrf    LATC
0002A0 6A8C               M         clrf    LATD
0002A2 EF?? F???          M         goto    PC_MODE
                          M 
0002A6                    M Exit
0002A6 0000               M         nop
0002A8 D???           00558         bra     HOLD_STANDBY
                      00559 
                      00560 ;*******************************************************************************
                      00561 ; execution mode
                      00562 ;*******************************************************************************
                      00563 
0002AA                00564 IR_TEST
0002AA 0E63           00565         movlw   'c'
0002AC B080           00566         btfsc   PORTA, 0
0002AE 0E6E           00567         movlw   'n'
0002B0 EC?? F???      00568         call    WR_DATA
                      00569         Delay50N delayR, 0x14
  0000                    M         local   loop
0002B4 0E14               M         movlw   0x14
0002B6 6E1B               M         movwf   delayR
                          M 
0002B8                    M loop
0002B8 EC?? F???          M         call    Delay50ms
0002BC 2E1B               M         decfsz  delayR
0002BE EF?? F???          M         goto    loop
0002C2 EC?? F???      00570         call    ClrLCD
                      00571         Delay50N delayR, 0x14
  0000                    M         local   loop
0002C6 0E14               M         movlw   0x14
0002C8 6E1B               M         movwf   delayR
                          M 
0002CA                    M loop
0002CA EC?? F???          M         call    Delay50ms
0002CE 2E1B               M         decfsz  delayR
0002D0 EF?? F???          M         goto    loop
Warning[203]: Found opcode in column 1. (bra)
0002D4 D???           00572 bra IR_TEST
                      00573         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002D6                00574 STEP_TEST
0002D6 0E03           00575         movlw   b'00000011'
0002D8 6E80           00576         movwf   PORTA
0002DA EC?? F???      00577         call    delay5ms
                      00578         
0002DE 0E06           00579         movlw   b'00000110'
0002E0 6E80           00580         movwf   PORTA
0002E2 EC?? F???      00581         call    delay5ms
                      00582         
0002E6 0E0C           00583         movlw   b'00001100'
0002E8 6E80           00584         movwf   PORTA
0002EA EC?? F???      00585         call    delay5ms
                      00586 
0002EE 0E09           00587         movlw   b'00001001'
0002F0 6E80           00588         movwf   PORTA
0002F2 EC?? F???      00589         call    delay5ms
                      00590 
0002F6 D???           00591         bra STEP_TEST
                      00592         
0002F8                00593 COLOUR_TEST
                      00594 
0002F8                00595 LOOPING
                      00596         Delay50N delayR, 0x28
  0000                    M         local   loop
0002F8 0E28               M         movlw   0x28
0002FA 6E1B               M         movwf   delayR
                          M 
0002FC                    M loop
0002FC EC?? F???          M         call    Delay50ms
000300 2E1B               M         decfsz  delayR
000302 EF?? F???          M         goto    loop
000306 EC?? F???      00597         call    ClrLCD
00030A 0E77           00598         movlw   'w'
00030C EC?? F???      00599         call    WR_DATA
                      00600         Delay50N delayR, 0x28
  0000                    M         local   loop
000310 0E28               M         movlw   0x28
000312 6E1B               M         movwf   delayR
                          M 
000314                    M loop
000314 EC?? F???          M         call    Delay50ms
000318 2E1B               M         decfsz  delayR
00031A EF?? F???          M         goto    loop
00031E EC?? F???      00601         call    ClrLCD
                      00602         
000322 0E72           00603         movlw   'r'
                      00604         
000324 EC?? F???      00605         call    READ_ARDUINO
000328 EC?? F???      00606         call    WR_DATA
                      00607         
                      00608 ;       COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
                      00609 ;       Delay50N delayR, 0x02
                      00610         
                      00611 ;       movlw   0x01            ;testing
                      00612 ;       movwf   CLEAR+1
                      00613 ;       movlw   0x06
                      00614 ;       movwf   GREEN+0
                      00615 ;       movlw   0x03
                      00616 ;       movwf   RED+0
                      00617 ;       movlw   0x01
                      00618 ;       movwf   BLUE+0
                      00619         
                      00620 ;       movlw   d'0'
                      00621 ;       cpfseq  RED+0
                      00622 ;       movlw   'w'
                      00623 ;       call    WR_DATA
                      00624 
                      00625         ;call   CHECK_CLEAR
                      00626 ;       call    CHECK_RED
                      00627 ;       call    CHECK_GREEN
                      00628 ;       call    CHECK_BLUE
00032C D???           00629         bra LOOPING
                      00630         
00032E                00631 EXECUTION
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00032E EC?? F???      00632         call        ClearEEPROM_21
                      00633         ; save the starting time
000332 EC?? F???      00634         call        SAVE_TIME
                      00635                 
                      00636         ; display
000336 681F           00637         setf        inExecution
000338 EC?? F???      00638         call        ClrLCD
                      00639         Display     Exe1
  0000                    M         local   loop
00033C 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
00033E 6EF8               M         movwf   TBLPTRU
000340 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000342 6EF7               M         movwf   TBLPTRH
000344 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000346 6EF6               M         movwf   TBLPTRL
000348 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00034A 50F5               M         movf    TABLAT, W
00034C                    M loop
00034C EC?? F???          M         call    WR_DATA         ; write to LCD
000350 000B               M         tblrd+*                 ; next row in table
000352 50F5               M         movf    TABLAT, W
000354 E1??               M         bnz     loop
000356 EC?? F???      00640         call        LCD_L2
00035A 0EC5           00641         movlw       0xc5                    ; setting up timer
00035C 6ED7           00642         movwf       TMR0H
00035E 0E44           00643         movlw       0x44    
000360 6ED6           00644         movwf       TMR0L
                      00645         
000362 8ED5           00646         bsf         T0CON, TMR0ON           ; turning on timer
                      00647         ; initialize variables
000364 6A18           00648         clrf        OP_sec
000366 6A19           00649         clrf        OP_INT
                      00650         
000368 6A41           00651         clrf        ESKA
00036A 6A42           00652         clrf        ESKA_CAP
00036C 6A43           00653         clrf        YOP
00036E 6A44           00654         clrf        YOP_CAP
                      00655         
000370 6A45           00656         clrf        CLEAR
000372 6A46           00657         clrf        CLEAR+1     
000374 6A47           00658         clrf        RED
000376 6A48           00659         clrf        RED+1
000378 6A49           00660         clrf        GREEN
00037A 6A4A           00661         clrf        GREEN+1
00037C 6A4B           00662         clrf        BLUE
00037E 6A4C           00663         clrf        BLUE+1
                      00664         
                      00665 ;COLLECTIONS_STEP
                      00666 ;       
                      00667 ;TERM_CHECK
                      00668 ;       
                      00669 ;BOTTLE_CHECK
                      00670 ;
                      00671 ;COLOUR_ONE
                      00672 ;
                      00673 ;COLOUR_TWO
                      00674 ;       
                      00675 ;BRAINS
                      00676 ;       
                      00677 ;TRAY_STEP
                      00678 ;       
                      00679 
000380                00680 HOLD_EXE
000380 EC?? F???      00681         call        READ_KEY
                      00682         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000384 0E0C               M         movlw   keyS                ; poll for mode
000386 6210               M         cpfseq  KEY                 ; check this against key press
000388 EF?? F???          M         goto    Exit
                          M 
00038C                    M Next
00038C 6A89               M         clrf    LATA                ; clear pins before proceeding
00038E 6A8A               M         clrf    LATB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000390 6A8B               M         clrf    LATC
000392 6A8C               M         clrf    LATD
000394 EF?? F???          M         goto    EXIT_EXE
                          M 
000398                    M Exit
000398 0000               M         nop
00039A D???           00683         bra         HOLD_EXE
                      00684         
00039C                00685 EXIT_EXE
                      00686         ; stop timer and save the execution time to eeprom
00039C 9ED5           00687         bcf         T0CON, TMR0ON
00039E EC?? F???      00688         call        SAVE_EXE_TIME
                      00689                 
                      00690         ; Clear inExecution flag to stop '*' interrupts
0003A2 6A1F           00691         clrf        inExecution
                      00692         
0003A4 C041 FFE8      00693         movff       ESKA, WREG
0003A8 0F30           00694         addlw       0x30
                      00695         WriteEE     WREG, H_EE, L_EE
0003AA C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0003AE C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0003B2 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0003B6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0003B8 D???               M         bra     $-2
                          M 
0003BA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0003BC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0003BE 84A6               M         bsf     EECON1, WREN        ; enable write
0003C0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0003C2 98A1               M         bcf     PIR2, EEIF
                          M 
0003C4 0E55               M         movlw   0x55
0003C6 6EA7               M         movwf   EECON2              ; write 55h
0003C8 0EAA               M         movlw   0xaa
0003CA 6EA7               M         movwf   EECON2              ; write 0xaa
0003CC 82A6               M         bsf     EECON1, WR          ; begin write
0003CE B2A6               M         btfsc   EECON1, WR
0003D0 D???               M         bra     $-2
                          M 
0003D2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0003D4 94A6               M         bcf     EECON1, WREN        ; disable writes
0003D6 2A22           00696         incf        L_EE
                      00697         
0003D8 C042 FFE8      00698         movff       ESKA_CAP, WREG
0003DC 0F30           00699         addlw       0x30
                      00700         WriteEE     WREG, H_EE, L_EE
0003DE C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0003E2 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0003E6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0003EA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0003EC D???               M         bra     $-2
                          M 
0003EE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0003F0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0003F2 84A6               M         bsf     EECON1, WREN        ; enable write
0003F4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0003F6 98A1               M         bcf     PIR2, EEIF
                          M 
0003F8 0E55               M         movlw   0x55
0003FA 6EA7               M         movwf   EECON2              ; write 55h
0003FC 0EAA               M         movlw   0xaa
0003FE 6EA7               M         movwf   EECON2              ; write 0xaa
000400 82A6               M         bsf     EECON1, WR          ; begin write
000402 B2A6               M         btfsc   EECON1, WR
000404 D???               M         bra     $-2
                          M 
000406 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000408 94A6               M         bcf     EECON1, WREN        ; disable writes
00040A 2A22           00701         incf        L_EE
                      00702         
00040C C043 FFE8      00703         movff       YOP, WREG
000410 0F30           00704         addlw       0x30
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00705         WriteEE     WREG, H_EE, L_EE
000412 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000416 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
00041A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00041E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000420 D???               M         bra     $-2
                          M 
000422 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000424 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000426 84A6               M         bsf     EECON1, WREN        ; enable write
000428 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00042A 98A1               M         bcf     PIR2, EEIF
                          M 
00042C 0E55               M         movlw   0x55
00042E 6EA7               M         movwf   EECON2              ; write 55h
000430 0EAA               M         movlw   0xaa
000432 6EA7               M         movwf   EECON2              ; write 0xaa
000434 82A6               M         bsf     EECON1, WR          ; begin write
000436 B2A6               M         btfsc   EECON1, WR
000438 D???               M         bra     $-2
                          M 
00043A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00043C 94A6               M         bcf     EECON1, WREN        ; disable writes
00043E 2A22           00706         incf        L_EE
                      00707         
000440 C044 FFE8      00708         movff       YOP_CAP, WREG
000444 0F30           00709         addlw       0x30
                      00710         WriteEE     WREG, H_EE, L_EE
000446 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00044A C022 FFA9          M         movff   L_EE, EEADR         ; Low address
00044E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000452 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000454 D???               M         bra     $-2
                          M 
000456 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000458 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00045A 84A6               M         bsf     EECON1, WREN        ; enable write
00045C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00045E 98A1               M         bcf     PIR2, EEIF
                          M 
000460 0E55               M         movlw   0x55
000462 6EA7               M         movwf   EECON2              ; write 55h
000464 0EAA               M         movlw   0xaa
000466 6EA7               M         movwf   EECON2              ; write 0xaa
000468 82A6               M         bsf     EECON1, WR          ; begin write
00046A B2A6               M         btfsc   EECON1, WR
00046C D???               M         bra     $-2
                          M 
00046E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000470 94A6               M         bcf     EECON1, WREN        ; disable writes
000472 2A22           00711         incf        L_EE
                      00712         
000474 EF?? F???      00713         goto        SaveData
                      00714 
000478                00715 SaveData
000478 EC?? F???      00716         call        ClrLCD
                      00717         Display     SAVE
  0000                    M         local   loop
00047C 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
00047E 6EF8               M         movwf   TBLPTRU
000480 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000482 6EF7               M         movwf   TBLPTRH
000484 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000486 6EF6               M         movwf   TBLPTRL
000488 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00048A 50F5               M         movf    TABLAT, W
00048C                    M loop
00048C EC?? F???          M         call    WR_DATA         ; write to LCD
000490 000B               M         tblrd+*                 ; next row in table
000492 50F5               M         movf    TABLAT, W
000494 E1??               M         bnz     loop
                      00718 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000496 0E00           00719         movlw       d'0'
000498 6E21           00720         movwf       H_EE
00049A 0EA8           00721         movlw       d'168'              ; take d'168' as last
00049C 6E22           00722         movwf       L_EE
00049E 0E00           00723         movlw       d'0'
0004A0 6E24           00724         movwf       tempH_EE
0004A2 0EDC           00725         movlw       d'220'              ; temp for low constant
0004A4 6E25           00726         movwf       tempL_EE
                      00727         
0004A6 6A16           00728         clrf        counter2
0004A8 6A15           00729         clrf        counter
                      00730         
0004AA                00731 ShiftLoop
0004AA 2A15           00732         incf            counter
                      00733         READEE          REG_EE, H_EE, L_EE
0004AC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004B0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0004B4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004B6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004B8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004BA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0004BE 0E15           00734         movlw           d'21'
0004C0 2622           00735         addwf           L_EE
                      00736         WriteEE         REG_EE, H_EE, L_EE
0004C2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004C6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004CA C023 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0004CE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004D0 D???               M         bra     $-2
                          M 
0004D2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004D4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004D6 84A6               M         bsf     EECON1, WREN        ; enable write
0004D8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004DA 98A1               M         bcf     PIR2, EEIF
                          M 
0004DC 0E55               M         movlw   0x55
0004DE 6EA7               M         movwf   EECON2              ; write 55h
0004E0 0EAA               M         movlw   0xaa
0004E2 6EA7               M         movwf   EECON2              ; write 0xaa
0004E4 82A6               M         bsf     EECON1, WR          ; begin write
0004E6 B2A6               M         btfsc   EECON1, WR
0004E8 D???               M         bra     $-2
                          M 
0004EA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004EC 94A6               M         bcf     EECON1, WREN        ; disable writes
0004EE 0E14           00737         movlw           d'20'
0004F0 5E22           00738         subwf           L_EE
0004F2 0E15           00739         movlw           d'21'
0004F4 6215           00740         cpfseq          counter
0004F6 EF?? F???      00741         goto            ShiftLoop
                      00742         
                      00743         ; Set EEPROM address to the previous 21 byte block, and reset temp address
0004FA 0E2A           00744         movlw           d'42'
0004FC 5E22           00745         subwf           L_EE
0004FE 0EDC           00746         movlw           d'220'
000500 6E25           00747         movwf           tempL_EE
000502 6A15           00748         clrf            counter
000504 2A16           00749         incf            counter2
000506 0E09           00750         movlw           d'9'
000508 6216           00751         cpfseq          counter2        ; Skip if 9 shifts were made
00050A EF?? F???      00752         goto            ShiftLoop
                      00753 
00050E EF?? F???      00754         goto            LOG
                      00755 
                      00756 ;*******************************************************************************
                      00757 ; sorting statistics log mode
                      00758 ;*******************************************************************************
                      00759         
000512                00760 LOG
000512 EC?? F???      00761         call    ClrLCD
                      00762         Display Log1
  0000                    M         local   loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000516 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000518 6EF8               M         movwf   TBLPTRU
00051A 0E??               M         movlw   high Log1       ; Move Table<15:8>
00051C 6EF7               M         movwf   TBLPTRH
00051E 0E??               M         movlw   low Log1        ; Move Table<7:0>
000520 6EF6               M         movwf   TBLPTRL
000522 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000524 50F5               M         movf    TABLAT, W
000526                    M loop
000526 EC?? F???          M         call    WR_DATA         ; write to LCD
00052A 000B               M         tblrd+*                 ; next row in table
00052C 50F5               M         movf    TABLAT, W
00052E E1??               M         bnz     loop
                      00763 
                      00764         ; display most recent run data
000530 0E0A           00765         movlw   d'10'
000532 6E22           00766         movwf   L_EE
                      00767 ;       READEE  OP_sec, H_EE, L_EE
                      00768 ;       incf    L_EE
                      00769 ;       READEE  OP_INT, H_EE, L_EE
                      00770 ;       incf    L_EE
000534 EC?? F???      00771         call    DisplayExeTime
                      00772 
000538 EC?? F???      00773         call    LCD_L2
00053C 6A22           00774         clrf    L_EE
00053E EC?? F???      00775         call    DispOpRTC
                      00776 
000542                00777 HOLD_LOG
000542 EC?? F???      00778         call    READ_KEY
                      00779         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000546 0E07               M         movlw   keyB                ; poll for mode
000548 6210               M         cpfseq  KEY                 ; check this against key press
00054A EF?? F???          M         goto    Exit
                          M 
00054E                    M Next
00054E 6A89               M         clrf    LATA                ; clear pins before proceeding
000550 6A8A               M         clrf    LATB
000552 6A8B               M         clrf    LATC
000554 6A8C               M         clrf    LATD
000556 EF?? F???          M         goto    LOG_INFO
                          M 
00055A                    M Exit
00055A 0000               M         nop
                      00780         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00055C 0E0D               M         movlw   key0                ; poll for mode
00055E 6210               M         cpfseq  KEY                 ; check this against key press
000560 EF?? F???          M         goto    Exit
                          M 
000564                    M Next
000564 6A89               M         clrf    LATA                ; clear pins before proceeding
000566 6A8A               M         clrf    LATB
000568 6A8B               M         clrf    LATC
00056A 6A8C               M         clrf    LATD
00056C EF?? F???          M         goto    STANDBY
                          M 
000570                    M Exit
000570 0000               M         nop
000572 D???           00781         bra     HOLD_LOG
                      00782 
000574                00783 LOG_INFO
000574 EC?? F???      00784         call    ClrLCD
                      00785         Display LogInfo1
  0000                    M         local   loop
000578 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
00057A 6EF8               M         movwf   TBLPTRU
00057C 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
00057E 6EF7               M         movwf   TBLPTRH
000580 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000582 6EF6               M         movwf   TBLPTRL
000584 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000586 50F5               M         movf    TABLAT, W
000588                    M loop
000588 EC?? F???          M         call    WR_DATA         ; write to LCD
00058C 000B               M         tblrd+*                 ; next row in table
00058E 50F5               M         movf    TABLAT, W
000590 E1??               M         bnz     loop
000592 EC?? F???      00786         call    LCD_L2
                      00787         Display LogInfo2
  0000                    M         local   loop
000596 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000598 6EF8               M         movwf   TBLPTRU
00059A 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00059C 6EF7               M         movwf   TBLPTRH
00059E 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0005A0 6EF6               M         movwf   TBLPTRL
0005A2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005A4 50F5               M         movf    TABLAT, W
0005A6                    M loop
0005A6 EC?? F???          M         call    WR_DATA         ; write to LCD
0005AA 000B               M         tblrd+*                 ; next row in table
0005AC 50F5               M         movf    TABLAT, W
0005AE E1??               M         bnz     loop
0005B0 6A21           00788         clrf    H_EE
0005B2 6A22           00789         clrf    L_EE
                      00790         ;DisplayLog  H_EE, L_EE
0005B4                00791 HOLD_LOG_INFO
0005B4 EC?? F???      00792         call    READ_KEY
                      00793         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005B8 0E0D               M         movlw   key0                ; poll for mode
0005BA 6210               M         cpfseq  KEY                 ; check this against key press
0005BC EF?? F???          M         goto    Exit
                          M 
0005C0                    M Next
0005C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005C2 6A8A               M         clrf    LATB
0005C4 6A8B               M         clrf    LATC
0005C6 6A8C               M         clrf    LATD
0005C8 EF?? F???          M         goto    LOG
                          M 
0005CC                    M Exit
0005CC 0000               M         nop
0005CE D???           00794         bra     HOLD_LOG
                      00795         
                      00796 ;*******************************************************************************
                      00797 ; permanent logs
                      00798 ;*******************************************************************************
                      00799 
0005D0                00800 PERM_LOG
0005D0 EC?? F???      00801         call    ClrLCD
                      00802         Display PermLog1
  0000                    M         local   loop
0005D4 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005D6 6EF8               M         movwf   TBLPTRU
0005D8 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005DA 6EF7               M         movwf   TBLPTRH
0005DC 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005DE 6EF6               M         movwf   TBLPTRL
0005E0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005E2 50F5               M         movf    TABLAT, W
0005E4                    M loop
0005E4 EC?? F???          M         call    WR_DATA         ; write to LCD
0005E8 000B               M         tblrd+*                 ; next row in table
0005EA 50F5               M         movf    TABLAT, W
0005EC E1??               M         bnz     loop
0005EE EC?? F???      00803         call    LCD_L2
                      00804         Display PermLog2
  0000                    M         local   loop
0005F2 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0005F4 6EF8               M         movwf   TBLPTRU
0005F6 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0005F8 6EF7               M         movwf   TBLPTRH
0005FA 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005FC 6EF6               M         movwf   TBLPTRL
0005FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000600 50F5               M         movf    TABLAT, W
000602                    M loop
000602 EC?? F???          M         call    WR_DATA         ; write to LCD
000606 000B               M         tblrd+*                 ; next row in table
000608 50F5               M         movf    TABLAT, W
00060A E1??               M         bnz     loop
                      00805         
00060C                00806 HOLD_PERM_LOG
00060C EC?? F???      00807         call    READ_KEY
                      00808         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000610 0E0D               M         movlw   key0                ; poll for mode
000612 6210               M         cpfseq  KEY                 ; check this against key press
000614 EF?? F???          M         goto    Exit
                          M 
000618                    M Next
000618 6A89               M         clrf    LATA                ; clear pins before proceeding
00061A 6A8A               M         clrf    LATB
00061C 6A8B               M         clrf    LATC
00061E 6A8C               M         clrf    LATD
000620 EF?? F???          M         goto    STANDBY
                          M 
000624                    M Exit
000624 0000               M         nop
                      00809         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000626 0E00               M         movlw   key1                ; poll for mode
000628 6210               M         cpfseq  KEY                 ; check this against key press
00062A EF?? F???          M         goto    Exit
                          M 
00062E                    M Next
00062E 6A89               M         clrf    LATA                ; clear pins before proceeding
000630 6A8A               M         clrf    LATB
000632 6A8B               M         clrf    LATC
000634 6A8C               M         clrf    LATD
000636 EF?? F???          M         goto    PLOG
                          M 
00063A                    M Exit
00063A 0000               M         nop
                      00810         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00063C 0E01               M         movlw   key2                ; poll for mode
00063E 6210               M         cpfseq  KEY                 ; check this against key press
000640 EF?? F???          M         goto    Exit
                          M 
000644                    M Next
000644 6A89               M         clrf    LATA                ; clear pins before proceeding
000646 6A8A               M         clrf    LATB
000648 6A8B               M         clrf    LATC
00064A 6A8C               M         clrf    LATD
00064C EF?? F???          M         goto    PLOG
                          M 
000650                    M Exit
000650 0000               M         nop
                      00811         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000652 0E02               M         movlw   key3                ; poll for mode
000654 6210               M         cpfseq  KEY                 ; check this against key press
000656 EF?? F???          M         goto    Exit
                          M 
00065A                    M Next
00065A 6A89               M         clrf    LATA                ; clear pins before proceeding
00065C 6A8A               M         clrf    LATB
00065E 6A8B               M         clrf    LATC
000660 6A8C               M         clrf    LATD
000662 EF?? F???          M         goto    PLOG
                          M 
000666                    M Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000666 0000               M         nop
                      00812         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000668 0E04               M         movlw   key4                ; poll for mode
00066A 6210               M         cpfseq  KEY                 ; check this against key press
00066C EF?? F???          M         goto    Exit
                          M 
000670                    M Next
000670 6A89               M         clrf    LATA                ; clear pins before proceeding
000672 6A8A               M         clrf    LATB
000674 6A8B               M         clrf    LATC
000676 6A8C               M         clrf    LATD
000678 EF?? F???          M         goto    PLOG
                          M 
00067C                    M Exit
00067C 0000               M         nop
                      00813         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
00067E 0E05               M         movlw   key5                ; poll for mode
000680 6210               M         cpfseq  KEY                 ; check this against key press
000682 EF?? F???          M         goto    Exit
                          M 
000686                    M Next
000686 6A89               M         clrf    LATA                ; clear pins before proceeding
000688 6A8A               M         clrf    LATB
00068A 6A8B               M         clrf    LATC
00068C 6A8C               M         clrf    LATD
00068E EF?? F???          M         goto    PLOG
                          M 
000692                    M Exit
000692 0000               M         nop
                      00814         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000694 0E06               M         movlw   key6                ; poll for mode
000696 6210               M         cpfseq  KEY                 ; check this against key press
000698 EF?? F???          M         goto    Exit
                          M 
00069C                    M Next
00069C 6A89               M         clrf    LATA                ; clear pins before proceeding
00069E 6A8A               M         clrf    LATB
0006A0 6A8B               M         clrf    LATC
0006A2 6A8C               M         clrf    LATD
0006A4 EF?? F???          M         goto    PLOG
                          M 
0006A8                    M Exit
0006A8 0000               M         nop
                      00815         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0006AA 0E08               M         movlw   key7                ; poll for mode
0006AC 6210               M         cpfseq  KEY                 ; check this against key press
0006AE EF?? F???          M         goto    Exit
                          M 
0006B2                    M Next
0006B2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006B4 6A8A               M         clrf    LATB
0006B6 6A8B               M         clrf    LATC
0006B8 6A8C               M         clrf    LATD
0006BA EF?? F???          M         goto    PLOG
                          M 
0006BE                    M Exit
0006BE 0000               M         nop
                      00816         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0006C0 0E09               M         movlw   key8                ; poll for mode
0006C2 6210               M         cpfseq  KEY                 ; check this against key press
0006C4 EF?? F???          M         goto    Exit
                          M 
0006C8                    M Next
0006C8 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006CA 6A8A               M         clrf    LATB
0006CC 6A8B               M         clrf    LATC
0006CE 6A8C               M         clrf    LATD
0006D0 EF?? F???          M         goto    PLOG
                          M 
0006D4                    M Exit
0006D4 0000               M         nop
                      00817         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0006D6 0E0A               M         movlw   key9                ; poll for mode
0006D8 6210               M         cpfseq  KEY                 ; check this against key press
0006DA EF?? F???          M         goto    Exit
                          M 
0006DE                    M Next
0006DE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E0 6A8A               M         clrf    LATB
0006E2 6A8B               M         clrf    LATC
0006E4 6A8C               M         clrf    LATD
0006E6 EF?? F???          M         goto    PLOG
                          M 
0006EA                    M Exit
0006EA 0000               M         nop
0006EC D???           00818         bra HOLD_PERM_LOG
                      00819         
0006EE                00820 PLOG
0006EE EC?? F???      00821         call    ClrLCD
                      00822         Display PermLog1
  0000                    M         local   loop
0006F2 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0006F4 6EF8               M         movwf   TBLPTRU
0006F6 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0006F8 6EF7               M         movwf   TBLPTRH
0006FA 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0006FC 6EF6               M         movwf   TBLPTRL
0006FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000700 50F5               M         movf    TABLAT, W
000702                    M loop
000702 EC?? F???          M         call    WR_DATA         ; write to LCD
000706 000B               M         tblrd+*                 ; next row in table
000708 50F5               M         movf    TABLAT, W
00070A E1??               M         bnz     loop
                      00823         
                      00824         ; find the key press value
00070C C010 FFE8      00825         movff   KEY, WREG
000710 2AE8           00826         incf    WREG        ; W = KEY+1
000712 6E17           00827         movwf   temp
                      00828         
000714 42E8           00829         rrncf   WREG        ; division by 4
000716 9EE8           00830         bcf     WREG, 7     ; clear last bit, overflow from rotate
000718 42E8           00831         rrncf   WREG        
00071A 9EE8           00832         bcf     WREG, 7
00071C 5E17           00833         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00071E C017 FFE8      00834         movff   temp, WREG
000722 C017 F011      00835         movff   temp, temp_KEY
000726 0D15           00836         mullw   d'21'       ; indexed as mutliples of 21
                      00837 
000728                00838 displayNum
000728 C011 FFE8      00839         movff   temp_KEY, WREG
00072C 0F30           00840         addlw   0x30
00072E EC?? F???      00841         call    WR_DATA
000732 0E3A           00842         movlw   ":"
000734 EC?? F???      00843         call    WR_DATA
000738 0E20           00844         movlw   " "
00073A EC?? F???      00845         call    WR_DATA
                      00846         
00073E CFF3 F022      00847         movff   PRODL, L_EE
000742 0E00           00848         movlw   d'0'
000744 2622           00849         addwf   L_EE
                      00850         READEE  OP_sec, H_EE, L_EE
000746 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00074A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00074E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000750 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000752 80A6               M         bsf     EECON1, RD          ; read EEPROM
000754 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000758 2A22           00851         incf    L_EE
                      00852         READEE  OP_INT, H_EE, L_EE
00075A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00075E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000762 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000764 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000766 80A6               M         bsf     EECON1, RD          ; read EEPROM
000768 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00076C 2A22           00853         incf    L_EE
00076E EC?? F???      00854         call    DisplayExeTime
000772 CFF3 F022      00855         movff   PRODL, L_EE
                      00856         
                      00857         ; reset eeprom to beginning
000776 EC?? F???      00858         call    LCD_L2
00077A CFF3 F022      00859         movff   PRODL, L_EE
00077E EC?? F???      00860         call    DispOpRTC
                      00861         
000782                00862 HOLD_PLOG
000782 EC?? F???      00863         call    READ_KEY
                      00864         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000786 0E0D               M         movlw   key0                ; poll for mode
000788 6210               M         cpfseq  KEY                 ; check this against key press
00078A EF?? F???          M         goto    Exit
                          M 
00078E                    M Next
00078E 6A89               M         clrf    LATA                ; clear pins before proceeding
000790 6A8A               M         clrf    LATB
000792 6A8B               M         clrf    LATC
000794 6A8C               M         clrf    LATD
000796 EF?? F???          M         goto    PERM_LOG
                          M 
00079A                    M Exit
00079A 0000               M         nop
00079C D???           00865         bra HOLD_PLOG
                      00866         
                      00867 ;*******************************************************************************
                      00868 ; pc interface
                      00869 ;*******************************************************************************
                      00870 
00079E                00871 PC_MODE
00079E EC?? F???      00872         call    ClrLCD
                      00873         Display PC1
  0000                    M         local   loop
0007A2 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0007A4 6EF8               M         movwf   TBLPTRU
0007A6 0E??               M         movlw   high PC1        ; Move Table<15:8>
0007A8 6EF7               M         movwf   TBLPTRH
0007AA 0E??               M         movlw   low PC1         ; Move Table<7:0>
0007AC 6EF6               M         movwf   TBLPTRL
0007AE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007B0 50F5               M         movf    TABLAT, W
0007B2                    M loop
0007B2 EC?? F???          M         call    WR_DATA         ; write to LCD
0007B6 000B               M         tblrd+*                 ; next row in table
0007B8 50F5               M         movf    TABLAT, W
0007BA E1??               M         bnz     loop
0007BC EC?? F???      00874         call    LCD_L2
                      00875         Display PC2
  0000                    M         local   loop
0007C0 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0007C2 6EF8               M         movwf   TBLPTRU
0007C4 0E??               M         movlw   high PC2        ; Move Table<15:8>
0007C6 6EF7               M         movwf   TBLPTRH
0007C8 0E??               M         movlw   low PC2         ; Move Table<7:0>
0007CA 6EF6               M         movwf   TBLPTRL
0007CC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007CE 50F5               M         movf    TABLAT, W
0007D0                    M loop
0007D0 EC?? F???          M         call    WR_DATA         ; write to LCD
0007D4 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007D6 50F5               M         movf    TABLAT, W
0007D8 E1??               M         bnz     loop
0007DA CFF9 F03A      00876         movff   PCL, PC_PCL
0007DE CFFA F03B      00877         movff   PCLATH, PC_PCLATH
0007E2 CFFB F03C      00878         movff   PCLATU, PC_PCLATU
                      00879         
0007E6                00880 HOLD_PC
0007E6 EC?? F???      00881         call    READ_KEY
                      00882         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0007EA 0E0D               M         movlw   key0                ; poll for mode
0007EC 6210               M         cpfseq  KEY                 ; check this against key press
0007EE EF?? F???          M         goto    Exit
                          M 
0007F2                    M Next
0007F2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007F4 6A8A               M         clrf    LATB
0007F6 6A8B               M         clrf    LATC
0007F8 6A8C               M         clrf    LATD
0007FA EF?? F???          M         goto    STANDBY
                          M 
0007FE                    M Exit
0007FE 0000               M         nop
                      00883         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000800 0E0E               M         movlw   keyH                ; poll for mode
000802 6210               M         cpfseq  KEY                 ; check this against key press
000804 EF?? F???          M         goto    Exit
                          M 
000808                    M Next
000808 6A89               M         clrf    LATA                ; clear pins before proceeding
00080A 6A8A               M         clrf    LATB
00080C 6A8B               M         clrf    LATC
00080E 6A8C               M         clrf    LATD
000810 EF?? F???          M         goto    PC_TRANSFER
                          M 
000814                    M Exit
000814 0000               M         nop
000816 D???           00884         bra     HOLD_PC
                      00885 
000818                00886 PC_TRANSFER
000818 6839           00887         setf    transferring
00081A EC?? F???      00888         call    ClrLCD
                      00889         Display PCTransfer
  0000                    M         local   loop
00081E 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000820 6EF8               M         movwf   TBLPTRU
000822 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000824 6EF7               M         movwf   TBLPTRH
000826 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000828 6EF6               M         movwf   TBLPTRL
00082A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00082C 50F5               M         movf    TABLAT, W
00082E                    M loop
00082E EC?? F???          M         call    WR_DATA         ; write to LCD
000832 000B               M         tblrd+*                 ; next row in table
000834 50F5               M         movf    TABLAT, W
000836 E1??               M         bnz     loop
000838 EC?? F???      00890         call    DataUSART
00083C 6A39           00891         clrf    transferring
00083E D???           00892         bra     STANDBY
                      00893         
                      00894 ;*******************************************************************************
                      00895 ; subroutines
                      00896 ;*******************************************************************************
                      00897 
000840                00898 ARDUINO_INIT
Warning[203]: Found opcode in column 1. (return)
000840 0012           00899 return
                      00900         
000842                00901 RTC_INIT
                      00902         ; set sda and scl to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000842 9882           00903         bcf     PORTC, 4
000844 9682           00904         bcf     PORTC, 3
000846 8894           00905         bsf     TRISC, 4
000848 8694           00906         bsf     TRISC, 3
                      00907         
00084A EC?? F???      00908         call    INIT_RTC
                      00909         
                      00910         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
00084E 0012           00911 return
                      00912         
000850                00913 SAVE_TIME   
                      00914         rtc_read    0x02        ; hours
000850 0E02               M     movlw   0x02
000852 6E??               M     movwf   regaddress
000854 EC?? F???          M     call    read_rtc
000858 C??? FFE8          M     movff   datachar, WREG
00085C EC?? F???          M     call    rtc_convert
000860 EC?? F???      00915         call    WriteEE_RTC
                      00916         rtc_read    0x01        ; minutes
000864 0E01               M     movlw   0x01
000866 6E??               M     movwf   regaddress
000868 EC?? F???          M     call    read_rtc
00086C C??? FFE8          M     movff   datachar, WREG
000870 EC?? F???          M     call    rtc_convert
000874 EC?? F???      00917         call    WriteEE_RTC
                      00918         rtc_read    0x06        ; years
000878 0E06               M     movlw   0x06
00087A 6E??               M     movwf   regaddress
00087C EC?? F???          M     call    read_rtc
000880 C??? FFE8          M     movff   datachar, WREG
000884 EC?? F???          M     call    rtc_convert
000888 EC?? F???      00919         call    WriteEE_RTC
                      00920         rtc_read    0x05        ; months
00088C 0E05               M     movlw   0x05
00088E 6E??               M     movwf   regaddress
000890 EC?? F???          M     call    read_rtc
000894 C??? FFE8          M     movff   datachar, WREG
000898 EC?? F???          M     call    rtc_convert
00089C EC?? F???      00921         call    WriteEE_RTC
                      00922         rtc_read    0x04        ; days
0008A0 0E04               M     movlw   0x04
0008A2 6E??               M     movwf   regaddress
0008A4 EC?? F???          M     call    read_rtc
0008A8 C??? FFE8          M     movff   datachar, WREG
0008AC EC?? F???          M     call    rtc_convert
0008B0 EC?? F???      00923         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0008B4 0012           00924 return
                      00925         
0008B6                00926 SAVE_EXE_TIME
                      00927         
Warning[202]: Argument out of range.  Least significant bits used.
0008B6 3818           00928         swapf   OP_sec, WREG    ; 100's seconds
0008B8 6E17           00929         movwf   temp
0008BA 0E0F           00930         movlw   0x0F
0008BC 1617           00931         andwf   temp
0008BE C017 FFE8      00932         movff   temp, WREG
0008C2 0F30           00933         addlw   0x30    
                      00934         WriteEE WREG, H_EE, L_EE
0008C4 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0008C8 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0008CC CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008D0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008D2 D???               M         bra     $-2
                          M 
0008D4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008D6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008D8 84A6               M         bsf     EECON1, WREN        ; enable write
0008DA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008DC 98A1               M         bcf     PIR2, EEIF
                          M 
0008DE 0E55               M         movlw   0x55
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008E0 6EA7               M         movwf   EECON2              ; write 55h
0008E2 0EAA               M         movlw   0xaa
0008E4 6EA7               M         movwf   EECON2              ; write 0xaa
0008E6 82A6               M         bsf     EECON1, WR          ; begin write
0008E8 B2A6               M         btfsc   EECON1, WR
0008EA D???               M         bra     $-2
                          M 
0008EC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008EE 94A6               M         bcf     EECON1, WREN        ; disable writes
0008F0 2A22           00935         incf    L_EE
                      00936         
0008F2 C018 F017      00937         movff   OP_sec, temp    ; 10's seconds
0008F6 0E0F           00938         movlw   0x0F
0008F8 1617           00939         andwf   temp            ; Temp = lower nibble of Op_sec
0008FA C017 FFE8      00940         movff   temp, WREG      ; W = Temp
0008FE 0F30           00941         addlw   0x30            ; Convert to ASCII
                      00942         WriteEE WREG, H_EE, L_EE
000900 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000904 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000908 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00090C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00090E D???               M         bra     $-2
                          M 
000910 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000912 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000914 84A6               M         bsf     EECON1, WREN        ; enable write
000916 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000918 98A1               M         bcf     PIR2, EEIF
                          M 
00091A 0E55               M         movlw   0x55
00091C 6EA7               M         movwf   EECON2              ; write 55h
00091E 0EAA               M         movlw   0xaa
000920 6EA7               M         movwf   EECON2              ; write 0xaa
000922 82A6               M         bsf     EECON1, WR          ; begin write
000924 B2A6               M         btfsc   EECON1, WR
000926 D???               M         bra     $-2
                          M 
000928 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00092A 94A6               M         bcf     EECON1, WREN        ; disable writes
00092C 2A22           00943         incf    L_EE
                      00944         
Warning[202]: Argument out of range.  Least significant bits used.
00092E 3819           00945         swapf   OP_INT, WREG    ;1's seconds
000930 6E17           00946         movwf   temp
000932 0E0F           00947         movlw   0x0f
000934 1617           00948         andwf   temp
000936 C017 FFE8      00949         movff   temp, WREG
00093A 0F30           00950         addlw   0x30
                      00951         WriteEE WREG, H_EE, L_EE
00093C C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000940 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000944 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000948 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00094A D???               M         bra     $-2
                          M 
00094C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00094E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000950 84A6               M         bsf     EECON1, WREN        ; enable write
000952 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000954 98A1               M         bcf     PIR2, EEIF
                          M 
000956 0E55               M         movlw   0x55
000958 6EA7               M         movwf   EECON2              ; write 55h
00095A 0EAA               M         movlw   0xaa
00095C 6EA7               M         movwf   EECON2              ; write 0xaa
00095E 82A6               M         bsf     EECON1, WR          ; begin write
000960 B2A6               M         btfsc   EECON1, WR
000962 D???               M         bra     $-2
                          M 
000964 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000966 94A6               M         bcf     EECON1, WREN        ; disable writes
000968 2A22           00952         incf    L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (return)
00096A 0012           00953 return
                      00954         
                      00955                 
00096C                00956 DISPLAY_RTC
                      00957         ; display data in this format hh/minmin/yy yy/mm/dd
                      00958         rtc_read    0x02            ; 0x02 from DS1307 - hours
00096C 0E02               M     movlw   0x02
00096E 6E??               M     movwf   regaddress
000970 EC?? F???          M     call    read_rtc
000974 C??? FFE8          M     movff   datachar, WREG
000978 EC?? F???          M     call    rtc_convert
00097C C??? FFE8      00959         movff   tens_digit,WREG
000980 EC?? F???      00960         call    WR_DATA
000984 C??? FFE8      00961         movff   ones_digit,WREG
000988 EC?? F???      00962         call    WR_DATA
00098C 0E68           00963         movlw   "h"
00098E EC?? F???      00964         call    WR_DATA
                      00965         
                      00966         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000992 0E01               M     movlw   0x01
000994 6E??               M     movwf   regaddress
000996 EC?? F???          M     call    read_rtc
00099A C??? FFE8          M     movff   datachar, WREG
00099E EC?? F???          M     call    rtc_convert
0009A2 C??? FFE8      00967         movff   tens_digit,WREG
0009A6 EC?? F???      00968         call    WR_DATA
0009AA C??? FFE8      00969         movff   ones_digit,WREG
0009AE EC?? F???      00970         call    WR_DATA
                      00971         
                      00972         rtc_read    0x00            ; 0x00 from DS1307 - seconds
0009B2 0E00               M     movlw   0x00
0009B4 6E??               M     movwf   regaddress
0009B6 EC?? F???          M     call    read_rtc
0009BA C??? FFE8          M     movff   datachar, WREG
0009BE EC?? F???          M     call    rtc_convert
0009C2 C??? FFE8      00973         movff   tens_digit,WREG
0009C6 EC?? F???      00974         call    WR_DATA
0009CA C??? FFE8      00975         movff   ones_digit,WREG
0009CE EC?? F???      00976         call    WR_DATA
0009D2 0E20           00977         movlw   " "
0009D4 EC?? F???      00978         call    WR_DATA
                      00979         
                      00980         rtc_read    0x06            ; 0x06 from DS1307 - years
0009D8 0E06               M     movlw   0x06
0009DA 6E??               M     movwf   regaddress
0009DC EC?? F???          M     call    read_rtc
0009E0 C??? FFE8          M     movff   datachar, WREG
0009E4 EC?? F???          M     call    rtc_convert
0009E8 C??? FFE8      00981         movff   tens_digit,WREG
0009EC EC?? F???      00982         call    WR_DATA
0009F0 C??? FFE8      00983         movff   ones_digit,WREG
0009F4 EC?? F???      00984         call    WR_DATA
0009F8 0E2F           00985         movlw   "/"
0009FA EC?? F???      00986         call    WR_DATA
                      00987         
                      00988         rtc_read    0x05            ; 0x05 from DS1307 - months
0009FE 0E05               M     movlw   0x05
000A00 6E??               M     movwf   regaddress
000A02 EC?? F???          M     call    read_rtc
000A06 C??? FFE8          M     movff   datachar, WREG
000A0A EC?? F???          M     call    rtc_convert
000A0E C??? FFE8      00989         movff   tens_digit,WREG
000A12 EC?? F???      00990         call    WR_DATA
000A16 C??? FFE8      00991         movff   ones_digit,WREG
000A1A EC?? F???      00992         call    WR_DATA
000A1E 0E2F           00993         movlw   "/"
000A20 EC?? F???      00994         call    WR_DATA
                      00995         
                      00996         rtc_read    0x04            ; 0x04 from DS1307 - days
000A24 0E04               M     movlw   0x04
000A26 6E??               M     movwf   regaddress
000A28 EC?? F???          M     call    read_rtc
000A2C C??? FFE8          M     movff   datachar, WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A30 EC?? F???          M     call    rtc_convert
000A34 C??? FFE8      00997         movff   tens_digit,WREG
000A38 EC?? F???      00998         call    WR_DATA
000A3C C??? FFE8      00999         movff   ones_digit,WREG
000A40 EC?? F???      01000         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000A44 0012           01001 return
                      01002         
000A46                01003 SET_TIME
                      01004         rtc_resetAll
                          M 
000A46 6A??               M     clrf    databyte
000A48 0E06               M     movlw   6
000A4A 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000A4C                    M     del_loop0
000A4C EC?? F???          M     call    write_rtc
000A50 2E??               M     decfsz  regaddress
000A52 D???               M     bra     del_loop0
000A54 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01005         
                      01006         rtc_set 0x00,   b'10000000'
000A58 0E00               M     movlw   0x00
000A5A 6E??               M     movwf   regaddress
000A5C 0E80               M     movlw   b'10000000'
000A5E 6E??               M     movwf   databyte
000A60 EC?? F???          M     call    write_rtc
                      01007 
                      01008         rtc_set 0x06,   b'00010111'             ; Year 17
000A64 0E06               M     movlw   0x06
000A66 6E??               M     movwf   regaddress
000A68 0E17               M     movlw   b'00010111'
000A6A 6E??               M     movwf   databyte
000A6C EC?? F???          M     call    write_rtc
                      01009         rtc_set 0x05,   b'00000010'             ; Month 2
000A70 0E05               M     movlw   0x05
000A72 6E??               M     movwf   regaddress
000A74 0E02               M     movlw   b'00000010'
000A76 6E??               M     movwf   databyte
000A78 EC?? F???          M     call    write_rtc
                      01010         rtc_set 0x04,   b'00100101'             ; Date 25
000A7C 0E04               M     movlw   0x04
000A7E 6E??               M     movwf   regaddress
000A80 0E25               M     movlw   b'00100101'
000A82 6E??               M     movwf   databyte
000A84 EC?? F???          M     call    write_rtc
                      01011         rtc_set 0x02,   b'00100010'             ; Hours 
000A88 0E02               M     movlw   0x02
000A8A 6E??               M     movwf   regaddress
000A8C 0E22               M     movlw   b'00100010'
000A8E 6E??               M     movwf   databyte
000A90 EC?? F???          M     call    write_rtc
                      01012         rtc_set 0x01,   b'00100101'             ; Minutes 25
000A94 0E01               M     movlw   0x01
000A96 6E??               M     movwf   regaddress
000A98 0E25               M     movlw   b'00100101'
000A9A 6E??               M     movwf   databyte
000A9C EC?? F???          M     call    write_rtc
                      01013         rtc_set 0x00,   b'00000000'             ; Seconds 0
000AA0 0E00               M     movlw   0x00
000AA2 6E??               M     movwf   regaddress
000AA4 0E00               M     movlw   b'00000000'
000AA6 6E??               M     movwf   databyte
000AA8 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000AAC 0012           01014 return
                      01015         
000AAE                01016 INIT_USART
                      01017         
000AAE 8E94           01018         bsf     TRISC, 7        ; set RC7=USART RC
000AB0 9C94           01019         bcf     TRISC, 6        ; clear RC6=USART TX
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01020 
000AB2 0E0F           01021         movlw   15              ; baud rate 9600
000AB4 6EAF           01022         movwf   SPBRG
000AB6 6AAC           01023         clrf    TXSTA
                      01024         
000AB8 6AAB           01025         clrf    RCSTA
000ABA 8EAB           01026         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000ABC 88AB           01027         bsf     RCSTA,CREN      ; continous receive
                      01028         
000ABE 8AAC           01029         bsf     TXSTA, TXEN     ; transmit enabled
000AC0 0012           01030         return
                      01031 
000AC2                01032 DataUSART
000AC2 0E02           01033         movlw   0x02
000AC4 EC?? F???      01034         call    USART_WAIT
000AC8 0E0D           01035         movlw   0x0D
000ACA EC?? F???      01036         call    USART_WAIT
                      01037         
000ACE 6A15           01038         clrf    counter         ; used to cycle through past 9 eeprom logs
000AD0 6A16           01039         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01040         
000AD2                01041 TRANSFER_LOGS
000AD2 0E15           01042         movlw   d'21'           ; logs are 21 bits apart
000AD4 0215           01043         mulwf   counter         ; log number one starts at eeprom address 0
000AD6 CFF3 F022      01044         movff   PRODL, L_EE     ; low address now points to count X 21
000ADA 6A16           01045         clrf    counter2
                      01046         
000ADC                01047 TRANSFER_DATA   
                      01048         READEE  WREG, H_EE, L_EE
000ADC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000AE0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000AE4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000AE6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000AE8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000AEA CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000AEE EC?? F???      01049         call    USART_WAIT      ; transfer bit
000AF2 2A22           01050         incf    L_EE
                      01051         
000AF4 2A16           01052         incf    counter2
000AF6 0E12           01053         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000AF8 6216           01054         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000AFA D???           01055         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01056         
000AFC EC?? F???      01057         call    USART_LINE      ; new line because a e s t h e t i c
                      01058         
000B00 2A15           01059         incf    counter
000B02 0E08           01060         movlw   d'8'            ; we save up to the last 9 permanent logs
000B04 6215           01061         cpfseq  counter
000B06 D???           01062         bra     TRANSFER_LOGS
                      01063         
000B08 EC?? F???      01064         call    LCD_L2
                      01065         Display PCComplete
  0000                    M         local   loop
000B0C 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000B0E 6EF8               M         movwf   TBLPTRU
000B10 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000B12 6EF7               M         movwf   TBLPTRH
000B14 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000B16 6EF6               M         movwf   TBLPTRL
000B18 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000B1A 50F5               M         movf    TABLAT, W
000B1C                    M loop
000B1C EC?? F???          M         call    WR_DATA         ; write to LCD
000B20 000B               M         tblrd+*                 ; next row in table
000B22 50F5               M         movf    TABLAT, W
000B24 E1??               M         bnz     loop
                      01066         Delay50N delayR, 0x28   
  0000                    M         local   loop
000B26 0E28               M         movlw   0x28
000B28 6E1B               M         movwf   delayR
                          M 
000B2A                    M loop
000B2A EC?? F???          M         call    Delay50ms
000B2E 2E1B               M         decfsz  delayR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B30 EF?? F???          M         goto    loop
000B34 0012           01067         return                  ; done transmitting data
                      01068         
000B36                01069 USART_WAIT
000B36 6EAD           01070         movwf   TXREG
000B38 A2AC           01071         btfss   TXSTA,1
000B3A EF?? F???      01072         goto    $-2
000B3E 0012           01073         return
                      01074 
000B40                01075 USART_LINE
000B40 0E0A           01076         movlw   0x0A
000B42 EC?? F???      01077         call    USART_WAIT
000B46 0E0D           01078         movlw   0x0D
000B48 EC?? F???      01079         call    USART_WAIT
000B4C 0012           01080         return
                      01081         
000B4E                01082 Delay5us
000B4E 0E78           01083         movlw   d'120'
000B50 6E1C           01084         movwf   d5us
                      01085 
000B52                01086 loop5us
000B52 2E1C           01087         decfsz  d5us
000B54 EF?? F???      01088         goto    loop5us
000B58 0000           01089         nop
000B5A 0012           01090         return
                      01091 
000B5C                01092 Delay200us
000B5C 0EA4           01093         movlw   0xA4
000B5E 6E1D           01094         movwf   d200us
                      01095 
000B60                01096 loop200us
000B60 2E1D           01097         decfsz  d200us
000B62 EF?? F???      01098         goto    loop200us
000B66 0000           01099         nop
000B68 0012           01100         return
                      01101 
000B6A                01102 Delay50ms
000B6A 0EF9           01103         movlw   0xF9
000B6C 6E1E           01104         movwf   d50ms
                      01105 
000B6E                01106 loop50ms
000B6E EC?? F???      01107         call    Delay200us
000B72 2E1E           01108         decfsz  d50ms
                      01109 
000B74                01110 Cycles
000B74 EF?? F???      01111         goto    loop50ms
000B78 EC?? F???      01112         call    Delay200us
000B7C 0012           01113         return
                      01114 
000B7E                01115 WriteEE_RTC
                      01116         WriteEE tens_digit, H_EE, L_EE
000B7E C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000B82 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000B86 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000B8A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B8C D???               M         bra     $-2
                          M 
000B8E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B90 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B92 84A6               M         bsf     EECON1, WREN        ; enable write
000B94 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B96 98A1               M         bcf     PIR2, EEIF
                          M 
000B98 0E55               M         movlw   0x55
000B9A 6EA7               M         movwf   EECON2              ; write 55h
000B9C 0EAA               M         movlw   0xaa
000B9E 6EA7               M         movwf   EECON2              ; write 0xaa
000BA0 82A6               M         bsf     EECON1, WR          ; begin write
000BA2 B2A6               M         btfsc   EECON1, WR
000BA4 D???               M         bra     $-2
                          M 
000BA6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BA8 94A6               M         bcf     EECON1, WREN        ; disable writes
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BAA 2A22           01117         incf    L_EE
                      01118         WriteEE ones_digit, H_EE, L_EE
000BAC C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BB0 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BB4 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000BB8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BBA D???               M         bra     $-2
                          M 
000BBC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BBE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BC0 84A6               M         bsf     EECON1, WREN        ; enable write
000BC2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BC4 98A1               M         bcf     PIR2, EEIF
                          M 
000BC6 0E55               M         movlw   0x55
000BC8 6EA7               M         movwf   EECON2              ; write 55h
000BCA 0EAA               M         movlw   0xaa
000BCC 6EA7               M         movwf   EECON2              ; write 0xaa
000BCE 82A6               M         bsf     EECON1, WR          ; begin write
000BD0 B2A6               M         btfsc   EECON1, WR
000BD2 D???               M         bra     $-2
                          M 
000BD4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BD6 94A6               M         bcf     EECON1, WREN        ; disable writes
000BD8 2A22           01119         incf    L_EE
000BDA 0012           01120         return
                      01121 
000BDC                01122 ClearEEPROM_21
000BDC 6A21           01123         clrf    H_EE
000BDE 6A22           01124         clrf    L_EE
000BE0 6820           01125         setf    clear_EE
000BE2 6A15           01126         clrf    counter
000BE4                01127 ClearNext
                      01128         WriteEE         clear_EE, H_EE, L_EE
000BE4 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BE8 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BEC C020 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000BF0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BF2 D???               M         bra     $-2
                          M 
000BF4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BF6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BF8 84A6               M         bsf     EECON1, WREN        ; enable write
000BFA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BFC 98A1               M         bcf     PIR2, EEIF
                          M 
000BFE 0E55               M         movlw   0x55
000C00 6EA7               M         movwf   EECON2              ; write 55h
000C02 0EAA               M         movlw   0xaa
000C04 6EA7               M         movwf   EECON2              ; write 0xaa
000C06 82A6               M         bsf     EECON1, WR          ; begin write
000C08 B2A6               M         btfsc   EECON1, WR
000C0A D???               M         bra     $-2
                          M 
000C0C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C0E 94A6               M         bcf     EECON1, WREN        ; disable writes
000C10 2A15           01129         incf            counter
000C12 2A22           01130         incf            L_EE
000C14 0E15           01131         movlw           d'21'
000C16 6215           01132         cpfseq          counter
000C18 EF?? F???      01133         goto            ClearNext
000C1C 6A21           01134         clrf            H_EE
000C1E 6A22           01135         clrf            L_EE
000C20 0012           01136         return
                      01137         
000C22                01138 READ_KEY
000C22 A281           01139         btfss   PORTB, 1        ; check for keypad interrupt
000C24 EF?? F???      01140         goto    READ_KEY
000C28 3881           01141         swapf   PORTB, W
000C2A 0B0F           01142         andlw   0x0F
000C2C 6E10           01143         movwf   KEY
000C2E B281           01144         btfsc   PORTB, 1
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C30 EF?? F???      01145         goto    $-2
000C34 0012           01146         return
                      01147 
000C36                01148 READ_KEY_TIME
000C36 EC?? F???      01149         call        LCD_L2          ; go to second line to print RTC
                      01150 
                      01151         ; display the time
000C3A EC?? F???      01152         call    DISPLAY_RTC
                      01153 
000C3E A281           01154         btfss       PORTB, 1    ; keypad interrupt
000C40 EF?? F???      01155         goto        READ_KEY_TIME
000C44 3881           01156         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000C46 0B0F           01157         andlw       0x0F        ; only want W3:0
000C48 6E10           01158         movwf       KEY         ; write this value to the KEY
000C4A B281           01159         btfsc       PORTB, 1    ; wait for release
000C4C EF?? F???      01160         goto        $-2         ; go back one instruction
000C50 0012           01161         return
                      01162 
000C52                01163 DisplayExeTime
                      01164         READEE  REG_EE, H_EE, L_EE
000C52 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C56 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C5A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C5C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C5E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C60 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000C64 0EFF           01165         movlw   0xFF
000C66 6223           01166         cpfseq  REG_EE
000C68 EF?? F???      01167         goto    NoSkipDispExeTime
                      01168         Display NoData
  0000                    M         local   loop
000C6C 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000C6E 6EF8               M         movwf   TBLPTRU
000C70 0E??               M         movlw   high NoData     ; Move Table<15:8>
000C72 6EF7               M         movwf   TBLPTRH
000C74 0E??               M         movlw   low NoData      ; Move Table<7:0>
000C76 6EF6               M         movwf   TBLPTRL
000C78 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C7A 50F5               M         movf    TABLAT, W
000C7C                    M loop
000C7C EC?? F???          M         call    WR_DATA         ; write to LCD
000C80 000B               M         tblrd+*                 ; next row in table
000C82 50F5               M         movf    TABLAT, W
000C84 E1??               M         bnz     loop
000C86 0EFF           01169         movlw   0xFF
000C88 6023           01170         cpfslt  REG_EE
000C8A EF?? F???      01171         goto    SkipDispExeTime
000C8E 0012           01172         return
                      01173 
000C90                01174 NoSkipDispExeTime
                      01175         READEE  WREG, H_EE, L_EE
000C90 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C94 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C98 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C9A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C9C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C9E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CA2 EC?? F???      01176         call    WR_DATA
000CA6 2A22           01177         incf    L_EE
                      01178         
                      01179         READEE  WREG, H_EE, L_EE
000CA8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CAC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CB0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CB2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CB4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CB6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CBA EC?? F???      01180         call    WR_DATA
000CBE 2A22           01181         incf    L_EE
                      01182         
                      01183         READEE  WREG, H_EE, L_EE
000CC0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CC4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CC8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CCA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CCC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CCE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CD2 EC?? F???      01184         call    WR_DATA
000CD6 2A22           01185         incf    L_EE
                      01186 
000CD8 0E73           01187         movlw   0x73            ; Write 's'
000CDA EC?? F???      01188         call    WR_DATA
000CDE EC?? F???      01189         call    LCD_L2
000CE2                01190 SkipDispExeTime
000CE2 0012           01191         return
                      01192 
000CE4                01193 DispOpRTC
                      01194         READEE  REG_EE, H_EE, L_EE
000CE4 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CE8 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CEC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CEE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CF0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CF2 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000CF6 0EFF           01195         movlw   0xff
000CF8 6223           01196         cpfseq  REG_EE
000CFA EF?? F???      01197         goto    NoSkipDispOpRTC
                      01198         Display NoData
  0000                    M         local   loop
000CFE 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D00 6EF8               M         movwf   TBLPTRU
000D02 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D04 6EF7               M         movwf   TBLPTRH
000D06 0E??               M         movlw   low NoData      ; Move Table<7:0>
000D08 6EF6               M         movwf   TBLPTRL
000D0A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D0C 50F5               M         movf    TABLAT, W
000D0E                    M loop
000D0E EC?? F???          M         call    WR_DATA         ; write to LCD
000D12 000B               M         tblrd+*                 ; next row in table
000D14 50F5               M         movf    TABLAT, W
000D16 E1??               M         bnz     loop
000D18 0EFF           01199         movlw   0xff
000D1A 6023           01200         cpfslt  REG_EE
000D1C EF?? F???      01201         goto    SkipDispOpRTC
                      01202 
000D20                01203 NoSkipDispOpRTC
                      01204         READEE  REG_EE, H_EE, L_EE
000D20 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D24 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D28 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D2A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D2C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D2E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D32 C023 FFE8      01205         movff   REG_EE, WREG
000D36 EC?? F???      01206         call    WR_DATA
000D3A 2A22           01207         incf    L_EE
                      01208         
                      01209         READEE  REG_EE, H_EE, L_EE
000D3C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D40 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D44 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D46 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D48 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D4A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D4E C023 FFE8      01210         movff   REG_EE, WREG
000D52 EC?? F???      01211         call    WR_DATA
000D56 2A22           01212         incf    L_EE
                      01213 
000D58 0E68           01214         movlw   "h"
000D5A EC?? F???      01215         call    WR_DATA
                      01216         
000D5E EC?? F???      01217         call    DispOpRTC_Helper
                      01218         
000D62 0E20           01219         movlw   " "
000D64 EC?? F???      01220         call    WR_DATA
                      01221         
000D68 EC?? F???      01222         call    DispOpRTC_Helper
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  10:29:17         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D6C 0E2F           01223         movlw   "/"
000D6E EC?? F???      01224         call    WR_DATA
                      01225 
000D72 EC?? F???      01226         call    DispOpRTC_Helper
000D76 0E2F           01227         movlw   "/"
000D78 EC?? F???      01228         call    WR_DATA
000D7C EC?? F???      01229         call    DispOpRTC_Helper
000D80                01230 SkipDispOpRTC
000D80 0012           01231                 return
000D82                01232 DispOpRTC_Helper
                      01233         READEE          REG_EE, H_EE, L_EE
000D82 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D86 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D8A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D8C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D8E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D90 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D94 C023 FFE8      01234         movff           REG_EE, WREG
000D98 EC?? F???      01235         call            WR_DATA
000D9C 2A22           01236         incf            L_EE
                      01237         READEE          REG_EE, H_EE, L_EE
000D9E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DA2 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DA6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DA8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DAA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DAC CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000DB0 C023 FFE8      01238         movff           REG_EE, WREG
000DB4 EC?? F???      01239         call            WR_DATA
000DB8 2A22           01240         incf            L_EE
000DBA 0012           01241         return
Warning[205]: Found directive in column 1. (end)
                      01242 end

Errors   :     0
Warnings :    46 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

