MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000096 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
0000A2 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000AE 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000B6 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000C4 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000CE 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000DE 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000E8 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000F2 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 LOAD_STANDBY_TIME
00001C 0EFF           00271         movlw   0xff
00001E 6ED7           00272         movwf   TMR0H
000020 0EFF           00273         movlw   0xff
000022 6ED6           00274         movwf   TMR0L
                      00275 
000024 0012           00276         return  
                      00277 
000026                00278 LOAD_EXE_TIME
000026 0EC3           00279         movlw   0xc3
000028 6ED7           00280         movwf   TMR0H
00002A 0E25           00281         movlw   0x25
00002C 6ED6           00282         movwf   TMR0L
                      00283         
00002E 0012           00284         return
                      00285         
000030                00286 ISR_HIGH
                      00287         saveContext
000030 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000034 6E14               M     movwf   temp_W                  ; save W
                      00288         
000036 0E00           00289         movlw   0x00
000038 6238           00290         cpfseq  inStandby
00003A EC?? F???      00291         call    Shift
                      00292         
                      00293         ;reset timer, but need to check which time increment 
00003E 0E00           00294         movlw   0x00
000040 6238           00295         cpfseq  inStandby
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000042 EC?? F???      00296         call    LOAD_STANDBY_TIME
                      00297         
000046 0EFF           00298         movlw   0xff
000048 6238           00299         cpfseq  inStandby
00004A EC?? F???      00300         call    LOAD_EXE_TIME
                      00301 
                      00302                 
                      00303         ; displaying the execution time in seconds
                      00304 ;       swapf   OP_sec, 0       ; 100's seconds
                      00305 ;       movwf   temp
                      00306 ;       movlw   0x0f
                      00307 ;       andwf   temp
                      00308 ;       movff   temp, WREG
                      00309 ;       addlw   0x30
                      00310 ;       call    WR_DATA
                      00311 ;
                      00312 ;       movff   OP_sec, temp    ; 10's seconds
                      00313 ;       movlw   0x0f
                      00314 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00315 ;       movff   temp, WREG      ; W = Temp
                      00316 ;       addlw   0x30            ; Convert to ASCII
                      00317 ;       call    WR_DATA
                      00318 ;       
                      00319 ;       swapf   OP_INT, WREG    ;1's seconds
                      00320 ;       movwf   temp
                      00321 ;       movlw   0x0f
                      00322 ;       andwf   temp
                      00323 ;       movff   temp, WREG
                      00324 ;       addlw   0x30
                      00325 ;       call    WR_DATA
                      00326 ;
                      00327 ;       movlw   0x73            ; Write 's'
                      00328 ;       call    WR_DATA
                      00329 ;       call    LCD_L2
                      00330                 
                      00331         ;timer interrupt
00004E A4F2           00332         btfss   INTCON, TMR0IF
000050 EF?? F???      00333         goto    END_ISR_HIGH
                      00334         
                      00335         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000054 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000058 0E0F               M         movlw   0x0f
00005A 1617               M         andwf   temp
00005C 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00005E 6217               M         cpfseq  temp
000060 EF?? F???          M         goto    ones
                          M         
000064 0E10               M         movlw   b'00010000'
000066 2619               M         addwf   OP_INT
000068 0EF0               M         movlw   0xf0
00006A 1619               M         andwf   OP_INT
00006C 0EA0               M         movlw   0xa0
00006E 6019               M         cpfslt  OP_INT
                          M         
000070 6A19               M         clrf    OP_INT
000072 EF?? F???          M         goto    endBCD
                          M         
000076                    M ones
000076 2A19               M         incf    OP_INT
000078 EF?? F???          M         goto    endBCD
00007C                    M endBCD
00007C 0000               M         nop
00007E 0E00           00336         movlw   d'0'
000080 6219           00337         cpfseq  OP_INT
000082 EF?? F???      00338         goto    END_ISR_HIGH
                      00339         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000086 C018 F017          M         movff   OP_sec, temp
                          M         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;process ones digit
00008A 0E0F               M         movlw   0x0f
00008C 1617               M         andwf   temp
00008E 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000090 6217               M         cpfseq  temp
000092 EF?? F???          M         goto    ones
                          M         
000096 0E10               M         movlw   b'00010000'
000098 2618               M         addwf   OP_sec
00009A 0EF0               M         movlw   0xf0
00009C 1618               M         andwf   OP_sec
00009E 0EA0               M         movlw   0xa0
0000A0 6018               M         cpfslt  OP_sec
                          M         
0000A2 6A18               M         clrf    OP_sec
0000A4 EF?? F???          M         goto    endBCD
                          M         
0000A8                    M ones
0000A8 2A18               M         incf    OP_sec
0000AA EF?? F???          M         goto    endBCD
0000AE                    M endBCD
0000AE 0000               M         nop
                      00340 
0000B0                00341 END_ISR_HIGH
0000B0 94F2           00342         bcf     INTCON, TMR0IF
                      00343         restoreContext
0000B2 3814               M     swapf   temp_W, 0               ; restore W first
0000B4 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000B8 0010           00344         retfie
                      00345 
0000BA                00346 ISR_LOW
                      00347         saveContext
0000BA CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000BE 6E14               M     movwf   temp_W                  ; save W
                      00348         ; KEYPAD INTERRUPT
0000C0 A0F0           00349         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000C2 EF?? F???      00350         goto    END_ISR_LOW
                      00351 
                      00352         ; check operation status
0000C6 0EFF           00353         movlw   0xff                    ; If in operation, skip return
0000C8 621E           00354         cpfseq  inExecution
0000CA EF?? F???      00355         goto    END_ISR_LOW
                      00356 
                      00357         ; process KEY
0000CE 3881           00358         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D0 0B0F           00359         andlw   0x0f
0000D2 6E12           00360         movwf   KEY_ISR
                      00361         
0000D4 0E0C           00362         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000D6 6212           00363         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000D8 EF?? F???      00364         goto    END_ISR_LOW
                      00365         
                      00366         ; reset program counter - emergency stop recorded. 
0000DC 9ED5           00367         bcf     T0CON, TMR0ON
0000DE EC?? F???      00368         call    SAVE_EXE_TIME
                      00369                 
                      00370         ; Clear inExecution flag to stop '*' interrupts
0000E2 6A1E           00371         clrf    inExecution
0000E4 0E01           00372         movlw   d'1'
0000E6 6E37           00373         movwf   STOP_CONDITION
0000E8 EC?? F???      00374         call    SaveData
                      00375         
0000EC 6AFF           00376         clrf    TOSU
0000EE 6AFE           00377         clrf    TOSH
0000F0 6AFD           00378         clrf    TOSL
0000F2 90F0           00379         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00380         restoreContext
0000F4 3814               M     swapf   temp_W, 0               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000FA 0010           00381         retfie
                      00382 
0000FC                00383 END_ISR_LOW
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000FC 90F0           00384         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00385         restoreContext
0000FE 3814               M     swapf   temp_W, 0               ; restore W first
000100 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000104 0010           00386         retfie
                      00387 
                      00388 ;*******************************************************************************
                      00389 ; main
                      00390 ;*******************************************************************************
000106                00391 INIT
000106 0E70           00392         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000108 6ED3           00393         movwf   OSCCON
                      00394         
                      00395         ; i/o
00010A 0E00           00396         movlw   b'00000000'
00010C 6E92           00397         movwf   TRISA
00010E 0EFF           00398         movlw   b'11111111'
000110 6E93           00399         movwf   TRISB               ; keypad
000112 0E00           00400         movlw   b'00000000'
000114 6E94           00401         movwf   TRISC
000116 0E00           00402         movlw   b'00000000'
000118 6E95           00403         movwf   TRISD
00011A 0E00           00404         movlw   b'00000000'
00011C 6E96           00405         movwf   TRISE
                      00406 
                      00407         ; clear ports
00011E 0E00           00408         movlw   b'00000000'
000120 6E89           00409         movwf   LATA
000122 0E00           00410         movlw   b'00000000'
000124 6E8A           00411         movwf   LATB
000126 0E00           00412         movlw   b'00000000'
000128 6E8B           00413         movwf   LATC
00012A 0E00           00414         movlw   b'00000000'
00012C 6E8C           00415         movwf   LATD
00012E 0E00           00416         movlw   b'00000000'
000130 6E8D           00417         movwf   LATE
                      00418         
000132 0E00           00419         movlw   b'00000000'
000134 6EC2           00420         movwf   ADCON0
                      00421 ;       movlw   b'11111111'
                      00422 ;       movwf   ADCON1
                      00423         
                      00424         ; setting up pwm
                      00425 ;       clrf    CM1CONO         ; disable comparators
                      00426 ;       clrf    CM2CONO
                      00427 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00428 ;       movwf   CCP2CON
                      00429 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
                      00430 ;       movwf   CCPR2L
                      00431 ;       
                      00432 ;       bcf     PIR1, TMR2IF
                      00433 ;       bcf     T2CON, T2CKPS1
                      00434 ;       bsf     T2CON, TMR2ON
                      00435         
                      00436         ; initializations
000136 EC?? F???      00437         call    InitLCD
                      00438         ConfigLCD
00013A 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00013C EC?? F???          M           call      WR_INS
                          M 
000140 0E0C               M           movlw     b'00001100'    ; display on/off
000142 EC?? F???          M           call      WR_INS
000146 0E01               M           movlw     b'00000001'    ; Clear ram
000148 EC?? F???          M           call      WR_INS
                      00439         
00014C EC?? F???      00440         call    i2c_common_setup
                      00441         
000150 EC?? F???      00442         call    RTC_INIT
                      00443         ;COLOUR_INIT
000154 EC?? F???      00444         call    INIT_USART
                      00445 
                      00446         ; interrupts
000158 6AD0           00447         clrf    RCON
00015A 6AF2           00448         clrf    INTCON
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00015C 6AF1           00449         clrf    INTCON2
00015E 6AF0           00450         clrf    INTCON3
000160 8ED0           00451         bsf     RCON, IPEN          ; priority mode
000162 8EF2           00452         bsf     INTCON, GIEH        ; permit global interrupts
000164 8CF2           00453         bsf     INTCON, GIEL
000166 8AF1           00454         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000168 8AF2           00455         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
00016A 84F2           00456         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00016C 84F1           00457         bsf     INTCON2, TMR0IP     ; set to high priority
00016E 86F0           00458         bsf     INTCON3, INT1IE
000170 9CF0           00459         bcf     INTCON3, INT1IP
                      00460         
                      00461         ; setting up timer to sychronize with 1 second clock intervals
000172 9ED5           00462         bcf     T0CON, TMR0ON
000174 9CD5           00463         bcf     T0CON, T08BIT
000176 9AD5           00464         bcf     T0CON, T0CS
000178 98D5           00465         bcf     T0CON, T0SE
00017A 96D5           00466         bcf     T0CON, PSA
00017C 94D5           00467         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
00017E 82D5           00468         bsf     T0CON, T0PS1
000180 80D5           00469         bsf     T0CON, T0PS0
                      00470 
000182 6A20           00471         clrf    H_EE
000184 6A21           00472         clrf    L_EE
000186 6A??           00473         clrf    tens_digit
000188 6A??           00474         clrf    ones_digit
                      00475         
00018A 6A2C           00476         clrf    DETECTION_VAL
00018C 6A2D           00477         clrf    ESKA
00018E 6A2E           00478         clrf    ESKA_NOCAP
000190 6A2F           00479         clrf    YOP
000192 6A30           00480         clrf    YOP_NOCAP
000194 6A31           00481         clrf    TOTAL_BOTTLES
000196 6A32           00482         clrf    COLLECTIONS_COUNT
                      00483         
000198 0EF2           00484         movlw     b'11110010'    ; Set required keypad inputs
00019A 6E93           00485         movwf     TRISB
                      00486         
00019C EC?? F???      00487         call    ClrLCD
                      00488         Display Welcome
  0000                    M         local   loop
0001A0 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001A2 6EF8               M         movwf   TBLPTRU
0001A4 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001A6 6EF7               M         movwf   TBLPTRH
0001A8 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001AA 6EF6               M         movwf   TBLPTRL
0001AC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001AE 50F5               M         movf    TABLAT, W
0001B0                    M loop
0001B0 EC?? F???          M         call    WR_DATA         ; write to LCD
0001B4 000B               M         tblrd+*                 ; next row in table
0001B6 50F5               M         movf    TABLAT, W
0001B8 E1??               M         bnz     loop
0001BA EC?? F???      00489         call LCD_L2
                      00490         Display Team
  0000                    M         local   loop
0001BE 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001C0 6EF8               M         movwf   TBLPTRU
0001C2 0E??               M         movlw   high Team       ; Move Table<15:8>
0001C4 6EF7               M         movwf   TBLPTRH
0001C6 0E??               M         movlw   low Team        ; Move Table<7:0>
0001C8 6EF6               M         movwf   TBLPTRL
0001CA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001CC 50F5               M         movf    TABLAT, W
0001CE                    M loop
0001CE EC?? F???          M         call    WR_DATA         ; write to LCD
0001D2 000B               M         tblrd+*                 ; next row in table
0001D4 50F5               M         movf    TABLAT, W
0001D6 E1??               M         bnz     loop
                      00491         
                      00492         Delay50N delayR, 0x28
  0000                    M         local   loop
0001D8 0E28               M         movlw   0x28
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001DA 6E1A               M         movwf   delayR
                          M 
0001DC                    M loop
0001DC EC?? F???          M         call    Delay50ms
0001E0 2E1A               M         decfsz  delayR
0001E2 EF?? F???          M         goto    loop
                      00493 
                      00494 ;*******************************************************************************
                      00495 ; standby mode
                      00496 ;*******************************************************************************
0001E6                00497 STANDBY
0001E6 0E00           00498         movlw   b'00000000'
0001E8 6E84           00499         movwf   PORTE
0001EA 0E00           00500         movlw   b'00000000'
0001EC 6E80           00501         movwf   PORTA
                      00502         
0001EE 6838           00503         setf    inStandby       
0001F0 EC?? F???      00504         call    ClrLCD
                      00505         Display StandBy
  0000                    M         local   loop
0001F4 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F6 6EF8               M         movwf   TBLPTRU
0001F8 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001FA 6EF7               M         movwf   TBLPTRH
0001FC 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FE 6EF6               M         movwf   TBLPTRL
000200 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000202 50F5               M         movf    TABLAT, W
000204                    M loop
000204 EC?? F???          M         call    WR_DATA         ; write to LCD
000208 000B               M         tblrd+*                 ; next row in table
00020A 50F5               M         movf    TABLAT, W
00020C E1??               M         bnz     loop
00020E EC?? F???      00506         call    LCD_L2
                      00507         Display StandbyInfo
  0000                    M         local   loop
000212 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
000214 6EF8               M         movwf   TBLPTRU
000216 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000218 6EF7               M         movwf   TBLPTRH
00021A 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
00021C 6EF6               M         movwf   TBLPTRL
00021E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000220 50F5               M         movf    TABLAT, W
000222                    M loop
000222 EC?? F???          M         call    WR_DATA         ; write to LCD
000226 000B               M         tblrd+*                 ; next row in table
000228 50F5               M         movf    TABLAT, W
00022A E1??               M         bnz     loop
                      00508         
00022C 0EFF           00509         movlw   0xff
00022E 6ED7           00510         movwf   TMR0H
000230 0EFF           00511         movlw   0xff
000232 6ED6           00512         movwf   TMR0L
000234 8ED5           00513         bsf     T0CON, TMR0ON       ; turning on timer
                      00514 
                      00515 
000236                00516 HOLD_STANDBY
000236 EC?? F???      00517         call    READ_KEY_TIME
                      00518 
                      00519         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
00023A 0E00               M         movlw   key1                ; poll for mode
00023C 6210               M         cpfseq  KEY                 ; check this against key press
00023E EF?? F???          M         goto    Exit
                          M 
000242                    M Next
000242 6A89               M         clrf    LATA                ; clear pins before proceeding
000244 6A8A               M         clrf    LATB
000246 6A8B               M         clrf    LATC
000248 6A8C               M         clrf    LATD
00024A EF?? F???          M         goto    COLOUR_TEST
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00024E                    M Exit
00024E 0000               M         nop
                      00520         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000250 0E01               M         movlw   key2                ; poll for mode
000252 6210               M         cpfseq  KEY                 ; check this against key press
000254 EF?? F???          M         goto    Exit
                          M 
000258                    M Next
000258 6A89               M         clrf    LATA                ; clear pins before proceeding
00025A 6A8A               M         clrf    LATB
00025C 6A8B               M         clrf    LATC
00025E 6A8C               M         clrf    LATD
000260 EF?? F???          M         goto    STEP_TEST
                          M 
000264                    M Exit
000264 0000               M         nop
                      00521         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
                          M 
000266 0E02               M         movlw   key3                ; poll for mode
000268 6210               M         cpfseq  KEY                 ; check this against key press
00026A EF?? F???          M         goto    Exit
                          M 
00026E                    M Next
00026E 6A89               M         clrf    LATA                ; clear pins before proceeding
000270 6A8A               M         clrf    LATB
000272 6A8B               M         clrf    LATC
000274 6A8C               M         clrf    LATD
000276 EF?? F???          M         goto    DC_TEST_CW
                          M 
00027A                    M Exit
00027A 0000               M         nop
                      00522         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
00027C 0E04               M         movlw   key4                ; poll for mode
00027E 6210               M         cpfseq  KEY                 ; check this against key press
000280 EF?? F???          M         goto    Exit
                          M 
000284                    M Next
000284 6A89               M         clrf    LATA                ; clear pins before proceeding
000286 6A8A               M         clrf    LATB
000288 6A8B               M         clrf    LATC
00028A 6A8C               M         clrf    LATD
00028C EF?? F???          M         goto    DC_TEST_CCW
                          M 
000290                    M Exit
000290 0000               M         nop
                      00523         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000292 0E03               M         movlw   keyA                ; poll for mode
000294 6210               M         cpfseq  KEY                 ; check this against key press
000296 EF?? F???          M         goto    Exit
                          M 
00029A                    M Next
00029A 6A89               M         clrf    LATA                ; clear pins before proceeding
00029C 6A8A               M         clrf    LATB
00029E 6A8B               M         clrf    LATC
0002A0 6A8C               M         clrf    LATD
0002A2 EF?? F???          M         goto    EXECUTION
                          M 
0002A6                    M Exit
0002A6 0000               M         nop
                      00524         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002A8 0E07               M         movlw   keyB                ; poll for mode
0002AA 6210               M         cpfseq  KEY                 ; check this against key press
0002AC EF?? F???          M         goto    Exit
                          M 
0002B0                    M Next
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002B0 6A89               M         clrf    LATA                ; clear pins before proceeding
0002B2 6A8A               M         clrf    LATB
0002B4 6A8B               M         clrf    LATC
0002B6 6A8C               M         clrf    LATD
0002B8 EF?? F???          M         goto    LOG
                          M 
0002BC                    M Exit
0002BC 0000               M         nop
                      00525         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002BE 0E0B               M         movlw   keyC                ; poll for mode
0002C0 6210               M         cpfseq  KEY                 ; check this against key press
0002C2 EF?? F???          M         goto    Exit
                          M 
0002C6                    M Next
0002C6 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C8 6A8A               M         clrf    LATB
0002CA 6A8B               M         clrf    LATC
0002CC 6A8C               M         clrf    LATD
0002CE EF?? F???          M         goto    PERM_LOG
                          M 
0002D2                    M Exit
0002D2 0000               M         nop
                      00526         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002D4 0E0F               M         movlw   keyD                ; poll for mode
0002D6 6210               M         cpfseq  KEY                 ; check this against key press
0002D8 EF?? F???          M         goto    Exit
                          M 
0002DC                    M Next
0002DC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002DE 6A8A               M         clrf    LATB
0002E0 6A8B               M         clrf    LATC
0002E2 6A8C               M         clrf    LATD
0002E4 EF?? F???          M         goto    PC_MODE
                          M 
0002E8                    M Exit
0002E8 0000               M         nop
0002EA D???           00527         bra     HOLD_STANDBY
                      00528         
                      00529 ;*******************************************************************************
                      00530 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00531 ;*******************************************************************************
                      00532 
0002EC                00533 DC_TEST_CW
0002EC 0E00           00534         movlw   b'00000000'
0002EE 6E84           00535         movwf   PORTE
                      00536         Delay50N    delayR, 0x14
  0000                    M         local   loop
0002F0 0E14               M         movlw   0x14
0002F2 6E1A               M         movwf   delayR
                          M 
0002F4                    M loop
0002F4 EC?? F???          M         call    Delay50ms
0002F8 2E1A               M         decfsz  delayR
0002FA EF?? F???          M         goto    loop
                      00537 
0002FE                00538 DC_TEST_CW_HOLD
0002FE 0E01           00539         movlw   b'00000001'
000300 6E84           00540         movwf   PORTE
                      00541         
                      00542         Delay50N    delayR, 0x0a
  0000                    M         local   loop
000302 0E0A               M         movlw   0x0a
000304 6E1A               M         movwf   delayR
                          M 
000306                    M loop
000306 EC?? F???          M         call    Delay50ms
00030A 2E1A               M         decfsz  delayR
00030C EF?? F???          M         goto    loop
000310 D???           00543         bra     DC_TEST_CW
                      00544         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000312                00545 DC_TEST_CCW
000312 0E00           00546         movlw   b'00000000'
000314 6E84           00547         movwf   PORTE
                      00548         Delay50N    delayR, 0x14
  0000                    M         local   loop
000316 0E14               M         movlw   0x14
000318 6E1A               M         movwf   delayR
                          M 
00031A                    M loop
00031A EC?? F???          M         call    Delay50ms
00031E 2E1A               M         decfsz  delayR
000320 EF?? F???          M         goto    loop
                      00549 
000324                00550 DC_TEST_CCW_HOLD
000324 0E02           00551         movlw   b'00000010'
000326 6E84           00552         movwf   PORTE
                      00553         
                      00554         Delay50N    delayR, 0x0a
  0000                    M         local   loop
000328 0E0A               M         movlw   0x0a
00032A 6E1A               M         movwf   delayR
                          M 
00032C                    M loop
00032C EC?? F???          M         call    Delay50ms
000330 2E1A               M         decfsz  delayR
000332 EF?? F???          M         goto    loop
000336 D???           00555         bra     DC_TEST_CCW
                      00556         
000338                00557 STEP_TEST
000338 6A32           00558         clrf    COLLECTIONS_COUNT
                      00559         Delay50N    delayR, 0x14
  0000                    M         local   loop
00033A 0E14               M         movlw   0x14
00033C 6E1A               M         movwf   delayR
                          M 
00033E                    M loop
00033E EC?? F???          M         call    Delay50ms
000342 2E1A               M         decfsz  delayR
000344 EF?? F???          M         goto    loop
                      00560     
000348                00561 ROTATE_90_TEST
000348 0E23           00562         movlw   b'00100011'
00034A 6E80           00563         movwf   PORTA
00034C EC?? F???      00564         call    delay5ms
                      00565         
000350 0E26           00566         movlw   b'00100110'
000352 6E80           00567         movwf   PORTA
000354 EC?? F???      00568         call    delay5ms
                      00569         
000358 0E2C           00570         movlw   b'00101100'
00035A 6E80           00571         movwf   PORTA
00035C EC?? F???      00572         call    delay5ms
                      00573 
000360 0E29           00574         movlw   b'00101001'
000362 6E80           00575         movwf   PORTA
000364 EC?? F???      00576         call    delay5ms
                      00577         
000368 2A32           00578         incf    COLLECTIONS_COUNT
00036A 0E78           00579         movlw   d'120'
00036C 6232           00580         cpfseq  COLLECTIONS_COUNT
00036E D???           00581         bra     ROTATE_90_TEST
                      00582         
000370 D???           00583         bra STEP_TEST
                      00584 
000372                00585 COLOUR_TEST
                      00586 
000372                00587 LOOPING
                      00588         Delay50N delayR, 0x28
  0000                    M         local   loop
000372 0E28               M         movlw   0x28
000374 6E1A               M         movwf   delayR
                          M 
000376                    M loop
000376 EC?? F???          M         call    Delay50ms
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00037A 2E1A               M         decfsz  delayR
00037C EF?? F???          M         goto    loop
000380 EC?? F???      00589         call    ClrLCD
000384 EC?? F???      00590         call    READ_ARDUINO
000388 0F30           00591         addlw   0x30
00038A EC?? F???      00592         call    WR_DATA
00038E D???           00593         bra LOOPING
                      00594 
                      00595 ;*******************************************************************************
                      00596 ; execution mode
                      00597 ;*******************************************************************************
                      00598         
000390                00599 EXECUTION
000390 9ED5           00600         bcf     T0CON, TMR0ON       ; turning on timer
000392 6A38           00601         clrf    inStandby       
000394 EC?? F???      00602         call    ClearEEPROM_21
                      00603         
                      00604         ; save the starting time
000398 EC?? F???      00605         call        SAVE_TIME
                      00606                 
                      00607         ; display
00039C 681E           00608         setf        inExecution
00039E EC?? F???      00609         call        ClrLCD
                      00610         Display     Exe1
  0000                    M         local   loop
0003A2 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003A4 6EF8               M         movwf   TBLPTRU
0003A6 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003A8 6EF7               M         movwf   TBLPTRH
0003AA 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003AC 6EF6               M         movwf   TBLPTRL
0003AE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003B0 50F5               M         movf    TABLAT, W
0003B2                    M loop
0003B2 EC?? F???          M         call    WR_DATA         ; write to LCD
0003B6 000B               M         tblrd+*                 ; next row in table
0003B8 50F5               M         movf    TABLAT, W
0003BA E1??               M         bnz     loop
0003BC EC?? F???      00611         call        LCD_L2
                      00612         
0003C0 0EC3           00613         movlw   0xc3
0003C2 6ED7           00614         movwf   TMR0H
0003C4 0E25           00615         movlw   0x25
0003C6 6ED6           00616         movwf   TMR0L
                      00617         
0003C8 8ED5           00618         bsf         T0CON, TMR0ON           ; turning on timer
                      00619         
                      00620         ; initialize variables
0003CA 6A18           00621         clrf        OP_sec
0003CC 6A19           00622         clrf        OP_INT
                      00623         
0003CE 6A2D           00624         clrf        ESKA
0003D0 6A2E           00625         clrf        ESKA_NOCAP
0003D2 6A2F           00626         clrf        YOP
0003D4 6A30           00627         clrf        YOP_NOCAP
0003D6 6A31           00628         clrf        TOTAL_BOTTLES
0003D8 0E01           00629         movlw       d'1'
0003DA 6E35           00630         movwf       TRAY_CURRENT
0003DC 6A34           00631         clrf        TRAY_DELAY
                      00632         
                      00633         ; todo: make sure tray is in position one on reset, add some delay
                      00634         
0003DE EF?? F???      00635         goto        COLLECTIONS_STEP
                      00636 
0003E2                00637 COLLECTIONS_STEP
0003E2 6A32           00638         clrf        COLLECTIONS_COUNT
                      00639 
0003E4                00640 ROTATE_90                                   ; actually 45 but who is count am i right??
0003E4 0E23           00641         movlw   b'00100011'
0003E6 6E80           00642         movwf   PORTA
                      00643 
0003E8 0E26           00644         movlw   b'00100110'
0003EA 6E80           00645         movwf   PORTA
                      00646         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003EC 0E2C           00647         movlw   b'00101100'
0003EE 6E80           00648         movwf   PORTA
                      00649 
0003F0 0E29           00650         movlw   b'00101001'
0003F2 6E80           00651         movwf   PORTA
                      00652         
0003F4 2A32           00653         incf    COLLECTIONS_COUNT
0003F6 0E19           00654         movlw   d'25'                       ; 1.8 degrees per step, 45/1.8=25
0003F8 6232           00655         cpfseq  COLLECTIONS_COUNT
0003FA D???           00656         bra     ROTATE_90
                      00657         
0003FC D???           00658         bra DETECTIONS
                      00659         
0003FE                00660 DETECTIONS
                      00661         Delay50N    delayR, 0x0a
  0000                    M         local   loop
0003FE 0E0A               M         movlw   0x0a
000400 6E1A               M         movwf   delayR
                          M 
000402                    M loop
000402 EC?? F???          M         call    Delay50ms
000406 2E1A               M         decfsz  delayR
000408 EF?? F???          M         goto    loop
                      00662 ;       movlw   d'1000'
                      00663 ;       movwf   TRAY_DELAY
                      00664         
                      00665         ; reading data from arduino 
                      00666         ; expect:   1 for eska cap
                      00667         ;           2 for eska no cap
                      00668         ;           3 for yop cap
                      00669         ;           4 for yop no cap
                      00670         ;           5 for no bottle, get outta here
00040C EC?? F???      00671         call    READ_ARDUINO
                      00672         ;movlw  d'2'                    ; testing!!!
000410 6E2C           00673         movwf   DETECTION_VAL
                      00674         
                      00675         ; first check if there was a bottle detected, if go to COLLECTIONS_STEP
000412 0E05           00676         movlw   d'5'
000414 5C2C           00677         subwf   DETECTION_VAL, 0
000416 E0??           00678         bz      COLLECTIONS_STEP
                      00679         
                      00680         ; okay we have a bottle, first increment total count then see what it is
000418 2A31           00681         incf    TOTAL_BOTTLES
                      00682         
                      00683         ; yop no cap
00041A 0E04           00684         movlw   d'4'
00041C 5C2C           00685         subwf   DETECTION_VAL, 0
00041E E0??           00686         bz      INC_YOPNOCAP
                      00687         
                      00688         ; yop with cap
000420 0E03           00689         movlw   d'3'
000422 5C2C           00690         subwf   DETECTION_VAL, 0
000424 E0??           00691         bz      INC_YOPCAP
                      00692         
                      00693         ; eska no cap
000426 0E02           00694         movlw   d'2'
000428 5C2C           00695         subwf   DETECTION_VAL, 0
00042A E0??           00696         bz      INC_ESKANOCAP
                      00697         
                      00698         ; eksa with cap
00042C 0E01           00699         movlw   d'1'
00042E 5C2C           00700         subwf   DETECTION_VAL, 0
000430 E0??           00701         bz      INC_ESKACAP
                      00702         
000432 D???           00703         bra     DETECTIONS
                      00704         
000434                00705 INC_YOPNOCAP
000434 2A30           00706         incf    YOP_NOCAP
                      00707 
                      00708         ; determine what position to rotate the tray to: brute force, but w/e
000436 0E04           00709         movlw   d'4'
000438 6E36           00710         movwf   TRAY_GOTO               ; new position will be 4
00043A 5C35           00711         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00043C E0??           00712         bz      TRAY_STEP_END
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00713         
00043E 0E03           00714         movlw   d'3'
000440 5C35           00715         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
000442 E0??           00716         bz      TRAY_STEP_CW            
                      00717         
000444 0E02           00718         movlw   d'2'
000446 5C35           00719         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
000448 E0??           00720         bz      TRAY_STEP_CW
                      00721         
00044A 0E01           00722         movlw   d'1'
00044C 5C35           00723         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
00044E E0??           00724         bz      TRAY_STEP_CW
                      00725         
000450                00726 INC_YOPCAP
000450 2A2F           00727         incf    YOP
                      00728         
                      00729         ; determine what position to rotate the tray to: brute force, but w/e
000452 0E03           00730         movlw   d'3'
000454 6E36           00731         movwf   TRAY_GOTO
000456 5C35           00732         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000458 E0??           00733         bz      TRAY_STEP_END
                      00734         
00045A 0E04           00735         movlw   d'4'
00045C 5C35           00736         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
00045E E0??           00737         bz      TRAY_STEP_CCW   
                      00738         
000460 0E02           00739         movlw   d'2'
000462 5C35           00740         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
000464 E0??           00741         bz      TRAY_STEP_CW
                      00742         
000466 0E01           00743         movlw   d'1'
000468 5C35           00744         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
00046A E0??           00745         bz      TRAY_STEP_CW
                      00746         
00046C                00747 INC_ESKANOCAP
00046C 2A2E           00748         incf    ESKA_NOCAP
                      00749         
                      00750         ; determine what position to rotate the tray to: brute force, but w/e
00046E 0E02           00751         movlw   d'2'
000470 6E36           00752         movwf   TRAY_GOTO
000472 5C35           00753         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000474 E0??           00754         bz      TRAY_STEP_END
                      00755         
000476 0E04           00756         movlw   d'4'
000478 5C35           00757         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
00047A E0??           00758         bz      TRAY_STEP_CCW   
                      00759         
00047C 0E03           00760         movlw   d'3'
00047E 5C35           00761         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
000480 E0??           00762         bz      TRAY_STEP_CCW
                      00763         
000482 0E01           00764         movlw   d'1'
000484 5C35           00765         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
000486 E0??           00766         bz      TRAY_STEP_CW
                      00767         
000488                00768 INC_ESKACAP
000488 2A2D           00769         incf    ESKA
                      00770         
                      00771         ; determine what position to rotate the tray to: brute force, but w/e
00048A 0E01           00772         movlw   d'1'
00048C 6E36           00773         movwf   TRAY_GOTO
00048E 5C35           00774         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000490 E0??           00775         bz      TRAY_STEP_END
                      00776         
000492 0E04           00777         movlw   d'4'
000494 5C35           00778         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
000496 E0??           00779         bz      TRAY_STEP_CCW   
                      00780         
000498 0E03           00781         movlw   d'3'
00049A 5C35           00782         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
00049C E0??           00783         bz      TRAY_STEP_CCW
                      00784         
00049E 0E02           00785         movlw   d'2'
0004A0 5C35           00786         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004A2 E0??           00787         bz      TRAY_STEP_CCW
                      00788 
0004A4                00789 TRAY_STEP_CW
0004A4 6A33           00790         clrf    TRAY_COUNT
0004A6 0E00           00791         movlw   b'00000000'
0004A8 6E84           00792         movwf   PORTE
                      00793 
0004AA                00794 TRAY_CW_HOLD
0004AA 0E01           00795         movlw   b'00000001'
0004AC 6E84           00796         movwf   PORTE
                      00797 
                      00798 ;       incf    TRAY_COUNT
                      00799 ;       movff   TRAY_COUNT, WREG
                      00800 ;       cpfseq  TRAY_DELAY
                      00801 ;       goto    TRAY_CW_HOLD
                      00802         Delay50N    delayR, 0x05
  0000                    M         local   loop
0004AE 0E05               M         movlw   0x05
0004B0 6E1A               M         movwf   delayR
                          M 
0004B2                    M loop
0004B2 EC?? F???          M         call    Delay50ms
0004B6 2E1A               M         decfsz  delayR
0004B8 EF?? F???          M         goto    loop
                      00803         
0004BC D???           00804         bra     TRAY_STEP_END
                      00805         
0004BE                00806 TRAY_STEP_CCW
0004BE 6A33           00807         clrf    TRAY_COUNT
0004C0 0E00           00808         movlw   b'00000000'
0004C2 6E84           00809         movwf   PORTE
                      00810         
0004C4                00811 TRAY_CCW_HOLD
0004C4 0E02           00812         movlw   b'00000010'
0004C6 6E84           00813         movwf   PORTE
                      00814 
                      00815 ;       incf    TRAY_COUNT
                      00816 ;       movff   TRAY_COUNT, WREG
                      00817 ;       cpfseq  TRAY_DELAY
                      00818 ;       bra     TRAY_CCW_HOLD
                      00819         Delay50N    delayR, 0x05
  0000                    M         local   loop
0004C8 0E05               M         movlw   0x05
0004CA 6E1A               M         movwf   delayR
                          M 
0004CC                    M loop
0004CC EC?? F???          M         call    Delay50ms
0004D0 2E1A               M         decfsz  delayR
0004D2 EF?? F???          M         goto    loop
                      00820 
0004D6 D???           00821         bra     TRAY_STEP_END
                      00822         
0004D8                00823 TRAY_STEP_END
0004D8 C036 F035      00824         movff   TRAY_GOTO, TRAY_CURRENT
0004DC 0E00           00825         movlw   b'00000000'
0004DE 6E84           00826         movwf   PORTE
                      00827         
0004E0                00828 CHECK_DONE
                      00829         
                      00830         ; Challenging:  logic to figure out when the machine is done sorting 
                      00831         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00832         
                      00833         ; NUMBER: 
                      00834         ; if the total bottle count is 10, then we are done (most basic end condition)
0004E0 6A37           00835         clrf        STOP_CONDITION      ; denote regular stop, saved in eeprom as 0
0004E2 0E09           00836         movlw   d'9'
0004E4 5C31           00837         subwf   TOTAL_BOTTLES, 0
0004E6 E0??           00838         bz      EXIT_EXE
                      00839         
                      00840         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00841         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00842         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00843         ; 150s then stop.
0004E8 3818           00844         swapf   OP_sec, 0       ; 100's seconds
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004EA 6E17           00845         movwf   temp
0004EC 0E0F           00846         movlw   0x0f
0004EE 1617           00847         andwf   temp
0004F0 0E00           00848         movlw   d'0'
0004F2 6417           00849         cpfsgt  temp
0004F4 EF?? F???      00850         goto    COLLECTIONS_STEP; if 100 second, continue to check for 150s then 120s.
                      00851 
                      00852         ; MAX
0004F8 0E02           00853         movlw   d'2'
0004FA 6E37           00854         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
0004FC C018 F017      00855         movff   OP_sec, temp    ; 10's seconds
000500 0E0F           00856         movlw   0x0f
000502 1617           00857         andwf   temp
000504 0E05           00858         movlw   d'5'
000506 5C17           00859         subwf   temp, 0
000508 E0??           00860         bz      EXIT_EXE        ; if 150 second, terminate
                      00861         
                      00862         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00863         ; qualified run has at least 4 bottles, with 1 of each different kind
00050A 0E03           00864         movlw   d'3'
00050C 6431           00865         cpfsgt  TOTAL_BOTTLES
00050E EF?? F???      00866         goto    COLLECTIONS_STEP
                      00867 
000512 0E00           00868         movlw   d'0'
000514 6430           00869         cpfsgt  YOP_NOCAP, 0
000516 EF?? F???      00870         goto    COLLECTIONS_STEP
                      00871         
00051A 0E00           00872         movlw   d'0'
00051C 642F           00873         cpfsgt  YOP, 0
00051E EF?? F???      00874         goto    COLLECTIONS_STEP
                      00875         
000522 0E00           00876         movlw   d'0'
000524 642E           00877         cpfsgt  ESKA_NOCAP, 0
000526 EF?? F???      00878         goto    COLLECTIONS_STEP
                      00879         
00052A 0E00           00880         movlw   d'0'
00052C 642D           00881         cpfsgt  ESKA, 0
00052E EF?? F???      00882         goto    COLLECTIONS_STEP
                      00883         
                      00884         ; finally, if we get here then consider the termination optimized.
000532 0E03           00885         movlw   d'3'
000534 6E37           00886         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
000536 EF?? F???      00887         goto    EXIT_EXE
                      00888         
00053A                00889 EXIT_EXE
                      00890         ; stop timer and save the execution time to eeprom
00053A 9ED5           00891         bcf         T0CON, TMR0ON
00053C EC?? F???      00892         call        SAVE_EXE_TIME
                      00893                 
                      00894         ; Clear inExecution flag to stop '*' interrupts
000540 6A1E           00895         clrf        inExecution
                      00896         
000542 EC?? F???      00897         call        ClrLCD
                      00898         Display     SAVE
  0000                    M         local   loop
000546 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000548 6EF8               M         movwf   TBLPTRU
00054A 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00054C 6EF7               M         movwf   TBLPTRH
00054E 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000550 6EF6               M         movwf   TBLPTRL
000552 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000554 50F5               M         movf    TABLAT, W
000556                    M loop
000556 EC?? F???          M         call    WR_DATA         ; write to LCD
00055A 000B               M         tblrd+*                 ; next row in table
00055C 50F5               M         movf    TABLAT, W
00055E E1??               M         bnz     loop
000560 EC?? F???      00899         call        SaveData
000564 EF?? F???      00900         goto        LOG
                      00901 
                      00902 ;*******************************************************************************
                      00903 ; sorting statistics log mode
                      00904 ;*******************************************************************************
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00905         
000568                00906 LOG
000568 6A38           00907         clrf    inStandby
00056A EC?? F???      00908         call    ClrLCD
                      00909         Display Log1
  0000                    M         local   loop
00056E 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000570 6EF8               M         movwf   TBLPTRU
000572 0E??               M         movlw   high Log1       ; Move Table<15:8>
000574 6EF7               M         movwf   TBLPTRH
000576 0E??               M         movlw   low Log1        ; Move Table<7:0>
000578 6EF6               M         movwf   TBLPTRL
00057A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00057C 50F5               M         movf    TABLAT, W
00057E                    M loop
00057E EC?? F???          M         call    WR_DATA         ; write to LCD
000582 000B               M         tblrd+*                 ; next row in table
000584 50F5               M         movf    TABLAT, W
000586 E1??               M         bnz     loop
                      00910 
                      00911         ; display most recent run data
000588 0E0A           00912         movlw   d'10'
00058A 6E21           00913         movwf   L_EE
00058C EC?? F???      00914         call    DisplayExeTime
                      00915 
000590 EC?? F???      00916         call    LCD_L2
000594 0E0D           00917         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000596 6E21           00918         movwf   L_EE
000598 EC?? F???      00919         call    DispOpSort
                      00920 
00059C                00921 HOLD_LOG
00059C EC?? F???      00922         call    READ_KEY
                      00923         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0005A0 0E07               M         movlw   keyB                ; poll for mode
0005A2 6210               M         cpfseq  KEY                 ; check this against key press
0005A4 EF?? F???          M         goto    Exit
                          M 
0005A8                    M Next
0005A8 6A89               M         clrf    LATA                ; clear pins before proceeding
0005AA 6A8A               M         clrf    LATB
0005AC 6A8B               M         clrf    LATC
0005AE 6A8C               M         clrf    LATD
0005B0 EF?? F???          M         goto    LOG_INFO
                          M 
0005B4                    M Exit
0005B4 0000               M         nop
                      00924         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005B6 0E0D               M         movlw   key0                ; poll for mode
0005B8 6210               M         cpfseq  KEY                 ; check this against key press
0005BA EF?? F???          M         goto    Exit
                          M 
0005BE                    M Next
0005BE 6A89               M         clrf    LATA                ; clear pins before proceeding
0005C0 6A8A               M         clrf    LATB
0005C2 6A8B               M         clrf    LATC
0005C4 6A8C               M         clrf    LATD
0005C6 EF?? F???          M         goto    STANDBY
                          M 
0005CA                    M Exit
0005CA 0000               M         nop
0005CC D???           00925         bra     HOLD_LOG
                      00926 
0005CE                00927 LOG_INFO
0005CE EC?? F???      00928         call    ClrLCD
0005D2 6A21           00929         clrf    L_EE
0005D4 EC?? F???      00930         call    DispOpRTC
                      00931         
0005D8 EC?? F???      00932         call    LCD_L2
                      00933         Display LogInfo2
  0000                    M         local   loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005DC 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0005DE 6EF8               M         movwf   TBLPTRU
0005E0 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0005E2 6EF7               M         movwf   TBLPTRH
0005E4 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0005E6 6EF6               M         movwf   TBLPTRL
0005E8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005EA 50F5               M         movf    TABLAT, W
0005EC                    M loop
0005EC EC?? F???          M         call    WR_DATA         ; write to LCD
0005F0 000B               M         tblrd+*                 ; next row in table
0005F2 50F5               M         movf    TABLAT, W
0005F4 E1??               M         bnz     loop
0005F6 6A20           00934         clrf    H_EE
0005F8 6A21           00935         clrf    L_EE
0005FA                00936 HOLD_LOG_INFO
0005FA EC?? F???      00937         call    READ_KEY
                      00938         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005FE 0E0D               M         movlw   key0                ; poll for mode
000600 6210               M         cpfseq  KEY                 ; check this against key press
000602 EF?? F???          M         goto    Exit
                          M 
000606                    M Next
000606 6A89               M         clrf    LATA                ; clear pins before proceeding
000608 6A8A               M         clrf    LATB
00060A 6A8B               M         clrf    LATC
00060C 6A8C               M         clrf    LATD
00060E EF?? F???          M         goto    LOG
                          M 
000612                    M Exit
000612 0000               M         nop
000614 D???           00939         bra     HOLD_LOG
                      00940         
                      00941 ;*******************************************************************************
                      00942 ; permanent logs
                      00943 ;*******************************************************************************
                      00944 
000616                00945 PERM_LOG
000616 6A38           00946         clrf    inStandby
000618 EC?? F???      00947         call    ClrLCD
                      00948         Display PermLog1
  0000                    M         local   loop
00061C 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00061E 6EF8               M         movwf   TBLPTRU
000620 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000622 6EF7               M         movwf   TBLPTRH
000624 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000626 6EF6               M         movwf   TBLPTRL
000628 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00062A 50F5               M         movf    TABLAT, W
00062C                    M loop
00062C EC?? F???          M         call    WR_DATA         ; write to LCD
000630 000B               M         tblrd+*                 ; next row in table
000632 50F5               M         movf    TABLAT, W
000634 E1??               M         bnz     loop
000636 EC?? F???      00949         call    LCD_L2
                      00950         Display PermLog2
  0000                    M         local   loop
00063A 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00063C 6EF8               M         movwf   TBLPTRU
00063E 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000640 6EF7               M         movwf   TBLPTRH
000642 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000644 6EF6               M         movwf   TBLPTRL
000646 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000648 50F5               M         movf    TABLAT, W
00064A                    M loop
00064A EC?? F???          M         call    WR_DATA         ; write to LCD
00064E 000B               M         tblrd+*                 ; next row in table
000650 50F5               M         movf    TABLAT, W
000652 E1??               M         bnz     loop
                      00951         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000654                00952 HOLD_PERM_LOG
000654 EC?? F???      00953         call    READ_KEY
                      00954         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000658 0E0D               M         movlw   key0                ; poll for mode
00065A 6210               M         cpfseq  KEY                 ; check this against key press
00065C EF?? F???          M         goto    Exit
                          M 
000660                    M Next
000660 6A89               M         clrf    LATA                ; clear pins before proceeding
000662 6A8A               M         clrf    LATB
000664 6A8B               M         clrf    LATC
000666 6A8C               M         clrf    LATD
000668 EF?? F???          M         goto    STANDBY
                          M 
00066C                    M Exit
00066C 0000               M         nop
                      00955         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00066E 0E00               M         movlw   key1                ; poll for mode
000670 6210               M         cpfseq  KEY                 ; check this against key press
000672 EF?? F???          M         goto    Exit
                          M 
000676                    M Next
000676 6A89               M         clrf    LATA                ; clear pins before proceeding
000678 6A8A               M         clrf    LATB
00067A 6A8B               M         clrf    LATC
00067C 6A8C               M         clrf    LATD
00067E EF?? F???          M         goto    PLOG
                          M 
000682                    M Exit
000682 0000               M         nop
                      00956         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000684 0E01               M         movlw   key2                ; poll for mode
000686 6210               M         cpfseq  KEY                 ; check this against key press
000688 EF?? F???          M         goto    Exit
                          M 
00068C                    M Next
00068C 6A89               M         clrf    LATA                ; clear pins before proceeding
00068E 6A8A               M         clrf    LATB
000690 6A8B               M         clrf    LATC
000692 6A8C               M         clrf    LATD
000694 EF?? F???          M         goto    PLOG
                          M 
000698                    M Exit
000698 0000               M         nop
                      00957         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00069A 0E02               M         movlw   key3                ; poll for mode
00069C 6210               M         cpfseq  KEY                 ; check this against key press
00069E EF?? F???          M         goto    Exit
                          M 
0006A2                    M Next
0006A2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006A4 6A8A               M         clrf    LATB
0006A6 6A8B               M         clrf    LATC
0006A8 6A8C               M         clrf    LATD
0006AA EF?? F???          M         goto    PLOG
                          M 
0006AE                    M Exit
0006AE 0000               M         nop
                      00958         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006B0 0E04               M         movlw   key4                ; poll for mode
0006B2 6210               M         cpfseq  KEY                 ; check this against key press
0006B4 EF?? F???          M         goto    Exit
                          M 
0006B8                    M Next
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006B8 6A89               M         clrf    LATA                ; clear pins before proceeding
0006BA 6A8A               M         clrf    LATB
0006BC 6A8B               M         clrf    LATC
0006BE 6A8C               M         clrf    LATD
0006C0 EF?? F???          M         goto    PLOG
                          M 
0006C4                    M Exit
0006C4 0000               M         nop
                      00959         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0006C6 0E05               M         movlw   key5                ; poll for mode
0006C8 6210               M         cpfseq  KEY                 ; check this against key press
0006CA EF?? F???          M         goto    Exit
                          M 
0006CE                    M Next
0006CE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D0 6A8A               M         clrf    LATB
0006D2 6A8B               M         clrf    LATC
0006D4 6A8C               M         clrf    LATD
0006D6 EF?? F???          M         goto    PLOG
                          M 
0006DA                    M Exit
0006DA 0000               M         nop
                      00960         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006DC 0E06               M         movlw   key6                ; poll for mode
0006DE 6210               M         cpfseq  KEY                 ; check this against key press
0006E0 EF?? F???          M         goto    Exit
                          M 
0006E4                    M Next
0006E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E6 6A8A               M         clrf    LATB
0006E8 6A8B               M         clrf    LATC
0006EA 6A8C               M         clrf    LATD
0006EC EF?? F???          M         goto    PLOG
                          M 
0006F0                    M Exit
0006F0 0000               M         nop
                      00961         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0006F2 0E08               M         movlw   key7                ; poll for mode
0006F4 6210               M         cpfseq  KEY                 ; check this against key press
0006F6 EF?? F???          M         goto    Exit
                          M 
0006FA                    M Next
0006FA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006FC 6A8A               M         clrf    LATB
0006FE 6A8B               M         clrf    LATC
000700 6A8C               M         clrf    LATD
000702 EF?? F???          M         goto    PLOG
                          M 
000706                    M Exit
000706 0000               M         nop
                      00962         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000708 0E09               M         movlw   key8                ; poll for mode
00070A 6210               M         cpfseq  KEY                 ; check this against key press
00070C EF?? F???          M         goto    Exit
                          M 
000710                    M Next
000710 6A89               M         clrf    LATA                ; clear pins before proceeding
000712 6A8A               M         clrf    LATB
000714 6A8B               M         clrf    LATC
000716 6A8C               M         clrf    LATD
000718 EF?? F???          M         goto    PLOG
                          M 
00071C                    M Exit
00071C 0000               M         nop
                      00963         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00071E 0E0A               M         movlw   key9                ; poll for mode
000720 6210               M         cpfseq  KEY                 ; check this against key press
000722 EF?? F???          M         goto    Exit
                          M 
000726                    M Next
000726 6A89               M         clrf    LATA                ; clear pins before proceeding
000728 6A8A               M         clrf    LATB
00072A 6A8B               M         clrf    LATC
00072C 6A8C               M         clrf    LATD
00072E EF?? F???          M         goto    PLOG
                          M 
000732                    M Exit
000732 0000               M         nop
000734 D???           00964         bra HOLD_PERM_LOG
                      00965         
000736                00966 PLOG
000736 EC?? F???      00967         call    ClrLCD
                      00968         Display PermLog1
  0000                    M         local   loop
00073A 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00073C 6EF8               M         movwf   TBLPTRU
00073E 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000740 6EF7               M         movwf   TBLPTRH
000742 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000744 6EF6               M         movwf   TBLPTRL
000746 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000748 50F5               M         movf    TABLAT, W
00074A                    M loop
00074A EC?? F???          M         call    WR_DATA         ; write to LCD
00074E 000B               M         tblrd+*                 ; next row in table
000750 50F5               M         movf    TABLAT, W
000752 E1??               M         bnz     loop
                      00969         
                      00970         ; find the key press value
000754 C010 FFE8      00971         movff   KEY, WREG
000758 2AE8           00972         incf    WREG        ; W = KEY+1
00075A 6E17           00973         movwf   temp
                      00974         
00075C 42E8           00975         rrncf   WREG        ; division by 4
00075E 9EE8           00976         bcf     WREG, 7     ; clear last bit, overflow from rotate
000760 42E8           00977         rrncf   WREG        
000762 9EE8           00978         bcf     WREG, 7
000764 5E17           00979         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000766 C017 FFE8      00980         movff   temp, WREG
00076A C017 F011      00981         movff   temp, temp_KEY
00076E 0D15           00982         mullw   d'21'       ; indexed as mutliples of 21
                      00983 
000770                00984 displayNum
000770 C011 FFE8      00985         movff   temp_KEY, WREG
000774 0F30           00986         addlw   0x30
000776 EC?? F???      00987         call    WR_DATA
00077A 0E3A           00988         movlw   ":"
00077C EC?? F???      00989         call    WR_DATA
000780 0E20           00990         movlw   " "
000782 EC?? F???      00991         call    WR_DATA
                      00992         
000786 CFF3 F021      00993         movff   PRODL, L_EE
00078A 0E00           00994         movlw   d'0'
00078C 2621           00995         addwf   L_EE
                      00996         READEE  OP_sec, H_EE, L_EE
00078E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000792 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000796 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000798 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00079A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00079C CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0007A0 2A21           00997         incf    L_EE
                      00998         READEE  OP_INT, H_EE, L_EE
0007A2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007A6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007AA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007AC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007AE 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007B0 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0007B4 2A21           00999         incf    L_EE
0007B6 EC?? F???      01000         call    DisplayExeTime
0007BA CFF3 F021      01001         movff   PRODL, L_EE
                      01002         
                      01003         ; reset eeprom to beginning
0007BE EC?? F???      01004         call    LCD_L2
0007C2 CFF3 F021      01005         movff   PRODL, L_EE
0007C6 EC?? F???      01006         call    DispOpRTC
                      01007         
0007CA                01008 HOLD_PLOG
0007CA EC?? F???      01009         call    READ_KEY
                      01010         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0007CE 0E03               M         movlw   keyA                ; poll for mode
0007D0 6210               M         cpfseq  KEY                 ; check this against key press
0007D2 EF?? F???          M         goto    Exit
                          M 
0007D6                    M Next
0007D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0007D8 6A8A               M         clrf    LATB
0007DA 6A8B               M         clrf    LATC
0007DC 6A8C               M         clrf    LATD
0007DE EF?? F???          M         goto    PLOG_DETAILS
                          M 
0007E2                    M Exit
0007E2 0000               M         nop
                      01011         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007E4 0E0D               M         movlw   key0                ; poll for mode
0007E6 6210               M         cpfseq  KEY                 ; check this against key press
0007E8 EF?? F???          M         goto    Exit
                          M 
0007EC                    M Next
0007EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0007EE 6A8A               M         clrf    LATB
0007F0 6A8B               M         clrf    LATC
0007F2 6A8C               M         clrf    LATD
0007F4 EF?? F???          M         goto    PERM_LOG
                          M 
0007F8                    M Exit
0007F8 0000               M         nop
0007FA D???           01012         bra HOLD_PLOG
                      01013         
0007FC                01014 PLOG_DETAILS
0007FC EC?? F???      01015         call    ClrLCD
                      01016         
                      01017         Display Log1
  0000                    M         local   loop
000800 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000802 6EF8               M         movwf   TBLPTRU
000804 0E??               M         movlw   high Log1       ; Move Table<15:8>
000806 6EF7               M         movwf   TBLPTRH
000808 0E??               M         movlw   low Log1        ; Move Table<7:0>
00080A 6EF6               M         movwf   TBLPTRL
00080C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00080E 50F5               M         movf    TABLAT, W
000810                    M loop
000810 EC?? F???          M         call    WR_DATA         ; write to LCD
000814 000B               M         tblrd+*                 ; next row in table
000816 50F5               M         movf    TABLAT, W
000818 E1??               M         bnz     loop
00081A EC?? F???      01018         call    DisplayExeTime
                      01019         
00081E EC?? F???      01020         call    LCD_L2
000822 EC?? F???      01021         call    DispOpSort
                      01022         
000826                01023 HOLD_PLOG_DETAILS
000826 EC?? F???      01024         call    READ_KEY
                      01025         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00082A 0E0D               M         movlw   key0                ; poll for mode
00082C 6210               M         cpfseq  KEY                 ; check this against key press
00082E EF?? F???          M         goto    Exit
                          M 
000832                    M Next
000832 6A89               M         clrf    LATA                ; clear pins before proceeding
000834 6A8A               M         clrf    LATB
000836 6A8B               M         clrf    LATC
000838 6A8C               M         clrf    LATD
00083A EF?? F???          M         goto    PERM_LOG
                          M 
00083E                    M Exit
00083E 0000               M         nop
000840 D???           01026         bra HOLD_PLOG_DETAILS
                      01027         
                      01028 ;*******************************************************************************
                      01029 ; pc interface
                      01030 ;*******************************************************************************
                      01031 
000842                01032 PC_MODE
000842 6A38           01033         clrf    inStandby
000844 EC?? F???      01034         call    ClrLCD
                      01035         Display PC1
  0000                    M         local   loop
000848 0E??               M         movlw   upper PC1       ; Move Table<20:16>
00084A 6EF8               M         movwf   TBLPTRU
00084C 0E??               M         movlw   high PC1        ; Move Table<15:8>
00084E 6EF7               M         movwf   TBLPTRH
000850 0E??               M         movlw   low PC1         ; Move Table<7:0>
000852 6EF6               M         movwf   TBLPTRL
000854 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000856 50F5               M         movf    TABLAT, W
000858                    M loop
000858 EC?? F???          M         call    WR_DATA         ; write to LCD
00085C 000B               M         tblrd+*                 ; next row in table
00085E 50F5               M         movf    TABLAT, W
000860 E1??               M         bnz     loop
000862 EC?? F???      01036         call    LCD_L2
                      01037         Display PC2
  0000                    M         local   loop
000866 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000868 6EF8               M         movwf   TBLPTRU
00086A 0E??               M         movlw   high PC2        ; Move Table<15:8>
00086C 6EF7               M         movwf   TBLPTRH
00086E 0E??               M         movlw   low PC2         ; Move Table<7:0>
000870 6EF6               M         movwf   TBLPTRL
000872 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000874 50F5               M         movf    TABLAT, W
000876                    M loop
000876 EC?? F???          M         call    WR_DATA         ; write to LCD
00087A 000B               M         tblrd+*                 ; next row in table
00087C 50F5               M         movf    TABLAT, W
00087E E1??               M         bnz     loop
000880 CFF9 F029      01038         movff   PCL, PC_PCL
000884 CFFA F02A      01039         movff   PCLATH, PC_PCLATH
000888 CFFB F02B      01040         movff   PCLATU, PC_PCLATU
                      01041         
00088C                01042 HOLD_PC
00088C EC?? F???      01043         call    READ_KEY
                      01044         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000890 0E0D               M         movlw   key0                ; poll for mode
000892 6210               M         cpfseq  KEY                 ; check this against key press
000894 EF?? F???          M         goto    Exit
                          M 
000898                    M Next
000898 6A89               M         clrf    LATA                ; clear pins before proceeding
00089A 6A8A               M         clrf    LATB
00089C 6A8B               M         clrf    LATC
00089E 6A8C               M         clrf    LATD
0008A0 EF?? F???          M         goto    STANDBY
                          M 
0008A4                    M Exit
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008A4 0000               M         nop
                      01045         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008A6 0E0E               M         movlw   keyH                ; poll for mode
0008A8 6210               M         cpfseq  KEY                 ; check this against key press
0008AA EF?? F???          M         goto    Exit
                          M 
0008AE                    M Next
0008AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0008B0 6A8A               M         clrf    LATB
0008B2 6A8B               M         clrf    LATC
0008B4 6A8C               M         clrf    LATD
0008B6 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008BA                    M Exit
0008BA 0000               M         nop
0008BC D???           01046         bra     HOLD_PC
                      01047 
0008BE                01048 PC_TRANSFER
0008BE 6828           01049         setf    transferring
0008C0 EC?? F???      01050         call    ClrLCD
                      01051         Display PCTransfer
  0000                    M         local   loop
0008C4 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0008C6 6EF8               M         movwf   TBLPTRU
0008C8 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008CA 6EF7               M         movwf   TBLPTRH
0008CC 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008CE 6EF6               M         movwf   TBLPTRL
0008D0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008D2 50F5               M         movf    TABLAT, W
0008D4                    M loop
0008D4 EC?? F???          M         call    WR_DATA         ; write to LCD
0008D8 000B               M         tblrd+*                 ; next row in table
0008DA 50F5               M         movf    TABLAT, W
0008DC E1??               M         bnz     loop
0008DE EC?? F???      01052         call    DataUSART
0008E2 6A28           01053         clrf    transferring
0008E4 EF?? F???      01054         goto    STANDBY
                      01055         
                      01056 ;*******************************************************************************
                      01057 ; subroutines
                      01058 ;*******************************************************************************
                      01059 
0008E8                01060 SaveData
0008E8 C02D FFE8      01061         movff       ESKA, WREG
0008EC 0F30           01062         addlw       0x30
                      01063         WriteEE     WREG, H_EE, L_EE
0008EE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008F2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008F6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008FA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008FC D???               M         bra     $-2
                          M 
0008FE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000900 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000902 84A6               M         bsf     EECON1, WREN        ; enable write
000904 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000906 98A1               M         bcf     PIR2, EEIF
                          M 
000908 0E55               M         movlw   0x55
00090A 6EA7               M         movwf   EECON2              ; write 55h
00090C 0EAA               M         movlw   0xaa
00090E 6EA7               M         movwf   EECON2              ; write 0xaa
000910 82A6               M         bsf     EECON1, WR          ; begin write
000912 B2A6               M         btfsc   EECON1, WR
000914 D???               M         bra     $-2
                          M 
000916 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000918 94A6               M         bcf     EECON1, WREN        ; disable writes
00091A 2A21           01064         incf        L_EE
                      01065         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00091C C02E FFE8      01066         movff       ESKA_NOCAP, WREG
000920 0F30           01067         addlw       0x30
                      01068         WriteEE     WREG, H_EE, L_EE
000922 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000926 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00092A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00092E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000930 D???               M         bra     $-2
                          M 
000932 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000934 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000936 84A6               M         bsf     EECON1, WREN        ; enable write
000938 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00093A 98A1               M         bcf     PIR2, EEIF
                          M 
00093C 0E55               M         movlw   0x55
00093E 6EA7               M         movwf   EECON2              ; write 55h
000940 0EAA               M         movlw   0xaa
000942 6EA7               M         movwf   EECON2              ; write 0xaa
000944 82A6               M         bsf     EECON1, WR          ; begin write
000946 B2A6               M         btfsc   EECON1, WR
000948 D???               M         bra     $-2
                          M 
00094A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00094C 94A6               M         bcf     EECON1, WREN        ; disable writes
00094E 2A21           01069         incf        L_EE
                      01070         
000950 C02F FFE8      01071         movff       YOP, WREG
000954 0F30           01072         addlw       0x30
                      01073         WriteEE     WREG, H_EE, L_EE
000956 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00095A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00095E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000962 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000964 D???               M         bra     $-2
                          M 
000966 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000968 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00096A 84A6               M         bsf     EECON1, WREN        ; enable write
00096C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00096E 98A1               M         bcf     PIR2, EEIF
                          M 
000970 0E55               M         movlw   0x55
000972 6EA7               M         movwf   EECON2              ; write 55h
000974 0EAA               M         movlw   0xaa
000976 6EA7               M         movwf   EECON2              ; write 0xaa
000978 82A6               M         bsf     EECON1, WR          ; begin write
00097A B2A6               M         btfsc   EECON1, WR
00097C D???               M         bra     $-2
                          M 
00097E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000980 94A6               M         bcf     EECON1, WREN        ; disable writes
000982 2A21           01074         incf        L_EE
                      01075         
000984 C030 FFE8      01076         movff       YOP_NOCAP, WREG
000988 0F30           01077         addlw       0x30
                      01078         WriteEE     WREG, H_EE, L_EE
00098A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00098E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000992 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000996 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000998 D???               M         bra     $-2
                          M 
00099A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00099C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00099E 84A6               M         bsf     EECON1, WREN        ; enable write
0009A0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009A2 98A1               M         bcf     PIR2, EEIF
                          M 
0009A4 0E55               M         movlw   0x55
0009A6 6EA7               M         movwf   EECON2              ; write 55h
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009A8 0EAA               M         movlw   0xaa
0009AA 6EA7               M         movwf   EECON2              ; write 0xaa
0009AC 82A6               M         bsf     EECON1, WR          ; begin write
0009AE B2A6               M         btfsc   EECON1, WR
0009B0 D???               M         bra     $-2
                          M 
0009B2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009B4 94A6               M         bcf     EECON1, WREN        ; disable writes
0009B6 2A21           01079         incf        L_EE
                      01080         
0009B8 C037 FFE8      01081         movff       STOP_CONDITION, WREG
0009BC 0F30           01082         addlw       0x30
                      01083         WriteEE     WREG, H_EE, L_EE
0009BE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009C2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009C6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009CA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009CC D???               M         bra     $-2
                          M 
0009CE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009D0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009D2 84A6               M         bsf     EECON1, WREN        ; enable write
0009D4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009D6 98A1               M         bcf     PIR2, EEIF
                          M 
0009D8 0E55               M         movlw   0x55
0009DA 6EA7               M         movwf   EECON2              ; write 55h
0009DC 0EAA               M         movlw   0xaa
0009DE 6EA7               M         movwf   EECON2              ; write 0xaa
0009E0 82A6               M         bsf     EECON1, WR          ; begin write
0009E2 B2A6               M         btfsc   EECON1, WR
0009E4 D???               M         bra     $-2
                          M 
0009E6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009E8 94A6               M         bcf     EECON1, WREN        ; disable writes
0009EA 2A21           01084         incf        L_EE
                      01085         
0009EC 0E00           01086         movlw       d'0'
0009EE 6E20           01087         movwf       H_EE
0009F0 0EA8           01088         movlw       d'168'              ; take d'168' as last
0009F2 6E21           01089         movwf       L_EE
0009F4 0E00           01090         movlw       d'0'
0009F6 6E23           01091         movwf       tempH_EE
0009F8 0EDC           01092         movlw       d'220'              ; temp for low constant
0009FA 6E24           01093         movwf       tempL_EE
                      01094         
0009FC 6A16           01095         clrf        counter2
0009FE 6A15           01096         clrf        counter
                      01097         
000A00                01098 ShiftLoop
000A00 2A15           01099         incf            counter
                      01100         READEE          REG_EE, H_EE, L_EE
000A02 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A06 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000A0A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A0C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A0E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A10 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000A14 0E15           01101         movlw           d'21'
000A16 2621           01102         addwf           L_EE
                      01103         WriteEE         REG_EE, H_EE, L_EE
000A18 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A1C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A20 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000A24 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A26 D???               M         bra     $-2
                          M 
000A28 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A2A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A2C 84A6               M         bsf     EECON1, WREN        ; enable write
000A2E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A30 98A1               M         bcf     PIR2, EEIF
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000A32 0E55               M         movlw   0x55
000A34 6EA7               M         movwf   EECON2              ; write 55h
000A36 0EAA               M         movlw   0xaa
000A38 6EA7               M         movwf   EECON2              ; write 0xaa
000A3A 82A6               M         bsf     EECON1, WR          ; begin write
000A3C B2A6               M         btfsc   EECON1, WR
000A3E D???               M         bra     $-2
                          M 
000A40 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A42 94A6               M         bcf     EECON1, WREN        ; disable writes
000A44 0E14           01104         movlw           d'20'
000A46 5E21           01105         subwf           L_EE
000A48 0E15           01106         movlw           d'21'
000A4A 6215           01107         cpfseq          counter
000A4C EF?? F???      01108         goto            ShiftLoop
                      01109         
                      01110         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A50 0E2A           01111         movlw           d'42'
000A52 5E21           01112         subwf           L_EE
000A54 0EDC           01113         movlw           d'220'
000A56 6E24           01114         movwf           tempL_EE
000A58 6A15           01115         clrf            counter
000A5A 2A16           01116         incf            counter2
000A5C 0E09           01117         movlw           d'9'
000A5E 6216           01118         cpfseq          counter2        ; Skip if 9 shifts were made
000A60 EF?? F???      01119         goto            ShiftLoop
                      01120 
000A64 0012           01121         return
                      01122         
000A66                01123 RTC_INIT
                      01124         ; set sda and scl to high
000A66 9882           01125         bcf     PORTC, 4
000A68 9682           01126         bcf     PORTC, 3
000A6A 8894           01127         bsf     TRISC, 4
000A6C 8694           01128         bsf     TRISC, 3
                      01129         
000A6E EC?? F???      01130         call    INIT_RTC
                      01131         
                      01132         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A72 0012           01133 return
                      01134         
000A74                01135 SAVE_TIME
                      01136         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A74 0E02               M     movlw   0x02
000A76 6E??               M     movwf   regaddress
000A78 EC?? F???          M     call    read_rtc
000A7C C??? FFE8          M     movff   datachar, WREG
000A80 EC?? F???          M     call    rtc_convert
                      01137         rtc_read    0x02        ; hours
000A84 0E02               M     movlw   0x02
000A86 6E??               M     movwf   regaddress
000A88 EC?? F???          M     call    read_rtc
000A8C C??? FFE8          M     movff   datachar, WREG
000A90 EC?? F???          M     call    rtc_convert
000A94 EC?? F???      01138         call    WriteEE_RTC
                      01139         rtc_read    0x01        ; minutes
000A98 0E01               M     movlw   0x01
000A9A 6E??               M     movwf   regaddress
000A9C EC?? F???          M     call    read_rtc
000AA0 C??? FFE8          M     movff   datachar, WREG
000AA4 EC?? F???          M     call    rtc_convert
000AA8 EC?? F???      01140         call    WriteEE_RTC
                      01141         rtc_read    0x06        ; years
000AAC 0E06               M     movlw   0x06
000AAE 6E??               M     movwf   regaddress
000AB0 EC?? F???          M     call    read_rtc
000AB4 C??? FFE8          M     movff   datachar, WREG
000AB8 EC?? F???          M     call    rtc_convert
000ABC EC?? F???      01142         call    WriteEE_RTC
                      01143         rtc_read    0x05        ; months
000AC0 0E05               M     movlw   0x05
000AC2 6E??               M     movwf   regaddress
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AC4 EC?? F???          M     call    read_rtc
000AC8 C??? FFE8          M     movff   datachar, WREG
000ACC EC?? F???          M     call    rtc_convert
000AD0 EC?? F???      01144         call    WriteEE_RTC
                      01145         rtc_read    0x04        ; days
000AD4 0E04               M     movlw   0x04
000AD6 6E??               M     movwf   regaddress
000AD8 EC?? F???          M     call    read_rtc
000ADC C??? FFE8          M     movff   datachar, WREG
000AE0 EC?? F???          M     call    rtc_convert
000AE4 EC?? F???      01146         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000AE8 0012           01147 return
                      01148         
000AEA                01149 SAVE_EXE_TIME
                      01150         
Warning[202]: Argument out of range.  Least significant bits used.
000AEA 3818           01151         swapf   OP_sec, WREG    ; 100's seconds
000AEC 6E17           01152         movwf   temp
000AEE 0E0F           01153         movlw   0x0f
000AF0 1617           01154         andwf   temp
000AF2 C017 FFE8      01155         movff   temp, WREG
000AF6 0F30           01156         addlw   0x30    
                      01157         WriteEE WREG, H_EE, L_EE
000AF8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AFC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B00 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B04 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B06 D???               M         bra     $-2
                          M 
000B08 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B0A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B0C 84A6               M         bsf     EECON1, WREN        ; enable write
000B0E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B10 98A1               M         bcf     PIR2, EEIF
                          M 
000B12 0E55               M         movlw   0x55
000B14 6EA7               M         movwf   EECON2              ; write 55h
000B16 0EAA               M         movlw   0xaa
000B18 6EA7               M         movwf   EECON2              ; write 0xaa
000B1A 82A6               M         bsf     EECON1, WR          ; begin write
000B1C B2A6               M         btfsc   EECON1, WR
000B1E D???               M         bra     $-2
                          M 
000B20 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B22 94A6               M         bcf     EECON1, WREN        ; disable writes
000B24 2A21           01158         incf    L_EE
                      01159         
000B26 C018 F017      01160         movff   OP_sec, temp    ; 10's seconds
000B2A 0E0F           01161         movlw   0x0f
000B2C 1617           01162         andwf   temp            ; Temp = lower nibble of Op_sec
000B2E C017 FFE8      01163         movff   temp, WREG      ; W = Temp
000B32 0F30           01164         addlw   0x30            ; Convert to ASCII
                      01165         WriteEE WREG, H_EE, L_EE
000B34 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B38 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B3C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B40 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B42 D???               M         bra     $-2
                          M 
000B44 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B46 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B48 84A6               M         bsf     EECON1, WREN        ; enable write
000B4A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B4C 98A1               M         bcf     PIR2, EEIF
                          M 
000B4E 0E55               M         movlw   0x55
000B50 6EA7               M         movwf   EECON2              ; write 55h
000B52 0EAA               M         movlw   0xaa
000B54 6EA7               M         movwf   EECON2              ; write 0xaa
000B56 82A6               M         bsf     EECON1, WR          ; begin write
000B58 B2A6               M         btfsc   EECON1, WR
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B5A D???               M         bra     $-2
                          M 
000B5C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B5E 94A6               M         bcf     EECON1, WREN        ; disable writes
000B60 2A21           01166         incf    L_EE
                      01167         
Warning[202]: Argument out of range.  Least significant bits used.
000B62 3819           01168         swapf   OP_INT, WREG    ;1's seconds
000B64 6E17           01169         movwf   temp
000B66 0E0F           01170         movlw   0x0f
000B68 1617           01171         andwf   temp
000B6A C017 FFE8      01172         movff   temp, WREG
000B6E 0F30           01173         addlw   0x30
                      01174         WriteEE WREG, H_EE, L_EE
000B70 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B74 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B78 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B7C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B7E D???               M         bra     $-2
                          M 
000B80 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B82 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B84 84A6               M         bsf     EECON1, WREN        ; enable write
000B86 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B88 98A1               M         bcf     PIR2, EEIF
                          M 
000B8A 0E55               M         movlw   0x55
000B8C 6EA7               M         movwf   EECON2              ; write 55h
000B8E 0EAA               M         movlw   0xaa
000B90 6EA7               M         movwf   EECON2              ; write 0xaa
000B92 82A6               M         bsf     EECON1, WR          ; begin write
000B94 B2A6               M         btfsc   EECON1, WR
000B96 D???               M         bra     $-2
                          M 
000B98 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B9A 94A6               M         bcf     EECON1, WREN        ; disable writes
000B9C 2A21           01175         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000B9E 0012           01176 return
                      01177         
                      01178                 
000BA0                01179 DISPLAY_RTC
                      01180         ; display data in this format hh/minmin/yy yy/mm/dd
                      01181         
                      01182         rtc_read    0x02            ; 0x02 from DS1307 - hours
000BA0 0E02               M     movlw   0x02
000BA2 6E??               M     movwf   regaddress
000BA4 EC?? F???          M     call    read_rtc
000BA8 C??? FFE8          M     movff   datachar, WREG
000BAC EC?? F???          M     call    rtc_convert
000BB0 C??? FFE8      01183         movff   tens_digit,WREG
000BB4 EC?? F???      01184         call    WR_DATA
000BB8 C??? FFE8      01185         movff   ones_digit,WREG
000BBC EC?? F???      01186         call    WR_DATA
000BC0 0E68           01187         movlw   "h"
000BC2 EC?? F???      01188         call    WR_DATA
                      01189         
                      01190         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000BC6 0E01               M     movlw   0x01
000BC8 6E??               M     movwf   regaddress
000BCA EC?? F???          M     call    read_rtc
000BCE C??? FFE8          M     movff   datachar, WREG
000BD2 EC?? F???          M     call    rtc_convert
000BD6 C??? FFE8      01191         movff   tens_digit,WREG
000BDA EC?? F???      01192         call    WR_DATA
000BDE C??? FFE8      01193         movff   ones_digit,WREG
000BE2 EC?? F???      01194         call    WR_DATA
                      01195         
                      01196         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000BE6 0E00               M     movlw   0x00
000BE8 6E??               M     movwf   regaddress
000BEA EC?? F???          M     call    read_rtc
000BEE C??? FFE8          M     movff   datachar, WREG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BF2 EC?? F???          M     call    rtc_convert
000BF6 C??? FFE8      01197         movff   tens_digit,WREG
000BFA EC?? F???      01198         call    WR_DATA
000BFE C??? FFE8      01199         movff   ones_digit,WREG
000C02 EC?? F???      01200         call    WR_DATA
000C06 0E20           01201         movlw   " "
000C08 EC?? F???      01202         call    WR_DATA
                      01203         
                      01204         rtc_read    0x06            ; 0x06 from DS1307 - years
000C0C 0E06               M     movlw   0x06
000C0E 6E??               M     movwf   regaddress
000C10 EC?? F???          M     call    read_rtc
000C14 C??? FFE8          M     movff   datachar, WREG
000C18 EC?? F???          M     call    rtc_convert
000C1C C??? FFE8      01205         movff   tens_digit,WREG
000C20 EC?? F???      01206         call    WR_DATA
000C24 C??? FFE8      01207         movff   ones_digit,WREG
000C28 EC?? F???      01208         call    WR_DATA
000C2C 0E2F           01209         movlw   "/"
000C2E EC?? F???      01210         call    WR_DATA
                      01211         
                      01212         rtc_read    0x05            ; 0x05 from DS1307 - months
000C32 0E05               M     movlw   0x05
000C34 6E??               M     movwf   regaddress
000C36 EC?? F???          M     call    read_rtc
000C3A C??? FFE8          M     movff   datachar, WREG
000C3E EC?? F???          M     call    rtc_convert
000C42 C??? FFE8      01213         movff   tens_digit,WREG
000C46 EC?? F???      01214         call    WR_DATA
000C4A C??? FFE8      01215         movff   ones_digit,WREG
000C4E EC?? F???      01216         call    WR_DATA
000C52 0E2F           01217         movlw   "/"
000C54 EC?? F???      01218         call    WR_DATA
                      01219         
                      01220         rtc_read    0x04            ; 0x04 from DS1307 - days
000C58 0E04               M     movlw   0x04
000C5A 6E??               M     movwf   regaddress
000C5C EC?? F???          M     call    read_rtc
000C60 C??? FFE8          M     movff   datachar, WREG
000C64 EC?? F???          M     call    rtc_convert
000C68 C??? FFE8      01221         movff   tens_digit,WREG
000C6C EC?? F???      01222         call    WR_DATA
000C70 C??? FFE8      01223         movff   ones_digit,WREG
000C74 EC?? F???      01224         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C78 0012           01225 return
                      01226         
000C7A                01227 SET_TIME
                      01228         rtc_resetAll
                          M 
000C7A 6A??               M     clrf    databyte
000C7C 0E06               M     movlw   6
000C7E 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000C80                    M     del_loop0
000C80 EC?? F???          M     call    write_rtc
000C84 2E??               M     decfsz  regaddress
000C86 D???               M     bra     del_loop0
000C88 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01229         
                      01230         rtc_set 0x00,   b'10000000'
000C8C 0E00               M     movlw   0x00
000C8E 6E??               M     movwf   regaddress
000C90 0E80               M     movlw   b'10000000'
000C92 6E??               M     movwf   databyte
000C94 EC?? F???          M     call    write_rtc
                      01231 
                      01232         rtc_set 0x06,   b'00010111'             ; Year 17
000C98 0E06               M     movlw   0x06
000C9A 6E??               M     movwf   regaddress
000C9C 0E17               M     movlw   b'00010111'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C9E 6E??               M     movwf   databyte
000CA0 EC?? F???          M     call    write_rtc
                      01233         rtc_set 0x05,   b'00000011'             ; Month 03
000CA4 0E05               M     movlw   0x05
000CA6 6E??               M     movwf   regaddress
000CA8 0E03               M     movlw   b'00000011'
000CAA 6E??               M     movwf   databyte
000CAC EC?? F???          M     call    write_rtc
                      01234         rtc_set 0x04,   b'00000100'             ; Date 04
000CB0 0E04               M     movlw   0x04
000CB2 6E??               M     movwf   regaddress
000CB4 0E04               M     movlw   b'00000100'
000CB6 6E??               M     movwf   databyte
000CB8 EC?? F???          M     call    write_rtc
                      01235         rtc_set 0x02,   b'00010010'             ; Hours 12
000CBC 0E02               M     movlw   0x02
000CBE 6E??               M     movwf   regaddress
000CC0 0E12               M     movlw   b'00010010'
000CC2 6E??               M     movwf   databyte
000CC4 EC?? F???          M     call    write_rtc
                      01236         rtc_set 0x01,   b'01001000'             ; Minutes 27
000CC8 0E01               M     movlw   0x01
000CCA 6E??               M     movwf   regaddress
000CCC 0E48               M     movlw   b'01001000'
000CCE 6E??               M     movwf   databyte
000CD0 EC?? F???          M     call    write_rtc
                      01237         rtc_set 0x00,   b'00000000'             ; Seconds 0
000CD4 0E00               M     movlw   0x00
000CD6 6E??               M     movwf   regaddress
000CD8 0E00               M     movlw   b'00000000'
000CDA 6E??               M     movwf   databyte
000CDC EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000CE0 0012           01238 return
                      01239         
000CE2                01240 INIT_USART
                      01241         
000CE2 8E94           01242         bsf     TRISC, 7        ; set RC7=USART RC
000CE4 9C94           01243         bcf     TRISC, 6        ; clear RC6=USART TX
                      01244 
000CE6 0E0F           01245         movlw   15              ; baud rate 9600
000CE8 6EAF           01246         movwf   SPBRG
000CEA 6AAC           01247         clrf    TXSTA
                      01248         
000CEC 6AAB           01249         clrf    RCSTA
000CEE 8EAB           01250         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000CF0 88AB           01251         bsf     RCSTA,CREN      ; continous receive
                      01252         
000CF2 8AAC           01253         bsf     TXSTA, TXEN     ; transmit enabled
000CF4 0012           01254         return
                      01255 
000CF6                01256 DataUSART
000CF6 0E02           01257         movlw   0x02
000CF8 EC?? F???      01258         call    USART_WAIT
000CFC 0E0D           01259         movlw   0x0D
000CFE EC?? F???      01260         call    USART_WAIT
                      01261         
000D02 6A15           01262         clrf    counter         ; used to cycle through past 9 eeprom logs
000D04 6A16           01263         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01264         
000D06                01265 TRANSFER_LOGS
000D06 0E15           01266         movlw   d'21'           ; logs are 21 bits apart
000D08 0215           01267         mulwf   counter         ; log number one starts at eeprom address 0
000D0A CFF3 F021      01268         movff   PRODL, L_EE     ; low address now points to count X 21
000D0E 6A16           01269         clrf    counter2
                      01270         
000D10                01271 TRANSFER_DATA   
                      01272         READEE  WREG, H_EE, L_EE
000D10 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D14 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D18 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D1A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D1C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D1E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D22 EC?? F???      01273         call    USART_WAIT      ; transfer bit
000D26 2A21           01274         incf    L_EE
                      01275         
000D28 2A16           01276         incf    counter2
000D2A 0E12           01277         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000D2C 6216           01278         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000D2E D???           01279         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01280         
000D30 EC?? F???      01281         call    USART_LINE      ; new line because a e s t h e t i c
                      01282         
000D34 2A15           01283         incf    counter
000D36 0E08           01284         movlw   d'8'            ; we save up to the last 9 permanent logs
000D38 6215           01285         cpfseq  counter
000D3A D???           01286         bra     TRANSFER_LOGS
                      01287         
000D3C EC?? F???      01288         call    LCD_L2
                      01289         Display PCComplete
  0000                    M         local   loop
000D40 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D42 6EF8               M         movwf   TBLPTRU
000D44 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D46 6EF7               M         movwf   TBLPTRH
000D48 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D4A 6EF6               M         movwf   TBLPTRL
000D4C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D4E 50F5               M         movf    TABLAT, W
000D50                    M loop
000D50 EC?? F???          M         call    WR_DATA         ; write to LCD
000D54 000B               M         tblrd+*                 ; next row in table
000D56 50F5               M         movf    TABLAT, W
000D58 E1??               M         bnz     loop
                      01290         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D5A 0E28               M         movlw   0x28
000D5C 6E1A               M         movwf   delayR
                          M 
000D5E                    M loop
000D5E EC?? F???          M         call    Delay50ms
000D62 2E1A               M         decfsz  delayR
000D64 EF?? F???          M         goto    loop
000D68 0012           01291         return                  ; done transmitting data
                      01292         
000D6A                01293 USART_WAIT
000D6A 6EAD           01294         movwf   TXREG
000D6C A2AC           01295         btfss   TXSTA, 1
000D6E EF?? F???      01296         goto    $-2
000D72 0012           01297         return
                      01298 
000D74                01299 USART_LINE
000D74 0E0A           01300         movlw   0x0A
000D76 EC?? F???      01301         call    USART_WAIT
000D7A 0E0D           01302         movlw   0x0D
000D7C EC?? F???      01303         call    USART_WAIT
000D80 0012           01304         return
                      01305         
000D82                01306 Delay5us
000D82 0E78           01307         movlw   d'120'
000D84 6E1B           01308         movwf   d5us
                      01309 
000D86                01310 loop5us
000D86 2E1B           01311         decfsz  d5us
000D88 EF?? F???      01312         goto    loop5us
000D8C 0000           01313         nop
000D8E 0012           01314         return
                      01315 
000D90                01316 Delay200us
000D90 0EA4           01317         movlw   0xA4
000D92 6E1C           01318         movwf   d200us
                      01319 
000D94                01320 loop200us
000D94 2E1C           01321         decfsz  d200us
000D96 EF?? F???      01322         goto    loop200us
000D9A 0000           01323         nop
000D9C 0012           01324         return
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01325 
000D9E                01326 Delay50ms
000D9E 0EF9           01327         movlw   0xF9
000DA0 6E1D           01328         movwf   d50ms
                      01329 
000DA2                01330 loop50ms
000DA2 EC?? F???      01331         call    Delay200us
000DA6 2E1D           01332         decfsz  d50ms
                      01333 
000DA8                01334 Cycles
000DA8 EF?? F???      01335         goto    loop50ms
000DAC EC?? F???      01336         call    Delay200us
000DB0 0012           01337         return
                      01338 
000DB2                01339 WriteEE_RTC
                      01340         WriteEE tens_digit, H_EE, L_EE
000DB2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DB6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DBA C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000DBE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DC0 D???               M         bra     $-2
                          M 
000DC2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DC4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DC6 84A6               M         bsf     EECON1, WREN        ; enable write
000DC8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DCA 98A1               M         bcf     PIR2, EEIF
                          M 
000DCC 0E55               M         movlw   0x55
000DCE 6EA7               M         movwf   EECON2              ; write 55h
000DD0 0EAA               M         movlw   0xaa
000DD2 6EA7               M         movwf   EECON2              ; write 0xaa
000DD4 82A6               M         bsf     EECON1, WR          ; begin write
000DD6 B2A6               M         btfsc   EECON1, WR
000DD8 D???               M         bra     $-2
                          M 
000DDA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DDC 94A6               M         bcf     EECON1, WREN        ; disable writes
000DDE 2A21           01341         incf    L_EE
                      01342         WriteEE ones_digit, H_EE, L_EE
000DE0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DE4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DE8 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000DEC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DEE D???               M         bra     $-2
                          M 
000DF0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DF2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DF4 84A6               M         bsf     EECON1, WREN        ; enable write
000DF6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DF8 98A1               M         bcf     PIR2, EEIF
                          M 
000DFA 0E55               M         movlw   0x55
000DFC 6EA7               M         movwf   EECON2              ; write 55h
000DFE 0EAA               M         movlw   0xaa
000E00 6EA7               M         movwf   EECON2              ; write 0xaa
000E02 82A6               M         bsf     EECON1, WR          ; begin write
000E04 B2A6               M         btfsc   EECON1, WR
000E06 D???               M         bra     $-2
                          M 
000E08 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E0A 94A6               M         bcf     EECON1, WREN        ; disable writes
000E0C 2A21           01343         incf    L_EE
000E0E 0012           01344         return
                      01345 
000E10                01346 ClearEEPROM_21
000E10 6A20           01347         clrf    H_EE
000E12 6A21           01348         clrf    L_EE
000E14 681F           01349         setf    clear_EE
000E16 6A15           01350         clrf    counter
000E18                01351 ClearNext
                      01352         WriteEE         clear_EE, H_EE, L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E18 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E1C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E20 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000E24 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E26 D???               M         bra     $-2
                          M 
000E28 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E2A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E2C 84A6               M         bsf     EECON1, WREN        ; enable write
000E2E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E30 98A1               M         bcf     PIR2, EEIF
                          M 
000E32 0E55               M         movlw   0x55
000E34 6EA7               M         movwf   EECON2              ; write 55h
000E36 0EAA               M         movlw   0xaa
000E38 6EA7               M         movwf   EECON2              ; write 0xaa
000E3A 82A6               M         bsf     EECON1, WR          ; begin write
000E3C B2A6               M         btfsc   EECON1, WR
000E3E D???               M         bra     $-2
                          M 
000E40 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E42 94A6               M         bcf     EECON1, WREN        ; disable writes
000E44 2A15           01353         incf            counter
000E46 2A21           01354         incf            L_EE
000E48 0E15           01355         movlw           d'21'
000E4A 6215           01356         cpfseq          counter
000E4C EF?? F???      01357         goto            ClearNext
000E50 6A20           01358         clrf            H_EE
000E52 6A21           01359         clrf            L_EE
000E54 0012           01360         return
                      01361         
000E56                01362 READ_KEY
000E56 A281           01363         btfss   PORTB, 1        ; check for keypad interrupt
000E58 EF?? F???      01364         goto    READ_KEY
000E5C 3881           01365         swapf   PORTB, W
000E5E 0B0F           01366         andlw   0x0F
000E60 6E10           01367         movwf   KEY
000E62 B281           01368         btfsc   PORTB, 1
000E64 EF?? F???      01369         goto    $-2
000E68 0012           01370         return
                      01371 
000E6A                01372 READ_KEY_TIME
000E6A EC?? F???      01373         call        LCD_L2          ; go to second line to print RTC    
                      01374         ; display the time
                      01375         ; call      DISPLAY_RTC 
                      01376 
000E6E A281           01377         btfss       PORTB, 1    ; keypad interrupt
000E70 EF?? F???      01378         goto        READ_KEY_TIME
000E74 3881           01379         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E76 0B0F           01380         andlw       0x0F        ; only want W3:0
000E78 6E10           01381         movwf       KEY         ; write this value to the KEY
000E7A B281           01382         btfsc       PORTB, 1    ; wait for release
000E7C EF?? F???      01383         goto        $-2         ; go back one instruction
000E80 0012           01384         return
                      01385 
000E82                01386 DisplayExeTime
                      01387         READEE  REG_EE, H_EE, L_EE
000E82 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E86 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E8A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E8C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E8E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E90 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E94 0EFF           01388         movlw   0xFF
000E96 6222           01389         cpfseq  REG_EE
000E98 EF?? F???      01390         goto    NoSkipDispExeTime
                      01391         Display NoData
  0000                    M         local   loop
000E9C 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E9E 6EF8               M         movwf   TBLPTRU
000EA0 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EA2 6EF7               M         movwf   TBLPTRH
000EA4 0E??               M         movlw   low NoData      ; Move Table<7:0>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EA6 6EF6               M         movwf   TBLPTRL
000EA8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EAA 50F5               M         movf    TABLAT, W
000EAC                    M loop
000EAC EC?? F???          M         call    WR_DATA         ; write to LCD
000EB0 000B               M         tblrd+*                 ; next row in table
000EB2 50F5               M         movf    TABLAT, W
000EB4 E1??               M         bnz     loop
000EB6 0EFF           01392         movlw   0xFF
000EB8 6022           01393         cpfslt  REG_EE
000EBA EF?? F???      01394         goto    SkipDispExeTime
000EBE 0012           01395         return
                      01396 
000EC0                01397 NoSkipDispExeTime
                      01398         READEE  WREG, H_EE, L_EE
000EC0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EC4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EC8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000ECA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ECC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ECE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000ED2 EC?? F???      01399         call    WR_DATA
000ED6 2A21           01400         incf    L_EE
                      01401         
                      01402         READEE  WREG, H_EE, L_EE
000ED8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EDC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EE0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EE2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EE4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EE6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EEA EC?? F???      01403         call    WR_DATA
000EEE 2A21           01404         incf    L_EE
                      01405         
                      01406         READEE  WREG, H_EE, L_EE
000EF0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EF4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EF8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EFA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EFC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EFE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F02 EC?? F???      01407         call    WR_DATA
000F06 2A21           01408         incf    L_EE
                      01409 
000F08 0E73           01410         movlw   0x73            ; Write 's'
000F0A EC?? F???      01411         call    WR_DATA
000F0E EC?? F???      01412         call    LCD_L2
000F12                01413 SkipDispExeTime
000F12 0012           01414         return
                      01415 
000F14                01416 DispOpSort
                      01417         READEE  REG_EE, H_EE, L_EE
000F14 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F18 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F1C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F1E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F20 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F22 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F26 0EFF           01418         movlw   0xff
000F28 6222           01419         cpfseq  REG_EE
000F2A EF?? F???      01420         goto    NoSkipDispOpSort
                      01421         Display NoData
  0000                    M         local   loop
000F2E 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F30 6EF8               M         movwf   TBLPTRU
000F32 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F34 6EF7               M         movwf   TBLPTRH
000F36 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F38 6EF6               M         movwf   TBLPTRL
000F3A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F3C 50F5               M         movf    TABLAT, W
000F3E                    M loop
000F3E EC?? F???          M         call    WR_DATA         ; write to LCD
000F42 000B               M         tblrd+*                 ; next row in table
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F44 50F5               M         movf    TABLAT, W
000F46 E1??               M         bnz     loop
000F48 0EFF           01422         movlw   0xff
000F4A 6022           01423         cpfslt  REG_EE
000F4C EF?? F???      01424         goto    SkipDispOpSort
                      01425 
000F50                01426 NoSkipDispOpSort
000F50 0E61           01427         movlw   "a"
000F52 EC?? F???      01428         call    WR_DATA
                      01429         
                      01430         READEE  REG_EE, H_EE, L_EE
000F56 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F5A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F5E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F60 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F62 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F64 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F68 C022 FFE8      01431         movff   REG_EE, WREG
000F6C EC?? F???      01432         call    WR_DATA
000F70 2A21           01433         incf    L_EE
                      01434         
000F72 0E20           01435         movlw   " "
000F74 EC?? F???      01436         call    WR_DATA
                      01437         
000F78 0E62           01438         movlw   "b"
000F7A EC?? F???      01439         call    WR_DATA
                      01440         
                      01441         READEE  REG_EE, H_EE, L_EE
000F7E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F82 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F86 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F88 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F8A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F8C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F90 C022 FFE8      01442         movff   REG_EE, WREG
000F94 EC?? F???      01443         call    WR_DATA
000F98 2A21           01444         incf    L_EE
                      01445         
000F9A 0E20           01446         movlw   " "
000F9C EC?? F???      01447         call    WR_DATA
                      01448         
000FA0 0E63           01449         movlw   "c"
000FA2 EC?? F???      01450         call    WR_DATA
                      01451         
                      01452         READEE  REG_EE, H_EE, L_EE
000FA6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FAA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FAE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FB0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FB2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FB4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FB8 C022 FFE8      01453         movff   REG_EE, WREG
000FBC EC?? F???      01454         call    WR_DATA
000FC0 2A21           01455         incf    L_EE
                      01456         
000FC2 0E20           01457         movlw   " "
000FC4 EC?? F???      01458         call    WR_DATA
                      01459         
000FC8 0E64           01460         movlw   "d"
000FCA EC?? F???      01461         call    WR_DATA
                      01462         
                      01463         READEE  REG_EE, H_EE, L_EE
000FCE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FD2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FD6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FD8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FDA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FDC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FE0 C022 FFE8      01464         movff   REG_EE, WREG
000FE4 EC?? F???      01465         call    WR_DATA
000FE8 2A21           01466         incf    L_EE
                      01467 
000FEA                01468 SkipDispOpSort
000FEA 0012           01469         return
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01470         
000FEC                01471 DispOpRTC
                      01472         READEE  REG_EE, H_EE, L_EE
000FEC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FF0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FF4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FF6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FF8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FFA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FFE 0EFF           01473         movlw   0xff
001000 6222           01474         cpfseq  REG_EE
001002 EF?? F???      01475         goto    NoSkipDispOpRTC
                      01476         Display NoData
  0000                    M         local   loop
001006 0E??               M         movlw   upper NoData    ; Move Table<20:16>
001008 6EF8               M         movwf   TBLPTRU
00100A 0E??               M         movlw   high NoData     ; Move Table<15:8>
00100C 6EF7               M         movwf   TBLPTRH
00100E 0E??               M         movlw   low NoData      ; Move Table<7:0>
001010 6EF6               M         movwf   TBLPTRL
001012 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
001014 50F5               M         movf    TABLAT, W
001016                    M loop
001016 EC?? F???          M         call    WR_DATA         ; write to LCD
00101A 000B               M         tblrd+*                 ; next row in table
00101C 50F5               M         movf    TABLAT, W
00101E E1??               M         bnz     loop
001020 0EFF           01477         movlw   0xff
001022 6022           01478         cpfslt  REG_EE
001024 EF?? F???      01479         goto    SkipDispOpRTC
                      01480 
001028                01481 NoSkipDispOpRTC
                      01482         READEE  REG_EE, H_EE, L_EE
001028 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00102C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001030 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001032 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001034 80A6               M         bsf     EECON1, RD          ; read EEPROM
001036 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00103A C022 FFE8      01483         movff   REG_EE, WREG
00103E EC?? F???      01484         call    WR_DATA
001042 2A21           01485         incf    L_EE
                      01486         
                      01487         READEE  REG_EE, H_EE, L_EE
001044 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001048 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00104C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00104E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001050 80A6               M         bsf     EECON1, RD          ; read EEPROM
001052 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001056 C022 FFE8      01488         movff   REG_EE, WREG
00105A EC?? F???      01489         call    WR_DATA
00105E 2A21           01490         incf    L_EE
                      01491 
001060 0E68           01492         movlw   "h"
001062 EC?? F???      01493         call    WR_DATA
                      01494         
001066 EC?? F???      01495         call    DispOpRTC_Helper
                      01496         
00106A 0E20           01497         movlw   " "
00106C EC?? F???      01498         call    WR_DATA
                      01499         
001070 EC?? F???      01500         call    DispOpRTC_Helper
001074 0E2F           01501         movlw   "/"
001076 EC?? F???      01502         call    WR_DATA
                      01503 
00107A EC?? F???      01504         call    DispOpRTC_Helper
00107E 0E2F           01505         movlw   "/"
001080 EC?? F???      01506         call    WR_DATA
001084 EC?? F???      01507         call    DispOpRTC_Helper
001088                01508 SkipDispOpRTC
001088 0012           01509                 return
00108A                01510 DispOpRTC_Helper
                      01511         READEE          REG_EE, H_EE, L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-19-2017  11:00:56         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00108A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00108E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001092 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001094 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001096 80A6               M         bsf     EECON1, RD          ; read EEPROM
001098 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00109C C022 FFE8      01512         movff           REG_EE, WREG
0010A0 EC?? F???      01513         call            WR_DATA
0010A4 2A21           01514         incf            L_EE
                      01515         READEE          REG_EE, H_EE, L_EE
0010A6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010AA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010AE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010B0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010B2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010B4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010B8 C022 FFE8      01516         movff           REG_EE, WREG
0010BC EC?? F???      01517         call            WR_DATA
0010C0 2A21           01518         incf            L_EE
0010C2 0012           01519         return
Warning[205]: Found directive in column 1. (end)
                      01520 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

