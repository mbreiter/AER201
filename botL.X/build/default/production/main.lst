MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009 ;*******************************************************************************
                      00010 ; configuration settings
                      00011 ;*******************************************************************************
                      00012 
Warning[205]: Found directive in column 1. (list)
                      00013 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00014 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00015 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00016 #include <i2c.inc>
  0000                00001     extern      I2C_Master_INIT, I2C_Master_WAIT,I2C_Master_START,I2C_Master_RSTART,I2C_Master_STOP,I2C_Master_WRITE, I2C_Master_REA
                            D,I2C_Master_ACK, I2C_ACKDT, CHECK_ACK, CHECK_NACK
                      00002 
                      00003 
                      00017 #include <rtc.inc>
                      00001 ;External labels
Warning[205]: Found directive in column 1. (extern)
  0000                00002 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00003 
                      00004 ;; RTC MACROS
                      00005 ;;
                      00006 ;; Sebastian K, commit 110219-2205
                      00007 ;; forked off PIC16 sample code
                      00008 ;; for PIC18F4620
                      00009 ;; relocatable labels, declared in another file
                      00010 
Warning[205]: Found directive in column 1. (variable)
  0000                00011 variable _loopknt=0
                      00012 
                      00013 rtc_resetAll macro
                      00014 ;input: none
                      00015 ;output: none
                      00016 ;desc: Resets all the time keeping registers on the RTC to zero
                      00017 
                      00018 clrf databyte
                      00019 movlw 6
                      00020 movwf regaddress ;start at 6 and go down, and set all to 0
                      00021 
                      00022 del_loop#v(_loopknt)
                      00023 call write_rtc
                      00024 decfsz regaddress
                      00025 bra del_loop#v(_loopknt)
                      00026 call write_rtc ;sets registers 0-6 to zero
                      00027 _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00028 endm
                      00029 
                      00030 
                      00031 
                      00032 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00033 rtc_set macro addliteral,datliteral
                      00034 ;input: addliteral: value of address
                      00035 ; datliteral: value of data
                      00036 ;output: none
                      00037 ;desc: loads the data in datliteral into the
                      00038 ; address specified by addliteral in the RTC
                      00039 
                      00040 movlw addliteral
                      00041 movwf regaddress
                      00042 movlw datliteral
                      00043 movwf databyte
                      00044 call write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00045 endm
                      00046 
                      00047 rtc_read macro addliteral
                      00048 ;input: addliteral
                      00049 ;output: datachar, tens_digit, ones_digit
                      00050 ;desc: From the selected register in the RTC, read the data
                      00051 ; and load it into 0x75. 0x75 is also converted into
                      00052 ; ASCII characters and the tens digit is placed into
                      00053 ; 0x77 and the ones digit is placed in 0x78
                      00054 movlw addliteral
                      00055 movwf regaddress
                      00056 call read_rtc
                      00057 movf datachar,w
                      00058 call rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00059 endm
                      00018 
                      00019     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00020     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00021     CONFIG WDT = OFF, WDTPS = 32768
                      00022     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00023     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00024     CONFIG DEBUG = OFF
                      00025     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00026     CONFIG CPB = OFF, CPD = OFF
                      00027     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00028     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00029     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00030     CONFIG EBTRB = OFF
                      00031 
                      00032 ;*******************************************************************************
                      00033 ; variable and constants
                      00034 ;*******************************************************************************
                      00035     CODE
                      00036             
                      00037     cblock 0x00
  00000000            00038         key1
  00000001            00039         key2
  00000002            00040         key3
  00000003            00041         keyA
  00000004            00042         key4
  00000005            00043         key5
  00000006            00044         key6
  00000007            00045         keyB
  00000008            00046         key7
  00000009            00047         key8
  0000000A            00048         key9
  0000000B            00049         keyC
  0000000C            00050         keyS
  0000000D            00051         key0
  0000000E            00052         keyH
  0000000F            00053         keyD
  00000010            00054         KEY
  00000011            00055         temp_KEY
  00000012            00056         KEY_ISR
  00000013            00057         temp_S  
  00000014            00058         temp_W
  00000015            00059         counter
  00000016            00060         counter2
  00000017            00061         temp
  00000018            00062         OP_sec
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000019            00063         OP_INT
  0000001A            00064         temp_ISR
  0000001B            00065         delayR
  0000001C            00066         d5us
  0000001D            00067         d200us
  0000001E            00068         d50ms
  0000001F            00069         inExecution
  00000020            00070         clear_EE
  00000021            00071         H_EE    
  00000022            00072         L_EE    
  00000023            00073         REG_EE  
  00000024            00074         tempH_EE
  00000025            00075         tempL_EE
  00000026            00076         tempL_EEC
  00000027            00077         MAX_EE   
  00000028            00078         READ_EE
  00000029            00079         last_log
  0000002A            00080         startHt
  0000002B            00081         startHo
  0000002C            00082         startMt
  0000002D            00083         startMo
  0000002E            00084         endHt
  0000002F            00085         endHo
  00000030            00086         endMt
  00000031            00087         endMo
  00000032            00088         LED_Count
  00000033            00089         SkipCount
  00000034            00090         exe_sec
  00000035            00091         exe_int
                      00092 ;       tens_digit
                      00093 ;       ones_digit
  00000036            00094         timer_H
  00000037            00095         timer_L
  00000038            00096         convert_buffer
  00000039            00097         transferring
  0000003A            00098         PC_PCL
  0000003B            00099         PC_PCLATH
  0000003C            00100         PC_PCLATU
  0000003D            00101         TIMCNT
  0000003E            00102         CPCNT
  0000003F            00103         TDATA
                      00104     endc
                      00105 
                      00106 ;*******************************************************************************
                      00107 ; tables
                      00108 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00109     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00110     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00111     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00112     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00113     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00114     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00115     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00116     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00117     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00005A 6F53 7472 6E69 00118     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00119     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00120     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00121     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00122     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00123     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00124     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00125     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00126     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00127     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00128     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00129         
                      00130 ;*******************************************************************************
                      00131 ; macros
                      00132 ;*******************************************************************************
                      00133 
                      00134 TransferTable macro table
                      00135         local loop
                      00136         
                      00137         movlw   upper table
                      00138         movwf   TBLPTRU
                      00139         movlw   high table
                      00140         movwf   TBLPTRH
                      00141         movlw   low table
                      00142         movwf   TBLPTRL
                      00143         tblrd*
                      00144         movf    TABLAT, W
                      00145 loop
                      00146         call    USART_WAIT
                      00147         tblrd+*
                      00148         movf    TABLAT, W
                      00149         bnz     loop
                      00150         endm
                      00151         
                      00152 ConfigLCD   macro
                      00153           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00154           call      WR_INS
                      00155 
                      00156           movlw     b'00001100'    ; display on/off
                      00157           call      WR_INS
                      00158          ; movlw     B'00000110'    ; Entry mode
                      00159          ; call      WR_INS
                      00160           movlw     b'00000001'    ; Clear ram
                      00161           call      WR_INS
                      00162           endm
                      00163         
                      00164 movMSB  macro   port
                      00165         andlw   0xF0
                      00166         iorwf   port, f
                      00167         iorlw   0x0F
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00168         andwf   port, f
                      00169         endm
                      00170 
                      00171 Delay50N macro count, N
                      00172         local   loop
                      00173         movlw   N
                      00174         movwf   count
                      00175 
                      00176 loop
                      00177         call    Delay50ms
                      00178         decfsz  count
                      00179         goto    loop
                      00180         endm
                      00181 
                      00182 Display macro   Message
                      00183         local   loop
                      00184         movlw   upper Message   ; Move Table<20:16>
                      00185         movwf   TBLPTRU
                      00186         movlw   high Message    ; Move Table<15:8>
                      00187         movwf   TBLPTRH
                      00188         movlw   low Message     ; Move Table<7:0>
                      00189         movwf   TBLPTRL
                      00190         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00191         movf    TABLAT, W
                      00192 loop
                      00193         call    WR_DATA         ; write to LCD
                      00194         tblrd+*                 ; next row in table
                      00195         movf    TABLAT, W
                      00196         bnz     loop
                      00197         endm
                      00198 
                      00199 DisplayLog  macro   addrH, addrL
                      00200             local   Again, Finish
                      00201             clrf    SkipCount
                      00202             clrf    MAX_EE
                      00203 
                      00204             ; Check if there is No Data first
                      00205             READEE      REG_EE, addrH, addrL
                      00206             movlw       0xFF
                      00207             cpfseq      REG_EE
                      00208             goto        Again
                      00209             Display     NoData
                      00210             goto        Finish
                      00211 Again
                      00212             ; Put a space every 3 Writes
                      00213             movlw       d'3'
                      00214             cpfslt      SkipCount
                      00215             cpfslt      MAX_EE
                      00216             goto        Finish
                      00217 
                      00218             ; read EEPROM
                      00219             READEE      REG_EE, addrH, addrL
                      00220             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00221             goto        Finish
                      00222 Finish
                      00223             endm
                      00224             
                      00225 ;TransferLog macro   addrH, addrL
                      00226         
                      00227 
                      00228 incf_BCD    macro   BCD
                      00229         local ones, endBCD
                      00230         movff   BCD, temp
                      00231         
                      00232         ;process ones digit
                      00233         movlw   0x0F
                      00234         andwf   temp
                      00235         movlw   d'9'
                      00236         
                      00237         ;skip if ones digit is 9
                      00238         cpfseq  temp
                      00239         goto    ones
                      00240         
                      00241         movlw   b'00010000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242         addwf   BCD
                      00243         movlw   0x0F
                      00244         andwf   BCD
                      00245         movlw   0xA0
                      00246         cpfslt  BCD
                      00247         
                      00248         clrf    BCD
                      00249         goto    endBCD
                      00250         
                      00251 ones
                      00252         incf    BCD
                      00253         goto    endBCD
                      00254 endBCD
                      00255         nop
                      00256         endm
                      00257 
                      00258 WriteRTC    macro
                      00259         movf    tens_digit, W
                      00260         call    WR_DATA
                      00261         movf    ones_digit, W
                      00262         call    WR_DATA
                      00263         endm
                      00264 
                      00265 WriteEE macro   word, addH, addL
                      00266         movff   addH, EEADRH    ; High address
                      00267         movff   addL, EEADRH    ; Low address
                      00268         movff   word, EEDATA    ; set word
                      00269 
                      00270         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00271         bra     $-2
                      00272 
                      00273         bcf     EECON1, EEPGD   ; Point to data memory
                      00274         bcf     EECON1, CFGS    ; Access EEPROM
                      00275         bsf     EECON1, WREN    ; enable write
                      00276         bcf     EECON1, GIE         ; disable interrupts during write
                      00277         bcf     PIR2, EEIF
                      00278 
                      00279         movlw   0x55
                      00280         movwf   EECON2      ; write 55h
                      00281         movlw   0xAA
                      00282         movwf   EECON2      ; write 0xAA
                      00283         bsf     EECON1, WR          ; begin write
                      00284         btfsc   EECON1, WR
                      00285         bra     $-2
                      00286 
                      00287         bsf     EECON1, GIE         ; enable interrupts after write
                      00288         bcf     EECON1, WREN        ; disable writes
                      00289         endm
                      00290 
                      00291 READEE  macro   file, addH, addL
                      00292         movff   addH, EEADRH        ; read to high
                      00293         movff   addL, EEADR         ; read to low
                      00294         bcf     EECON1, EEPGD       ; point to data memory
                      00295         bcf     EECON1, CFGS        ; access to EEPROM
                      00296         bsf     EECON1, RD          ; read EEPROM
                      00297         movff   EEDATA, file        ; put data into file
                      00298         endm
                      00299 
                      00300 ChangeMode  macro   ModeId, NextMode
                      00301         local Next, Exit
                      00302 
                      00303         movlw   ModeId              ; poll for mode
                      00304         cpfseq  KEY                 ; check this against key press
                      00305         goto    Exit
                      00306 
                      00307 Next
                      00308         clrf    LATA                ; clear pins before proceeding
                      00309         clrf    LATB
                      00310         clrf    LATC
                      00311         clrf    LATD
                      00312         goto    NextMode
                      00313 
                      00314 Exit
                      00315         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00316         endm
                      00317 
                      00318 saveContext macro
                      00319     movff   STATUS, temp_S          ; save STATUS first
                      00320     movwf   temp_W                  ; save W
                      00321     endm
                      00322 
                      00323 restoreContext macro
                      00324     swapf   temp_W, W               ; restore W first
                      00325     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00326     endm
                      00327 ;*******************************************************************************
                      00328 ; reset vector and isrs
                      00329 ;*******************************************************************************
                      00330         ORG     0x000               ; processor reset vector
000000 EF?? F???      00331         goto    INIT                ; go to beginning of program
                      00332 
                      00333         ORG     0x008
000008 EF?? F???      00334         goto    ISR_HIGH
                      00335 
                      00336         ORG     0x018
000018 EF?? F???      00337         goto    ISR_LOW
                      00338 
00001C                00339 ISR_HIGH
                      00340         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00341 
                      00342         ;reset timer
000022 0E36           00343         movlw   timer_H
000024 6ED7           00344         movwf   TMR0H
000026 0E2E           00345         movlw   timer_L - 9
000028 6ED6           00346         movwf   TMR0L
                      00347         
                      00348         ;timer interrupt
00002A A4F2           00349         btfss   INTCON, TMR0IF
00002C EF?? F???      00350         goto    END_ISR_HIGH
                      00351         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0F
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0E0F               M         movlw   0x0F
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xA0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00352         movlw   d'0'
00005C 6219           00353         cpfseq  OP_INT
00005E EF?? F???      00354         goto    END_ISR_HIGH
                      00355         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0F
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0E0F               M         movlw   0x0F
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xA0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00356 
00008C                00357 END_ISR_HIGH
00008C 94F2           00358         bcf     INTCON, TMR0IF
                      00359         restoreContext
00008E 3814               M     swapf   temp_W, W               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00360         retfie
                      00361 
000096                00362 ISR_LOW
                      00363         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00364         ; KEYPAD INTERRUPT
00009C A0F0           00365         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00366         goto            END_ISR_LOW
                      00367 
                      00368         ;Check operation status
                      00369 ;       movlw           0xFF                                    ; If in operation, skip return
                      00370 ;       cpfseq          InExecution
                      00371 ;       goto            END_ISR_LOW
                      00372 
                      00373         ; Process KEY
0000A2 3881           00374         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00375         andlw           0x0F
0000A6 6E12           00376         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00377 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00378 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00379         goto            END_ISR_LOW
                      00380 
                      00381         ; Reset program counter
0000AC 6AFF           00382         clrf            TOSU
0000AE 6AFE           00383         clrf            TOSH
0000B0 6AFD           00384         clrf            TOSL
                      00385 
0000B2                00386 END_ISR_LOW
0000B2 90F0           00387         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00388         restoreContext
0000B4 3814               M     swapf   temp_W, W               ; restore W first
0000B6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00389         
0000BA 6E14           00390         movwf   temp_W              ; save current W
0000BC CFD8 F013      00391         movff   STATUS, temp_S      ; save status
                      00392 
                      00393         ; ISR_Low routines
0000C0 C013 FFD8      00394         movff   temp_S, STATUS      ; retreive status
0000C4 3A14           00395         swapf   temp_W, f
0000C6 3814           00396         swapf   temp_W, w           ; restore W
0000C8 0010           00397         retfie
                      00398 
                      00399 ;*******************************************************************************
                      00400 ; main
                      00401 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CA                00402 INIT
                      00403         ; i/o
0000CA 0E00           00404         movlw   b'00000000'
0000CC 6E92           00405         movwf   TRISA
0000CE 0EFF           00406         movlw   b'11111111'
0000D0 6E93           00407         movwf   TRISB               ; keypad
0000D2 0EBF           00408         movlw   b'10111111'
0000D4 6E94           00409         movwf   TRISC
                      00410         
0000D6 0E00           00411         movlw   b'00000000'
0000D8 6E95           00412         movwf   TRISD
0000DA 0E07           00413         movlw   b'00000111'
0000DC 6E96           00414         movwf   TRISE
                      00415 
                      00416         ; analog/digital pins
0000DE 0E0F           00417         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00418         movwf   ADCON1
                      00419 
                      00420         ; clear ports
0000E2 6A89           00421         clrf    LATA
0000E4 6A8A           00422         clrf    LATB
0000E6 9694           00423         bcf     TRISC, SCL
0000E8 9894           00424         bcf     TRISC, SDA
0000EA 6A8B           00425         clrf    LATC
0000EC 6A8C           00426         clrf    LATD
0000EE 6A8D           00427         clrf    LATE
                      00428         
                      00429         ; initializations
                      00430         
0000F0 EC?? F???      00431         call    InitLCD
                      00432         ConfigLCD
0000F4 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
0000F6 EC?? F???          M           call      WR_INS
                          M 
0000FA 0E0C               M           movlw     b'00001100'    ; display on/off
0000FC EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000100 0E01               M           movlw     b'00000001'    ; Clear ram
000102 EC?? F???          M           call      WR_INS
                      00433         
000106 EC?? F???      00434         call    RTC_INIT
00010A EC?? F???      00435         call    Delay50ms
                      00436         
00010E EC?? F???      00437         call    INIT_USART
                      00438 
000112 0E08           00439         movlw   b'00001000'
000114 6ED5           00440         movwf   T0CON
                      00441 
                      00442         ; interrupts
000116 6AD0           00443         clrf    RCON
000118 6AF2           00444         clrf    INTCON
00011A 6AF1           00445         clrf    INTCON2
00011C 6AF0           00446         clrf    INTCON3
00011E 8ED0           00447         bsf     RCON, IPEN          ; priority mode
000120 8EF2           00448         bsf     INTCON, GIEH        ; permit global interrupts
000122 8CF2           00449         bsf     INTCON, GIEL
000124 8AF1           00450         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000126 8AF2           00451         bsf     INTCON, TMR0IE
000128 84F1           00452         bsf     INTCON2, TMR0IP     ; set to high priority
00012A 86F0           00453         bsf     INTCON3, INT1IE
00012C 9CF0           00454         bcf     INTCON3, INT1IP
                      00455 
00012E 6A21           00456         clrf    H_EE
000130 6A22           00457         clrf    L_EE
000132 6A??           00458         clrf    tens_digit
000134 6A??           00459         clrf    ones_digit
                      00460         
000136 0EF2           00461         movlw     b'11110010'    ; Set required keypad inputs
000138 6E93           00462         movwf     TRISB
                      00463         
                      00464         Display Welcome
  0000                    M         local   loop
00013A 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00013C 6EF8               M         movwf   TBLPTRU
00013E 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000140 6EF7               M         movwf   TBLPTRH
000142 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000144 6EF6               M         movwf   TBLPTRL
000146 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000148 50F5               M         movf    TABLAT, W
00014A                    M loop
00014A EC?? F???          M         call    WR_DATA         ; write to LCD
00014E 000B               M         tblrd+*                 ; next row in table
000150 50F5               M         movf    TABLAT, W
000152 E1??               M         bnz     loop
000154 EC?? F???      00465         call LCD_L2
                      00466         Display Team
  0000                    M         local   loop
000158 0E??               M         movlw   upper Team      ; Move Table<20:16>
00015A 6EF8               M         movwf   TBLPTRU
00015C 0E??               M         movlw   high Team       ; Move Table<15:8>
00015E 6EF7               M         movwf   TBLPTRH
000160 0E??               M         movlw   low Team        ; Move Table<7:0>
000162 6EF6               M         movwf   TBLPTRL
000164 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000166 50F5               M         movf    TABLAT, W
000168                    M loop
000168 EC?? F???          M         call    WR_DATA         ; write to LCD
00016C 000B               M         tblrd+*                 ; next row in table
00016E 50F5               M         movf    TABLAT, W
000170 E1??               M         bnz     loop
                      00467         Delay50N delayR, 0x3C
  0000                    M         local   loop
000172 0E3C               M         movlw   0x3C
000174 6E1B               M         movwf   delayR
                          M 
000176                    M loop
000176 EC?? F???          M         call    Delay50ms
00017A 2E1B               M         decfsz  delayR
00017C EF?? F???          M         goto    loop
                      00468 
                      00469 ;*******************************************************************************
                      00470 ; standby mode
                      00471 ;*******************************************************************************
000180                00472 STANDBY
000180 EC?? F???      00473         call    ClrLCD
                      00474         Display StandBy
  0000                    M         local   loop
000184 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000186 6EF8               M         movwf   TBLPTRU
000188 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00018A 6EF7               M         movwf   TBLPTRH
00018C 0E??               M         movlw   low StandBy     ; Move Table<7:0>
00018E 6EF6               M         movwf   TBLPTRL
000190 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000192 50F5               M         movf    TABLAT, W
000194                    M loop
000194 EC?? F???          M         call    WR_DATA         ; write to LCD
000198 000B               M         tblrd+*                 ; next row in table
00019A 50F5               M         movf    TABLAT, W
00019C E1??               M         bnz     loop
                      00475 
00019E                00476 HOLD_STANDBY
00019E EC?? F???      00477         call    READ_KEY_TIME
                      00478         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0001A2 0E03               M         movlw   keyA                ; poll for mode
0001A4 6210               M         cpfseq  KEY                 ; check this against key press
0001A6 EF?? F???          M         goto    Exit
                          M 
0001AA                    M Next
0001AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0001AC 6A8A               M         clrf    LATB
0001AE 6A8B               M         clrf    LATC
0001B0 6A8C               M         clrf    LATD
0001B2 EF?? F???          M         goto    EXECUTION
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0001B6                    M Exit
0001B6 0000               M         nop
                      00479         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
0001B8 0E07               M         movlw   keyB                ; poll for mode
0001BA 6210               M         cpfseq  KEY                 ; check this against key press
0001BC EF?? F???          M         goto    Exit
                          M 
0001C0                    M Next
0001C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0001C2 6A8A               M         clrf    LATB
0001C4 6A8B               M         clrf    LATC
0001C6 6A8C               M         clrf    LATD
0001C8 EF?? F???          M         goto    LOG
                          M 
0001CC                    M Exit
0001CC 0000               M         nop
                      00480         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0001CE 0E0B               M         movlw   keyC                ; poll for mode
0001D0 6210               M         cpfseq  KEY                 ; check this against key press
0001D2 EF?? F???          M         goto    Exit
                          M 
0001D6                    M Next
0001D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0001D8 6A8A               M         clrf    LATB
0001DA 6A8B               M         clrf    LATC
0001DC 6A8C               M         clrf    LATD
0001DE EF?? F???          M         goto    PERM_LOG
                          M 
0001E2                    M Exit
0001E2 0000               M         nop
                      00481         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0001E4 0E0F               M         movlw   keyD                ; poll for mode
0001E6 6210               M         cpfseq  KEY                 ; check this against key press
0001E8 EF?? F???          M         goto    Exit
                          M 
0001EC                    M Next
0001EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0001EE 6A8A               M         clrf    LATB
0001F0 6A8B               M         clrf    LATC
0001F2 6A8C               M         clrf    LATD
0001F4 EF?? F???          M         goto    PC_MODE
                          M 
0001F8                    M Exit
0001F8 0000               M         nop
0001FA D???           00482         bra     HOLD_STANDBY
                      00483 
                      00484 ;*******************************************************************************
                      00485 ; execution mode
                      00486 ;*******************************************************************************
                      00487 
0001FC                00488 EXECUTION
                      00489         ; save the starting time
0001FC EC?? F???      00490         call    START_TIME
                      00491         
                      00492         ; display
000200 681F           00493         setf        inExecution
000202 EC?? F???      00494         call        ClrLCD
                      00495         Display     Exe1
  0000                    M         local   loop
000206 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000208 6EF8               M         movwf   TBLPTRU
00020A 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00020C 6EF7               M         movwf   TBLPTRH
00020E 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000210 6EF6               M         movwf   TBLPTRL
000212 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000214 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000216                    M loop
000216 EC?? F???          M         call    WR_DATA         ; write to LCD
00021A 000B               M         tblrd+*                 ; next row in table
00021C 50F5               M         movf    TABLAT, W
00021E E1??               M         bnz     loop
000220 EC?? F???      00496         call        LCD_L2
                      00497         Display     Exe2
  0000                    M         local   loop
000224 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
000226 6EF8               M         movwf   TBLPTRU
000228 0E??               M         movlw   high Exe2       ; Move Table<15:8>
00022A 6EF7               M         movwf   TBLPTRH
00022C 0E??               M         movlw   low Exe2        ; Move Table<7:0>
00022E 6EF6               M         movwf   TBLPTRL
000230 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000232 50F5               M         movf    TABLAT, W
000234                    M loop
000234 EC?? F???          M         call    WR_DATA         ; write to LCD
000238 000B               M         tblrd+*                 ; next row in table
00023A 50F5               M         movf    TABLAT, W
00023C E1??               M         bnz     loop
                      00498         
                      00499         ; start timer
00023E 0E36           00500         movlw       timer_H                             ; 1
000240 6ED7           00501         movwf       TMR0H
000242 0E37           00502         movlw       timer_L                             ; 1
000244 6ED6           00503         movwf       TMR0L                               ; 1
000246 8ED5           00504         bsf         T0CON, TMR0ON                       ; Turn on timer
000248 EC?? F???      00505         call        ClearEEPROM_21
                      00506         
                      00507         ; initialize variables
00024C 6A18           00508         clrf        OP_sec
00024E 6A19           00509         clrf        OP_INT
                      00510 
000250                00511 HOLD_EXE
000250 EC?? F???      00512         call        READ_KEY
                      00513         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000254 0E0C               M         movlw   keyS                ; poll for mode
000256 6210               M         cpfseq  KEY                 ; check this against key press
000258 EF?? F???          M         goto    Exit
                          M 
00025C                    M Next
00025C 6A89               M         clrf    LATA                ; clear pins before proceeding
00025E 6A8A               M         clrf    LATB
000260 6A8B               M         clrf    LATC
000262 6A8C               M         clrf    LATD
000264 EF?? F???          M         goto    EXIT_EXE
                          M 
000268                    M Exit
000268 0000               M         nop
00026A D???           00514         bra         HOLD_EXE
                      00515 
00026C                00516 EXIT_EXE
                      00517         WriteEE     OP_sec, H_EE, L_EE
00026C C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000270 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000274 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000278 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00027A D???               M         bra     $-2
                          M 
00027C 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00027E 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000280 84A6               M         bsf     EECON1, WREN    ; enable write
000282 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000284 98A1               M         bcf     PIR2, EEIF
                          M 
000286 0E55               M         movlw   0x55
000288 6EA7               M         movwf   EECON2      ; write 55h
00028A 0EAA               M         movlw   0xAA
00028C 6EA7               M         movwf   EECON2      ; write 0xAA
00028E 82A6               M         bsf     EECON1, WR          ; begin write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000290 B2A6               M         btfsc   EECON1, WR
000292 D???               M         bra     $-2
                          M 
000294 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000296 94A6               M         bcf     EECON1, WREN        ; disable writes
000298 2A22           00518         incf        L_EE
                      00519         WriteEE     OP_INT, H_EE, L_EE
00029A C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00029E C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0002A2 C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
0002A6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0002A8 D???               M         bra     $-2
                          M 
0002AA 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0002AC 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0002AE 84A6               M         bsf     EECON1, WREN    ; enable write
0002B0 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0002B2 98A1               M         bcf     PIR2, EEIF
                          M 
0002B4 0E55               M         movlw   0x55
0002B6 6EA7               M         movwf   EECON2      ; write 55h
0002B8 0EAA               M         movlw   0xAA
0002BA 6EA7               M         movwf   EECON2      ; write 0xAA
0002BC 82A6               M         bsf     EECON1, WR          ; begin write
0002BE B2A6               M         btfsc   EECON1, WR
0002C0 D???               M         bra     $-2
                          M 
0002C2 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002C4 94A6               M         bcf     EECON1, WREN        ; disable writes
0002C6 2A22           00520         incf        L_EE
                      00521         
                      00522 
                      00523         
                      00524         ; Clear InOperation flag to stop '*' interrupts
0002C8 6A1F           00525         clrf        inExecution
0002CA EF?? F???      00526         goto        SaveData
                      00527 
0002CE                00528 SaveData
0002CE EC?? F???      00529         call        ClrLCD
                      00530         Display     SAVE
  0000                    M         local   loop
0002D2 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0002D4 6EF8               M         movwf   TBLPTRU
0002D6 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0002D8 6EF7               M         movwf   TBLPTRH
0002DA 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0002DC 6EF6               M         movwf   TBLPTRL
0002DE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002E0 50F5               M         movf    TABLAT, W
0002E2                    M loop
0002E2 EC?? F???          M         call    WR_DATA         ; write to LCD
0002E6 000B               M         tblrd+*                 ; next row in table
0002E8 50F5               M         movf    TABLAT, W
0002EA E1??               M         bnz     loop
0002EC 0E00           00531         movlw       d'0'
0002EE 6E21           00532         movwf       H_EE
0002F0 C029 F022      00533         movff       last_log, L_EE
0002F4 0E00           00534         movlw       d'0'
0002F6 6E24           00535         movwf       tempH_EE
0002F8 C026 F025      00536         movff       tempL_EEC, tempL_EE
0002FC 6A16           00537         clrf        counter2
0002FE 6A15           00538         clrf        counter
                      00539 
000300                00540 ShiftLoop
000300 2A15           00541         incf            counter
                      00542         READEE          REG_EE, H_EE, L_EE
000302 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000306 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00030A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00030C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00030E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000310 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000314 0E15           00543         movlw           d'21'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000316 2622           00544         addwf           L_EE
                      00545         WriteEE         REG_EE, H_EE, L_EE
000318 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00031C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000320 C023 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
000324 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000326 D???               M         bra     $-2
                          M 
000328 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00032A 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00032C 84A6               M         bsf     EECON1, WREN    ; enable write
00032E 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000330 98A1               M         bcf     PIR2, EEIF
                          M 
000332 0E55               M         movlw   0x55
000334 6EA7               M         movwf   EECON2      ; write 55h
000336 0EAA               M         movlw   0xAA
000338 6EA7               M         movwf   EECON2      ; write 0xAA
00033A 82A6               M         bsf     EECON1, WR          ; begin write
00033C B2A6               M         btfsc   EECON1, WR
00033E D???               M         bra     $-2
                          M 
000340 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000342 94A6               M         bcf     EECON1, WREN        ; disable writes
000344 0E14           00546         movlw           d'20'
000346 5E22           00547         subwf           L_EE
000348 0E15           00548         movlw           d'21'
00034A 6215           00549         cpfseq          counter
00034C EF?? F???      00550         goto            ShiftLoop
                      00551         
                      00552         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
000350 0E2A           00553         movlw           d'42'
000352 5E22           00554         subwf           L_EE
000354 C026 F025      00555         movff           tempL_EEC, tempL_EE
000358 6A15           00556         clrf            counter
00035A 2A16           00557         incf            counter2
00035C 0E09           00558         movlw           d'9'
00035E 6216           00559         cpfseq          counter2                                        ; Skip if 9 shifts were made
000360 EF?? F???      00560         goto            ShiftLoop
                      00561         
                      00562         ; Finish Saving Data
                      00563         ; Stop Timer and goto OpLog
000364 9ED5           00564         bcf             T0CON, TMR0ON
000366 0E09           00565         movlw           d'9'
000368 6E22           00566         movwf           L_EE
                      00567         WriteEE         OP_sec, H_EE, L_EE
00036A C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00036E C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000372 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000376 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000378 D???               M         bra     $-2
                          M 
00037A 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00037C 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00037E 84A6               M         bsf     EECON1, WREN    ; enable write
000380 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000382 98A1               M         bcf     PIR2, EEIF
                          M 
000384 0E55               M         movlw   0x55
000386 6EA7               M         movwf   EECON2      ; write 55h
000388 0EAA               M         movlw   0xAA
00038A 6EA7               M         movwf   EECON2      ; write 0xAA
00038C 82A6               M         bsf     EECON1, WR          ; begin write
00038E B2A6               M         btfsc   EECON1, WR
000390 D???               M         bra     $-2
                          M 
000392 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000394 94A6               M         bcf     EECON1, WREN        ; disable writes
000396 2A22           00568         incf            L_EE
                      00569         WriteEE         OP_INT, H_EE, L_EE
000398 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00039C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003A0 C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
0003A4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0003A6 D???               M         bra     $-2
                          M 
0003A8 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0003AA 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0003AC 84A6               M         bsf     EECON1, WREN    ; enable write
0003AE 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0003B0 98A1               M         bcf     PIR2, EEIF
                          M 
0003B2 0E55               M         movlw   0x55
0003B4 6EA7               M         movwf   EECON2      ; write 55h
0003B6 0EAA               M         movlw   0xAA
0003B8 6EA7               M         movwf   EECON2      ; write 0xAA
0003BA 82A6               M         bsf     EECON1, WR          ; begin write
0003BC B2A6               M         btfsc   EECON1, WR
0003BE D???               M         bra     $-2
                          M 
0003C0 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0003C2 94A6               M         bcf     EECON1, WREN        ; disable writes
0003C4 2A22           00570         incf            L_EE
0003C6 EF?? F???      00571         goto            LOG
                      00572 
                      00573 ;*******************************************************************************
                      00574 ; sorting statistics log mode
                      00575 ;*******************************************************************************
                      00576         
0003CA                00577 LOG
0003CA EC?? F???      00578         call    ClrLCD
                      00579         Display Log1
  0000                    M         local   loop
0003CE 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0003D0 6EF8               M         movwf   TBLPTRU
0003D2 0E??               M         movlw   high Log1       ; Move Table<15:8>
0003D4 6EF7               M         movwf   TBLPTRH
0003D6 0E??               M         movlw   low Log1        ; Move Table<7:0>
0003D8 6EF6               M         movwf   TBLPTRL
0003DA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003DC 50F5               M         movf    TABLAT, W
0003DE                    M loop
0003DE EC?? F???          M         call    WR_DATA         ; write to LCD
0003E2 000B               M         tblrd+*                 ; next row in table
0003E4 50F5               M         movf    TABLAT, W
0003E6 E1??               M         bnz     loop
                      00580 
                      00581         ; display most recent run data
0003E8 0E09           00582         movlw   d'9'
0003EA 6E22           00583         movwf   L_EE
                      00584         READEE  OP_sec, H_EE, L_EE
0003EC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0003F0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0003F4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0003F6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0003F8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0003FA CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0003FE 2A22           00585         incf    L_EE
                      00586         READEE  OP_INT, H_EE, L_EE
000400 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000404 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000408 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00040A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00040C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00040E CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000412 2A22           00587         incf    L_EE
000414 EC?? F???      00588         call    DisplayTime
                      00589 
000418 EC?? F???      00590         call    LCD_L2
00041C 6A22           00591         clrf    L_EE
00041E EC?? F???      00592         call    DispOpRTC
                      00593 
000422                00594 HOLD_LOG
000422 EC?? F???      00595         call    READ_KEY
                      00596         ChangeMode  keyB, LOG_INFO
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
000426 0E07               M         movlw   keyB                ; poll for mode
000428 6210               M         cpfseq  KEY                 ; check this against key press
00042A EF?? F???          M         goto    Exit
                          M 
00042E                    M Next
00042E 6A89               M         clrf    LATA                ; clear pins before proceeding
000430 6A8A               M         clrf    LATB
000432 6A8B               M         clrf    LATC
000434 6A8C               M         clrf    LATD
000436 EF?? F???          M         goto    LOG_INFO
                          M 
00043A                    M Exit
00043A 0000               M         nop
                      00597         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00043C 0E0D               M         movlw   key0                ; poll for mode
00043E 6210               M         cpfseq  KEY                 ; check this against key press
000440 EF?? F???          M         goto    Exit
                          M 
000444                    M Next
000444 6A89               M         clrf    LATA                ; clear pins before proceeding
000446 6A8A               M         clrf    LATB
000448 6A8B               M         clrf    LATC
00044A 6A8C               M         clrf    LATD
00044C EF?? F???          M         goto    STANDBY
                          M 
000450                    M Exit
000450 0000               M         nop
000452 D???           00598         bra     HOLD_LOG
                      00599 
000454                00600 LOG_INFO
000454 EC?? F???      00601         call    ClrLCD
                      00602         Display LogInfo1
  0000                    M         local   loop
000458 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
00045A 6EF8               M         movwf   TBLPTRU
00045C 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
00045E 6EF7               M         movwf   TBLPTRH
000460 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000462 6EF6               M         movwf   TBLPTRL
000464 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000466 50F5               M         movf    TABLAT, W
000468                    M loop
000468 EC?? F???          M         call    WR_DATA         ; write to LCD
00046C 000B               M         tblrd+*                 ; next row in table
00046E 50F5               M         movf    TABLAT, W
000470 E1??               M         bnz     loop
000472 EC?? F???      00603         call    LCD_L2
                      00604         Display LogInfo2
  0000                    M         local   loop
000476 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000478 6EF8               M         movwf   TBLPTRU
00047A 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00047C 6EF7               M         movwf   TBLPTRH
00047E 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000480 6EF6               M         movwf   TBLPTRL
000482 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000484 50F5               M         movf    TABLAT, W
000486                    M loop
000486 EC?? F???          M         call    WR_DATA         ; write to LCD
00048A 000B               M         tblrd+*                 ; next row in table
00048C 50F5               M         movf    TABLAT, W
00048E E1??               M         bnz     loop
000490                00605 HOLD_LOG_INFO
000490 EC?? F???      00606         call    READ_KEY
                      00607         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000494 0E0D               M         movlw   key0                ; poll for mode
000496 6210               M         cpfseq  KEY                 ; check this against key press
000498 EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00049C                    M Next
00049C 6A89               M         clrf    LATA                ; clear pins before proceeding
00049E 6A8A               M         clrf    LATB
0004A0 6A8B               M         clrf    LATC
0004A2 6A8C               M         clrf    LATD
0004A4 EF?? F???          M         goto    LOG
                          M 
0004A8                    M Exit
0004A8 0000               M         nop
0004AA D???           00608         bra     HOLD_LOG
                      00609         
                      00610 ;*******************************************************************************
                      00611 ; permanent logs
                      00612 ;*******************************************************************************
                      00613 
0004AC                00614 PERM_LOG
0004AC EC?? F???      00615         call    ClrLCD
                      00616         Display PermLog1
  0000                    M         local   loop
0004B0 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0004B2 6EF8               M         movwf   TBLPTRU
0004B4 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0004B6 6EF7               M         movwf   TBLPTRH
0004B8 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0004BA 6EF6               M         movwf   TBLPTRL
0004BC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004BE 50F5               M         movf    TABLAT, W
0004C0                    M loop
0004C0 EC?? F???          M         call    WR_DATA         ; write to LCD
0004C4 000B               M         tblrd+*                 ; next row in table
0004C6 50F5               M         movf    TABLAT, W
0004C8 E1??               M         bnz     loop
0004CA EC?? F???      00617         call    LCD_L2
                      00618         Display PermLog2
  0000                    M         local   loop
0004CE 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0004D0 6EF8               M         movwf   TBLPTRU
0004D2 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0004D4 6EF7               M         movwf   TBLPTRH
0004D6 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0004D8 6EF6               M         movwf   TBLPTRL
0004DA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004DC 50F5               M         movf    TABLAT, W
0004DE                    M loop
0004DE EC?? F???          M         call    WR_DATA         ; write to LCD
0004E2 000B               M         tblrd+*                 ; next row in table
0004E4 50F5               M         movf    TABLAT, W
0004E6 E1??               M         bnz     loop
                      00619         
0004E8                00620 HOLD_PERM_LOG
0004E8 EC?? F???      00621         call    READ_KEY
                      00622         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0004EC 0E0D               M         movlw   key0                ; poll for mode
0004EE 6210               M         cpfseq  KEY                 ; check this against key press
0004F0 EF?? F???          M         goto    Exit
                          M 
0004F4                    M Next
0004F4 6A89               M         clrf    LATA                ; clear pins before proceeding
0004F6 6A8A               M         clrf    LATB
0004F8 6A8B               M         clrf    LATC
0004FA 6A8C               M         clrf    LATD
0004FC EF?? F???          M         goto    STANDBY
                          M 
000500                    M Exit
000500 0000               M         nop
                      00623         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000502 0E00               M         movlw   key1                ; poll for mode
000504 6210               M         cpfseq  KEY                 ; check this against key press
000506 EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00050A                    M Next
00050A 6A89               M         clrf    LATA                ; clear pins before proceeding
00050C 6A8A               M         clrf    LATB
00050E 6A8B               M         clrf    LATC
000510 6A8C               M         clrf    LATD
000512 EF?? F???          M         goto    PLOG
                          M 
000516                    M Exit
000516 0000               M         nop
                      00624         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000518 0E01               M         movlw   key2                ; poll for mode
00051A 6210               M         cpfseq  KEY                 ; check this against key press
00051C EF?? F???          M         goto    Exit
                          M 
000520                    M Next
000520 6A89               M         clrf    LATA                ; clear pins before proceeding
000522 6A8A               M         clrf    LATB
000524 6A8B               M         clrf    LATC
000526 6A8C               M         clrf    LATD
000528 EF?? F???          M         goto    PLOG
                          M 
00052C                    M Exit
00052C 0000               M         nop
                      00625         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00052E 0E02               M         movlw   key3                ; poll for mode
000530 6210               M         cpfseq  KEY                 ; check this against key press
000532 EF?? F???          M         goto    Exit
                          M 
000536                    M Next
000536 6A89               M         clrf    LATA                ; clear pins before proceeding
000538 6A8A               M         clrf    LATB
00053A 6A8B               M         clrf    LATC
00053C 6A8C               M         clrf    LATD
00053E EF?? F???          M         goto    PLOG
                          M 
000542                    M Exit
000542 0000               M         nop
                      00626         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000544 0E04               M         movlw   key4                ; poll for mode
000546 6210               M         cpfseq  KEY                 ; check this against key press
000548 EF?? F???          M         goto    Exit
                          M 
00054C                    M Next
00054C 6A89               M         clrf    LATA                ; clear pins before proceeding
00054E 6A8A               M         clrf    LATB
000550 6A8B               M         clrf    LATC
000552 6A8C               M         clrf    LATD
000554 EF?? F???          M         goto    PLOG
                          M 
000558                    M Exit
000558 0000               M         nop
                      00627         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
00055A 0E05               M         movlw   key5                ; poll for mode
00055C 6210               M         cpfseq  KEY                 ; check this against key press
00055E EF?? F???          M         goto    Exit
                          M 
000562                    M Next
000562 6A89               M         clrf    LATA                ; clear pins before proceeding
000564 6A8A               M         clrf    LATB
000566 6A8B               M         clrf    LATC
000568 6A8C               M         clrf    LATD
00056A EF?? F???          M         goto    PLOG
                          M 
00056E                    M Exit
00056E 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00628         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000570 0E06               M         movlw   key6                ; poll for mode
000572 6210               M         cpfseq  KEY                 ; check this against key press
000574 EF?? F???          M         goto    Exit
                          M 
000578                    M Next
000578 6A89               M         clrf    LATA                ; clear pins before proceeding
00057A 6A8A               M         clrf    LATB
00057C 6A8B               M         clrf    LATC
00057E 6A8C               M         clrf    LATD
000580 EF?? F???          M         goto    PLOG
                          M 
000584                    M Exit
000584 0000               M         nop
                      00629         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000586 0E08               M         movlw   key7                ; poll for mode
000588 6210               M         cpfseq  KEY                 ; check this against key press
00058A EF?? F???          M         goto    Exit
                          M 
00058E                    M Next
00058E 6A89               M         clrf    LATA                ; clear pins before proceeding
000590 6A8A               M         clrf    LATB
000592 6A8B               M         clrf    LATC
000594 6A8C               M         clrf    LATD
000596 EF?? F???          M         goto    PLOG
                          M 
00059A                    M Exit
00059A 0000               M         nop
                      00630         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
00059C 0E09               M         movlw   key8                ; poll for mode
00059E 6210               M         cpfseq  KEY                 ; check this against key press
0005A0 EF?? F???          M         goto    Exit
                          M 
0005A4                    M Next
0005A4 6A89               M         clrf    LATA                ; clear pins before proceeding
0005A6 6A8A               M         clrf    LATB
0005A8 6A8B               M         clrf    LATC
0005AA 6A8C               M         clrf    LATD
0005AC EF?? F???          M         goto    PLOG
                          M 
0005B0                    M Exit
0005B0 0000               M         nop
                      00631         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0005B2 0E0A               M         movlw   key9                ; poll for mode
0005B4 6210               M         cpfseq  KEY                 ; check this against key press
0005B6 EF?? F???          M         goto    Exit
                          M 
0005BA                    M Next
0005BA 6A89               M         clrf    LATA                ; clear pins before proceeding
0005BC 6A8A               M         clrf    LATB
0005BE 6A8B               M         clrf    LATC
0005C0 6A8C               M         clrf    LATD
0005C2 EF?? F???          M         goto    PLOG
                          M 
0005C6                    M Exit
0005C6 0000               M         nop
0005C8 D???           00632         bra HOLD_PERM_LOG
                      00633         
0005CA                00634 PLOG
0005CA EC?? F???      00635         call    ClrLCD
                      00636         Display PermLog1
  0000                    M         local   loop
0005CE 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005D0 6EF8               M         movwf   TBLPTRU
0005D2 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005D4 6EF7               M         movwf   TBLPTRH
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005D6 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005D8 6EF6               M         movwf   TBLPTRL
0005DA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005DC 50F5               M         movf    TABLAT, W
0005DE                    M loop
0005DE EC?? F???          M         call    WR_DATA         ; write to LCD
0005E2 000B               M         tblrd+*                 ; next row in table
0005E4 50F5               M         movf    TABLAT, W
0005E6 E1??               M         bnz     loop
                      00637         
                      00638         ; find the key press value
0005E8 C010 FFE8      00639         movff   KEY, WREG
0005EC 2AE8           00640         incf    WREG        ; W = KEY+1
0005EE 6E17           00641         movwf   temp
                      00642         
0005F0 42E8           00643         rrncf   WREG        ; division by 4
0005F2 9EE8           00644         bcf     WREG, 7     ; clear last bit, overflow from rotate
0005F4 42E8           00645         rrncf   WREG        
0005F6 9EE8           00646         bcf     WREG, 7
0005F8 5E17           00647         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0005FA C017 FFE8      00648         movff   temp, WREG
0005FE C017 F011      00649         movff   temp, temp_KEY
000602 0D15           00650         mullw   d'21'       ; indexed as mutliples of 21
                      00651 
000604                00652 displayNum
000604 C011 FFE8      00653         movff   temp_KEY, WREG
000608 0F30           00654         addlw   0x30
00060A EC?? F???      00655         call    WR_DATA
00060E 0E3A           00656         movlw   ":"
000610 EC?? F???      00657         call    WR_DATA
000614 0E20           00658         movlw   " "
000616 EC?? F???      00659         call    WR_DATA
                      00660         
00061A CFF3 F022      00661         movff   PRODL, L_EE
00061E 0E00           00662         movlw   d'0'
000620 2622           00663         addwf   L_EE
                      00664         READEE  OP_sec, H_EE, L_EE
000622 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000626 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00062A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00062C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00062E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000630 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000634 2A22           00665         incf    L_EE
                      00666         READEE  OP_INT, H_EE, L_EE
000636 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00063A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00063E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000640 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000642 80A6               M         bsf     EECON1, RD          ; read EEPROM
000644 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000648 2A22           00667         incf    L_EE
00064A EC?? F???      00668         call    DisplayTime
00064E CFF3 F022      00669         movff   PRODL, L_EE
                      00670         
                      00671         ; reset eeprom to beginning
000652 EC?? F???      00672         call    LCD_L2
000656 CFF3 F022      00673         movff   PRODL, L_EE
00065A EC?? F???      00674         call    DispOpRTC
                      00675         
00065E                00676 HOLD_PLOG
00065E EC?? F???      00677         call    READ_KEY
                      00678         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000662 0E0D               M         movlw   key0                ; poll for mode
000664 6210               M         cpfseq  KEY                 ; check this against key press
000666 EF?? F???          M         goto    Exit
                          M 
00066A                    M Next
00066A 6A89               M         clrf    LATA                ; clear pins before proceeding
00066C 6A8A               M         clrf    LATB
00066E 6A8B               M         clrf    LATC
000670 6A8C               M         clrf    LATD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000672 EF?? F???          M         goto    PERM_LOG
                          M 
000676                    M Exit
000676 0000               M         nop
000678 D???           00679         bra HOLD_PERM_LOG
                      00680         
                      00681 ;*******************************************************************************
                      00682 ; pc interface
                      00683 ;*******************************************************************************
                      00684 
00067A                00685 PC_MODE
00067A EC?? F???      00686         call    ClrLCD
                      00687         Display PC1
  0000                    M         local   loop
00067E 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000680 6EF8               M         movwf   TBLPTRU
000682 0E??               M         movlw   high PC1        ; Move Table<15:8>
000684 6EF7               M         movwf   TBLPTRH
000686 0E??               M         movlw   low PC1         ; Move Table<7:0>
000688 6EF6               M         movwf   TBLPTRL
00068A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00068C 50F5               M         movf    TABLAT, W
00068E                    M loop
00068E EC?? F???          M         call    WR_DATA         ; write to LCD
000692 000B               M         tblrd+*                 ; next row in table
000694 50F5               M         movf    TABLAT, W
000696 E1??               M         bnz     loop
000698 EC?? F???      00688         call    LCD_L2
                      00689         Display PC2
  0000                    M         local   loop
00069C 0E??               M         movlw   upper PC2       ; Move Table<20:16>
00069E 6EF8               M         movwf   TBLPTRU
0006A0 0E??               M         movlw   high PC2        ; Move Table<15:8>
0006A2 6EF7               M         movwf   TBLPTRH
0006A4 0E??               M         movlw   low PC2         ; Move Table<7:0>
0006A6 6EF6               M         movwf   TBLPTRL
0006A8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006AA 50F5               M         movf    TABLAT, W
0006AC                    M loop
0006AC EC?? F???          M         call    WR_DATA         ; write to LCD
0006B0 000B               M         tblrd+*                 ; next row in table
0006B2 50F5               M         movf    TABLAT, W
0006B4 E1??               M         bnz     loop
0006B6 CFF9 F03A      00690         movff   PCL, PC_PCL
0006BA CFFA F03B      00691         movff   PCLATH, PC_PCLATH
0006BE CFFB F03C      00692         movff   PCLATU, PC_PCLATU
                      00693         
0006C2                00694 HOLD_PC
0006C2 EC?? F???      00695         call    READ_KEY
                      00696         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0006C6 0E0D               M         movlw   key0                ; poll for mode
0006C8 6210               M         cpfseq  KEY                 ; check this against key press
0006CA EF?? F???          M         goto    Exit
                          M 
0006CE                    M Next
0006CE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D0 6A8A               M         clrf    LATB
0006D2 6A8B               M         clrf    LATC
0006D4 6A8C               M         clrf    LATD
0006D6 EF?? F???          M         goto    STANDBY
                          M 
0006DA                    M Exit
0006DA 0000               M         nop
                      00697         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0006DC 0E0E               M         movlw   keyH                ; poll for mode
0006DE 6210               M         cpfseq  KEY                 ; check this against key press
0006E0 EF?? F???          M         goto    Exit
                          M 
0006E4                    M Next
0006E4 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006E6 6A8A               M         clrf    LATB
0006E8 6A8B               M         clrf    LATC
0006EA 6A8C               M         clrf    LATD
0006EC EF?? F???          M         goto    PC_TRANSFER
                          M 
0006F0                    M Exit
0006F0 0000               M         nop
0006F2 D???           00698         bra     HOLD_PC
                      00699 
0006F4                00700 PC_TRANSFER
0006F4 6839           00701         setf    transferring
0006F6 EC?? F???      00702         call    ClrLCD
                      00703         Display PCTransfer
  0000                    M         local   loop
0006FA 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0006FC 6EF8               M         movwf   TBLPTRU
0006FE 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000700 6EF7               M         movwf   TBLPTRH
000702 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000704 6EF6               M         movwf   TBLPTRL
000706 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000708 50F5               M         movf    TABLAT, W
00070A                    M loop
00070A EC?? F???          M         call    WR_DATA         ; write to LCD
00070E 000B               M         tblrd+*                 ; next row in table
000710 50F5               M         movf    TABLAT, W
000712 E1??               M         bnz     loop
                      00704         ;call   DataUSART
000714 6A39           00705         clrf    transferring
000716 D???           00706         bra     HOLD_PC
                      00707         
                      00708 ;*******************************************************************************
                      00709 ; subroutines
                      00710 ;*******************************************************************************
                      00711 
000718                00712 RTC_INIT
                      00713         ; set sda and scl to high-z
000718 9882           00714         bcf     PORTC, 4
00071A 9682           00715         bcf     PORTC, 3
00071C 8894           00716         bsf     TRISC, 4
00071E 8694           00717         bsf     TRISC, 3
                      00718 
000720 EC?? F???      00719         call    i2c_common_setup
                      00720         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000724 0012           00721 return
                      00722         
000726                00723 START_TIME
                      00724         rtc_read    0x02            ; hour
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000726 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000728 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00072A EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00072E 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000730 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000734 5000           00725         movf    tens_digit, WREG
000736 6E2A           00726         movwf   startHt
Warning[202]: Argument out of range.  Least significant bits used.
000738 5000           00727         movf    ones_digit, WREG
00073A 6E2B           00728         movwf   startHo
                      00729         
                      00730         rtc_read    0x01            ; minute
                          M ;input: addliteral
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
00073C 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
00073E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000740 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000744 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000746 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
00074A 5000           00731         movf    tens_digit, WREG
00074C 6E2C           00732         movwf   startMt
Warning[202]: Argument out of range.  Least significant bits used.
00074E 5000           00733         movf    ones_digit, WREG
000750 6E2D           00734         movwf   startMo
Warning[203]: Found opcode in column 1. (return)
000752 0012           00735 return
                      00736         
000754                00737 END_TIME
                      00738         rtc_read    0x02            ; hour
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000754 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000756 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000758 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00075C 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00075E EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000762 5000           00739         movf    tens_digit, WREG
000764 6E2E           00740         movwf   endHt
Warning[202]: Argument out of range.  Least significant bits used.
000766 5000           00741         movf    ones_digit, WREG
000768 6E2F           00742         movwf   endHo
                      00743         
                      00744         rtc_read    0x01            ; minute
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
00076A 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
00076C 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00076E EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000772 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000774 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000778 5000           00745         movf    tens_digit, WREG
00077A 6E30           00746         movwf   endMt
Warning[202]: Argument out of range.  Least significant bits used.
00077C 5000           00747         movf    ones_digit, WREG
00077E 6E31           00748         movwf   endMo
Warning[203]: Found opcode in column 1. (return)
000780 0012           00749 return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00750         
                      00751         
000782                00752 DISPLAY_RTC
                      00753         
                      00754         ; display data in this format hh/minmin/yy yy/mm/dd
                      00755         rtc_read    0x02            ; 0x02 from DS1307 - hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000782 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000784 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000786 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00078A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00078C EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000790 5000           00756         movf    tens_digit,WREG
000792 EC?? F???      00757         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000796 5000           00758         movf    ones_digit,WREG
000798 EC?? F???      00759         call    WR_DATA
00079C 0E68           00760         movlw   "h"
00079E EC?? F???      00761         call    WR_DATA
                      00762         
                      00763         rtc_read    0x01            ; 0x01 from DS1307 - minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007A2 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
0007A4 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007A6 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007AA 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007AC EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0007B0 5000           00764         movf    tens_digit,WREG
0007B2 EC?? F???      00765         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0007B6 5000           00766         movf    ones_digit,WREG
0007B8 EC?? F???      00767         call    WR_DATA
0007BC 0E20           00768         movlw   " "
0007BE EC?? F???      00769         call    WR_DATA
                      00770         
                      00771         rtc_read    0x06            ; 0x06 from DS1307 - years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007C2 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
0007C4 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007C6 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007CA 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007CC EC?? F???          M call rtc_convert
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[202]: Argument out of range.  Least significant bits used.
0007D0 5000           00772         movf    tens_digit,WREG
0007D2 EC?? F???      00773         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0007D6 5000           00774         movf    ones_digit,WREG
0007D8 EC?? F???      00775         call    WR_DATA
0007DC 0E2F           00776         movlw   "/"
0007DE EC?? F???      00777         call    WR_DATA
                      00778         
                      00779         rtc_read    0x05            ; 0x06 from DS1307 - months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007E2 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
0007E4 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007E6 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007EA 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007EC EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0007F0 5000           00780         movf    tens_digit,WREG
0007F2 EC?? F???      00781         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0007F6 5000           00782         movf    ones_digit,WREG
0007F8 EC?? F???      00783         call    WR_DATA
0007FC 0E2F           00784         movlw   "/"
0007FE EC?? F???      00785         call    WR_DATA
                      00786         
                      00787         rtc_read    0x04            ; 0x06 from DS1307 - days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000802 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
000804 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000806 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00080A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00080C EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000810 5000           00788         movf    tens_digit,WREG
000812 EC?? F???      00789         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000816 5000           00790         movf    ones_digit,WREG
000818 EC?? F???      00791         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
00081C 0012           00792 return
                      00793         
00081E                00794 SET_TIME
                      00795         rtc_resetAll
                          M ;input: none
                          M ;output: none
                          M ;desc: Resets all the time keeping registers on the RTC to zero
                          M 
Warning[203]: Found opcode in column 1. (clrf)
00081E 6A??               M clrf databyte
Warning[203]: Found opcode in column 1. (movlw)
000820 0E06               M movlw 6
Warning[203]: Found opcode in column 1. (movwf)
000822 6E??               M movwf regaddress ;start at 6 and go down, and set all to 0
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000824                    M del_loop0
Warning[203]: Found opcode in column 1. (call)
000824 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (decfsz)
000828 2E??               M decfsz regaddress
Warning[203]: Found opcode in column 1. (bra)
00082A D???               M bra del_loop0
Warning[203]: Found opcode in column 1. (call)
00082C EC?? F???          M call write_rtc ;sets registers 0-6 to zero
  00000001                M _loopknt set _loopknt+1
                      00796         
                      00797         rtc_set 0x00,   b'10000000'
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000830 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
000832 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000834 0E80               M movlw b'10000000'
Warning[203]: Found opcode in column 1. (movwf)
000836 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000838 EC?? F???          M call write_rtc
                      00798 
                      00799         rtc_set 0x06,   b'00010111'             ; Year 17
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00083C 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
00083E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000840 0E17               M movlw b'00010111'
Warning[203]: Found opcode in column 1. (movwf)
000842 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000844 EC?? F???          M call write_rtc
                      00800         rtc_set 0x05,   b'00000010'             ; Month 2
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000848 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
00084A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
00084C 0E02               M movlw b'00000010'
Warning[203]: Found opcode in column 1. (movwf)
00084E 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000850 EC?? F???          M call write_rtc
                      00801         rtc_set 0x04,   b'00010000'             ; Date 10
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000854 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
000856 6E??               M movwf regaddress
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (movlw)
000858 0E10               M movlw b'00010000'
Warning[203]: Found opcode in column 1. (movwf)
00085A 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
00085C EC?? F???          M call write_rtc
                      00802         rtc_set 0x02,   b'00011000'             ; Hours 18
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000860 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000862 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000864 0E18               M movlw b'00011000'
Warning[203]: Found opcode in column 1. (movwf)
000866 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000868 EC?? F???          M call write_rtc
                      00803         rtc_set 0x01,   b'00100111'             ; Minutes 27
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00086C 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
00086E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000870 0E27               M movlw b'00100111'
Warning[203]: Found opcode in column 1. (movwf)
000872 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000874 EC?? F???          M call write_rtc
                      00804         rtc_set 0x00,   b'00000000'             ; Seconds 0
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000878 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
00087A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
00087C 0E00               M movlw b'00000000'
Warning[203]: Found opcode in column 1. (movwf)
00087E 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000880 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (return)
000884 0012           00805 return
                      00806         
000886                00807 INIT_USART
000886 0E0F           00808         movlw   15      ; baud rate 9600
000888 6EAF           00809         movwf   SPBRG
00088A 6AAC           00810         clrf    TXSTA
                      00811         
00088C 6AAB           00812         clrf    RCSTA
00088E 8EAB           00813         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000890 88AB           00814         bsf     RCSTA,CREN      ; continous receive
                      00815         
000892 8AAC           00816         bsf     TXSTA, TXEN     ; transmit enabled
000894 0012           00817         return
                      00818 
                      00819 ;DataUSART
                      00820 ;       
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00821 ;       movlw   0x02
                      00822 ;       call    USART_WAIT
                      00823 ;       movlw   0x0D
                      00824 ;       call    USART_WAIT
                      00825 ;       
                      00826 ;       movlw   d'21'       ; start of permanent logs
                      00827 ;       movff   w, L_EE
                      00828 ;       TransferTable   PCLog1
                      00829 ;       
                      00830 ;       ; display time here
                      00831 ;;      rtc_read        0x02
                      00832 ;;              movf        tens_digit, W
                      00833 ;;        andlw       b'00000001'
                      00834 ;;        addlw       0x30
                      00835 ;;        call        TransmitWaitUSART
                      00836 ;;        movf        ones_digit, W
                      00837 ;;        call        TransmitWaitUSART
                      00838 ;;              movlw           ":"
                      00839 ;;              call            TransmitWaitUSART
                      00840 ;;              ; Dispay minutes
                      00841 ;;              rtc_read        0x01
                      00842 ;;              call        SendRTC_USART
                      00843 ;;              ; Dispay AM/PM
                      00844 ;;              rtc_read        0x02
                      00845 ;;        movlw       "P"
                      00846 ;;        btfss       tens_digit, 1
                      00847 ;;        movlw       "A"
                      00848 ;;        call        TransmitWaitUSART
                      00849 ;;        movlw       "M"
                      00850 ;;        call        TransmitWaitUSART
                      00851 ;;              movlw           " "
                      00852 ;;        call        TransmitWaitUSART
                      00853 ;;              ; Display month
                      00854 ;;              rtc_read        0x05
                      00855 ;;              call        SendRTC_USART
                      00856 ;;              movlw           0x2F            ; ASCII '/'
                      00857 ;;              call            TransmitWaitUSART
                      00858 ;;              ; Display day
                      00859 ;;              rtc_read        0x04
                      00860 ;;              call        SendRTC_USART
                      00861 ;;              movlw           0x2F            ; ASCII '/'
                      00862 ;;              call            TransmitWaitUSART
                      00863 ;;              ; Display year
                      00864 ;;              rtc_read        0x06
                      00865 ;;              call        SendRTC_USART
                      00866 ;       
                      00867 ;       call    USART_LINE
                      00868 ;       call    USART_LINE
                      00869 ;       
                      00870 ;       clrf    counter
                      00871 ;       incf    counter
                      00872 ;
                      00873 ;USART_TRANSFER
                      00874 ;       movlw   d'21'
                      00875 ;       mulwf   counter
                      00876 ;       movff   PRODL, L_EE
                      00877 ;       movlw   d'9'
                      00878 ;       addwf   L_EE
                      00879 ;       READEE  OP_sec, H_EE, L_EE
                      00880 ;       incf    L_EE
                      00881 ;       READEE  OP_INT, H_EE, L_EE
                      00882 ;       incf    L_EE
                      00883 ;       ; call  TransferTime
                      00884 ;       
                      00885 ;       ; send rtc
                      00886 ;       movlw   0x09
                      00887 ;       call    USART_WAIT
                      00888 ;       movff   PRODL, L_EE
                      00889 ;       ;call   TransferRTC
                      00890 ;       call    USART_LINE
                      00891 ;       
                      00892 ;       
                      00893 ;       
                      00894 ;       
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00895 ;USART_WAIT
                      00896 ;       movwf   TXREG
                      00897 ;       btfss   TXSTA,1
                      00898 ;       goto    $-2
                      00899 ;       return
                      00900 ;
                      00901 ;USART_LINE
                      00902 ;       movlw   0x0A
                      00903 ;       call    USART_WAIT
                      00904 ;       movlw   0x0D
                      00905 ;       call    USART_WAIT
                      00906 ;       return
                      00907         
                      00908         
000896                00909 Delay5us
000896 0E78           00910         movlw   d'120'
000898 6E1C           00911         movwf   d5us
                      00912 
00089A                00913 loop5us
00089A 2E1C           00914         decfsz  d5us
00089C EF?? F???      00915         goto    loop5us
0008A0 0000           00916         nop
0008A2 0012           00917         return
                      00918 
0008A4                00919 Delay200us
0008A4 0EA4           00920         movlw   0xA4
0008A6 6E1D           00921         movwf   d200us
                      00922 
0008A8                00923 loop200us
0008A8 2E1D           00924         decfsz  d200us
0008AA EF?? F???      00925         goto    loop200us
0008AE 0000           00926         nop
0008B0 0012           00927         return
                      00928 
0008B2                00929 Delay50ms
0008B2 0EF9           00930         movlw   0xF9
0008B4 6E1E           00931         movwf   d50ms
                      00932 
0008B6                00933 loop50ms
0008B6 EC?? F???      00934         call    Delay200us
0008BA 2E1E           00935         decfsz  d50ms
                      00936 
0008BC                00937 Cycles
0008BC EF?? F???      00938         goto    loop50ms
0008C0 EC?? F???      00939         call    Delay200us
0008C4 0012           00940         return
                      00941 
0008C6                00942 WriteEE_RTC
                      00943         WriteEE tens_digit, H_EE, L_EE
0008C6 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0008CA C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0008CE C??? FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
0008D2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008D4 D???               M         bra     $-2
                          M 
0008D6 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0008D8 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0008DA 84A6               M         bsf     EECON1, WREN    ; enable write
0008DC 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0008DE 98A1               M         bcf     PIR2, EEIF
                          M 
0008E0 0E55               M         movlw   0x55
0008E2 6EA7               M         movwf   EECON2      ; write 55h
0008E4 0EAA               M         movlw   0xAA
0008E6 6EA7               M         movwf   EECON2      ; write 0xAA
0008E8 82A6               M         bsf     EECON1, WR          ; begin write
0008EA B2A6               M         btfsc   EECON1, WR
0008EC D???               M         bra     $-2
                          M 
0008EE 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0008F0 94A6               M         bcf     EECON1, WREN        ; disable writes
0008F2 2A22           00944         incf    L_EE
                      00945         WriteEE ones_digit, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008F4 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0008F8 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0008FC C??? FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
000900 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000902 D???               M         bra     $-2
                          M 
000904 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000906 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000908 84A6               M         bsf     EECON1, WREN    ; enable write
00090A 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00090C 98A1               M         bcf     PIR2, EEIF
                          M 
00090E 0E55               M         movlw   0x55
000910 6EA7               M         movwf   EECON2      ; write 55h
000912 0EAA               M         movlw   0xAA
000914 6EA7               M         movwf   EECON2      ; write 0xAA
000916 82A6               M         bsf     EECON1, WR          ; begin write
000918 B2A6               M         btfsc   EECON1, WR
00091A D???               M         bra     $-2
                          M 
00091C 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00091E 94A6               M         bcf     EECON1, WREN        ; disable writes
000920 2A22           00946         incf    L_EE
000922 0012           00947         return
                      00948 
000924                00949 ClearEEPROM_21
000924 6A21           00950         clrf    H_EE
000926 6A22           00951         clrf    L_EE
000928 6820           00952         setf    clear_EE
00092A 6A15           00953         clrf    counter
00092C                00954 ClearNext
                      00955         WriteEE         clear_EE, H_EE, L_EE
00092C C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000930 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000934 C020 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
000938 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00093A D???               M         bra     $-2
                          M 
00093C 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00093E 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000940 84A6               M         bsf     EECON1, WREN    ; enable write
000942 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000944 98A1               M         bcf     PIR2, EEIF
                          M 
000946 0E55               M         movlw   0x55
000948 6EA7               M         movwf   EECON2      ; write 55h
00094A 0EAA               M         movlw   0xAA
00094C 6EA7               M         movwf   EECON2      ; write 0xAA
00094E 82A6               M         bsf     EECON1, WR          ; begin write
000950 B2A6               M         btfsc   EECON1, WR
000952 D???               M         bra     $-2
                          M 
000954 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000956 94A6               M         bcf     EECON1, WREN        ; disable writes
000958 2A15           00956         incf            counter
00095A 2A22           00957         incf            L_EE
00095C 0E15           00958         movlw           d'21'
00095E 6215           00959         cpfseq          counter
000960 EF?? F???      00960         goto            ClearNext
000964 6A21           00961         clrf            H_EE            ; reset EEPROMaddr
000966 6A22           00962         clrf            L_EE
000968 0012           00963         return
                      00964         
00096A                00965 READ_KEY
00096A A281           00966         btfss   PORTB, 1        ; check for keypad interrupt
00096C EF?? F???      00967         goto    READ_KEY
000970 3881           00968         swapf   PORTB, W
000972 0B0F           00969         andlw   0x0F
000974 6E10           00970         movwf   KEY
000976 B281           00971         btfsc   PORTB, 1
000978 EF?? F???      00972         goto    $-2
00097C 0012           00973         return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00974 
00097E                00975 READ_KEY_TIME
00097E EC?? F???      00976         call        LCD_L2          ; go to second line to print RTC
                      00977 
                      00978         ; display the time
000982 EC?? F???      00979         call    DISPLAY_RTC
                      00980 
000986 A281           00981         btfss       PORTB, 1    ; keypad interrupt
000988 EF?? F???      00982         goto        READ_KEY_TIME
00098C 3881           00983         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
00098E 0B0F           00984         andlw       0x0F        ; only want W3:0
000990 6E10           00985         movwf       KEY         ; write this value to the KEY
000992 B281           00986         btfsc       PORTB, 1    ; wait for release
000994 EF?? F???      00987         goto        $-2         ; go back one instruction
000998 0012           00988         return
                      00989 
00099A                00990 DisplayTime
                      00991         READEE  REG_EE, H_EE, L_EE
00099A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00099E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0009A2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009A4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009A6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009A8 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0009AC 0EFF           00992         movlw   0xFF
0009AE 6223           00993         cpfseq  REG_EE
0009B0 EF?? F???      00994         goto    NoSkipDispOpTime
                      00995         Display NoData
  0000                    M         local   loop
0009B4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0009B6 6EF8               M         movwf   TBLPTRU
0009B8 0E??               M         movlw   high NoData     ; Move Table<15:8>
0009BA 6EF7               M         movwf   TBLPTRH
0009BC 0E??               M         movlw   low NoData      ; Move Table<7:0>
0009BE 6EF6               M         movwf   TBLPTRL
0009C0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0009C2 50F5               M         movf    TABLAT, W
0009C4                    M loop
0009C4 EC?? F???          M         call    WR_DATA         ; write to LCD
0009C8 000B               M         tblrd+*                 ; next row in table
0009CA 50F5               M         movf    TABLAT, W
0009CC E1??               M         bnz     loop
0009CE 0EFF           00996         movlw   0xFF
0009D0 6023           00997         cpfslt  REG_EE
0009D2 EF?? F???      00998         goto    SkipDispOpTime
                      00999 
0009D6                01000 NoSkipDispOpTime
0009D6 3818           01001         swapf   OP_sec, W
0009D8 6E17           01002         movwf   temp
0009DA 0E0F           01003         movlw   0x0F
0009DC 1617           01004         andwf   temp
0009DE C017 FFE8      01005         movff   temp, WREG
0009E2 0F30           01006         addlw   0x30
0009E4 EC?? F???      01007         call    WR_DATA
                      01008 
0009E8 C018 F017      01009         movff   OP_sec, temp    ; 1's seconds
0009EC 0E0F           01010         movlw   0x0F
0009EE 1617           01011         andwf   temp            ; Temp = lower nibble of Op_Seconds
0009F0 C017 FFE8      01012         movff   temp, WREG      ; W = Temp
0009F4 0F30           01013         addlw   0x30            ; Convert to ASCII
0009F6 EC?? F???      01014         call    WR_DATA
                      01015 
0009FA 0E2E           01016         movlw   0x2E            ; Write '.'
0009FC EC?? F???      01017         call    WR_DATA
                      01018 
000A00 0E73           01019         movlw   0x73            ; Write 's'
000A02 EC?? F???      01020         call    WR_DATA
000A06 EC?? F???      01021         call    LCD_L2
000A0A                01022 SkipDispOpTime
000A0A 0012           01023         return
                      01024 
000A0C                01025 DispOpRTC
000A0C 0E0B           01026         movlw   d'11'
000A0E 2622           01027         addwf   L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01028 
                      01029         READEE  REG_EE, H_EE, L_EE
000A10 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A14 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A18 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A1A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A1C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A1E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A22 0EFF           01030         movlw   0xFF
000A24 6223           01031         cpfseq  REG_EE
000A26 EF?? F???      01032         goto    NoSkipDispOpRTC
                      01033         Display NoData
  0000                    M         local   loop
000A2A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000A2C 6EF8               M         movwf   TBLPTRU
000A2E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000A30 6EF7               M         movwf   TBLPTRH
000A32 0E??               M         movlw   low NoData      ; Move Table<7:0>
000A34 6EF6               M         movwf   TBLPTRL
000A36 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000A38 50F5               M         movf    TABLAT, W
000A3A                    M loop
000A3A EC?? F???          M         call    WR_DATA         ; write to LCD
000A3E 000B               M         tblrd+*                 ; next row in table
000A40 50F5               M         movf    TABLAT, W
000A42 E1??               M         bnz     loop
000A44 0EFF           01034         movlw   0xFF
000A46 6023           01035         cpfslt  REG_EE
000A48 EF?? F???      01036         goto    SkipDispOpRTC
                      01037 
000A4C                01038 NoSkipDispOpRTC
                      01039         READEE  REG_EE, H_EE, L_EE
000A4C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A50 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A54 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A56 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A58 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A5A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A5E C023 FFE8      01040         movff   REG_EE, WREG
000A62 0BF1           01041         andlw   b'11110001'
000A64 EC?? F???      01042         call    WR_DATA
000A68 2A22           01043         incf    L_EE
                      01044         READEE  REG_EE, H_EE, L_EE
000A6A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A6E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A72 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A74 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A76 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A78 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A7C C023 FFE8      01045         movff   REG_EE, WREG
000A80 EC?? F???      01046         call    WR_DATA
000A84 2A22           01047         incf    L_EE
                      01048 
000A86 0E3A           01049         movlw           ":"
000A88 EC?? F???      01050         call            WR_DATA
000A8C EC?? F???      01051         call DispOpRTC_Helper
000A90 0E20           01052         movlw           " "
000A92 EC?? F???      01053         call            WR_DATA
000A96 EC?? F???      01054         call DispOpRTC_Helper
000A9A 0E2F           01055         movlw           "/"
000A9C EC?? F???      01056         call            WR_DATA
000AA0 EC?? F???      01057         call DispOpRTC_Helper
000AA4 0E2F           01058         movlw           "/"
000AA6 EC?? F???      01059         call            WR_DATA
000AAA EC?? F???      01060         call DispOpRTC_Helper
000AAE                01061 SkipDispOpRTC
000AAE 0012           01062                 return
000AB0                01063 DispOpRTC_Helper
                      01064         READEE          REG_EE, H_EE, L_EE
000AB0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000AB4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000AB8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000ABA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ABC 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  18:28:09         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000ABE CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000AC2 C023 FFE8      01065         movff           REG_EE, WREG
000AC6 EC?? F???      01066         call            WR_DATA
000ACA 2A22           01067         incf            L_EE
                      01068         READEE          REG_EE, H_EE, L_EE
000ACC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000AD0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000AD4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000AD6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000AD8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ADA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000ADE C023 FFE8      01069         movff           REG_EE, WREG
000AE2 EC?? F???      01070         call            WR_DATA
000AE6 2A22           01071         incf            L_EE
000AE8 0012           01072         return
Warning[205]: Found directive in column 1. (end)
                      01073 end

Errors   :     0
Warnings :   137 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

