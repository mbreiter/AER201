MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movf    datachar,w
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   datachar, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   datachar, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   datachar, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   datachar, red+1
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   datachar, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   datachar, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   datachar, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   datachar, blue+1
                      00102     endm
                      00103     
                      00019 
                      00020     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00021     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00022     CONFIG WDT = OFF, WDTPS = 32768
                      00023     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00024     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00025     CONFIG DEBUG = OFF
                      00026     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00027     CONFIG CPB = OFF, CPD = OFF
                      00028     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00029     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00030     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00031     CONFIG EBTRB = OFF
                      00032 
                      00033 ;*******************************************************************************
                      00034 ; variable and constants
                      00035 ;*******************************************************************************
                      00036     CODE
                      00037             
                      00038     cblock 0x00
  00000000            00039         key1
  00000001            00040         key2
  00000002            00041         key3
  00000003            00042         keyA
  00000004            00043         key4
  00000005            00044         key5
  00000006            00045         key6
  00000007            00046         keyB
  00000008            00047         key7
  00000009            00048         key8
  0000000A            00049         key9
  0000000B            00050         keyC
  0000000C            00051         keyS
  0000000D            00052         key0
  0000000E            00053         keyH
  0000000F            00054         keyD
  00000010            00055         KEY
  00000011            00056         temp_KEY
  00000012            00057         KEY_ISR
  00000013            00058         temp_S  
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000014            00059         temp_W
  00000015            00060         counter
  00000016            00061         counter2
  00000017            00062         temp
  00000018            00063         OP_sec
  00000019            00064         OP_INT
  0000001A            00065         temp_ISR
  0000001B            00066         delayR
  0000001C            00067         d5us
  0000001D            00068         d200us
  0000001E            00069         d50ms
  0000001F            00070         inExecution
  00000020            00071         clear_EE
  00000021            00072         H_EE    
  00000022            00073         L_EE    
  00000023            00074         REG_EE  
  00000024            00075         tempH_EE
  00000025            00076         tempL_EE
  00000026            00077         tempL_EEC
  00000027            00078         MAX_EE   
  00000028            00079         READ_EE
  00000029            00080         last_log
  0000002A            00081         startHt
  0000002B            00082         startHo
  0000002C            00083         startMt
  0000002D            00084         startMo
  0000002E            00085         endHt
  0000002F            00086         endHo
  00000030            00087         endMt
  00000031            00088         endMo
  00000032            00089         LED_Count
  00000033            00090         SkipCount
  00000034            00091         exe_sec
  00000035            00092         exe_int
  00000036            00093         timer_H
  00000037            00094         timer_L
  00000038            00095         convert_buffer
  00000039            00096         transferring
  0000003A            00097         PC_PCL
  0000003B            00098         PC_PCLATH
  0000003C            00099         PC_PCLATU
  0000003D            00100         TIMCNT
  0000003E            00101         CPCNT
  0000003F            00102         TDATA
  00000040            00103         CLEAR:2
  00000042            00104         RED:2
  00000044            00105         GREEN:2
  00000046            00106         BLUE:2
  00000048            00107         temp_colour:2   
                      00108     endc
                      00109     
  0000                00110     extern tens_digit, ones_digit
                      00111     
                      00112 ;*******************************************************************************
                      00113 ; tables
                      00114 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00115     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00116     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00117     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00118     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00119     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00120     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000034 6142 6B63 3C20 00121     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00122     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00123     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00124     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00125     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00126     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00127     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00128     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00129     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00130     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00131     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00132     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00133     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00134     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00135         
                      00136 ;*******************************************************************************
                      00137 ; macros
                      00138 ;*******************************************************************************
                      00139 
                      00140 TransferTable macro table
                      00141         local loop
                      00142         
                      00143         movlw   upper table
                      00144         movwf   TBLPTRU
                      00145         movlw   high table
                      00146         movwf   TBLPTRH
                      00147         movlw   low table
                      00148         movwf   TBLPTRL
                      00149         tblrd*
                      00150         movff   TABLAT, WREG
                      00151 loop
                      00152         call    USART_WAIT
                      00153         tblrd+*
                      00154         movff   TABLAT, WREG
                      00155         bnz     loop
                      00156         endm
                      00157         
                      00158 ConfigLCD   macro
                      00159           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00160           call      WR_INS
                      00161 
                      00162           movlw     b'00001100'    ; display on/off
                      00163           call      WR_INS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164          ; movlw     B'00000110'    ; Entry mode
                      00165          ; call      WR_INS
                      00166           movlw     b'00000001'    ; Clear ram
                      00167           call      WR_INS
                      00168           endm
                      00169         
                      00170 movMSB  macro   port
                      00171         andlw   0xF0
                      00172         iorwf   port, f
                      00173         iorlw   0x0F
                      00174         andwf   port, f
                      00175         endm
                      00176 
                      00177 Delay50N macro count, N
                      00178         local   loop
                      00179         movlw   N
                      00180         movwf   count
                      00181 
                      00182 loop
                      00183         call    Delay50ms
                      00184         decfsz  count
                      00185         goto    loop
                      00186         endm
                      00187 
                      00188 Display macro   Message
                      00189         local   loop
                      00190         movlw   upper Message   ; Move Table<20:16>
                      00191         movwf   TBLPTRU
                      00192         movlw   high Message    ; Move Table<15:8>
                      00193         movwf   TBLPTRH
                      00194         movlw   low Message     ; Move Table<7:0>
                      00195         movwf   TBLPTRL
                      00196         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00197         movf    TABLAT, W
                      00198 loop
                      00199         call    WR_DATA         ; write to LCD
                      00200         tblrd+*                 ; next row in table
                      00201         movf    TABLAT, W
                      00202         bnz     loop
                      00203         endm
                      00204 
                      00205 DisplayLog  macro   addrH, addrL
                      00206             local   Again, Finish
                      00207             
                      00208             clrf    SkipCount
                      00209             clrf    MAX_EE
                      00210 
                      00211             ; Check if there is No Data first
                      00212             READEE      REG_EE, addrH, addrL
                      00213             movlw       0xFF
                      00214             cpfseq      REG_EE
                      00215             goto        Again
                      00216             Display     NoData
                      00217             goto        Finish
                      00218 Again
                      00219             ; Put a space every 3 Writes
                      00220             movlw       d'3'
                      00221             cpfslt      SkipCount
                      00222             cpfslt      MAX_EE
                      00223             goto        Finish
                      00224 
                      00225             ; read EEPROM
                      00226             READEE      REG_EE, addrH, addrL
                      00227             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00228             goto        Finish
                      00229 Finish
                      00230             endm
                      00231             
                      00232 ;TransferLog macro   addrH, addrL
                      00233         
                      00234 
                      00235 incf_BCD    macro   BCD
                      00236         local ones, endBCD
                      00237         movff   BCD, temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00238         
                      00239         ;process ones digit
                      00240         movlw   0x0f
                      00241         andwf   temp
                      00242         movlw   d'9'
                      00243         
                      00244         ;skip if ones digit is 9
                      00245         cpfseq  temp
                      00246         goto    ones
                      00247         
                      00248         movlw   b'00010000'
                      00249         addwf   BCD
                      00250         movlw   0xf0
                      00251         andwf   BCD
                      00252         movlw   0xa0
                      00253         cpfslt  BCD
                      00254         
                      00255         clrf    BCD
                      00256         goto    endBCD
                      00257         
                      00258 ones
                      00259         incf    BCD
                      00260         goto    endBCD
                      00261 endBCD
                      00262         nop
                      00263         endm
                      00264         
                      00265 SUB16   macro   x, y        ; does not modify x nor y
                      00266         local RESULTS
                      00267         movf    y+1, WREG   ; move high y into working register
                      00268         subwf   x+1, 0      ; do subtraction x - w => w
                      00269         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00270         goto    RESULTS     ; if it is, need to check lower bytes
                      00271         
                      00272         movf    y, WREG
                      00273         subwf   x, 0    
                      00274 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00275         endm
                      00276 
                      00277 WriteRTC    macro
                      00278         movff   tens_digit, WREG
                      00279         call    WR_DATA
                      00280         movff   ones_digit, WREG
                      00281         call    WR_DATA
                      00282         endm
                      00283 
                      00284 WriteEE macro   word, addH, addL
                      00285         movff   addH, EEADRH        ; High address
                      00286         movff   addL, EEADR         ; Low address
                      00287         movff   word, EEDATA        ; set word
                      00288 
                      00289         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00290         bra     $-2
                      00291 
                      00292         bcf     EECON1, EEPGD       ; Point to data memory
                      00293         bcf     EECON1, CFGS        ; Access EEPROM
                      00294         bsf     EECON1, WREN        ; enable write
                      00295         bcf     INTCON, GIE         ; disable interrupts during write
                      00296         bcf     PIR2, EEIF
                      00297 
                      00298         movlw   0x55
                      00299         movwf   EECON2              ; write 55h
                      00300         movlw   0xaa
                      00301         movwf   EECON2              ; write 0xaa
                      00302         bsf     EECON1, WR          ; begin write
                      00303         btfsc   EECON1, WR
                      00304         bra     $-2
                      00305 
                      00306         bsf     INTCON, GIE         ; enable interrupts after write
                      00307         bcf     EECON1, WREN        ; disable writes
                      00308         endm
                      00309 
                      00310 READEE  macro   file, addH, addL
                      00311         movff   addH, EEADRH        ; read to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312         movff   addL, EEADR         ; read to low
                      00313         bcf     EECON1, EEPGD       ; point to data memory
                      00314         bcf     EECON1, CFGS        ; access to EEPROM
                      00315         bsf     EECON1, RD          ; read EEPROM
                      00316         movff   EEDATA, file        ; put data into file
                      00317         endm
                      00318 
                      00319 ChangeMode  macro   ModeId, NextMode
                      00320         local Next, Exit
                      00321 
                      00322         movlw   ModeId              ; poll for mode
                      00323         cpfseq  KEY                 ; check this against key press
                      00324         goto    Exit
                      00325 
                      00326 Next
                      00327         clrf    LATA                ; clear pins before proceeding
                      00328         clrf    LATB
                      00329         clrf    LATC
                      00330         clrf    LATD
                      00331         goto    NextMode
                      00332 
                      00333 Exit
                      00334         nop
                      00335         endm
                      00336 
                      00337 saveContext macro
                      00338     movff   STATUS, temp_S          ; save STATUS first
                      00339     movwf   temp_W                  ; save W
                      00340     endm
                      00341 
                      00342 restoreContext macro
                      00343     swapf   temp_W, W               ; restore W first
                      00344     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00345     endm
                      00346 ;*******************************************************************************
                      00347 ; reset vector and isrs
                      00348 ;*******************************************************************************
                      00349         ORG     0x000               ; processor reset vector
000000 EF?? F???      00350         goto    INIT                ; go to beginning of program
                      00351 
                      00352         ORG     0x008
000008 EF?? F???      00353         goto    ISR_HIGH
                      00354 
                      00355         ORG     0x018
000018 EF?? F???      00356         goto    ISR_LOW
                      00357 
00001C                00358 ISR_HIGH
                      00359         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00360         
Warning[202]: Argument out of range.  Least significant bits used.
000022 3818           00361         swapf   OP_sec, WREG    ; 100's seconds
000024 6E17           00362         movwf   temp
000026 0E0F           00363         movlw   0x0F
000028 1617           00364         andwf   temp
00002A C017 FFE8      00365         movff   temp, WREG
00002E 0F30           00366         addlw   0x30
000030 EC?? F???      00367         call    WR_DATA
                      00368 
000034 C018 F017      00369         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00370         movlw   0x0F
00003A 1617           00371         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C017 FFE8      00372         movff   temp, WREG      ; W = Temp
000040 0F30           00373         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00374         call    WR_DATA
                      00375         
Warning[202]: Argument out of range.  Least significant bits used.
000046 3819           00376         swapf   OP_INT, WREG    ;1's seconds
000048 6E17           00377         movwf   temp
00004A 0E0F           00378         movlw   0x0f
00004C 1617           00379         andwf   temp
00004E C017 FFE8      00380         movff   temp, WREG
000052 0F30           00381         addlw   0x30
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000054 EC?? F???      00382         call    WR_DATA
                      00383 
000058 0E73           00384         movlw   0x73            ; Write 's'
00005A EC?? F???      00385         call    WR_DATA
00005E EC?? F???      00386         call    LCD_L2
                      00387 
                      00388         ;reset timer 
000062 0EC6           00389         movlw   0xc6
000064 6ED7           00390         movwf   TMR0H
000066 0E3E           00391         movlw   0x3e
000068 6ED6           00392         movwf   TMR0L
                      00393                 
                      00394         ;timer interrupt
00006A A4F2           00395         btfss   INTCON, TMR0IF
00006C EF?? F???      00396         goto    END_ISR_HIGH
                      00397         
                      00398         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1617               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6217               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 2619               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 1619               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 6019               M         cpfslt  OP_INT
                          M         
00008C 6A19               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A19               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00399         movlw   d'0'
00009C 6219           00400         cpfseq  OP_INT
00009E EF?? F???      00401         goto    END_ISR_HIGH
                      00402         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1617               M         andwf   temp
0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6217               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2618               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1618               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6018               M         cpfslt  OP_sec
                          M         
0000BE 6A18               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
                          M         
0000C4                    M ones
0000C4 2A18               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CA 0000               M         nop
                      00403 
0000CC                00404 END_ISR_HIGH
0000CC 94F2           00405         bcf     INTCON, TMR0IF
                      00406         restoreContext
0000CE 3814               M     swapf   temp_W, W               ; restore W first
0000D0 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00407         retfie
                      00408 
0000D6                00409 ISR_LOW
                      00410         saveContext
0000D6 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E14               M     movwf   temp_W                  ; save W
                      00411         ; KEYPAD INTERRUPT
0000DC A0F0           00412         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00413         goto            END_ISR_LOW
                      00414 
                      00415         ;Check operation status
                      00416 ;       movlw           0xFF                                    ; If in operation, skip return
                      00417 ;       cpfseq          InExecution
                      00418 ;       goto            END_ISR_LOW
                      00419 
                      00420         ; Process KEY
0000E2 3881           00421         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00422         andlw           0x0F
0000E6 6E12           00423         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00424 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00425 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000E8 EF?? F???      00426         goto            END_ISR_LOW
                      00427 
                      00428         ; Reset program counter
0000EC 6AFF           00429         clrf            TOSU
0000EE 6AFE           00430         clrf            TOSH
0000F0 6AFD           00431         clrf            TOSL
                      00432 
0000F2                00433 END_ISR_LOW
0000F2 90F0           00434         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00435         restoreContext
0000F4 3814               M     swapf   temp_W, W               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00436         
0000FA 6E14           00437         movwf   temp_W              ; save current W
0000FC CFD8 F013      00438         movff   STATUS, temp_S      ; save status
                      00439 
                      00440         ; ISR_Low routines
000100 C013 FFD8      00441         movff   temp_S, STATUS      ; retreive status
000104 3A14           00442         swapf   temp_W, f
000106 3814           00443         swapf   temp_W, w           ; restore W
000108 0010           00444         retfie
                      00445 
                      00446 ;*******************************************************************************
                      00447 ; main
                      00448 ;*******************************************************************************
00010A                00449 INIT
                      00450         ; i/o
00010A 0EFF           00451         movlw   b'11111111'
00010C 6E92           00452         movwf   TRISA
00010E 0EFF           00453         movlw   b'11111111'
000110 6E93           00454         movwf   TRISB               ; keypad
000112 0E00           00455         movlw   b'00000000'
000114 6E94           00456         movwf   TRISC
000116 0E00           00457         movlw   b'00000000'
000118 6E95           00458         movwf   TRISD
00011A 0E07           00459         movlw   b'00000111'
00011C 6E96           00460         movwf   TRISE
                      00461 
                      00462         ; analog/digital pins
00011E 0E0F           00463         movlw   b'00001111'     ; Set all AN pins to Digital
000120 6EC1           00464         movwf   ADCON1
                      00465 
                      00466         ; clear ports
000122 6A89           00467         clrf    LATA
000124 6A8A           00468         clrf    LATB
                      00469 ;       bcf     TRISC, SCL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00470 ;       bcf     TRISC, SDA
000126 6A8B           00471         clrf    LATC
000128 6A8C           00472         clrf    LATD
00012A 6A8D           00473         clrf    LATE
                      00474         
00012C 0E00           00475         movlw   b'00000000'
00012E 6EC2           00476         movwf   ADCON0
000130 0EFF           00477         movlw   b'11111111'
000132 6EC1           00478         movwf   ADCON1
                      00479         
                      00480         ; initializations
                      00481         
000134 EC?? F???      00482         call    InitLCD
                      00483         ConfigLCD
000138 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00013A EC?? F???          M           call      WR_INS
                          M 
00013E 0E0C               M           movlw     b'00001100'    ; display on/off
000140 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000144 0E01               M           movlw     b'00000001'    ; Clear ram
000146 EC?? F???          M           call      WR_INS
                      00484         
00014A EC?? F???      00485         call    RTC_INIT
00014E EC?? F???      00486         call    Delay50ms
                      00487         
                      00488         COLOUR_INIT
                          M         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
000152 0E00               M         movlw   0x00
000154 6E??               M         movwf   regaddress
000156 0E01               M         movlw   0x01
000158 6E??               M         movwf   databyte
00015A EC?? F???          M         call    WRITE_COLOUR_I2C
00015E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
000162 0E00               M         movlw   0x00
000164 6E??               M         movwf   regaddress
000166 0E03               M         movlw   0x03
000168 6E??               M         movwf   databyte
00016A EC?? F???          M         call    WRITE_COLOUR_I2C
00016E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
000172 0E01               M         movlw   0x01
000174 6E??               M         movwf   regaddress
000176 0ED6               M         movlw   0xd6
000178 6E??               M         movwf   databyte
00017A EC?? F???          M         call    WRITE_COLOUR_I2C
00017E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
000182 0E0F               M         movlw   0x0f
000184 6E??               M         movwf   regaddress
000186 0E03               M         movlw   0x03
000188 6E??               M         movwf   databyte
00018A EC?? F???          M         call    WRITE_COLOUR_I2C
00018E EC?? F???          M         call    delay5ms
                      00489         
000192 EC?? F???      00490         call    INIT_USART
                      00491 
                      00492         ; interrupts
000196 6AD0           00493         clrf    RCON
000198 6AF2           00494         clrf    INTCON
00019A 6AF1           00495         clrf    INTCON2
00019C 6AF0           00496         clrf    INTCON3
00019E 8ED0           00497         bsf     RCON, IPEN          ; priority mode
0001A0 8EF2           00498         bsf     INTCON, GIEH        ; permit global interrupts
0001A2 8CF2           00499         bsf     INTCON, GIEL
0001A4 8AF1           00500         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
0001A6 8AF2           00501         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
0001A8 84F2           00502         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
0001AA 84F1           00503         bsf     INTCON2, TMR0IP     ; set to high priority
0001AC 86F0           00504         bsf     INTCON3, INT1IE
0001AE 9CF0           00505         bcf     INTCON3, INT1IP
                      00506         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00507         ; setting up timer to sychronize with 1 second clock intervals
0001B0 9ED5           00508         bcf     T0CON, TMR0ON
0001B2 9CD5           00509         bcf     T0CON, T08BIT
0001B4 9AD5           00510         bcf     T0CON, T0CS
0001B6 98D5           00511         bcf     T0CON, T0SE
0001B8 96D5           00512         bcf     T0CON, PSA
0001BA 94D5           00513         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
0001BC 82D5           00514         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
0001BE 80D5           00515         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00516 
0001C0 6A21           00517         clrf    H_EE
0001C2 6A22           00518         clrf    L_EE
0001C4 6A??           00519         clrf    tens_digit
0001C6 6A??           00520         clrf    ones_digit
                      00521         
0001C8 0EF2           00522         movlw     b'11110010'    ; Set required keypad inputs
0001CA 6E93           00523         movwf     TRISB
                      00524         
0001CC EC?? F???      00525         call    ClrLCD
                      00526         Display Welcome
  0000                    M         local   loop
0001D0 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001D2 6EF8               M         movwf   TBLPTRU
0001D4 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001D6 6EF7               M         movwf   TBLPTRH
0001D8 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001DA 6EF6               M         movwf   TBLPTRL
0001DC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001DE 50F5               M         movf    TABLAT, W
0001E0                    M loop
0001E0 EC?? F???          M         call    WR_DATA         ; write to LCD
0001E4 000B               M         tblrd+*                 ; next row in table
0001E6 50F5               M         movf    TABLAT, W
0001E8 E1??               M         bnz     loop
0001EA EC?? F???      00527         call LCD_L2
                      00528         Display Team
  0000                    M         local   loop
0001EE 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001F0 6EF8               M         movwf   TBLPTRU
0001F2 0E??               M         movlw   high Team       ; Move Table<15:8>
0001F4 6EF7               M         movwf   TBLPTRH
0001F6 0E??               M         movlw   low Team        ; Move Table<7:0>
0001F8 6EF6               M         movwf   TBLPTRL
0001FA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001FC 50F5               M         movf    TABLAT, W
0001FE                    M loop
0001FE EC?? F???          M         call    WR_DATA         ; write to LCD
000202 000B               M         tblrd+*                 ; next row in table
000204 50F5               M         movf    TABLAT, W
000206 E1??               M         bnz     loop
                      00529         
                      00530         Delay50N delayR, 0x14
  0000                    M         local   loop
000208 0E14               M         movlw   0x14
00020A 6E1B               M         movwf   delayR
                          M 
00020C                    M loop
00020C EC?? F???          M         call    Delay50ms
000210 2E1B               M         decfsz  delayR
000212 EF?? F???          M         goto    loop
                      00531 
                      00532 ;*******************************************************************************
                      00533 ; standby mode
                      00534 ;*******************************************************************************
000216                00535 STANDBY
000216 EC?? F???      00536         call    ClrLCD
                      00537         Display StandBy
  0000                    M         local   loop
00021A 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
00021C 6EF8               M         movwf   TBLPTRU
00021E 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000220 6EF7               M         movwf   TBLPTRH
000222 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000224 6EF6               M         movwf   TBLPTRL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000226 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000228 50F5               M         movf    TABLAT, W
00022A                    M loop
00022A EC?? F???          M         call    WR_DATA         ; write to LCD
00022E 000B               M         tblrd+*                 ; next row in table
000230 50F5               M         movf    TABLAT, W
000232 E1??               M         bnz     loop
                      00538 
000234                00539 HOLD_STANDBY
000234 EC?? F???      00540         call    READ_KEY_TIME
                      00541         ChangeMode key5, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000238 0E05               M         movlw   key5                ; poll for mode
00023A 6210               M         cpfseq  KEY                 ; check this against key press
00023C EF?? F???          M         goto    Exit
                          M 
000240                    M Next
000240 6A89               M         clrf    LATA                ; clear pins before proceeding
000242 6A8A               M         clrf    LATB
000244 6A8B               M         clrf    LATC
000246 6A8C               M         clrf    LATD
000248 EF?? F???          M         goto    COLOUR_TEST
                          M 
00024C                    M Exit
00024C 0000               M         nop
                      00542         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
00024E 0E03               M         movlw   keyA                ; poll for mode
000250 6210               M         cpfseq  KEY                 ; check this against key press
000252 EF?? F???          M         goto    Exit
                          M 
000256                    M Next
000256 6A89               M         clrf    LATA                ; clear pins before proceeding
000258 6A8A               M         clrf    LATB
00025A 6A8B               M         clrf    LATC
00025C 6A8C               M         clrf    LATD
00025E EF?? F???          M         goto    EXECUTION
                          M 
000262                    M Exit
000262 0000               M         nop
                      00543         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
000264 0E07               M         movlw   keyB                ; poll for mode
000266 6210               M         cpfseq  KEY                 ; check this against key press
000268 EF?? F???          M         goto    Exit
                          M 
00026C                    M Next
00026C 6A89               M         clrf    LATA                ; clear pins before proceeding
00026E 6A8A               M         clrf    LATB
000270 6A8B               M         clrf    LATC
000272 6A8C               M         clrf    LATD
000274 EF?? F???          M         goto    LOG
                          M 
000278                    M Exit
000278 0000               M         nop
                      00544         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
00027A 0E0B               M         movlw   keyC                ; poll for mode
00027C 6210               M         cpfseq  KEY                 ; check this against key press
00027E EF?? F???          M         goto    Exit
                          M 
000282                    M Next
000282 6A89               M         clrf    LATA                ; clear pins before proceeding
000284 6A8A               M         clrf    LATB
000286 6A8B               M         clrf    LATC
000288 6A8C               M         clrf    LATD
00028A EF?? F???          M         goto    PERM_LOG
                          M 
00028E                    M Exit
00028E 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00545         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000290 0E0F               M         movlw   keyD                ; poll for mode
000292 6210               M         cpfseq  KEY                 ; check this against key press
000294 EF?? F???          M         goto    Exit
                          M 
000298                    M Next
000298 6A89               M         clrf    LATA                ; clear pins before proceeding
00029A 6A8A               M         clrf    LATB
00029C 6A8B               M         clrf    LATC
00029E 6A8C               M         clrf    LATD
0002A0 EF?? F???          M         goto    PC_MODE
                          M 
0002A4                    M Exit
0002A4 0000               M         nop
0002A6 D???           00546         bra     HOLD_STANDBY
                      00547 
                      00548 ;*******************************************************************************
                      00549 ; execution mode
                      00550 ;*******************************************************************************
                      00551 
0002A8                00552 CHECK_CLEAR
                      00553         SUB16   CLEAR, RED                  ; check first against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002A8 5043               M         movf    RED+1, WREG ; move high y into working register
0002AA 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002AC B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002AE EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002B2 5042               M         movf    RED, WREG
0002B4 5C40               M         subwf   CLEAR, 0 
0002B6                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002B6 A0D8           00554         btfss   STATUS, C
0002B8 0012           00555         return                              ; RED > CLEAR
                      00556         
                      00557         SUB16   CLEAR, GREEN                ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002BA 5045               M         movf    GREEN+1, WREG ; move high y into working register
0002BC 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002BE B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002C0 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002C4 5044               M         movf    GREEN, WREG
0002C6 5C40               M         subwf   CLEAR, 0 
0002C8                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002C8 A0D8           00558         btfss   STATUS, C
0002CA 0012           00559         return                              ; GREEN > CLEAR
                      00560         
                      00561         SUB16   CLEAR, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002CC 5047               M         movf    BLUE+1, WREG ; move high y into working register
0002CE 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002D0 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002D2 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002D6 5046               M         movf    BLUE, WREG
0002D8 5C40               M         subwf   CLEAR, 0 
0002DA                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002DA A0D8           00562         btfss   STATUS, C
0002DC 0012           00563         return                              ; BLUE > CLEAR
                      00564         
0002DE 0E63           00565         movlw   'c'                         ; CLEAR > everything else
0002E0 EC?? F???      00566         call    WR_DATA
0002E4 D???           00567         bra     LOOPING
                      00568 
0002E6                00569 CHECK_RED
                      00570         SUB16   RED, CLEAR                  ; check first against clear
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002E6 5041               M         movf    CLEAR+1, WREG ; move high y into working register
0002E8 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002EA B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002EC EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002F0 5040               M         movf    CLEAR, WREG
0002F2 5C42               M         subwf   RED, 0  
0002F4                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002F4 A0D8           00571         btfss   STATUS, C
0002F6 0012           00572         return                              ; CLEAR > RED
                      00573         
                      00574         SUB16   RED, GREEN                  ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002F8 5045               M         movf    GREEN+1, WREG ; move high y into working register
0002FA 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002FC B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002FE EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000302 5044               M         movf    GREEN, WREG
000304 5C42               M         subwf   RED, 0  
000306                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000306 A0D8           00575         btfss   STATUS, C
000308 0012           00576         return                              ; GREEN > RED
                      00577         
                      00578         SUB16   RED, BLUE                   ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00030A 5047               M         movf    BLUE+1, WREG ; move high y into working register
00030C 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
00030E B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000310 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000314 5046               M         movf    BLUE, WREG
000316 5C42               M         subwf   RED, 0  
000318                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000318 A0D8           00579         btfss   STATUS, C
00031A 0012           00580         return                              ; BLUE > RED
                      00581         
00031C 0E72           00582         movlw   'r'                         ; RED > everything else
00031E EC?? F???      00583         call    WR_DATA
000322 D???           00584         bra     LOOPING
                      00585         
000324                00586 CHECK_GREEN
                      00587         SUB16   GREEN, CLEAR                ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000324 5041               M         movf    CLEAR+1, WREG ; move high y into working register
000326 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000328 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00032A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00032E 5040               M         movf    CLEAR, WREG
000330 5C44               M         subwf   GREEN, 0 
000332                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000332 A0D8           00588         btfss   STATUS, C
000334 0012           00589         return                              ; CLEAR > GREEN
                      00590         
                      00591         SUB16   GREEN, RED                  ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000336 5043               M         movf    RED+1, WREG ; move high y into working register
000338 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
00033A B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00033C EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000340 5042               M         movf    RED, WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000342 5C44               M         subwf   GREEN, 0 
000344                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000344 A0D8           00592         btfss   STATUS, C
000346 0012           00593         return                              ; RED > GREEN
                      00594         
                      00595         SUB16   GREEN, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000348 5047               M         movf    BLUE+1, WREG ; move high y into working register
00034A 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
00034C B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00034E EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000352 5046               M         movf    BLUE, WREG
000354 5C44               M         subwf   GREEN, 0 
000356                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000356 A0D8           00596         btfss   STATUS, C
000358 0012           00597         return                              ; BLUE > GREEN
                      00598         
00035A 0E67           00599         movlw   'g'                         ; GREEN > everything else
00035C EC?? F???      00600         call    WR_DATA
000360 D???           00601         bra     LOOPING
                      00602         
000362                00603 CHECK_BLUE
                      00604         SUB16   BLUE, CLEAR                 ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000362 5041               M         movf    CLEAR+1, WREG ; move high y into working register
000364 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000366 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000368 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00036C 5040               M         movf    CLEAR, WREG
00036E 5C46               M         subwf   BLUE, 0 
000370                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000370 A0D8           00605         btfss   STATUS, C
000372 0012           00606         return                              ; CLEAR > BLUE
                      00607         
                      00608         SUB16   BLUE, RED                   ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000374 5043               M         movf    RED+1, WREG ; move high y into working register
000376 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000378 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00037A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00037E 5042               M         movf    RED, WREG
000380 5C46               M         subwf   BLUE, 0 
000382                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000382 A0D8           00609         btfss   STATUS, C
000384 0012           00610         return                              ; RED > BLUE
                      00611 
                      00612         SUB16   BLUE, GREEN                 ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000386 5045               M         movf    GREEN+1, WREG ; move high y into working register
000388 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
00038A B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00038C EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000390 5044               M         movf    GREEN, WREG
000392 5C46               M         subwf   BLUE, 0 
000394                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000394 A0D8           00613         btfss   STATUS, C
000396 0012           00614         return                              ; GREEN > CLEAR
                      00615         
000398 0E62           00616         movlw   'b'                         ; BLUE > everything else
00039A EC?? F???      00617         call    WR_DATA
00039E 0012           00618         return
                      00619         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003A0                00620 COLOUR_TEST
                      00621 
0003A0                00622 LOOPING
                      00623         Delay50N delayR, 0x28
  0000                    M         local   loop
0003A0 0E28               M         movlw   0x28
0003A2 6E1B               M         movwf   delayR
                          M 
0003A4                    M loop
0003A4 EC?? F???          M         call    Delay50ms
0003A8 2E1B               M         decfsz  delayR
0003AA EF?? F???          M         goto    loop
0003AE EC?? F???      00624         call    ClrLCD
                      00625         COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
0003B2 EC?? F???          M         call    delay5ms
                          M         
                          M         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
0003B6 0E14               M         movlw   0x14
0003B8 6E??               M         movwf   regaddress
0003BA EC?? F???          M         call    READ_COLOUR_I2C
0003BE C??? F040          M         movff   datachar, CLEAR+0
                          M         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
0003C2 0E15               M         movlw   0x15
0003C4 6E??               M         movwf   regaddress
0003C6 EC?? F???          M         call    READ_COLOUR_I2C
0003CA C??? F041          M         movff   datachar, CLEAR+1
                          M                 
                          M         COLOUR_READ 0x16    ; read red colour address low, command bits set later
0003CE 0E16               M         movlw   0x16
0003D0 6E??               M         movwf   regaddress
0003D2 EC?? F???          M         call    READ_COLOUR_I2C
0003D6 C??? F042          M         movff   datachar, RED+0
                          M         COLOUR_READ 0x17    ; read red colour address high, command bits set later
0003DA 0E17               M         movlw   0x17
0003DC 6E??               M         movwf   regaddress
0003DE EC?? F???          M         call    READ_COLOUR_I2C
0003E2 C??? F043          M         movff   datachar, RED+1
                          M         
                          M         COLOUR_READ 0x18    ; read green colour address low, command bits set later
0003E6 0E18               M         movlw   0x18
0003E8 6E??               M         movwf   regaddress
0003EA EC?? F???          M         call    READ_COLOUR_I2C
0003EE C??? F044          M         movff   datachar, GREEN+0
                          M         COLOUR_READ 0x19    ; read green colour address high, command bits set later
0003F2 0E19               M         movlw   0x19
0003F4 6E??               M         movwf   regaddress
0003F6 EC?? F???          M         call    READ_COLOUR_I2C
0003FA C??? F045          M         movff   datachar, GREEN+1
                          M         
                          M         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
0003FE 0E1A               M         movlw   0x1a
000400 6E??               M         movwf   regaddress
000402 EC?? F???          M         call    READ_COLOUR_I2C
000406 C??? F046          M         movff   datachar, BLUE+0
                          M         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
00040A 0E1B               M         movlw   0x1b
00040C 6E??               M         movwf   regaddress
00040E EC?? F???          M         call    READ_COLOUR_I2C
000412 C??? F047          M         movff   datachar, BLUE+1
                      00626         
000416 EC?? F???      00627         call    CHECK_CLEAR
00041A EC?? F???      00628         call    CHECK_RED
00041E EC?? F???      00629         call    CHECK_GREEN
000422 EC?? F???      00630         call    CHECK_BLUE
000426 D???           00631         bra LOOPING
                      00632         
000428                00633 EXECUTION
                      00634         ; save the starting time
000428 EC?? F???      00635         call        SAVE_TIME
                      00636                 
                      00637         ; display
00042C 681F           00638         setf        inExecution
00042E EC?? F???      00639         call        ClrLCD
                      00640         Display     Exe1
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
000432 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000434 6EF8               M         movwf   TBLPTRU
000436 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000438 6EF7               M         movwf   TBLPTRH
00043A 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00043C 6EF6               M         movwf   TBLPTRL
00043E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000440 50F5               M         movf    TABLAT, W
000442                    M loop
000442 EC?? F???          M         call    WR_DATA         ; write to LCD
000446 000B               M         tblrd+*                 ; next row in table
000448 50F5               M         movf    TABLAT, W
00044A E1??               M         bnz     loop
00044C EC?? F???      00641         call        LCD_L2
                      00642 ;       Display     Exe2
                      00643         
000450 0EC5           00644         movlw       0xc5                    ; setting up timer
000452 6ED7           00645         movwf       TMR0H
000454 0E44           00646         movlw       0x44    
000456 6ED6           00647         movwf       TMR0L
                      00648         
000458 8ED5           00649         bsf         T0CON, TMR0ON           ; turning on timer
00045A EC?? F???      00650         call        ClearEEPROM_21
                      00651         
                      00652         ; initialize variables
00045E 6A18           00653         clrf        OP_sec
000460 6A19           00654         clrf        OP_INT
000462 6A40           00655         clrf        CLEAR
000464 6A44           00656         clrf        GREEN
000466 6A42           00657         clrf        RED
000468 6A46           00658         clrf        BLUE
                      00659         
                      00660 ;COLLECTIONS_STEP
                      00661 ;       
                      00662 ;TERM_CHECK
                      00663 ;       
                      00664 ;BOTTLE_CHECK
                      00665 ;
                      00666 ;COLOUR_ONE
                      00667 ;
                      00668 ;COLOUR_TWO
                      00669 ;       
                      00670 ;BRAINS
                      00671 ;       
                      00672 ;TRAY_STEP
                      00673 ;       
                      00674 
00046A                00675 HOLD_EXE
00046A EC?? F???      00676         call        READ_KEY
                      00677         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
00046E 0E0C               M         movlw   keyS                ; poll for mode
000470 6210               M         cpfseq  KEY                 ; check this against key press
000472 EF?? F???          M         goto    Exit
                          M 
000476                    M Next
000476 6A89               M         clrf    LATA                ; clear pins before proceeding
000478 6A8A               M         clrf    LATB
00047A 6A8B               M         clrf    LATC
00047C 6A8C               M         clrf    LATD
00047E EF?? F???          M         goto    EXIT_EXE
                          M 
000482                    M Exit
000482 0000               M         nop
000484 D???           00678         bra         HOLD_EXE
                      00679         
000486                00680 EXIT_EXE
                      00681         ; stop timer and save the time to eeprom
000486 9ED5           00682         bcf         T0CON, TMR0ON
                      00683         WriteEE     OP_sec, H_EE, L_EE
000488 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00048C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000490 C018 FFA8          M         movff   OP_sec, EEDATA      ; set word
                          M 
000494 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000496 D???               M         bra     $-2
                          M 
000498 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00049A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00049C 84A6               M         bsf     EECON1, WREN        ; enable write
00049E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004A0 98A1               M         bcf     PIR2, EEIF
                          M 
0004A2 0E55               M         movlw   0x55
0004A4 6EA7               M         movwf   EECON2              ; write 55h
0004A6 0EAA               M         movlw   0xaa
0004A8 6EA7               M         movwf   EECON2              ; write 0xaa
0004AA 82A6               M         bsf     EECON1, WR          ; begin write
0004AC B2A6               M         btfsc   EECON1, WR
0004AE D???               M         bra     $-2
                          M 
0004B0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004B2 94A6               M         bcf     EECON1, WREN        ; disable writes
0004B4 2A22           00684         incf        L_EE
                      00685         WriteEE     OP_INT, H_EE, L_EE
0004B6 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004BA C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004BE C019 FFA8          M         movff   OP_INT, EEDATA      ; set word
                          M 
0004C2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004C4 D???               M         bra     $-2
                          M 
0004C6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004C8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004CA 84A6               M         bsf     EECON1, WREN        ; enable write
0004CC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004CE 98A1               M         bcf     PIR2, EEIF
                          M 
0004D0 0E55               M         movlw   0x55
0004D2 6EA7               M         movwf   EECON2              ; write 55h
0004D4 0EAA               M         movlw   0xaa
0004D6 6EA7               M         movwf   EECON2              ; write 0xaa
0004D8 82A6               M         bsf     EECON1, WR          ; begin write
0004DA B2A6               M         btfsc   EECON1, WR
0004DC D???               M         bra     $-2
                          M 
0004DE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004E0 94A6               M         bcf     EECON1, WREN        ; disable writes
0004E2 2A22           00686         incf        L_EE
                      00687         
0004E4 EC?? F???      00688         call        SAVE_TIME
                      00689         
                      00690         ; Clear inExecution flag to stop '*' interrupts
0004E8 6A1F           00691         clrf        inExecution
0004EA EF?? F???      00692         goto        SaveData
                      00693 
0004EE                00694 SaveData
0004EE EC?? F???      00695         call        ClrLCD
                      00696         Display     SAVE
  0000                    M         local   loop
0004F2 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0004F4 6EF8               M         movwf   TBLPTRU
0004F6 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0004F8 6EF7               M         movwf   TBLPTRH
0004FA 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0004FC 6EF6               M         movwf   TBLPTRL
0004FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000500 50F5               M         movf    TABLAT, W
000502                    M loop
000502 EC?? F???          M         call    WR_DATA         ; write to LCD
000506 000B               M         tblrd+*                 ; next row in table
000508 50F5               M         movf    TABLAT, W
00050A E1??               M         bnz     loop
                      00697 
00050C 0E00           00698         movlw       d'0'
00050E 6E21           00699         movwf       H_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000510 0EA8           00700         movlw       d'168'              ; take d'168' as last
000512 6E22           00701         movwf       L_EE
000514 0E00           00702         movlw       d'0'
000516 6E24           00703         movwf       tempH_EE
000518 0EDC           00704         movlw       d'220'              ; temp for low constant
00051A 6E25           00705         movwf       tempL_EE
                      00706         
00051C 6A16           00707         clrf        counter2
00051E 6A15           00708         clrf        counter
                      00709 
000520                00710 ShiftLoop
000520 2A15           00711         incf            counter
                      00712         READEE          REG_EE, H_EE, L_EE
000522 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000526 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00052A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00052C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00052E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000530 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000534 0E15           00713         movlw           d'21'
000536 2622           00714         addwf           L_EE
                      00715         WriteEE         REG_EE, H_EE, L_EE
000538 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00053C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000540 C023 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000544 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000546 D???               M         bra     $-2
                          M 
000548 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00054A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00054C 84A6               M         bsf     EECON1, WREN        ; enable write
00054E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000550 98A1               M         bcf     PIR2, EEIF
                          M 
000552 0E55               M         movlw   0x55
000554 6EA7               M         movwf   EECON2              ; write 55h
000556 0EAA               M         movlw   0xaa
000558 6EA7               M         movwf   EECON2              ; write 0xaa
00055A 82A6               M         bsf     EECON1, WR          ; begin write
00055C B2A6               M         btfsc   EECON1, WR
00055E D???               M         bra     $-2
                          M 
000560 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000562 94A6               M         bcf     EECON1, WREN        ; disable writes
000564 0E14           00716         movlw           d'20'
000566 5E22           00717         subwf           L_EE
000568 0E15           00718         movlw           d'21'
00056A 6215           00719         cpfseq          counter
00056C EF?? F???      00720         goto            ShiftLoop
                      00721         
                      00722         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000570 0E2A           00723         movlw           d'42'
000572 5E22           00724         subwf           L_EE
000574 0EDC           00725         movlw           d'220'
000576 6E25           00726         movwf           tempL_EE
000578 6A15           00727         clrf            counter
00057A 2A16           00728         incf            counter2
00057C 0E09           00729         movlw           d'9'
00057E 6216           00730         cpfseq          counter2        ; Skip if 9 shifts were made
000580 EF?? F???      00731         goto            ShiftLoop
                      00732         
                      00733         ; Finish Saving Data
000584 0E09           00734         movlw           d'9'
000586 6E22           00735         movwf           L_EE
                      00736         WriteEE         OP_sec, H_EE, L_EE
000588 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00058C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000590 C018 FFA8          M         movff   OP_sec, EEDATA      ; set word
                          M 
000594 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000596 D???               M         bra     $-2
                          M 
000598 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00059A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00059C 84A6               M         bsf     EECON1, WREN        ; enable write
00059E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0005A0 98A1               M         bcf     PIR2, EEIF
                          M 
0005A2 0E55               M         movlw   0x55
0005A4 6EA7               M         movwf   EECON2              ; write 55h
0005A6 0EAA               M         movlw   0xaa
0005A8 6EA7               M         movwf   EECON2              ; write 0xaa
0005AA 82A6               M         bsf     EECON1, WR          ; begin write
0005AC B2A6               M         btfsc   EECON1, WR
0005AE D???               M         bra     $-2
                          M 
0005B0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0005B2 94A6               M         bcf     EECON1, WREN        ; disable writes
0005B4 2A22           00737         incf            L_EE
                      00738         WriteEE         OP_INT, H_EE, L_EE
0005B6 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0005BA C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0005BE C019 FFA8          M         movff   OP_INT, EEDATA      ; set word
                          M 
0005C2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0005C4 D???               M         bra     $-2
                          M 
0005C6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0005C8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0005CA 84A6               M         bsf     EECON1, WREN        ; enable write
0005CC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0005CE 98A1               M         bcf     PIR2, EEIF
                          M 
0005D0 0E55               M         movlw   0x55
0005D2 6EA7               M         movwf   EECON2              ; write 55h
0005D4 0EAA               M         movlw   0xaa
0005D6 6EA7               M         movwf   EECON2              ; write 0xaa
0005D8 82A6               M         bsf     EECON1, WR          ; begin write
0005DA B2A6               M         btfsc   EECON1, WR
0005DC D???               M         bra     $-2
                          M 
0005DE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0005E0 94A6               M         bcf     EECON1, WREN        ; disable writes
0005E2 2A22           00739         incf            L_EE
0005E4 EF?? F???      00740         goto            LOG
                      00741 
                      00742 ;*******************************************************************************
                      00743 ; sorting statistics log mode
                      00744 ;*******************************************************************************
                      00745         
0005E8                00746 LOG
0005E8 EC?? F???      00747         call    ClrLCD
                      00748         Display Log1
  0000                    M         local   loop
0005EC 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0005EE 6EF8               M         movwf   TBLPTRU
0005F0 0E??               M         movlw   high Log1       ; Move Table<15:8>
0005F2 6EF7               M         movwf   TBLPTRH
0005F4 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005F6 6EF6               M         movwf   TBLPTRL
0005F8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005FA 50F5               M         movf    TABLAT, W
0005FC                    M loop
0005FC EC?? F???          M         call    WR_DATA         ; write to LCD
000600 000B               M         tblrd+*                 ; next row in table
000602 50F5               M         movf    TABLAT, W
000604 E1??               M         bnz     loop
                      00749 
                      00750         ; display most recent run data
000606 0E09           00751         movlw   d'9'
000608 6E22           00752         movwf   L_EE
                      00753         READEE  OP_sec, H_EE, L_EE
00060A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00060E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000612 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000614 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000616 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000618 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
00061C 2A22           00754         incf    L_EE
                      00755         READEE  OP_INT, H_EE, L_EE
00061E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000622 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000626 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000628 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00062A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00062C CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000630 2A22           00756         incf    L_EE
000632 EC?? F???      00757         call    DisplayExeTime
                      00758 
000636 EC?? F???      00759         call    LCD_L2
00063A 6A22           00760         clrf    L_EE
00063C EC?? F???      00761         call    DispOpRTC
                      00762 
000640                00763 HOLD_LOG
000640 EC?? F???      00764         call    READ_KEY
                      00765         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000644 0E07               M         movlw   keyB                ; poll for mode
000646 6210               M         cpfseq  KEY                 ; check this against key press
000648 EF?? F???          M         goto    Exit
                          M 
00064C                    M Next
00064C 6A89               M         clrf    LATA                ; clear pins before proceeding
00064E 6A8A               M         clrf    LATB
000650 6A8B               M         clrf    LATC
000652 6A8C               M         clrf    LATD
000654 EF?? F???          M         goto    LOG_INFO
                          M 
000658                    M Exit
000658 0000               M         nop
                      00766         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00065A 0E0D               M         movlw   key0                ; poll for mode
00065C 6210               M         cpfseq  KEY                 ; check this against key press
00065E EF?? F???          M         goto    Exit
                          M 
000662                    M Next
000662 6A89               M         clrf    LATA                ; clear pins before proceeding
000664 6A8A               M         clrf    LATB
000666 6A8B               M         clrf    LATC
000668 6A8C               M         clrf    LATD
00066A EF?? F???          M         goto    STANDBY
                          M 
00066E                    M Exit
00066E 0000               M         nop
000670 D???           00767         bra     HOLD_LOG
                      00768 
000672                00769 LOG_INFO
000672 EC?? F???      00770         call    ClrLCD
                      00771         Display LogInfo1
  0000                    M         local   loop
000676 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
000678 6EF8               M         movwf   TBLPTRU
00067A 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
00067C 6EF7               M         movwf   TBLPTRH
00067E 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000680 6EF6               M         movwf   TBLPTRL
000682 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000684 50F5               M         movf    TABLAT, W
000686                    M loop
000686 EC?? F???          M         call    WR_DATA         ; write to LCD
00068A 000B               M         tblrd+*                 ; next row in table
00068C 50F5               M         movf    TABLAT, W
00068E E1??               M         bnz     loop
000690 EC?? F???      00772         call    LCD_L2
                      00773         Display LogInfo2
  0000                    M         local   loop
000694 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000696 6EF8               M         movwf   TBLPTRU
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000698 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00069A 6EF7               M         movwf   TBLPTRH
00069C 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
00069E 6EF6               M         movwf   TBLPTRL
0006A0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006A2 50F5               M         movf    TABLAT, W
0006A4                    M loop
0006A4 EC?? F???          M         call    WR_DATA         ; write to LCD
0006A8 000B               M         tblrd+*                 ; next row in table
0006AA 50F5               M         movf    TABLAT, W
0006AC E1??               M         bnz     loop
0006AE 6A21           00774         clrf    H_EE
0006B0 6A22           00775         clrf    L_EE
                      00776         DisplayLog  H_EE, L_EE
  0000                    M             local   Again, Finish
                          M             
0006B2 6A33               M             clrf    SkipCount
0006B4 6A27               M             clrf    MAX_EE
                          M 
                          M             ; Check if there is No Data first
                          M             READEE      REG_EE, H_EE,  L_EE
0006B6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0006BA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0006BE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006C0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0006C2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0006C4 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0006C8 0EFF               M             movlw       0xFF
0006CA 6223               M             cpfseq      REG_EE
0006CC EF?? F???          M             goto        Again
                          M             Display     NoData
  0000                    M         local   loop
0006D0 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0006D2 6EF8               M         movwf   TBLPTRU
0006D4 0E??               M         movlw   high NoData     ; Move Table<15:8>
0006D6 6EF7               M         movwf   TBLPTRH
0006D8 0E??               M         movlw   low NoData      ; Move Table<7:0>
0006DA 6EF6               M         movwf   TBLPTRL
0006DC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006DE 50F5               M         movf    TABLAT, W
0006E0                    M loop
0006E0 EC?? F???          M         call    WR_DATA         ; write to LCD
0006E4 000B               M         tblrd+*                 ; next row in table
0006E6 50F5               M         movf    TABLAT, W
0006E8 E1??               M         bnz     loop
0006EA EF?? F???          M             goto        Finish
0006EE                    M Again
                          M             ; Put a space every 3 Writes
0006EE 0E03               M             movlw       d'3'
0006F0 6033               M             cpfslt      SkipCount
0006F2 6027               M             cpfslt      MAX_EE
0006F4 EF?? F???          M             goto        Finish
                          M 
                          M             ; read EEPROM
                          M             READEE      REG_EE, H_EE,  L_EE
0006F8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0006FC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000700 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000702 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000704 80A6               M         bsf     EECON1, RD          ; read EEPROM
000706 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
00070A BE23               M             btfsc       REG_EE, 7       ; if bit 7 set then done
00070C EF?? F???          M             goto        Finish
000710                    M Finish
000710                00777 HOLD_LOG_INFO
000710 EC?? F???      00778         call    READ_KEY
                      00779         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000714 0E0D               M         movlw   key0                ; poll for mode
000716 6210               M         cpfseq  KEY                 ; check this against key press
000718 EF?? F???          M         goto    Exit
                          M 
00071C                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00071C 6A89               M         clrf    LATA                ; clear pins before proceeding
00071E 6A8A               M         clrf    LATB
000720 6A8B               M         clrf    LATC
000722 6A8C               M         clrf    LATD
000724 EF?? F???          M         goto    LOG
                          M 
000728                    M Exit
000728 0000               M         nop
00072A D???           00780         bra     HOLD_LOG
                      00781         
                      00782 ;*******************************************************************************
                      00783 ; permanent logs
                      00784 ;*******************************************************************************
                      00785 
00072C                00786 PERM_LOG
00072C EC?? F???      00787         call    ClrLCD
                      00788         Display PermLog1
  0000                    M         local   loop
000730 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000732 6EF8               M         movwf   TBLPTRU
000734 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000736 6EF7               M         movwf   TBLPTRH
000738 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00073A 6EF6               M         movwf   TBLPTRL
00073C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00073E 50F5               M         movf    TABLAT, W
000740                    M loop
000740 EC?? F???          M         call    WR_DATA         ; write to LCD
000744 000B               M         tblrd+*                 ; next row in table
000746 50F5               M         movf    TABLAT, W
000748 E1??               M         bnz     loop
00074A EC?? F???      00789         call    LCD_L2
                      00790         Display PermLog2
  0000                    M         local   loop
00074E 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000750 6EF8               M         movwf   TBLPTRU
000752 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000754 6EF7               M         movwf   TBLPTRH
000756 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000758 6EF6               M         movwf   TBLPTRL
00075A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00075C 50F5               M         movf    TABLAT, W
00075E                    M loop
00075E EC?? F???          M         call    WR_DATA         ; write to LCD
000762 000B               M         tblrd+*                 ; next row in table
000764 50F5               M         movf    TABLAT, W
000766 E1??               M         bnz     loop
                      00791         
000768                00792 HOLD_PERM_LOG
000768 EC?? F???      00793         call    READ_KEY
                      00794         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00076C 0E0D               M         movlw   key0                ; poll for mode
00076E 6210               M         cpfseq  KEY                 ; check this against key press
000770 EF?? F???          M         goto    Exit
                          M 
000774                    M Next
000774 6A89               M         clrf    LATA                ; clear pins before proceeding
000776 6A8A               M         clrf    LATB
000778 6A8B               M         clrf    LATC
00077A 6A8C               M         clrf    LATD
00077C EF?? F???          M         goto    STANDBY
                          M 
000780                    M Exit
000780 0000               M         nop
                      00795         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000782 0E00               M         movlw   key1                ; poll for mode
000784 6210               M         cpfseq  KEY                 ; check this against key press
000786 EF?? F???          M         goto    Exit
                          M 
00078A                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00078A 6A89               M         clrf    LATA                ; clear pins before proceeding
00078C 6A8A               M         clrf    LATB
00078E 6A8B               M         clrf    LATC
000790 6A8C               M         clrf    LATD
000792 EF?? F???          M         goto    PLOG
                          M 
000796                    M Exit
000796 0000               M         nop
                      00796         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000798 0E01               M         movlw   key2                ; poll for mode
00079A 6210               M         cpfseq  KEY                 ; check this against key press
00079C EF?? F???          M         goto    Exit
                          M 
0007A0                    M Next
0007A0 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A2 6A8A               M         clrf    LATB
0007A4 6A8B               M         clrf    LATC
0007A6 6A8C               M         clrf    LATD
0007A8 EF?? F???          M         goto    PLOG
                          M 
0007AC                    M Exit
0007AC 0000               M         nop
                      00797         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0007AE 0E02               M         movlw   key3                ; poll for mode
0007B0 6210               M         cpfseq  KEY                 ; check this against key press
0007B2 EF?? F???          M         goto    Exit
                          M 
0007B6                    M Next
0007B6 6A89               M         clrf    LATA                ; clear pins before proceeding
0007B8 6A8A               M         clrf    LATB
0007BA 6A8B               M         clrf    LATC
0007BC 6A8C               M         clrf    LATD
0007BE EF?? F???          M         goto    PLOG
                          M 
0007C2                    M Exit
0007C2 0000               M         nop
                      00798         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0007C4 0E04               M         movlw   key4                ; poll for mode
0007C6 6210               M         cpfseq  KEY                 ; check this against key press
0007C8 EF?? F???          M         goto    Exit
                          M 
0007CC                    M Next
0007CC 6A89               M         clrf    LATA                ; clear pins before proceeding
0007CE 6A8A               M         clrf    LATB
0007D0 6A8B               M         clrf    LATC
0007D2 6A8C               M         clrf    LATD
0007D4 EF?? F???          M         goto    PLOG
                          M 
0007D8                    M Exit
0007D8 0000               M         nop
                      00799         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0007DA 0E05               M         movlw   key5                ; poll for mode
0007DC 6210               M         cpfseq  KEY                 ; check this against key press
0007DE EF?? F???          M         goto    Exit
                          M 
0007E2                    M Next
0007E2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007E4 6A8A               M         clrf    LATB
0007E6 6A8B               M         clrf    LATC
0007E8 6A8C               M         clrf    LATD
0007EA EF?? F???          M         goto    PLOG
                          M 
0007EE                    M Exit
0007EE 0000               M         nop
                      00800         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0007F0 0E06               M         movlw   key6                ; poll for mode
0007F2 6210               M         cpfseq  KEY                 ; check this against key press
0007F4 EF?? F???          M         goto    Exit
                          M 
0007F8                    M Next
0007F8 6A89               M         clrf    LATA                ; clear pins before proceeding
0007FA 6A8A               M         clrf    LATB
0007FC 6A8B               M         clrf    LATC
0007FE 6A8C               M         clrf    LATD
000800 EF?? F???          M         goto    PLOG
                          M 
000804                    M Exit
000804 0000               M         nop
                      00801         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000806 0E08               M         movlw   key7                ; poll for mode
000808 6210               M         cpfseq  KEY                 ; check this against key press
00080A EF?? F???          M         goto    Exit
                          M 
00080E                    M Next
00080E 6A89               M         clrf    LATA                ; clear pins before proceeding
000810 6A8A               M         clrf    LATB
000812 6A8B               M         clrf    LATC
000814 6A8C               M         clrf    LATD
000816 EF?? F???          M         goto    PLOG
                          M 
00081A                    M Exit
00081A 0000               M         nop
                      00802         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
00081C 0E09               M         movlw   key8                ; poll for mode
00081E 6210               M         cpfseq  KEY                 ; check this against key press
000820 EF?? F???          M         goto    Exit
                          M 
000824                    M Next
000824 6A89               M         clrf    LATA                ; clear pins before proceeding
000826 6A8A               M         clrf    LATB
000828 6A8B               M         clrf    LATC
00082A 6A8C               M         clrf    LATD
00082C EF?? F???          M         goto    PLOG
                          M 
000830                    M Exit
000830 0000               M         nop
                      00803         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000832 0E0A               M         movlw   key9                ; poll for mode
000834 6210               M         cpfseq  KEY                 ; check this against key press
000836 EF?? F???          M         goto    Exit
                          M 
00083A                    M Next
00083A 6A89               M         clrf    LATA                ; clear pins before proceeding
00083C 6A8A               M         clrf    LATB
00083E 6A8B               M         clrf    LATC
000840 6A8C               M         clrf    LATD
000842 EF?? F???          M         goto    PLOG
                          M 
000846                    M Exit
000846 0000               M         nop
000848 D???           00804         bra HOLD_PERM_LOG
                      00805         
00084A                00806 PLOG
00084A EC?? F???      00807         call    ClrLCD
                      00808         Display PermLog1
  0000                    M         local   loop
00084E 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000850 6EF8               M         movwf   TBLPTRU
000852 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000854 6EF7               M         movwf   TBLPTRH
000856 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000858 6EF6               M         movwf   TBLPTRL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00085A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00085C 50F5               M         movf    TABLAT, W
00085E                    M loop
00085E EC?? F???          M         call    WR_DATA         ; write to LCD
000862 000B               M         tblrd+*                 ; next row in table
000864 50F5               M         movf    TABLAT, W
000866 E1??               M         bnz     loop
                      00809         
                      00810         ; find the key press value
000868 C010 FFE8      00811         movff   KEY, WREG
00086C 2AE8           00812         incf    WREG        ; W = KEY+1
00086E 6E17           00813         movwf   temp
                      00814         
000870 42E8           00815         rrncf   WREG        ; division by 4
000872 9EE8           00816         bcf     WREG, 7     ; clear last bit, overflow from rotate
000874 42E8           00817         rrncf   WREG        
000876 9EE8           00818         bcf     WREG, 7
000878 5E17           00819         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00087A C017 FFE8      00820         movff   temp, WREG
00087E C017 F011      00821         movff   temp, temp_KEY
000882 0D15           00822         mullw   d'21'       ; indexed as mutliples of 21
                      00823 
000884                00824 displayNum
000884 C011 FFE8      00825         movff   temp_KEY, WREG
000888 0F30           00826         addlw   0x30
00088A EC?? F???      00827         call    WR_DATA
00088E 0E3A           00828         movlw   ":"
000890 EC?? F???      00829         call    WR_DATA
000894 0E20           00830         movlw   " "
000896 EC?? F???      00831         call    WR_DATA
                      00832         
00089A CFF3 F022      00833         movff   PRODL, L_EE
00089E 0E00           00834         movlw   d'0'
0008A0 2622           00835         addwf   L_EE
                      00836         READEE  OP_sec, H_EE, L_EE
0008A2 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0008A6 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0008AA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0008AC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0008AE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0008B0 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0008B4 2A22           00837         incf    L_EE
                      00838         READEE  OP_INT, H_EE, L_EE
0008B6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0008BA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0008BE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0008C0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0008C2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0008C4 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0008C8 2A22           00839         incf    L_EE
0008CA EC?? F???      00840         call    DisplayExeTime
0008CE CFF3 F022      00841         movff   PRODL, L_EE
                      00842         
                      00843         ; reset eeprom to beginning
0008D2 EC?? F???      00844         call    LCD_L2
0008D6 CFF3 F022      00845         movff   PRODL, L_EE
0008DA EC?? F???      00846         call    DispOpRTC
                      00847         
0008DE                00848 HOLD_PLOG
0008DE EC?? F???      00849         call    READ_KEY
                      00850         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0008E2 0E0D               M         movlw   key0                ; poll for mode
0008E4 6210               M         cpfseq  KEY                 ; check this against key press
0008E6 EF?? F???          M         goto    Exit
                          M 
0008EA                    M Next
0008EA 6A89               M         clrf    LATA                ; clear pins before proceeding
0008EC 6A8A               M         clrf    LATB
0008EE 6A8B               M         clrf    LATC
0008F0 6A8C               M         clrf    LATD
0008F2 EF?? F???          M         goto    PERM_LOG
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008F6                    M Exit
0008F6 0000               M         nop
0008F8 D???           00851         bra HOLD_PLOG
                      00852         
                      00853 ;*******************************************************************************
                      00854 ; pc interface
                      00855 ;*******************************************************************************
                      00856 
0008FA                00857 PC_MODE
0008FA EC?? F???      00858         call    ClrLCD
                      00859         Display PC1
  0000                    M         local   loop
0008FE 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000900 6EF8               M         movwf   TBLPTRU
000902 0E??               M         movlw   high PC1        ; Move Table<15:8>
000904 6EF7               M         movwf   TBLPTRH
000906 0E??               M         movlw   low PC1         ; Move Table<7:0>
000908 6EF6               M         movwf   TBLPTRL
00090A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00090C 50F5               M         movf    TABLAT, W
00090E                    M loop
00090E EC?? F???          M         call    WR_DATA         ; write to LCD
000912 000B               M         tblrd+*                 ; next row in table
000914 50F5               M         movf    TABLAT, W
000916 E1??               M         bnz     loop
000918 EC?? F???      00860         call    LCD_L2
                      00861         Display PC2
  0000                    M         local   loop
00091C 0E??               M         movlw   upper PC2       ; Move Table<20:16>
00091E 6EF8               M         movwf   TBLPTRU
000920 0E??               M         movlw   high PC2        ; Move Table<15:8>
000922 6EF7               M         movwf   TBLPTRH
000924 0E??               M         movlw   low PC2         ; Move Table<7:0>
000926 6EF6               M         movwf   TBLPTRL
000928 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00092A 50F5               M         movf    TABLAT, W
00092C                    M loop
00092C EC?? F???          M         call    WR_DATA         ; write to LCD
000930 000B               M         tblrd+*                 ; next row in table
000932 50F5               M         movf    TABLAT, W
000934 E1??               M         bnz     loop
000936 CFF9 F03A      00862         movff   PCL, PC_PCL
00093A CFFA F03B      00863         movff   PCLATH, PC_PCLATH
00093E CFFB F03C      00864         movff   PCLATU, PC_PCLATU
                      00865         
000942                00866 HOLD_PC
000942 EC?? F???      00867         call    READ_KEY
                      00868         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000946 0E0D               M         movlw   key0                ; poll for mode
000948 6210               M         cpfseq  KEY                 ; check this against key press
00094A EF?? F???          M         goto    Exit
                          M 
00094E                    M Next
00094E 6A89               M         clrf    LATA                ; clear pins before proceeding
000950 6A8A               M         clrf    LATB
000952 6A8B               M         clrf    LATC
000954 6A8C               M         clrf    LATD
000956 EF?? F???          M         goto    STANDBY
                          M 
00095A                    M Exit
00095A 0000               M         nop
                      00869         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
00095C 0E0E               M         movlw   keyH                ; poll for mode
00095E 6210               M         cpfseq  KEY                 ; check this against key press
000960 EF?? F???          M         goto    Exit
                          M 
000964                    M Next
000964 6A89               M         clrf    LATA                ; clear pins before proceeding
000966 6A8A               M         clrf    LATB
000968 6A8B               M         clrf    LATC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00096A 6A8C               M         clrf    LATD
00096C EF?? F???          M         goto    PC_TRANSFER
                          M 
000970                    M Exit
000970 0000               M         nop
000972 D???           00870         bra     HOLD_PC
                      00871 
000974                00872 PC_TRANSFER
000974 6839           00873         setf    transferring
000976 EC?? F???      00874         call    ClrLCD
                      00875         Display PCTransfer
  0000                    M         local   loop
00097A 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
00097C 6EF8               M         movwf   TBLPTRU
00097E 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000980 6EF7               M         movwf   TBLPTRH
000982 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000984 6EF6               M         movwf   TBLPTRL
000986 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000988 50F5               M         movf    TABLAT, W
00098A                    M loop
00098A EC?? F???          M         call    WR_DATA         ; write to LCD
00098E 000B               M         tblrd+*                 ; next row in table
000990 50F5               M         movf    TABLAT, W
000992 E1??               M         bnz     loop
                      00876         ;call   DataUSART
000994 6A39           00877         clrf    transferring
000996 D???           00878         bra     HOLD_PC
                      00879         
                      00880 ;*******************************************************************************
                      00881 ; subroutines
                      00882 ;*******************************************************************************
                      00883 
000998                00884 RTC_INIT
                      00885         ; set sda and scl to high-z
000998 9882           00886         bcf     PORTC, 4
00099A 9682           00887         bcf     PORTC, 3
00099C 8894           00888         bsf     TRISC, 4
00099E 8694           00889         bsf     TRISC, 3
                      00890         
0009A0 EC?? F???      00891         call    i2c_common_setup
                      00892         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
0009A4 0012           00893 return
                      00894         
0009A6                00895 SAVE_TIME   
                      00896         rtc_read    0x02        ; hours
0009A6 0E02               M     movlw   0x02
0009A8 6E??               M     movwf   regaddress
0009AA EC?? F???          M     call    read_rtc
0009AE 50??               M     movf    datachar,w
0009B0 EC?? F???          M     call    rtc_convert
0009B4 EC?? F???      00897         call    WriteEE_RTC
                      00898         rtc_read    0x01        ; minutes
0009B8 0E01               M     movlw   0x01
0009BA 6E??               M     movwf   regaddress
0009BC EC?? F???          M     call    read_rtc
0009C0 50??               M     movf    datachar,w
0009C2 EC?? F???          M     call    rtc_convert
0009C6 EC?? F???      00899         call    WriteEE_RTC
                      00900         rtc_read    0x06        ; years
0009CA 0E06               M     movlw   0x06
0009CC 6E??               M     movwf   regaddress
0009CE EC?? F???          M     call    read_rtc
0009D2 50??               M     movf    datachar,w
0009D4 EC?? F???          M     call    rtc_convert
0009D8 EC?? F???      00901         call    WriteEE_RTC
                      00902         rtc_read    0x05        ; months
0009DC 0E05               M     movlw   0x05
0009DE 6E??               M     movwf   regaddress
0009E0 EC?? F???          M     call    read_rtc
0009E4 50??               M     movf    datachar,w
0009E6 EC?? F???          M     call    rtc_convert
0009EA EC?? F???      00903         call    WriteEE_RTC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00904         rtc_read    0x04        ; days
0009EE 0E04               M     movlw   0x04
0009F0 6E??               M     movwf   regaddress
0009F2 EC?? F???          M     call    read_rtc
0009F6 50??               M     movf    datachar,w
0009F8 EC?? F???          M     call    rtc_convert
0009FC EC?? F???      00905         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000A00 0012           00906 return
                      00907                 
000A02                00908 DISPLAY_RTC     
                      00909         ; display data in this format hh/minmin/yy yy/mm/dd
                      00910         rtc_read    0x02            ; 0x02 from DS1307 - hours
000A02 0E02               M     movlw   0x02
000A04 6E??               M     movwf   regaddress
000A06 EC?? F???          M     call    read_rtc
000A0A 50??               M     movf    datachar,w
000A0C EC?? F???          M     call    rtc_convert
000A10 C??? FFE8      00911         movff   tens_digit,WREG
000A14 EC?? F???      00912         call    WR_DATA
000A18 C??? FFE8      00913         movff   ones_digit,WREG
000A1C EC?? F???      00914         call    WR_DATA
000A20 0E68           00915         movlw   "h"
000A22 EC?? F???      00916         call    WR_DATA
                      00917         
                      00918         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000A26 0E01               M     movlw   0x01
000A28 6E??               M     movwf   regaddress
000A2A EC?? F???          M     call    read_rtc
000A2E 50??               M     movf    datachar,w
000A30 EC?? F???          M     call    rtc_convert
000A34 C??? FFE8      00919         movff   tens_digit,WREG
000A38 EC?? F???      00920         call    WR_DATA
000A3C C??? FFE8      00921         movff   ones_digit,WREG
000A40 EC?? F???      00922         call    WR_DATA
                      00923         
                      00924         rtc_read    0x00            ; 0x01 from DS1307 - seconds
000A44 0E00               M     movlw   0x00
000A46 6E??               M     movwf   regaddress
000A48 EC?? F???          M     call    read_rtc
000A4C 50??               M     movf    datachar,w
000A4E EC?? F???          M     call    rtc_convert
000A52 C??? FFE8      00925         movff   tens_digit,WREG
000A56 EC?? F???      00926         call    WR_DATA
000A5A C??? FFE8      00927         movff   ones_digit,WREG
000A5E EC?? F???      00928         call    WR_DATA
000A62 0E20           00929         movlw   " "
000A64 EC?? F???      00930         call    WR_DATA
                      00931         
                      00932         rtc_read    0x06            ; 0x06 from DS1307 - years
000A68 0E06               M     movlw   0x06
000A6A 6E??               M     movwf   regaddress
000A6C EC?? F???          M     call    read_rtc
000A70 50??               M     movf    datachar,w
000A72 EC?? F???          M     call    rtc_convert
000A76 C??? FFE8      00933         movff   tens_digit,WREG
000A7A EC?? F???      00934         call    WR_DATA
000A7E C??? FFE8      00935         movff   ones_digit,WREG
000A82 EC?? F???      00936         call    WR_DATA
000A86 0E2F           00937         movlw   "/"
000A88 EC?? F???      00938         call    WR_DATA
                      00939         
                      00940         rtc_read    0x05            ; 0x05 from DS1307 - months
000A8C 0E05               M     movlw   0x05
000A8E 6E??               M     movwf   regaddress
000A90 EC?? F???          M     call    read_rtc
000A94 50??               M     movf    datachar,w
000A96 EC?? F???          M     call    rtc_convert
000A9A C??? FFE8      00941         movff   tens_digit,WREG
000A9E EC?? F???      00942         call    WR_DATA
000AA2 C??? FFE8      00943         movff   ones_digit,WREG
000AA6 EC?? F???      00944         call    WR_DATA
000AAA 0E2F           00945         movlw   "/"
000AAC EC?? F???      00946         call    WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00947         
                      00948         rtc_read    0x04            ; 0x04 from DS1307 - days
000AB0 0E04               M     movlw   0x04
000AB2 6E??               M     movwf   regaddress
000AB4 EC?? F???          M     call    read_rtc
000AB8 50??               M     movf    datachar,w
000ABA EC?? F???          M     call    rtc_convert
000ABE C??? FFE8      00949         movff   tens_digit,WREG
000AC2 EC?? F???      00950         call    WR_DATA
000AC6 C??? FFE8      00951         movff   ones_digit,WREG
000ACA EC?? F???      00952         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000ACE 0012           00953 return
                      00954         
000AD0                00955 SET_TIME
                      00956         rtc_resetAll
                          M 
000AD0 6A??               M     clrf    databyte
000AD2 0E06               M     movlw   6
000AD4 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000AD6                    M     del_loop0
000AD6 EC?? F???          M     call    write_rtc
000ADA 2E??               M     decfsz  regaddress
000ADC D???               M     bra     del_loop0
000ADE EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      00957         
                      00958         rtc_set 0x00,   b'10000000'
000AE2 0E00               M     movlw   0x00
000AE4 6E??               M     movwf   regaddress
000AE6 0E80               M     movlw   b'10000000'
000AE8 6E??               M     movwf   databyte
000AEA EC?? F???          M     call    write_rtc
                      00959 
                      00960         rtc_set 0x06,   b'00010111'             ; Year 17
000AEE 0E06               M     movlw   0x06
000AF0 6E??               M     movwf   regaddress
000AF2 0E17               M     movlw   b'00010111'
000AF4 6E??               M     movwf   databyte
000AF6 EC?? F???          M     call    write_rtc
                      00961         rtc_set 0x05,   b'00000010'             ; Month 2
000AFA 0E05               M     movlw   0x05
000AFC 6E??               M     movwf   regaddress
000AFE 0E02               M     movlw   b'00000010'
000B00 6E??               M     movwf   databyte
000B02 EC?? F???          M     call    write_rtc
                      00962         rtc_set 0x04,   b'00011001'             ; Date 19
000B06 0E04               M     movlw   0x04
000B08 6E??               M     movwf   regaddress
000B0A 0E19               M     movlw   b'00011001'
000B0C 6E??               M     movwf   databyte
000B0E EC?? F???          M     call    write_rtc
                      00963         rtc_set 0x02,   b'00010001'             ; Hours 11
000B12 0E02               M     movlw   0x02
000B14 6E??               M     movwf   regaddress
000B16 0E11               M     movlw   b'00010001'
000B18 6E??               M     movwf   databyte
000B1A EC?? F???          M     call    write_rtc
                      00964         rtc_set 0x01,   b'00111000'             ; Minutes 38
000B1E 0E01               M     movlw   0x01
000B20 6E??               M     movwf   regaddress
000B22 0E38               M     movlw   b'00111000'
000B24 6E??               M     movwf   databyte
000B26 EC?? F???          M     call    write_rtc
                      00965         rtc_set 0x00,   b'00000000'             ; Seconds 0
000B2A 0E00               M     movlw   0x00
000B2C 6E??               M     movwf   regaddress
000B2E 0E00               M     movlw   b'00000000'
000B30 6E??               M     movwf   databyte
000B32 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B36 0012           00966 return
                      00967         
000B38                00968 INIT_USART
000B38 0E0F           00969         movlw   15      ; baud rate 9600
000B3A 6EAF           00970         movwf   SPBRG
000B3C 6AAC           00971         clrf    TXSTA
                      00972         
000B3E 6AAB           00973         clrf    RCSTA
000B40 8EAB           00974         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000B42 88AB           00975         bsf     RCSTA,CREN      ; continous receive
                      00976         
000B44 8AAC           00977         bsf     TXSTA, TXEN     ; transmit enabled
000B46 0012           00978         return
                      00979 
                      00980 ;DataUSART
                      00981 ;       
                      00982 ;       movlw   0x02
                      00983 ;       call    USART_WAIT
                      00984 ;       movlw   0x0D
                      00985 ;       call    USART_WAIT
                      00986 ;       
                      00987 ;       movlw   d'21'       ; start of permanent logs
                      00988 ;       movff   w, L_EE
                      00989 ;       TransferTable   PCLog1
                      00990 ;       
                      00991 ;       ; display time here
                      00992 ;;      rtc_read        0x02
                      00993 ;;              movf        tens_digit, W
                      00994 ;;        andlw       b'00000001'
                      00995 ;;        addlw       0x30
                      00996 ;;        call        TransmitWaitUSART
                      00997 ;;        movf        ones_digit, W
                      00998 ;;        call        TransmitWaitUSART
                      00999 ;;              movlw           ":"
                      01000 ;;              call            TransmitWaitUSART
                      01001 ;;              ; Dispay minutes
                      01002 ;;              rtc_read        0x01
                      01003 ;;              call        SendRTC_USART
                      01004 ;;              ; Dispay AM/PM
                      01005 ;;              rtc_read        0x02
                      01006 ;;        movlw       "P"
                      01007 ;;        btfss       tens_digit, 1
                      01008 ;;        movlw       "A"
                      01009 ;;        call        TransmitWaitUSART
                      01010 ;;        movlw       "M"
                      01011 ;;        call        TransmitWaitUSART
                      01012 ;;              movlw           " "
                      01013 ;;        call        TransmitWaitUSART
                      01014 ;;              ; Display month
                      01015 ;;              rtc_read        0x05
                      01016 ;;              call        SendRTC_USART
                      01017 ;;              movlw           0x2F            ; ASCII '/'
                      01018 ;;              call            TransmitWaitUSART
                      01019 ;;              ; Display day
                      01020 ;;              rtc_read        0x04
                      01021 ;;              call        SendRTC_USART
                      01022 ;;              movlw           0x2F            ; ASCII '/'
                      01023 ;;              call            TransmitWaitUSART
                      01024 ;;              ; Display year
                      01025 ;;              rtc_read        0x06
                      01026 ;;              call        SendRTC_USART
                      01027 ;       
                      01028 ;       call    USART_LINE
                      01029 ;       call    USART_LINE
                      01030 ;       
                      01031 ;       clrf    counter
                      01032 ;       incf    counter
                      01033 ;
                      01034 ;USART_TRANSFER
                      01035 ;       movlw   d'21'
                      01036 ;       mulwf   counter
                      01037 ;       movff   PRODL, L_EE
                      01038 ;       movlw   d'9'
                      01039 ;       addwf   L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01040 ;       READEE  OP_sec, H_EE, L_EE
                      01041 ;       incf    L_EE
                      01042 ;       READEE  OP_INT, H_EE, L_EE
                      01043 ;       incf    L_EE
                      01044 ;       ; call  TransferTime
                      01045 ;       
                      01046 ;       ; send rtc
                      01047 ;       movlw   0x09
                      01048 ;       call    USART_WAIT
                      01049 ;       movff   PRODL, L_EE
                      01050 ;       ;call   TransferRTC
                      01051 ;       call    USART_LINE
                      01052 ;       
                      01053 ;       
                      01054 ;       
                      01055 ;       
                      01056 ;USART_WAIT
                      01057 ;       movwf   TXREG
                      01058 ;       btfss   TXSTA,1
                      01059 ;       goto    $-2
                      01060 ;       return
                      01061 ;
                      01062 ;USART_LINE
                      01063 ;       movlw   0x0A
                      01064 ;       call    USART_WAIT
                      01065 ;       movlw   0x0D
                      01066 ;       call    USART_WAIT
                      01067 ;       return
                      01068         
                      01069         
000B48                01070 Delay5us
000B48 0E78           01071         movlw   d'120'
000B4A 6E1C           01072         movwf   d5us
                      01073 
000B4C                01074 loop5us
000B4C 2E1C           01075         decfsz  d5us
000B4E EF?? F???      01076         goto    loop5us
000B52 0000           01077         nop
000B54 0012           01078         return
                      01079 
000B56                01080 Delay200us
000B56 0EA4           01081         movlw   0xA4
000B58 6E1D           01082         movwf   d200us
                      01083 
000B5A                01084 loop200us
000B5A 2E1D           01085         decfsz  d200us
000B5C EF?? F???      01086         goto    loop200us
000B60 0000           01087         nop
000B62 0012           01088         return
                      01089 
000B64                01090 Delay50ms
000B64 0EF9           01091         movlw   0xF9
000B66 6E1E           01092         movwf   d50ms
                      01093 
000B68                01094 loop50ms
000B68 EC?? F???      01095         call    Delay200us
000B6C 2E1E           01096         decfsz  d50ms
                      01097 
000B6E                01098 Cycles
000B6E EF?? F???      01099         goto    loop50ms
000B72 EC?? F???      01100         call    Delay200us
000B76 0012           01101         return
                      01102 
000B78                01103 WriteEE_RTC
                      01104         WriteEE tens_digit, H_EE, L_EE
000B78 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000B7C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000B80 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000B84 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B86 D???               M         bra     $-2
                          M 
000B88 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B8A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B8C 84A6               M         bsf     EECON1, WREN        ; enable write
000B8E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B90 98A1               M         bcf     PIR2, EEIF
                          M 
000B92 0E55               M         movlw   0x55
000B94 6EA7               M         movwf   EECON2              ; write 55h
000B96 0EAA               M         movlw   0xaa
000B98 6EA7               M         movwf   EECON2              ; write 0xaa
000B9A 82A6               M         bsf     EECON1, WR          ; begin write
000B9C B2A6               M         btfsc   EECON1, WR
000B9E D???               M         bra     $-2
                          M 
000BA0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BA2 94A6               M         bcf     EECON1, WREN        ; disable writes
000BA4 2A22           01105         incf    L_EE
                      01106         WriteEE ones_digit, H_EE, L_EE
000BA6 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BAA C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BAE C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000BB2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BB4 D???               M         bra     $-2
                          M 
000BB6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BB8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BBA 84A6               M         bsf     EECON1, WREN        ; enable write
000BBC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BBE 98A1               M         bcf     PIR2, EEIF
                          M 
000BC0 0E55               M         movlw   0x55
000BC2 6EA7               M         movwf   EECON2              ; write 55h
000BC4 0EAA               M         movlw   0xaa
000BC6 6EA7               M         movwf   EECON2              ; write 0xaa
000BC8 82A6               M         bsf     EECON1, WR          ; begin write
000BCA B2A6               M         btfsc   EECON1, WR
000BCC D???               M         bra     $-2
                          M 
000BCE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BD0 94A6               M         bcf     EECON1, WREN        ; disable writes
000BD2 2A22           01107         incf    L_EE
000BD4 0012           01108         return
                      01109 
000BD6                01110 ClearEEPROM_21
000BD6 6A21           01111         clrf    H_EE
000BD8 6A22           01112         clrf    L_EE
000BDA 6820           01113         setf    clear_EE
000BDC 6A15           01114         clrf    counter
000BDE                01115 ClearNext
                      01116         WriteEE         clear_EE, H_EE, L_EE
000BDE C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BE2 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BE6 C020 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000BEA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BEC D???               M         bra     $-2
                          M 
000BEE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BF0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BF2 84A6               M         bsf     EECON1, WREN        ; enable write
000BF4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BF6 98A1               M         bcf     PIR2, EEIF
                          M 
000BF8 0E55               M         movlw   0x55
000BFA 6EA7               M         movwf   EECON2              ; write 55h
000BFC 0EAA               M         movlw   0xaa
000BFE 6EA7               M         movwf   EECON2              ; write 0xaa
000C00 82A6               M         bsf     EECON1, WR          ; begin write
000C02 B2A6               M         btfsc   EECON1, WR
000C04 D???               M         bra     $-2
                          M 
000C06 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C08 94A6               M         bcf     EECON1, WREN        ; disable writes
000C0A 2A15           01117         incf            counter
000C0C 2A22           01118         incf            L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C0E 0E15           01119         movlw           d'21'
000C10 6215           01120         cpfseq          counter
000C12 EF?? F???      01121         goto            ClearNext
000C16 6A21           01122         clrf            H_EE
000C18 6A22           01123         clrf            L_EE
000C1A 0012           01124         return
                      01125         
000C1C                01126 READ_KEY
000C1C A281           01127         btfss   PORTB, 1        ; check for keypad interrupt
000C1E EF?? F???      01128         goto    READ_KEY
000C22 3881           01129         swapf   PORTB, W
000C24 0B0F           01130         andlw   0x0F
000C26 6E10           01131         movwf   KEY
000C28 B281           01132         btfsc   PORTB, 1
000C2A EF?? F???      01133         goto    $-2
000C2E 0012           01134         return
                      01135 
000C30                01136 READ_KEY_TIME
000C30 EC?? F???      01137         call        LCD_L2          ; go to second line to print RTC
                      01138 
                      01139         ; display the time
000C34 EC?? F???      01140         call    DISPLAY_RTC
                      01141 
000C38 A281           01142         btfss       PORTB, 1    ; keypad interrupt
000C3A EF?? F???      01143         goto        READ_KEY_TIME
000C3E 3881           01144         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000C40 0B0F           01145         andlw       0x0F        ; only want W3:0
000C42 6E10           01146         movwf       KEY         ; write this value to the KEY
000C44 B281           01147         btfsc       PORTB, 1    ; wait for release
000C46 EF?? F???      01148         goto        $-2         ; go back one instruction
000C4A 0012           01149         return
                      01150 
000C4C                01151 DisplayExeTime
                      01152         READEE  REG_EE, H_EE, L_EE
000C4C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C50 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C54 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C56 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C58 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C5A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000C5E 0EFF           01153         movlw   0xFF
000C60 6223           01154         cpfseq  REG_EE
000C62 EF?? F???      01155         goto    NoSkipDispExeTime
                      01156         Display NoData
  0000                    M         local   loop
000C66 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000C68 6EF8               M         movwf   TBLPTRU
000C6A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000C6C 6EF7               M         movwf   TBLPTRH
000C6E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000C70 6EF6               M         movwf   TBLPTRL
000C72 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C74 50F5               M         movf    TABLAT, W
000C76                    M loop
000C76 EC?? F???          M         call    WR_DATA         ; write to LCD
000C7A 000B               M         tblrd+*                 ; next row in table
000C7C 50F5               M         movf    TABLAT, W
000C7E E1??               M         bnz     loop
000C80 0EFF           01157         movlw   0xFF
000C82 6023           01158         cpfslt  REG_EE
000C84 EF?? F???      01159         goto    SkipDispExeTime
000C88 0012           01160         return
                      01161 
000C8A                01162 NoSkipDispExeTime
Warning[202]: Argument out of range.  Least significant bits used.
000C8A 3818           01163         swapf   OP_sec, WREG    ; 100's seconds
000C8C 6E17           01164         movwf   temp
000C8E 0E0F           01165         movlw   0x0F
000C90 1617           01166         andwf   temp
000C92 C017 FFE8      01167         movff   temp, WREG
000C96 0F30           01168         addlw   0x30
000C98 EC?? F???      01169         call    WR_DATA
                      01170 
000C9C C018 F017      01171         movff   OP_sec, temp    ; 10's seconds
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CA0 0E0F           01172         movlw   0x0F
000CA2 1617           01173         andwf   temp            ; Temp = lower nibble of Op_sec
000CA4 C017 FFE8      01174         movff   temp, WREG      ; W = Temp
000CA8 0F30           01175         addlw   0x30            ; Convert to ASCII
000CAA EC?? F???      01176         call    WR_DATA
                      01177         
Warning[202]: Argument out of range.  Least significant bits used.
000CAE 3819           01178         swapf   OP_INT, WREG    ;1's seconds
000CB0 6E17           01179         movwf   temp
000CB2 0E0F           01180         movlw   0x0f
000CB4 1617           01181         andwf   temp
000CB6 C017 FFE8      01182         movff   temp, WREG
000CBA 0F30           01183         addlw   0x30
000CBC EC?? F???      01184         call    WR_DATA
                      01185 
000CC0 0E73           01186         movlw   0x73            ; Write 's'
000CC2 EC?? F???      01187         call    WR_DATA
000CC6 EC?? F???      01188         call    LCD_L2
000CCA                01189 SkipDispExeTime
000CCA 0012           01190         return
                      01191 
000CCC                01192 DispOpRTC
000CCC 0E02           01193         movlw   d'2'
000CCE 2622           01194         addwf   L_EE
                      01195 
                      01196         READEE  REG_EE, H_EE, L_EE
000CD0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CD4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CD8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CDA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CDC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CDE CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000CE2 0EFF           01197         movlw   0xff
000CE4 6223           01198         cpfseq  REG_EE
000CE6 EF?? F???      01199         goto    NoSkipDispOpRTC
                      01200         Display NoData
  0000                    M         local   loop
000CEA 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000CEC 6EF8               M         movwf   TBLPTRU
000CEE 0E??               M         movlw   high NoData     ; Move Table<15:8>
000CF0 6EF7               M         movwf   TBLPTRH
000CF2 0E??               M         movlw   low NoData      ; Move Table<7:0>
000CF4 6EF6               M         movwf   TBLPTRL
000CF6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CF8 50F5               M         movf    TABLAT, W
000CFA                    M loop
000CFA EC?? F???          M         call    WR_DATA         ; write to LCD
000CFE 000B               M         tblrd+*                 ; next row in table
000D00 50F5               M         movf    TABLAT, W
000D02 E1??               M         bnz     loop
000D04 0EFF           01201         movlw   0xff
000D06 6023           01202         cpfslt  REG_EE
000D08 EF?? F???      01203         goto    SkipDispOpRTC
                      01204 
000D0C                01205 NoSkipDispOpRTC
                      01206         READEE  REG_EE, H_EE, L_EE
000D0C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D10 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D14 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D16 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D18 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D1A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D1E C023 FFE8      01207         movff   REG_EE, WREG
000D22 0BF1           01208         andlw   b'11110001'
000D24 EC?? F???      01209         call    WR_DATA
                      01210         
000D28 2A22           01211         incf    L_EE
                      01212         READEE  REG_EE, H_EE, L_EE
000D2A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D2E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D32 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D34 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D36 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D38 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:52:48         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D3C C023 FFE8      01213         movff   REG_EE, WREG
000D40 EC?? F???      01214         call    WR_DATA
000D44 2A22           01215         incf    L_EE
                      01216 
000D46 0E68           01217         movlw           "h"
000D48 EC?? F???      01218         call            WR_DATA
                      01219         
000D4C EC?? F???      01220         call DispOpRTC_Helper
                      01221         
000D50 0E20           01222         movlw           " "
000D52 EC?? F???      01223         call            WR_DATA
                      01224         
000D56 EC?? F???      01225         call DispOpRTC_Helper
000D5A 0E2F           01226         movlw           "/"
000D5C EC?? F???      01227         call            WR_DATA
                      01228 
000D60 EC?? F???      01229         call DispOpRTC_Helper
000D64 0E2F           01230         movlw           "/"
000D66 EC?? F???      01231         call            WR_DATA
000D6A EC?? F???      01232         call DispOpRTC_Helper
000D6E                01233 SkipDispOpRTC
000D6E 0012           01234                 return
000D70                01235 DispOpRTC_Helper
                      01236         READEE          REG_EE, H_EE, L_EE
000D70 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D74 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D78 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D7A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D7C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D7E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D82 C023 FFE8      01237         movff           REG_EE, WREG
000D86 EC?? F???      01238         call            WR_DATA
000D8A 2A22           01239         incf            L_EE
                      01240         READEE          REG_EE, H_EE, L_EE
000D8C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D90 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D94 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D96 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D98 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D9A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D9E C023 FFE8      01241         movff           REG_EE, WREG
000DA2 EC?? F???      01242         call            WR_DATA
000DA6 2A22           01243         incf            L_EE
000DA8 0012           01244         return
Warning[205]: Found directive in column 1. (end)
                      01245 end

Errors   :     0
Warnings :    65 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

