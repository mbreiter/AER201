MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         KEY_DETAILS
  00000012            00058         temp_KEY
  00000013            00059         KEY_ISR
  00000014            00060         temp_S  
  00000015            00061         temp_W
  00000016            00062         counter
  00000017            00063         counter2
  00000018            00064         temp
  00000019            00065         OP_sec
  0000001A            00066         OP_INT
  0000001B            00067         temp_ISR
  0000001C            00068         delayR
  0000001D            00069         d5us
  0000001E            00070         d200us
  0000001F            00071         d50ms
  00000020            00072         inExecution
  00000021            00073         clear_EE
  00000022            00074         H_EE    
  00000023            00075         L_EE    
  00000024            00076         REG_EE  
  00000025            00077         tempH_EE
  00000026            00078         tempL_EE
  00000027            00079         tempL_EEC
  00000028            00080         MAX_EE   
  00000029            00081         READ_EE
  0000002A            00082         last_log
  0000002B            00083         startHt
  0000002C            00084         startHo
  0000002D            00085         startMt
  0000002E            00086         startMo
  0000002F            00087         endHt
  00000030            00088         endHo
  00000031            00089         endMt
  00000032            00090         endMo
  00000033            00091         exe_sec
  00000034            00092         exe_int
  00000035            00093         timer_H
  00000036            00094         timer_L
  00000037            00095         convert_buffer
  00000038            00096         transferring
  00000039            00097         PC_PCL
  0000003A            00098         PC_PCLATH
  0000003B            00099         PC_PCLATU
  0000003C            00100         TIMCNT
  0000003D            00101         CPCNT
  0000003E            00102         TDATA
  0000003F            00103         DETECTION_VAL
  00000040            00104         ESKA
  00000041            00105         ESKA_NOCAP
  00000042            00106         YOP
  00000043            00107         YOP_NOCAP
  00000044            00108         TOTAL_BOTTLES
  00000045            00109         COLLECTIONS_COUNT
  00000046            00110         TRAY_COUNT
                      00111     endc
                      00112     
  0000                00113     extern tens_digit, ones_digit
  0000                00114     extern READ_ARDUINO, INIT_RTC
                      00115     
                      00116 ;*******************************************************************************
                      00117 ; tables
                      00118 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00119     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000006 726D 6820 206C 00120     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00121     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00122     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00123     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00124     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00125     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00126     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00127     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00128     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00129     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00130     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00131     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00132     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000096 6F43 706D 656C 00133     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000A0 6153 6976 676E 00134     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000AA 2F4E 0041      00135     NoData      db          "N/A", 0
                      00136         
                      00137 ;*******************************************************************************
                      00138 ; macros
                      00139 ;*******************************************************************************
                      00140 
                      00141 TransferTable macro table
                      00142         local loop
                      00143         
                      00144         movlw   upper table
                      00145         movwf   TBLPTRU
                      00146         movlw   high table
                      00147         movwf   TBLPTRH
                      00148         movlw   low table
                      00149         movwf   TBLPTRL
                      00150         tblrd*
                      00151         movff   TABLAT, WREG
                      00152 loop
                      00153         call    USART_WAIT
                      00154         tblrd+*
                      00155         movff   TABLAT, WREG
                      00156         bnz     loop
                      00157         endm
                      00158         
                      00159 ConfigLCD   macro
                      00160           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00161           call      WR_INS
                      00162 
                      00163           movlw     b'00001100'    ; display on/off
                      00164           call      WR_INS
                      00165           movlw     b'00000001'    ; Clear ram
                      00166           call      WR_INS
                      00167           endm
                      00168         
                      00169 movMSB  macro   port
                      00170         andlw   0xF0
                      00171         iorwf   port, f
                      00172         iorlw   0x0F
                      00173         andwf   port, f
                      00174         endm
                      00175 
                      00176 Delay50N macro count, N
                      00177         local   loop
                      00178         movlw   N
                      00179         movwf   count
                      00180 
                      00181 loop
                      00182         call    Delay50ms
                      00183         decfsz  count
                      00184         goto    loop
                      00185         endm
                      00186 
                      00187 Display macro   Message
                      00188         local   loop
                      00189         movlw   upper Message   ; Move Table<20:16>
                      00190         movwf   TBLPTRU
                      00191         movlw   high Message    ; Move Table<15:8>
                      00192         movwf   TBLPTRH
                      00193         movlw   low Message     ; Move Table<7:0>
                      00194         movwf   TBLPTRL
                      00195         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00196         movf    TABLAT, W
                      00197 loop
                      00198         call    WR_DATA         ; write to LCD
                      00199         tblrd+*                 ; next row in table
                      00200         movf    TABLAT, W
                      00201         bnz     loop
                      00202         endm
                      00203 
                      00204 DisplayLog  macro   addrH, addrL
                      00205             local   Again, Finish
                      00206             
                      00207             clrf    SkipCount
                      00208             clrf    MAX_EE
                      00209 
                      00210             ; Check if there is No Data first
                      00211             READEE      REG_EE, addrH, addrL
                      00212             movlw       0xFF
                      00213             cpfseq      REG_EE
                      00214             goto        Again
                      00215             Display     NoData
                      00216             goto        Finish
                      00217 Again
                      00218             ; Put a space every 3 Writes
                      00219             movlw       d'3'
                      00220             cpfslt      SkipCount
                      00221             cpfslt      MAX_EE
                      00222             goto        Finish
                      00223 
                      00224             ; read EEPROM
                      00225             READEE      REG_EE, addrH, addrL
                      00226             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00227             goto        Finish
                      00228 Finish
                      00229             endm
                      00230             
                      00231 ;TransferLog macro   addrH, addrL
                      00232         
                      00233 
                      00234 incf_BCD    macro   BCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00235         local ones, endBCD
                      00236         movff   BCD, temp
                      00237         
                      00238         ;process ones digit
                      00239         movlw   0x0f
                      00240         andwf   temp
                      00241         movlw   d'9'
                      00242         
                      00243         ;skip if ones digit is 9
                      00244         cpfseq  temp
                      00245         goto    ones
                      00246         
                      00247         movlw   b'00010000'
                      00248         addwf   BCD
                      00249         movlw   0xf0
                      00250         andwf   BCD
                      00251         movlw   0xa0
                      00252         cpfslt  BCD
                      00253         
                      00254         clrf    BCD
                      00255         goto    endBCD
                      00256         
                      00257 ones
                      00258         incf    BCD
                      00259         goto    endBCD
                      00260 endBCD
                      00261         nop
                      00262         endm
                      00263         
                      00264 SUB16   macro   x, y        ; does not modify x nor y
                      00265         local   RESULTS
                      00266         movff   y+1, WREG   ; move high y into working register
                      00267         subwf   x+1, 0      ; do subtraction xH - yH => w
                      00268         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00269         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                      00270         
                      00271         movff   y+0, WREG
                      00272         subwf   x+0, 0  
                      00273 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00274         endm
                      00275 
                      00276 WriteRTC    macro
                      00277         movff   tens_digit, WREG
                      00278         call    WR_DATA
                      00279         movff   ones_digit, WREG
                      00280         call    WR_DATA
                      00281         endm
                      00282 
                      00283 WriteEE macro   word, addH, addL
                      00284         movff   addH, EEADRH        ; High address
                      00285         movff   addL, EEADR         ; Low address
                      00286         movff   word, EEDATA        ; set word
                      00287 
                      00288         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00289         bra     $-2
                      00290 
                      00291         bcf     EECON1, EEPGD       ; Point to data memory
                      00292         bcf     EECON1, CFGS        ; Access EEPROM
                      00293         bsf     EECON1, WREN        ; enable write
                      00294         bcf     INTCON, GIE         ; disable interrupts during write
                      00295         bcf     PIR2, EEIF
                      00296 
                      00297         movlw   0x55
                      00298         movwf   EECON2              ; write 55h
                      00299         movlw   0xaa
                      00300         movwf   EECON2              ; write 0xaa
                      00301         bsf     EECON1, WR          ; begin write
                      00302         btfsc   EECON1, WR
                      00303         bra     $-2
                      00304 
                      00305         bsf     INTCON, GIE         ; enable interrupts after write
                      00306         bcf     EECON1, WREN        ; disable writes
                      00307         endm
                      00308 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 READEE  macro   file, addH, addL
                      00310         movff   addH, EEADRH        ; read to high
                      00311         movff   addL, EEADR         ; read to low
                      00312         bcf     EECON1, EEPGD       ; point to data memory
                      00313         bcf     EECON1, CFGS        ; access to EEPROM
                      00314         bsf     EECON1, RD          ; read EEPROM
                      00315         movff   EEDATA, file        ; put data into file
                      00316         endm
                      00317 
                      00318 ChangeMode  macro   ModeId, NextMode
                      00319         local Next, Exit
                      00320 
                      00321         movlw   ModeId              ; poll for mode
                      00322         cpfseq  KEY                 ; check this against key press
                      00323         goto    Exit
                      00324 
                      00325 Next
                      00326         clrf    LATA                ; clear pins before proceeding
                      00327         clrf    LATB
                      00328         clrf    LATC
                      00329         clrf    LATD
                      00330         goto    NextMode
                      00331 
                      00332 Exit
                      00333         nop
                      00334         endm
                      00335 
                      00336 saveContext macro
                      00337     movff   STATUS, temp_S          ; save STATUS first
                      00338     movwf   temp_W                  ; save W
                      00339     endm
                      00340 
                      00341 restoreContext macro
                      00342     swapf   temp_W, 0               ; restore W first
                      00343     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00344     endm
                      00345 ;*******************************************************************************
                      00346 ; reset vector and isrs
                      00347 ;*******************************************************************************
                      00348         ORG     0x000               ; processor reset vector
000000 EF?? F???      00349         goto    INIT                ; go to beginning of program
                      00350 
                      00351         ORG     0x008
000008 EF?? F???      00352         goto    ISR_HIGH
                      00353 
                      00354         ORG     0x018
000018 EF?? F???      00355         goto    ISR_LOW
                      00356 
00001C                00357 ISR_HIGH
                      00358         saveContext
00001C CFD8 F014          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E15               M     movwf   temp_W                  ; save W
                      00359         
                      00360         ; displaying the execution time in seconds
Warning[202]: Argument out of range.  Least significant bits used.
000022 3819           00361         swapf   OP_sec, WREG    ; 100's seconds
000024 6E18           00362         movwf   temp
000026 0E0F           00363         movlw   0x0F
000028 1618           00364         andwf   temp
00002A C018 FFE8      00365         movff   temp, WREG
00002E 0F30           00366         addlw   0x30
000030 EC?? F???      00367         call    WR_DATA
                      00368 
000034 C019 F018      00369         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00370         movlw   0x0F
00003A 1618           00371         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C018 FFE8      00372         movff   temp, WREG      ; W = Temp
000040 0F30           00373         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00374         call    WR_DATA
                      00375         
Warning[202]: Argument out of range.  Least significant bits used.
000046 381A           00376         swapf   OP_INT, WREG    ;1's seconds
000048 6E18           00377         movwf   temp
00004A 0E0F           00378         movlw   0x0f
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004C 1618           00379         andwf   temp
00004E C018 FFE8      00380         movff   temp, WREG
000052 0F30           00381         addlw   0x30
000054 EC?? F???      00382         call    WR_DATA
                      00383 
000058 0E73           00384         movlw   0x73            ; Write 's'
00005A EC?? F???      00385         call    WR_DATA
00005E EC?? F???      00386         call    LCD_L2
                      00387 
                      00388         ;reset timer 
000062 0EC6           00389         movlw   0xc6
000064 6ED7           00390         movwf   TMR0H
000066 0E3E           00391         movlw   0x3e
000068 6ED6           00392         movwf   TMR0L
                      00393                 
                      00394         ;timer interrupt
00006A A4F2           00395         btfss   INTCON, TMR0IF
00006C EF?? F???      00396         goto    END_ISR_HIGH
                      00397         
                      00398         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C01A F018          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1618               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6218               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 261A               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 161A               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 601A               M         cpfslt  OP_INT
                          M         
00008C 6A1A               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A1A               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00399         movlw   d'0'
00009C 621A           00400         cpfseq  OP_INT
00009E EF?? F???      00401         goto    END_ISR_HIGH
                      00402         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C019 F018          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1618               M         andwf   temp
0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6218               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2619               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1619               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6019               M         cpfslt  OP_sec
                          M         
0000BE 6A19               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
                          M         
0000C4                    M ones
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000C4 2A19               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
0000CA 0000               M         nop
                      00403 
0000CC                00404 END_ISR_HIGH
0000CC 94F2           00405         bcf     INTCON, TMR0IF
                      00406         restoreContext
0000CE 3815               M     swapf   temp_W, 0               ; restore W first
0000D0 C014 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00407         retfie
                      00408 
0000D6                00409 ISR_LOW
                      00410         saveContext
0000D6 CFD8 F014          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E15               M     movwf   temp_W                  ; save W
                      00411         ; KEYPAD INTERRUPT
0000DC A0F0           00412         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00413         goto            END_ISR_LOW
                      00414 
                      00415         ;Check operation status
                      00416 ;       movlw           0xff                                    ; If in operation, skip return
                      00417 ;       cpfseq          InExecution
                      00418 ;       goto            END_ISR_LOW
                      00419 
                      00420         ; Process KEY
0000E2 3881           00421         swapf           PORTB, 0                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00422         andlw           0x0f
0000E6 6E13           00423         movwf           KEY_ISR                                 ; Put W into KEY_ISR
0000E8 0EFF           00424         movlw           0xff
0000EA 6220           00425         cpfseq          inExecution
0000EC EF?? F???      00426         goto            END_ISR_LOW
0000F0 0E0C           00427         movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
0000F2 6213           00428         cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000F4 EF?? F???      00429         goto            END_ISR_LOW
0000F8 EF?? F???      00430         goto    EXIT_EXE
                      00431         ; Reset program counter
0000FC 6AFF           00432         clrf            TOSU
0000FE 6AFE           00433         clrf            TOSH
000100 6AFD           00434         clrf            TOSL
                      00435 
000102                00436 END_ISR_LOW
000102 90F0           00437         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00438         restoreContext
000104 3815               M     swapf   temp_W, 0               ; restore W first
000106 C014 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00010A 0010           00439         retfie
                      00440 
                      00441 ;*******************************************************************************
                      00442 ; main
                      00443 ;*******************************************************************************
00010C                00444 INIT
                      00445         ; i/o
00010C 0E00           00446         movlw   b'00000000'
00010E 6E92           00447         movwf   TRISA
000110 0EFF           00448         movlw   b'11111111'
000112 6E93           00449         movwf   TRISB               ; keypad
000114 0E00           00450         movlw   b'00000000'
000116 6E94           00451         movwf   TRISC
000118 0E00           00452         movlw   b'00000000'
00011A 6E95           00453         movwf   TRISD
00011C 0E07           00454         movlw   b'00000111'
00011E 6E96           00455         movwf   TRISE
                      00456 
                      00457         ; clear ports
000120 0E00           00458         movlw   b'00000000'
000122 6E89           00459         movwf   LATA
000124 0E00           00460         movlw   b'00000000'
000126 6E8A           00461         movwf   LATB
000128 0E00           00462         movlw   b'00000000'
00012A 6E8B           00463         movwf   LATC
00012C 0E00           00464         movlw   b'00000000'
00012E 6E8C           00465         movwf   LATD
000130 0E00           00466         movlw   b'00000000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000132 6E8D           00467         movwf   LATE
                      00468         
000134 0E00           00469         movlw   b'00000000'
000136 6EC2           00470         movwf   ADCON0
000138 0EFF           00471         movlw   b'11111111'
00013A 6EC1           00472         movwf   ADCON1
                      00473         
                      00474         ; initializations
00013C EC?? F???      00475         call    InitLCD
                      00476         ConfigLCD
000140 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000142 EC?? F???          M           call      WR_INS
                          M 
000146 0E0C               M           movlw     b'00001100'    ; display on/off
000148 EC?? F???          M           call      WR_INS
00014C 0E01               M           movlw     b'00000001'    ; Clear ram
00014E EC?? F???          M           call      WR_INS
                      00477         
000152 EC?? F???      00478         call    i2c_common_setup
                      00479         
000156 EC?? F???      00480         call    RTC_INIT
00015A EC?? F???      00481         call    ARDUINO_INIT
                      00482         ;COLOUR_INIT
00015E EC?? F???      00483         call    INIT_USART
                      00484 
                      00485         ; interrupts
000162 6AD0           00486         clrf    RCON
000164 6AF2           00487         clrf    INTCON
000166 6AF1           00488         clrf    INTCON2
000168 6AF0           00489         clrf    INTCON3
00016A 8ED0           00490         bsf     RCON, IPEN          ; priority mode
00016C 8EF2           00491         bsf     INTCON, GIEH        ; permit global interrupts
00016E 8CF2           00492         bsf     INTCON, GIEL
000170 8AF1           00493         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000172 8AF2           00494         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000174 84F2           00495         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000176 84F1           00496         bsf     INTCON2, TMR0IP     ; set to high priority
000178 86F0           00497         bsf     INTCON3, INT1IE
00017A 9CF0           00498         bcf     INTCON3, INT1IP
                      00499         
                      00500         ; setting up timer to sychronize with 1 second clock intervals
00017C 9ED5           00501         bcf     T0CON, TMR0ON
00017E 9CD5           00502         bcf     T0CON, T08BIT
000180 9AD5           00503         bcf     T0CON, T0CS
000182 98D5           00504         bcf     T0CON, T0SE
000184 96D5           00505         bcf     T0CON, PSA
000186 94D5           00506         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
000188 82D5           00507         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
00018A 80D5           00508         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00509 
00018C 6A22           00510         clrf    H_EE
00018E 6A23           00511         clrf    L_EE
000190 6A??           00512         clrf    tens_digit
000192 6A??           00513         clrf    ones_digit
                      00514         
000194 6A3F           00515         clrf    DETECTION_VAL
000196 6A40           00516         clrf    ESKA
000198 6A41           00517         clrf    ESKA_NOCAP
00019A 6A42           00518         clrf    YOP
00019C 6A43           00519         clrf    YOP_NOCAP
00019E 6A44           00520         clrf    TOTAL_BOTTLES
0001A0 6A45           00521         clrf    COLLECTIONS_COUNT
                      00522         
0001A2 0EF2           00523         movlw     b'11110010'    ; Set required keypad inputs
0001A4 6E93           00524         movwf     TRISB
                      00525         
0001A6 EC?? F???      00526         call    ClrLCD
                      00527         Display Welcome
  0000                    M         local   loop
0001AA 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001AC 6EF8               M         movwf   TBLPTRU
0001AE 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001B0 6EF7               M         movwf   TBLPTRH
0001B2 0E??               M         movlw   low Welcome     ; Move Table<7:0>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001B4 6EF6               M         movwf   TBLPTRL
0001B6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001B8 50F5               M         movf    TABLAT, W
0001BA                    M loop
0001BA EC?? F???          M         call    WR_DATA         ; write to LCD
0001BE 000B               M         tblrd+*                 ; next row in table
0001C0 50F5               M         movf    TABLAT, W
0001C2 E1??               M         bnz     loop
0001C4 EC?? F???      00528         call LCD_L2
                      00529         Display Team
  0000                    M         local   loop
0001C8 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001CA 6EF8               M         movwf   TBLPTRU
0001CC 0E??               M         movlw   high Team       ; Move Table<15:8>
0001CE 6EF7               M         movwf   TBLPTRH
0001D0 0E??               M         movlw   low Team        ; Move Table<7:0>
0001D2 6EF6               M         movwf   TBLPTRL
0001D4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D6 50F5               M         movf    TABLAT, W
0001D8                    M loop
0001D8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001DC 000B               M         tblrd+*                 ; next row in table
0001DE 50F5               M         movf    TABLAT, W
0001E0 E1??               M         bnz     loop
                      00530         
                      00531         Delay50N delayR, 0x28
  0000                    M         local   loop
0001E2 0E28               M         movlw   0x28
0001E4 6E1C               M         movwf   delayR
                          M 
0001E6                    M loop
0001E6 EC?? F???          M         call    Delay50ms
0001EA 2E1C               M         decfsz  delayR
0001EC EF?? F???          M         goto    loop
                      00532 
                      00533 ;*******************************************************************************
                      00534 ; standby mode
                      00535 ;*******************************************************************************
0001F0                00536 STANDBY
0001F0 EC?? F???      00537         call    ClrLCD
                      00538         Display StandBy
  0000                    M         local   loop
0001F4 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F6 6EF8               M         movwf   TBLPTRU
0001F8 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001FA 6EF7               M         movwf   TBLPTRH
0001FC 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FE 6EF6               M         movwf   TBLPTRL
000200 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000202 50F5               M         movf    TABLAT, W
000204                    M loop
000204 EC?? F???          M         call    WR_DATA         ; write to LCD
000208 000B               M         tblrd+*                 ; next row in table
00020A 50F5               M         movf    TABLAT, W
00020C E1??               M         bnz     loop
                      00539 
00020E                00540 HOLD_STANDBY
00020E EC?? F???      00541         call    READ_KEY_TIME
                      00542         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000212 0E00               M         movlw   key1                ; poll for mode
000214 6210               M         cpfseq  KEY                 ; check this against key press
000216 EF?? F???          M         goto    Exit
                          M 
00021A                    M Next
00021A 6A89               M         clrf    LATA                ; clear pins before proceeding
00021C 6A8A               M         clrf    LATB
00021E 6A8B               M         clrf    LATC
000220 6A8C               M         clrf    LATD
000222 EF?? F???          M         goto    COLOUR_TEST
                          M 
000226                    M Exit
000226 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00543         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000228 0E01               M         movlw   key2                ; poll for mode
00022A 6210               M         cpfseq  KEY                 ; check this against key press
00022C EF?? F???          M         goto    Exit
                          M 
000230                    M Next
000230 6A89               M         clrf    LATA                ; clear pins before proceeding
000232 6A8A               M         clrf    LATB
000234 6A8B               M         clrf    LATC
000236 6A8C               M         clrf    LATD
000238 EF?? F???          M         goto    STEP_TEST
                          M 
00023C                    M Exit
00023C 0000               M         nop
                      00544         ChangeMode  key3, IR_TEST
  0000                    M         local Next, Exit
                          M 
00023E 0E02               M         movlw   key3                ; poll for mode
000240 6210               M         cpfseq  KEY                 ; check this against key press
000242 EF?? F???          M         goto    Exit
                          M 
000246                    M Next
000246 6A89               M         clrf    LATA                ; clear pins before proceeding
000248 6A8A               M         clrf    LATB
00024A 6A8B               M         clrf    LATC
00024C 6A8C               M         clrf    LATD
00024E EF?? F???          M         goto    IR_TEST
                          M 
000252                    M Exit
000252 0000               M         nop
                      00545         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000254 0E03               M         movlw   keyA                ; poll for mode
000256 6210               M         cpfseq  KEY                 ; check this against key press
000258 EF?? F???          M         goto    Exit
                          M 
00025C                    M Next
00025C 6A89               M         clrf    LATA                ; clear pins before proceeding
00025E 6A8A               M         clrf    LATB
000260 6A8B               M         clrf    LATC
000262 6A8C               M         clrf    LATD
000264 EF?? F???          M         goto    EXECUTION
                          M 
000268                    M Exit
000268 0000               M         nop
                      00546         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
00026A 0E07               M         movlw   keyB                ; poll for mode
00026C 6210               M         cpfseq  KEY                 ; check this against key press
00026E EF?? F???          M         goto    Exit
                          M 
000272                    M Next
000272 6A89               M         clrf    LATA                ; clear pins before proceeding
000274 6A8A               M         clrf    LATB
000276 6A8B               M         clrf    LATC
000278 6A8C               M         clrf    LATD
00027A EF?? F???          M         goto    LOG
                          M 
00027E                    M Exit
00027E 0000               M         nop
                      00547         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000280 0E0B               M         movlw   keyC                ; poll for mode
000282 6210               M         cpfseq  KEY                 ; check this against key press
000284 EF?? F???          M         goto    Exit
                          M 
000288                    M Next
000288 6A89               M         clrf    LATA                ; clear pins before proceeding
00028A 6A8A               M         clrf    LATB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00028C 6A8B               M         clrf    LATC
00028E 6A8C               M         clrf    LATD
000290 EF?? F???          M         goto    PERM_LOG
                          M 
000294                    M Exit
000294 0000               M         nop
                      00548         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000296 0E0F               M         movlw   keyD                ; poll for mode
000298 6210               M         cpfseq  KEY                 ; check this against key press
00029A EF?? F???          M         goto    Exit
                          M 
00029E                    M Next
00029E 6A89               M         clrf    LATA                ; clear pins before proceeding
0002A0 6A8A               M         clrf    LATB
0002A2 6A8B               M         clrf    LATC
0002A4 6A8C               M         clrf    LATD
0002A6 EF?? F???          M         goto    PC_MODE
                          M 
0002AA                    M Exit
0002AA 0000               M         nop
0002AC D???           00549         bra     HOLD_STANDBY
                      00550         
                      00551 ;*******************************************************************************
                      00552 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00553 ;*******************************************************************************
0002AE                00554 IR_TEST
0002AE 0E63           00555         movlw   'c'
0002B0 B084           00556         btfsc   PORTE, 0
0002B2 0E6E           00557         movlw   'n'
0002B4 EC?? F???      00558         call    WR_DATA
                      00559         Delay50N delayR, 0x14
  0000                    M         local   loop
0002B8 0E14               M         movlw   0x14
0002BA 6E1C               M         movwf   delayR
                          M 
0002BC                    M loop
0002BC EC?? F???          M         call    Delay50ms
0002C0 2E1C               M         decfsz  delayR
0002C2 EF?? F???          M         goto    loop
0002C6 EC?? F???      00560         call    ClrLCD
                      00561         Delay50N delayR, 0x14
  0000                    M         local   loop
0002CA 0E14               M         movlw   0x14
0002CC 6E1C               M         movwf   delayR
                          M 
0002CE                    M loop
0002CE EC?? F???          M         call    Delay50ms
0002D2 2E1C               M         decfsz  delayR
0002D4 EF?? F???          M         goto    loop
Warning[203]: Found opcode in column 1. (bra)
0002D8 D???           00562 bra IR_TEST
                      00563         
0002DA                00564 STEP_TEST
0002DA 0E03           00565         movlw   b'00000011'
0002DC 6E80           00566         movwf   PORTA
0002DE EC?? F???      00567         call    delay5ms
                      00568         
0002E2 0E06           00569         movlw   b'00000110'
0002E4 6E80           00570         movwf   PORTA
0002E6 EC?? F???      00571         call    delay5ms
                      00572         
0002EA 0E0C           00573         movlw   b'00001100'
0002EC 6E80           00574         movwf   PORTA
0002EE EC?? F???      00575         call    delay5ms
                      00576 
0002F2 0E09           00577         movlw   b'00001001'
0002F4 6E80           00578         movwf   PORTA
0002F6 EC?? F???      00579         call    delay5ms
                      00580 
0002FA D???           00581         bra STEP_TEST
                      00582         
0002FC                00583 COLOUR_TEST
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00584 
0002FC                00585 LOOPING
                      00586         Delay50N delayR, 0x28
  0000                    M         local   loop
0002FC 0E28               M         movlw   0x28
0002FE 6E1C               M         movwf   delayR
                          M 
000300                    M loop
000300 EC?? F???          M         call    Delay50ms
000304 2E1C               M         decfsz  delayR
000306 EF?? F???          M         goto    loop
00030A EC?? F???      00587         call    ClrLCD
00030E EC?? F???      00588         call    READ_ARDUINO
                      00589         ;addlw  0x30
000312 EC?? F???      00590         call    WR_DATA
000316 D???           00591         bra LOOPING
                      00592 
                      00593 ;*******************************************************************************
                      00594 ; execution mode
                      00595 ;*******************************************************************************
                      00596         
000318                00597 EXECUTION
000318 EC?? F???      00598         call        ClearEEPROM_21
                      00599         ; save the starting time
00031C EC?? F???      00600         call        SAVE_TIME
                      00601                 
                      00602         ; display
000320 6820           00603         setf        inExecution
000322 EC?? F???      00604         call        ClrLCD
                      00605         Display     Exe1
  0000                    M         local   loop
000326 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000328 6EF8               M         movwf   TBLPTRU
00032A 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00032C 6EF7               M         movwf   TBLPTRH
00032E 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000330 6EF6               M         movwf   TBLPTRL
000332 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000334 50F5               M         movf    TABLAT, W
000336                    M loop
000336 EC?? F???          M         call    WR_DATA         ; write to LCD
00033A 000B               M         tblrd+*                 ; next row in table
00033C 50F5               M         movf    TABLAT, W
00033E E1??               M         bnz     loop
000340 EC?? F???      00606         call        LCD_L2
000344 0EC5           00607         movlw       0xc5                    ; setting up timer
000346 6ED7           00608         movwf       TMR0H
000348 0E44           00609         movlw       0x44    
00034A 6ED6           00610         movwf       TMR0L
                      00611         
00034C 8ED5           00612         bsf         T0CON, TMR0ON           ; turning on timer
                      00613         ; initialize variables
00034E 6A19           00614         clrf        OP_sec
000350 6A1A           00615         clrf        OP_INT
                      00616         
000352 6A40           00617         clrf        ESKA
000354 6A41           00618         clrf        ESKA_NOCAP
000356 6A42           00619         clrf        YOP
000358 6A43           00620         clrf        YOP_NOCAP
00035A 6A44           00621         clrf        TOTAL_BOTTLES
                      00622         
00035C                00623 COLLECTIONS_STEP
00035C 6A45           00624         clrf    COLLECTIONS_COUNT
00035E                00625 ROTATE_90
00035E 0E03           00626         movlw   b'00000011'
000360 6E80           00627         movwf   PORTA
                      00628         
000362 0E06           00629         movlw   b'00000110'
000364 6E80           00630         movwf   PORTA
                      00631         
000366 0E0C           00632         movlw   b'00001100'
000368 6E80           00633         movwf   PORTA
                      00634 
00036A 0E09           00635         movlw   b'00001001'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00036C 6E80           00636         movwf   PORTA
                      00637         
00036E 2A45           00638         incf    COLLECTIONS_COUNT
000370 0E0F           00639         movlw   d'15'
000372 6245           00640         cpfseq  COLLECTIONS_COUNT
000374 D???           00641         bra     ROTATE_90
                      00642         
000376 D???           00643         bra     DETECTIONS
                      00644         
000378                00645 DETECTIONS
                      00646         ; first up, lets give the 0.5 seconds to process its data
                      00647         Delay50N delayR, 0x0a
  0000                    M         local   loop
000378 0E0A               M         movlw   0x0a
00037A 6E1C               M         movwf   delayR
                          M 
00037C                    M loop
00037C EC?? F???          M         call    Delay50ms
000380 2E1C               M         decfsz  delayR
000382 EF?? F???          M         goto    loop
                      00648         
                      00649         ; reading data from arduino - expect: 1 for eska cap, 2 for eska no cap
                      00650         ;                                     3 for yop Cap, 4 for yop no cap
                      00651         ;                                     5 for no bottle, get outta here
                      00652         ;call   READ_ARDUINO
000386 0E03           00653         movlw   d'3'                    ; testing!!!
000388 6E3F           00654         movwf   DETECTION_VAL
                      00655         
                      00656         ; now for handling the comparisions
00038A 0E05           00657         movlw   d'5'
00038C 603F           00658         cpfslt  DETECTION_VAL           ; If DETECTION_VAL = 5, make another collections step
00038E EF?? F???      00659         goto    COLLECTIONS_STEP
                      00660         
                      00661         ; okay we have a bottle, increment toal and see what it is
000392 2A44           00662         incf    TOTAL_BOTTLES
                      00663 
000394 0E04           00664         movlw   d'4'
000396 5C3F           00665         subwf   DETECTION_VAL, 0
000398 E0??           00666         bz      INC_YOPNOCAP
                      00667         
00039A 0E03           00668         movlw   d'3'
00039C 5C3F           00669         subwf   DETECTION_VAL, 0
00039E E0??           00670         bz      INC_YOPCAP
                      00671         
0003A0 0E02           00672         movlw   d'2'
0003A2 5C3F           00673         subwf   DETECTION_VAL, 0
0003A4 E0??           00674         bz      INC_ESKANOCAP
                      00675         
0003A6 0E01           00676         movlw   d'1'
0003A8 5C3F           00677         subwf   DETECTION_VAL, 0
0003AA E0??           00678         bz      INC_ESKACAP
                      00679         
                      00680         ;make some kind of fail safe here.
                      00681         
0003AC                00682 INC_YOPNOCAP
0003AC 2A43           00683         incf    YOP_NOCAP
                      00684         ; fix tray step here
0003AE EF?? F???      00685         goto    TRAY_STEP
                      00686         
0003B2                00687 INC_YOPCAP
0003B2 2A42           00688         incf    YOP
                      00689         ; fix tray step here
0003B4 EF?? F???      00690         goto    TRAY_STEP
                      00691         
0003B8                00692 INC_ESKANOCAP
0003B8 2A41           00693         incf    ESKA_NOCAP
                      00694         ; fix tray step here
0003BA EF?? F???      00695         goto TRAY_STEP
                      00696         
0003BE                00697 INC_ESKACAP
0003BE 2A40           00698         incf    ESKA
                      00699         ; fix tray step here
0003C0 EF?? F???      00700         goto TRAY_STEP
                      00701         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003C4                00702 TRAY_STEP
0003C4                00703 CHECK_DONE
0003C4 0E09           00704         movlw   d'9'
0003C6 6244           00705         cpfseq  TOTAL_BOTTLES
0003C8 EF?? F???      00706         goto    COLLECTIONS_STEP
                      00707         
0003CC D???           00708         bra     EXIT_EXE        
                      00709 
0003CE                00710 HOLD_EXE
0003CE EC?? F???      00711         call        READ_KEY
                      00712         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
0003D2 0E0C               M         movlw   keyS                ; poll for mode
0003D4 6210               M         cpfseq  KEY                 ; check this against key press
0003D6 EF?? F???          M         goto    Exit
                          M 
0003DA                    M Next
0003DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0003DC 6A8A               M         clrf    LATB
0003DE 6A8B               M         clrf    LATC
0003E0 6A8C               M         clrf    LATD
0003E2 EF?? F???          M         goto    EXIT_EXE
                          M 
0003E6                    M Exit
0003E6 0000               M         nop
0003E8 D???           00713         bra         HOLD_EXE
                      00714         
0003EA                00715 EXIT_EXE
                      00716         ; stop timer and save the execution time to eeprom
0003EA 9ED5           00717         bcf         T0CON, TMR0ON
0003EC EC?? F???      00718         call        SAVE_EXE_TIME
                      00719                 
                      00720         ; Clear inExecution flag to stop '*' interrupts
0003F0 6A20           00721         clrf        inExecution
                      00722         
0003F2 C040 FFE8      00723         movff       ESKA, WREG
0003F6 0F30           00724         addlw       0x30
                      00725         WriteEE     WREG, H_EE, L_EE
0003F8 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
0003FC C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000400 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000404 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000406 D???               M         bra     $-2
                          M 
000408 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00040A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00040C 84A6               M         bsf     EECON1, WREN        ; enable write
00040E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000410 98A1               M         bcf     PIR2, EEIF
                          M 
000412 0E55               M         movlw   0x55
000414 6EA7               M         movwf   EECON2              ; write 55h
000416 0EAA               M         movlw   0xaa
000418 6EA7               M         movwf   EECON2              ; write 0xaa
00041A 82A6               M         bsf     EECON1, WR          ; begin write
00041C B2A6               M         btfsc   EECON1, WR
00041E D???               M         bra     $-2
                          M 
000420 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000422 94A6               M         bcf     EECON1, WREN        ; disable writes
000424 2A23           00726         incf        L_EE
                      00727         
000426 C041 FFE8      00728         movff       ESKA_NOCAP, WREG
00042A 0F30           00729         addlw       0x30
                      00730         WriteEE     WREG, H_EE, L_EE
00042C C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000430 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000434 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000438 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00043A D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00043C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00043E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000440 84A6               M         bsf     EECON1, WREN        ; enable write
000442 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000444 98A1               M         bcf     PIR2, EEIF
                          M 
000446 0E55               M         movlw   0x55
000448 6EA7               M         movwf   EECON2              ; write 55h
00044A 0EAA               M         movlw   0xaa
00044C 6EA7               M         movwf   EECON2              ; write 0xaa
00044E 82A6               M         bsf     EECON1, WR          ; begin write
000450 B2A6               M         btfsc   EECON1, WR
000452 D???               M         bra     $-2
                          M 
000454 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000456 94A6               M         bcf     EECON1, WREN        ; disable writes
000458 2A23           00731         incf        L_EE
                      00732         
00045A C042 FFE8      00733         movff       YOP, WREG
00045E 0F30           00734         addlw       0x30
                      00735         WriteEE     WREG, H_EE, L_EE
000460 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000464 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000468 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00046C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00046E D???               M         bra     $-2
                          M 
000470 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000472 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000474 84A6               M         bsf     EECON1, WREN        ; enable write
000476 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000478 98A1               M         bcf     PIR2, EEIF
                          M 
00047A 0E55               M         movlw   0x55
00047C 6EA7               M         movwf   EECON2              ; write 55h
00047E 0EAA               M         movlw   0xaa
000480 6EA7               M         movwf   EECON2              ; write 0xaa
000482 82A6               M         bsf     EECON1, WR          ; begin write
000484 B2A6               M         btfsc   EECON1, WR
000486 D???               M         bra     $-2
                          M 
000488 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00048A 94A6               M         bcf     EECON1, WREN        ; disable writes
00048C 2A23           00736         incf        L_EE
                      00737         
00048E C043 FFE8      00738         movff       YOP_NOCAP, WREG
000492 0F30           00739         addlw       0x30
                      00740         WriteEE     WREG, H_EE, L_EE
000494 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000498 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
00049C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004A0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004A2 D???               M         bra     $-2
                          M 
0004A4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004A6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004A8 84A6               M         bsf     EECON1, WREN        ; enable write
0004AA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004AC 98A1               M         bcf     PIR2, EEIF
                          M 
0004AE 0E55               M         movlw   0x55
0004B0 6EA7               M         movwf   EECON2              ; write 55h
0004B2 0EAA               M         movlw   0xaa
0004B4 6EA7               M         movwf   EECON2              ; write 0xaa
0004B6 82A6               M         bsf     EECON1, WR          ; begin write
0004B8 B2A6               M         btfsc   EECON1, WR
0004BA D???               M         bra     $-2
                          M 
0004BC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004BE 94A6               M         bcf     EECON1, WREN        ; disable writes
0004C0 2A23           00741         incf        L_EE
                      00742         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004C2 EF?? F???      00743         goto        SaveData
                      00744 
0004C6                00745 SaveData
0004C6 EC?? F???      00746         call        ClrLCD
                      00747         Display     SAVE
  0000                    M         local   loop
0004CA 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0004CC 6EF8               M         movwf   TBLPTRU
0004CE 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0004D0 6EF7               M         movwf   TBLPTRH
0004D2 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0004D4 6EF6               M         movwf   TBLPTRL
0004D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004D8 50F5               M         movf    TABLAT, W
0004DA                    M loop
0004DA EC?? F???          M         call    WR_DATA         ; write to LCD
0004DE 000B               M         tblrd+*                 ; next row in table
0004E0 50F5               M         movf    TABLAT, W
0004E2 E1??               M         bnz     loop
                      00748 
0004E4 0E00           00749         movlw       d'0'
0004E6 6E22           00750         movwf       H_EE
0004E8 0EA8           00751         movlw       d'168'              ; take d'168' as last
0004EA 6E23           00752         movwf       L_EE
0004EC 0E00           00753         movlw       d'0'
0004EE 6E25           00754         movwf       tempH_EE
0004F0 0EDC           00755         movlw       d'220'              ; temp for low constant
0004F2 6E26           00756         movwf       tempL_EE
                      00757         
0004F4 6A17           00758         clrf        counter2
0004F6 6A16           00759         clrf        counter
                      00760         
0004F8                00761 ShiftLoop
0004F8 2A16           00762         incf            counter
                      00763         READEE          REG_EE, H_EE, L_EE
0004FA C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004FE C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000502 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000504 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000506 80A6               M         bsf     EECON1, RD          ; read EEPROM
000508 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
00050C 0E15           00764         movlw           d'21'
00050E 2623           00765         addwf           L_EE
                      00766         WriteEE         REG_EE, H_EE, L_EE
000510 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000514 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000518 C024 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
00051C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00051E D???               M         bra     $-2
                          M 
000520 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000522 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000524 84A6               M         bsf     EECON1, WREN        ; enable write
000526 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000528 98A1               M         bcf     PIR2, EEIF
                          M 
00052A 0E55               M         movlw   0x55
00052C 6EA7               M         movwf   EECON2              ; write 55h
00052E 0EAA               M         movlw   0xaa
000530 6EA7               M         movwf   EECON2              ; write 0xaa
000532 82A6               M         bsf     EECON1, WR          ; begin write
000534 B2A6               M         btfsc   EECON1, WR
000536 D???               M         bra     $-2
                          M 
000538 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00053A 94A6               M         bcf     EECON1, WREN        ; disable writes
00053C 0E14           00767         movlw           d'20'
00053E 5E23           00768         subwf           L_EE
000540 0E15           00769         movlw           d'21'
000542 6216           00770         cpfseq          counter
000544 EF?? F???      00771         goto            ShiftLoop
                      00772         
                      00773         ; Set EEPROM address to the previous 21 byte block, and reset temp address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000548 0E2A           00774         movlw           d'42'
00054A 5E23           00775         subwf           L_EE
00054C 0EDC           00776         movlw           d'220'
00054E 6E26           00777         movwf           tempL_EE
000550 6A16           00778         clrf            counter
000552 2A17           00779         incf            counter2
000554 0E09           00780         movlw           d'9'
000556 6217           00781         cpfseq          counter2        ; Skip if 9 shifts were made
000558 EF?? F???      00782         goto            ShiftLoop
                      00783 
00055C EF?? F???      00784         goto            LOG
                      00785 
                      00786 ;*******************************************************************************
                      00787 ; sorting statistics log mode
                      00788 ;*******************************************************************************
                      00789         
000560                00790 LOG
000560 EC?? F???      00791         call    ClrLCD
                      00792         Display Log1
  0000                    M         local   loop
000564 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000566 6EF8               M         movwf   TBLPTRU
000568 0E??               M         movlw   high Log1       ; Move Table<15:8>
00056A 6EF7               M         movwf   TBLPTRH
00056C 0E??               M         movlw   low Log1        ; Move Table<7:0>
00056E 6EF6               M         movwf   TBLPTRL
000570 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000572 50F5               M         movf    TABLAT, W
000574                    M loop
000574 EC?? F???          M         call    WR_DATA         ; write to LCD
000578 000B               M         tblrd+*                 ; next row in table
00057A 50F5               M         movf    TABLAT, W
00057C E1??               M         bnz     loop
                      00793 
                      00794         ; display most recent run data
00057E 0E0A           00795         movlw   d'10'
000580 6E23           00796         movwf   L_EE
000582 EC?? F???      00797         call    DisplayExeTime
                      00798 
000586 EC?? F???      00799         call    LCD_L2
00058A 0E0D           00800         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
00058C 6E23           00801         movwf   L_EE
00058E EC?? F???      00802         call    DispOpSort
                      00803 
000592                00804 HOLD_LOG
000592 EC?? F???      00805         call    READ_KEY
                      00806         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000596 0E07               M         movlw   keyB                ; poll for mode
000598 6210               M         cpfseq  KEY                 ; check this against key press
00059A EF?? F???          M         goto    Exit
                          M 
00059E                    M Next
00059E 6A89               M         clrf    LATA                ; clear pins before proceeding
0005A0 6A8A               M         clrf    LATB
0005A2 6A8B               M         clrf    LATC
0005A4 6A8C               M         clrf    LATD
0005A6 EF?? F???          M         goto    LOG_INFO
                          M 
0005AA                    M Exit
0005AA 0000               M         nop
                      00807         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005AC 0E0D               M         movlw   key0                ; poll for mode
0005AE 6210               M         cpfseq  KEY                 ; check this against key press
0005B0 EF?? F???          M         goto    Exit
                          M 
0005B4                    M Next
0005B4 6A89               M         clrf    LATA                ; clear pins before proceeding
0005B6 6A8A               M         clrf    LATB
0005B8 6A8B               M         clrf    LATC
0005BA 6A8C               M         clrf    LATD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005BC EF?? F???          M         goto    STANDBY
                          M 
0005C0                    M Exit
0005C0 0000               M         nop
0005C2 D???           00808         bra     HOLD_LOG
                      00809 
0005C4                00810 LOG_INFO
0005C4 EC?? F???      00811         call    ClrLCD
0005C8 6A23           00812         clrf    L_EE
0005CA EC?? F???      00813         call    DispOpRTC
                      00814         
0005CE EC?? F???      00815         call    LCD_L2
                      00816         Display LogInfo2
  0000                    M         local   loop
0005D2 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0005D4 6EF8               M         movwf   TBLPTRU
0005D6 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0005D8 6EF7               M         movwf   TBLPTRH
0005DA 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0005DC 6EF6               M         movwf   TBLPTRL
0005DE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005E0 50F5               M         movf    TABLAT, W
0005E2                    M loop
0005E2 EC?? F???          M         call    WR_DATA         ; write to LCD
0005E6 000B               M         tblrd+*                 ; next row in table
0005E8 50F5               M         movf    TABLAT, W
0005EA E1??               M         bnz     loop
0005EC 6A22           00817         clrf    H_EE
0005EE 6A23           00818         clrf    L_EE
                      00819         ;DisplayLog  H_EE, L_EE
0005F0                00820 HOLD_LOG_INFO
0005F0 EC?? F???      00821         call    READ_KEY
                      00822         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005F4 0E0D               M         movlw   key0                ; poll for mode
0005F6 6210               M         cpfseq  KEY                 ; check this against key press
0005F8 EF?? F???          M         goto    Exit
                          M 
0005FC                    M Next
0005FC 6A89               M         clrf    LATA                ; clear pins before proceeding
0005FE 6A8A               M         clrf    LATB
000600 6A8B               M         clrf    LATC
000602 6A8C               M         clrf    LATD
000604 EF?? F???          M         goto    LOG
                          M 
000608                    M Exit
000608 0000               M         nop
00060A D???           00823         bra     HOLD_LOG
                      00824         
                      00825 ;*******************************************************************************
                      00826 ; permanent logs
                      00827 ;*******************************************************************************
                      00828 
00060C                00829 PERM_LOG
00060C EC?? F???      00830         call    ClrLCD
                      00831         Display PermLog1
  0000                    M         local   loop
000610 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000612 6EF8               M         movwf   TBLPTRU
000614 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000616 6EF7               M         movwf   TBLPTRH
000618 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00061A 6EF6               M         movwf   TBLPTRL
00061C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00061E 50F5               M         movf    TABLAT, W
000620                    M loop
000620 EC?? F???          M         call    WR_DATA         ; write to LCD
000624 000B               M         tblrd+*                 ; next row in table
000626 50F5               M         movf    TABLAT, W
000628 E1??               M         bnz     loop
00062A EC?? F???      00832         call    LCD_L2
                      00833         Display PermLog2
  0000                    M         local   loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00062E 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000630 6EF8               M         movwf   TBLPTRU
000632 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000634 6EF7               M         movwf   TBLPTRH
000636 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000638 6EF6               M         movwf   TBLPTRL
00063A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00063C 50F5               M         movf    TABLAT, W
00063E                    M loop
00063E EC?? F???          M         call    WR_DATA         ; write to LCD
000642 000B               M         tblrd+*                 ; next row in table
000644 50F5               M         movf    TABLAT, W
000646 E1??               M         bnz     loop
                      00834         
000648                00835 HOLD_PERM_LOG
000648 EC?? F???      00836         call    READ_KEY
                      00837         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00064C 0E0D               M         movlw   key0                ; poll for mode
00064E 6210               M         cpfseq  KEY                 ; check this against key press
000650 EF?? F???          M         goto    Exit
                          M 
000654                    M Next
000654 6A89               M         clrf    LATA                ; clear pins before proceeding
000656 6A8A               M         clrf    LATB
000658 6A8B               M         clrf    LATC
00065A 6A8C               M         clrf    LATD
00065C EF?? F???          M         goto    STANDBY
                          M 
000660                    M Exit
000660 0000               M         nop
                      00838         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000662 0E00               M         movlw   key1                ; poll for mode
000664 6210               M         cpfseq  KEY                 ; check this against key press
000666 EF?? F???          M         goto    Exit
                          M 
00066A                    M Next
00066A 6A89               M         clrf    LATA                ; clear pins before proceeding
00066C 6A8A               M         clrf    LATB
00066E 6A8B               M         clrf    LATC
000670 6A8C               M         clrf    LATD
000672 EF?? F???          M         goto    PLOG
                          M 
000676                    M Exit
000676 0000               M         nop
                      00839         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000678 0E01               M         movlw   key2                ; poll for mode
00067A 6210               M         cpfseq  KEY                 ; check this against key press
00067C EF?? F???          M         goto    Exit
                          M 
000680                    M Next
000680 6A89               M         clrf    LATA                ; clear pins before proceeding
000682 6A8A               M         clrf    LATB
000684 6A8B               M         clrf    LATC
000686 6A8C               M         clrf    LATD
000688 EF?? F???          M         goto    PLOG
                          M 
00068C                    M Exit
00068C 0000               M         nop
                      00840         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00068E 0E02               M         movlw   key3                ; poll for mode
000690 6210               M         cpfseq  KEY                 ; check this against key press
000692 EF?? F???          M         goto    Exit
                          M 
000696                    M Next
000696 6A89               M         clrf    LATA                ; clear pins before proceeding
000698 6A8A               M         clrf    LATB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00069A 6A8B               M         clrf    LATC
00069C 6A8C               M         clrf    LATD
00069E EF?? F???          M         goto    PLOG
                          M 
0006A2                    M Exit
0006A2 0000               M         nop
                      00841         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006A4 0E04               M         movlw   key4                ; poll for mode
0006A6 6210               M         cpfseq  KEY                 ; check this against key press
0006A8 EF?? F???          M         goto    Exit
                          M 
0006AC                    M Next
0006AC 6A89               M         clrf    LATA                ; clear pins before proceeding
0006AE 6A8A               M         clrf    LATB
0006B0 6A8B               M         clrf    LATC
0006B2 6A8C               M         clrf    LATD
0006B4 EF?? F???          M         goto    PLOG
                          M 
0006B8                    M Exit
0006B8 0000               M         nop
                      00842         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0006BA 0E05               M         movlw   key5                ; poll for mode
0006BC 6210               M         cpfseq  KEY                 ; check this against key press
0006BE EF?? F???          M         goto    Exit
                          M 
0006C2                    M Next
0006C2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006C4 6A8A               M         clrf    LATB
0006C6 6A8B               M         clrf    LATC
0006C8 6A8C               M         clrf    LATD
0006CA EF?? F???          M         goto    PLOG
                          M 
0006CE                    M Exit
0006CE 0000               M         nop
                      00843         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006D0 0E06               M         movlw   key6                ; poll for mode
0006D2 6210               M         cpfseq  KEY                 ; check this against key press
0006D4 EF?? F???          M         goto    Exit
                          M 
0006D8                    M Next
0006D8 6A89               M         clrf    LATA                ; clear pins before proceeding
0006DA 6A8A               M         clrf    LATB
0006DC 6A8B               M         clrf    LATC
0006DE 6A8C               M         clrf    LATD
0006E0 EF?? F???          M         goto    PLOG
                          M 
0006E4                    M Exit
0006E4 0000               M         nop
                      00844         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0006E6 0E08               M         movlw   key7                ; poll for mode
0006E8 6210               M         cpfseq  KEY                 ; check this against key press
0006EA EF?? F???          M         goto    Exit
                          M 
0006EE                    M Next
0006EE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F0 6A8A               M         clrf    LATB
0006F2 6A8B               M         clrf    LATC
0006F4 6A8C               M         clrf    LATD
0006F6 EF?? F???          M         goto    PLOG
                          M 
0006FA                    M Exit
0006FA 0000               M         nop
                      00845         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0006FC 0E09               M         movlw   key8                ; poll for mode
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006FE 6210               M         cpfseq  KEY                 ; check this against key press
000700 EF?? F???          M         goto    Exit
                          M 
000704                    M Next
000704 6A89               M         clrf    LATA                ; clear pins before proceeding
000706 6A8A               M         clrf    LATB
000708 6A8B               M         clrf    LATC
00070A 6A8C               M         clrf    LATD
00070C EF?? F???          M         goto    PLOG
                          M 
000710                    M Exit
000710 0000               M         nop
                      00846         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000712 0E0A               M         movlw   key9                ; poll for mode
000714 6210               M         cpfseq  KEY                 ; check this against key press
000716 EF?? F???          M         goto    Exit
                          M 
00071A                    M Next
00071A 6A89               M         clrf    LATA                ; clear pins before proceeding
00071C 6A8A               M         clrf    LATB
00071E 6A8B               M         clrf    LATC
000720 6A8C               M         clrf    LATD
000722 EF?? F???          M         goto    PLOG
                          M 
000726                    M Exit
000726 0000               M         nop
000728 D???           00847         bra HOLD_PERM_LOG
                      00848         
00072A                00849 PLOG
00072A EC?? F???      00850         call    ClrLCD
                      00851         Display PermLog1
  0000                    M         local   loop
00072E 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000730 6EF8               M         movwf   TBLPTRU
000732 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000734 6EF7               M         movwf   TBLPTRH
000736 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000738 6EF6               M         movwf   TBLPTRL
00073A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00073C 50F5               M         movf    TABLAT, W
00073E                    M loop
00073E EC?? F???          M         call    WR_DATA         ; write to LCD
000742 000B               M         tblrd+*                 ; next row in table
000744 50F5               M         movf    TABLAT, W
000746 E1??               M         bnz     loop
                      00852         
                      00853         ; find the key press value
000748 C010 FFE8      00854         movff   KEY, WREG
00074C 2AE8           00855         incf    WREG        ; W = KEY+1
00074E 6E18           00856         movwf   temp
                      00857         
000750 42E8           00858         rrncf   WREG        ; division by 4
000752 9EE8           00859         bcf     WREG, 7     ; clear last bit, overflow from rotate
000754 42E8           00860         rrncf   WREG        
000756 9EE8           00861         bcf     WREG, 7
000758 5E18           00862         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00075A C018 FFE8      00863         movff   temp, WREG
00075E C018 F012      00864         movff   temp, temp_KEY
000762 0D15           00865         mullw   d'21'       ; indexed as mutliples of 21
                      00866 
000764                00867 displayNum
000764 C012 FFE8      00868         movff   temp_KEY, WREG
000768 0F30           00869         addlw   0x30
00076A EC?? F???      00870         call    WR_DATA
00076E 0E3A           00871         movlw   ":"
000770 EC?? F???      00872         call    WR_DATA
000774 0E20           00873         movlw   " "
000776 EC?? F???      00874         call    WR_DATA
                      00875         
00077A CFF3 F023      00876         movff   PRODL, L_EE
00077E 0E00           00877         movlw   d'0'
000780 2623           00878         addwf   L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00879         READEE  OP_sec, H_EE, L_EE
000782 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000786 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
00078A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00078C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00078E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000790 CFA8 F019          M         movff   EEDATA, OP_sec      ; put data into file
000794 2A23           00880         incf    L_EE
                      00881         READEE  OP_INT, H_EE, L_EE
000796 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
00079A C023 FFA9          M         movff   L_EE, EEADR         ; read to low
00079E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007A0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007A2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007A4 CFA8 F01A          M         movff   EEDATA, OP_INT      ; put data into file
0007A8 2A23           00882         incf    L_EE
0007AA EC?? F???      00883         call    DisplayExeTime
0007AE CFF3 F023      00884         movff   PRODL, L_EE
                      00885         
                      00886         ; reset eeprom to beginning
0007B2 EC?? F???      00887         call    LCD_L2
0007B6 CFF3 F023      00888         movff   PRODL, L_EE
0007BA EC?? F???      00889         call    DispOpRTC
                      00890         
0007BE                00891 HOLD_PLOG
0007BE EC?? F???      00892         call    READ_KEY
                      00893         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0007C2 0E03               M         movlw   keyA                ; poll for mode
0007C4 6210               M         cpfseq  KEY                 ; check this against key press
0007C6 EF?? F???          M         goto    Exit
                          M 
0007CA                    M Next
0007CA 6A89               M         clrf    LATA                ; clear pins before proceeding
0007CC 6A8A               M         clrf    LATB
0007CE 6A8B               M         clrf    LATC
0007D0 6A8C               M         clrf    LATD
0007D2 EF?? F???          M         goto    PLOG_DETAILS
                          M 
0007D6                    M Exit
0007D6 0000               M         nop
                      00894         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007D8 0E0D               M         movlw   key0                ; poll for mode
0007DA 6210               M         cpfseq  KEY                 ; check this against key press
0007DC EF?? F???          M         goto    Exit
                          M 
0007E0                    M Next
0007E0 6A89               M         clrf    LATA                ; clear pins before proceeding
0007E2 6A8A               M         clrf    LATB
0007E4 6A8B               M         clrf    LATC
0007E6 6A8C               M         clrf    LATD
0007E8 EF?? F???          M         goto    PERM_LOG
                          M 
0007EC                    M Exit
0007EC 0000               M         nop
0007EE D???           00895         bra HOLD_PLOG
                      00896         
0007F0                00897 PLOG_DETAILS
0007F0 EC?? F???      00898         call    ClrLCD
                      00899         
                      00900         Display Log1
  0000                    M         local   loop
0007F4 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0007F6 6EF8               M         movwf   TBLPTRU
0007F8 0E??               M         movlw   high Log1       ; Move Table<15:8>
0007FA 6EF7               M         movwf   TBLPTRH
0007FC 0E??               M         movlw   low Log1        ; Move Table<7:0>
0007FE 6EF6               M         movwf   TBLPTRL
000800 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000802 50F5               M         movf    TABLAT, W
000804                    M loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000804 EC?? F???          M         call    WR_DATA         ; write to LCD
000808 000B               M         tblrd+*                 ; next row in table
00080A 50F5               M         movf    TABLAT, W
00080C E1??               M         bnz     loop
00080E EC?? F???      00901         call    DisplayExeTime
                      00902         
000812 EC?? F???      00903         call    LCD_L2
000816 EC?? F???      00904         call    DispOpSort
                      00905         
00081A                00906 HOLD_PLOG_DETAILS
00081A EC?? F???      00907         call    READ_KEY
                      00908         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00081E 0E0D               M         movlw   key0                ; poll for mode
000820 6210               M         cpfseq  KEY                 ; check this against key press
000822 EF?? F???          M         goto    Exit
                          M 
000826                    M Next
000826 6A89               M         clrf    LATA                ; clear pins before proceeding
000828 6A8A               M         clrf    LATB
00082A 6A8B               M         clrf    LATC
00082C 6A8C               M         clrf    LATD
00082E EF?? F???          M         goto    PERM_LOG
                          M 
000832                    M Exit
000832 0000               M         nop
000834 D???           00909         bra HOLD_PLOG_DETAILS
                      00910         
                      00911 ;*******************************************************************************
                      00912 ; pc interface
                      00913 ;*******************************************************************************
                      00914 
000836                00915 PC_MODE
000836 EC?? F???      00916         call    ClrLCD
                      00917         Display PC1
  0000                    M         local   loop
00083A 0E??               M         movlw   upper PC1       ; Move Table<20:16>
00083C 6EF8               M         movwf   TBLPTRU
00083E 0E??               M         movlw   high PC1        ; Move Table<15:8>
000840 6EF7               M         movwf   TBLPTRH
000842 0E??               M         movlw   low PC1         ; Move Table<7:0>
000844 6EF6               M         movwf   TBLPTRL
000846 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000848 50F5               M         movf    TABLAT, W
00084A                    M loop
00084A EC?? F???          M         call    WR_DATA         ; write to LCD
00084E 000B               M         tblrd+*                 ; next row in table
000850 50F5               M         movf    TABLAT, W
000852 E1??               M         bnz     loop
000854 EC?? F???      00918         call    LCD_L2
                      00919         Display PC2
  0000                    M         local   loop
000858 0E??               M         movlw   upper PC2       ; Move Table<20:16>
00085A 6EF8               M         movwf   TBLPTRU
00085C 0E??               M         movlw   high PC2        ; Move Table<15:8>
00085E 6EF7               M         movwf   TBLPTRH
000860 0E??               M         movlw   low PC2         ; Move Table<7:0>
000862 6EF6               M         movwf   TBLPTRL
000864 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000866 50F5               M         movf    TABLAT, W
000868                    M loop
000868 EC?? F???          M         call    WR_DATA         ; write to LCD
00086C 000B               M         tblrd+*                 ; next row in table
00086E 50F5               M         movf    TABLAT, W
000870 E1??               M         bnz     loop
000872 CFF9 F039      00920         movff   PCL, PC_PCL
000876 CFFA F03A      00921         movff   PCLATH, PC_PCLATH
00087A CFFB F03B      00922         movff   PCLATU, PC_PCLATU
                      00923         
00087E                00924 HOLD_PC
00087E EC?? F???      00925         call    READ_KEY
                      00926         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000882 0E0D               M         movlw   key0                ; poll for mode
000884 6210               M         cpfseq  KEY                 ; check this against key press
000886 EF?? F???          M         goto    Exit
                          M 
00088A                    M Next
00088A 6A89               M         clrf    LATA                ; clear pins before proceeding
00088C 6A8A               M         clrf    LATB
00088E 6A8B               M         clrf    LATC
000890 6A8C               M         clrf    LATD
000892 EF?? F???          M         goto    STANDBY
                          M 
000896                    M Exit
000896 0000               M         nop
                      00927         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000898 0E0E               M         movlw   keyH                ; poll for mode
00089A 6210               M         cpfseq  KEY                 ; check this against key press
00089C EF?? F???          M         goto    Exit
                          M 
0008A0                    M Next
0008A0 6A89               M         clrf    LATA                ; clear pins before proceeding
0008A2 6A8A               M         clrf    LATB
0008A4 6A8B               M         clrf    LATC
0008A6 6A8C               M         clrf    LATD
0008A8 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008AC                    M Exit
0008AC 0000               M         nop
0008AE D???           00928         bra     HOLD_PC
                      00929 
0008B0                00930 PC_TRANSFER
0008B0 6838           00931         setf    transferring
0008B2 EC?? F???      00932         call    ClrLCD
                      00933         Display PCTransfer
  0000                    M         local   loop
0008B6 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0008B8 6EF8               M         movwf   TBLPTRU
0008BA 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008BC 6EF7               M         movwf   TBLPTRH
0008BE 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008C0 6EF6               M         movwf   TBLPTRL
0008C2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008C4 50F5               M         movf    TABLAT, W
0008C6                    M loop
0008C6 EC?? F???          M         call    WR_DATA         ; write to LCD
0008CA 000B               M         tblrd+*                 ; next row in table
0008CC 50F5               M         movf    TABLAT, W
0008CE E1??               M         bnz     loop
0008D0 EC?? F???      00934         call    DataUSART
0008D4 6A38           00935         clrf    transferring
0008D6 D???           00936         bra     STANDBY
                      00937         
                      00938 ;*******************************************************************************
                      00939 ; subroutines
                      00940 ;*******************************************************************************
                      00941 
0008D8                00942 ARDUINO_INIT
Warning[203]: Found opcode in column 1. (return)
0008D8 0012           00943 return
                      00944         
0008DA                00945 RTC_INIT
                      00946         ; set sda and scl to high
0008DA 9882           00947         bcf     PORTC, 4
0008DC 9682           00948         bcf     PORTC, 3
0008DE 8894           00949         bsf     TRISC, 4
0008E0 8694           00950         bsf     TRISC, 3
                      00951         
0008E2 EC?? F???      00952         call    INIT_RTC
                      00953         
                      00954         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
0008E6 0012           00955 return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00956         
0008E8                00957 SAVE_TIME   
                      00958         rtc_read    0x02        ; hours
0008E8 0E02               M     movlw   0x02
0008EA 6E??               M     movwf   regaddress
0008EC EC?? F???          M     call    read_rtc
0008F0 C??? FFE8          M     movff   datachar, WREG
0008F4 EC?? F???          M     call    rtc_convert
0008F8 EC?? F???      00959         call    WriteEE_RTC
                      00960         rtc_read    0x01        ; minutes
0008FC 0E01               M     movlw   0x01
0008FE 6E??               M     movwf   regaddress
000900 EC?? F???          M     call    read_rtc
000904 C??? FFE8          M     movff   datachar, WREG
000908 EC?? F???          M     call    rtc_convert
00090C EC?? F???      00961         call    WriteEE_RTC
                      00962         rtc_read    0x06        ; years
000910 0E06               M     movlw   0x06
000912 6E??               M     movwf   regaddress
000914 EC?? F???          M     call    read_rtc
000918 C??? FFE8          M     movff   datachar, WREG
00091C EC?? F???          M     call    rtc_convert
000920 EC?? F???      00963         call    WriteEE_RTC
                      00964         rtc_read    0x05        ; months
000924 0E05               M     movlw   0x05
000926 6E??               M     movwf   regaddress
000928 EC?? F???          M     call    read_rtc
00092C C??? FFE8          M     movff   datachar, WREG
000930 EC?? F???          M     call    rtc_convert
000934 EC?? F???      00965         call    WriteEE_RTC
                      00966         rtc_read    0x04        ; days
000938 0E04               M     movlw   0x04
00093A 6E??               M     movwf   regaddress
00093C EC?? F???          M     call    read_rtc
000940 C??? FFE8          M     movff   datachar, WREG
000944 EC?? F???          M     call    rtc_convert
000948 EC?? F???      00967         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
00094C 0012           00968 return
                      00969         
00094E                00970 SAVE_EXE_TIME
                      00971         
Warning[202]: Argument out of range.  Least significant bits used.
00094E 3819           00972         swapf   OP_sec, WREG    ; 100's seconds
000950 6E18           00973         movwf   temp
000952 0E0F           00974         movlw   0x0F
000954 1618           00975         andwf   temp
000956 C018 FFE8      00976         movff   temp, WREG
00095A 0F30           00977         addlw   0x30    
                      00978         WriteEE WREG, H_EE, L_EE
00095C C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000960 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000964 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000968 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00096A D???               M         bra     $-2
                          M 
00096C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00096E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000970 84A6               M         bsf     EECON1, WREN        ; enable write
000972 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000974 98A1               M         bcf     PIR2, EEIF
                          M 
000976 0E55               M         movlw   0x55
000978 6EA7               M         movwf   EECON2              ; write 55h
00097A 0EAA               M         movlw   0xaa
00097C 6EA7               M         movwf   EECON2              ; write 0xaa
00097E 82A6               M         bsf     EECON1, WR          ; begin write
000980 B2A6               M         btfsc   EECON1, WR
000982 D???               M         bra     $-2
                          M 
000984 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000986 94A6               M         bcf     EECON1, WREN        ; disable writes
000988 2A23           00979         incf    L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00980         
00098A C019 F018      00981         movff   OP_sec, temp    ; 10's seconds
00098E 0E0F           00982         movlw   0x0F
000990 1618           00983         andwf   temp            ; Temp = lower nibble of Op_sec
000992 C018 FFE8      00984         movff   temp, WREG      ; W = Temp
000996 0F30           00985         addlw   0x30            ; Convert to ASCII
                      00986         WriteEE WREG, H_EE, L_EE
000998 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
00099C C023 FFA9          M         movff   L_EE, EEADR         ; Low address
0009A0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009A4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009A6 D???               M         bra     $-2
                          M 
0009A8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009AA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009AC 84A6               M         bsf     EECON1, WREN        ; enable write
0009AE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009B0 98A1               M         bcf     PIR2, EEIF
                          M 
0009B2 0E55               M         movlw   0x55
0009B4 6EA7               M         movwf   EECON2              ; write 55h
0009B6 0EAA               M         movlw   0xaa
0009B8 6EA7               M         movwf   EECON2              ; write 0xaa
0009BA 82A6               M         bsf     EECON1, WR          ; begin write
0009BC B2A6               M         btfsc   EECON1, WR
0009BE D???               M         bra     $-2
                          M 
0009C0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009C2 94A6               M         bcf     EECON1, WREN        ; disable writes
0009C4 2A23           00987         incf    L_EE
                      00988         
Warning[202]: Argument out of range.  Least significant bits used.
0009C6 381A           00989         swapf   OP_INT, WREG    ;1's seconds
0009C8 6E18           00990         movwf   temp
0009CA 0E0F           00991         movlw   0x0f
0009CC 1618           00992         andwf   temp
0009CE C018 FFE8      00993         movff   temp, WREG
0009D2 0F30           00994         addlw   0x30
                      00995         WriteEE WREG, H_EE, L_EE
0009D4 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
0009D8 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
0009DC CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009E0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009E2 D???               M         bra     $-2
                          M 
0009E4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009E6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009E8 84A6               M         bsf     EECON1, WREN        ; enable write
0009EA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009EC 98A1               M         bcf     PIR2, EEIF
                          M 
0009EE 0E55               M         movlw   0x55
0009F0 6EA7               M         movwf   EECON2              ; write 55h
0009F2 0EAA               M         movlw   0xaa
0009F4 6EA7               M         movwf   EECON2              ; write 0xaa
0009F6 82A6               M         bsf     EECON1, WR          ; begin write
0009F8 B2A6               M         btfsc   EECON1, WR
0009FA D???               M         bra     $-2
                          M 
0009FC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009FE 94A6               M         bcf     EECON1, WREN        ; disable writes
000A00 2A23           00996         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000A02 0012           00997 return
                      00998         
                      00999                 
000A04                01000 DISPLAY_RTC
                      01001         ; display data in this format hh/minmin/yy yy/mm/dd
                      01002         rtc_read    0x02            ; 0x02 from DS1307 - hours
000A04 0E02               M     movlw   0x02
000A06 6E??               M     movwf   regaddress
000A08 EC?? F???          M     call    read_rtc
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A0C C??? FFE8          M     movff   datachar, WREG
000A10 EC?? F???          M     call    rtc_convert
000A14 C??? FFE8      01003         movff   tens_digit,WREG
000A18 EC?? F???      01004         call    WR_DATA
000A1C C??? FFE8      01005         movff   ones_digit,WREG
000A20 EC?? F???      01006         call    WR_DATA
000A24 0E68           01007         movlw   "h"
000A26 EC?? F???      01008         call    WR_DATA
                      01009         
                      01010         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000A2A 0E01               M     movlw   0x01
000A2C 6E??               M     movwf   regaddress
000A2E EC?? F???          M     call    read_rtc
000A32 C??? FFE8          M     movff   datachar, WREG
000A36 EC?? F???          M     call    rtc_convert
000A3A C??? FFE8      01011         movff   tens_digit,WREG
000A3E EC?? F???      01012         call    WR_DATA
000A42 C??? FFE8      01013         movff   ones_digit,WREG
000A46 EC?? F???      01014         call    WR_DATA
                      01015         
                      01016         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000A4A 0E00               M     movlw   0x00
000A4C 6E??               M     movwf   regaddress
000A4E EC?? F???          M     call    read_rtc
000A52 C??? FFE8          M     movff   datachar, WREG
000A56 EC?? F???          M     call    rtc_convert
000A5A C??? FFE8      01017         movff   tens_digit,WREG
000A5E EC?? F???      01018         call    WR_DATA
000A62 C??? FFE8      01019         movff   ones_digit,WREG
000A66 EC?? F???      01020         call    WR_DATA
000A6A 0E20           01021         movlw   " "
000A6C EC?? F???      01022         call    WR_DATA
                      01023         
                      01024         rtc_read    0x06            ; 0x06 from DS1307 - years
000A70 0E06               M     movlw   0x06
000A72 6E??               M     movwf   regaddress
000A74 EC?? F???          M     call    read_rtc
000A78 C??? FFE8          M     movff   datachar, WREG
000A7C EC?? F???          M     call    rtc_convert
000A80 C??? FFE8      01025         movff   tens_digit,WREG
000A84 EC?? F???      01026         call    WR_DATA
000A88 C??? FFE8      01027         movff   ones_digit,WREG
000A8C EC?? F???      01028         call    WR_DATA
000A90 0E2F           01029         movlw   "/"
000A92 EC?? F???      01030         call    WR_DATA
                      01031         
                      01032         rtc_read    0x05            ; 0x05 from DS1307 - months
000A96 0E05               M     movlw   0x05
000A98 6E??               M     movwf   regaddress
000A9A EC?? F???          M     call    read_rtc
000A9E C??? FFE8          M     movff   datachar, WREG
000AA2 EC?? F???          M     call    rtc_convert
000AA6 C??? FFE8      01033         movff   tens_digit,WREG
000AAA EC?? F???      01034         call    WR_DATA
000AAE C??? FFE8      01035         movff   ones_digit,WREG
000AB2 EC?? F???      01036         call    WR_DATA
000AB6 0E2F           01037         movlw   "/"
000AB8 EC?? F???      01038         call    WR_DATA
                      01039         
                      01040         rtc_read    0x04            ; 0x04 from DS1307 - days
000ABC 0E04               M     movlw   0x04
000ABE 6E??               M     movwf   regaddress
000AC0 EC?? F???          M     call    read_rtc
000AC4 C??? FFE8          M     movff   datachar, WREG
000AC8 EC?? F???          M     call    rtc_convert
000ACC C??? FFE8      01041         movff   tens_digit,WREG
000AD0 EC?? F???      01042         call    WR_DATA
000AD4 C??? FFE8      01043         movff   ones_digit,WREG
000AD8 EC?? F???      01044         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000ADC 0012           01045 return
                      01046         
000ADE                01047 SET_TIME
                      01048         rtc_resetAll
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000ADE 6A??               M     clrf    databyte
000AE0 0E06               M     movlw   6
000AE2 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000AE4                    M     del_loop0
000AE4 EC?? F???          M     call    write_rtc
000AE8 2E??               M     decfsz  regaddress
000AEA D???               M     bra     del_loop0
000AEC EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01049         
                      01050         rtc_set 0x00,   b'10000000'
000AF0 0E00               M     movlw   0x00
000AF2 6E??               M     movwf   regaddress
000AF4 0E80               M     movlw   b'10000000'
000AF6 6E??               M     movwf   databyte
000AF8 EC?? F???          M     call    write_rtc
                      01051 
                      01052         rtc_set 0x06,   b'00010111'             ; Year 17
000AFC 0E06               M     movlw   0x06
000AFE 6E??               M     movwf   regaddress
000B00 0E17               M     movlw   b'00010111'
000B02 6E??               M     movwf   databyte
000B04 EC?? F???          M     call    write_rtc
                      01053         rtc_set 0x05,   b'00000010'             ; Month 2
000B08 0E05               M     movlw   0x05
000B0A 6E??               M     movwf   regaddress
000B0C 0E02               M     movlw   b'00000010'
000B0E 6E??               M     movwf   databyte
000B10 EC?? F???          M     call    write_rtc
                      01054         rtc_set 0x04,   b'00100101'             ; Date 25
000B14 0E04               M     movlw   0x04
000B16 6E??               M     movwf   regaddress
000B18 0E25               M     movlw   b'00100101'
000B1A 6E??               M     movwf   databyte
000B1C EC?? F???          M     call    write_rtc
                      01055         rtc_set 0x02,   b'00100010'             ; Hours 
000B20 0E02               M     movlw   0x02
000B22 6E??               M     movwf   regaddress
000B24 0E22               M     movlw   b'00100010'
000B26 6E??               M     movwf   databyte
000B28 EC?? F???          M     call    write_rtc
                      01056         rtc_set 0x01,   b'00100101'             ; Minutes 25
000B2C 0E01               M     movlw   0x01
000B2E 6E??               M     movwf   regaddress
000B30 0E25               M     movlw   b'00100101'
000B32 6E??               M     movwf   databyte
000B34 EC?? F???          M     call    write_rtc
                      01057         rtc_set 0x00,   b'00000000'             ; Seconds 0
000B38 0E00               M     movlw   0x00
000B3A 6E??               M     movwf   regaddress
000B3C 0E00               M     movlw   b'00000000'
000B3E 6E??               M     movwf   databyte
000B40 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000B44 0012           01058 return
                      01059         
000B46                01060 INIT_USART
                      01061         
000B46 8E94           01062         bsf     TRISC, 7        ; set RC7=USART RC
000B48 9C94           01063         bcf     TRISC, 6        ; clear RC6=USART TX
                      01064 
000B4A 0E0F           01065         movlw   15              ; baud rate 9600
000B4C 6EAF           01066         movwf   SPBRG
000B4E 6AAC           01067         clrf    TXSTA
                      01068         
000B50 6AAB           01069         clrf    RCSTA
000B52 8EAB           01070         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000B54 88AB           01071         bsf     RCSTA,CREN      ; continous receive
                      01072         
000B56 8AAC           01073         bsf     TXSTA, TXEN     ; transmit enabled
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B58 0012           01074         return
                      01075 
000B5A                01076 DataUSART
000B5A 0E02           01077         movlw   0x02
000B5C EC?? F???      01078         call    USART_WAIT
000B60 0E0D           01079         movlw   0x0D
000B62 EC?? F???      01080         call    USART_WAIT
                      01081         
000B66 6A16           01082         clrf    counter         ; used to cycle through past 9 eeprom logs
000B68 6A17           01083         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01084         
000B6A                01085 TRANSFER_LOGS
000B6A 0E15           01086         movlw   d'21'           ; logs are 21 bits apart
000B6C 0216           01087         mulwf   counter         ; log number one starts at eeprom address 0
000B6E CFF3 F023      01088         movff   PRODL, L_EE     ; low address now points to count X 21
000B72 6A17           01089         clrf    counter2
                      01090         
000B74                01091 TRANSFER_DATA   
                      01092         READEE  WREG, H_EE, L_EE
000B74 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000B78 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000B7C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000B7E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000B80 80A6               M         bsf     EECON1, RD          ; read EEPROM
000B82 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000B86 EC?? F???      01093         call    USART_WAIT      ; transfer bit
000B8A 2A23           01094         incf    L_EE
                      01095         
000B8C 2A17           01096         incf    counter2
000B8E 0E12           01097         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000B90 6217           01098         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000B92 D???           01099         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01100         
000B94 EC?? F???      01101         call    USART_LINE      ; new line because a e s t h e t i c
                      01102         
000B98 2A16           01103         incf    counter
000B9A 0E08           01104         movlw   d'8'            ; we save up to the last 9 permanent logs
000B9C 6216           01105         cpfseq  counter
000B9E D???           01106         bra     TRANSFER_LOGS
                      01107         
000BA0 EC?? F???      01108         call    LCD_L2
                      01109         Display PCComplete
  0000                    M         local   loop
000BA4 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000BA6 6EF8               M         movwf   TBLPTRU
000BA8 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000BAA 6EF7               M         movwf   TBLPTRH
000BAC 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000BAE 6EF6               M         movwf   TBLPTRL
000BB0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000BB2 50F5               M         movf    TABLAT, W
000BB4                    M loop
000BB4 EC?? F???          M         call    WR_DATA         ; write to LCD
000BB8 000B               M         tblrd+*                 ; next row in table
000BBA 50F5               M         movf    TABLAT, W
000BBC E1??               M         bnz     loop
                      01110         Delay50N delayR, 0x28   
  0000                    M         local   loop
000BBE 0E28               M         movlw   0x28
000BC0 6E1C               M         movwf   delayR
                          M 
000BC2                    M loop
000BC2 EC?? F???          M         call    Delay50ms
000BC6 2E1C               M         decfsz  delayR
000BC8 EF?? F???          M         goto    loop
000BCC 0012           01111         return                  ; done transmitting data
                      01112         
000BCE                01113 USART_WAIT
000BCE 6EAD           01114         movwf   TXREG
000BD0 A2AC           01115         btfss   TXSTA,1
000BD2 EF?? F???      01116         goto    $-2
000BD6 0012           01117         return
                      01118 
000BD8                01119 USART_LINE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BD8 0E0A           01120         movlw   0x0A
000BDA EC?? F???      01121         call    USART_WAIT
000BDE 0E0D           01122         movlw   0x0D
000BE0 EC?? F???      01123         call    USART_WAIT
000BE4 0012           01124         return
                      01125         
000BE6                01126 Delay5us
000BE6 0E78           01127         movlw   d'120'
000BE8 6E1D           01128         movwf   d5us
                      01129 
000BEA                01130 loop5us
000BEA 2E1D           01131         decfsz  d5us
000BEC EF?? F???      01132         goto    loop5us
000BF0 0000           01133         nop
000BF2 0012           01134         return
                      01135 
000BF4                01136 Delay200us
000BF4 0EA4           01137         movlw   0xA4
000BF6 6E1E           01138         movwf   d200us
                      01139 
000BF8                01140 loop200us
000BF8 2E1E           01141         decfsz  d200us
000BFA EF?? F???      01142         goto    loop200us
000BFE 0000           01143         nop
000C00 0012           01144         return
                      01145 
000C02                01146 Delay50ms
000C02 0EF9           01147         movlw   0xF9
000C04 6E1F           01148         movwf   d50ms
                      01149 
000C06                01150 loop50ms
000C06 EC?? F???      01151         call    Delay200us
000C0A 2E1F           01152         decfsz  d50ms
                      01153 
000C0C                01154 Cycles
000C0C EF?? F???      01155         goto    loop50ms
000C10 EC?? F???      01156         call    Delay200us
000C14 0012           01157         return
                      01158 
000C16                01159 WriteEE_RTC
                      01160         WriteEE tens_digit, H_EE, L_EE
000C16 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000C1A C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000C1E C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000C22 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C24 D???               M         bra     $-2
                          M 
000C26 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C28 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C2A 84A6               M         bsf     EECON1, WREN        ; enable write
000C2C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C2E 98A1               M         bcf     PIR2, EEIF
                          M 
000C30 0E55               M         movlw   0x55
000C32 6EA7               M         movwf   EECON2              ; write 55h
000C34 0EAA               M         movlw   0xaa
000C36 6EA7               M         movwf   EECON2              ; write 0xaa
000C38 82A6               M         bsf     EECON1, WR          ; begin write
000C3A B2A6               M         btfsc   EECON1, WR
000C3C D???               M         bra     $-2
                          M 
000C3E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C40 94A6               M         bcf     EECON1, WREN        ; disable writes
000C42 2A23           01161         incf    L_EE
                      01162         WriteEE ones_digit, H_EE, L_EE
000C44 C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000C48 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000C4C C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000C50 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C52 D???               M         bra     $-2
                          M 
000C54 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C56 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C58 84A6               M         bsf     EECON1, WREN        ; enable write
000C5A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C5C 98A1               M         bcf     PIR2, EEIF
                          M 
000C5E 0E55               M         movlw   0x55
000C60 6EA7               M         movwf   EECON2              ; write 55h
000C62 0EAA               M         movlw   0xaa
000C64 6EA7               M         movwf   EECON2              ; write 0xaa
000C66 82A6               M         bsf     EECON1, WR          ; begin write
000C68 B2A6               M         btfsc   EECON1, WR
000C6A D???               M         bra     $-2
                          M 
000C6C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C6E 94A6               M         bcf     EECON1, WREN        ; disable writes
000C70 2A23           01163         incf    L_EE
000C72 0012           01164         return
                      01165 
000C74                01166 ClearEEPROM_21
000C74 6A22           01167         clrf    H_EE
000C76 6A23           01168         clrf    L_EE
000C78 6821           01169         setf    clear_EE
000C7A 6A16           01170         clrf    counter
000C7C                01171 ClearNext
                      01172         WriteEE         clear_EE, H_EE, L_EE
000C7C C022 FFAA          M         movff   H_EE, EEADRH        ; High address
000C80 C023 FFA9          M         movff   L_EE, EEADR         ; Low address
000C84 C021 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000C88 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C8A D???               M         bra     $-2
                          M 
000C8C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C8E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C90 84A6               M         bsf     EECON1, WREN        ; enable write
000C92 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C94 98A1               M         bcf     PIR2, EEIF
                          M 
000C96 0E55               M         movlw   0x55
000C98 6EA7               M         movwf   EECON2              ; write 55h
000C9A 0EAA               M         movlw   0xaa
000C9C 6EA7               M         movwf   EECON2              ; write 0xaa
000C9E 82A6               M         bsf     EECON1, WR          ; begin write
000CA0 B2A6               M         btfsc   EECON1, WR
000CA2 D???               M         bra     $-2
                          M 
000CA4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CA6 94A6               M         bcf     EECON1, WREN        ; disable writes
000CA8 2A16           01173         incf            counter
000CAA 2A23           01174         incf            L_EE
000CAC 0E15           01175         movlw           d'21'
000CAE 6216           01176         cpfseq          counter
000CB0 EF?? F???      01177         goto            ClearNext
000CB4 6A22           01178         clrf            H_EE
000CB6 6A23           01179         clrf            L_EE
000CB8 0012           01180         return
                      01181         
000CBA                01182 READ_KEY
000CBA A281           01183         btfss   PORTB, 1        ; check for keypad interrupt
000CBC EF?? F???      01184         goto    READ_KEY
000CC0 3881           01185         swapf   PORTB, W
000CC2 0B0F           01186         andlw   0x0F
000CC4 6E10           01187         movwf   KEY
000CC6 B281           01188         btfsc   PORTB, 1
000CC8 EF?? F???      01189         goto    $-2
000CCC 0012           01190         return
                      01191 
000CCE                01192 READ_KEY_TIME
000CCE EC?? F???      01193         call        LCD_L2          ; go to second line to print RTC
                      01194 
                      01195         ; display the time
000CD2 EC?? F???      01196         call    DISPLAY_RTC
                      01197 
000CD6 A281           01198         btfss       PORTB, 1    ; keypad interrupt
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CD8 EF?? F???      01199         goto        READ_KEY_TIME
000CDC 3881           01200         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000CDE 0B0F           01201         andlw       0x0F        ; only want W3:0
000CE0 6E10           01202         movwf       KEY         ; write this value to the KEY
000CE2 B281           01203         btfsc       PORTB, 1    ; wait for release
000CE4 EF?? F???      01204         goto        $-2         ; go back one instruction
000CE8 0012           01205         return
                      01206 
000CEA                01207 DisplayExeTime
                      01208         READEE  REG_EE, H_EE, L_EE
000CEA C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CEE C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000CF2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CF4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CF6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CF8 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000CFC 0EFF           01209         movlw   0xFF
000CFE 6224           01210         cpfseq  REG_EE
000D00 EF?? F???      01211         goto    NoSkipDispExeTime
                      01212         Display NoData
  0000                    M         local   loop
000D04 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D06 6EF8               M         movwf   TBLPTRU
000D08 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D0A 6EF7               M         movwf   TBLPTRH
000D0C 0E??               M         movlw   low NoData      ; Move Table<7:0>
000D0E 6EF6               M         movwf   TBLPTRL
000D10 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D12 50F5               M         movf    TABLAT, W
000D14                    M loop
000D14 EC?? F???          M         call    WR_DATA         ; write to LCD
000D18 000B               M         tblrd+*                 ; next row in table
000D1A 50F5               M         movf    TABLAT, W
000D1C E1??               M         bnz     loop
000D1E 0EFF           01213         movlw   0xFF
000D20 6024           01214         cpfslt  REG_EE
000D22 EF?? F???      01215         goto    SkipDispExeTime
000D26 0012           01216         return
                      01217 
000D28                01218 NoSkipDispExeTime
                      01219         READEE  WREG, H_EE, L_EE
000D28 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D2C C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000D30 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D32 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D34 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D36 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D3A EC?? F???      01220         call    WR_DATA
000D3E 2A23           01221         incf    L_EE
                      01222         
                      01223         READEE  WREG, H_EE, L_EE
000D40 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D44 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000D48 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D4A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D4C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D4E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D52 EC?? F???      01224         call    WR_DATA
000D56 2A23           01225         incf    L_EE
                      01226         
                      01227         READEE  WREG, H_EE, L_EE
000D58 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D5C C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000D60 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D62 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D64 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D66 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D6A EC?? F???      01228         call    WR_DATA
000D6E 2A23           01229         incf    L_EE
                      01230 
000D70 0E73           01231         movlw   0x73            ; Write 's'
000D72 EC?? F???      01232         call    WR_DATA
000D76 EC?? F???      01233         call    LCD_L2
000D7A                01234 SkipDispExeTime
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D7A 0012           01235         return
                      01236 
000D7C                01237 DispOpSort
                      01238         READEE  REG_EE, H_EE, L_EE
000D7C C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D80 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000D84 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D86 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D88 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D8A CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000D8E 0EFF           01239         movlw   0xff
000D90 6224           01240         cpfseq  REG_EE
000D92 EF?? F???      01241         goto    NoSkipDispOpSort
                      01242         Display NoData
  0000                    M         local   loop
000D96 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D98 6EF8               M         movwf   TBLPTRU
000D9A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D9C 6EF7               M         movwf   TBLPTRH
000D9E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000DA0 6EF6               M         movwf   TBLPTRL
000DA2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000DA4 50F5               M         movf    TABLAT, W
000DA6                    M loop
000DA6 EC?? F???          M         call    WR_DATA         ; write to LCD
000DAA 000B               M         tblrd+*                 ; next row in table
000DAC 50F5               M         movf    TABLAT, W
000DAE E1??               M         bnz     loop
000DB0 0EFF           01243         movlw   0xff
000DB2 6024           01244         cpfslt  REG_EE
000DB4 EF?? F???      01245         goto    SkipDispOpSort
                      01246 
000DB8                01247 NoSkipDispOpSort
000DB8 0E61           01248         movlw   "a"
000DBA EC?? F???      01249         call    WR_DATA
                      01250         
                      01251         READEE  REG_EE, H_EE, L_EE
000DBE C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DC2 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000DC6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DC8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DCA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DCC CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000DD0 C024 FFE8      01252         movff   REG_EE, WREG
000DD4 EC?? F???      01253         call    WR_DATA
000DD8 2A23           01254         incf    L_EE
                      01255         
000DDA 0E20           01256         movlw   " "
000DDC EC?? F???      01257         call    WR_DATA
                      01258         
000DE0 0E62           01259         movlw   "b"
000DE2 EC?? F???      01260         call    WR_DATA
                      01261         
                      01262         READEE  REG_EE, H_EE, L_EE
000DE6 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DEA C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000DEE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DF0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DF2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DF4 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000DF8 C024 FFE8      01263         movff   REG_EE, WREG
000DFC EC?? F???      01264         call    WR_DATA
000E00 2A23           01265         incf    L_EE
                      01266         
000E02 0E20           01267         movlw   " "
000E04 EC?? F???      01268         call    WR_DATA
                      01269         
000E08 0E63           01270         movlw   "c"
000E0A EC?? F???      01271         call    WR_DATA
                      01272         
                      01273         READEE  REG_EE, H_EE, L_EE
000E0E C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E12 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E16 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E18 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E1A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E1C CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000E20 C024 FFE8      01274         movff   REG_EE, WREG
000E24 EC?? F???      01275         call    WR_DATA
000E28 2A23           01276         incf    L_EE
                      01277         
000E2A 0E20           01278         movlw   " "
000E2C EC?? F???      01279         call    WR_DATA
                      01280         
000E30 0E64           01281         movlw   "d"
000E32 EC?? F???      01282         call    WR_DATA
                      01283         
                      01284         READEE  REG_EE, H_EE, L_EE
000E36 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E3A C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E3E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E40 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E42 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E44 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000E48 C024 FFE8      01285         movff   REG_EE, WREG
000E4C EC?? F???      01286         call    WR_DATA
000E50 2A23           01287         incf    L_EE
                      01288 
000E52                01289 SkipDispOpSort
000E52 0012           01290         return
                      01291         
000E54                01292 DispOpRTC
                      01293         READEE  REG_EE, H_EE, L_EE
000E54 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E58 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E5C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E5E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E60 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E62 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000E66 0EFF           01294         movlw   0xff
000E68 6224           01295         cpfseq  REG_EE
000E6A EF?? F???      01296         goto    NoSkipDispOpRTC
                      01297         Display NoData
  0000                    M         local   loop
000E6E 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E70 6EF8               M         movwf   TBLPTRU
000E72 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E74 6EF7               M         movwf   TBLPTRH
000E76 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E78 6EF6               M         movwf   TBLPTRL
000E7A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E7C 50F5               M         movf    TABLAT, W
000E7E                    M loop
000E7E EC?? F???          M         call    WR_DATA         ; write to LCD
000E82 000B               M         tblrd+*                 ; next row in table
000E84 50F5               M         movf    TABLAT, W
000E86 E1??               M         bnz     loop
000E88 0EFF           01298         movlw   0xff
000E8A 6024           01299         cpfslt  REG_EE
000E8C EF?? F???      01300         goto    SkipDispOpRTC
                      01301 
000E90                01302 NoSkipDispOpRTC
                      01303         READEE  REG_EE, H_EE, L_EE
000E90 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E94 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000E98 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E9A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E9C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E9E CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000EA2 C024 FFE8      01304         movff   REG_EE, WREG
000EA6 EC?? F???      01305         call    WR_DATA
000EAA 2A23           01306         incf    L_EE
                      01307         
                      01308         READEE  REG_EE, H_EE, L_EE
000EAC C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EB0 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000EB4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EB6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  13:10:56         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EB8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EBA CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000EBE C024 FFE8      01309         movff   REG_EE, WREG
000EC2 EC?? F???      01310         call    WR_DATA
000EC6 2A23           01311         incf    L_EE
                      01312 
000EC8 0E68           01313         movlw   "h"
000ECA EC?? F???      01314         call    WR_DATA
                      01315         
000ECE EC?? F???      01316         call    DispOpRTC_Helper
                      01317         
000ED2 0E20           01318         movlw   " "
000ED4 EC?? F???      01319         call    WR_DATA
                      01320         
000ED8 EC?? F???      01321         call    DispOpRTC_Helper
000EDC 0E2F           01322         movlw   "/"
000EDE EC?? F???      01323         call    WR_DATA
                      01324 
000EE2 EC?? F???      01325         call    DispOpRTC_Helper
000EE6 0E2F           01326         movlw   "/"
000EE8 EC?? F???      01327         call    WR_DATA
000EEC EC?? F???      01328         call    DispOpRTC_Helper
000EF0                01329 SkipDispOpRTC
000EF0 0012           01330                 return
000EF2                01331 DispOpRTC_Helper
                      01332         READEE          REG_EE, H_EE, L_EE
000EF2 C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EF6 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000EFA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EFC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EFE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F00 CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000F04 C024 FFE8      01333         movff           REG_EE, WREG
000F08 EC?? F???      01334         call            WR_DATA
000F0C 2A23           01335         incf            L_EE
                      01336         READEE          REG_EE, H_EE, L_EE
000F0E C022 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F12 C023 FFA9          M         movff   L_EE, EEADR         ; read to low
000F16 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F18 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F1A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F1C CFA8 F024          M         movff   EEDATA, REG_EE      ; put data into file
000F20 C024 FFE8      01337         movff           REG_EE, WREG
000F24 EC?? F???      01338         call            WR_DATA
000F28 2A23           01339         incf            L_EE
000F2A 0012           01340         return
Warning[205]: Found directive in column 1. (end)
                      01341 end

Errors   :     0
Warnings :    42 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

