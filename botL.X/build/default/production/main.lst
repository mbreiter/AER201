MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movf    datachar,w
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xf6 ; Timing Register (0x01), 24ms (0xf6) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   data_colourL, clear+0
                      00085         movff   data_colourH, clear+1
                      00086         ;Send acknowledgement of data reception
                      00087 ;       movff   datachar, clear+0
                      00088 ;       COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00089 ;       movff   datachar, clear+1
                      00090                 
                      00091         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00092         movff   data_colourL, red+0
                      00093         movff   data_colourH, red+1
                      00094         
                      00095 ;       movff   datachar, red+0
                      00096 ;       COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00097 ;       movff   datachar, red+1
                      00098         
                      00099         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00100         movff   data_colourL, green+0
                      00101         movff   data_colourH, green+1
                      00102 ;       movff   datachar, green+0
                      00103 ;       COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00104 ;       movff   datachar, green+1
                      00105         
                      00106         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00107         movff   data_colourL, blue+0
                      00108         movff   data_colourH, blue+1
                      00109 ;       movff   datachar, blue+0
                      00110 ;       COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00111 ;       movff   datachar, blue+1
                      00112     endm
                      00113     
                      00019 
                      00020     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00021     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00022     CONFIG WDT = OFF, WDTPS = 32768
                      00023     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00024     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00025     CONFIG DEBUG = ON
                      00026     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00027     CONFIG CPB = OFF, CPD = OFF
                      00028     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00029     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00030     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00031     CONFIG EBTRB = OFF
                      00032 
                      00033 ;*******************************************************************************
                      00034 ; variable and constants
                      00035 ;*******************************************************************************
                      00036     CODE
                      00037             
                      00038     cblock 0x00
  00000000            00039         key1
  00000001            00040         key2
  00000002            00041         key3
  00000003            00042         keyA
  00000004            00043         key4
  00000005            00044         key5
  00000006            00045         key6
  00000007            00046         keyB
  00000008            00047         key7
  00000009            00048         key8
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000A            00049         key9
  0000000B            00050         keyC
  0000000C            00051         keyS
  0000000D            00052         key0
  0000000E            00053         keyH
  0000000F            00054         keyD
  00000010            00055         KEY
  00000011            00056         temp_KEY
  00000012            00057         KEY_ISR
  00000013            00058         temp_S  
  00000014            00059         temp_W
  00000015            00060         counter
  00000016            00061         counter2
  00000017            00062         temp
  00000018            00063         OP_sec
  00000019            00064         OP_INT
  0000001A            00065         temp_ISR
  0000001B            00066         delayR
  0000001C            00067         d5us
  0000001D            00068         d200us
  0000001E            00069         d50ms
  0000001F            00070         inExecution
  00000020            00071         clear_EE
  00000021            00072         H_EE    
  00000022            00073         L_EE    
  00000023            00074         REG_EE  
  00000024            00075         tempH_EE
  00000025            00076         tempL_EE
  00000026            00077         tempL_EEC
  00000027            00078         MAX_EE   
  00000028            00079         READ_EE
  00000029            00080         last_log
  0000002A            00081         startHt
  0000002B            00082         startHo
  0000002C            00083         startMt
  0000002D            00084         startMo
  0000002E            00085         endHt
  0000002F            00086         endHo
  00000030            00087         endMt
  00000031            00088         endMo
  00000032            00089         LED_Count
  00000033            00090         SkipCount
  00000034            00091         exe_sec
  00000035            00092         exe_int
  00000036            00093         timer_H
  00000037            00094         timer_L
  00000038            00095         convert_buffer
  00000039            00096         transferring
  0000003A            00097         PC_PCL
  0000003B            00098         PC_PCLATH
  0000003C            00099         PC_PCLATU
  0000003D            00100         TIMCNT
  0000003E            00101         CPCNT
  0000003F            00102         TDATA
  00000040            00103         ESKA
  00000041            00104         ESKA_CAP
  00000042            00105         YOP
  00000043            00106         YOP_CAP
  00000044            00107         CLEAR:2
  00000046            00108         RED:2
  00000048            00109         GREEN:2
  0000004A            00110         BLUE:2
  0000004C            00111         temp_colour:2
                      00112     endc
                      00113     
  0000                00114     extern tens_digit, ones_digit
                      00115     
                      00116 ;*******************************************************************************
                      00117 ; tables
                      00118 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00119     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00120     Team        db          "mr hl hg", 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00121     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00122     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00123     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00124     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00125     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00126     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00127     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00128     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00129     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00130     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00131     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00132     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00133     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Exe_Time)
00009E 6954 656D 203A 00134     Exe_Time    db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00135     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00136     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00137     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00138     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00139         
                      00140 ;*******************************************************************************
                      00141 ; macros
                      00142 ;*******************************************************************************
                      00143 
                      00144 TransferTable macro table
                      00145         local loop
                      00146         
                      00147         movlw   upper table
                      00148         movwf   TBLPTRU
                      00149         movlw   high table
                      00150         movwf   TBLPTRH
                      00151         movlw   low table
                      00152         movwf   TBLPTRL
                      00153         tblrd*
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00154         movff   TABLAT, WREG
                      00155 loop
                      00156         call    USART_WAIT
                      00157         tblrd+*
                      00158         movff   TABLAT, WREG
                      00159         bnz     loop
                      00160         endm
                      00161         
                      00162 ConfigLCD   macro
                      00163           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00164           call      WR_INS
                      00165 
                      00166           movlw     b'00001100'    ; display on/off
                      00167           call      WR_INS
                      00168          ; movlw     B'00000110'    ; Entry mode
                      00169          ; call      WR_INS
                      00170           movlw     b'00000001'    ; Clear ram
                      00171           call      WR_INS
                      00172           endm
                      00173         
                      00174 movMSB  macro   port
                      00175         andlw   0xF0
                      00176         iorwf   port, f
                      00177         iorlw   0x0F
                      00178         andwf   port, f
                      00179         endm
                      00180 
                      00181 Delay50N macro count, N
                      00182         local   loop
                      00183         movlw   N
                      00184         movwf   count
                      00185 
                      00186 loop
                      00187         call    Delay50ms
                      00188         decfsz  count
                      00189         goto    loop
                      00190         endm
                      00191 
                      00192 Display macro   Message
                      00193         local   loop
                      00194         movlw   upper Message   ; Move Table<20:16>
                      00195         movwf   TBLPTRU
                      00196         movlw   high Message    ; Move Table<15:8>
                      00197         movwf   TBLPTRH
                      00198         movlw   low Message     ; Move Table<7:0>
                      00199         movwf   TBLPTRL
                      00200         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00201         movf    TABLAT, W
                      00202 loop
                      00203         call    WR_DATA         ; write to LCD
                      00204         tblrd+*                 ; next row in table
                      00205         movf    TABLAT, W
                      00206         bnz     loop
                      00207         endm
                      00208 
                      00209 DisplayLog  macro   addrH, addrL
                      00210             local   Again, Finish
                      00211             
                      00212             clrf    SkipCount
                      00213             clrf    MAX_EE
                      00214 
                      00215             ; Check if there is No Data first
                      00216             READEE      REG_EE, addrH, addrL
                      00217             movlw       0xFF
                      00218             cpfseq      REG_EE
                      00219             goto        Again
                      00220             Display     NoData
                      00221             goto        Finish
                      00222 Again
                      00223             ; Put a space every 3 Writes
                      00224             movlw       d'3'
                      00225             cpfslt      SkipCount
                      00226             cpfslt      MAX_EE
                      00227             goto        Finish
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00228 
                      00229             ; read EEPROM
                      00230             READEE      REG_EE, addrH, addrL
                      00231             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00232             goto        Finish
                      00233 Finish
                      00234             endm
                      00235             
                      00236 ;TransferLog macro   addrH, addrL
                      00237         
                      00238 
                      00239 incf_BCD    macro   BCD
                      00240         local ones, endBCD
                      00241         movff   BCD, temp
                      00242         
                      00243         ;process ones digit
                      00244         movlw   0x0f
                      00245         andwf   temp
                      00246         movlw   d'9'
                      00247         
                      00248         ;skip if ones digit is 9
                      00249         cpfseq  temp
                      00250         goto    ones
                      00251         
                      00252         movlw   b'00010000'
                      00253         addwf   BCD
                      00254         movlw   0xf0
                      00255         andwf   BCD
                      00256         movlw   0xa0
                      00257         cpfslt  BCD
                      00258         
                      00259         clrf    BCD
                      00260         goto    endBCD
                      00261         
                      00262 ones
                      00263         incf    BCD
                      00264         goto    endBCD
                      00265 endBCD
                      00266         nop
                      00267         endm
                      00268         
                      00269 SUB16   macro   x, y        ; does not modify x nor y
                      00270         local RESULTS
                      00271         movf    y+1, WREG   ; move high y into working register
                      00272         subwf   x+1, 0      ; do subtraction x - w => w
                      00273         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00274         goto    RESULTS     ; if it is, need to check lower bytes
                      00275         
                      00276         movf    y, WREG
                      00277         subwf   x, 0    
                      00278 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00279         endm
                      00280 
                      00281 WriteRTC    macro
                      00282         movff   tens_digit, WREG
                      00283         call    WR_DATA
                      00284         movff   ones_digit, WREG
                      00285         call    WR_DATA
                      00286         endm
                      00287 
                      00288 WriteEE macro   word, addH, addL
                      00289         movff   addH, EEADRH        ; High address
                      00290         movff   addL, EEADR         ; Low address
                      00291         movff   word, EEDATA        ; set word
                      00292 
                      00293         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00294         bra     $-2
                      00295 
                      00296         bcf     EECON1, EEPGD       ; Point to data memory
                      00297         bcf     EECON1, CFGS        ; Access EEPROM
                      00298         bsf     EECON1, WREN        ; enable write
                      00299         bcf     INTCON, GIE         ; disable interrupts during write
                      00300         bcf     PIR2, EEIF
                      00301 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00302         movlw   0x55
                      00303         movwf   EECON2              ; write 55h
                      00304         movlw   0xaa
                      00305         movwf   EECON2              ; write 0xaa
                      00306         bsf     EECON1, WR          ; begin write
                      00307         btfsc   EECON1, WR
                      00308         bra     $-2
                      00309 
                      00310         bsf     INTCON, GIE         ; enable interrupts after write
                      00311         bcf     EECON1, WREN        ; disable writes
                      00312         endm
                      00313 
                      00314 READEE  macro   file, addH, addL
                      00315         movff   addH, EEADRH        ; read to high
                      00316         movff   addL, EEADR         ; read to low
                      00317         bcf     EECON1, EEPGD       ; point to data memory
                      00318         bcf     EECON1, CFGS        ; access to EEPROM
                      00319         bsf     EECON1, RD          ; read EEPROM
                      00320         movff   EEDATA, file        ; put data into file
                      00321         endm
                      00322 
                      00323 ChangeMode  macro   ModeId, NextMode
                      00324         local Next, Exit
                      00325 
                      00326         movlw   ModeId              ; poll for mode
                      00327         cpfseq  KEY                 ; check this against key press
                      00328         goto    Exit
                      00329 
                      00330 Next
                      00331         clrf    LATA                ; clear pins before proceeding
                      00332         clrf    LATB
                      00333         clrf    LATC
                      00334         clrf    LATD
                      00335         goto    NextMode
                      00336 
                      00337 Exit
                      00338         nop
                      00339         endm
                      00340 
                      00341 saveContext macro
                      00342     movff   STATUS, temp_S          ; save STATUS first
                      00343     movwf   temp_W                  ; save W
                      00344     endm
                      00345 
                      00346 restoreContext macro
                      00347     swapf   temp_W, W               ; restore W first
                      00348     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00349     endm
                      00350 ;*******************************************************************************
                      00351 ; reset vector and isrs
                      00352 ;*******************************************************************************
                      00353         ORG     0x000               ; processor reset vector
000000 EF?? F???      00354         goto    INIT                ; go to beginning of program
                      00355 
                      00356         ORG     0x008
000008 EF?? F???      00357         goto    ISR_HIGH
                      00358 
                      00359         ORG     0x018
000018 EF?? F???      00360         goto    ISR_LOW
                      00361 
00001C                00362 ISR_HIGH
                      00363         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00364         
                      00365         ; displaying the execution time in seconds
Warning[202]: Argument out of range.  Least significant bits used.
000022 3818           00366         swapf   OP_sec, WREG    ; 100's seconds
000024 6E17           00367         movwf   temp
000026 0E0F           00368         movlw   0x0F
000028 1617           00369         andwf   temp
00002A C017 FFE8      00370         movff   temp, WREG
00002E 0F30           00371         addlw   0x30
000030 EC?? F???      00372         call    WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00373 
000034 C018 F017      00374         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00375         movlw   0x0F
00003A 1617           00376         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C017 FFE8      00377         movff   temp, WREG      ; W = Temp
000040 0F30           00378         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00379         call    WR_DATA
                      00380         
Warning[202]: Argument out of range.  Least significant bits used.
000046 3819           00381         swapf   OP_INT, WREG    ;1's seconds
000048 6E17           00382         movwf   temp
00004A 0E0F           00383         movlw   0x0f
00004C 1617           00384         andwf   temp
00004E C017 FFE8      00385         movff   temp, WREG
000052 0F30           00386         addlw   0x30
000054 EC?? F???      00387         call    WR_DATA
                      00388 
000058 0E73           00389         movlw   0x73            ; Write 's'
00005A EC?? F???      00390         call    WR_DATA
00005E EC?? F???      00391         call    LCD_L2
                      00392 
                      00393         ;reset timer 
000062 0EC6           00394         movlw   0xc6
000064 6ED7           00395         movwf   TMR0H
000066 0E3E           00396         movlw   0x3e
000068 6ED6           00397         movwf   TMR0L
                      00398                 
                      00399         ;timer interrupt
00006A A4F2           00400         btfss   INTCON, TMR0IF
00006C EF?? F???      00401         goto    END_ISR_HIGH
                      00402         
                      00403         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1617               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6217               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 2619               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 1619               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 6019               M         cpfslt  OP_INT
                          M         
00008C 6A19               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A19               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00404         movlw   d'0'
00009C 6219           00405         cpfseq  OP_INT
00009E EF?? F???      00406         goto    END_ISR_HIGH
                      00407         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1617               M         andwf   temp
0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6217               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2618               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1618               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6018               M         cpfslt  OP_sec
                          M         
0000BE 6A18               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
                          M         
0000C4                    M ones
0000C4 2A18               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
0000CA 0000               M         nop
                      00408 
0000CC                00409 END_ISR_HIGH
0000CC 94F2           00410         bcf     INTCON, TMR0IF
                      00411         restoreContext
0000CE 3814               M     swapf   temp_W, W               ; restore W first
0000D0 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00412         retfie
                      00413 
0000D6                00414 ISR_LOW
                      00415         saveContext
0000D6 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E14               M     movwf   temp_W                  ; save W
                      00416         ; KEYPAD INTERRUPT
0000DC A0F0           00417         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00418         goto            END_ISR_LOW
                      00419 
                      00420         ;Check operation status
                      00421 ;       movlw           0xff                                    ; If in operation, skip return
                      00422 ;       cpfseq          InExecution
                      00423 ;       goto            END_ISR_LOW
                      00424 
                      00425         ; Process KEY
0000E2 3881           00426         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00427         andlw           0x0f
0000E6 6E12           00428         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00429 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00430 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000E8 EF?? F???      00431         goto            END_ISR_LOW
                      00432 
                      00433         ; Reset program counter
0000EC 6AFF           00434         clrf            TOSU
0000EE 6AFE           00435         clrf            TOSH
0000F0 6AFD           00436         clrf            TOSL
                      00437 
0000F2                00438 END_ISR_LOW
0000F2 90F0           00439         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00440         restoreContext
0000F4 3814               M     swapf   temp_W, W               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000FA 0010           00441         retfie
                      00442 
                      00443 ;*******************************************************************************
                      00444 ; main
                      00445 ;*******************************************************************************
0000FC                00446 INIT
                      00447         ; i/o
0000FC 0EFF           00448         movlw   b'11111111'
0000FE 6E92           00449         movwf   TRISA
000100 0EFF           00450         movlw   b'11111111'
000102 6E93           00451         movwf   TRISB               ; keypad
000104 0E00           00452         movlw   b'00000000'
000106 6E94           00453         movwf   TRISC
000108 0E00           00454         movlw   b'00000000'
00010A 6E95           00455         movwf   TRISD
00010C 0E07           00456         movlw   b'00000111'
00010E 6E96           00457         movwf   TRISE
                      00458 
                      00459         ; analog/digital pins
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000110 0E0F           00460         movlw   b'00001111'     ; Set all AN pins to Digital
000112 6EC1           00461         movwf   ADCON1
                      00462 
                      00463         ; clear ports
000114 6A89           00464         clrf    LATA
000116 6A8A           00465         clrf    LATB
                      00466 ;       bcf     TRISC, SCL
                      00467 ;       bcf     TRISC, SDA
000118 6A8B           00468         clrf    LATC
00011A 6A8C           00469         clrf    LATD
00011C 6A8D           00470         clrf    LATE
                      00471         
00011E 0E00           00472         movlw   b'00000000'
000120 6EC2           00473         movwf   ADCON0
000122 0EFF           00474         movlw   b'11111111'
000124 6EC1           00475         movwf   ADCON1
                      00476         
                      00477         ; initializations
000126 EC?? F???      00478         call    InitLCD
                      00479         ConfigLCD
00012A 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00012C EC?? F???          M           call      WR_INS
                          M 
000130 0E0C               M           movlw     b'00001100'    ; display on/off
000132 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000136 0E01               M           movlw     b'00000001'    ; Clear ram
000138 EC?? F???          M           call      WR_INS
00013C EC?? F???      00480         call    RTC_INIT
000140 EC?? F???      00481         call    Delay50ms
                      00482         COLOUR_INIT
                          M         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
000144 0E00               M         movlw   0x00
000146 6E??               M         movwf   regaddress
000148 0E01               M         movlw   0x01
00014A 6E??               M         movwf   databyte
00014C EC?? F???          M         call    WRITE_COLOUR_I2C
000150 EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
000154 0E00               M         movlw   0x00
000156 6E??               M         movwf   regaddress
000158 0E02               M         movlw   0x02
00015A 6E??               M         movwf   databyte
00015C EC?? F???          M         call    WRITE_COLOUR_I2C
000160 EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x01, 0xf6 ; Timing Register (0x01), 24ms (0xf6) cycle
000164 0E01               M         movlw   0x01
000166 6E??               M         movwf   regaddress
000168 0EF6               M         movlw   0xf6
00016A 6E??               M         movwf   databyte
00016C EC?? F???          M         call    WRITE_COLOUR_I2C
000170 EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
000174 0E0F               M         movlw   0x0f
000176 6E??               M         movwf   regaddress
000178 0E03               M         movlw   0x03
00017A 6E??               M         movwf   databyte
00017C EC?? F???          M         call    WRITE_COLOUR_I2C
000180 EC?? F???          M         call    delay5ms
000184 EC?? F???      00483         call    INIT_USART
                      00484 
                      00485         ; interrupts
000188 6AD0           00486         clrf    RCON
00018A 6AF2           00487         clrf    INTCON
00018C 6AF1           00488         clrf    INTCON2
00018E 6AF0           00489         clrf    INTCON3
000190 8ED0           00490         bsf     RCON, IPEN          ; priority mode
000192 8EF2           00491         bsf     INTCON, GIEH        ; permit global interrupts
000194 8CF2           00492         bsf     INTCON, GIEL
000196 8AF1           00493         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000198 8AF2           00494         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
00019A 84F2           00495         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00019C 84F1           00496         bsf     INTCON2, TMR0IP     ; set to high priority
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00019E 86F0           00497         bsf     INTCON3, INT1IE
0001A0 9CF0           00498         bcf     INTCON3, INT1IP
                      00499         
                      00500         ; setting up timer to sychronize with 1 second clock intervals
0001A2 9ED5           00501         bcf     T0CON, TMR0ON
0001A4 9CD5           00502         bcf     T0CON, T08BIT
0001A6 9AD5           00503         bcf     T0CON, T0CS
0001A8 98D5           00504         bcf     T0CON, T0SE
0001AA 96D5           00505         bcf     T0CON, PSA
0001AC 94D5           00506         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
0001AE 82D5           00507         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
0001B0 80D5           00508         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00509 
0001B2 6A21           00510         clrf    H_EE
0001B4 6A22           00511         clrf    L_EE
0001B6 6A??           00512         clrf    tens_digit
0001B8 6A??           00513         clrf    ones_digit
0001BA 6A40           00514         clrf    ESKA
0001BC 6A41           00515         clrf    ESKA_CAP
0001BE 6A42           00516         clrf    YOP
0001C0 6A43           00517         clrf    YOP_CAP
                      00518         
0001C2 0EF2           00519         movlw     b'11110010'    ; Set required keypad inputs
0001C4 6E93           00520         movwf     TRISB
                      00521         
0001C6 EC?? F???      00522         call    ClrLCD
                      00523         Display Welcome
  0000                    M         local   loop
0001CA 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001CC 6EF8               M         movwf   TBLPTRU
0001CE 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001D0 6EF7               M         movwf   TBLPTRH
0001D2 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001D4 6EF6               M         movwf   TBLPTRL
0001D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D8 50F5               M         movf    TABLAT, W
0001DA                    M loop
0001DA EC?? F???          M         call    WR_DATA         ; write to LCD
0001DE 000B               M         tblrd+*                 ; next row in table
0001E0 50F5               M         movf    TABLAT, W
0001E2 E1??               M         bnz     loop
0001E4 EC?? F???      00524         call LCD_L2
                      00525         Display Team
  0000                    M         local   loop
0001E8 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001EA 6EF8               M         movwf   TBLPTRU
0001EC 0E??               M         movlw   high Team       ; Move Table<15:8>
0001EE 6EF7               M         movwf   TBLPTRH
0001F0 0E??               M         movlw   low Team        ; Move Table<7:0>
0001F2 6EF6               M         movwf   TBLPTRL
0001F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001F6 50F5               M         movf    TABLAT, W
0001F8                    M loop
0001F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001FC 000B               M         tblrd+*                 ; next row in table
0001FE 50F5               M         movf    TABLAT, W
000200 E1??               M         bnz     loop
                      00526         
                      00527         Delay50N delayR, 0x28
  0000                    M         local   loop
000202 0E28               M         movlw   0x28
000204 6E1B               M         movwf   delayR
                          M 
000206                    M loop
000206 EC?? F???          M         call    Delay50ms
00020A 2E1B               M         decfsz  delayR
00020C EF?? F???          M         goto    loop
                      00528 
                      00529 ;*******************************************************************************
                      00530 ; standby mode
                      00531 ;*******************************************************************************
000210                00532 STANDBY
000210 EC?? F???      00533         call    ClrLCD
                      00534         Display StandBy
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
000214 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000216 6EF8               M         movwf   TBLPTRU
000218 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00021A 6EF7               M         movwf   TBLPTRH
00021C 0E??               M         movlw   low StandBy     ; Move Table<7:0>
00021E 6EF6               M         movwf   TBLPTRL
000220 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000222 50F5               M         movf    TABLAT, W
000224                    M loop
000224 EC?? F???          M         call    WR_DATA         ; write to LCD
000228 000B               M         tblrd+*                 ; next row in table
00022A 50F5               M         movf    TABLAT, W
00022C E1??               M         bnz     loop
                      00535 
00022E                00536 HOLD_STANDBY
00022E EC?? F???      00537         call    READ_KEY_TIME
                      00538         ChangeMode key5, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000232 0E05               M         movlw   key5                ; poll for mode
000234 6210               M         cpfseq  KEY                 ; check this against key press
000236 EF?? F???          M         goto    Exit
                          M 
00023A                    M Next
00023A 6A89               M         clrf    LATA                ; clear pins before proceeding
00023C 6A8A               M         clrf    LATB
00023E 6A8B               M         clrf    LATC
000240 6A8C               M         clrf    LATD
000242 EF?? F???          M         goto    COLOUR_TEST
                          M 
000246                    M Exit
000246 0000               M         nop
                      00539         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000248 0E03               M         movlw   keyA                ; poll for mode
00024A 6210               M         cpfseq  KEY                 ; check this against key press
00024C EF?? F???          M         goto    Exit
                          M 
000250                    M Next
000250 6A89               M         clrf    LATA                ; clear pins before proceeding
000252 6A8A               M         clrf    LATB
000254 6A8B               M         clrf    LATC
000256 6A8C               M         clrf    LATD
000258 EF?? F???          M         goto    EXECUTION
                          M 
00025C                    M Exit
00025C 0000               M         nop
                      00540         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
00025E 0E07               M         movlw   keyB                ; poll for mode
000260 6210               M         cpfseq  KEY                 ; check this against key press
000262 EF?? F???          M         goto    Exit
                          M 
000266                    M Next
000266 6A89               M         clrf    LATA                ; clear pins before proceeding
000268 6A8A               M         clrf    LATB
00026A 6A8B               M         clrf    LATC
00026C 6A8C               M         clrf    LATD
00026E EF?? F???          M         goto    LOG
                          M 
000272                    M Exit
000272 0000               M         nop
                      00541         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000274 0E0B               M         movlw   keyC                ; poll for mode
000276 6210               M         cpfseq  KEY                 ; check this against key press
000278 EF?? F???          M         goto    Exit
                          M 
00027C                    M Next
00027C 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00027E 6A8A               M         clrf    LATB
000280 6A8B               M         clrf    LATC
000282 6A8C               M         clrf    LATD
000284 EF?? F???          M         goto    PERM_LOG
                          M 
000288                    M Exit
000288 0000               M         nop
                      00542         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
00028A 0E0F               M         movlw   keyD                ; poll for mode
00028C 6210               M         cpfseq  KEY                 ; check this against key press
00028E EF?? F???          M         goto    Exit
                          M 
000292                    M Next
000292 6A89               M         clrf    LATA                ; clear pins before proceeding
000294 6A8A               M         clrf    LATB
000296 6A8B               M         clrf    LATC
000298 6A8C               M         clrf    LATD
00029A EF?? F???          M         goto    PC_MODE
                          M 
00029E                    M Exit
00029E 0000               M         nop
0002A0 D???           00543         bra     HOLD_STANDBY
                      00544 
                      00545 ;*******************************************************************************
                      00546 ; execution mode
                      00547 ;*******************************************************************************
                      00548 
0002A2                00549 CHECK_CLEAR
                      00550         SUB16   CLEAR, RED                  ; check first against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002A2 5047               M         movf    RED+1, WREG ; move high y into working register
0002A4 5C45               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002A6 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002A8 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002AC 5046               M         movf    RED, WREG
0002AE 5C44               M         subwf   CLEAR, 0 
0002B0                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002B0 A0D8           00551         btfss   STATUS, C
0002B2 0012           00552         return                              ; RED > CLEAR
                      00553         
                      00554         SUB16   CLEAR, GREEN                ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002B4 5049               M         movf    GREEN+1, WREG ; move high y into working register
0002B6 5C45               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002B8 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002BA EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002BE 5048               M         movf    GREEN, WREG
0002C0 5C44               M         subwf   CLEAR, 0 
0002C2                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002C2 A0D8           00555         btfss   STATUS, C
0002C4 0012           00556         return                              ; GREEN > CLEAR
                      00557         
                      00558         SUB16   CLEAR, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002C6 504B               M         movf    BLUE+1, WREG ; move high y into working register
0002C8 5C45               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002CA B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002CC EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002D0 504A               M         movf    BLUE, WREG
0002D2 5C44               M         subwf   CLEAR, 0 
0002D4                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002D4 A0D8           00559         btfss   STATUS, C
0002D6 0012           00560         return                              ; BLUE > CLEAR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00561         
0002D8 0E63           00562         movlw   'c'                         ; CLEAR > everything else
0002DA EC?? F???      00563         call    WR_DATA
0002DE D???           00564         bra     LOOPING
                      00565 
0002E0                00566 CHECK_RED
                      00567         SUB16   RED, CLEAR                  ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002E0 5045               M         movf    CLEAR+1, WREG ; move high y into working register
0002E2 5C47               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002E4 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002E6 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002EA 5044               M         movf    CLEAR, WREG
0002EC 5C46               M         subwf   RED, 0  
0002EE                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002EE A0D8           00568         btfss   STATUS, C
0002F0 0012           00569         return                              ; CLEAR > RED
                      00570         
                      00571         SUB16   RED, GREEN                  ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002F2 5049               M         movf    GREEN+1, WREG ; move high y into working register
0002F4 5C47               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002F6 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002F8 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002FC 5048               M         movf    GREEN, WREG
0002FE 5C46               M         subwf   RED, 0  
000300                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000300 A0D8           00572         btfss   STATUS, C
000302 0012           00573         return                              ; GREEN > RED
                      00574         
                      00575         SUB16   RED, BLUE                   ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000304 504B               M         movf    BLUE+1, WREG ; move high y into working register
000306 5C47               M         subwf   RED+1, 0    ; do subtraction x - w => w
000308 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00030A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00030E 504A               M         movf    BLUE, WREG
000310 5C46               M         subwf   RED, 0  
000312                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000312 A0D8           00576         btfss   STATUS, C
000314 0012           00577         return                              ; BLUE > RED
                      00578         
000316 0E72           00579         movlw   'r'                         ; RED > everything else
000318 EC?? F???      00580         call    WR_DATA
00031C D???           00581         bra     LOOPING
                      00582         
00031E                00583 CHECK_GREEN
                      00584         SUB16   GREEN, CLEAR                ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00031E 5045               M         movf    CLEAR+1, WREG ; move high y into working register
000320 5C49               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000322 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000324 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000328 5044               M         movf    CLEAR, WREG
00032A 5C48               M         subwf   GREEN, 0 
00032C                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00032C A0D8           00585         btfss   STATUS, C
00032E 0012           00586         return                              ; CLEAR > GREEN
                      00587         
                      00588         SUB16   GREEN, RED                  ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000330 5047               M         movf    RED+1, WREG ; move high y into working register
000332 5C49               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000334 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000336 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00033A 5046               M         movf    RED, WREG
00033C 5C48               M         subwf   GREEN, 0 
00033E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00033E A0D8           00589         btfss   STATUS, C
000340 0012           00590         return                              ; RED > GREEN
                      00591         
                      00592         SUB16   GREEN, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000342 504B               M         movf    BLUE+1, WREG ; move high y into working register
000344 5C49               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000346 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000348 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00034C 504A               M         movf    BLUE, WREG
00034E 5C48               M         subwf   GREEN, 0 
000350                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000350 A0D8           00593         btfss   STATUS, C
000352 0012           00594         return                              ; BLUE > GREEN
                      00595         
000354 0E67           00596         movlw   'g'                         ; GREEN > everything else
000356 EC?? F???      00597         call    WR_DATA
00035A D???           00598         bra     LOOPING
                      00599         
00035C                00600 CHECK_BLUE
                      00601         SUB16   BLUE, CLEAR                 ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00035C 5045               M         movf    CLEAR+1, WREG ; move high y into working register
00035E 5C4B               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000360 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000362 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000366 5044               M         movf    CLEAR, WREG
000368 5C4A               M         subwf   BLUE, 0 
00036A                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00036A A0D8           00602         btfss   STATUS, C
00036C 0012           00603         return                              ; CLEAR > BLUE
                      00604         
                      00605         SUB16   BLUE, RED                   ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00036E 5047               M         movf    RED+1, WREG ; move high y into working register
000370 5C4B               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000372 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000374 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000378 5046               M         movf    RED, WREG
00037A 5C4A               M         subwf   BLUE, 0 
00037C                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00037C A0D8           00606         btfss   STATUS, C
00037E 0012           00607         return                              ; RED > BLUE
                      00608 
                      00609         SUB16   BLUE, GREEN                 ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000380 5049               M         movf    GREEN+1, WREG ; move high y into working register
000382 5C4B               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000384 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000386 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00038A 5048               M         movf    GREEN, WREG
00038C 5C4A               M         subwf   BLUE, 0 
00038E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00038E A0D8           00610         btfss   STATUS, C
000390 0012           00611         return                              ; GREEN > CLEAR
                      00612         
000392 0E62           00613         movlw   'b'                         ; BLUE > everything else
000394 EC?? F???      00614         call    WR_DATA
000398 0012           00615         return
                      00616         
00039A                00617 COLOUR_TEST
                      00618 
00039A                00619 LOOPING
                      00620         Delay50N delayR, 0x28
  0000                    M         local   loop
00039A 0E28               M         movlw   0x28
00039C 6E1B               M         movwf   delayR
                          M 
00039E                    M loop
00039E EC?? F???          M         call    Delay50ms
0003A2 2E1B               M         decfsz  delayR
0003A4 EF?? F???          M         goto    loop
0003A8 EC?? F???      00621         call    ClrLCD
                      00622         COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
0003AC EC?? F???          M         call    delay5ms
                          M         
                          M         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
0003B0 0E14               M         movlw   0x14
0003B2 6E??               M         movwf   regaddress
0003B4 EC?? F???          M         call    READ_COLOUR_I2C
0003B8 C??? F044          M         movff   data_colourL, CLEAR+0
0003BC C??? F045          M         movff   data_colourH, CLEAR+1
                          M         ;Send acknowledgement of data reception
                          M ;       movff   datachar, clear+0
                          M ;       COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                          M ;       movff   datachar, clear+1
                          M                 
                          M         COLOUR_READ 0x16    ; read red colour address low, command bits set later
0003C0 0E16               M         movlw   0x16
0003C2 6E??               M         movwf   regaddress
0003C4 EC?? F???          M         call    READ_COLOUR_I2C
0003C8 C??? F046          M         movff   data_colourL, RED+0
0003CC C??? F047          M         movff   data_colourH, RED+1
                          M         
                          M ;       movff   datachar, red+0
                          M ;       COLOUR_READ 0x17    ; read red colour address high, command bits set later
                          M ;       movff   datachar, red+1
                          M         
                          M         COLOUR_READ 0x18    ; read green colour address low, command bits set later
0003D0 0E18               M         movlw   0x18
0003D2 6E??               M         movwf   regaddress
0003D4 EC?? F???          M         call    READ_COLOUR_I2C
0003D8 C??? F048          M         movff   data_colourL, GREEN+0
0003DC C??? F049          M         movff   data_colourH, GREEN+1
                          M ;       movff   datachar, green+0
                          M ;       COLOUR_READ 0x19    ; read green colour address high, command bits set later
                          M ;       movff   datachar, green+1
                          M         
                          M         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
0003E0 0E1A               M         movlw   0x1a
0003E2 6E??               M         movwf   regaddress
0003E4 EC?? F???          M         call    READ_COLOUR_I2C
0003E8 C??? F04A          M         movff   data_colourL, BLUE+0
0003EC C??? F04B          M         movff   data_colourH, BLUE+1
                          M ;       movff   datachar, blue+0
                          M ;       COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                          M ;       movff   datachar, blue+1
                      00623         
0003F0 EC?? F???      00624         call    CHECK_CLEAR
0003F4 EC?? F???      00625         call    CHECK_RED
0003F8 EC?? F???      00626         call    CHECK_GREEN
0003FC EC?? F???      00627         call    CHECK_BLUE
000400 D???           00628         bra LOOPING
                      00629         
000402                00630 EXECUTION
000402 EC?? F???      00631         call        ClearEEPROM_21
                      00632         ; save the starting time
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000406 EC?? F???      00633         call        SAVE_TIME
                      00634                 
                      00635         ; display
00040A 681F           00636         setf        inExecution
00040C EC?? F???      00637         call        ClrLCD
                      00638         Display     Exe1
  0000                    M         local   loop
000410 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000412 6EF8               M         movwf   TBLPTRU
000414 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000416 6EF7               M         movwf   TBLPTRH
000418 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00041A 6EF6               M         movwf   TBLPTRL
00041C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00041E 50F5               M         movf    TABLAT, W
000420                    M loop
000420 EC?? F???          M         call    WR_DATA         ; write to LCD
000424 000B               M         tblrd+*                 ; next row in table
000426 50F5               M         movf    TABLAT, W
000428 E1??               M         bnz     loop
00042A EC?? F???      00639         call        LCD_L2
00042E 0EC5           00640         movlw       0xc5                    ; setting up timer
000430 6ED7           00641         movwf       TMR0H
000432 0E44           00642         movlw       0x44    
000434 6ED6           00643         movwf       TMR0L
                      00644         
000436 8ED5           00645         bsf         T0CON, TMR0ON           ; turning on timer
                      00646         ; initialize variables
000438 6A18           00647         clrf        OP_sec
00043A 6A19           00648         clrf        OP_INT
00043C 6A44           00649         clrf        CLEAR
00043E 6A48           00650         clrf        GREEN
000440 6A46           00651         clrf        RED
000442 6A4A           00652         clrf        BLUE
                      00653         
                      00654 ;COLLECTIONS_STEP
                      00655 ;       
                      00656 ;TERM_CHECK
                      00657 ;       
                      00658 ;BOTTLE_CHECK
                      00659 ;
                      00660 ;COLOUR_ONE
                      00661 ;
                      00662 ;COLOUR_TWO
                      00663 ;       
                      00664 ;BRAINS
                      00665 ;       
                      00666 ;TRAY_STEP
                      00667 ;       
                      00668 
000444                00669 HOLD_EXE
000444 EC?? F???      00670         call        READ_KEY
                      00671         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000448 0E0C               M         movlw   keyS                ; poll for mode
00044A 6210               M         cpfseq  KEY                 ; check this against key press
00044C EF?? F???          M         goto    Exit
                          M 
000450                    M Next
000450 6A89               M         clrf    LATA                ; clear pins before proceeding
000452 6A8A               M         clrf    LATB
000454 6A8B               M         clrf    LATC
000456 6A8C               M         clrf    LATD
000458 EF?? F???          M         goto    EXIT_EXE
                          M 
00045C                    M Exit
00045C 0000               M         nop
00045E D???           00672         bra         HOLD_EXE
                      00673         
000460                00674 EXIT_EXE
                      00675         ; stop timer and save the execution time to eeprom
000460 9ED5           00676         bcf         T0CON, TMR0ON
000462 EC?? F???      00677         call        SAVE_EXE_TIME
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00678                 
                      00679         ; Clear inExecution flag to stop '*' interrupts
000466 6A1F           00680         clrf        inExecution
                      00681         
000468 C040 FFE8      00682         movff       ESKA, WREG
00046C 0F30           00683         addlw       0x30
                      00684         WriteEE     WREG, H_EE, L_EE
00046E C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000472 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000476 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00047A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00047C D???               M         bra     $-2
                          M 
00047E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000480 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000482 84A6               M         bsf     EECON1, WREN        ; enable write
000484 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000486 98A1               M         bcf     PIR2, EEIF
                          M 
000488 0E55               M         movlw   0x55
00048A 6EA7               M         movwf   EECON2              ; write 55h
00048C 0EAA               M         movlw   0xaa
00048E 6EA7               M         movwf   EECON2              ; write 0xaa
000490 82A6               M         bsf     EECON1, WR          ; begin write
000492 B2A6               M         btfsc   EECON1, WR
000494 D???               M         bra     $-2
                          M 
000496 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000498 94A6               M         bcf     EECON1, WREN        ; disable writes
00049A 2A22           00685         incf        L_EE
                      00686         
00049C C041 FFE8      00687         movff       ESKA_CAP, WREG
0004A0 0F30           00688         addlw       0x30
                      00689         WriteEE     WREG, H_EE, L_EE
0004A2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004A6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004AA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004AE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004B0 D???               M         bra     $-2
                          M 
0004B2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004B4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004B6 84A6               M         bsf     EECON1, WREN        ; enable write
0004B8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004BA 98A1               M         bcf     PIR2, EEIF
                          M 
0004BC 0E55               M         movlw   0x55
0004BE 6EA7               M         movwf   EECON2              ; write 55h
0004C0 0EAA               M         movlw   0xaa
0004C2 6EA7               M         movwf   EECON2              ; write 0xaa
0004C4 82A6               M         bsf     EECON1, WR          ; begin write
0004C6 B2A6               M         btfsc   EECON1, WR
0004C8 D???               M         bra     $-2
                          M 
0004CA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004CC 94A6               M         bcf     EECON1, WREN        ; disable writes
0004CE 2A22           00690         incf        L_EE
                      00691         
0004D0 C042 FFE8      00692         movff       YOP, WREG
0004D4 0F30           00693         addlw       0x30
                      00694         WriteEE     WREG, H_EE, L_EE
0004D6 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004DA C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004DE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004E2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004E4 D???               M         bra     $-2
                          M 
0004E6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004E8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004EA 84A6               M         bsf     EECON1, WREN        ; enable write
0004EC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004EE 98A1               M         bcf     PIR2, EEIF
                          M 
0004F0 0E55               M         movlw   0x55
0004F2 6EA7               M         movwf   EECON2              ; write 55h
0004F4 0EAA               M         movlw   0xaa
0004F6 6EA7               M         movwf   EECON2              ; write 0xaa
0004F8 82A6               M         bsf     EECON1, WR          ; begin write
0004FA B2A6               M         btfsc   EECON1, WR
0004FC D???               M         bra     $-2
                          M 
0004FE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000500 94A6               M         bcf     EECON1, WREN        ; disable writes
000502 2A22           00695         incf        L_EE
                      00696         
000504 C043 FFE8      00697         movff       YOP_CAP, WREG
000508 0F30           00698         addlw       0x30
                      00699         WriteEE     WREG, H_EE, L_EE
00050A C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00050E C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000512 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000516 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000518 D???               M         bra     $-2
                          M 
00051A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00051C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00051E 84A6               M         bsf     EECON1, WREN        ; enable write
000520 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000522 98A1               M         bcf     PIR2, EEIF
                          M 
000524 0E55               M         movlw   0x55
000526 6EA7               M         movwf   EECON2              ; write 55h
000528 0EAA               M         movlw   0xaa
00052A 6EA7               M         movwf   EECON2              ; write 0xaa
00052C 82A6               M         bsf     EECON1, WR          ; begin write
00052E B2A6               M         btfsc   EECON1, WR
000530 D???               M         bra     $-2
                          M 
000532 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000534 94A6               M         bcf     EECON1, WREN        ; disable writes
000536 2A22           00700         incf        L_EE
                      00701         
000538 EF?? F???      00702         goto        SaveData
                      00703 
00053C                00704 SaveData
00053C EC?? F???      00705         call        ClrLCD
                      00706         Display     SAVE
  0000                    M         local   loop
000540 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000542 6EF8               M         movwf   TBLPTRU
000544 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000546 6EF7               M         movwf   TBLPTRH
000548 0E??               M         movlw   low SAVE        ; Move Table<7:0>
00054A 6EF6               M         movwf   TBLPTRL
00054C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00054E 50F5               M         movf    TABLAT, W
000550                    M loop
000550 EC?? F???          M         call    WR_DATA         ; write to LCD
000554 000B               M         tblrd+*                 ; next row in table
000556 50F5               M         movf    TABLAT, W
000558 E1??               M         bnz     loop
                      00707 
00055A 0E00           00708         movlw       d'0'
00055C 6E21           00709         movwf       H_EE
00055E 0EA8           00710         movlw       d'168'              ; take d'168' as last
000560 6E22           00711         movwf       L_EE
000562 0E00           00712         movlw       d'0'
000564 6E24           00713         movwf       tempH_EE
000566 0EDC           00714         movlw       d'220'              ; temp for low constant
000568 6E25           00715         movwf       tempL_EE
                      00716         
00056A 6A16           00717         clrf        counter2
00056C 6A15           00718         clrf        counter
                      00719         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00056E                00720 ShiftLoop
00056E 2A15           00721         incf            counter
                      00722         READEE          REG_EE, H_EE, L_EE
000570 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000574 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000578 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00057A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00057C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00057E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000582 0E15           00723         movlw           d'21'
000584 2622           00724         addwf           L_EE
                      00725         WriteEE         REG_EE, H_EE, L_EE
000586 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00058A C022 FFA9          M         movff   L_EE, EEADR         ; Low address
00058E C023 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000592 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000594 D???               M         bra     $-2
                          M 
000596 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000598 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00059A 84A6               M         bsf     EECON1, WREN        ; enable write
00059C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00059E 98A1               M         bcf     PIR2, EEIF
                          M 
0005A0 0E55               M         movlw   0x55
0005A2 6EA7               M         movwf   EECON2              ; write 55h
0005A4 0EAA               M         movlw   0xaa
0005A6 6EA7               M         movwf   EECON2              ; write 0xaa
0005A8 82A6               M         bsf     EECON1, WR          ; begin write
0005AA B2A6               M         btfsc   EECON1, WR
0005AC D???               M         bra     $-2
                          M 
0005AE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0005B0 94A6               M         bcf     EECON1, WREN        ; disable writes
0005B2 0E14           00726         movlw           d'20'
0005B4 5E22           00727         subwf           L_EE
0005B6 0E15           00728         movlw           d'21'
0005B8 6215           00729         cpfseq          counter
0005BA EF?? F???      00730         goto            ShiftLoop
                      00731         
                      00732         ; Set EEPROM address to the previous 21 byte block, and reset temp address
0005BE 0E2A           00733         movlw           d'42'
0005C0 5E22           00734         subwf           L_EE
0005C2 0EDC           00735         movlw           d'220'
0005C4 6E25           00736         movwf           tempL_EE
0005C6 6A15           00737         clrf            counter
0005C8 2A16           00738         incf            counter2
0005CA 0E09           00739         movlw           d'9'
0005CC 6216           00740         cpfseq          counter2        ; Skip if 9 shifts were made
0005CE EF?? F???      00741         goto            ShiftLoop
                      00742 
0005D2 EF?? F???      00743         goto            LOG
                      00744 
                      00745 ;*******************************************************************************
                      00746 ; sorting statistics log mode
                      00747 ;*******************************************************************************
                      00748         
0005D6                00749 LOG
0005D6 EC?? F???      00750         call    ClrLCD
                      00751         Display Log1
  0000                    M         local   loop
0005DA 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0005DC 6EF8               M         movwf   TBLPTRU
0005DE 0E??               M         movlw   high Log1       ; Move Table<15:8>
0005E0 6EF7               M         movwf   TBLPTRH
0005E2 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005E4 6EF6               M         movwf   TBLPTRL
0005E6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005E8 50F5               M         movf    TABLAT, W
0005EA                    M loop
0005EA EC?? F???          M         call    WR_DATA         ; write to LCD
0005EE 000B               M         tblrd+*                 ; next row in table
0005F0 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005F2 E1??               M         bnz     loop
                      00752 
                      00753         ; display most recent run data
0005F4 0E0A           00754         movlw   d'10'
0005F6 6E22           00755         movwf   L_EE
                      00756 ;       READEE  OP_sec, H_EE, L_EE
                      00757 ;       incf    L_EE
                      00758 ;       READEE  OP_INT, H_EE, L_EE
                      00759 ;       incf    L_EE
0005F8 EC?? F???      00760         call    DisplayExeTime
                      00761 
0005FC EC?? F???      00762         call    LCD_L2
000600 6A22           00763         clrf    L_EE
000602 EC?? F???      00764         call    DispOpRTC
                      00765 
000606                00766 HOLD_LOG
000606 EC?? F???      00767         call    READ_KEY
                      00768         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
00060A 0E07               M         movlw   keyB                ; poll for mode
00060C 6210               M         cpfseq  KEY                 ; check this against key press
00060E EF?? F???          M         goto    Exit
                          M 
000612                    M Next
000612 6A89               M         clrf    LATA                ; clear pins before proceeding
000614 6A8A               M         clrf    LATB
000616 6A8B               M         clrf    LATC
000618 6A8C               M         clrf    LATD
00061A EF?? F???          M         goto    LOG_INFO
                          M 
00061E                    M Exit
00061E 0000               M         nop
                      00769         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000620 0E0D               M         movlw   key0                ; poll for mode
000622 6210               M         cpfseq  KEY                 ; check this against key press
000624 EF?? F???          M         goto    Exit
                          M 
000628                    M Next
000628 6A89               M         clrf    LATA                ; clear pins before proceeding
00062A 6A8A               M         clrf    LATB
00062C 6A8B               M         clrf    LATC
00062E 6A8C               M         clrf    LATD
000630 EF?? F???          M         goto    STANDBY
                          M 
000634                    M Exit
000634 0000               M         nop
000636 D???           00770         bra     HOLD_LOG
                      00771 
000638                00772 LOG_INFO
000638 EC?? F???      00773         call    ClrLCD
                      00774         Display LogInfo1
  0000                    M         local   loop
00063C 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
00063E 6EF8               M         movwf   TBLPTRU
000640 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000642 6EF7               M         movwf   TBLPTRH
000644 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000646 6EF6               M         movwf   TBLPTRL
000648 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00064A 50F5               M         movf    TABLAT, W
00064C                    M loop
00064C EC?? F???          M         call    WR_DATA         ; write to LCD
000650 000B               M         tblrd+*                 ; next row in table
000652 50F5               M         movf    TABLAT, W
000654 E1??               M         bnz     loop
000656 EC?? F???      00775         call    LCD_L2
                      00776         Display LogInfo2
  0000                    M         local   loop
00065A 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00065C 6EF8               M         movwf   TBLPTRU
00065E 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000660 6EF7               M         movwf   TBLPTRH
000662 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000664 6EF6               M         movwf   TBLPTRL
000666 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000668 50F5               M         movf    TABLAT, W
00066A                    M loop
00066A EC?? F???          M         call    WR_DATA         ; write to LCD
00066E 000B               M         tblrd+*                 ; next row in table
000670 50F5               M         movf    TABLAT, W
000672 E1??               M         bnz     loop
000674 6A21           00777         clrf    H_EE
000676 6A22           00778         clrf    L_EE
                      00779         ;DisplayLog  H_EE, L_EE
000678                00780 HOLD_LOG_INFO
000678 EC?? F???      00781         call    READ_KEY
                      00782         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
00067C 0E0D               M         movlw   key0                ; poll for mode
00067E 6210               M         cpfseq  KEY                 ; check this against key press
000680 EF?? F???          M         goto    Exit
                          M 
000684                    M Next
000684 6A89               M         clrf    LATA                ; clear pins before proceeding
000686 6A8A               M         clrf    LATB
000688 6A8B               M         clrf    LATC
00068A 6A8C               M         clrf    LATD
00068C EF?? F???          M         goto    LOG
                          M 
000690                    M Exit
000690 0000               M         nop
000692 D???           00783         bra     HOLD_LOG
                      00784         
                      00785 ;*******************************************************************************
                      00786 ; permanent logs
                      00787 ;*******************************************************************************
                      00788 
000694                00789 PERM_LOG
000694 EC?? F???      00790         call    ClrLCD
                      00791         Display PermLog1
  0000                    M         local   loop
000698 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00069A 6EF8               M         movwf   TBLPTRU
00069C 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00069E 6EF7               M         movwf   TBLPTRH
0006A0 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0006A2 6EF6               M         movwf   TBLPTRL
0006A4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006A6 50F5               M         movf    TABLAT, W
0006A8                    M loop
0006A8 EC?? F???          M         call    WR_DATA         ; write to LCD
0006AC 000B               M         tblrd+*                 ; next row in table
0006AE 50F5               M         movf    TABLAT, W
0006B0 E1??               M         bnz     loop
0006B2 EC?? F???      00792         call    LCD_L2
                      00793         Display PermLog2
  0000                    M         local   loop
0006B6 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0006B8 6EF8               M         movwf   TBLPTRU
0006BA 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0006BC 6EF7               M         movwf   TBLPTRH
0006BE 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0006C0 6EF6               M         movwf   TBLPTRL
0006C2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006C4 50F5               M         movf    TABLAT, W
0006C6                    M loop
0006C6 EC?? F???          M         call    WR_DATA         ; write to LCD
0006CA 000B               M         tblrd+*                 ; next row in table
0006CC 50F5               M         movf    TABLAT, W
0006CE E1??               M         bnz     loop
                      00794         
0006D0                00795 HOLD_PERM_LOG
0006D0 EC?? F???      00796         call    READ_KEY
                      00797         ChangeMode  key0, STANDBY
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
0006D4 0E0D               M         movlw   key0                ; poll for mode
0006D6 6210               M         cpfseq  KEY                 ; check this against key press
0006D8 EF?? F???          M         goto    Exit
                          M 
0006DC                    M Next
0006DC 6A89               M         clrf    LATA                ; clear pins before proceeding
0006DE 6A8A               M         clrf    LATB
0006E0 6A8B               M         clrf    LATC
0006E2 6A8C               M         clrf    LATD
0006E4 EF?? F???          M         goto    STANDBY
                          M 
0006E8                    M Exit
0006E8 0000               M         nop
                      00798         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
0006EA 0E00               M         movlw   key1                ; poll for mode
0006EC 6210               M         cpfseq  KEY                 ; check this against key press
0006EE EF?? F???          M         goto    Exit
                          M 
0006F2                    M Next
0006F2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F4 6A8A               M         clrf    LATB
0006F6 6A8B               M         clrf    LATC
0006F8 6A8C               M         clrf    LATD
0006FA EF?? F???          M         goto    PLOG
                          M 
0006FE                    M Exit
0006FE 0000               M         nop
                      00799         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000700 0E01               M         movlw   key2                ; poll for mode
000702 6210               M         cpfseq  KEY                 ; check this against key press
000704 EF?? F???          M         goto    Exit
                          M 
000708                    M Next
000708 6A89               M         clrf    LATA                ; clear pins before proceeding
00070A 6A8A               M         clrf    LATB
00070C 6A8B               M         clrf    LATC
00070E 6A8C               M         clrf    LATD
000710 EF?? F???          M         goto    PLOG
                          M 
000714                    M Exit
000714 0000               M         nop
                      00800         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000716 0E02               M         movlw   key3                ; poll for mode
000718 6210               M         cpfseq  KEY                 ; check this against key press
00071A EF?? F???          M         goto    Exit
                          M 
00071E                    M Next
00071E 6A89               M         clrf    LATA                ; clear pins before proceeding
000720 6A8A               M         clrf    LATB
000722 6A8B               M         clrf    LATC
000724 6A8C               M         clrf    LATD
000726 EF?? F???          M         goto    PLOG
                          M 
00072A                    M Exit
00072A 0000               M         nop
                      00801         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
00072C 0E04               M         movlw   key4                ; poll for mode
00072E 6210               M         cpfseq  KEY                 ; check this against key press
000730 EF?? F???          M         goto    Exit
                          M 
000734                    M Next
000734 6A89               M         clrf    LATA                ; clear pins before proceeding
000736 6A8A               M         clrf    LATB
000738 6A8B               M         clrf    LATC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00073A 6A8C               M         clrf    LATD
00073C EF?? F???          M         goto    PLOG
                          M 
000740                    M Exit
000740 0000               M         nop
                      00802         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000742 0E05               M         movlw   key5                ; poll for mode
000744 6210               M         cpfseq  KEY                 ; check this against key press
000746 EF?? F???          M         goto    Exit
                          M 
00074A                    M Next
00074A 6A89               M         clrf    LATA                ; clear pins before proceeding
00074C 6A8A               M         clrf    LATB
00074E 6A8B               M         clrf    LATC
000750 6A8C               M         clrf    LATD
000752 EF?? F???          M         goto    PLOG
                          M 
000756                    M Exit
000756 0000               M         nop
                      00803         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000758 0E06               M         movlw   key6                ; poll for mode
00075A 6210               M         cpfseq  KEY                 ; check this against key press
00075C EF?? F???          M         goto    Exit
                          M 
000760                    M Next
000760 6A89               M         clrf    LATA                ; clear pins before proceeding
000762 6A8A               M         clrf    LATB
000764 6A8B               M         clrf    LATC
000766 6A8C               M         clrf    LATD
000768 EF?? F???          M         goto    PLOG
                          M 
00076C                    M Exit
00076C 0000               M         nop
                      00804         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
00076E 0E08               M         movlw   key7                ; poll for mode
000770 6210               M         cpfseq  KEY                 ; check this against key press
000772 EF?? F???          M         goto    Exit
                          M 
000776                    M Next
000776 6A89               M         clrf    LATA                ; clear pins before proceeding
000778 6A8A               M         clrf    LATB
00077A 6A8B               M         clrf    LATC
00077C 6A8C               M         clrf    LATD
00077E EF?? F???          M         goto    PLOG
                          M 
000782                    M Exit
000782 0000               M         nop
                      00805         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000784 0E09               M         movlw   key8                ; poll for mode
000786 6210               M         cpfseq  KEY                 ; check this against key press
000788 EF?? F???          M         goto    Exit
                          M 
00078C                    M Next
00078C 6A89               M         clrf    LATA                ; clear pins before proceeding
00078E 6A8A               M         clrf    LATB
000790 6A8B               M         clrf    LATC
000792 6A8C               M         clrf    LATD
000794 EF?? F???          M         goto    PLOG
                          M 
000798                    M Exit
000798 0000               M         nop
                      00806         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
00079A 0E0A               M         movlw   key9                ; poll for mode
00079C 6210               M         cpfseq  KEY                 ; check this against key press
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00079E EF?? F???          M         goto    Exit
                          M 
0007A2                    M Next
0007A2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A4 6A8A               M         clrf    LATB
0007A6 6A8B               M         clrf    LATC
0007A8 6A8C               M         clrf    LATD
0007AA EF?? F???          M         goto    PLOG
                          M 
0007AE                    M Exit
0007AE 0000               M         nop
0007B0 D???           00807         bra HOLD_PERM_LOG
                      00808         
0007B2                00809 PLOG
0007B2 EC?? F???      00810         call    ClrLCD
                      00811         Display PermLog1
  0000                    M         local   loop
0007B6 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0007B8 6EF8               M         movwf   TBLPTRU
0007BA 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0007BC 6EF7               M         movwf   TBLPTRH
0007BE 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0007C0 6EF6               M         movwf   TBLPTRL
0007C2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007C4 50F5               M         movf    TABLAT, W
0007C6                    M loop
0007C6 EC?? F???          M         call    WR_DATA         ; write to LCD
0007CA 000B               M         tblrd+*                 ; next row in table
0007CC 50F5               M         movf    TABLAT, W
0007CE E1??               M         bnz     loop
                      00812         
                      00813         ; find the key press value
0007D0 C010 FFE8      00814         movff   KEY, WREG
0007D4 2AE8           00815         incf    WREG        ; W = KEY+1
0007D6 6E17           00816         movwf   temp
                      00817         
0007D8 42E8           00818         rrncf   WREG        ; division by 4
0007DA 9EE8           00819         bcf     WREG, 7     ; clear last bit, overflow from rotate
0007DC 42E8           00820         rrncf   WREG        
0007DE 9EE8           00821         bcf     WREG, 7
0007E0 5E17           00822         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0007E2 C017 FFE8      00823         movff   temp, WREG
0007E6 C017 F011      00824         movff   temp, temp_KEY
0007EA 0D15           00825         mullw   d'21'       ; indexed as mutliples of 21
                      00826 
0007EC                00827 displayNum
0007EC C011 FFE8      00828         movff   temp_KEY, WREG
0007F0 0F30           00829         addlw   0x30
0007F2 EC?? F???      00830         call    WR_DATA
0007F6 0E3A           00831         movlw   ":"
0007F8 EC?? F???      00832         call    WR_DATA
0007FC 0E20           00833         movlw   " "
0007FE EC?? F???      00834         call    WR_DATA
                      00835         
000802 CFF3 F022      00836         movff   PRODL, L_EE
000806 0E00           00837         movlw   d'0'
000808 2622           00838         addwf   L_EE
                      00839         READEE  OP_sec, H_EE, L_EE
00080A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00080E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000812 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000814 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000816 80A6               M         bsf     EECON1, RD          ; read EEPROM
000818 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
00081C 2A22           00840         incf    L_EE
                      00841         READEE  OP_INT, H_EE, L_EE
00081E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000822 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000826 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000828 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00082A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00082C CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000830 2A22           00842         incf    L_EE
000832 EC?? F???      00843         call    DisplayExeTime
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000836 CFF3 F022      00844         movff   PRODL, L_EE
                      00845         
                      00846         ; reset eeprom to beginning
00083A EC?? F???      00847         call    LCD_L2
00083E CFF3 F022      00848         movff   PRODL, L_EE
000842 EC?? F???      00849         call    DispOpRTC
                      00850         
000846                00851 HOLD_PLOG
000846 EC?? F???      00852         call    READ_KEY
                      00853         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00084A 0E0D               M         movlw   key0                ; poll for mode
00084C 6210               M         cpfseq  KEY                 ; check this against key press
00084E EF?? F???          M         goto    Exit
                          M 
000852                    M Next
000852 6A89               M         clrf    LATA                ; clear pins before proceeding
000854 6A8A               M         clrf    LATB
000856 6A8B               M         clrf    LATC
000858 6A8C               M         clrf    LATD
00085A EF?? F???          M         goto    PERM_LOG
                          M 
00085E                    M Exit
00085E 0000               M         nop
000860 D???           00854         bra HOLD_PLOG
                      00855         
                      00856 ;*******************************************************************************
                      00857 ; pc interface
                      00858 ;*******************************************************************************
                      00859 
000862                00860 PC_MODE
000862 EC?? F???      00861         call    ClrLCD
                      00862         Display PC1
  0000                    M         local   loop
000866 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000868 6EF8               M         movwf   TBLPTRU
00086A 0E??               M         movlw   high PC1        ; Move Table<15:8>
00086C 6EF7               M         movwf   TBLPTRH
00086E 0E??               M         movlw   low PC1         ; Move Table<7:0>
000870 6EF6               M         movwf   TBLPTRL
000872 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000874 50F5               M         movf    TABLAT, W
000876                    M loop
000876 EC?? F???          M         call    WR_DATA         ; write to LCD
00087A 000B               M         tblrd+*                 ; next row in table
00087C 50F5               M         movf    TABLAT, W
00087E E1??               M         bnz     loop
000880 EC?? F???      00863         call    LCD_L2
                      00864         Display PC2
  0000                    M         local   loop
000884 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000886 6EF8               M         movwf   TBLPTRU
000888 0E??               M         movlw   high PC2        ; Move Table<15:8>
00088A 6EF7               M         movwf   TBLPTRH
00088C 0E??               M         movlw   low PC2         ; Move Table<7:0>
00088E 6EF6               M         movwf   TBLPTRL
000890 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000892 50F5               M         movf    TABLAT, W
000894                    M loop
000894 EC?? F???          M         call    WR_DATA         ; write to LCD
000898 000B               M         tblrd+*                 ; next row in table
00089A 50F5               M         movf    TABLAT, W
00089C E1??               M         bnz     loop
00089E CFF9 F03A      00865         movff   PCL, PC_PCL
0008A2 CFFA F03B      00866         movff   PCLATH, PC_PCLATH
0008A6 CFFB F03C      00867         movff   PCLATU, PC_PCLATU
                      00868         
0008AA                00869 HOLD_PC
0008AA EC?? F???      00870         call    READ_KEY
                      00871         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008AE 0E0D               M         movlw   key0                ; poll for mode
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008B0 6210               M         cpfseq  KEY                 ; check this against key press
0008B2 EF?? F???          M         goto    Exit
                          M 
0008B6                    M Next
0008B6 6A89               M         clrf    LATA                ; clear pins before proceeding
0008B8 6A8A               M         clrf    LATB
0008BA 6A8B               M         clrf    LATC
0008BC 6A8C               M         clrf    LATD
0008BE EF?? F???          M         goto    STANDBY
                          M 
0008C2                    M Exit
0008C2 0000               M         nop
                      00872         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008C4 0E0E               M         movlw   keyH                ; poll for mode
0008C6 6210               M         cpfseq  KEY                 ; check this against key press
0008C8 EF?? F???          M         goto    Exit
                          M 
0008CC                    M Next
0008CC 6A89               M         clrf    LATA                ; clear pins before proceeding
0008CE 6A8A               M         clrf    LATB
0008D0 6A8B               M         clrf    LATC
0008D2 6A8C               M         clrf    LATD
0008D4 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008D8                    M Exit
0008D8 0000               M         nop
0008DA D???           00873         bra     HOLD_PC
                      00874 
0008DC                00875 PC_TRANSFER
0008DC 6839           00876         setf    transferring
0008DE EC?? F???      00877         call    ClrLCD
                      00878         Display PCTransfer
  0000                    M         local   loop
0008E2 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0008E4 6EF8               M         movwf   TBLPTRU
0008E6 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008E8 6EF7               M         movwf   TBLPTRH
0008EA 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008EC 6EF6               M         movwf   TBLPTRL
0008EE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008F0 50F5               M         movf    TABLAT, W
0008F2                    M loop
0008F2 EC?? F???          M         call    WR_DATA         ; write to LCD
0008F6 000B               M         tblrd+*                 ; next row in table
0008F8 50F5               M         movf    TABLAT, W
0008FA E1??               M         bnz     loop
                      00879         ;call   DataUSART
0008FC 6A39           00880         clrf    transferring
0008FE D???           00881         bra     HOLD_PC
                      00882         
                      00883 ;*******************************************************************************
                      00884 ; subroutines
                      00885 ;*******************************************************************************
                      00886 
000900                00887 RTC_INIT
                      00888         ; set sda and scl to high
000900 9882           00889         bcf     PORTC, 4
000902 9682           00890         bcf     PORTC, 3
000904 8894           00891         bsf     TRISC, 4
000906 8694           00892         bsf     TRISC, 3
                      00893         
000908 EC?? F???      00894         call    i2c_common_setup
                      00895         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
00090C 0012           00896 return
                      00897         
00090E                00898 SAVE_TIME   
                      00899         rtc_read    0x02        ; hours
00090E 0E02               M     movlw   0x02
000910 6E??               M     movwf   regaddress
000912 EC?? F???          M     call    read_rtc
000916 50??               M     movf    datachar,w
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000918 EC?? F???          M     call    rtc_convert
00091C EC?? F???      00900         call    WriteEE_RTC
                      00901         rtc_read    0x01        ; minutes
000920 0E01               M     movlw   0x01
000922 6E??               M     movwf   regaddress
000924 EC?? F???          M     call    read_rtc
000928 50??               M     movf    datachar,w
00092A EC?? F???          M     call    rtc_convert
00092E EC?? F???      00902         call    WriteEE_RTC
                      00903         rtc_read    0x06        ; years
000932 0E06               M     movlw   0x06
000934 6E??               M     movwf   regaddress
000936 EC?? F???          M     call    read_rtc
00093A 50??               M     movf    datachar,w
00093C EC?? F???          M     call    rtc_convert
000940 EC?? F???      00904         call    WriteEE_RTC
                      00905         rtc_read    0x05        ; months
000944 0E05               M     movlw   0x05
000946 6E??               M     movwf   regaddress
000948 EC?? F???          M     call    read_rtc
00094C 50??               M     movf    datachar,w
00094E EC?? F???          M     call    rtc_convert
000952 EC?? F???      00906         call    WriteEE_RTC
                      00907         rtc_read    0x04        ; days
000956 0E04               M     movlw   0x04
000958 6E??               M     movwf   regaddress
00095A EC?? F???          M     call    read_rtc
00095E 50??               M     movf    datachar,w
000960 EC?? F???          M     call    rtc_convert
000964 EC?? F???      00908         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000968 0012           00909 return
                      00910         
00096A                00911 SAVE_EXE_TIME
                      00912         
Warning[202]: Argument out of range.  Least significant bits used.
00096A 3818           00913         swapf   OP_sec, WREG    ; 100's seconds
00096C 6E17           00914         movwf   temp
00096E 0E0F           00915         movlw   0x0F
000970 1617           00916         andwf   temp
000972 C017 FFE8      00917         movff   temp, WREG
000976 0F30           00918         addlw   0x30    
                      00919         WriteEE WREG, H_EE, L_EE
000978 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00097C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000980 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000984 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000986 D???               M         bra     $-2
                          M 
000988 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00098A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00098C 84A6               M         bsf     EECON1, WREN        ; enable write
00098E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000990 98A1               M         bcf     PIR2, EEIF
                          M 
000992 0E55               M         movlw   0x55
000994 6EA7               M         movwf   EECON2              ; write 55h
000996 0EAA               M         movlw   0xaa
000998 6EA7               M         movwf   EECON2              ; write 0xaa
00099A 82A6               M         bsf     EECON1, WR          ; begin write
00099C B2A6               M         btfsc   EECON1, WR
00099E D???               M         bra     $-2
                          M 
0009A0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009A2 94A6               M         bcf     EECON1, WREN        ; disable writes
0009A4 2A22           00920         incf    L_EE
                      00921         
0009A6 C018 F017      00922         movff   OP_sec, temp    ; 10's seconds
0009AA 0E0F           00923         movlw   0x0F
0009AC 1617           00924         andwf   temp            ; Temp = lower nibble of Op_sec
0009AE C017 FFE8      00925         movff   temp, WREG      ; W = Temp
0009B2 0F30           00926         addlw   0x30            ; Convert to ASCII
                      00927         WriteEE WREG, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009B4 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0009B8 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0009BC CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009C0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009C2 D???               M         bra     $-2
                          M 
0009C4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009C6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009C8 84A6               M         bsf     EECON1, WREN        ; enable write
0009CA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009CC 98A1               M         bcf     PIR2, EEIF
                          M 
0009CE 0E55               M         movlw   0x55
0009D0 6EA7               M         movwf   EECON2              ; write 55h
0009D2 0EAA               M         movlw   0xaa
0009D4 6EA7               M         movwf   EECON2              ; write 0xaa
0009D6 82A6               M         bsf     EECON1, WR          ; begin write
0009D8 B2A6               M         btfsc   EECON1, WR
0009DA D???               M         bra     $-2
                          M 
0009DC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009DE 94A6               M         bcf     EECON1, WREN        ; disable writes
0009E0 2A22           00928         incf    L_EE
                      00929         
Warning[202]: Argument out of range.  Least significant bits used.
0009E2 3819           00930         swapf   OP_INT, WREG    ;1's seconds
0009E4 6E17           00931         movwf   temp
0009E6 0E0F           00932         movlw   0x0f
0009E8 1617           00933         andwf   temp
0009EA C017 FFE8      00934         movff   temp, WREG
0009EE 0F30           00935         addlw   0x30
                      00936         WriteEE WREG, H_EE, L_EE
0009F0 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0009F4 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0009F8 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009FC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009FE D???               M         bra     $-2
                          M 
000A00 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A02 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A04 84A6               M         bsf     EECON1, WREN        ; enable write
000A06 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A08 98A1               M         bcf     PIR2, EEIF
                          M 
000A0A 0E55               M         movlw   0x55
000A0C 6EA7               M         movwf   EECON2              ; write 55h
000A0E 0EAA               M         movlw   0xaa
000A10 6EA7               M         movwf   EECON2              ; write 0xaa
000A12 82A6               M         bsf     EECON1, WR          ; begin write
000A14 B2A6               M         btfsc   EECON1, WR
000A16 D???               M         bra     $-2
                          M 
000A18 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A1A 94A6               M         bcf     EECON1, WREN        ; disable writes
000A1C 2A22           00937         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000A1E 0012           00938 return
                      00939         
                      00940                 
000A20                00941 DISPLAY_RTC     
                      00942         ; display data in this format hh/minmin/yy yy/mm/dd
                      00943         rtc_read    0x02            ; 0x02 from DS1307 - hours
000A20 0E02               M     movlw   0x02
000A22 6E??               M     movwf   regaddress
000A24 EC?? F???          M     call    read_rtc
000A28 50??               M     movf    datachar,w
000A2A EC?? F???          M     call    rtc_convert
000A2E C??? FFE8      00944         movff   tens_digit,WREG
000A32 EC?? F???      00945         call    WR_DATA
000A36 C??? FFE8      00946         movff   ones_digit,WREG
000A3A EC?? F???      00947         call    WR_DATA
000A3E 0E68           00948         movlw   "h"
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A40 EC?? F???      00949         call    WR_DATA
                      00950         
                      00951         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000A44 0E01               M     movlw   0x01
000A46 6E??               M     movwf   regaddress
000A48 EC?? F???          M     call    read_rtc
000A4C 50??               M     movf    datachar,w
000A4E EC?? F???          M     call    rtc_convert
000A52 C??? FFE8      00952         movff   tens_digit,WREG
000A56 EC?? F???      00953         call    WR_DATA
000A5A C??? FFE8      00954         movff   ones_digit,WREG
000A5E EC?? F???      00955         call    WR_DATA
                      00956         
                      00957         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000A62 0E00               M     movlw   0x00
000A64 6E??               M     movwf   regaddress
000A66 EC?? F???          M     call    read_rtc
000A6A 50??               M     movf    datachar,w
000A6C EC?? F???          M     call    rtc_convert
000A70 C??? FFE8      00958         movff   tens_digit,WREG
000A74 EC?? F???      00959         call    WR_DATA
000A78 C??? FFE8      00960         movff   ones_digit,WREG
000A7C EC?? F???      00961         call    WR_DATA
000A80 0E20           00962         movlw   " "
000A82 EC?? F???      00963         call    WR_DATA
                      00964         
                      00965         rtc_read    0x06            ; 0x06 from DS1307 - years
000A86 0E06               M     movlw   0x06
000A88 6E??               M     movwf   regaddress
000A8A EC?? F???          M     call    read_rtc
000A8E 50??               M     movf    datachar,w
000A90 EC?? F???          M     call    rtc_convert
000A94 C??? FFE8      00966         movff   tens_digit,WREG
000A98 EC?? F???      00967         call    WR_DATA
000A9C C??? FFE8      00968         movff   ones_digit,WREG
000AA0 EC?? F???      00969         call    WR_DATA
000AA4 0E2F           00970         movlw   "/"
000AA6 EC?? F???      00971         call    WR_DATA
                      00972         
                      00973         rtc_read    0x05            ; 0x05 from DS1307 - months
000AAA 0E05               M     movlw   0x05
000AAC 6E??               M     movwf   regaddress
000AAE EC?? F???          M     call    read_rtc
000AB2 50??               M     movf    datachar,w
000AB4 EC?? F???          M     call    rtc_convert
000AB8 C??? FFE8      00974         movff   tens_digit,WREG
000ABC EC?? F???      00975         call    WR_DATA
000AC0 C??? FFE8      00976         movff   ones_digit,WREG
000AC4 EC?? F???      00977         call    WR_DATA
000AC8 0E2F           00978         movlw   "/"
000ACA EC?? F???      00979         call    WR_DATA
                      00980         
                      00981         rtc_read    0x04            ; 0x04 from DS1307 - days
000ACE 0E04               M     movlw   0x04
000AD0 6E??               M     movwf   regaddress
000AD2 EC?? F???          M     call    read_rtc
000AD6 50??               M     movf    datachar,w
000AD8 EC?? F???          M     call    rtc_convert
000ADC C??? FFE8      00982         movff   tens_digit,WREG
000AE0 EC?? F???      00983         call    WR_DATA
000AE4 C??? FFE8      00984         movff   ones_digit,WREG
000AE8 EC?? F???      00985         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000AEC 0012           00986 return
                      00987         
000AEE                00988 SET_TIME
                      00989         rtc_resetAll
                          M 
000AEE 6A??               M     clrf    databyte
000AF0 0E06               M     movlw   6
000AF2 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000AF4                    M     del_loop0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AF4 EC?? F???          M     call    write_rtc
000AF8 2E??               M     decfsz  regaddress
000AFA D???               M     bra     del_loop0
000AFC EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      00990         
                      00991         rtc_set 0x00,   b'10000000'
000B00 0E00               M     movlw   0x00
000B02 6E??               M     movwf   regaddress
000B04 0E80               M     movlw   b'10000000'
000B06 6E??               M     movwf   databyte
000B08 EC?? F???          M     call    write_rtc
                      00992 
                      00993         rtc_set 0x06,   b'00010111'             ; Year 17
000B0C 0E06               M     movlw   0x06
000B0E 6E??               M     movwf   regaddress
000B10 0E17               M     movlw   b'00010111'
000B12 6E??               M     movwf   databyte
000B14 EC?? F???          M     call    write_rtc
                      00994         rtc_set 0x05,   b'00000010'             ; Month 2
000B18 0E05               M     movlw   0x05
000B1A 6E??               M     movwf   regaddress
000B1C 0E02               M     movlw   b'00000010'
000B1E 6E??               M     movwf   databyte
000B20 EC?? F???          M     call    write_rtc
                      00995         rtc_set 0x04,   b'00011001'             ; Date 19
000B24 0E04               M     movlw   0x04
000B26 6E??               M     movwf   regaddress
000B28 0E19               M     movlw   b'00011001'
000B2A 6E??               M     movwf   databyte
000B2C EC?? F???          M     call    write_rtc
                      00996         rtc_set 0x02,   b'00010001'             ; Hours 11
000B30 0E02               M     movlw   0x02
000B32 6E??               M     movwf   regaddress
000B34 0E11               M     movlw   b'00010001'
000B36 6E??               M     movwf   databyte
000B38 EC?? F???          M     call    write_rtc
                      00997         rtc_set 0x01,   b'00111000'             ; Minutes 38
000B3C 0E01               M     movlw   0x01
000B3E 6E??               M     movwf   regaddress
000B40 0E38               M     movlw   b'00111000'
000B42 6E??               M     movwf   databyte
000B44 EC?? F???          M     call    write_rtc
                      00998         rtc_set 0x00,   b'00000000'             ; Seconds 0
000B48 0E00               M     movlw   0x00
000B4A 6E??               M     movwf   regaddress
000B4C 0E00               M     movlw   b'00000000'
000B4E 6E??               M     movwf   databyte
000B50 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000B54 0012           00999 return
                      01000         
000B56                01001 INIT_USART
000B56 0E0F           01002         movlw   15      ; baud rate 9600
000B58 6EAF           01003         movwf   SPBRG
000B5A 6AAC           01004         clrf    TXSTA
                      01005         
000B5C 6AAB           01006         clrf    RCSTA
000B5E 8EAB           01007         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000B60 88AB           01008         bsf     RCSTA,CREN      ; continous receive
                      01009         
000B62 8AAC           01010         bsf     TXSTA, TXEN     ; transmit enabled
000B64 0012           01011         return
                      01012 
                      01013 ;DataUSART
                      01014 ;       
                      01015 ;       movlw   0x02
                      01016 ;       call    USART_WAIT
                      01017 ;       movlw   0x0D
                      01018 ;       call    USART_WAIT
                      01019 ;       
                      01020 ;       movlw   d'21'       ; start of permanent logs
                      01021 ;       movff   w, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01022 ;       TransferTable   PCLog1
                      01023 ;       
                      01024 ;       ; display time here
                      01025 ;;      rtc_read        0x02
                      01026 ;;              movf        tens_digit, W
                      01027 ;;        andlw       b'00000001'
                      01028 ;;        addlw       0x30
                      01029 ;;        call        TransmitWaitUSART
                      01030 ;;        movf        ones_digit, W
                      01031 ;;        call        TransmitWaitUSART
                      01032 ;;              movlw           ":"
                      01033 ;;              call            TransmitWaitUSART
                      01034 ;;              ; Dispay minutes
                      01035 ;;              rtc_read        0x01
                      01036 ;;              call        SendRTC_USART
                      01037 ;;              ; Dispay AM/PM
                      01038 ;;              rtc_read        0x02
                      01039 ;;        movlw       "P"
                      01040 ;;        btfss       tens_digit, 1
                      01041 ;;        movlw       "A"
                      01042 ;;        call        TransmitWaitUSART
                      01043 ;;        movlw       "M"
                      01044 ;;        call        TransmitWaitUSART
                      01045 ;;              movlw           " "
                      01046 ;;        call        TransmitWaitUSART
                      01047 ;;              ; Display month
                      01048 ;;              rtc_read        0x05
                      01049 ;;              call        SendRTC_USART
                      01050 ;;              movlw           0x2F            ; ASCII '/'
                      01051 ;;              call            TransmitWaitUSART
                      01052 ;;              ; Display day
                      01053 ;;              rtc_read        0x04
                      01054 ;;              call        SendRTC_USART
                      01055 ;;              movlw           0x2F            ; ASCII '/'
                      01056 ;;              call            TransmitWaitUSART
                      01057 ;;              ; Display year
                      01058 ;;              rtc_read        0x06
                      01059 ;;              call        SendRTC_USART
                      01060 ;       
                      01061 ;       call    USART_LINE
                      01062 ;       call    USART_LINE
                      01063 ;       
                      01064 ;       clrf    counter
                      01065 ;       incf    counter
                      01066 ;
                      01067 ;USART_TRANSFER
                      01068 ;       movlw   d'21'
                      01069 ;       mulwf   counter
                      01070 ;       movff   PRODL, L_EE
                      01071 ;       movlw   d'9'
                      01072 ;       addwf   L_EE
                      01073 ;       READEE  OP_sec, H_EE, L_EE
                      01074 ;       incf    L_EE
                      01075 ;       READEE  OP_INT, H_EE, L_EE
                      01076 ;       incf    L_EE
                      01077 ;       ; call  TransferTime
                      01078 ;       
                      01079 ;       ; send rtc
                      01080 ;       movlw   0x09
                      01081 ;       call    USART_WAIT
                      01082 ;       movff   PRODL, L_EE
                      01083 ;       ;call   TransferRTC
                      01084 ;       call    USART_LINE
                      01085 ;       
                      01086 ;       
                      01087 ;       
                      01088 ;       
                      01089 ;USART_WAIT
                      01090 ;       movwf   TXREG
                      01091 ;       btfss   TXSTA,1
                      01092 ;       goto    $-2
                      01093 ;       return
                      01094 ;
                      01095 ;USART_LINE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01096 ;       movlw   0x0A
                      01097 ;       call    USART_WAIT
                      01098 ;       movlw   0x0D
                      01099 ;       call    USART_WAIT
                      01100 ;       return
                      01101         
                      01102         
000B66                01103 Delay5us
000B66 0E78           01104         movlw   d'120'
000B68 6E1C           01105         movwf   d5us
                      01106 
000B6A                01107 loop5us
000B6A 2E1C           01108         decfsz  d5us
000B6C EF?? F???      01109         goto    loop5us
000B70 0000           01110         nop
000B72 0012           01111         return
                      01112 
000B74                01113 Delay200us
000B74 0EA4           01114         movlw   0xA4
000B76 6E1D           01115         movwf   d200us
                      01116 
000B78                01117 loop200us
000B78 2E1D           01118         decfsz  d200us
000B7A EF?? F???      01119         goto    loop200us
000B7E 0000           01120         nop
000B80 0012           01121         return
                      01122 
000B82                01123 Delay50ms
000B82 0EF9           01124         movlw   0xF9
000B84 6E1E           01125         movwf   d50ms
                      01126 
000B86                01127 loop50ms
000B86 EC?? F???      01128         call    Delay200us
000B8A 2E1E           01129         decfsz  d50ms
                      01130 
000B8C                01131 Cycles
000B8C EF?? F???      01132         goto    loop50ms
000B90 EC?? F???      01133         call    Delay200us
000B94 0012           01134         return
                      01135 
000B96                01136 WriteEE_RTC
                      01137         WriteEE tens_digit, H_EE, L_EE
000B96 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000B9A C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000B9E C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000BA2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BA4 D???               M         bra     $-2
                          M 
000BA6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BA8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BAA 84A6               M         bsf     EECON1, WREN        ; enable write
000BAC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BAE 98A1               M         bcf     PIR2, EEIF
                          M 
000BB0 0E55               M         movlw   0x55
000BB2 6EA7               M         movwf   EECON2              ; write 55h
000BB4 0EAA               M         movlw   0xaa
000BB6 6EA7               M         movwf   EECON2              ; write 0xaa
000BB8 82A6               M         bsf     EECON1, WR          ; begin write
000BBA B2A6               M         btfsc   EECON1, WR
000BBC D???               M         bra     $-2
                          M 
000BBE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BC0 94A6               M         bcf     EECON1, WREN        ; disable writes
000BC2 2A22           01138         incf    L_EE
                      01139         WriteEE ones_digit, H_EE, L_EE
000BC4 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BC8 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BCC C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000BD0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BD2 D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BD4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BD6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BD8 84A6               M         bsf     EECON1, WREN        ; enable write
000BDA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BDC 98A1               M         bcf     PIR2, EEIF
                          M 
000BDE 0E55               M         movlw   0x55
000BE0 6EA7               M         movwf   EECON2              ; write 55h
000BE2 0EAA               M         movlw   0xaa
000BE4 6EA7               M         movwf   EECON2              ; write 0xaa
000BE6 82A6               M         bsf     EECON1, WR          ; begin write
000BE8 B2A6               M         btfsc   EECON1, WR
000BEA D???               M         bra     $-2
                          M 
000BEC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BEE 94A6               M         bcf     EECON1, WREN        ; disable writes
000BF0 2A22           01140         incf    L_EE
000BF2 0012           01141         return
                      01142 
000BF4                01143 ClearEEPROM_21
000BF4 6A21           01144         clrf    H_EE
000BF6 6A22           01145         clrf    L_EE
000BF8 6820           01146         setf    clear_EE
000BFA 6A15           01147         clrf    counter
000BFC                01148 ClearNext
                      01149         WriteEE         clear_EE, H_EE, L_EE
000BFC C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000C00 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000C04 C020 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000C08 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C0A D???               M         bra     $-2
                          M 
000C0C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C0E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C10 84A6               M         bsf     EECON1, WREN        ; enable write
000C12 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C14 98A1               M         bcf     PIR2, EEIF
                          M 
000C16 0E55               M         movlw   0x55
000C18 6EA7               M         movwf   EECON2              ; write 55h
000C1A 0EAA               M         movlw   0xaa
000C1C 6EA7               M         movwf   EECON2              ; write 0xaa
000C1E 82A6               M         bsf     EECON1, WR          ; begin write
000C20 B2A6               M         btfsc   EECON1, WR
000C22 D???               M         bra     $-2
                          M 
000C24 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C26 94A6               M         bcf     EECON1, WREN        ; disable writes
000C28 2A15           01150         incf            counter
000C2A 2A22           01151         incf            L_EE
000C2C 0E15           01152         movlw           d'21'
000C2E 6215           01153         cpfseq          counter
000C30 EF?? F???      01154         goto            ClearNext
000C34 6A21           01155         clrf            H_EE
000C36 6A22           01156         clrf            L_EE
000C38 0012           01157         return
                      01158         
000C3A                01159 READ_KEY
000C3A A281           01160         btfss   PORTB, 1        ; check for keypad interrupt
000C3C EF?? F???      01161         goto    READ_KEY
000C40 3881           01162         swapf   PORTB, W
000C42 0B0F           01163         andlw   0x0F
000C44 6E10           01164         movwf   KEY
000C46 B281           01165         btfsc   PORTB, 1
000C48 EF?? F???      01166         goto    $-2
000C4C 0012           01167         return
                      01168 
000C4E                01169 READ_KEY_TIME
000C4E EC?? F???      01170         call        LCD_L2          ; go to second line to print RTC
                      01171 
                      01172         ; display the time
000C52 EC?? F???      01173         call    DISPLAY_RTC
                      01174 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C56 A281           01175         btfss       PORTB, 1    ; keypad interrupt
000C58 EF?? F???      01176         goto        READ_KEY_TIME
000C5C 3881           01177         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000C5E 0B0F           01178         andlw       0x0F        ; only want W3:0
000C60 6E10           01179         movwf       KEY         ; write this value to the KEY
000C62 B281           01180         btfsc       PORTB, 1    ; wait for release
000C64 EF?? F???      01181         goto        $-2         ; go back one instruction
000C68 0012           01182         return
                      01183 
000C6A                01184 DisplayExeTime
                      01185         READEE  REG_EE, H_EE, L_EE
000C6A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C6E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C72 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C74 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C76 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C78 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000C7C 0EFF           01186         movlw   0xFF
000C7E 6223           01187         cpfseq  REG_EE
000C80 EF?? F???      01188         goto    NoSkipDispExeTime
                      01189         Display NoData
  0000                    M         local   loop
000C84 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000C86 6EF8               M         movwf   TBLPTRU
000C88 0E??               M         movlw   high NoData     ; Move Table<15:8>
000C8A 6EF7               M         movwf   TBLPTRH
000C8C 0E??               M         movlw   low NoData      ; Move Table<7:0>
000C8E 6EF6               M         movwf   TBLPTRL
000C90 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C92 50F5               M         movf    TABLAT, W
000C94                    M loop
000C94 EC?? F???          M         call    WR_DATA         ; write to LCD
000C98 000B               M         tblrd+*                 ; next row in table
000C9A 50F5               M         movf    TABLAT, W
000C9C E1??               M         bnz     loop
000C9E 0EFF           01190         movlw   0xFF
000CA0 6023           01191         cpfslt  REG_EE
000CA2 EF?? F???      01192         goto    SkipDispExeTime
000CA6 0012           01193         return
                      01194 
000CA8                01195 NoSkipDispExeTime
                      01196         READEE  WREG, H_EE, L_EE
000CA8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CAC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CB0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CB2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CB4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CB6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CBA EC?? F???      01197         call    WR_DATA
000CBE 2A22           01198         incf    L_EE
                      01199         
                      01200         READEE  WREG, H_EE, L_EE
000CC0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CC4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CC8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CCA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CCC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CCE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CD2 EC?? F???      01201         call    WR_DATA
000CD6 2A22           01202         incf    L_EE
                      01203         
                      01204         READEE  WREG, H_EE, L_EE
000CD8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CDC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CE0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CE2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CE4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CE6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CEA EC?? F???      01205         call    WR_DATA
000CEE 2A22           01206         incf    L_EE
                      01207 
000CF0 0E73           01208         movlw   0x73            ; Write 's'
000CF2 EC?? F???      01209         call    WR_DATA
000CF6 EC?? F???      01210         call    LCD_L2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CFA                01211 SkipDispExeTime
000CFA 0012           01212         return
                      01213 
000CFC                01214 DispOpRTC
                      01215         READEE  REG_EE, H_EE, L_EE
000CFC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D00 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D04 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D06 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D08 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D0A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D0E 0EFF           01216         movlw   0xff
000D10 6223           01217         cpfseq  REG_EE
000D12 EF?? F???      01218         goto    NoSkipDispOpRTC
                      01219         Display NoData
  0000                    M         local   loop
000D16 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D18 6EF8               M         movwf   TBLPTRU
000D1A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D1C 6EF7               M         movwf   TBLPTRH
000D1E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000D20 6EF6               M         movwf   TBLPTRL
000D22 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D24 50F5               M         movf    TABLAT, W
000D26                    M loop
000D26 EC?? F???          M         call    WR_DATA         ; write to LCD
000D2A 000B               M         tblrd+*                 ; next row in table
000D2C 50F5               M         movf    TABLAT, W
000D2E E1??               M         bnz     loop
000D30 0EFF           01220         movlw   0xff
000D32 6023           01221         cpfslt  REG_EE
000D34 EF?? F???      01222         goto    SkipDispOpRTC
                      01223 
000D38                01224 NoSkipDispOpRTC
                      01225         READEE  REG_EE, H_EE, L_EE
000D38 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D3C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D40 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D42 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D44 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D46 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D4A C023 FFE8      01226         movff   REG_EE, WREG
000D4E EC?? F???      01227         call    WR_DATA
000D52 2A22           01228         incf    L_EE
                      01229         
                      01230         READEE  REG_EE, H_EE, L_EE
000D54 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D58 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D5C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D5E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D60 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D62 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D66 C023 FFE8      01231         movff   REG_EE, WREG
000D6A EC?? F???      01232         call    WR_DATA
000D6E 2A22           01233         incf    L_EE
                      01234 
000D70 0E68           01235         movlw   "h"
000D72 EC?? F???      01236         call    WR_DATA
                      01237         
000D76 EC?? F???      01238         call    DispOpRTC_Helper
                      01239         
000D7A 0E20           01240         movlw   " "
000D7C EC?? F???      01241         call    WR_DATA
                      01242         
000D80 EC?? F???      01243         call    DispOpRTC_Helper
000D84 0E2F           01244         movlw   "/"
000D86 EC?? F???      01245         call    WR_DATA
                      01246 
000D8A EC?? F???      01247         call    DispOpRTC_Helper
000D8E 0E2F           01248         movlw   "/"
000D90 EC?? F???      01249         call    WR_DATA
000D94 EC?? F???      01250         call    DispOpRTC_Helper
000D98                01251 SkipDispOpRTC
000D98 0012           01252                 return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  9:50:56         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D9A                01253 DispOpRTC_Helper
                      01254         READEE          REG_EE, H_EE, L_EE
000D9A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D9E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DA2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DA4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DA6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DA8 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000DAC C023 FFE8      01255         movff           REG_EE, WREG
000DB0 EC?? F???      01256         call            WR_DATA
000DB4 2A22           01257         incf            L_EE
                      01258         READEE          REG_EE, H_EE, L_EE
000DB6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DBA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DBE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DC0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DC2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DC4 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000DC8 C023 FFE8      01259         movff           REG_EE, WREG
000DCC EC?? F???      01260         call            WR_DATA
000DD0 2A22           01261         incf            L_EE
000DD2 0012           01262         return
Warning[205]: Found directive in column 1. (end)
                      01263 end

Errors   :     0
Warnings :    66 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

