MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00107     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (StandbyInfo)
000018 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000040 6954 656D 003A 00109     Log1        db          "Time:",0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (Log2)
000046 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000054 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00005C 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000066 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000076 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
000082 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
00008E 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
000096 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000A4 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000AE 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000BE 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000C8 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000D2 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127 
                      00128 TransferTable macro table
                      00129         local loop
                      00130         
                      00131         movlw   upper table
                      00132         movwf   TBLPTRU
                      00133         movlw   high table
                      00134         movwf   TBLPTRH
                      00135         movlw   low table
                      00136         movwf   TBLPTRL
                      00137         tblrd*
                      00138         movff   TABLAT, WREG
                      00139 loop
                      00140         call    USART_WAIT
                      00141         tblrd+*
                      00142         movff   TABLAT, WREG
                      00143         bnz     loop
                      00144         endm
                      00145         
                      00146 ConfigLCD   macro
                      00147           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00148           call      WR_INS
                      00149 
                      00150           movlw     b'00001100'    ; display on/off
                      00151           call      WR_INS
                      00152           movlw     b'00000001'    ; Clear ram
                      00153           call      WR_INS
                      00154           endm
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00155         
                      00156 movMSB  macro   port
                      00157         andlw   0xF0
                      00158         iorwf   port, f
                      00159         iorlw   0x0F
                      00160         andwf   port, f
                      00161         endm
                      00162 
                      00163 Delay50N macro count, N
                      00164         local   loop
                      00165         movlw   N
                      00166         movwf   count
                      00167 
                      00168 loop
                      00169         call    Delay50ms
                      00170         decfsz  count
                      00171         goto    loop
                      00172         endm
                      00173 
                      00174 Display macro   Message
                      00175         local   loop
                      00176         movlw   upper Message   ; Move Table<20:16>
                      00177         movwf   TBLPTRU
                      00178         movlw   high Message    ; Move Table<15:8>
                      00179         movwf   TBLPTRH
                      00180         movlw   low Message     ; Move Table<7:0>
                      00181         movwf   TBLPTRL
                      00182         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00183         movf    TABLAT, W
                      00184 loop
                      00185         call    WR_DATA         ; write to LCD
                      00186         tblrd+*                 ; next row in table
                      00187         movf    TABLAT, W
                      00188         bnz     loop
                      00189         endm
                      00190 
                      00191 DisplayLog  macro   addrH, addrL
                      00192             local   Again, Finish
                      00193             
                      00194             clrf    SkipCount
                      00195             clrf    MAX_EE
                      00196 
                      00197             ; Check if there is No Data first
                      00198             READEE      REG_EE, addrH, addrL
                      00199             movlw       0xFF
                      00200             cpfseq      REG_EE
                      00201             goto        Again
                      00202             Display     NoData
                      00203             goto        Finish
                      00204 Again
                      00205             ; Put a space every 3 Writes
                      00206             movlw       d'3'
                      00207             cpfslt      SkipCount
                      00208             cpfslt      MAX_EE
                      00209             goto        Finish
                      00210 
                      00211             ; read EEPROM
                      00212             READEE      REG_EE, addrH, addrL
                      00213             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00214             goto        Finish
                      00215 Finish
                      00216             endm        
                      00217 
                      00218 incf_BCD    macro   BCD
                      00219         local ones, endBCD
                      00220         movff   BCD, temp
                      00221         
                      00222         ;process ones digit
                      00223         movlw   0x0f
                      00224         andwf   temp
                      00225         movlw   d'9'
                      00226         
                      00227         ;skip if ones digit is 9
                      00228         cpfseq  temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00229         goto    ones
                      00230         
                      00231         movlw   b'00010000'
                      00232         addwf   BCD
                      00233         movlw   0xf0
                      00234         andwf   BCD
                      00235         movlw   0xa0
                      00236         cpfslt  BCD
                      00237         
                      00238         clrf    BCD
                      00239         goto    endBCD
                      00240         
                      00241 ones
                      00242         incf    BCD
                      00243         goto    endBCD
                      00244 endBCD
                      00245         nop
                      00246         endm
                      00247         
                      00248 SUB16   macro   x, y        ; does not modify x nor y
                      00249         local   RESULTS
                      00250         movff   y+1, WREG   ; move high y into working register
                      00251         subwf   x+1, 0      ; do subtraction xH - yH => w
                      00252         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00253         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                      00254         
                      00255         movff   y+0, WREG
                      00256         subwf   x+0, 0  
                      00257 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00258         endm
                      00259 
                      00260 WriteRTC    macro
                      00261         movff   tens_digit, WREG
                      00262         call    WR_DATA
                      00263         movff   ones_digit, WREG
                      00264         call    WR_DATA
                      00265         endm
                      00266 
                      00267 WriteEE macro   word, addH, addL
                      00268         movff   addH, EEADRH        ; High address
                      00269         movff   addL, EEADR         ; Low address
                      00270         movff   word, EEDATA        ; set word
                      00271 
                      00272         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00273         bra     $-2
                      00274 
                      00275         bcf     EECON1, EEPGD       ; Point to data memory
                      00276         bcf     EECON1, CFGS        ; Access EEPROM
                      00277         bsf     EECON1, WREN        ; enable write
                      00278         bcf     INTCON, GIE         ; disable interrupts during write
                      00279         bcf     PIR2, EEIF
                      00280 
                      00281         movlw   0x55
                      00282         movwf   EECON2              ; write 55h
                      00283         movlw   0xaa
                      00284         movwf   EECON2              ; write 0xaa
                      00285         bsf     EECON1, WR          ; begin write
                      00286         btfsc   EECON1, WR
                      00287         bra     $-2
                      00288 
                      00289         bsf     INTCON, GIE         ; enable interrupts after write
                      00290         bcf     EECON1, WREN        ; disable writes
                      00291         endm
                      00292 
                      00293 READEE  macro   file, addH, addL
                      00294         movff   addH, EEADRH        ; read to high
                      00295         movff   addL, EEADR         ; read to low
                      00296         bcf     EECON1, EEPGD       ; point to data memory
                      00297         bcf     EECON1, CFGS        ; access to EEPROM
                      00298         bsf     EECON1, RD          ; read EEPROM
                      00299         movff   EEDATA, file        ; put data into file
                      00300         endm
                      00301 
                      00302 ChangeMode  macro   ModeId, NextMode
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00303         local Next, Exit
                      00304 
                      00305         movlw   ModeId              ; poll for mode
                      00306         cpfseq  KEY                 ; check this against key press
                      00307         goto    Exit
                      00308 
                      00309 Next
                      00310         clrf    LATA                ; clear pins before proceeding
                      00311         clrf    LATB
                      00312         clrf    LATC
                      00313         clrf    LATD
                      00314         goto    NextMode
                      00315 
                      00316 Exit
                      00317         nop
                      00318         endm
                      00319 
                      00320 saveContext macro
                      00321     movff   STATUS, temp_S          ; save STATUS first
                      00322     movwf   temp_W                  ; save W
                      00323     endm
                      00324 
                      00325 restoreContext macro
                      00326     swapf   temp_W, 0               ; restore W first
                      00327     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00328     endm
                      00329 ;*******************************************************************************
                      00330 ; reset vector and isrs
                      00331 ;*******************************************************************************
                      00332         ORG     0x000               ; processor reset vector
000000 EF?? F???      00333         goto    INIT                ; go to beginning of program
                      00334 
                      00335         ORG     0x008
000008 EF?? F???      00336         goto    ISR_HIGH
                      00337 
                      00338         ORG     0x018
000018 EF?? F???      00339         goto    ISR_LOW
                      00340 
00001C                00341 ISR_HIGH
                      00342         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00343 
                      00344         ;reset timer 
000022 0EC6           00345         movlw   0xc6
000024 6ED7           00346         movwf   TMR0H
000026 0E3E           00347         movlw   0x3e
000028 6ED6           00348         movwf   TMR0L
                      00349         
                      00350         
                      00351         ; displaying the execution time in seconds
                      00352 ;       swapf   OP_sec, 0       ; 100's seconds
                      00353 ;       movwf   temp
                      00354 ;       movlw   0x0f
                      00355 ;       andwf   temp
                      00356 ;       movff   temp, WREG
                      00357 ;       addlw   0x30
                      00358 ;       call    WR_DATA
                      00359 ;
                      00360 ;       movff   OP_sec, temp    ; 10's seconds
                      00361 ;       movlw   0x0f
                      00362 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00363 ;       movff   temp, WREG      ; W = Temp
                      00364 ;       addlw   0x30            ; Convert to ASCII
                      00365 ;       call    WR_DATA
                      00366 ;       
                      00367 ;       swapf   OP_INT, WREG    ;1's seconds
                      00368 ;       movwf   temp
                      00369 ;       movlw   0x0f
                      00370 ;       andwf   temp
                      00371 ;       movff   temp, WREG
                      00372 ;       addlw   0x30
                      00373 ;       call    WR_DATA
                      00374 ;
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00375 ;       movlw   0x73            ; Write 's'
                      00376 ;       call    WR_DATA
                      00377 ;       call    LCD_L2
                      00378                 
                      00379         ;timer interrupt
00002A A4F2           00380         btfss   INTCON, TMR0IF
00002C EF?? F???      00381         goto    END_ISR_HIGH
                      00382         
                      00383         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0f
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0EF0               M         movlw   0xf0
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xa0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00384         movlw   d'0'
00005C 6219           00385         cpfseq  OP_INT
00005E EF?? F???      00386         goto    END_ISR_HIGH
                      00387         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0f
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0EF0               M         movlw   0xf0
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xa0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00388 
00008C                00389 END_ISR_HIGH
00008C 94F2           00390         bcf     INTCON, TMR0IF
                      00391         restoreContext
00008E 3814               M     swapf   temp_W, 0               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00392         retfie
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00393 
000096                00394 ISR_LOW
                      00395         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00396         ; KEYPAD INTERRUPT
00009C A0F0           00397         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
00009E EF?? F???      00398         goto    END_ISR_LOW
                      00399 
                      00400         ; check operation status
0000A2 0EFF           00401         movlw   0xff                    ; If in operation, skip return
0000A4 621E           00402         cpfseq  inExecution
0000A6 EF?? F???      00403         goto    END_ISR_LOW
                      00404 
                      00405         ; process KEY
0000AA 3881           00406         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000AC 0B0F           00407         andlw   0x0f
0000AE 6E12           00408         movwf   KEY_ISR
                      00409         
0000B0 0E0C           00410         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000B2 6212           00411         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000B4 EF?? F???      00412         goto    END_ISR_LOW
                      00413         
                      00414         ; reset program counter - emergency stop recorded. 
0000B8 9ED5           00415         bcf     T0CON, TMR0ON
0000BA EC?? F???      00416         call    SAVE_EXE_TIME
                      00417                 
                      00418         ; Clear inExecution flag to stop '*' interrupts
0000BE 6A1E           00419         clrf    inExecution
0000C0 0E01           00420         movlw   d'1'
0000C2 6E37           00421         movwf   STOP_CONDITION
0000C4 EC?? F???      00422         call    SaveData
                      00423         
0000C8 6AFF           00424         clrf    TOSU
0000CA 6AFE           00425         clrf    TOSH
0000CC 6AFD           00426         clrf    TOSL
0000CE 90F0           00427         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00428         restoreContext
0000D0 3814               M     swapf   temp_W, 0               ; restore W first
0000D2 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D6 0010           00429         retfie
                      00430 
0000D8                00431 END_ISR_LOW
0000D8 90F0           00432         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00433         restoreContext
0000DA 3814               M     swapf   temp_W, 0               ; restore W first
0000DC C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000E0 0010           00434         retfie
                      00435 
                      00436 ;*******************************************************************************
                      00437 ; main
                      00438 ;*******************************************************************************
0000E2                00439 INIT
                      00440         ; i/o
0000E2 0E00           00441         movlw   b'00000000'
0000E4 6E92           00442         movwf   TRISA
0000E6 0EFF           00443         movlw   b'11111111'
0000E8 6E93           00444         movwf   TRISB               ; keypad
0000EA 0E00           00445         movlw   b'00000000'
0000EC 6E94           00446         movwf   TRISC
0000EE 0E00           00447         movlw   b'00000000'
0000F0 6E95           00448         movwf   TRISD
0000F2 0E00           00449         movlw   b'00000000'
0000F4 6E96           00450         movwf   TRISE
                      00451 
                      00452         ; clear ports
0000F6 0E00           00453         movlw   b'00000000'
0000F8 6E89           00454         movwf   LATA
0000FA 0E00           00455         movlw   b'00000000'
0000FC 6E8A           00456         movwf   LATB
0000FE 0E00           00457         movlw   b'00000000'
000100 6E8B           00458         movwf   LATC
000102 0E00           00459         movlw   b'00000000'
000104 6E8C           00460         movwf   LATD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000106 0E00           00461         movlw   b'00000000'
000108 6E8D           00462         movwf   LATE
                      00463         
00010A 0E00           00464         movlw   b'00000000'
00010C 6EC2           00465         movwf   ADCON0
                      00466 ;       movlw   b'11111111'
                      00467 ;       movwf   ADCON1
                      00468         
                      00469         ; initializations
00010E EC?? F???      00470         call    InitLCD
                      00471         ConfigLCD
000112 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000114 EC?? F???          M           call      WR_INS
                          M 
000118 0E0C               M           movlw     b'00001100'    ; display on/off
00011A EC?? F???          M           call      WR_INS
00011E 0E01               M           movlw     b'00000001'    ; Clear ram
000120 EC?? F???          M           call      WR_INS
                      00472         
000124 EC?? F???      00473         call    i2c_common_setup
                      00474         
000128 EC?? F???      00475         call    RTC_INIT
                      00476         ;COLOUR_INIT
00012C EC?? F???      00477         call    INIT_USART
                      00478 
                      00479         ; interrupts
000130 6AD0           00480         clrf    RCON
000132 6AF2           00481         clrf    INTCON
000134 6AF1           00482         clrf    INTCON2
000136 6AF0           00483         clrf    INTCON3
000138 8ED0           00484         bsf     RCON, IPEN          ; priority mode
00013A 8EF2           00485         bsf     INTCON, GIEH        ; permit global interrupts
00013C 8CF2           00486         bsf     INTCON, GIEL
00013E 8AF1           00487         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000140 8AF2           00488         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000142 84F2           00489         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000144 84F1           00490         bsf     INTCON2, TMR0IP     ; set to high priority
000146 86F0           00491         bsf     INTCON3, INT1IE
000148 9CF0           00492         bcf     INTCON3, INT1IP
                      00493         
                      00494         ; setting up timer to sychronize with 1 second clock intervals
00014A 9ED5           00495         bcf     T0CON, TMR0ON
00014C 9CD5           00496         bcf     T0CON, T08BIT
00014E 9AD5           00497         bcf     T0CON, T0CS
000150 98D5           00498         bcf     T0CON, T0SE
000152 96D5           00499         bcf     T0CON, PSA
000154 94D5           00500         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
000156 82D5           00501         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
000158 80D5           00502         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00503 
00015A 6A20           00504         clrf    H_EE
00015C 6A21           00505         clrf    L_EE
00015E 6A??           00506         clrf    tens_digit
000160 6A??           00507         clrf    ones_digit
                      00508         
000162 6A2C           00509         clrf    DETECTION_VAL
000164 6A2D           00510         clrf    ESKA
000166 6A2E           00511         clrf    ESKA_NOCAP
000168 6A2F           00512         clrf    YOP
00016A 6A30           00513         clrf    YOP_NOCAP
00016C 6A31           00514         clrf    TOTAL_BOTTLES
00016E 6A32           00515         clrf    COLLECTIONS_COUNT
                      00516         
000170 0EF2           00517         movlw     b'11110010'    ; Set required keypad inputs
000172 6E93           00518         movwf     TRISB
                      00519         
000174 EC?? F???      00520         call    ClrLCD
                      00521         Display Welcome
  0000                    M         local   loop
000178 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00017A 6EF8               M         movwf   TBLPTRU
00017C 0E??               M         movlw   high Welcome    ; Move Table<15:8>
00017E 6EF7               M         movwf   TBLPTRH
000180 0E??               M         movlw   low Welcome     ; Move Table<7:0>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000182 6EF6               M         movwf   TBLPTRL
000184 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000186 50F5               M         movf    TABLAT, W
000188                    M loop
000188 EC?? F???          M         call    WR_DATA         ; write to LCD
00018C 000B               M         tblrd+*                 ; next row in table
00018E 50F5               M         movf    TABLAT, W
000190 E1??               M         bnz     loop
000192 EC?? F???      00522         call LCD_L2
                      00523         Display Team
  0000                    M         local   loop
000196 0E??               M         movlw   upper Team      ; Move Table<20:16>
000198 6EF8               M         movwf   TBLPTRU
00019A 0E??               M         movlw   high Team       ; Move Table<15:8>
00019C 6EF7               M         movwf   TBLPTRH
00019E 0E??               M         movlw   low Team        ; Move Table<7:0>
0001A0 6EF6               M         movwf   TBLPTRL
0001A2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001A4 50F5               M         movf    TABLAT, W
0001A6                    M loop
0001A6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001AA 000B               M         tblrd+*                 ; next row in table
0001AC 50F5               M         movf    TABLAT, W
0001AE E1??               M         bnz     loop
                      00524         
                      00525         Delay50N delayR, 0x28
  0000                    M         local   loop
0001B0 0E28               M         movlw   0x28
0001B2 6E1A               M         movwf   delayR
                          M 
0001B4                    M loop
0001B4 EC?? F???          M         call    Delay50ms
0001B8 2E1A               M         decfsz  delayR
0001BA EF?? F???          M         goto    loop
                      00526 
                      00527 ;*******************************************************************************
                      00528 ; standby mode
                      00529 ;*******************************************************************************
0001BE                00530 STANDBY
0001BE 0E00           00531         movlw   b'00000000'
0001C0 6E84           00532         movwf   PORTE
0001C2 0E00           00533         movlw   b'00000000'
0001C4 6E80           00534         movwf   PORTA
                      00535         
0001C6 6838           00536         setf    inStandby
                      00537         
0001C8 0EC5           00538         movlw       0xc5                    ; setting up timer
0001CA 6ED7           00539         movwf       TMR0H
0001CC 0E44           00540         movlw       0x44    
0001CE 6ED6           00541         movwf       TMR0L
                      00542         
0001D0 8ED5           00543         bsf         T0CON, TMR0ON           ; turning on timer
                      00544         
0001D2 EC?? F???      00545         call    ClrLCD
                      00546         Display StandBy
  0000                    M         local   loop
0001D6 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001D8 6EF8               M         movwf   TBLPTRU
0001DA 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001DC 6EF7               M         movwf   TBLPTRH
0001DE 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001E0 6EF6               M         movwf   TBLPTRL
0001E2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001E4 50F5               M         movf    TABLAT, W
0001E6                    M loop
0001E6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001EA 000B               M         tblrd+*                 ; next row in table
0001EC 50F5               M         movf    TABLAT, W
0001EE E1??               M         bnz     loop
0001F0 EC?? F???      00547         call    LCD_L2
                      00548         Display StandbyInfo
  0000                    M         local   loop
0001F4 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
0001F6 6EF8               M         movwf   TBLPTRU
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F8 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
0001FA 6EF7               M         movwf   TBLPTRH
0001FC 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
0001FE 6EF6               M         movwf   TBLPTRL
000200 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000202 50F5               M         movf    TABLAT, W
000204                    M loop
000204 EC?? F???          M         call    WR_DATA         ; write to LCD
000208 000B               M         tblrd+*                 ; next row in table
00020A 50F5               M         movf    TABLAT, W
00020C E1??               M         bnz     loop
                      00549 
00020E                00550 HOLD_STANDBY
00020E EC?? F???      00551         call    READ_KEY_TIME
                      00552 
                      00553         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000212 0E00               M         movlw   key1                ; poll for mode
000214 6210               M         cpfseq  KEY                 ; check this against key press
000216 EF?? F???          M         goto    Exit
                          M 
00021A                    M Next
00021A 6A89               M         clrf    LATA                ; clear pins before proceeding
00021C 6A8A               M         clrf    LATB
00021E 6A8B               M         clrf    LATC
000220 6A8C               M         clrf    LATD
000222 EF?? F???          M         goto    COLOUR_TEST
                          M 
000226                    M Exit
000226 0000               M         nop
                      00554         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000228 0E01               M         movlw   key2                ; poll for mode
00022A 6210               M         cpfseq  KEY                 ; check this against key press
00022C EF?? F???          M         goto    Exit
                          M 
000230                    M Next
000230 6A89               M         clrf    LATA                ; clear pins before proceeding
000232 6A8A               M         clrf    LATB
000234 6A8B               M         clrf    LATC
000236 6A8C               M         clrf    LATD
000238 EF?? F???          M         goto    STEP_TEST
                          M 
00023C                    M Exit
00023C 0000               M         nop
                      00555         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
                          M 
00023E 0E02               M         movlw   key3                ; poll for mode
000240 6210               M         cpfseq  KEY                 ; check this against key press
000242 EF?? F???          M         goto    Exit
                          M 
000246                    M Next
000246 6A89               M         clrf    LATA                ; clear pins before proceeding
000248 6A8A               M         clrf    LATB
00024A 6A8B               M         clrf    LATC
00024C 6A8C               M         clrf    LATD
00024E EF?? F???          M         goto    DC_TEST_CW
                          M 
000252                    M Exit
000252 0000               M         nop
                      00556         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
000254 0E04               M         movlw   key4                ; poll for mode
000256 6210               M         cpfseq  KEY                 ; check this against key press
000258 EF?? F???          M         goto    Exit
                          M 
00025C                    M Next
00025C 6A89               M         clrf    LATA                ; clear pins before proceeding
00025E 6A8A               M         clrf    LATB
000260 6A8B               M         clrf    LATC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000262 6A8C               M         clrf    LATD
000264 EF?? F???          M         goto    DC_TEST_CCW
                          M 
000268                    M Exit
000268 0000               M         nop
                      00557         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
00026A 0E03               M         movlw   keyA                ; poll for mode
00026C 6210               M         cpfseq  KEY                 ; check this against key press
00026E EF?? F???          M         goto    Exit
                          M 
000272                    M Next
000272 6A89               M         clrf    LATA                ; clear pins before proceeding
000274 6A8A               M         clrf    LATB
000276 6A8B               M         clrf    LATC
000278 6A8C               M         clrf    LATD
00027A EF?? F???          M         goto    EXECUTION
                          M 
00027E                    M Exit
00027E 0000               M         nop
                      00558         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
000280 0E07               M         movlw   keyB                ; poll for mode
000282 6210               M         cpfseq  KEY                 ; check this against key press
000284 EF?? F???          M         goto    Exit
                          M 
000288                    M Next
000288 6A89               M         clrf    LATA                ; clear pins before proceeding
00028A 6A8A               M         clrf    LATB
00028C 6A8B               M         clrf    LATC
00028E 6A8C               M         clrf    LATD
000290 EF?? F???          M         goto    LOG
                          M 
000294                    M Exit
000294 0000               M         nop
                      00559         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000296 0E0B               M         movlw   keyC                ; poll for mode
000298 6210               M         cpfseq  KEY                 ; check this against key press
00029A EF?? F???          M         goto    Exit
                          M 
00029E                    M Next
00029E 6A89               M         clrf    LATA                ; clear pins before proceeding
0002A0 6A8A               M         clrf    LATB
0002A2 6A8B               M         clrf    LATC
0002A4 6A8C               M         clrf    LATD
0002A6 EF?? F???          M         goto    PERM_LOG
                          M 
0002AA                    M Exit
0002AA 0000               M         nop
                      00560         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002AC 0E0F               M         movlw   keyD                ; poll for mode
0002AE 6210               M         cpfseq  KEY                 ; check this against key press
0002B0 EF?? F???          M         goto    Exit
                          M 
0002B4                    M Next
0002B4 6A89               M         clrf    LATA                ; clear pins before proceeding
0002B6 6A8A               M         clrf    LATB
0002B8 6A8B               M         clrf    LATC
0002BA 6A8C               M         clrf    LATD
0002BC EF?? F???          M         goto    PC_MODE
                          M 
0002C0                    M Exit
0002C0 0000               M         nop
0002C2 D???           00561         bra     HOLD_STANDBY
                      00562         
                      00563 ;*******************************************************************************
                      00564 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00565 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00566 
0002C4                00567 DC_TEST_CW
0002C4 6A38           00568         clrf    inStandby
0002C6 0E00           00569         movlw   b'00000000'
0002C8 6E84           00570         movwf   PORTE
                      00571         Delay50N    delayR, 0x0a   
  0000                    M         local   loop
0002CA 0E0A               M         movlw   0x0a
0002CC 6E1A               M         movwf   delayR
                          M 
0002CE                    M loop
0002CE EC?? F???          M         call    Delay50ms
0002D2 2E1A               M         decfsz  delayR
0002D4 EF?? F???          M         goto    loop
0002D8                00572 DC_TEST_CW_HOLD
0002D8 0E01           00573         movlw   b'00000001'
0002DA 6E84           00574         movwf   PORTE
                      00575 
0002DC EC?? F???      00576         call    READ_KEY
                      00577         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0002E0 0E0D               M         movlw   key0                ; poll for mode
0002E2 6210               M         cpfseq  KEY                 ; check this against key press
0002E4 EF?? F???          M         goto    Exit
                          M 
0002E8                    M Next
0002E8 6A89               M         clrf    LATA                ; clear pins before proceeding
0002EA 6A8A               M         clrf    LATB
0002EC 6A8B               M         clrf    LATC
0002EE 6A8C               M         clrf    LATD
0002F0 EF?? F???          M         goto    STANDBY
                          M 
0002F4                    M Exit
0002F4 0000               M         nop
0002F6 D???           00578         bra     DC_TEST_CW_HOLD
                      00579         
0002F8                00580 DC_TEST_CCW
0002F8 6A38           00581         clrf    inStandby
0002FA 0E00           00582         movlw   b'00000000'
0002FC 6E84           00583         movwf   PORTE
                      00584         Delay50N    delayR, 0x0a
  0000                    M         local   loop
0002FE 0E0A               M         movlw   0x0a
000300 6E1A               M         movwf   delayR
                          M 
000302                    M loop
000302 EC?? F???          M         call    Delay50ms
000306 2E1A               M         decfsz  delayR
000308 EF?? F???          M         goto    loop
00030C                00585 DC_TEST_CCW_HOLD
00030C 0E02           00586         movlw   b'00000010'
00030E 6E84           00587         movwf   PORTE
                      00588         
000310 EC?? F???      00589         call    READ_KEY
                      00590         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000314 0E0D               M         movlw   key0                ; poll for mode
000316 6210               M         cpfseq  KEY                 ; check this against key press
000318 EF?? F???          M         goto    Exit
                          M 
00031C                    M Next
00031C 6A89               M         clrf    LATA                ; clear pins before proceeding
00031E 6A8A               M         clrf    LATB
000320 6A8B               M         clrf    LATC
000322 6A8C               M         clrf    LATD
000324 EF?? F???          M         goto    STANDBY
                          M 
000328                    M Exit
000328 0000               M         nop
00032A D???           00591         bra     DC_TEST_CCW_HOLD
                      00592                 
00032C                00593 STEP_TEST
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00032C 6A38           00594         clrf    inStandby
00032E 6A32           00595         clrf    COLLECTIONS_COUNT
                      00596         Delay50N    delayR, 0x14
  0000                    M         local   loop
000330 0E14               M         movlw   0x14
000332 6E1A               M         movwf   delayR
                          M 
000334                    M loop
000334 EC?? F???          M         call    Delay50ms
000338 2E1A               M         decfsz  delayR
00033A EF?? F???          M         goto    loop
                      00597     
00033E                00598 ROTATE_90_TEST
00033E 0E23           00599         movlw   b'00100011'
000340 6E80           00600         movwf   PORTA
000342 EC?? F???      00601         call    delay5ms
                      00602         
000346 0E26           00603         movlw   b'00100110'
000348 6E80           00604         movwf   PORTA
00034A EC?? F???      00605         call    delay5ms
                      00606         
00034E 0E2C           00607         movlw   b'00101100'
000350 6E80           00608         movwf   PORTA
000352 EC?? F???      00609         call    delay5ms
                      00610 
000356 0E29           00611         movlw   b'00101001'
000358 6E80           00612         movwf   PORTA
00035A EC?? F???      00613         call    delay5ms
                      00614         
00035E 2A32           00615         incf    COLLECTIONS_COUNT
000360 0E78           00616         movlw   d'120'
000362 6232           00617         cpfseq  COLLECTIONS_COUNT
000364 D???           00618         bra     ROTATE_90_TEST
                      00619         
000366 D???           00620         bra STEP_TEST
                      00621 
000368                00622 COLOUR_TEST
000368 6A38           00623         clrf    inStandby
                      00624 
00036A                00625 LOOPING
                      00626         Delay50N delayR, 0x28
  0000                    M         local   loop
00036A 0E28               M         movlw   0x28
00036C 6E1A               M         movwf   delayR
                          M 
00036E                    M loop
00036E EC?? F???          M         call    Delay50ms
000372 2E1A               M         decfsz  delayR
000374 EF?? F???          M         goto    loop
000378 EC?? F???      00627         call    ClrLCD
00037C EC?? F???      00628         call    READ_ARDUINO
000380 0F30           00629         addlw   0x30
000382 EC?? F???      00630         call    WR_DATA
000386 D???           00631         bra LOOPING
                      00632 
                      00633 ;*******************************************************************************
                      00634 ; execution mode
                      00635 ;*******************************************************************************
                      00636         
000388                00637 EXECUTION
000388 6A38           00638         clrf    inStandby
00038A 9ED5           00639         bcf         T0CON, TMR0ON
                      00640         
00038C EC?? F???      00641         call        ClearEEPROM_21
                      00642         
                      00643         ; save the starting time
000390 EC?? F???      00644         call        SAVE_TIME
                      00645                 
                      00646         ; display
000394 681E           00647         setf        inExecution
000396 EC?? F???      00648         call        ClrLCD
                      00649         Display     Exe1
  0000                    M         local   loop
00039A 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00039C 6EF8               M         movwf   TBLPTRU
00039E 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003A0 6EF7               M         movwf   TBLPTRH
0003A2 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003A4 6EF6               M         movwf   TBLPTRL
0003A6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003A8 50F5               M         movf    TABLAT, W
0003AA                    M loop
0003AA EC?? F???          M         call    WR_DATA         ; write to LCD
0003AE 000B               M         tblrd+*                 ; next row in table
0003B0 50F5               M         movf    TABLAT, W
0003B2 E1??               M         bnz     loop
0003B4 EC?? F???      00650         call        LCD_L2
                      00651         
0003B8 0EC5           00652         movlw       0xc5                    ; setting up timer
0003BA 6ED7           00653         movwf       TMR0H
0003BC 0E44           00654         movlw       0x44    
0003BE 6ED6           00655         movwf       TMR0L
                      00656         
0003C0 8ED5           00657         bsf         T0CON, TMR0ON           ; turning on timer
                      00658         
                      00659         ; initialize variables
0003C2 6A18           00660         clrf        OP_sec
0003C4 6A19           00661         clrf        OP_INT
                      00662         
0003C6 6A2D           00663         clrf        ESKA
0003C8 6A2E           00664         clrf        ESKA_NOCAP
0003CA 6A2F           00665         clrf        YOP
0003CC 6A30           00666         clrf        YOP_NOCAP
0003CE 6A31           00667         clrf        TOTAL_BOTTLES
0003D0 0E01           00668         movlw       d'1'
0003D2 6E35           00669         movwf       TRAY_CURRENT
0003D4 6A34           00670         clrf        TRAY_DELAY
                      00671         
                      00672         ; todo: make sure tray is in position one on reset, add some delay
                      00673         
0003D6 EF?? F???      00674         goto        COLLECTIONS_STEP
                      00675 
0003DA                00676 COLLECTIONS_STEP
0003DA 6A32           00677         clrf        COLLECTIONS_COUNT
                      00678 
0003DC                00679 ROTATE_90
0003DC 0E23           00680         movlw   b'00100011'
0003DE 6E80           00681         movwf   PORTA
0003E0 EC?? F???      00682         call    delay5ms
                      00683 
0003E4 0E26           00684         movlw   b'00100110'
0003E6 6E80           00685         movwf   PORTA
0003E8 EC?? F???      00686         call    delay5ms
                      00687         
0003EC 0E2C           00688         movlw   b'00101100'
0003EE 6E80           00689         movwf   PORTA
0003F0 EC?? F???      00690         call    delay5ms
                      00691 
0003F4 0E29           00692         movlw   b'00101001'
0003F6 6E80           00693         movwf   PORTA
0003F8 EC?? F???      00694         call    delay5ms
                      00695         
0003FC 2A32           00696         incf    COLLECTIONS_COUNT
0003FE 0E78           00697         movlw   d'120'
000400 6232           00698         cpfseq  COLLECTIONS_COUNT
000402 D???           00699         bra     ROTATE_90
                      00700         
000404 D???           00701         bra DETECTIONS
                      00702         
000406                00703 DETECTIONS
                      00704         ; first up, lets give the 0.5 seconds to process its data
                      00705         ;Delay50N delayR, 0x0a
                      00706 ;       movlw   d'1000'
                      00707 ;       movwf   TRAY_DELAY
                      00708         
                      00709         ; reading data from arduino - expect: 1 for eska cap, 2 for eska no cap
                      00710         ;                                     3 for yop cap, 4 for yop no cap
                      00711         ;                                     5 for no bottle, get outta here
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00712         ;call   READ_ARDUINO
                      00713         
000406 0E02           00714         movlw   d'2'                    ; testing!!!
000408 6E2C           00715         movwf   DETECTION_VAL
                      00716         
                      00717         ; now for handling the comparisions
00040A 0E05           00718         movlw   d'5'
00040C 602C           00719         cpfslt  DETECTION_VAL           ; If DETECTION_VAL = 5, make another collections step
00040E EF?? F???      00720         goto    COLLECTIONS_STEP
                      00721         
                      00722         ; okay we have a bottle, increment toal and see what it is
000412 2A31           00723         incf    TOTAL_BOTTLES
                      00724 
000414 0E04           00725         movlw   d'4'
000416 5C2C           00726         subwf   DETECTION_VAL, 0
000418 E0??           00727         bz      INC_YOPNOCAP
                      00728         
00041A 0E03           00729         movlw   d'3'
00041C 5C2C           00730         subwf   DETECTION_VAL, 0
00041E E0??           00731         bz      INC_YOPCAP
                      00732         
000420 0E02           00733         movlw   d'2'
000422 5C2C           00734         subwf   DETECTION_VAL, 0
000424 E0??           00735         bz      INC_ESKANOCAP
                      00736         
000426 0E01           00737         movlw   d'1'
000428 5C2C           00738         subwf   DETECTION_VAL, 0
00042A E0??           00739         bz      INC_ESKACAP
                      00740         
                      00741         ;make some kind of fail safe here.
                      00742         
00042C                00743 INC_YOPNOCAP
00042C 2A30           00744         incf    YOP_NOCAP
                      00745 
                      00746         ; determine what position to rotate the tray to: brute force, but w/e
00042E 0E04           00747         movlw   d'4'
000430 6E36           00748         movwf   TRAY_GOTO
000432 5C35           00749         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000434 E0??           00750         bz      TRAY_STEP_END
                      00751         
000436 0E03           00752         movlw   d'3'
000438 5C35           00753         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
00043A E0??           00754         bz      TRAY_STEP_CW            
                      00755         
00043C 0E02           00756         movlw   d'2'
00043E 5C35           00757         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
000440 E0??           00758         bz      TRAY_STEP_CW
                      00759         
000442 0E01           00760         movlw   d'1'
000444 5C35           00761         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
000446 E0??           00762         bz      TRAY_STEP_CW
                      00763         
000448                00764 INC_YOPCAP
000448 2A2F           00765         incf    YOP
                      00766         
                      00767         ; determine what position to rotate the tray to: brute force, but w/e
00044A 0E03           00768         movlw   d'3'
00044C 6E36           00769         movwf   TRAY_GOTO
00044E 5C35           00770         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000450 E0??           00771         bz      TRAY_STEP_END
                      00772         
000452 0E04           00773         movlw   d'4'
000454 5C35           00774         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
000456 E0??           00775         bz      TRAY_STEP_CCW   
                      00776         
000458 0E02           00777         movlw   d'2'
00045A 5C35           00778         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
00045C E0??           00779         bz      TRAY_STEP_CW
                      00780         
00045E 0E01           00781         movlw   d'1'
000460 5C35           00782         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
000462 E0??           00783         bz      TRAY_STEP_CW
                      00784         
000464                00785 INC_ESKANOCAP
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000464 2A2E           00786         incf    ESKA_NOCAP
000466 EF?? F???      00787         goto    CHECK_DONE
                      00788         
                      00789         ; determine what position to rotate the tray to: brute force, but w/e
00046A 0E02           00790         movlw   d'2'
00046C 6E36           00791         movwf   TRAY_GOTO
00046E 5C35           00792         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000470 E0??           00793         bz      TRAY_STEP_END
                      00794         
000472 0E04           00795         movlw   d'4'
000474 5C35           00796         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
000476 E0??           00797         bz      TRAY_STEP_CCW   
                      00798         
000478 0E03           00799         movlw   d'3'
00047A 5C35           00800         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
00047C E0??           00801         bz      TRAY_STEP_CCW
                      00802         
00047E 0E01           00803         movlw   d'1'
000480 5C35           00804         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
000482 E0??           00805         bz      TRAY_STEP_CW
                      00806         
000484                00807 INC_ESKACAP
000484 2A2D           00808         incf    ESKA
                      00809         
                      00810         ; determine what position to rotate the tray to: brute force, but w/e
000486 0E01           00811         movlw   d'1'
000488 6E36           00812         movwf   TRAY_GOTO
00048A 5C35           00813         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00048C E0??           00814         bz      TRAY_STEP_END
                      00815         
00048E 0E04           00816         movlw   d'4'
000490 5C35           00817         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
000492 E0??           00818         bz      TRAY_STEP_CCW   
                      00819         
000494 0E03           00820         movlw   d'3'
000496 5C35           00821         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
000498 E0??           00822         bz      TRAY_STEP_CCW
                      00823         
00049A 0E02           00824         movlw   d'2'
00049C 5C35           00825         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
00049E E0??           00826         bz      TRAY_STEP_CCW
                      00827 
0004A0                00828 TRAY_STEP_CW
0004A0 6A33           00829         clrf    TRAY_COUNT
0004A2 0E00           00830         movlw   b'00000000'
0004A4 6E84           00831         movwf   PORTE
                      00832 
0004A6                00833 TRAY_CW_HOLD
0004A6 0E01           00834         movlw   b'00000001'
0004A8 6E84           00835         movwf   PORTE
                      00836 
0004AA 2A33           00837         incf    TRAY_COUNT
0004AC C033 FFE8      00838         movff   TRAY_COUNT, WREG
0004B0 6234           00839         cpfseq  TRAY_DELAY
0004B2 EF?? F???      00840         goto    TRAY_CW_HOLD
                      00841         
0004B6 D???           00842         bra     TRAY_STEP_END
                      00843         
0004B8                00844 TRAY_STEP_CCW
0004B8 6A33           00845         clrf    TRAY_COUNT
0004BA 0E00           00846         movlw   b'00000000'
0004BC 6E84           00847         movwf   PORTE
                      00848 
0004BE                00849 TRAY_CCW_HOLD
0004BE 0E02           00850         movlw   b'00000010'
0004C0 6E84           00851         movwf   PORTE
                      00852 
0004C2 2A33           00853         incf    TRAY_COUNT
0004C4 C033 FFE8      00854         movff   TRAY_COUNT, WREG
0004C8 6234           00855         cpfseq  TRAY_DELAY
0004CA D???           00856         bra     TRAY_CCW_HOLD
                      00857         
0004CC D???           00858         bra     TRAY_STEP_END
                      00859         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004CE                00860 TRAY_STEP_END
0004CE C036 F035      00861         movff   TRAY_GOTO, TRAY_CURRENT
0004D2 0E00           00862         movlw   b'00000000'
0004D4 6E84           00863         movwf   PORTE
                      00864         
0004D6                00865 CHECK_DONE
0004D6 0E09           00866         movlw   d'9'
0004D8 6231           00867         cpfseq  TOTAL_BOTTLES
0004DA EF?? F???      00868         goto    COLLECTIONS_STEP
                      00869         
0004DE EF?? F???      00870         goto    EXIT_EXE
                      00871         
0004E2                00872 EXIT_EXE
                      00873         ; stop timer and save the execution time to eeprom
0004E2 9ED5           00874         bcf         T0CON, TMR0ON
0004E4 EC?? F???      00875         call        SAVE_EXE_TIME
                      00876                 
                      00877         ; Clear inExecution flag to stop '*' interrupts
0004E8 6A1E           00878         clrf        inExecution
0004EA 6A37           00879         clrf        STOP_CONDITION      ; regular stop, saved in eeprom as 0
                      00880         
0004EC EC?? F???      00881                 call        ClrLCD
                      00882         Display     SAVE
  0000                    M         local   loop
0004F0 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0004F2 6EF8               M         movwf   TBLPTRU
0004F4 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0004F6 6EF7               M         movwf   TBLPTRH
0004F8 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0004FA 6EF6               M         movwf   TBLPTRL
0004FC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004FE 50F5               M         movf    TABLAT, W
000500                    M loop
000500 EC?? F???          M         call    WR_DATA         ; write to LCD
000504 000B               M         tblrd+*                 ; next row in table
000506 50F5               M         movf    TABLAT, W
000508 E1??               M         bnz     loop
00050A EC?? F???      00883         call        SaveData
00050E EF?? F???      00884         goto        LOG
                      00885 
                      00886 ;*******************************************************************************
                      00887 ; sorting statistics log mode
                      00888 ;*******************************************************************************
                      00889         
000512                00890 LOG
000512 6A38           00891         clrf    inStandby
000514 EC?? F???      00892         call    ClrLCD
                      00893         Display Log1
  0000                    M         local   loop
000518 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00051A 6EF8               M         movwf   TBLPTRU
00051C 0E??               M         movlw   high Log1       ; Move Table<15:8>
00051E 6EF7               M         movwf   TBLPTRH
000520 0E??               M         movlw   low Log1        ; Move Table<7:0>
000522 6EF6               M         movwf   TBLPTRL
000524 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000526 50F5               M         movf    TABLAT, W
000528                    M loop
000528 EC?? F???          M         call    WR_DATA         ; write to LCD
00052C 000B               M         tblrd+*                 ; next row in table
00052E 50F5               M         movf    TABLAT, W
000530 E1??               M         bnz     loop
                      00894 
                      00895         ; display most recent run data
000532 0E0A           00896         movlw   d'10'
000534 6E21           00897         movwf   L_EE
000536 EC?? F???      00898         call    DisplayExeTime
                      00899 
00053A EC?? F???      00900         call    LCD_L2
00053E 0E0D           00901         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000540 6E21           00902         movwf   L_EE
000542 EC?? F???      00903         call    DispOpSort
                      00904 
000546                00905 HOLD_LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000546 EC?? F???      00906         call    READ_KEY
                      00907         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
00054A 0E07               M         movlw   keyB                ; poll for mode
00054C 6210               M         cpfseq  KEY                 ; check this against key press
00054E EF?? F???          M         goto    Exit
                          M 
000552                    M Next
000552 6A89               M         clrf    LATA                ; clear pins before proceeding
000554 6A8A               M         clrf    LATB
000556 6A8B               M         clrf    LATC
000558 6A8C               M         clrf    LATD
00055A EF?? F???          M         goto    LOG_INFO
                          M 
00055E                    M Exit
00055E 0000               M         nop
                      00908         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000560 0E0D               M         movlw   key0                ; poll for mode
000562 6210               M         cpfseq  KEY                 ; check this against key press
000564 EF?? F???          M         goto    Exit
                          M 
000568                    M Next
000568 6A89               M         clrf    LATA                ; clear pins before proceeding
00056A 6A8A               M         clrf    LATB
00056C 6A8B               M         clrf    LATC
00056E 6A8C               M         clrf    LATD
000570 EF?? F???          M         goto    STANDBY
                          M 
000574                    M Exit
000574 0000               M         nop
000576 D???           00909         bra     HOLD_LOG
                      00910 
000578                00911 LOG_INFO
000578 EC?? F???      00912         call    ClrLCD
00057C 6A21           00913         clrf    L_EE
00057E EC?? F???      00914         call    DispOpRTC
                      00915         
000582 EC?? F???      00916         call    LCD_L2
                      00917         Display LogInfo2
  0000                    M         local   loop
000586 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000588 6EF8               M         movwf   TBLPTRU
00058A 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00058C 6EF7               M         movwf   TBLPTRH
00058E 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000590 6EF6               M         movwf   TBLPTRL
000592 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000594 50F5               M         movf    TABLAT, W
000596                    M loop
000596 EC?? F???          M         call    WR_DATA         ; write to LCD
00059A 000B               M         tblrd+*                 ; next row in table
00059C 50F5               M         movf    TABLAT, W
00059E E1??               M         bnz     loop
0005A0 6A20           00918         clrf    H_EE
0005A2 6A21           00919         clrf    L_EE
                      00920         ;DisplayLog  H_EE, L_EE
0005A4                00921 HOLD_LOG_INFO
0005A4 EC?? F???      00922         call    READ_KEY
                      00923         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005A8 0E0D               M         movlw   key0                ; poll for mode
0005AA 6210               M         cpfseq  KEY                 ; check this against key press
0005AC EF?? F???          M         goto    Exit
                          M 
0005B0                    M Next
0005B0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005B2 6A8A               M         clrf    LATB
0005B4 6A8B               M         clrf    LATC
0005B6 6A8C               M         clrf    LATD
0005B8 EF?? F???          M         goto    LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0005BC                    M Exit
0005BC 0000               M         nop
0005BE D???           00924         bra     HOLD_LOG
                      00925         
                      00926 ;*******************************************************************************
                      00927 ; permanent logs
                      00928 ;*******************************************************************************
                      00929 
0005C0                00930 PERM_LOG
0005C0 6A38           00931         clrf    inStandby
0005C2 EC?? F???      00932         call    ClrLCD
                      00933         Display PermLog1
  0000                    M         local   loop
0005C6 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005C8 6EF8               M         movwf   TBLPTRU
0005CA 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005CC 6EF7               M         movwf   TBLPTRH
0005CE 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005D0 6EF6               M         movwf   TBLPTRL
0005D2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005D4 50F5               M         movf    TABLAT, W
0005D6                    M loop
0005D6 EC?? F???          M         call    WR_DATA         ; write to LCD
0005DA 000B               M         tblrd+*                 ; next row in table
0005DC 50F5               M         movf    TABLAT, W
0005DE E1??               M         bnz     loop
0005E0 EC?? F???      00934         call    LCD_L2
                      00935         Display PermLog2
  0000                    M         local   loop
0005E4 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0005E6 6EF8               M         movwf   TBLPTRU
0005E8 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0005EA 6EF7               M         movwf   TBLPTRH
0005EC 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0005EE 6EF6               M         movwf   TBLPTRL
0005F0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005F2 50F5               M         movf    TABLAT, W
0005F4                    M loop
0005F4 EC?? F???          M         call    WR_DATA         ; write to LCD
0005F8 000B               M         tblrd+*                 ; next row in table
0005FA 50F5               M         movf    TABLAT, W
0005FC E1??               M         bnz     loop
                      00936         
0005FE                00937 HOLD_PERM_LOG
0005FE EC?? F???      00938         call    READ_KEY
                      00939         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000602 0E0D               M         movlw   key0                ; poll for mode
000604 6210               M         cpfseq  KEY                 ; check this against key press
000606 EF?? F???          M         goto    Exit
                          M 
00060A                    M Next
00060A 6A89               M         clrf    LATA                ; clear pins before proceeding
00060C 6A8A               M         clrf    LATB
00060E 6A8B               M         clrf    LATC
000610 6A8C               M         clrf    LATD
000612 EF?? F???          M         goto    STANDBY
                          M 
000616                    M Exit
000616 0000               M         nop
                      00940         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000618 0E00               M         movlw   key1                ; poll for mode
00061A 6210               M         cpfseq  KEY                 ; check this against key press
00061C EF?? F???          M         goto    Exit
                          M 
000620                    M Next
000620 6A89               M         clrf    LATA                ; clear pins before proceeding
000622 6A8A               M         clrf    LATB
000624 6A8B               M         clrf    LATC
000626 6A8C               M         clrf    LATD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000628 EF?? F???          M         goto    PLOG
                          M 
00062C                    M Exit
00062C 0000               M         nop
                      00941         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00062E 0E01               M         movlw   key2                ; poll for mode
000630 6210               M         cpfseq  KEY                 ; check this against key press
000632 EF?? F???          M         goto    Exit
                          M 
000636                    M Next
000636 6A89               M         clrf    LATA                ; clear pins before proceeding
000638 6A8A               M         clrf    LATB
00063A 6A8B               M         clrf    LATC
00063C 6A8C               M         clrf    LATD
00063E EF?? F???          M         goto    PLOG
                          M 
000642                    M Exit
000642 0000               M         nop
                      00942         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000644 0E02               M         movlw   key3                ; poll for mode
000646 6210               M         cpfseq  KEY                 ; check this against key press
000648 EF?? F???          M         goto    Exit
                          M 
00064C                    M Next
00064C 6A89               M         clrf    LATA                ; clear pins before proceeding
00064E 6A8A               M         clrf    LATB
000650 6A8B               M         clrf    LATC
000652 6A8C               M         clrf    LATD
000654 EF?? F???          M         goto    PLOG
                          M 
000658                    M Exit
000658 0000               M         nop
                      00943         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
00065A 0E04               M         movlw   key4                ; poll for mode
00065C 6210               M         cpfseq  KEY                 ; check this against key press
00065E EF?? F???          M         goto    Exit
                          M 
000662                    M Next
000662 6A89               M         clrf    LATA                ; clear pins before proceeding
000664 6A8A               M         clrf    LATB
000666 6A8B               M         clrf    LATC
000668 6A8C               M         clrf    LATD
00066A EF?? F???          M         goto    PLOG
                          M 
00066E                    M Exit
00066E 0000               M         nop
                      00944         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000670 0E05               M         movlw   key5                ; poll for mode
000672 6210               M         cpfseq  KEY                 ; check this against key press
000674 EF?? F???          M         goto    Exit
                          M 
000678                    M Next
000678 6A89               M         clrf    LATA                ; clear pins before proceeding
00067A 6A8A               M         clrf    LATB
00067C 6A8B               M         clrf    LATC
00067E 6A8C               M         clrf    LATD
000680 EF?? F???          M         goto    PLOG
                          M 
000684                    M Exit
000684 0000               M         nop
                      00945         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000686 0E06               M         movlw   key6                ; poll for mode
000688 6210               M         cpfseq  KEY                 ; check this against key press
00068A EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00068E                    M Next
00068E 6A89               M         clrf    LATA                ; clear pins before proceeding
000690 6A8A               M         clrf    LATB
000692 6A8B               M         clrf    LATC
000694 6A8C               M         clrf    LATD
000696 EF?? F???          M         goto    PLOG
                          M 
00069A                    M Exit
00069A 0000               M         nop
                      00946         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
00069C 0E08               M         movlw   key7                ; poll for mode
00069E 6210               M         cpfseq  KEY                 ; check this against key press
0006A0 EF?? F???          M         goto    Exit
                          M 
0006A4                    M Next
0006A4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006A6 6A8A               M         clrf    LATB
0006A8 6A8B               M         clrf    LATC
0006AA 6A8C               M         clrf    LATD
0006AC EF?? F???          M         goto    PLOG
                          M 
0006B0                    M Exit
0006B0 0000               M         nop
                      00947         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0006B2 0E09               M         movlw   key8                ; poll for mode
0006B4 6210               M         cpfseq  KEY                 ; check this against key press
0006B6 EF?? F???          M         goto    Exit
                          M 
0006BA                    M Next
0006BA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006BC 6A8A               M         clrf    LATB
0006BE 6A8B               M         clrf    LATC
0006C0 6A8C               M         clrf    LATD
0006C2 EF?? F???          M         goto    PLOG
                          M 
0006C6                    M Exit
0006C6 0000               M         nop
                      00948         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0006C8 0E0A               M         movlw   key9                ; poll for mode
0006CA 6210               M         cpfseq  KEY                 ; check this against key press
0006CC EF?? F???          M         goto    Exit
                          M 
0006D0                    M Next
0006D0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D2 6A8A               M         clrf    LATB
0006D4 6A8B               M         clrf    LATC
0006D6 6A8C               M         clrf    LATD
0006D8 EF?? F???          M         goto    PLOG
                          M 
0006DC                    M Exit
0006DC 0000               M         nop
0006DE D???           00949         bra HOLD_PERM_LOG
                      00950         
0006E0                00951 PLOG
0006E0 EC?? F???      00952         call    ClrLCD
                      00953         Display PermLog1
  0000                    M         local   loop
0006E4 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0006E6 6EF8               M         movwf   TBLPTRU
0006E8 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0006EA 6EF7               M         movwf   TBLPTRH
0006EC 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0006EE 6EF6               M         movwf   TBLPTRL
0006F0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006F2 50F5               M         movf    TABLAT, W
0006F4                    M loop
0006F4 EC?? F???          M         call    WR_DATA         ; write to LCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006F8 000B               M         tblrd+*                 ; next row in table
0006FA 50F5               M         movf    TABLAT, W
0006FC E1??               M         bnz     loop
                      00954         
                      00955         ; find the key press value
0006FE C010 FFE8      00956         movff   KEY, WREG
000702 2AE8           00957         incf    WREG        ; W = KEY+1
000704 6E17           00958         movwf   temp
                      00959         
000706 42E8           00960         rrncf   WREG        ; division by 4
000708 9EE8           00961         bcf     WREG, 7     ; clear last bit, overflow from rotate
00070A 42E8           00962         rrncf   WREG        
00070C 9EE8           00963         bcf     WREG, 7
00070E 5E17           00964         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000710 C017 FFE8      00965         movff   temp, WREG
000714 C017 F011      00966         movff   temp, temp_KEY
000718 0D15           00967         mullw   d'21'       ; indexed as mutliples of 21
                      00968 
00071A                00969 displayNum
00071A C011 FFE8      00970         movff   temp_KEY, WREG
00071E 0F30           00971         addlw   0x30
000720 EC?? F???      00972         call    WR_DATA
000724 0E3A           00973         movlw   ":"
000726 EC?? F???      00974         call    WR_DATA
00072A 0E20           00975         movlw   " "
00072C EC?? F???      00976         call    WR_DATA
                      00977         
000730 CFF3 F021      00978         movff   PRODL, L_EE
000734 0E00           00979         movlw   d'0'
000736 2621           00980         addwf   L_EE
                      00981         READEE  OP_sec, H_EE, L_EE
000738 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00073C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000740 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000742 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000744 80A6               M         bsf     EECON1, RD          ; read EEPROM
000746 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
00074A 2A21           00982         incf    L_EE
                      00983         READEE  OP_INT, H_EE, L_EE
00074C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000750 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000754 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000756 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000758 80A6               M         bsf     EECON1, RD          ; read EEPROM
00075A CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00075E 2A21           00984         incf    L_EE
000760 EC?? F???      00985         call    DisplayExeTime
000764 CFF3 F021      00986         movff   PRODL, L_EE
                      00987         
                      00988         ; reset eeprom to beginning
000768 EC?? F???      00989         call    LCD_L2
00076C CFF3 F021      00990         movff   PRODL, L_EE
000770 EC?? F???      00991         call    DispOpRTC
                      00992         
000774                00993 HOLD_PLOG
000774 EC?? F???      00994         call    READ_KEY
                      00995         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
000778 0E03               M         movlw   keyA                ; poll for mode
00077A 6210               M         cpfseq  KEY                 ; check this against key press
00077C EF?? F???          M         goto    Exit
                          M 
000780                    M Next
000780 6A89               M         clrf    LATA                ; clear pins before proceeding
000782 6A8A               M         clrf    LATB
000784 6A8B               M         clrf    LATC
000786 6A8C               M         clrf    LATD
000788 EF?? F???          M         goto    PLOG_DETAILS
                          M 
00078C                    M Exit
00078C 0000               M         nop
                      00996         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00078E 0E0D               M         movlw   key0                ; poll for mode
000790 6210               M         cpfseq  KEY                 ; check this against key press
000792 EF?? F???          M         goto    Exit
                          M 
000796                    M Next
000796 6A89               M         clrf    LATA                ; clear pins before proceeding
000798 6A8A               M         clrf    LATB
00079A 6A8B               M         clrf    LATC
00079C 6A8C               M         clrf    LATD
00079E EF?? F???          M         goto    PERM_LOG
                          M 
0007A2                    M Exit
0007A2 0000               M         nop
0007A4 D???           00997         bra HOLD_PLOG
                      00998         
0007A6                00999 PLOG_DETAILS
0007A6 EC?? F???      01000         call    ClrLCD
                      01001         
                      01002         Display Log1
  0000                    M         local   loop
0007AA 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0007AC 6EF8               M         movwf   TBLPTRU
0007AE 0E??               M         movlw   high Log1       ; Move Table<15:8>
0007B0 6EF7               M         movwf   TBLPTRH
0007B2 0E??               M         movlw   low Log1        ; Move Table<7:0>
0007B4 6EF6               M         movwf   TBLPTRL
0007B6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007B8 50F5               M         movf    TABLAT, W
0007BA                    M loop
0007BA EC?? F???          M         call    WR_DATA         ; write to LCD
0007BE 000B               M         tblrd+*                 ; next row in table
0007C0 50F5               M         movf    TABLAT, W
0007C2 E1??               M         bnz     loop
0007C4 EC?? F???      01003         call    DisplayExeTime
                      01004         
0007C8 EC?? F???      01005         call    LCD_L2
0007CC EC?? F???      01006         call    DispOpSort
                      01007         
0007D0                01008 HOLD_PLOG_DETAILS
0007D0 EC?? F???      01009         call    READ_KEY
                      01010         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007D4 0E0D               M         movlw   key0                ; poll for mode
0007D6 6210               M         cpfseq  KEY                 ; check this against key press
0007D8 EF?? F???          M         goto    Exit
                          M 
0007DC                    M Next
0007DC 6A89               M         clrf    LATA                ; clear pins before proceeding
0007DE 6A8A               M         clrf    LATB
0007E0 6A8B               M         clrf    LATC
0007E2 6A8C               M         clrf    LATD
0007E4 EF?? F???          M         goto    PERM_LOG
                          M 
0007E8                    M Exit
0007E8 0000               M         nop
0007EA D???           01011         bra HOLD_PLOG_DETAILS
                      01012         
                      01013 ;*******************************************************************************
                      01014 ; pc interface
                      01015 ;*******************************************************************************
                      01016 
0007EC                01017 PC_MODE
0007EC 6A38           01018         clrf    inStandby
0007EE EC?? F???      01019         call    ClrLCD
                      01020         Display PC1
  0000                    M         local   loop
0007F2 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0007F4 6EF8               M         movwf   TBLPTRU
0007F6 0E??               M         movlw   high PC1        ; Move Table<15:8>
0007F8 6EF7               M         movwf   TBLPTRH
0007FA 0E??               M         movlw   low PC1         ; Move Table<7:0>
0007FC 6EF6               M         movwf   TBLPTRL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000800 50F5               M         movf    TABLAT, W
000802                    M loop
000802 EC?? F???          M         call    WR_DATA         ; write to LCD
000806 000B               M         tblrd+*                 ; next row in table
000808 50F5               M         movf    TABLAT, W
00080A E1??               M         bnz     loop
00080C EC?? F???      01021         call    LCD_L2
                      01022         Display PC2
  0000                    M         local   loop
000810 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000812 6EF8               M         movwf   TBLPTRU
000814 0E??               M         movlw   high PC2        ; Move Table<15:8>
000816 6EF7               M         movwf   TBLPTRH
000818 0E??               M         movlw   low PC2         ; Move Table<7:0>
00081A 6EF6               M         movwf   TBLPTRL
00081C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00081E 50F5               M         movf    TABLAT, W
000820                    M loop
000820 EC?? F???          M         call    WR_DATA         ; write to LCD
000824 000B               M         tblrd+*                 ; next row in table
000826 50F5               M         movf    TABLAT, W
000828 E1??               M         bnz     loop
00082A CFF9 F029      01023         movff   PCL, PC_PCL
00082E CFFA F02A      01024         movff   PCLATH, PC_PCLATH
000832 CFFB F02B      01025         movff   PCLATU, PC_PCLATU
                      01026         
000836                01027 HOLD_PC
000836 EC?? F???      01028         call    READ_KEY
                      01029         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00083A 0E0D               M         movlw   key0                ; poll for mode
00083C 6210               M         cpfseq  KEY                 ; check this against key press
00083E EF?? F???          M         goto    Exit
                          M 
000842                    M Next
000842 6A89               M         clrf    LATA                ; clear pins before proceeding
000844 6A8A               M         clrf    LATB
000846 6A8B               M         clrf    LATC
000848 6A8C               M         clrf    LATD
00084A EF?? F???          M         goto    STANDBY
                          M 
00084E                    M Exit
00084E 0000               M         nop
                      01030         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000850 0E0E               M         movlw   keyH                ; poll for mode
000852 6210               M         cpfseq  KEY                 ; check this against key press
000854 EF?? F???          M         goto    Exit
                          M 
000858                    M Next
000858 6A89               M         clrf    LATA                ; clear pins before proceeding
00085A 6A8A               M         clrf    LATB
00085C 6A8B               M         clrf    LATC
00085E 6A8C               M         clrf    LATD
000860 EF?? F???          M         goto    PC_TRANSFER
                          M 
000864                    M Exit
000864 0000               M         nop
000866 D???           01031         bra     HOLD_PC
                      01032 
000868                01033 PC_TRANSFER
000868 6828           01034         setf    transferring
00086A EC?? F???      01035         call    ClrLCD
                      01036         Display PCTransfer
  0000                    M         local   loop
00086E 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000870 6EF8               M         movwf   TBLPTRU
000872 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000874 6EF7               M         movwf   TBLPTRH
000876 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000878 6EF6               M         movwf   TBLPTRL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00087A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00087C 50F5               M         movf    TABLAT, W
00087E                    M loop
00087E EC?? F???          M         call    WR_DATA         ; write to LCD
000882 000B               M         tblrd+*                 ; next row in table
000884 50F5               M         movf    TABLAT, W
000886 E1??               M         bnz     loop
000888 EC?? F???      01037         call    DataUSART
00088C 6A28           01038         clrf    transferring
00088E EF?? F???      01039         goto    STANDBY
                      01040         
                      01041 ;*******************************************************************************
                      01042 ; subroutines
                      01043 ;*******************************************************************************
                      01044 
000892                01045 SaveData
000892 C02D FFE8      01046         movff       ESKA, WREG
000896 0F30           01047         addlw       0x30
                      01048         WriteEE     WREG, H_EE, L_EE
000898 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00089C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008A0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008A4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008A6 D???               M         bra     $-2
                          M 
0008A8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008AA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008AC 84A6               M         bsf     EECON1, WREN        ; enable write
0008AE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008B0 98A1               M         bcf     PIR2, EEIF
                          M 
0008B2 0E55               M         movlw   0x55
0008B4 6EA7               M         movwf   EECON2              ; write 55h
0008B6 0EAA               M         movlw   0xaa
0008B8 6EA7               M         movwf   EECON2              ; write 0xaa
0008BA 82A6               M         bsf     EECON1, WR          ; begin write
0008BC B2A6               M         btfsc   EECON1, WR
0008BE D???               M         bra     $-2
                          M 
0008C0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008C2 94A6               M         bcf     EECON1, WREN        ; disable writes
0008C4 2A21           01049         incf        L_EE
                      01050         
0008C6 C02E FFE8      01051         movff       ESKA_NOCAP, WREG
0008CA 0F30           01052         addlw       0x30
                      01053         WriteEE     WREG, H_EE, L_EE
0008CC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008D0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008D4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008D8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008DA D???               M         bra     $-2
                          M 
0008DC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008DE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008E0 84A6               M         bsf     EECON1, WREN        ; enable write
0008E2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008E4 98A1               M         bcf     PIR2, EEIF
                          M 
0008E6 0E55               M         movlw   0x55
0008E8 6EA7               M         movwf   EECON2              ; write 55h
0008EA 0EAA               M         movlw   0xaa
0008EC 6EA7               M         movwf   EECON2              ; write 0xaa
0008EE 82A6               M         bsf     EECON1, WR          ; begin write
0008F0 B2A6               M         btfsc   EECON1, WR
0008F2 D???               M         bra     $-2
                          M 
0008F4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008F6 94A6               M         bcf     EECON1, WREN        ; disable writes
0008F8 2A21           01054         incf        L_EE
                      01055         
0008FA C02F FFE8      01056         movff       YOP, WREG
0008FE 0F30           01057         addlw       0x30
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01058         WriteEE     WREG, H_EE, L_EE
000900 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000904 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000908 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00090C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00090E D???               M         bra     $-2
                          M 
000910 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000912 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000914 84A6               M         bsf     EECON1, WREN        ; enable write
000916 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000918 98A1               M         bcf     PIR2, EEIF
                          M 
00091A 0E55               M         movlw   0x55
00091C 6EA7               M         movwf   EECON2              ; write 55h
00091E 0EAA               M         movlw   0xaa
000920 6EA7               M         movwf   EECON2              ; write 0xaa
000922 82A6               M         bsf     EECON1, WR          ; begin write
000924 B2A6               M         btfsc   EECON1, WR
000926 D???               M         bra     $-2
                          M 
000928 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00092A 94A6               M         bcf     EECON1, WREN        ; disable writes
00092C 2A21           01059         incf        L_EE
                      01060         
00092E C030 FFE8      01061         movff       YOP_NOCAP, WREG
000932 0F30           01062         addlw       0x30
                      01063         WriteEE     WREG, H_EE, L_EE
000934 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000938 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00093C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000940 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000942 D???               M         bra     $-2
                          M 
000944 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000946 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000948 84A6               M         bsf     EECON1, WREN        ; enable write
00094A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00094C 98A1               M         bcf     PIR2, EEIF
                          M 
00094E 0E55               M         movlw   0x55
000950 6EA7               M         movwf   EECON2              ; write 55h
000952 0EAA               M         movlw   0xaa
000954 6EA7               M         movwf   EECON2              ; write 0xaa
000956 82A6               M         bsf     EECON1, WR          ; begin write
000958 B2A6               M         btfsc   EECON1, WR
00095A D???               M         bra     $-2
                          M 
00095C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00095E 94A6               M         bcf     EECON1, WREN        ; disable writes
000960 2A21           01064         incf        L_EE
                      01065         
000962 C037 FFE8      01066         movff       STOP_CONDITION, WREG
000966 0F30           01067         addlw       0x30
                      01068         WriteEE     WREG, H_EE, L_EE
000968 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00096C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000970 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000974 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000976 D???               M         bra     $-2
                          M 
000978 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00097A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00097C 84A6               M         bsf     EECON1, WREN        ; enable write
00097E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000980 98A1               M         bcf     PIR2, EEIF
                          M 
000982 0E55               M         movlw   0x55
000984 6EA7               M         movwf   EECON2              ; write 55h
000986 0EAA               M         movlw   0xaa
000988 6EA7               M         movwf   EECON2              ; write 0xaa
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00098A 82A6               M         bsf     EECON1, WR          ; begin write
00098C B2A6               M         btfsc   EECON1, WR
00098E D???               M         bra     $-2
                          M 
000990 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000992 94A6               M         bcf     EECON1, WREN        ; disable writes
000994 2A21           01069         incf        L_EE
                      01070         
000996 0E00           01071         movlw       d'0'
000998 6E20           01072         movwf       H_EE
00099A 0EA8           01073         movlw       d'168'              ; take d'168' as last
00099C 6E21           01074         movwf       L_EE
00099E 0E00           01075         movlw       d'0'
0009A0 6E23           01076         movwf       tempH_EE
0009A2 0EDC           01077         movlw       d'220'              ; temp for low constant
0009A4 6E24           01078         movwf       tempL_EE
                      01079         
0009A6 6A16           01080         clrf        counter2
0009A8 6A15           01081         clrf        counter
                      01082         
0009AA                01083 ShiftLoop
0009AA 2A15           01084         incf            counter
                      01085         READEE          REG_EE, H_EE, L_EE
0009AC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0009B0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0009B4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009B6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009B8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009BA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0009BE 0E15           01086         movlw           d'21'
0009C0 2621           01087         addwf           L_EE
                      01088         WriteEE         REG_EE, H_EE, L_EE
0009C2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009C6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009CA C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0009CE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009D0 D???               M         bra     $-2
                          M 
0009D2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009D4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009D6 84A6               M         bsf     EECON1, WREN        ; enable write
0009D8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009DA 98A1               M         bcf     PIR2, EEIF
                          M 
0009DC 0E55               M         movlw   0x55
0009DE 6EA7               M         movwf   EECON2              ; write 55h
0009E0 0EAA               M         movlw   0xaa
0009E2 6EA7               M         movwf   EECON2              ; write 0xaa
0009E4 82A6               M         bsf     EECON1, WR          ; begin write
0009E6 B2A6               M         btfsc   EECON1, WR
0009E8 D???               M         bra     $-2
                          M 
0009EA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009EC 94A6               M         bcf     EECON1, WREN        ; disable writes
0009EE 0E14           01089         movlw           d'20'
0009F0 5E21           01090         subwf           L_EE
0009F2 0E15           01091         movlw           d'21'
0009F4 6215           01092         cpfseq          counter
0009F6 EF?? F???      01093         goto            ShiftLoop
                      01094         
                      01095         ; Set EEPROM address to the previous 21 byte block, and reset temp address
0009FA 0E2A           01096         movlw           d'42'
0009FC 5E21           01097         subwf           L_EE
0009FE 0EDC           01098         movlw           d'220'
000A00 6E24           01099         movwf           tempL_EE
000A02 6A15           01100         clrf            counter
000A04 2A16           01101         incf            counter2
000A06 0E09           01102         movlw           d'9'
000A08 6216           01103         cpfseq          counter2        ; Skip if 9 shifts were made
000A0A EF?? F???      01104         goto            ShiftLoop
                      01105 
000A0E 0012           01106         return
                      01107         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A10                01108 RTC_INIT
                      01109         ; set sda and scl to high
000A10 9882           01110         bcf     PORTC, 4
000A12 9682           01111         bcf     PORTC, 3
000A14 8894           01112         bsf     TRISC, 4
000A16 8694           01113         bsf     TRISC, 3
                      01114         
000A18 EC?? F???      01115         call    INIT_RTC
                      01116         
                      01117         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A1C 0012           01118 return
                      01119         
000A1E                01120 SAVE_TIME
                      01121         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A1E 0E02               M     movlw   0x02
000A20 6E??               M     movwf   regaddress
000A22 EC?? F???          M     call    read_rtc
000A26 C??? FFE8          M     movff   datachar, WREG
000A2A EC?? F???          M     call    rtc_convert
                      01122         rtc_read    0x02        ; hours
000A2E 0E02               M     movlw   0x02
000A30 6E??               M     movwf   regaddress
000A32 EC?? F???          M     call    read_rtc
000A36 C??? FFE8          M     movff   datachar, WREG
000A3A EC?? F???          M     call    rtc_convert
000A3E EC?? F???      01123         call    WriteEE_RTC
                      01124         rtc_read    0x01        ; minutes
000A42 0E01               M     movlw   0x01
000A44 6E??               M     movwf   regaddress
000A46 EC?? F???          M     call    read_rtc
000A4A C??? FFE8          M     movff   datachar, WREG
000A4E EC?? F???          M     call    rtc_convert
000A52 EC?? F???      01125         call    WriteEE_RTC
                      01126         rtc_read    0x06        ; years
000A56 0E06               M     movlw   0x06
000A58 6E??               M     movwf   regaddress
000A5A EC?? F???          M     call    read_rtc
000A5E C??? FFE8          M     movff   datachar, WREG
000A62 EC?? F???          M     call    rtc_convert
000A66 EC?? F???      01127         call    WriteEE_RTC
                      01128         rtc_read    0x05        ; months
000A6A 0E05               M     movlw   0x05
000A6C 6E??               M     movwf   regaddress
000A6E EC?? F???          M     call    read_rtc
000A72 C??? FFE8          M     movff   datachar, WREG
000A76 EC?? F???          M     call    rtc_convert
000A7A EC?? F???      01129         call    WriteEE_RTC
                      01130         rtc_read    0x04        ; days
000A7E 0E04               M     movlw   0x04
000A80 6E??               M     movwf   regaddress
000A82 EC?? F???          M     call    read_rtc
000A86 C??? FFE8          M     movff   datachar, WREG
000A8A EC?? F???          M     call    rtc_convert
000A8E EC?? F???      01131         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000A92 0012           01132 return
                      01133         
000A94                01134 SAVE_EXE_TIME
                      01135         
Warning[202]: Argument out of range.  Least significant bits used.
000A94 3818           01136         swapf   OP_sec, WREG    ; 100's seconds
000A96 6E17           01137         movwf   temp
000A98 0E0F           01138         movlw   0x0F
000A9A 1617           01139         andwf   temp
000A9C C017 FFE8      01140         movff   temp, WREG
000AA0 0F30           01141         addlw   0x30    
                      01142         WriteEE WREG, H_EE, L_EE
000AA2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AA6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AAA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AAE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AB0 D???               M         bra     $-2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000AB2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AB4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AB6 84A6               M         bsf     EECON1, WREN        ; enable write
000AB8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000ABA 98A1               M         bcf     PIR2, EEIF
                          M 
000ABC 0E55               M         movlw   0x55
000ABE 6EA7               M         movwf   EECON2              ; write 55h
000AC0 0EAA               M         movlw   0xaa
000AC2 6EA7               M         movwf   EECON2              ; write 0xaa
000AC4 82A6               M         bsf     EECON1, WR          ; begin write
000AC6 B2A6               M         btfsc   EECON1, WR
000AC8 D???               M         bra     $-2
                          M 
000ACA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000ACC 94A6               M         bcf     EECON1, WREN        ; disable writes
000ACE 2A21           01143         incf    L_EE
                      01144         
000AD0 C018 F017      01145         movff   OP_sec, temp    ; 10's seconds
000AD4 0E0F           01146         movlw   0x0F
000AD6 1617           01147         andwf   temp            ; Temp = lower nibble of Op_sec
000AD8 C017 FFE8      01148         movff   temp, WREG      ; W = Temp
000ADC 0F30           01149         addlw   0x30            ; Convert to ASCII
                      01150         WriteEE WREG, H_EE, L_EE
000ADE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AE2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AE6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AEA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AEC D???               M         bra     $-2
                          M 
000AEE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AF0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AF2 84A6               M         bsf     EECON1, WREN        ; enable write
000AF4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000AF6 98A1               M         bcf     PIR2, EEIF
                          M 
000AF8 0E55               M         movlw   0x55
000AFA 6EA7               M         movwf   EECON2              ; write 55h
000AFC 0EAA               M         movlw   0xaa
000AFE 6EA7               M         movwf   EECON2              ; write 0xaa
000B00 82A6               M         bsf     EECON1, WR          ; begin write
000B02 B2A6               M         btfsc   EECON1, WR
000B04 D???               M         bra     $-2
                          M 
000B06 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B08 94A6               M         bcf     EECON1, WREN        ; disable writes
000B0A 2A21           01151         incf    L_EE
                      01152         
Warning[202]: Argument out of range.  Least significant bits used.
000B0C 3819           01153         swapf   OP_INT, WREG    ;1's seconds
000B0E 6E17           01154         movwf   temp
000B10 0E0F           01155         movlw   0x0f
000B12 1617           01156         andwf   temp
000B14 C017 FFE8      01157         movff   temp, WREG
000B18 0F30           01158         addlw   0x30
                      01159         WriteEE WREG, H_EE, L_EE
000B1A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B1E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B22 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B26 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B28 D???               M         bra     $-2
                          M 
000B2A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B2C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B2E 84A6               M         bsf     EECON1, WREN        ; enable write
000B30 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B32 98A1               M         bcf     PIR2, EEIF
                          M 
000B34 0E55               M         movlw   0x55
000B36 6EA7               M         movwf   EECON2              ; write 55h
000B38 0EAA               M         movlw   0xaa
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B3A 6EA7               M         movwf   EECON2              ; write 0xaa
000B3C 82A6               M         bsf     EECON1, WR          ; begin write
000B3E B2A6               M         btfsc   EECON1, WR
000B40 D???               M         bra     $-2
                          M 
000B42 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B44 94A6               M         bcf     EECON1, WREN        ; disable writes
000B46 2A21           01160         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000B48 0012           01161 return
                      01162         
                      01163                 
000B4A                01164 DISPLAY_RTC
                      01165         ; display data in this format hh/minmin/yy yy/mm/dd
                      01166         
                      01167         rtc_read    0x02            ; 0x02 from DS1307 - hours
000B4A 0E02               M     movlw   0x02
000B4C 6E??               M     movwf   regaddress
000B4E EC?? F???          M     call    read_rtc
000B52 C??? FFE8          M     movff   datachar, WREG
000B56 EC?? F???          M     call    rtc_convert
000B5A C??? FFE8      01168         movff   tens_digit,WREG
000B5E EC?? F???      01169         call    WR_DATA
000B62 C??? FFE8      01170         movff   ones_digit,WREG
000B66 EC?? F???      01171         call    WR_DATA
000B6A 0E68           01172         movlw   "h"
000B6C EC?? F???      01173         call    WR_DATA
                      01174         
                      01175         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000B70 0E01               M     movlw   0x01
000B72 6E??               M     movwf   regaddress
000B74 EC?? F???          M     call    read_rtc
000B78 C??? FFE8          M     movff   datachar, WREG
000B7C EC?? F???          M     call    rtc_convert
000B80 C??? FFE8      01176         movff   tens_digit,WREG
000B84 EC?? F???      01177         call    WR_DATA
000B88 C??? FFE8      01178         movff   ones_digit,WREG
000B8C EC?? F???      01179         call    WR_DATA
                      01180         
                      01181         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000B90 0E00               M     movlw   0x00
000B92 6E??               M     movwf   regaddress
000B94 EC?? F???          M     call    read_rtc
000B98 C??? FFE8          M     movff   datachar, WREG
000B9C EC?? F???          M     call    rtc_convert
000BA0 C??? FFE8      01182         movff   tens_digit,WREG
000BA4 EC?? F???      01183         call    WR_DATA
000BA8 C??? FFE8      01184         movff   ones_digit,WREG
000BAC EC?? F???      01185         call    WR_DATA
000BB0 0E20           01186         movlw   " "
000BB2 EC?? F???      01187         call    WR_DATA
                      01188         
                      01189         rtc_read    0x06            ; 0x06 from DS1307 - years
000BB6 0E06               M     movlw   0x06
000BB8 6E??               M     movwf   regaddress
000BBA EC?? F???          M     call    read_rtc
000BBE C??? FFE8          M     movff   datachar, WREG
000BC2 EC?? F???          M     call    rtc_convert
000BC6 C??? FFE8      01190         movff   tens_digit,WREG
000BCA EC?? F???      01191         call    WR_DATA
000BCE C??? FFE8      01192         movff   ones_digit,WREG
000BD2 EC?? F???      01193         call    WR_DATA
000BD6 0E2F           01194         movlw   "/"
000BD8 EC?? F???      01195         call    WR_DATA
                      01196         
                      01197         rtc_read    0x05            ; 0x05 from DS1307 - months
000BDC 0E05               M     movlw   0x05
000BDE 6E??               M     movwf   regaddress
000BE0 EC?? F???          M     call    read_rtc
000BE4 C??? FFE8          M     movff   datachar, WREG
000BE8 EC?? F???          M     call    rtc_convert
000BEC C??? FFE8      01198         movff   tens_digit,WREG
000BF0 EC?? F???      01199         call    WR_DATA
000BF4 C??? FFE8      01200         movff   ones_digit,WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BF8 EC?? F???      01201         call    WR_DATA
000BFC 0E2F           01202         movlw   "/"
000BFE EC?? F???      01203         call    WR_DATA
                      01204         
                      01205         rtc_read    0x04            ; 0x04 from DS1307 - days
000C02 0E04               M     movlw   0x04
000C04 6E??               M     movwf   regaddress
000C06 EC?? F???          M     call    read_rtc
000C0A C??? FFE8          M     movff   datachar, WREG
000C0E EC?? F???          M     call    rtc_convert
000C12 C??? FFE8      01206         movff   tens_digit,WREG
000C16 EC?? F???      01207         call    WR_DATA
000C1A C??? FFE8      01208         movff   ones_digit,WREG
000C1E EC?? F???      01209         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C22 0012           01210 return
                      01211         
000C24                01212 SET_TIME
                      01213         rtc_resetAll
                          M 
000C24 6A??               M     clrf    databyte
000C26 0E06               M     movlw   6
000C28 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000C2A                    M     del_loop0
000C2A EC?? F???          M     call    write_rtc
000C2E 2E??               M     decfsz  regaddress
000C30 D???               M     bra     del_loop0
000C32 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01214         
                      01215         rtc_set 0x00,   b'10000000'
000C36 0E00               M     movlw   0x00
000C38 6E??               M     movwf   regaddress
000C3A 0E80               M     movlw   b'10000000'
000C3C 6E??               M     movwf   databyte
000C3E EC?? F???          M     call    write_rtc
                      01216 
                      01217         rtc_set 0x06,   b'00010111'             ; Year 17
000C42 0E06               M     movlw   0x06
000C44 6E??               M     movwf   regaddress
000C46 0E17               M     movlw   b'00010111'
000C48 6E??               M     movwf   databyte
000C4A EC?? F???          M     call    write_rtc
                      01218         rtc_set 0x05,   b'00000011'             ; Month 03
000C4E 0E05               M     movlw   0x05
000C50 6E??               M     movwf   regaddress
000C52 0E03               M     movlw   b'00000011'
000C54 6E??               M     movwf   databyte
000C56 EC?? F???          M     call    write_rtc
                      01219         rtc_set 0x04,   b'00000100'             ; Date 04
000C5A 0E04               M     movlw   0x04
000C5C 6E??               M     movwf   regaddress
000C5E 0E04               M     movlw   b'00000100'
000C60 6E??               M     movwf   databyte
000C62 EC?? F???          M     call    write_rtc
                      01220         rtc_set 0x02,   b'00010010'             ; Hours 12
000C66 0E02               M     movlw   0x02
000C68 6E??               M     movwf   regaddress
000C6A 0E12               M     movlw   b'00010010'
000C6C 6E??               M     movwf   databyte
000C6E EC?? F???          M     call    write_rtc
                      01221         rtc_set 0x01,   b'01001000'             ; Minutes 27
000C72 0E01               M     movlw   0x01
000C74 6E??               M     movwf   regaddress
000C76 0E48               M     movlw   b'01001000'
000C78 6E??               M     movwf   databyte
000C7A EC?? F???          M     call    write_rtc
                      01222         rtc_set 0x00,   b'00000000'             ; Seconds 0
000C7E 0E00               M     movlw   0x00
000C80 6E??               M     movwf   regaddress
000C82 0E00               M     movlw   b'00000000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C84 6E??               M     movwf   databyte
000C86 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000C8A 0012           01223 return
                      01224         
000C8C                01225 INIT_USART
                      01226         
000C8C 8E94           01227         bsf     TRISC, 7        ; set RC7=USART RC
000C8E 9C94           01228         bcf     TRISC, 6        ; clear RC6=USART TX
                      01229 
000C90 0E0F           01230         movlw   15              ; baud rate 9600
000C92 6EAF           01231         movwf   SPBRG
000C94 6AAC           01232         clrf    TXSTA
                      01233         
000C96 6AAB           01234         clrf    RCSTA
000C98 8EAB           01235         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000C9A 88AB           01236         bsf     RCSTA,CREN      ; continous receive
                      01237         
000C9C 8AAC           01238         bsf     TXSTA, TXEN     ; transmit enabled
000C9E 0012           01239         return
                      01240 
000CA0                01241 DataUSART
000CA0 0E02           01242         movlw   0x02
000CA2 EC?? F???      01243         call    USART_WAIT
000CA6 0E0D           01244         movlw   0x0D
000CA8 EC?? F???      01245         call    USART_WAIT
                      01246         
000CAC 6A15           01247         clrf    counter         ; used to cycle through past 9 eeprom logs
000CAE 6A16           01248         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01249         
000CB0                01250 TRANSFER_LOGS
000CB0 0E15           01251         movlw   d'21'           ; logs are 21 bits apart
000CB2 0215           01252         mulwf   counter         ; log number one starts at eeprom address 0
000CB4 CFF3 F021      01253         movff   PRODL, L_EE     ; low address now points to count X 21
000CB8 6A16           01254         clrf    counter2
                      01255         
000CBA                01256 TRANSFER_DATA   
                      01257         READEE  WREG, H_EE, L_EE
000CBA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CBE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000CC2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CC4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CC6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CC8 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CCC EC?? F???      01258         call    USART_WAIT      ; transfer bit
000CD0 2A21           01259         incf    L_EE
                      01260         
000CD2 2A16           01261         incf    counter2
000CD4 0E12           01262         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000CD6 6216           01263         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000CD8 D???           01264         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01265         
000CDA EC?? F???      01266         call    USART_LINE      ; new line because a e s t h e t i c
                      01267         
000CDE 2A15           01268         incf    counter
000CE0 0E08           01269         movlw   d'8'            ; we save up to the last 9 permanent logs
000CE2 6215           01270         cpfseq  counter
000CE4 D???           01271         bra     TRANSFER_LOGS
                      01272         
000CE6 EC?? F???      01273         call    LCD_L2
                      01274         Display PCComplete
  0000                    M         local   loop
000CEA 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000CEC 6EF8               M         movwf   TBLPTRU
000CEE 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000CF0 6EF7               M         movwf   TBLPTRH
000CF2 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000CF4 6EF6               M         movwf   TBLPTRL
000CF6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CF8 50F5               M         movf    TABLAT, W
000CFA                    M loop
000CFA EC?? F???          M         call    WR_DATA         ; write to LCD
000CFE 000B               M         tblrd+*                 ; next row in table
000D00 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D02 E1??               M         bnz     loop
                      01275         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D04 0E28               M         movlw   0x28
000D06 6E1A               M         movwf   delayR
                          M 
000D08                    M loop
000D08 EC?? F???          M         call    Delay50ms
000D0C 2E1A               M         decfsz  delayR
000D0E EF?? F???          M         goto    loop
000D12 0012           01276         return                  ; done transmitting data
                      01277         
000D14                01278 USART_WAIT
000D14 6EAD           01279         movwf   TXREG
000D16 A2AC           01280         btfss   TXSTA, 1
000D18 EF?? F???      01281         goto    $-2
000D1C 0012           01282         return
                      01283 
000D1E                01284 USART_LINE
000D1E 0E0A           01285         movlw   0x0A
000D20 EC?? F???      01286         call    USART_WAIT
000D24 0E0D           01287         movlw   0x0D
000D26 EC?? F???      01288         call    USART_WAIT
000D2A 0012           01289         return
                      01290         
000D2C                01291 Delay5us
000D2C 0E78           01292         movlw   d'120'
000D2E 6E1B           01293         movwf   d5us
                      01294 
000D30                01295 loop5us
000D30 2E1B           01296         decfsz  d5us
000D32 EF?? F???      01297         goto    loop5us
000D36 0000           01298         nop
000D38 0012           01299         return
                      01300 
000D3A                01301 Delay200us
000D3A 0EA4           01302         movlw   0xA4
000D3C 6E1C           01303         movwf   d200us
                      01304 
000D3E                01305 loop200us
000D3E 2E1C           01306         decfsz  d200us
000D40 EF?? F???      01307         goto    loop200us
000D44 0000           01308         nop
000D46 0012           01309         return
                      01310 
000D48                01311 Delay50ms
000D48 0EF9           01312         movlw   0xF9
000D4A 6E1D           01313         movwf   d50ms
                      01314 
000D4C                01315 loop50ms
000D4C EC?? F???      01316         call    Delay200us
000D50 2E1D           01317         decfsz  d50ms
                      01318 
000D52                01319 Cycles
000D52 EF?? F???      01320         goto    loop50ms
000D56 EC?? F???      01321         call    Delay200us
000D5A 0012           01322         return
                      01323 
000D5C                01324 WriteEE_RTC
                      01325         WriteEE tens_digit, H_EE, L_EE
000D5C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D60 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D64 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000D68 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D6A D???               M         bra     $-2
                          M 
000D6C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D6E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D70 84A6               M         bsf     EECON1, WREN        ; enable write
000D72 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D74 98A1               M         bcf     PIR2, EEIF
                          M 
000D76 0E55               M         movlw   0x55
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D78 6EA7               M         movwf   EECON2              ; write 55h
000D7A 0EAA               M         movlw   0xaa
000D7C 6EA7               M         movwf   EECON2              ; write 0xaa
000D7E 82A6               M         bsf     EECON1, WR          ; begin write
000D80 B2A6               M         btfsc   EECON1, WR
000D82 D???               M         bra     $-2
                          M 
000D84 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D86 94A6               M         bcf     EECON1, WREN        ; disable writes
000D88 2A21           01326         incf    L_EE
                      01327         WriteEE ones_digit, H_EE, L_EE
000D8A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D8E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D92 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000D96 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D98 D???               M         bra     $-2
                          M 
000D9A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D9C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D9E 84A6               M         bsf     EECON1, WREN        ; enable write
000DA0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DA2 98A1               M         bcf     PIR2, EEIF
                          M 
000DA4 0E55               M         movlw   0x55
000DA6 6EA7               M         movwf   EECON2              ; write 55h
000DA8 0EAA               M         movlw   0xaa
000DAA 6EA7               M         movwf   EECON2              ; write 0xaa
000DAC 82A6               M         bsf     EECON1, WR          ; begin write
000DAE B2A6               M         btfsc   EECON1, WR
000DB0 D???               M         bra     $-2
                          M 
000DB2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DB4 94A6               M         bcf     EECON1, WREN        ; disable writes
000DB6 2A21           01328         incf    L_EE
000DB8 0012           01329         return
                      01330 
000DBA                01331 ClearEEPROM_21
000DBA 6A20           01332         clrf    H_EE
000DBC 6A21           01333         clrf    L_EE
000DBE 681F           01334         setf    clear_EE
000DC0 6A15           01335         clrf    counter
000DC2                01336 ClearNext
                      01337         WriteEE         clear_EE, H_EE, L_EE
000DC2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DC6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DCA C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000DCE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DD0 D???               M         bra     $-2
                          M 
000DD2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DD4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DD6 84A6               M         bsf     EECON1, WREN        ; enable write
000DD8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DDA 98A1               M         bcf     PIR2, EEIF
                          M 
000DDC 0E55               M         movlw   0x55
000DDE 6EA7               M         movwf   EECON2              ; write 55h
000DE0 0EAA               M         movlw   0xaa
000DE2 6EA7               M         movwf   EECON2              ; write 0xaa
000DE4 82A6               M         bsf     EECON1, WR          ; begin write
000DE6 B2A6               M         btfsc   EECON1, WR
000DE8 D???               M         bra     $-2
                          M 
000DEA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DEC 94A6               M         bcf     EECON1, WREN        ; disable writes
000DEE 2A15           01338         incf            counter
000DF0 2A21           01339         incf            L_EE
000DF2 0E15           01340         movlw           d'21'
000DF4 6215           01341         cpfseq          counter
000DF6 EF?? F???      01342         goto            ClearNext
000DFA 6A20           01343         clrf            H_EE
000DFC 6A21           01344         clrf            L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DFE 0012           01345         return
                      01346         
000E00                01347 READ_KEY
000E00 A281           01348         btfss   PORTB, 1        ; check for keypad interrupt
000E02 EF?? F???      01349         goto    READ_KEY
000E06 3881           01350         swapf   PORTB, W
000E08 0B0F           01351         andlw   0x0F
000E0A 6E10           01352         movwf   KEY
000E0C B281           01353         btfsc   PORTB, 1
000E0E EF?? F???      01354         goto    $-2
000E12 0012           01355         return
                      01356 
000E14                01357 READ_KEY_TIME
000E14 EC?? F???      01358         call        LCD_L2          ; go to second line to print RTC
                      01359 ;       call        Shift
                      01360 ;       Delay50N delayR, 0x04
                      01361         
                      01362         ; display the time
                      01363         ; call      DISPLAY_RTC 
                      01364 
000E18 A281           01365         btfss       PORTB, 1    ; keypad interrupt
000E1A EF?? F???      01366         goto        READ_KEY_TIME
000E1E 3881           01367         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E20 0B0F           01368         andlw       0x0F        ; only want W3:0
000E22 6E10           01369         movwf       KEY         ; write this value to the KEY
000E24 B281           01370         btfsc       PORTB, 1    ; wait for release
000E26 EF?? F???      01371         goto        $-2         ; go back one instruction
000E2A 0012           01372         return
                      01373 
000E2C                01374 DisplayExeTime
                      01375         READEE  REG_EE, H_EE, L_EE
000E2C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E30 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E34 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E36 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E38 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E3A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E3E 0EFF           01376         movlw   0xFF
000E40 6222           01377         cpfseq  REG_EE
000E42 EF?? F???      01378         goto    NoSkipDispExeTime
                      01379         Display NoData
  0000                    M         local   loop
000E46 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E48 6EF8               M         movwf   TBLPTRU
000E4A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E4C 6EF7               M         movwf   TBLPTRH
000E4E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E50 6EF6               M         movwf   TBLPTRL
000E52 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E54 50F5               M         movf    TABLAT, W
000E56                    M loop
000E56 EC?? F???          M         call    WR_DATA         ; write to LCD
000E5A 000B               M         tblrd+*                 ; next row in table
000E5C 50F5               M         movf    TABLAT, W
000E5E E1??               M         bnz     loop
000E60 0EFF           01380         movlw   0xFF
000E62 6022           01381         cpfslt  REG_EE
000E64 EF?? F???      01382         goto    SkipDispExeTime
000E68 0012           01383         return
                      01384 
000E6A                01385 NoSkipDispExeTime
                      01386         READEE  WREG, H_EE, L_EE
000E6A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E6E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E72 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E74 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E76 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E78 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E7C EC?? F???      01387         call    WR_DATA
000E80 2A21           01388         incf    L_EE
                      01389         
                      01390         READEE  WREG, H_EE, L_EE
000E82 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E86 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E8A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E8C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E8E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E90 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E94 EC?? F???      01391         call    WR_DATA
000E98 2A21           01392         incf    L_EE
                      01393         
                      01394         READEE  WREG, H_EE, L_EE
000E9A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E9E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EA2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EA4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EA6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EA8 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EAC EC?? F???      01395         call    WR_DATA
000EB0 2A21           01396         incf    L_EE
                      01397 
000EB2 0E73           01398         movlw   0x73            ; Write 's'
000EB4 EC?? F???      01399         call    WR_DATA
000EB8 EC?? F???      01400         call    LCD_L2
000EBC                01401 SkipDispExeTime
000EBC 0012           01402         return
                      01403 
000EBE                01404 DispOpSort
                      01405         READEE  REG_EE, H_EE, L_EE
000EBE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EC2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EC6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EC8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ECA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ECC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000ED0 0EFF           01406         movlw   0xff
000ED2 6222           01407         cpfseq  REG_EE
000ED4 EF?? F???      01408         goto    NoSkipDispOpSort
                      01409         Display NoData
  0000                    M         local   loop
000ED8 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EDA 6EF8               M         movwf   TBLPTRU
000EDC 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EDE 6EF7               M         movwf   TBLPTRH
000EE0 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EE2 6EF6               M         movwf   TBLPTRL
000EE4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EE6 50F5               M         movf    TABLAT, W
000EE8                    M loop
000EE8 EC?? F???          M         call    WR_DATA         ; write to LCD
000EEC 000B               M         tblrd+*                 ; next row in table
000EEE 50F5               M         movf    TABLAT, W
000EF0 E1??               M         bnz     loop
000EF2 0EFF           01410         movlw   0xff
000EF4 6022           01411         cpfslt  REG_EE
000EF6 EF?? F???      01412         goto    SkipDispOpSort
                      01413 
000EFA                01414 NoSkipDispOpSort
000EFA 0E61           01415         movlw   "a"
000EFC EC?? F???      01416         call    WR_DATA
                      01417         
                      01418         READEE  REG_EE, H_EE, L_EE
000F00 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F04 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F08 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F0A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F0C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F0E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F12 C022 FFE8      01419         movff   REG_EE, WREG
000F16 EC?? F???      01420         call    WR_DATA
000F1A 2A21           01421         incf    L_EE
                      01422         
000F1C 0E20           01423         movlw   " "
000F1E EC?? F???      01424         call    WR_DATA
                      01425         
000F22 0E62           01426         movlw   "b"
000F24 EC?? F???      01427         call    WR_DATA
                      01428         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01429         READEE  REG_EE, H_EE, L_EE
000F28 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F2C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F30 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F32 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F34 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F36 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F3A C022 FFE8      01430         movff   REG_EE, WREG
000F3E EC?? F???      01431         call    WR_DATA
000F42 2A21           01432         incf    L_EE
                      01433         
000F44 0E20           01434         movlw   " "
000F46 EC?? F???      01435         call    WR_DATA
                      01436         
000F4A 0E63           01437         movlw   "c"
000F4C EC?? F???      01438         call    WR_DATA
                      01439         
                      01440         READEE  REG_EE, H_EE, L_EE
000F50 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F54 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F58 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F5A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F5C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F5E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F62 C022 FFE8      01441         movff   REG_EE, WREG
000F66 EC?? F???      01442         call    WR_DATA
000F6A 2A21           01443         incf    L_EE
                      01444         
000F6C 0E20           01445         movlw   " "
000F6E EC?? F???      01446         call    WR_DATA
                      01447         
000F72 0E64           01448         movlw   "d"
000F74 EC?? F???      01449         call    WR_DATA
                      01450         
                      01451         READEE  REG_EE, H_EE, L_EE
000F78 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F7C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F80 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F82 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F84 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F86 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F8A C022 FFE8      01452         movff   REG_EE, WREG
000F8E EC?? F???      01453         call    WR_DATA
000F92 2A21           01454         incf    L_EE
                      01455 
000F94                01456 SkipDispOpSort
000F94 0012           01457         return
                      01458         
000F96                01459 DispOpRTC
                      01460         READEE  REG_EE, H_EE, L_EE
000F96 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F9A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F9E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FA2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FA4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FA8 0EFF           01461         movlw   0xff
000FAA 6222           01462         cpfseq  REG_EE
000FAC EF?? F???      01463         goto    NoSkipDispOpRTC
                      01464         Display NoData
  0000                    M         local   loop
000FB0 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000FB2 6EF8               M         movwf   TBLPTRU
000FB4 0E??               M         movlw   high NoData     ; Move Table<15:8>
000FB6 6EF7               M         movwf   TBLPTRH
000FB8 0E??               M         movlw   low NoData      ; Move Table<7:0>
000FBA 6EF6               M         movwf   TBLPTRL
000FBC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000FBE 50F5               M         movf    TABLAT, W
000FC0                    M loop
000FC0 EC?? F???          M         call    WR_DATA         ; write to LCD
000FC4 000B               M         tblrd+*                 ; next row in table
000FC6 50F5               M         movf    TABLAT, W
000FC8 E1??               M         bnz     loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  14:21:24         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000FCA 0EFF           01465         movlw   0xff
000FCC 6022           01466         cpfslt  REG_EE
000FCE EF?? F???      01467         goto    SkipDispOpRTC
                      01468 
000FD2                01469 NoSkipDispOpRTC
                      01470         READEE  REG_EE, H_EE, L_EE
000FD2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FD6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FDA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FDC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FDE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FE0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FE4 C022 FFE8      01471         movff   REG_EE, WREG
000FE8 EC?? F???      01472         call    WR_DATA
000FEC 2A21           01473         incf    L_EE
                      01474         
                      01475         READEE  REG_EE, H_EE, L_EE
000FEE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FF2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FF6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FF8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FFA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FFC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001000 C022 FFE8      01476         movff   REG_EE, WREG
001004 EC?? F???      01477         call    WR_DATA
001008 2A21           01478         incf    L_EE
                      01479 
00100A 0E68           01480         movlw   "h"
00100C EC?? F???      01481         call    WR_DATA
                      01482         
001010 EC?? F???      01483         call    DispOpRTC_Helper
                      01484         
001014 0E20           01485         movlw   " "
001016 EC?? F???      01486         call    WR_DATA
                      01487         
00101A EC?? F???      01488         call    DispOpRTC_Helper
00101E 0E2F           01489         movlw   "/"
001020 EC?? F???      01490         call    WR_DATA
                      01491 
001024 EC?? F???      01492         call    DispOpRTC_Helper
001028 0E2F           01493         movlw   "/"
00102A EC?? F???      01494         call    WR_DATA
00102E EC?? F???      01495         call    DispOpRTC_Helper
001032                01496 SkipDispOpRTC
001032 0012           01497                 return
001034                01498 DispOpRTC_Helper
                      01499         READEE          REG_EE, H_EE, L_EE
001034 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001038 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00103C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00103E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001040 80A6               M         bsf     EECON1, RD          ; read EEPROM
001042 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001046 C022 FFE8      01500         movff           REG_EE, WREG
00104A EC?? F???      01501         call            WR_DATA
00104E 2A21           01502         incf            L_EE
                      01503         READEE          REG_EE, H_EE, L_EE
001050 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001054 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001058 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00105A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00105C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00105E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001062 C022 FFE8      01504         movff           REG_EE, WREG
001066 EC?? F???      01505         call            WR_DATA
00106A 2A21           01506         incf            L_EE
00106C 0012           01507         return
Warning[205]: Found directive in column 1. (end)
                      01508 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

