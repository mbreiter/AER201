MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000096 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
0000A2 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000AE 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000B6 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000C4 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000CE 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000DE 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000E8 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000F2 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 EMERGENCY_STOP
                      00271         ; first check if we're currently sorting - else, no need to restart
00001C 0EFF           00272         movlw   0xff                ; if in operation, skip return
00001E 621E           00273         cpfseq  inExecution
000020 EF?? F???      00274         goto    END_ISR_HIGH
                      00275         
                      00276         ; reset program counter - emergency stop recorded. 
000024 9ED5           00277         bcf     T0CON, TMR0ON
000026 EC?? F???      00278         call    SAVE_EXE_TIME
                      00279         
                      00280         ; reset emergency stop interrupt bit
00002A 92F2           00281         bcf     INTCON, INT0IF
                      00282                 
                      00283         ; clear inExecution flag
00002C 6A1E           00284         clrf    inExecution
00002E 0E01           00285         movlw   d'1'
000030 6E37           00286         movwf   STOP_CONDITION
000032 EC?? F???      00287         call    SaveData
                      00288         
000036 6AFF           00289         clrf    TOSU
000038 6AFE           00290         clrf    TOSH
00003A 6AFD           00291         clrf    TOSL
00003C 90F0           00292         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00293         restoreContext
00003E 3814               M     swapf   temp_W, 0               ; restore W first
000040 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000044 0010           00294         retfie
                      00295 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000046                00296 LOAD_STANDBY_TIME
000046 0EFF           00297         movlw   0xff
000048 6ED7           00298         movwf   TMR0H
00004A 0EFF           00299         movlw   0xff
00004C 6ED6           00300         movwf   TMR0L
                      00301 
00004E 0012           00302         return  
                      00303 
000050                00304 LOAD_EXE_TIME
000050 0EC3           00305         movlw   0xc3
000052 6ED7           00306         movwf   TMR0H
000054 0E25           00307         movlw   0x25
000056 6ED6           00308         movwf   TMR0L
                      00309         
000058 0012           00310         return
                      00311         
00005A                00312 ISR_HIGH
                      00313         saveContext
00005A CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00005E 6E14               M     movwf   temp_W                  ; save W
                      00314         
                      00315 ;       btfsc   INTCON, INT0IF
                      00316 ;       call    EMERGENCY_STOP
                      00317         
000060 0E00           00318         movlw   0x00
000062 6238           00319         cpfseq  inStandby
000064 EC?? F???      00320         call    Shift
                      00321         
                      00322         ;reset timer, but need to check which time increment 
000068 0E00           00323         movlw   0x00
00006A 6238           00324         cpfseq  inStandby
00006C EC?? F???      00325         call    LOAD_STANDBY_TIME
                      00326         
000070 0EFF           00327         movlw   0xff
000072 6238           00328         cpfseq  inStandby
000074 EC?? F???      00329         call    LOAD_EXE_TIME
                      00330 
                      00331                 
                      00332         ; displaying the execution time in seconds
                      00333 ;       swapf   OP_sec, 0       ; 100's seconds
                      00334 ;       movwf   temp
                      00335 ;       movlw   0x0f
                      00336 ;       andwf   temp
                      00337 ;       movff   temp, WREG
                      00338 ;       addlw   0x30
                      00339 ;       call    WR_DATA
                      00340 ;
                      00341 ;       movff   OP_sec, temp    ; 10's seconds
                      00342 ;       movlw   0x0f
                      00343 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00344 ;       movff   temp, WREG      ; W = Temp
                      00345 ;       addlw   0x30            ; Convert to ASCII
                      00346 ;       call    WR_DATA
                      00347 ;       
                      00348 ;       swapf   OP_INT, WREG    ;1's seconds
                      00349 ;       movwf   temp
                      00350 ;       movlw   0x0f
                      00351 ;       andwf   temp
                      00352 ;       movff   temp, WREG
                      00353 ;       addlw   0x30
                      00354 ;       call    WR_DATA
                      00355 ;
                      00356 ;       movlw   0x73            ; Write 's'
                      00357 ;       call    WR_DATA
                      00358 ;       call    LCD_L2
                      00359                 
                      00360         ;timer interrupt
000078 A4F2           00361         btfss   INTCON, TMR0IF
00007A EF?? F???      00362         goto    END_ISR_HIGH
                      00363         
                      00364         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00007E C019 F017          M         movff   OP_INT, temp
                          M         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;process ones digit
000082 0E0F               M         movlw   0x0f
000084 1617               M         andwf   temp
000086 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000088 6217               M         cpfseq  temp
00008A EF?? F???          M         goto    ones
                          M         
00008E 0E10               M         movlw   b'00010000'
000090 2619               M         addwf   OP_INT
000092 0EF0               M         movlw   0xf0
000094 1619               M         andwf   OP_INT
000096 0EA0               M         movlw   0xa0
000098 6019               M         cpfslt  OP_INT
                          M         
00009A 6A19               M         clrf    OP_INT
00009C EF?? F???          M         goto    endBCD
                          M         
0000A0                    M ones
0000A0 2A19               M         incf    OP_INT
0000A2 EF?? F???          M         goto    endBCD
0000A6                    M endBCD
0000A6 0000               M         nop
0000A8 0E00           00365         movlw   d'0'
0000AA 6219           00366         cpfseq  OP_INT
0000AC EF?? F???      00367         goto    END_ISR_HIGH
                      00368         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000B0 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000B4 0E0F               M         movlw   0x0f
0000B6 1617               M         andwf   temp
0000B8 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000BA 6217               M         cpfseq  temp
0000BC EF?? F???          M         goto    ones
                          M         
0000C0 0E10               M         movlw   b'00010000'
0000C2 2618               M         addwf   OP_sec
0000C4 0EF0               M         movlw   0xf0
0000C6 1618               M         andwf   OP_sec
0000C8 0EA0               M         movlw   0xa0
0000CA 6018               M         cpfslt  OP_sec
                          M         
0000CC 6A18               M         clrf    OP_sec
0000CE EF?? F???          M         goto    endBCD
                          M         
0000D2                    M ones
0000D2 2A18               M         incf    OP_sec
0000D4 EF?? F???          M         goto    endBCD
0000D8                    M endBCD
0000D8 0000               M         nop
                      00369 
0000DA                00370 END_ISR_HIGH
0000DA 94F2           00371         bcf     INTCON, TMR0IF
                      00372         restoreContext
0000DC 3814               M     swapf   temp_W, 0               ; restore W first
0000DE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000E2 0010           00373         retfie
                      00374 
0000E4                00375 ISR_LOW
                      00376         saveContext
0000E4 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000E8 6E14               M     movwf   temp_W                  ; save W
                      00377         ; KEYPAD INTERRUPT
0000EA A0F0           00378         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000EC EF?? F???      00379         goto    END_ISR_LOW
                      00380 
                      00381         ; check operation status
0000F0 0EFF           00382         movlw   0xff                    ; If in operation, skip return
0000F2 621E           00383         cpfseq  inExecution
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000F4 EF?? F???      00384         goto    END_ISR_LOW
                      00385 
                      00386         ; process KEY
0000F8 3881           00387         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000FA 0B0F           00388         andlw   0x0f
0000FC 6E12           00389         movwf   KEY_ISR
                      00390         
0000FE 0E0C           00391         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
000100 6212           00392         cpfseq  KEY_ISR                 ; If key was '*', skip return
000102 EF?? F???      00393         goto    END_ISR_LOW
                      00394         
                      00395         ; reset program counter - emergency stop recorded. 
000106 9ED5           00396         bcf     T0CON, TMR0ON
000108 EC?? F???      00397         call    SAVE_EXE_TIME
                      00398                 
                      00399         ; Clear inExecution flag to stop '*' interrupts
00010C 6A1E           00400         clrf    inExecution
00010E 0E01           00401         movlw   d'1'
000110 6E37           00402         movwf   STOP_CONDITION
000112 EC?? F???      00403         call    SaveData
                      00404         
000116 6AFF           00405         clrf    TOSU
000118 6AFE           00406         clrf    TOSH
00011A 6AFD           00407         clrf    TOSL
00011C 90F0           00408         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00409         restoreContext
00011E 3814               M     swapf   temp_W, 0               ; restore W first
000120 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000124 0010           00410         retfie
                      00411 
000126                00412 END_ISR_LOW
000126 90F0           00413         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00414         restoreContext
000128 3814               M     swapf   temp_W, 0               ; restore W first
00012A C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00012E 0010           00415         retfie
                      00416 
                      00417 ;*******************************************************************************
                      00418 ; main
                      00419 ;*******************************************************************************
000130                00420 INIT
000130 0E70           00421         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000132 6ED3           00422         movwf   OSCCON
                      00423         
                      00424         ; i/o
000134 0E00           00425         movlw   b'00000000'
000136 6E92           00426         movwf   TRISA
000138 0EFF           00427         movlw   b'11111111'
00013A 6E93           00428         movwf   TRISB               ; keypad
00013C 0E00           00429         movlw   b'00000000'
00013E 6E94           00430         movwf   TRISC
000140 0E00           00431         movlw   b'00000000'
000142 6E95           00432         movwf   TRISD
000144 0E00           00433         movlw   b'00000000'
000146 6E96           00434         movwf   TRISE
                      00435 
                      00436         ; clear ports
000148 0E00           00437         movlw   b'00000000'
00014A 6E89           00438         movwf   LATA
00014C 0E00           00439         movlw   b'00000000'
00014E 6E8A           00440         movwf   LATB
000150 0E00           00441         movlw   b'00000000'
000152 6E8B           00442         movwf   LATC
000154 0E00           00443         movlw   b'00000000'
000156 6E8C           00444         movwf   LATD
000158 0E00           00445         movlw   b'00000000'
00015A 6E8D           00446         movwf   LATE
                      00447         
00015C 0E00           00448         movlw   b'00000000'
00015E 6EC2           00449         movwf   ADCON0
                      00450 ;       movlw   b'11111111'
                      00451 ;       movwf   ADCON1
                      00452         
                      00453         ; setting up pwm
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00454 ;       clrf    CM1CONO         ; disable comparators
                      00455 ;       clrf    CM2CONO
                      00456 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00457 ;       movwf   CCP2CON
                      00458 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
                      00459 ;       movwf   CCPR2L
                      00460 ;       
                      00461 ;       bcf     PIR1, TMR2IF
                      00462 ;       bcf     T2CON, T2CKPS1
                      00463 ;       bsf     T2CON, TMR2ON
                      00464         
                      00465         ; initializations
000160 EC?? F???      00466         call    InitLCD
                      00467         ConfigLCD
000164 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000166 EC?? F???          M           call      WR_INS
                          M 
00016A 0E0C               M           movlw     b'00001100'    ; display on/off
00016C EC?? F???          M           call      WR_INS
000170 0E01               M           movlw     b'00000001'    ; Clear ram
000172 EC?? F???          M           call      WR_INS
                      00468         
000176 EC?? F???      00469         call    i2c_common_setup
                      00470         
00017A EC?? F???      00471         call    RTC_INIT
                      00472         ;COLOUR_INIT
00017E EC?? F???      00473         call    INIT_USART
                      00474 
                      00475         ; interrupts
000182 6AD0           00476         clrf    RCON
000184 6AF2           00477         clrf    INTCON
000186 6AF1           00478         clrf    INTCON2
000188 6AF0           00479         clrf    INTCON3
00018A 8ED0           00480         bsf     RCON, IPEN          ; priority mode
00018C 8EF2           00481         bsf     INTCON, GIEH        ; permit global interrupts
00018E 8CF2           00482         bsf     INTCON, GIEL
000190 8AF1           00483         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000192 8AF2           00484         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000194 84F2           00485         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000196 84F1           00486         bsf     INTCON2, TMR0IP     ; set to high priority
000198 86F0           00487         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
00019A 9CF0           00488         bcf     INTCON3, INT1IP     ; keyboard to low priority
                      00489 ;       bsf     INTCON, INT0IE      ; enable high interrupts on rb0 for emergency stop
                      00490 ;       bcf     INTCON, INT0IF      ; clear emergency stop interrupt
                      00491         
                      00492         ; setting up timer to sychronize with 1 second clock intervals
00019C 9ED5           00493         bcf     T0CON, TMR0ON
00019E 9CD5           00494         bcf     T0CON, T08BIT
0001A0 9AD5           00495         bcf     T0CON, T0CS
0001A2 98D5           00496         bcf     T0CON, T0SE
0001A4 96D5           00497         bcf     T0CON, PSA
0001A6 94D5           00498         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
0001A8 82D5           00499         bsf     T0CON, T0PS1
0001AA 80D5           00500         bsf     T0CON, T0PS0
                      00501 
0001AC 6A20           00502         clrf    H_EE
0001AE 6A21           00503         clrf    L_EE
0001B0 6A??           00504         clrf    tens_digit
0001B2 6A??           00505         clrf    ones_digit
                      00506         
0001B4 6A2C           00507         clrf    DETECTION_VAL
0001B6 6A2D           00508         clrf    ESKA
0001B8 6A2E           00509         clrf    ESKA_NOCAP
0001BA 6A2F           00510         clrf    YOP
0001BC 6A30           00511         clrf    YOP_NOCAP
0001BE 6A31           00512         clrf    TOTAL_BOTTLES
0001C0 6A32           00513         clrf    COLLECTIONS_COUNT
                      00514         
0001C2 0EF2           00515         movlw     b'11110010'    ; Set required keypad inputs
0001C4 6E93           00516         movwf     TRISB
                      00517         
0001C6 EC?? F???      00518         call    ClrLCD
                      00519         Display Welcome
  0000                    M         local   loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001CA 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001CC 6EF8               M         movwf   TBLPTRU
0001CE 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001D0 6EF7               M         movwf   TBLPTRH
0001D2 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001D4 6EF6               M         movwf   TBLPTRL
0001D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D8 50F5               M         movf    TABLAT, W
0001DA                    M loop
0001DA EC?? F???          M         call    WR_DATA         ; write to LCD
0001DE 000B               M         tblrd+*                 ; next row in table
0001E0 50F5               M         movf    TABLAT, W
0001E2 E1??               M         bnz     loop
0001E4 EC?? F???      00520         call LCD_L2
                      00521         Display Team
  0000                    M         local   loop
0001E8 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001EA 6EF8               M         movwf   TBLPTRU
0001EC 0E??               M         movlw   high Team       ; Move Table<15:8>
0001EE 6EF7               M         movwf   TBLPTRH
0001F0 0E??               M         movlw   low Team        ; Move Table<7:0>
0001F2 6EF6               M         movwf   TBLPTRL
0001F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001F6 50F5               M         movf    TABLAT, W
0001F8                    M loop
0001F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001FC 000B               M         tblrd+*                 ; next row in table
0001FE 50F5               M         movf    TABLAT, W
000200 E1??               M         bnz     loop
                      00522         
                      00523         Delay50N delayR, 0x28
  0000                    M         local   loop
000202 0E28               M         movlw   0x28
000204 6E1A               M         movwf   delayR
                          M 
000206                    M loop
000206 EC?? F???          M         call    Delay50ms
00020A 2E1A               M         decfsz  delayR
00020C EF?? F???          M         goto    loop
                      00524 
                      00525 ;*******************************************************************************
                      00526 ; standby mode
                      00527 ;*******************************************************************************
000210                00528 STANDBY
000210 0E00           00529         movlw   b'00000000'
000212 6E84           00530         movwf   PORTE
000214 0E00           00531         movlw   b'00000000'
000216 6E80           00532         movwf   PORTA
                      00533         
000218 6838           00534         setf    inStandby       
00021A EC?? F???      00535         call    ClrLCD
                      00536         Display StandBy
  0000                    M         local   loop
00021E 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000220 6EF8               M         movwf   TBLPTRU
000222 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000224 6EF7               M         movwf   TBLPTRH
000226 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000228 6EF6               M         movwf   TBLPTRL
00022A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00022C 50F5               M         movf    TABLAT, W
00022E                    M loop
00022E EC?? F???          M         call    WR_DATA         ; write to LCD
000232 000B               M         tblrd+*                 ; next row in table
000234 50F5               M         movf    TABLAT, W
000236 E1??               M         bnz     loop
000238 EC?? F???      00537         call    LCD_L2
                      00538         Display StandbyInfo
  0000                    M         local   loop
00023C 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
00023E 6EF8               M         movwf   TBLPTRU
000240 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000242 6EF7               M         movwf   TBLPTRH
000244 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000246 6EF6               M         movwf   TBLPTRL
000248 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00024A 50F5               M         movf    TABLAT, W
00024C                    M loop
00024C EC?? F???          M         call    WR_DATA         ; write to LCD
000250 000B               M         tblrd+*                 ; next row in table
000252 50F5               M         movf    TABLAT, W
000254 E1??               M         bnz     loop
                      00539         
000256 0EFF           00540         movlw   0xff
000258 6ED7           00541         movwf   TMR0H
00025A 0EFF           00542         movlw   0xff
00025C 6ED6           00543         movwf   TMR0L
00025E 8ED5           00544         bsf     T0CON, TMR0ON       ; turning on timer
                      00545 
                      00546 
000260                00547 HOLD_STANDBY
000260 EC?? F???      00548         call    READ_KEY_TIME
                      00549 
                      00550         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000264 0E00               M         movlw   key1                ; poll for mode
000266 6210               M         cpfseq  KEY                 ; check this against key press
000268 EF?? F???          M         goto    Exit
                          M 
00026C                    M Next
00026C 6A89               M         clrf    LATA                ; clear pins before proceeding
00026E 6A8A               M         clrf    LATB
000270 6A8B               M         clrf    LATC
000272 6A8C               M         clrf    LATD
000274 EF?? F???          M         goto    COLOUR_TEST
                          M 
000278                    M Exit
000278 0000               M         nop
                      00551         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
00027A 0E01               M         movlw   key2                ; poll for mode
00027C 6210               M         cpfseq  KEY                 ; check this against key press
00027E EF?? F???          M         goto    Exit
                          M 
000282                    M Next
000282 6A89               M         clrf    LATA                ; clear pins before proceeding
000284 6A8A               M         clrf    LATB
000286 6A8B               M         clrf    LATC
000288 6A8C               M         clrf    LATD
00028A EF?? F???          M         goto    STEP_TEST
                          M 
00028E                    M Exit
00028E 0000               M         nop
                      00552         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000290 0E03               M         movlw   keyA                ; poll for mode
000292 6210               M         cpfseq  KEY                 ; check this against key press
000294 EF?? F???          M         goto    Exit
                          M 
000298                    M Next
000298 6A89               M         clrf    LATA                ; clear pins before proceeding
00029A 6A8A               M         clrf    LATB
00029C 6A8B               M         clrf    LATC
00029E 6A8C               M         clrf    LATD
0002A0 EF?? F???          M         goto    EXECUTION
                          M 
0002A4                    M Exit
0002A4 0000               M         nop
                      00553         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002A6 0E07               M         movlw   keyB                ; poll for mode
0002A8 6210               M         cpfseq  KEY                 ; check this against key press
0002AA EF?? F???          M         goto    Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002AE                    M Next
0002AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0002B0 6A8A               M         clrf    LATB
0002B2 6A8B               M         clrf    LATC
0002B4 6A8C               M         clrf    LATD
0002B6 EF?? F???          M         goto    LOG
                          M 
0002BA                    M Exit
0002BA 0000               M         nop
                      00554         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002BC 0E0B               M         movlw   keyC                ; poll for mode
0002BE 6210               M         cpfseq  KEY                 ; check this against key press
0002C0 EF?? F???          M         goto    Exit
                          M 
0002C4                    M Next
0002C4 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C6 6A8A               M         clrf    LATB
0002C8 6A8B               M         clrf    LATC
0002CA 6A8C               M         clrf    LATD
0002CC EF?? F???          M         goto    PERM_LOG
                          M 
0002D0                    M Exit
0002D0 0000               M         nop
                      00555         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002D2 0E0F               M         movlw   keyD                ; poll for mode
0002D4 6210               M         cpfseq  KEY                 ; check this against key press
0002D6 EF?? F???          M         goto    Exit
                          M 
0002DA                    M Next
0002DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0002DC 6A8A               M         clrf    LATB
0002DE 6A8B               M         clrf    LATC
0002E0 6A8C               M         clrf    LATD
0002E2 EF?? F???          M         goto    PC_MODE
                          M 
0002E6                    M Exit
0002E6 0000               M         nop
0002E8 D???           00556         bra     HOLD_STANDBY
                      00557         
                      00558 ;*******************************************************************************
                      00559 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00560 ;*******************************************************************************
                      00561         
0002EA                00562 STEP_TEST
0002EA 6A38           00563         clrf    inStandby
0002EC 6A32           00564         clrf    COLLECTIONS_COUNT
                      00565         Delay50N    delayR, 0x14
  0000                    M         local   loop
0002EE 0E14               M         movlw   0x14
0002F0 6E1A               M         movwf   delayR
                          M 
0002F2                    M loop
0002F2 EC?? F???          M         call    Delay50ms
0002F6 2E1A               M         decfsz  delayR
0002F8 EF?? F???          M         goto    loop
                      00566     
0002FC                00567 ROTATE_90_TEST                      ; actually 45, but dont care to change label
0002FC 0E23           00568         movlw   b'00100011'
0002FE 6E80           00569         movwf   PORTA
000300 EC?? F???      00570         call    delay5ms
000304 EC?? F???      00571         call    delay5ms
000308 EC?? F???      00572         call    delay5ms
00030C EC?? F???      00573         call    delay5ms
000310 EC?? F???      00574         call    delay5ms
000314 EC?? F???      00575         call    delay5ms
000318 EC?? F???      00576         call    delay5ms
00031C EC?? F???      00577         call    delay5ms
000320 2A32           00578         incf    COLLECTIONS_COUNT
                      00579         
000322 0E19           00580         movlw   d'25'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000324 5C32           00581         subwf   COLLECTIONS_COUNT, 0
000326 E0??           00582         bz      STEP_TEST
                      00583 
000328 0E26           00584         movlw   b'00100110'
00032A 6E80           00585         movwf   PORTA
00032C EC?? F???      00586         call    delay5ms
000330 EC?? F???      00587         call    delay5ms
000334 EC?? F???      00588         call    delay5ms
000338 EC?? F???      00589         call    delay5ms
00033C EC?? F???      00590         call    delay5ms
000340 EC?? F???      00591         call    delay5ms
000344 EC?? F???      00592         call    delay5ms
000348 EC?? F???      00593         call    delay5ms
00034C 2A32           00594         incf    COLLECTIONS_COUNT
                      00595         
00034E 0E2C           00596         movlw   b'00101100'
000350 6E80           00597         movwf   PORTA
000352 EC?? F???      00598         call    delay5ms
000356 EC?? F???      00599         call    delay5ms
00035A EC?? F???      00600         call    delay5ms
00035E EC?? F???      00601         call    delay5ms
000362 EC?? F???      00602         call    delay5ms
000366 EC?? F???      00603         call    delay5ms
00036A EC?? F???      00604         call    delay5ms
00036E EC?? F???      00605         call    delay5ms
000372 2A32           00606         incf    COLLECTIONS_COUNT
                      00607 
000374 0E29           00608         movlw   b'00101001'
000376 6E80           00609         movwf   PORTA
000378 EC?? F???      00610         call    delay5ms
00037C EC?? F???      00611         call    delay5ms
000380 EC?? F???      00612         call    delay5ms
000384 EC?? F???      00613         call    delay5ms
000388 EC?? F???      00614         call    delay5ms
00038C EC?? F???      00615         call    delay5ms
000390 EC?? F???      00616         call    delay5ms
000394 EC?? F???      00617         call    delay5ms        
000398 2A32           00618         incf    COLLECTIONS_COUNT
                      00619         
                      00620 ;       movlw   d'8'                        ; 7 ~ 45 degrees
                      00621 ;       cpfseq  COLLECTIONS_COUNT
                      00622 ;       bra     ROTATE_90_TEST
00039A D???           00623         bra     ROTATE_90_TEST
                      00624 
00039C                00625 COLOUR_TEST
00039C EC?? F???      00626         call    ClrLCD
0003A0 6A38           00627         clrf    inStandby
0003A2 0E01           00628         movlw   b'00000001'
0003A4 6E84           00629         movwf   PORTE
                      00630 
0003A6                00631 LOOPING
                      00632         Delay50N delayR, 0x28
  0000                    M         local   loop
0003A6 0E28               M         movlw   0x28
0003A8 6E1A               M         movwf   delayR
                          M 
0003AA                    M loop
0003AA EC?? F???          M         call    Delay50ms
0003AE 2E1A               M         decfsz  delayR
0003B0 EF?? F???          M         goto    loop
                      00633 
                      00634 ;       movlw   d'1000'
                      00635 ;       movwf   TRAY_DELAY
                      00636         
                      00637         ; reading data from arduino 
                      00638         ; expect:   1 for eska cap
                      00639         ;           2 for eska no cap
                      00640         ;           3 for yop cap
                      00641         ;           4 for yop no cap
                      00642         ;           5 for no bottle, get outta here
0003B4 EC?? F???      00643         call    READ_ARDUINO
                      00644         ;movlw  d'2'                    ; testing!!!
0003B8 6E2C           00645         movwf   DETECTION_VAL
0003BA 0F30           00646         addlw   0x30
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003BC EC?? F???      00647         call    WR_DATA
                      00648         Delay50N delayR, 0x28
  0000                    M         local   loop
0003C0 0E28               M         movlw   0x28
0003C2 6E1A               M         movwf   delayR
                          M 
0003C4                    M loop
0003C4 EC?? F???          M         call    Delay50ms
0003C8 2E1A               M         decfsz  delayR
0003CA EF?? F???          M         goto    loop
                      00649         
0003CE D???           00650         bra COLOUR_TEST
                      00651 
                      00652 ;*******************************************************************************
                      00653 ; execution mode
                      00654 ;*******************************************************************************
                      00655         
0003D0                00656 EXECUTION
0003D0 9ED5           00657         bcf     T0CON, TMR0ON       ; turning on timer
0003D2 6A38           00658         clrf    inStandby       
0003D4 EC?? F???      00659         call    ClearEEPROM_21
                      00660         
                      00661         ; save the starting time
0003D8 EC?? F???      00662         call        SAVE_TIME
                      00663                 
                      00664         ; display
0003DC 681E           00665         setf        inExecution
0003DE EC?? F???      00666         call        ClrLCD
                      00667         Display     Exe1
  0000                    M         local   loop
0003E2 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003E4 6EF8               M         movwf   TBLPTRU
0003E6 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003E8 6EF7               M         movwf   TBLPTRH
0003EA 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003EC 6EF6               M         movwf   TBLPTRL
0003EE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003F0 50F5               M         movf    TABLAT, W
0003F2                    M loop
0003F2 EC?? F???          M         call    WR_DATA         ; write to LCD
0003F6 000B               M         tblrd+*                 ; next row in table
0003F8 50F5               M         movf    TABLAT, W
0003FA E1??               M         bnz     loop
0003FC EC?? F???      00668         call        LCD_L2
                      00669         
000400 0EC3           00670         movlw   0xc3
000402 6ED7           00671         movwf   TMR0H
000404 0E25           00672         movlw   0x25
000406 6ED6           00673         movwf   TMR0L
                      00674         
000408 8ED5           00675         bsf         T0CON, TMR0ON           ; turning on timer
                      00676         
                      00677         ; initialize variables
00040A 6A18           00678         clrf        OP_sec
00040C 6A19           00679         clrf        OP_INT
                      00680         
00040E 6A2D           00681         clrf        ESKA
000410 6A2E           00682         clrf        ESKA_NOCAP
000412 6A2F           00683         clrf        YOP
000414 6A30           00684         clrf        YOP_NOCAP
000416 6A31           00685         clrf        TOTAL_BOTTLES
000418 0E01           00686         movlw       d'1'
00041A 6E35           00687         movwf       TRAY_CURRENT
00041C 6A34           00688         clrf        TRAY_DELAY
                      00689         
00041E 0E01           00690         movlw   b'00000001'
000420 6E84           00691         movwf   PORTE
                      00692         
                      00693         ; todo: make sure tray is in position one on reset, add some delay
                      00694         
000422 EF?? F???      00695         goto        COLLECTIONS_STEP
                      00696 
000426                00697 COLLECTIONS_STEP
000426 6A32           00698         clrf        COLLECTIONS_COUNT
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00699 
000428                00700 ROTATE_45
000428 0E23           00701         movlw   b'00100011'
00042A 6E80           00702         movwf   PORTA
00042C EC?? F???      00703         call    delay5ms
000430 EC?? F???      00704         call    delay5ms
000434 EC?? F???      00705         call    delay5ms
000438 EC?? F???      00706         call    delay5ms
00043C EC?? F???      00707         call    delay5ms
000440 EC?? F???      00708         call    delay5ms
000444 EC?? F???      00709         call    delay5ms
000448 EC?? F???      00710         call    delay5ms
00044C 2A32           00711         incf    COLLECTIONS_COUNT
                      00712         
00044E 0E19           00713         movlw   d'25'
000450 5C32           00714         subwf   COLLECTIONS_COUNT, 0
000452 E0??           00715         bz      DETECTIONS
                      00716 
000454 0E26           00717         movlw   b'00100110'
000456 6E80           00718         movwf   PORTA
000458 EC?? F???      00719         call    delay5ms
00045C EC?? F???      00720         call    delay5ms
000460 EC?? F???      00721         call    delay5ms
000464 EC?? F???      00722         call    delay5ms
000468 EC?? F???      00723         call    delay5ms
00046C EC?? F???      00724         call    delay5ms
000470 EC?? F???      00725         call    delay5ms
000474 EC?? F???      00726         call    delay5ms
000478 2A32           00727         incf    COLLECTIONS_COUNT
                      00728         
00047A 0E2C           00729         movlw   b'00101100'
00047C 6E80           00730         movwf   PORTA
00047E EC?? F???      00731         call    delay5ms
000482 EC?? F???      00732         call    delay5ms
000486 EC?? F???      00733         call    delay5ms
00048A EC?? F???      00734         call    delay5ms
00048E EC?? F???      00735         call    delay5ms
000492 EC?? F???      00736         call    delay5ms
000496 EC?? F???      00737         call    delay5ms
00049A EC?? F???      00738         call    delay5ms
00049E 2A32           00739         incf    COLLECTIONS_COUNT
                      00740 
0004A0 0E29           00741         movlw   b'00101001'
0004A2 6E80           00742         movwf   PORTA
0004A4 EC?? F???      00743         call    delay5ms
0004A8 EC?? F???      00744         call    delay5ms
0004AC EC?? F???      00745         call    delay5ms
0004B0 EC?? F???      00746         call    delay5ms
0004B4 EC?? F???      00747         call    delay5ms
0004B8 EC?? F???      00748         call    delay5ms
0004BC EC?? F???      00749         call    delay5ms
0004C0 EC?? F???      00750         call    delay5ms        
0004C4 2A32           00751         incf    COLLECTIONS_COUNT
                      00752         
0004C6 D???           00753         bra     ROTATE_45
                      00754 
0004C8                00755 DETECTIONS
                      00756         Delay50N    delayR, 0x14
  0000                    M         local   loop
0004C8 0E14               M         movlw   0x14
0004CA 6E1A               M         movwf   delayR
                          M 
0004CC                    M loop
0004CC EC?? F???          M         call    Delay50ms
0004D0 2E1A               M         decfsz  delayR
0004D2 EF?? F???          M         goto    loop
                      00757         
                      00758         ; reading data from arduino 
                      00759         ; expect:   1 for eska cap
                      00760         ;           2 for eska no cap
                      00761         ;           3 for yop cap
                      00762         ;           4 for yop no cap
                      00763         ;           5 for no bottle, get outta here
0004D6 EC?? F???      00764         call    READ_ARDUINO
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00765         ;movlw  d'2'                    ; testing!!!
0004DA 6E2C           00766         movwf   DETECTION_VAL
                      00767         
                      00768         ; first check if there was a bottle detected, if go to COLLECTIONS_STEP
0004DC 0E05           00769         movlw   d'5'
0004DE 5C2C           00770         subwf   DETECTION_VAL, 0
0004E0 E0??           00771         bz      COLLECTIONS_STEP
                      00772         
                      00773         ; okay we have a bottle, first increment total count then see what it is
0004E2 2A31           00774         incf    TOTAL_BOTTLES
                      00775         
                      00776         ; yop no cap
0004E4 0E04           00777         movlw   d'4'
0004E6 5C2C           00778         subwf   DETECTION_VAL, 0
0004E8 E0??           00779         bz      INC_YOPNOCAP
                      00780         
                      00781         ; yop with cap
0004EA 0E03           00782         movlw   d'3'
0004EC 5C2C           00783         subwf   DETECTION_VAL, 0
0004EE E0??           00784         bz      INC_YOPCAP
                      00785         
                      00786         ; eska no cap
0004F0 0E02           00787         movlw   d'2'
0004F2 5C2C           00788         subwf   DETECTION_VAL, 0
0004F4 E0??           00789         bz      INC_ESKANOCAP
                      00790         
                      00791         ; eksa with cap
0004F6 0E01           00792         movlw   d'1'
0004F8 5C2C           00793         subwf   DETECTION_VAL, 0
0004FA E0??           00794         bz      INC_ESKACAP
                      00795         
0004FC D???           00796         bra     DETECTIONS
                      00797         
0004FE                00798 INC_YOPNOCAP
0004FE 2A30           00799         incf    YOP_NOCAP
000500 D???           00800         bra     CHECK_DONE
                      00801         
000502                00802 INC_YOPCAP
000502 2A2F           00803         incf    YOP
000504 D???           00804         bra     CHECK_DONE
                      00805         
000506                00806 INC_ESKANOCAP
000506 2A2E           00807         incf    ESKA_NOCAP
000508 D???           00808         bra     CHECK_DONE
                      00809         
00050A                00810 INC_ESKACAP
00050A 2A2D           00811         incf    ESKA
00050C D???           00812         bra     CHECK_DONE
                      00813         
00050E                00814 CHECK_DONE
                      00815         ; Challenging:  logic to figure out when the machine is done sorting 
                      00816         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00817         
                      00818         ; NUMBER: 
                      00819         ; if the total bottle count is 10, then we are done (most basic end condition)
00050E 6A37           00820         clrf    STOP_CONDITION  ; denote regular stop, saved in eeprom as 0
000510 0E09           00821         movlw   d'9'
000512 5C31           00822         subwf   TOTAL_BOTTLES, 0
000514 E0??           00823         bz      EXIT_EXE
                      00824         
                      00825         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00826         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00827         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00828         ; 150s then stop.
000516 3818           00829         swapf   OP_sec, 0       ; 100's seconds
000518 6E17           00830         movwf   temp
00051A 0E0F           00831         movlw   0x0f
00051C 1617           00832         andwf   temp
00051E 0E00           00833         movlw   d'0'
000520 6417           00834         cpfsgt  temp
000522 EF?? F???      00835         goto    COLLECTIONS_STEP; if 100 second, continue to check for 150s then 120s.
                      00836 
                      00837         ; MAX
000526 0E02           00838         movlw   d'2'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000528 6E37           00839         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
00052A C018 F017      00840         movff   OP_sec, temp    ; 10's seconds
00052E 0E0F           00841         movlw   0x0f
000530 1617           00842         andwf   temp
000532 0E05           00843         movlw   d'5'
000534 5C17           00844         subwf   temp, 0
000536 E0??           00845         bz      EXIT_EXE        ; if 150 second, terminate
                      00846         
                      00847         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00848         ; qualified run has at least 4 bottles, with 1 of each different kind
000538 0E03           00849         movlw   d'3'
00053A 6431           00850         cpfsgt  TOTAL_BOTTLES
00053C EF?? F???      00851         goto    COLLECTIONS_STEP
                      00852 
000540 0E00           00853         movlw   d'0'
000542 6430           00854         cpfsgt  YOP_NOCAP, 0
000544 EF?? F???      00855         goto    COLLECTIONS_STEP
                      00856         
000548 0E00           00857         movlw   d'0'
00054A 642F           00858         cpfsgt  YOP, 0
00054C EF?? F???      00859         goto    COLLECTIONS_STEP
                      00860         
000550 0E00           00861         movlw   d'0'
000552 642E           00862         cpfsgt  ESKA_NOCAP, 0
000554 EF?? F???      00863         goto    COLLECTIONS_STEP
                      00864         
000558 0E00           00865         movlw   d'0'
00055A 642D           00866         cpfsgt  ESKA, 0
00055C EF?? F???      00867         goto    COLLECTIONS_STEP
                      00868         
                      00869         ; finally, if we get here then consider the termination optimized.
000560 0E03           00870         movlw   d'3'
000562 6E37           00871         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
000564 EF?? F???      00872         goto    EXIT_EXE
                      00873         
000568                00874 EXIT_EXE
                      00875         ; stop timer and save the execution time to eeprom
000568 9ED5           00876         bcf         T0CON, TMR0ON
00056A EC?? F???      00877         call        SAVE_EXE_TIME
                      00878                 
                      00879         ; Clear inExecution flag to stop '*' interrupts
00056E 6A1E           00880         clrf        inExecution
                      00881         
000570 EC?? F???      00882         call        ClrLCD
                      00883         Display     SAVE
  0000                    M         local   loop
000574 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000576 6EF8               M         movwf   TBLPTRU
000578 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00057A 6EF7               M         movwf   TBLPTRH
00057C 0E??               M         movlw   low SAVE        ; Move Table<7:0>
00057E 6EF6               M         movwf   TBLPTRL
000580 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000582 50F5               M         movf    TABLAT, W
000584                    M loop
000584 EC?? F???          M         call    WR_DATA         ; write to LCD
000588 000B               M         tblrd+*                 ; next row in table
00058A 50F5               M         movf    TABLAT, W
00058C E1??               M         bnz     loop
00058E EC?? F???      00884         call        SaveData
000592 EF?? F???      00885         goto        LOG
                      00886 
                      00887 ;*******************************************************************************
                      00888 ; sorting statistics log mode
                      00889 ;*******************************************************************************
                      00890         
000596                00891 LOG
000596 6A38           00892         clrf    inStandby
000598 EC?? F???      00893         call    ClrLCD
                      00894         Display Log1
  0000                    M         local   loop
00059C 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00059E 6EF8               M         movwf   TBLPTRU
0005A0 0E??               M         movlw   high Log1       ; Move Table<15:8>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005A2 6EF7               M         movwf   TBLPTRH
0005A4 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005A6 6EF6               M         movwf   TBLPTRL
0005A8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005AA 50F5               M         movf    TABLAT, W
0005AC                    M loop
0005AC EC?? F???          M         call    WR_DATA         ; write to LCD
0005B0 000B               M         tblrd+*                 ; next row in table
0005B2 50F5               M         movf    TABLAT, W
0005B4 E1??               M         bnz     loop
                      00895 
                      00896         ; display most recent run data
0005B6 0E0A           00897         movlw   d'10'
0005B8 6E21           00898         movwf   L_EE
0005BA EC?? F???      00899         call    DisplayExeTime
                      00900 
0005BE EC?? F???      00901         call    LCD_L2
0005C2 0E0D           00902         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
0005C4 6E21           00903         movwf   L_EE
0005C6 EC?? F???      00904         call    DispOpSort
                      00905 
0005CA                00906 HOLD_LOG
0005CA EC?? F???      00907         call    READ_KEY
                      00908         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0005CE 0E07               M         movlw   keyB                ; poll for mode
0005D0 6210               M         cpfseq  KEY                 ; check this against key press
0005D2 EF?? F???          M         goto    Exit
                          M 
0005D6                    M Next
0005D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0005D8 6A8A               M         clrf    LATB
0005DA 6A8B               M         clrf    LATC
0005DC 6A8C               M         clrf    LATD
0005DE EF?? F???          M         goto    LOG_INFO
                          M 
0005E2                    M Exit
0005E2 0000               M         nop
                      00909         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005E4 0E0D               M         movlw   key0                ; poll for mode
0005E6 6210               M         cpfseq  KEY                 ; check this against key press
0005E8 EF?? F???          M         goto    Exit
                          M 
0005EC                    M Next
0005EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0005EE 6A8A               M         clrf    LATB
0005F0 6A8B               M         clrf    LATC
0005F2 6A8C               M         clrf    LATD
0005F4 EF?? F???          M         goto    STANDBY
                          M 
0005F8                    M Exit
0005F8 0000               M         nop
0005FA D???           00910         bra     HOLD_LOG
                      00911 
0005FC                00912 LOG_INFO
0005FC EC?? F???      00913         call    ClrLCD
000600 6A21           00914         clrf    L_EE
000602 EC?? F???      00915         call    DispOpRTC
                      00916         
000606 EC?? F???      00917         call    LCD_L2
                      00918         Display LogInfo2
  0000                    M         local   loop
00060A 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00060C 6EF8               M         movwf   TBLPTRU
00060E 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000610 6EF7               M         movwf   TBLPTRH
000612 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000614 6EF6               M         movwf   TBLPTRL
000616 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000618 50F5               M         movf    TABLAT, W
00061A                    M loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00061A EC?? F???          M         call    WR_DATA         ; write to LCD
00061E 000B               M         tblrd+*                 ; next row in table
000620 50F5               M         movf    TABLAT, W
000622 E1??               M         bnz     loop
000624 6A20           00919         clrf    H_EE
000626 6A21           00920         clrf    L_EE
000628                00921 HOLD_LOG_INFO
000628 EC?? F???      00922         call    READ_KEY
                      00923         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
00062C 0E0D               M         movlw   key0                ; poll for mode
00062E 6210               M         cpfseq  KEY                 ; check this against key press
000630 EF?? F???          M         goto    Exit
                          M 
000634                    M Next
000634 6A89               M         clrf    LATA                ; clear pins before proceeding
000636 6A8A               M         clrf    LATB
000638 6A8B               M         clrf    LATC
00063A 6A8C               M         clrf    LATD
00063C EF?? F???          M         goto    LOG
                          M 
000640                    M Exit
000640 0000               M         nop
000642 D???           00924         bra     HOLD_LOG
                      00925         
                      00926 ;*******************************************************************************
                      00927 ; permanent logs
                      00928 ;*******************************************************************************
                      00929 
000644                00930 PERM_LOG
000644 6A38           00931         clrf    inStandby
000646 EC?? F???      00932         call    ClrLCD
                      00933         Display PermLog1
  0000                    M         local   loop
00064A 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00064C 6EF8               M         movwf   TBLPTRU
00064E 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000650 6EF7               M         movwf   TBLPTRH
000652 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000654 6EF6               M         movwf   TBLPTRL
000656 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000658 50F5               M         movf    TABLAT, W
00065A                    M loop
00065A EC?? F???          M         call    WR_DATA         ; write to LCD
00065E 000B               M         tblrd+*                 ; next row in table
000660 50F5               M         movf    TABLAT, W
000662 E1??               M         bnz     loop
000664 EC?? F???      00934         call    LCD_L2
                      00935         Display PermLog2
  0000                    M         local   loop
000668 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00066A 6EF8               M         movwf   TBLPTRU
00066C 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
00066E 6EF7               M         movwf   TBLPTRH
000670 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000672 6EF6               M         movwf   TBLPTRL
000674 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000676 50F5               M         movf    TABLAT, W
000678                    M loop
000678 EC?? F???          M         call    WR_DATA         ; write to LCD
00067C 000B               M         tblrd+*                 ; next row in table
00067E 50F5               M         movf    TABLAT, W
000680 E1??               M         bnz     loop
                      00936         
000682                00937 HOLD_PERM_LOG
000682 EC?? F???      00938         call    READ_KEY
                      00939         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000686 0E0D               M         movlw   key0                ; poll for mode
000688 6210               M         cpfseq  KEY                 ; check this against key press
00068A EF?? F???          M         goto    Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00068E                    M Next
00068E 6A89               M         clrf    LATA                ; clear pins before proceeding
000690 6A8A               M         clrf    LATB
000692 6A8B               M         clrf    LATC
000694 6A8C               M         clrf    LATD
000696 EF?? F???          M         goto    STANDBY
                          M 
00069A                    M Exit
00069A 0000               M         nop
                      00940         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00069C 0E00               M         movlw   key1                ; poll for mode
00069E 6210               M         cpfseq  KEY                 ; check this against key press
0006A0 EF?? F???          M         goto    Exit
                          M 
0006A4                    M Next
0006A4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006A6 6A8A               M         clrf    LATB
0006A8 6A8B               M         clrf    LATC
0006AA 6A8C               M         clrf    LATD
0006AC EF?? F???          M         goto    PLOG
                          M 
0006B0                    M Exit
0006B0 0000               M         nop
                      00941         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0006B2 0E01               M         movlw   key2                ; poll for mode
0006B4 6210               M         cpfseq  KEY                 ; check this against key press
0006B6 EF?? F???          M         goto    Exit
                          M 
0006BA                    M Next
0006BA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006BC 6A8A               M         clrf    LATB
0006BE 6A8B               M         clrf    LATC
0006C0 6A8C               M         clrf    LATD
0006C2 EF?? F???          M         goto    PLOG
                          M 
0006C6                    M Exit
0006C6 0000               M         nop
                      00942         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0006C8 0E02               M         movlw   key3                ; poll for mode
0006CA 6210               M         cpfseq  KEY                 ; check this against key press
0006CC EF?? F???          M         goto    Exit
                          M 
0006D0                    M Next
0006D0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D2 6A8A               M         clrf    LATB
0006D4 6A8B               M         clrf    LATC
0006D6 6A8C               M         clrf    LATD
0006D8 EF?? F???          M         goto    PLOG
                          M 
0006DC                    M Exit
0006DC 0000               M         nop
                      00943         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006DE 0E04               M         movlw   key4                ; poll for mode
0006E0 6210               M         cpfseq  KEY                 ; check this against key press
0006E2 EF?? F???          M         goto    Exit
                          M 
0006E6                    M Next
0006E6 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E8 6A8A               M         clrf    LATB
0006EA 6A8B               M         clrf    LATC
0006EC 6A8C               M         clrf    LATD
0006EE EF?? F???          M         goto    PLOG
                          M 
0006F2                    M Exit
0006F2 0000               M         nop
                      00944         ChangeMode  key5, PLOG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
0006F4 0E05               M         movlw   key5                ; poll for mode
0006F6 6210               M         cpfseq  KEY                 ; check this against key press
0006F8 EF?? F???          M         goto    Exit
                          M 
0006FC                    M Next
0006FC 6A89               M         clrf    LATA                ; clear pins before proceeding
0006FE 6A8A               M         clrf    LATB
000700 6A8B               M         clrf    LATC
000702 6A8C               M         clrf    LATD
000704 EF?? F???          M         goto    PLOG
                          M 
000708                    M Exit
000708 0000               M         nop
                      00945         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
00070A 0E06               M         movlw   key6                ; poll for mode
00070C 6210               M         cpfseq  KEY                 ; check this against key press
00070E EF?? F???          M         goto    Exit
                          M 
000712                    M Next
000712 6A89               M         clrf    LATA                ; clear pins before proceeding
000714 6A8A               M         clrf    LATB
000716 6A8B               M         clrf    LATC
000718 6A8C               M         clrf    LATD
00071A EF?? F???          M         goto    PLOG
                          M 
00071E                    M Exit
00071E 0000               M         nop
                      00946         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000720 0E08               M         movlw   key7                ; poll for mode
000722 6210               M         cpfseq  KEY                 ; check this against key press
000724 EF?? F???          M         goto    Exit
                          M 
000728                    M Next
000728 6A89               M         clrf    LATA                ; clear pins before proceeding
00072A 6A8A               M         clrf    LATB
00072C 6A8B               M         clrf    LATC
00072E 6A8C               M         clrf    LATD
000730 EF?? F???          M         goto    PLOG
                          M 
000734                    M Exit
000734 0000               M         nop
                      00947         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000736 0E09               M         movlw   key8                ; poll for mode
000738 6210               M         cpfseq  KEY                 ; check this against key press
00073A EF?? F???          M         goto    Exit
                          M 
00073E                    M Next
00073E 6A89               M         clrf    LATA                ; clear pins before proceeding
000740 6A8A               M         clrf    LATB
000742 6A8B               M         clrf    LATC
000744 6A8C               M         clrf    LATD
000746 EF?? F???          M         goto    PLOG
                          M 
00074A                    M Exit
00074A 0000               M         nop
                      00948         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
00074C 0E0A               M         movlw   key9                ; poll for mode
00074E 6210               M         cpfseq  KEY                 ; check this against key press
000750 EF?? F???          M         goto    Exit
                          M 
000754                    M Next
000754 6A89               M         clrf    LATA                ; clear pins before proceeding
000756 6A8A               M         clrf    LATB
000758 6A8B               M         clrf    LATC
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00075A 6A8C               M         clrf    LATD
00075C EF?? F???          M         goto    PLOG
                          M 
000760                    M Exit
000760 0000               M         nop
000762 D???           00949         bra HOLD_PERM_LOG
                      00950         
000764                00951 PLOG
000764 EC?? F???      00952         call    ClrLCD
                      00953         Display PermLog1
  0000                    M         local   loop
000768 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00076A 6EF8               M         movwf   TBLPTRU
00076C 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00076E 6EF7               M         movwf   TBLPTRH
000770 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000772 6EF6               M         movwf   TBLPTRL
000774 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000776 50F5               M         movf    TABLAT, W
000778                    M loop
000778 EC?? F???          M         call    WR_DATA         ; write to LCD
00077C 000B               M         tblrd+*                 ; next row in table
00077E 50F5               M         movf    TABLAT, W
000780 E1??               M         bnz     loop
                      00954         
                      00955         ; find the key press value
000782 C010 FFE8      00956         movff   KEY, WREG
000786 2AE8           00957         incf    WREG        ; W = KEY+1
000788 6E17           00958         movwf   temp
                      00959         
00078A 42E8           00960         rrncf   WREG        ; division by 4
00078C 9EE8           00961         bcf     WREG, 7     ; clear last bit, overflow from rotate
00078E 42E8           00962         rrncf   WREG        
000790 9EE8           00963         bcf     WREG, 7
000792 5E17           00964         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000794 C017 FFE8      00965         movff   temp, WREG
000798 C017 F011      00966         movff   temp, temp_KEY
00079C 0D15           00967         mullw   d'21'       ; indexed as mutliples of 21
                      00968 
00079E                00969 displayNum
00079E C011 FFE8      00970         movff   temp_KEY, WREG
0007A2 0F30           00971         addlw   0x30
0007A4 EC?? F???      00972         call    WR_DATA
0007A8 0E3A           00973         movlw   ":"
0007AA EC?? F???      00974         call    WR_DATA
0007AE 0E20           00975         movlw   " "
0007B0 EC?? F???      00976         call    WR_DATA
                      00977         
0007B4 CFF3 F021      00978         movff   PRODL, L_EE
0007B8 0E00           00979         movlw   d'0'
0007BA 2621           00980         addwf   L_EE
                      00981         READEE  OP_sec, H_EE, L_EE
0007BC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007C0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007C4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007C6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007C8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007CA CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0007CE 2A21           00982         incf    L_EE
                      00983         READEE  OP_INT, H_EE, L_EE
0007D0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007D4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007D8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007DA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007DC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007DE CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0007E2 2A21           00984         incf    L_EE
0007E4 EC?? F???      00985         call    DisplayExeTime
0007E8 CFF3 F021      00986         movff   PRODL, L_EE
                      00987         
                      00988         ; reset eeprom to beginning
0007EC EC?? F???      00989         call    LCD_L2
0007F0 CFF3 F021      00990         movff   PRODL, L_EE
0007F4 EC?? F???      00991         call    DispOpRTC
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00992         
0007F8                00993 HOLD_PLOG
0007F8 EC?? F???      00994         call    READ_KEY
                      00995         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0007FC 0E03               M         movlw   keyA                ; poll for mode
0007FE 6210               M         cpfseq  KEY                 ; check this against key press
000800 EF?? F???          M         goto    Exit
                          M 
000804                    M Next
000804 6A89               M         clrf    LATA                ; clear pins before proceeding
000806 6A8A               M         clrf    LATB
000808 6A8B               M         clrf    LATC
00080A 6A8C               M         clrf    LATD
00080C EF?? F???          M         goto    PLOG_DETAILS
                          M 
000810                    M Exit
000810 0000               M         nop
                      00996         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000812 0E0D               M         movlw   key0                ; poll for mode
000814 6210               M         cpfseq  KEY                 ; check this against key press
000816 EF?? F???          M         goto    Exit
                          M 
00081A                    M Next
00081A 6A89               M         clrf    LATA                ; clear pins before proceeding
00081C 6A8A               M         clrf    LATB
00081E 6A8B               M         clrf    LATC
000820 6A8C               M         clrf    LATD
000822 EF?? F???          M         goto    PERM_LOG
                          M 
000826                    M Exit
000826 0000               M         nop
000828 D???           00997         bra HOLD_PLOG
                      00998         
00082A                00999 PLOG_DETAILS
00082A EC?? F???      01000         call    ClrLCD
                      01001         
                      01002         Display Log1
  0000                    M         local   loop
00082E 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000830 6EF8               M         movwf   TBLPTRU
000832 0E??               M         movlw   high Log1       ; Move Table<15:8>
000834 6EF7               M         movwf   TBLPTRH
000836 0E??               M         movlw   low Log1        ; Move Table<7:0>
000838 6EF6               M         movwf   TBLPTRL
00083A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00083C 50F5               M         movf    TABLAT, W
00083E                    M loop
00083E EC?? F???          M         call    WR_DATA         ; write to LCD
000842 000B               M         tblrd+*                 ; next row in table
000844 50F5               M         movf    TABLAT, W
000846 E1??               M         bnz     loop
000848 EC?? F???      01003         call    DisplayExeTime
                      01004         
00084C EC?? F???      01005         call    LCD_L2
000850 EC?? F???      01006         call    DispOpSort
                      01007         
000854                01008 HOLD_PLOG_DETAILS
000854 EC?? F???      01009         call    READ_KEY
                      01010         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000858 0E0D               M         movlw   key0                ; poll for mode
00085A 6210               M         cpfseq  KEY                 ; check this against key press
00085C EF?? F???          M         goto    Exit
                          M 
000860                    M Next
000860 6A89               M         clrf    LATA                ; clear pins before proceeding
000862 6A8A               M         clrf    LATB
000864 6A8B               M         clrf    LATC
000866 6A8C               M         clrf    LATD
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000868 EF?? F???          M         goto    PERM_LOG
                          M 
00086C                    M Exit
00086C 0000               M         nop
00086E D???           01011         bra HOLD_PLOG_DETAILS
                      01012         
                      01013 ;*******************************************************************************
                      01014 ; pc interface
                      01015 ;*******************************************************************************
                      01016 
000870                01017 PC_MODE
000870 6A38           01018         clrf    inStandby
000872 EC?? F???      01019         call    ClrLCD
                      01020         Display PC1
  0000                    M         local   loop
000876 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000878 6EF8               M         movwf   TBLPTRU
00087A 0E??               M         movlw   high PC1        ; Move Table<15:8>
00087C 6EF7               M         movwf   TBLPTRH
00087E 0E??               M         movlw   low PC1         ; Move Table<7:0>
000880 6EF6               M         movwf   TBLPTRL
000882 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000884 50F5               M         movf    TABLAT, W
000886                    M loop
000886 EC?? F???          M         call    WR_DATA         ; write to LCD
00088A 000B               M         tblrd+*                 ; next row in table
00088C 50F5               M         movf    TABLAT, W
00088E E1??               M         bnz     loop
000890 EC?? F???      01021         call    LCD_L2
                      01022         Display PC2
  0000                    M         local   loop
000894 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000896 6EF8               M         movwf   TBLPTRU
000898 0E??               M         movlw   high PC2        ; Move Table<15:8>
00089A 6EF7               M         movwf   TBLPTRH
00089C 0E??               M         movlw   low PC2         ; Move Table<7:0>
00089E 6EF6               M         movwf   TBLPTRL
0008A0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008A2 50F5               M         movf    TABLAT, W
0008A4                    M loop
0008A4 EC?? F???          M         call    WR_DATA         ; write to LCD
0008A8 000B               M         tblrd+*                 ; next row in table
0008AA 50F5               M         movf    TABLAT, W
0008AC E1??               M         bnz     loop
0008AE CFF9 F029      01023         movff   PCL, PC_PCL
0008B2 CFFA F02A      01024         movff   PCLATH, PC_PCLATH
0008B6 CFFB F02B      01025         movff   PCLATU, PC_PCLATU
                      01026         
0008BA                01027 HOLD_PC
0008BA EC?? F???      01028         call    READ_KEY
                      01029         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008BE 0E0D               M         movlw   key0                ; poll for mode
0008C0 6210               M         cpfseq  KEY                 ; check this against key press
0008C2 EF?? F???          M         goto    Exit
                          M 
0008C6                    M Next
0008C6 6A89               M         clrf    LATA                ; clear pins before proceeding
0008C8 6A8A               M         clrf    LATB
0008CA 6A8B               M         clrf    LATC
0008CC 6A8C               M         clrf    LATD
0008CE EF?? F???          M         goto    STANDBY
                          M 
0008D2                    M Exit
0008D2 0000               M         nop
                      01030         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008D4 0E0E               M         movlw   keyH                ; poll for mode
0008D6 6210               M         cpfseq  KEY                 ; check this against key press
0008D8 EF?? F???          M         goto    Exit
                          M 
0008DC                    M Next
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008DC 6A89               M         clrf    LATA                ; clear pins before proceeding
0008DE 6A8A               M         clrf    LATB
0008E0 6A8B               M         clrf    LATC
0008E2 6A8C               M         clrf    LATD
0008E4 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008E8                    M Exit
0008E8 0000               M         nop
0008EA D???           01031         bra     HOLD_PC
                      01032 
0008EC                01033 PC_TRANSFER
0008EC 6828           01034         setf    transferring
0008EE EC?? F???      01035         call    ClrLCD
                      01036         Display PCTransfer
  0000                    M         local   loop
0008F2 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0008F4 6EF8               M         movwf   TBLPTRU
0008F6 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008F8 6EF7               M         movwf   TBLPTRH
0008FA 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008FC 6EF6               M         movwf   TBLPTRL
0008FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000900 50F5               M         movf    TABLAT, W
000902                    M loop
000902 EC?? F???          M         call    WR_DATA         ; write to LCD
000906 000B               M         tblrd+*                 ; next row in table
000908 50F5               M         movf    TABLAT, W
00090A E1??               M         bnz     loop
00090C EC?? F???      01037         call    DataUSART
000910 6A28           01038         clrf    transferring
000912 EF?? F???      01039         goto    STANDBY
                      01040         
                      01041 ;*******************************************************************************
                      01042 ; subroutines
                      01043 ;*******************************************************************************
                      01044 
000916                01045 SaveData
000916 C02D FFE8      01046         movff       ESKA, WREG
00091A 0F30           01047         addlw       0x30
                      01048         WriteEE     WREG, H_EE, L_EE
00091C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000920 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000924 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000928 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00092A D???               M         bra     $-2
                          M 
00092C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00092E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000930 84A6               M         bsf     EECON1, WREN        ; enable write
000932 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000934 98A1               M         bcf     PIR2, EEIF
                          M 
000936 0E55               M         movlw   0x55
000938 6EA7               M         movwf   EECON2              ; write 55h
00093A 0EAA               M         movlw   0xaa
00093C 6EA7               M         movwf   EECON2              ; write 0xaa
00093E 82A6               M         bsf     EECON1, WR          ; begin write
000940 B2A6               M         btfsc   EECON1, WR
000942 D???               M         bra     $-2
                          M 
000944 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000946 94A6               M         bcf     EECON1, WREN        ; disable writes
000948 2A21           01049         incf        L_EE
                      01050         
00094A C02E FFE8      01051         movff       ESKA_NOCAP, WREG
00094E 0F30           01052         addlw       0x30
                      01053         WriteEE     WREG, H_EE, L_EE
000950 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000954 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000958 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00095C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00095E D???               M         bra     $-2
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000960 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000962 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000964 84A6               M         bsf     EECON1, WREN        ; enable write
000966 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000968 98A1               M         bcf     PIR2, EEIF
                          M 
00096A 0E55               M         movlw   0x55
00096C 6EA7               M         movwf   EECON2              ; write 55h
00096E 0EAA               M         movlw   0xaa
000970 6EA7               M         movwf   EECON2              ; write 0xaa
000972 82A6               M         bsf     EECON1, WR          ; begin write
000974 B2A6               M         btfsc   EECON1, WR
000976 D???               M         bra     $-2
                          M 
000978 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00097A 94A6               M         bcf     EECON1, WREN        ; disable writes
00097C 2A21           01054         incf        L_EE
                      01055         
00097E C02F FFE8      01056         movff       YOP, WREG
000982 0F30           01057         addlw       0x30
                      01058         WriteEE     WREG, H_EE, L_EE
000984 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000988 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00098C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000990 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000992 D???               M         bra     $-2
                          M 
000994 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000996 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000998 84A6               M         bsf     EECON1, WREN        ; enable write
00099A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00099C 98A1               M         bcf     PIR2, EEIF
                          M 
00099E 0E55               M         movlw   0x55
0009A0 6EA7               M         movwf   EECON2              ; write 55h
0009A2 0EAA               M         movlw   0xaa
0009A4 6EA7               M         movwf   EECON2              ; write 0xaa
0009A6 82A6               M         bsf     EECON1, WR          ; begin write
0009A8 B2A6               M         btfsc   EECON1, WR
0009AA D???               M         bra     $-2
                          M 
0009AC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009AE 94A6               M         bcf     EECON1, WREN        ; disable writes
0009B0 2A21           01059         incf        L_EE
                      01060         
0009B2 C030 FFE8      01061         movff       YOP_NOCAP, WREG
0009B6 0F30           01062         addlw       0x30
                      01063         WriteEE     WREG, H_EE, L_EE
0009B8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009BC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009C0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009C4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009C6 D???               M         bra     $-2
                          M 
0009C8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009CA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009CC 84A6               M         bsf     EECON1, WREN        ; enable write
0009CE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009D0 98A1               M         bcf     PIR2, EEIF
                          M 
0009D2 0E55               M         movlw   0x55
0009D4 6EA7               M         movwf   EECON2              ; write 55h
0009D6 0EAA               M         movlw   0xaa
0009D8 6EA7               M         movwf   EECON2              ; write 0xaa
0009DA 82A6               M         bsf     EECON1, WR          ; begin write
0009DC B2A6               M         btfsc   EECON1, WR
0009DE D???               M         bra     $-2
                          M 
0009E0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009E2 94A6               M         bcf     EECON1, WREN        ; disable writes
0009E4 2A21           01064         incf        L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01065         
0009E6 C037 FFE8      01066         movff       STOP_CONDITION, WREG
0009EA 0F30           01067         addlw       0x30
                      01068         WriteEE     WREG, H_EE, L_EE
0009EC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009F0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009F4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009F8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009FA D???               M         bra     $-2
                          M 
0009FC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009FE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A00 84A6               M         bsf     EECON1, WREN        ; enable write
000A02 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A04 98A1               M         bcf     PIR2, EEIF
                          M 
000A06 0E55               M         movlw   0x55
000A08 6EA7               M         movwf   EECON2              ; write 55h
000A0A 0EAA               M         movlw   0xaa
000A0C 6EA7               M         movwf   EECON2              ; write 0xaa
000A0E 82A6               M         bsf     EECON1, WR          ; begin write
000A10 B2A6               M         btfsc   EECON1, WR
000A12 D???               M         bra     $-2
                          M 
000A14 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A16 94A6               M         bcf     EECON1, WREN        ; disable writes
000A18 2A21           01069         incf        L_EE
                      01070         
000A1A 0E00           01071         movlw       d'0'
000A1C 6E20           01072         movwf       H_EE
000A1E 0EA8           01073         movlw       d'168'              ; take d'168' as last
000A20 6E21           01074         movwf       L_EE
000A22 0E00           01075         movlw       d'0'
000A24 6E23           01076         movwf       tempH_EE
000A26 0EDC           01077         movlw       d'220'              ; temp for low constant
000A28 6E24           01078         movwf       tempL_EE
                      01079         
000A2A 6A16           01080         clrf        counter2
000A2C 6A15           01081         clrf        counter
                      01082         
000A2E                01083 ShiftLoop
000A2E 2A15           01084         incf            counter
                      01085         READEE          REG_EE, H_EE, L_EE
000A30 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A34 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000A38 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A3A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A3C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A3E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000A42 0E15           01086         movlw           d'21'
000A44 2621           01087         addwf           L_EE
                      01088         WriteEE         REG_EE, H_EE, L_EE
000A46 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A4A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A4E C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000A52 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A54 D???               M         bra     $-2
                          M 
000A56 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A58 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A5A 84A6               M         bsf     EECON1, WREN        ; enable write
000A5C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A5E 98A1               M         bcf     PIR2, EEIF
                          M 
000A60 0E55               M         movlw   0x55
000A62 6EA7               M         movwf   EECON2              ; write 55h
000A64 0EAA               M         movlw   0xaa
000A66 6EA7               M         movwf   EECON2              ; write 0xaa
000A68 82A6               M         bsf     EECON1, WR          ; begin write
000A6A B2A6               M         btfsc   EECON1, WR
000A6C D???               M         bra     $-2
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A6E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A70 94A6               M         bcf     EECON1, WREN        ; disable writes
000A72 0E14           01089         movlw           d'20'
000A74 5E21           01090         subwf           L_EE
000A76 0E15           01091         movlw           d'21'
000A78 6215           01092         cpfseq          counter
000A7A EF?? F???      01093         goto            ShiftLoop
                      01094         
                      01095         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A7E 0E2A           01096         movlw           d'42'
000A80 5E21           01097         subwf           L_EE
000A82 0EDC           01098         movlw           d'220'
000A84 6E24           01099         movwf           tempL_EE
000A86 6A15           01100         clrf            counter
000A88 2A16           01101         incf            counter2
000A8A 0E09           01102         movlw           d'9'
000A8C 6216           01103         cpfseq          counter2        ; Skip if 9 shifts were made
000A8E EF?? F???      01104         goto            ShiftLoop
                      01105 
000A92 0012           01106         return
                      01107         
000A94                01108 RTC_INIT
                      01109         ; set sda and scl to high
000A94 9882           01110         bcf     PORTC, 4
000A96 9682           01111         bcf     PORTC, 3
000A98 8894           01112         bsf     TRISC, 4
000A9A 8694           01113         bsf     TRISC, 3
                      01114         
000A9C EC?? F???      01115         call    INIT_RTC
                      01116         
                      01117         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000AA0 0012           01118 return
                      01119         
000AA2                01120 SAVE_TIME
                      01121         rtc_read    0x02        ; hours     ; need to call this twice idk y
000AA2 0E02               M     movlw   0x02
000AA4 6E??               M     movwf   regaddress
000AA6 EC?? F???          M     call    read_rtc
000AAA C??? FFE8          M     movff   datachar, WREG
000AAE EC?? F???          M     call    rtc_convert
                      01122         rtc_read    0x02        ; hours
000AB2 0E02               M     movlw   0x02
000AB4 6E??               M     movwf   regaddress
000AB6 EC?? F???          M     call    read_rtc
000ABA C??? FFE8          M     movff   datachar, WREG
000ABE EC?? F???          M     call    rtc_convert
000AC2 EC?? F???      01123         call    WriteEE_RTC
                      01124         rtc_read    0x01        ; minutes
000AC6 0E01               M     movlw   0x01
000AC8 6E??               M     movwf   regaddress
000ACA EC?? F???          M     call    read_rtc
000ACE C??? FFE8          M     movff   datachar, WREG
000AD2 EC?? F???          M     call    rtc_convert
000AD6 EC?? F???      01125         call    WriteEE_RTC
                      01126         rtc_read    0x06        ; years
000ADA 0E06               M     movlw   0x06
000ADC 6E??               M     movwf   regaddress
000ADE EC?? F???          M     call    read_rtc
000AE2 C??? FFE8          M     movff   datachar, WREG
000AE6 EC?? F???          M     call    rtc_convert
000AEA EC?? F???      01127         call    WriteEE_RTC
                      01128         rtc_read    0x05        ; months
000AEE 0E05               M     movlw   0x05
000AF0 6E??               M     movwf   regaddress
000AF2 EC?? F???          M     call    read_rtc
000AF6 C??? FFE8          M     movff   datachar, WREG
000AFA EC?? F???          M     call    rtc_convert
000AFE EC?? F???      01129         call    WriteEE_RTC
                      01130         rtc_read    0x04        ; days
000B02 0E04               M     movlw   0x04
000B04 6E??               M     movwf   regaddress
000B06 EC?? F???          M     call    read_rtc
000B0A C??? FFE8          M     movff   datachar, WREG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B0E EC?? F???          M     call    rtc_convert
000B12 EC?? F???      01131         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000B16 0012           01132 return
                      01133         
000B18                01134 SAVE_EXE_TIME
                      01135         
Warning[202]: Argument out of range.  Least significant bits used.
000B18 3818           01136         swapf   OP_sec, WREG    ; 100's seconds
000B1A 6E17           01137         movwf   temp
000B1C 0E0F           01138         movlw   0x0f
000B1E 1617           01139         andwf   temp
000B20 C017 FFE8      01140         movff   temp, WREG
000B24 0F30           01141         addlw   0x30    
                      01142         WriteEE WREG, H_EE, L_EE
000B26 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B2A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B2E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B32 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B34 D???               M         bra     $-2
                          M 
000B36 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B38 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B3A 84A6               M         bsf     EECON1, WREN        ; enable write
000B3C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B3E 98A1               M         bcf     PIR2, EEIF
                          M 
000B40 0E55               M         movlw   0x55
000B42 6EA7               M         movwf   EECON2              ; write 55h
000B44 0EAA               M         movlw   0xaa
000B46 6EA7               M         movwf   EECON2              ; write 0xaa
000B48 82A6               M         bsf     EECON1, WR          ; begin write
000B4A B2A6               M         btfsc   EECON1, WR
000B4C D???               M         bra     $-2
                          M 
000B4E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B50 94A6               M         bcf     EECON1, WREN        ; disable writes
000B52 2A21           01143         incf    L_EE
                      01144         
000B54 C018 F017      01145         movff   OP_sec, temp    ; 10's seconds
000B58 0E0F           01146         movlw   0x0f
000B5A 1617           01147         andwf   temp            ; Temp = lower nibble of Op_sec
000B5C C017 FFE8      01148         movff   temp, WREG      ; W = Temp
000B60 0F30           01149         addlw   0x30            ; Convert to ASCII
                      01150         WriteEE WREG, H_EE, L_EE
000B62 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B66 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B6A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B6E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B70 D???               M         bra     $-2
                          M 
000B72 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B74 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B76 84A6               M         bsf     EECON1, WREN        ; enable write
000B78 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B7A 98A1               M         bcf     PIR2, EEIF
                          M 
000B7C 0E55               M         movlw   0x55
000B7E 6EA7               M         movwf   EECON2              ; write 55h
000B80 0EAA               M         movlw   0xaa
000B82 6EA7               M         movwf   EECON2              ; write 0xaa
000B84 82A6               M         bsf     EECON1, WR          ; begin write
000B86 B2A6               M         btfsc   EECON1, WR
000B88 D???               M         bra     $-2
                          M 
000B8A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B8C 94A6               M         bcf     EECON1, WREN        ; disable writes
000B8E 2A21           01151         incf    L_EE
                      01152         
Warning[202]: Argument out of range.  Least significant bits used.
000B90 3819           01153         swapf   OP_INT, WREG    ;1's seconds
000B92 6E17           01154         movwf   temp
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B94 0E0F           01155         movlw   0x0f
000B96 1617           01156         andwf   temp
000B98 C017 FFE8      01157         movff   temp, WREG
000B9C 0F30           01158         addlw   0x30
                      01159         WriteEE WREG, H_EE, L_EE
000B9E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000BA2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000BA6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000BAA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BAC D???               M         bra     $-2
                          M 
000BAE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BB0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BB2 84A6               M         bsf     EECON1, WREN        ; enable write
000BB4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BB6 98A1               M         bcf     PIR2, EEIF
                          M 
000BB8 0E55               M         movlw   0x55
000BBA 6EA7               M         movwf   EECON2              ; write 55h
000BBC 0EAA               M         movlw   0xaa
000BBE 6EA7               M         movwf   EECON2              ; write 0xaa
000BC0 82A6               M         bsf     EECON1, WR          ; begin write
000BC2 B2A6               M         btfsc   EECON1, WR
000BC4 D???               M         bra     $-2
                          M 
000BC6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BC8 94A6               M         bcf     EECON1, WREN        ; disable writes
000BCA 2A21           01160         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000BCC 0012           01161 return
                      01162         
                      01163                 
000BCE                01164 DISPLAY_RTC
                      01165         ; display data in this format hh/minmin/yy yy/mm/dd
                      01166         
                      01167         rtc_read    0x02            ; 0x02 from DS1307 - hours
000BCE 0E02               M     movlw   0x02
000BD0 6E??               M     movwf   regaddress
000BD2 EC?? F???          M     call    read_rtc
000BD6 C??? FFE8          M     movff   datachar, WREG
000BDA EC?? F???          M     call    rtc_convert
000BDE C??? FFE8      01168         movff   tens_digit,WREG
000BE2 EC?? F???      01169         call    WR_DATA
000BE6 C??? FFE8      01170         movff   ones_digit,WREG
000BEA EC?? F???      01171         call    WR_DATA
000BEE 0E68           01172         movlw   "h"
000BF0 EC?? F???      01173         call    WR_DATA
                      01174         
                      01175         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000BF4 0E01               M     movlw   0x01
000BF6 6E??               M     movwf   regaddress
000BF8 EC?? F???          M     call    read_rtc
000BFC C??? FFE8          M     movff   datachar, WREG
000C00 EC?? F???          M     call    rtc_convert
000C04 C??? FFE8      01176         movff   tens_digit,WREG
000C08 EC?? F???      01177         call    WR_DATA
000C0C C??? FFE8      01178         movff   ones_digit,WREG
000C10 EC?? F???      01179         call    WR_DATA
                      01180         
                      01181         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000C14 0E00               M     movlw   0x00
000C16 6E??               M     movwf   regaddress
000C18 EC?? F???          M     call    read_rtc
000C1C C??? FFE8          M     movff   datachar, WREG
000C20 EC?? F???          M     call    rtc_convert
000C24 C??? FFE8      01182         movff   tens_digit,WREG
000C28 EC?? F???      01183         call    WR_DATA
000C2C C??? FFE8      01184         movff   ones_digit,WREG
000C30 EC?? F???      01185         call    WR_DATA
000C34 0E20           01186         movlw   " "
000C36 EC?? F???      01187         call    WR_DATA
                      01188         
                      01189         rtc_read    0x06            ; 0x06 from DS1307 - years
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C3A 0E06               M     movlw   0x06
000C3C 6E??               M     movwf   regaddress
000C3E EC?? F???          M     call    read_rtc
000C42 C??? FFE8          M     movff   datachar, WREG
000C46 EC?? F???          M     call    rtc_convert
000C4A C??? FFE8      01190         movff   tens_digit,WREG
000C4E EC?? F???      01191         call    WR_DATA
000C52 C??? FFE8      01192         movff   ones_digit,WREG
000C56 EC?? F???      01193         call    WR_DATA
000C5A 0E2F           01194         movlw   "/"
000C5C EC?? F???      01195         call    WR_DATA
                      01196         
                      01197         rtc_read    0x05            ; 0x05 from DS1307 - months
000C60 0E05               M     movlw   0x05
000C62 6E??               M     movwf   regaddress
000C64 EC?? F???          M     call    read_rtc
000C68 C??? FFE8          M     movff   datachar, WREG
000C6C EC?? F???          M     call    rtc_convert
000C70 C??? FFE8      01198         movff   tens_digit,WREG
000C74 EC?? F???      01199         call    WR_DATA
000C78 C??? FFE8      01200         movff   ones_digit,WREG
000C7C EC?? F???      01201         call    WR_DATA
000C80 0E2F           01202         movlw   "/"
000C82 EC?? F???      01203         call    WR_DATA
                      01204         
                      01205         rtc_read    0x04            ; 0x04 from DS1307 - days
000C86 0E04               M     movlw   0x04
000C88 6E??               M     movwf   regaddress
000C8A EC?? F???          M     call    read_rtc
000C8E C??? FFE8          M     movff   datachar, WREG
000C92 EC?? F???          M     call    rtc_convert
000C96 C??? FFE8      01206         movff   tens_digit,WREG
000C9A EC?? F???      01207         call    WR_DATA
000C9E C??? FFE8      01208         movff   ones_digit,WREG
000CA2 EC?? F???      01209         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000CA6 0012           01210 return
                      01211         
000CA8                01212 SET_TIME
                      01213         rtc_resetAll
                          M 
000CA8 6A??               M     clrf    databyte
000CAA 0E06               M     movlw   6
000CAC 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000CAE                    M     del_loop0
000CAE EC?? F???          M     call    write_rtc
000CB2 2E??               M     decfsz  regaddress
000CB4 D???               M     bra     del_loop0
000CB6 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01214         
                      01215         rtc_set 0x00,   b'10000000'
000CBA 0E00               M     movlw   0x00
000CBC 6E??               M     movwf   regaddress
000CBE 0E80               M     movlw   b'10000000'
000CC0 6E??               M     movwf   databyte
000CC2 EC?? F???          M     call    write_rtc
                      01216 
                      01217         rtc_set 0x06,   b'00010111'             ; Year 17
000CC6 0E06               M     movlw   0x06
000CC8 6E??               M     movwf   regaddress
000CCA 0E17               M     movlw   b'00010111'
000CCC 6E??               M     movwf   databyte
000CCE EC?? F???          M     call    write_rtc
                      01218         rtc_set 0x05,   b'00000011'             ; Month 03
000CD2 0E05               M     movlw   0x05
000CD4 6E??               M     movwf   regaddress
000CD6 0E03               M     movlw   b'00000011'
000CD8 6E??               M     movwf   databyte
000CDA EC?? F???          M     call    write_rtc
                      01219         rtc_set 0x04,   b'00000100'             ; Date 04
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CDE 0E04               M     movlw   0x04
000CE0 6E??               M     movwf   regaddress
000CE2 0E04               M     movlw   b'00000100'
000CE4 6E??               M     movwf   databyte
000CE6 EC?? F???          M     call    write_rtc
                      01220         rtc_set 0x02,   b'00010010'             ; Hours 12
000CEA 0E02               M     movlw   0x02
000CEC 6E??               M     movwf   regaddress
000CEE 0E12               M     movlw   b'00010010'
000CF0 6E??               M     movwf   databyte
000CF2 EC?? F???          M     call    write_rtc
                      01221         rtc_set 0x01,   b'01001000'             ; Minutes 27
000CF6 0E01               M     movlw   0x01
000CF8 6E??               M     movwf   regaddress
000CFA 0E48               M     movlw   b'01001000'
000CFC 6E??               M     movwf   databyte
000CFE EC?? F???          M     call    write_rtc
                      01222         rtc_set 0x00,   b'00000000'             ; Seconds 0
000D02 0E00               M     movlw   0x00
000D04 6E??               M     movwf   regaddress
000D06 0E00               M     movlw   b'00000000'
000D08 6E??               M     movwf   databyte
000D0A EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000D0E 0012           01223 return
                      01224         
000D10                01225 INIT_USART
                      01226         
000D10 8E94           01227         bsf     TRISC, 7        ; set RC7=USART RC
000D12 9C94           01228         bcf     TRISC, 6        ; clear RC6=USART TX
                      01229 
000D14 0E0F           01230         movlw   15              ; baud rate 9600
000D16 6EAF           01231         movwf   SPBRG
000D18 6AAC           01232         clrf    TXSTA
                      01233         
000D1A 6AAB           01234         clrf    RCSTA
000D1C 8EAB           01235         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000D1E 88AB           01236         bsf     RCSTA,CREN      ; continous receive
                      01237         
000D20 8AAC           01238         bsf     TXSTA, TXEN     ; transmit enabled
000D22 0012           01239         return
                      01240 
000D24                01241 DataUSART
000D24 0E02           01242         movlw   0x02
000D26 EC?? F???      01243         call    USART_WAIT
000D2A 0E0D           01244         movlw   0x0D
000D2C EC?? F???      01245         call    USART_WAIT
                      01246         
000D30 6A15           01247         clrf    counter         ; used to cycle through past 9 eeprom logs
000D32 6A16           01248         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01249         
000D34                01250 TRANSFER_LOGS
000D34 0E15           01251         movlw   d'21'           ; logs are 21 bits apart
000D36 0215           01252         mulwf   counter         ; log number one starts at eeprom address 0
000D38 CFF3 F021      01253         movff   PRODL, L_EE     ; low address now points to count X 21
000D3C 6A16           01254         clrf    counter2
                      01255         
000D3E                01256 TRANSFER_DATA   
                      01257         READEE  WREG, H_EE, L_EE
000D3E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D42 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D46 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D48 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D4A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D4C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D50 EC?? F???      01258         call    USART_WAIT      ; transfer bit
000D54 2A21           01259         incf    L_EE
                      01260         
000D56 2A16           01261         incf    counter2
000D58 0E12           01262         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000D5A 6216           01263         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000D5C D???           01264         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01265         
000D5E EC?? F???      01266         call    USART_LINE      ; new line because a e s t h e t i c
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01267         
000D62 2A15           01268         incf    counter
000D64 0E08           01269         movlw   d'8'            ; we save up to the last 9 permanent logs
000D66 6215           01270         cpfseq  counter
000D68 D???           01271         bra     TRANSFER_LOGS
                      01272         
000D6A EC?? F???      01273         call    LCD_L2
                      01274         Display PCComplete
  0000                    M         local   loop
000D6E 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D70 6EF8               M         movwf   TBLPTRU
000D72 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D74 6EF7               M         movwf   TBLPTRH
000D76 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D78 6EF6               M         movwf   TBLPTRL
000D7A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D7C 50F5               M         movf    TABLAT, W
000D7E                    M loop
000D7E EC?? F???          M         call    WR_DATA         ; write to LCD
000D82 000B               M         tblrd+*                 ; next row in table
000D84 50F5               M         movf    TABLAT, W
000D86 E1??               M         bnz     loop
                      01275         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D88 0E28               M         movlw   0x28
000D8A 6E1A               M         movwf   delayR
                          M 
000D8C                    M loop
000D8C EC?? F???          M         call    Delay50ms
000D90 2E1A               M         decfsz  delayR
000D92 EF?? F???          M         goto    loop
000D96 0012           01276         return                  ; done transmitting data
                      01277         
000D98                01278 USART_WAIT
000D98 6EAD           01279         movwf   TXREG
000D9A A2AC           01280         btfss   TXSTA, 1
000D9C EF?? F???      01281         goto    $-2
000DA0 0012           01282         return
                      01283 
000DA2                01284 USART_LINE
000DA2 0E0A           01285         movlw   0x0A
000DA4 EC?? F???      01286         call    USART_WAIT
000DA8 0E0D           01287         movlw   0x0D
000DAA EC?? F???      01288         call    USART_WAIT
000DAE 0012           01289         return
                      01290         
000DB0                01291 Delay5us
000DB0 0E78           01292         movlw   d'120'
000DB2 6E1B           01293         movwf   d5us
                      01294 
000DB4                01295 loop5us
000DB4 2E1B           01296         decfsz  d5us
000DB6 EF?? F???      01297         goto    loop5us
000DBA 0000           01298         nop
000DBC 0012           01299         return
                      01300 
000DBE                01301 Delay200us
000DBE 0EA4           01302         movlw   0xA4
000DC0 6E1C           01303         movwf   d200us
                      01304 
000DC2                01305 loop200us
000DC2 2E1C           01306         decfsz  d200us
000DC4 EF?? F???      01307         goto    loop200us
000DC8 0000           01308         nop
000DCA 0012           01309         return
                      01310 
000DCC                01311 Delay50ms
000DCC 0EF9           01312         movlw   0xF9
000DCE 6E1D           01313         movwf   d50ms
                      01314 
000DD0                01315 loop50ms
000DD0 EC?? F???      01316         call    Delay200us
000DD4 2E1D           01317         decfsz  d50ms
                      01318 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DD6                01319 Cycles
000DD6 EF?? F???      01320         goto    loop50ms
000DDA EC?? F???      01321         call    Delay200us
000DDE 0012           01322         return
                      01323 
000DE0                01324 WriteEE_RTC
                      01325         WriteEE tens_digit, H_EE, L_EE
000DE0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DE4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DE8 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000DEC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DEE D???               M         bra     $-2
                          M 
000DF0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DF2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DF4 84A6               M         bsf     EECON1, WREN        ; enable write
000DF6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DF8 98A1               M         bcf     PIR2, EEIF
                          M 
000DFA 0E55               M         movlw   0x55
000DFC 6EA7               M         movwf   EECON2              ; write 55h
000DFE 0EAA               M         movlw   0xaa
000E00 6EA7               M         movwf   EECON2              ; write 0xaa
000E02 82A6               M         bsf     EECON1, WR          ; begin write
000E04 B2A6               M         btfsc   EECON1, WR
000E06 D???               M         bra     $-2
                          M 
000E08 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E0A 94A6               M         bcf     EECON1, WREN        ; disable writes
000E0C 2A21           01326         incf    L_EE
                      01327         WriteEE ones_digit, H_EE, L_EE
000E0E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E12 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E16 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000E1A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E1C D???               M         bra     $-2
                          M 
000E1E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E20 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E22 84A6               M         bsf     EECON1, WREN        ; enable write
000E24 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E26 98A1               M         bcf     PIR2, EEIF
                          M 
000E28 0E55               M         movlw   0x55
000E2A 6EA7               M         movwf   EECON2              ; write 55h
000E2C 0EAA               M         movlw   0xaa
000E2E 6EA7               M         movwf   EECON2              ; write 0xaa
000E30 82A6               M         bsf     EECON1, WR          ; begin write
000E32 B2A6               M         btfsc   EECON1, WR
000E34 D???               M         bra     $-2
                          M 
000E36 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E38 94A6               M         bcf     EECON1, WREN        ; disable writes
000E3A 2A21           01328         incf    L_EE
000E3C 0012           01329         return
                      01330 
000E3E                01331 ClearEEPROM_21
000E3E 6A20           01332         clrf    H_EE
000E40 6A21           01333         clrf    L_EE
000E42 681F           01334         setf    clear_EE
000E44 6A15           01335         clrf    counter
000E46                01336 ClearNext
                      01337         WriteEE         clear_EE, H_EE, L_EE
000E46 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E4A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E4E C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000E52 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E54 D???               M         bra     $-2
                          M 
000E56 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E58 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E5A 84A6               M         bsf     EECON1, WREN        ; enable write
000E5C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E5E 98A1               M         bcf     PIR2, EEIF
                          M 
000E60 0E55               M         movlw   0x55
000E62 6EA7               M         movwf   EECON2              ; write 55h
000E64 0EAA               M         movlw   0xaa
000E66 6EA7               M         movwf   EECON2              ; write 0xaa
000E68 82A6               M         bsf     EECON1, WR          ; begin write
000E6A B2A6               M         btfsc   EECON1, WR
000E6C D???               M         bra     $-2
                          M 
000E6E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E70 94A6               M         bcf     EECON1, WREN        ; disable writes
000E72 2A15           01338         incf            counter
000E74 2A21           01339         incf            L_EE
000E76 0E15           01340         movlw           d'21'
000E78 6215           01341         cpfseq          counter
000E7A EF?? F???      01342         goto            ClearNext
000E7E 6A20           01343         clrf            H_EE
000E80 6A21           01344         clrf            L_EE
000E82 0012           01345         return
                      01346         
000E84                01347 READ_KEY
000E84 A281           01348         btfss   PORTB, 1        ; check for keypad interrupt
000E86 EF?? F???      01349         goto    READ_KEY
000E8A 3881           01350         swapf   PORTB, W
000E8C 0B0F           01351         andlw   0x0F
000E8E 6E10           01352         movwf   KEY
000E90 B281           01353         btfsc   PORTB, 1
000E92 EF?? F???      01354         goto    $-2
000E96 0012           01355         return
                      01356 
000E98                01357 READ_KEY_TIME
000E98 EC?? F???      01358         call        LCD_L2          ; go to second line to print RTC    
                      01359         ; display the time
                      01360         ; call      DISPLAY_RTC 
                      01361 
000E9C A281           01362         btfss       PORTB, 1    ; keypad interrupt
000E9E EF?? F???      01363         goto        READ_KEY_TIME
000EA2 3881           01364         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000EA4 0B0F           01365         andlw       0x0F        ; only want W3:0
000EA6 6E10           01366         movwf       KEY         ; write this value to the KEY
000EA8 B281           01367         btfsc       PORTB, 1    ; wait for release
000EAA EF?? F???      01368         goto        $-2         ; go back one instruction
000EAE 0012           01369         return
                      01370 
000EB0                01371 DisplayExeTime
                      01372         READEE  REG_EE, H_EE, L_EE
000EB0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EB4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EB8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EBA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EBC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EBE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EC2 0EFF           01373         movlw   0xFF
000EC4 6222           01374         cpfseq  REG_EE
000EC6 EF?? F???      01375         goto    NoSkipDispExeTime
                      01376         Display NoData
  0000                    M         local   loop
000ECA 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000ECC 6EF8               M         movwf   TBLPTRU
000ECE 0E??               M         movlw   high NoData     ; Move Table<15:8>
000ED0 6EF7               M         movwf   TBLPTRH
000ED2 0E??               M         movlw   low NoData      ; Move Table<7:0>
000ED4 6EF6               M         movwf   TBLPTRL
000ED6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000ED8 50F5               M         movf    TABLAT, W
000EDA                    M loop
000EDA EC?? F???          M         call    WR_DATA         ; write to LCD
000EDE 000B               M         tblrd+*                 ; next row in table
000EE0 50F5               M         movf    TABLAT, W
000EE2 E1??               M         bnz     loop
000EE4 0EFF           01377         movlw   0xFF
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EE6 6022           01378         cpfslt  REG_EE
000EE8 EF?? F???      01379         goto    SkipDispExeTime
000EEC 0012           01380         return
                      01381 
000EEE                01382 NoSkipDispExeTime
                      01383         READEE  WREG, H_EE, L_EE
000EEE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EF2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EF6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EF8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EFA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EFC CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F00 EC?? F???      01384         call    WR_DATA
000F04 2A21           01385         incf    L_EE
                      01386         
                      01387         READEE  WREG, H_EE, L_EE
000F06 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F0A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F0E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F10 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F12 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F14 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F18 EC?? F???      01388         call    WR_DATA
000F1C 2A21           01389         incf    L_EE
                      01390         
                      01391         READEE  WREG, H_EE, L_EE
000F1E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F22 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F26 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F28 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F2A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F2C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F30 EC?? F???      01392         call    WR_DATA
000F34 2A21           01393         incf    L_EE
                      01394 
000F36 0E73           01395         movlw   0x73            ; Write 's'
000F38 EC?? F???      01396         call    WR_DATA
000F3C EC?? F???      01397         call    LCD_L2
000F40                01398 SkipDispExeTime
000F40 0012           01399         return
                      01400 
000F42                01401 DispOpSort
                      01402         READEE  REG_EE, H_EE, L_EE
000F42 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F46 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F4A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F4C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F4E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F50 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F54 0EFF           01403         movlw   0xff
000F56 6222           01404         cpfseq  REG_EE
000F58 EF?? F???      01405         goto    NoSkipDispOpSort
                      01406         Display NoData
  0000                    M         local   loop
000F5C 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F5E 6EF8               M         movwf   TBLPTRU
000F60 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F62 6EF7               M         movwf   TBLPTRH
000F64 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F66 6EF6               M         movwf   TBLPTRL
000F68 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F6A 50F5               M         movf    TABLAT, W
000F6C                    M loop
000F6C EC?? F???          M         call    WR_DATA         ; write to LCD
000F70 000B               M         tblrd+*                 ; next row in table
000F72 50F5               M         movf    TABLAT, W
000F74 E1??               M         bnz     loop
000F76 0EFF           01407         movlw   0xff
000F78 6022           01408         cpfslt  REG_EE
000F7A EF?? F???      01409         goto    SkipDispOpSort
                      01410 
000F7E                01411 NoSkipDispOpSort
000F7E 0E61           01412         movlw   "a"
000F80 EC?? F???      01413         call    WR_DATA
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01414         
                      01415         READEE  REG_EE, H_EE, L_EE
000F84 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F88 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F8C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F8E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F90 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F92 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F96 C022 FFE8      01416         movff   REG_EE, WREG
000F9A EC?? F???      01417         call    WR_DATA
000F9E 2A21           01418         incf    L_EE
                      01419         
000FA0 0E20           01420         movlw   " "
000FA2 EC?? F???      01421         call    WR_DATA
                      01422         
000FA6 0E62           01423         movlw   "b"
000FA8 EC?? F???      01424         call    WR_DATA
                      01425         
                      01426         READEE  REG_EE, H_EE, L_EE
000FAC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FB0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FB4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FB6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FB8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FBA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FBE C022 FFE8      01427         movff   REG_EE, WREG
000FC2 EC?? F???      01428         call    WR_DATA
000FC6 2A21           01429         incf    L_EE
                      01430         
000FC8 0E20           01431         movlw   " "
000FCA EC?? F???      01432         call    WR_DATA
                      01433         
000FCE 0E63           01434         movlw   "c"
000FD0 EC?? F???      01435         call    WR_DATA
                      01436         
                      01437         READEE  REG_EE, H_EE, L_EE
000FD4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FD8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FDC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FDE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FE0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FE2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FE6 C022 FFE8      01438         movff   REG_EE, WREG
000FEA EC?? F???      01439         call    WR_DATA
000FEE 2A21           01440         incf    L_EE
                      01441         
000FF0 0E20           01442         movlw   " "
000FF2 EC?? F???      01443         call    WR_DATA
                      01444         
000FF6 0E64           01445         movlw   "d"
000FF8 EC?? F???      01446         call    WR_DATA
                      01447         
                      01448         READEE  REG_EE, H_EE, L_EE
000FFC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001000 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001004 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001006 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001008 80A6               M         bsf     EECON1, RD          ; read EEPROM
00100A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00100E C022 FFE8      01449         movff   REG_EE, WREG
001012 EC?? F???      01450         call    WR_DATA
001016 2A21           01451         incf    L_EE
                      01452 
001018                01453 SkipDispOpSort
001018 0012           01454         return
                      01455         
00101A                01456 DispOpRTC
                      01457         READEE  REG_EE, H_EE, L_EE
00101A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00101E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001022 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001024 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001026 80A6               M         bsf     EECON1, RD          ; read EEPROM
001028 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00102C 0EFF           01458         movlw   0xff
00102E 6222           01459         cpfseq  REG_EE
001030 EF?? F???      01460         goto    NoSkipDispOpRTC
                      01461         Display NoData
  0000                    M         local   loop
001034 0E??               M         movlw   upper NoData    ; Move Table<20:16>
001036 6EF8               M         movwf   TBLPTRU
001038 0E??               M         movlw   high NoData     ; Move Table<15:8>
00103A 6EF7               M         movwf   TBLPTRH
00103C 0E??               M         movlw   low NoData      ; Move Table<7:0>
00103E 6EF6               M         movwf   TBLPTRL
001040 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
001042 50F5               M         movf    TABLAT, W
001044                    M loop
001044 EC?? F???          M         call    WR_DATA         ; write to LCD
001048 000B               M         tblrd+*                 ; next row in table
00104A 50F5               M         movf    TABLAT, W
00104C E1??               M         bnz     loop
00104E 0EFF           01462         movlw   0xff
001050 6022           01463         cpfslt  REG_EE
001052 EF?? F???      01464         goto    SkipDispOpRTC
                      01465 
001056                01466 NoSkipDispOpRTC
                      01467         READEE  REG_EE, H_EE, L_EE
001056 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00105A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00105E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001060 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001062 80A6               M         bsf     EECON1, RD          ; read EEPROM
001064 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001068 C022 FFE8      01468         movff   REG_EE, WREG
00106C EC?? F???      01469         call    WR_DATA
001070 2A21           01470         incf    L_EE
                      01471         
                      01472         READEE  REG_EE, H_EE, L_EE
001072 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001076 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00107A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00107C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00107E 80A6               M         bsf     EECON1, RD          ; read EEPROM
001080 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001084 C022 FFE8      01473         movff   REG_EE, WREG
001088 EC?? F???      01474         call    WR_DATA
00108C 2A21           01475         incf    L_EE
                      01476 
00108E 0E68           01477         movlw   "h"
001090 EC?? F???      01478         call    WR_DATA
                      01479         
001094 EC?? F???      01480         call    DispOpRTC_Helper
                      01481         
001098 0E20           01482         movlw   " "
00109A EC?? F???      01483         call    WR_DATA
                      01484         
00109E EC?? F???      01485         call    DispOpRTC_Helper
0010A2 0E2F           01486         movlw   "/"
0010A4 EC?? F???      01487         call    WR_DATA
                      01488 
0010A8 EC?? F???      01489         call    DispOpRTC_Helper
0010AC 0E2F           01490         movlw   "/"
0010AE EC?? F???      01491         call    WR_DATA
0010B2 EC?? F???      01492         call    DispOpRTC_Helper
0010B6                01493 SkipDispOpRTC
0010B6 0012           01494                 return
0010B8                01495 DispOpRTC_Helper
                      01496         READEE          REG_EE, H_EE, L_EE
0010B8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010BC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010C0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010C2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010C4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010C6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010CA C022 FFE8      01497         movff           REG_EE, WREG
0010CE EC?? F???      01498         call            WR_DATA
0010D2 2A21           01499         incf            L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-28-2017  3:24:53         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01500         READEE          REG_EE, H_EE, L_EE
0010D4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010D8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010DC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010DE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010E0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010E2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010E6 C022 FFE8      01501         movff           REG_EE, WREG
0010EA EC?? F???      01502         call            WR_DATA
0010EE 2A21           01503         incf            L_EE
0010F0 0012           01504         return
Warning[205]: Found directive in column 1. (end)
                      01505 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

