MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
                      00001 ;External labels
Warning[205]: Found directive in column 1. (extern)
  0000                00002 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00003 
                      00004 ;; RTC MACROS
                      00005 ;;
                      00006 ;; Sebastian K, commit 110219-2205
                      00007 ;; forked off PIC16 sample code
                      00008 ;; for PIC18F4620
                      00009 ;; relocatable labels, declared in another file
                      00010 
Warning[205]: Found directive in column 1. (variable)
  0000                00011 variable _loopknt=0
                      00012 
                      00013 rtc_resetAll macro
                      00014 ;input: none
                      00015 ;output: none
                      00016 ;desc: Resets all the time keeping registers on the RTC to zero
                      00017 
                      00018 clrf databyte
                      00019 movlw 6
                      00020 movwf regaddress ;start at 6 and go down, and set all to 0
                      00021 
                      00022 del_loop#v(_loopknt)
                      00023 call write_rtc
                      00024 decfsz regaddress
                      00025 bra del_loop#v(_loopknt)
                      00026 call write_rtc ;sets registers 0-6 to zero
                      00027 _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00028 endm
                      00029 
                      00030 rtc_set macro addliteral,datliteral
                      00031 ;input: addliteral: value of address
                      00032 ; datliteral: value of data
                      00033 ;output: none
                      00034 ;desc: loads the data in datliteral into the
                      00035 ; address specified by addliteral in the RTC
                      00036 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037 movlw addliteral
                      00038 movwf regaddress
                      00039 movlw datliteral
                      00040 movwf databyte
                      00041 call write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00042 endm
                      00043 
                      00044 rtc_read macro addliteral
                      00045 ;input: addliteral
                      00046 ;output: datachar, tens_digit, ones_digit
                      00047 ;desc: From the selected register in the RTC, read the data
                      00048 ; and load it into 0x75. 0x75 is also converted into
                      00049 ; ASCII characters and the tens digit is placed into
                      00050 ; 0x77 and the ones digit is placed in 0x78
                      00051 movlw addliteral
                      00052 movwf regaddress
                      00053 call read_rtc
                      00054 movf datachar,w
                      00055 call rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00056 endm
                      00018 
                      00019     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00020     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00021     CONFIG WDT = OFF, WDTPS = 32768
                      00022     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00023     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00024     CONFIG DEBUG = OFF
                      00025     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00026     CONFIG CPB = OFF, CPD = OFF
                      00027     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00028     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00029     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00030     CONFIG EBTRB = OFF
                      00031 
                      00032 ;*******************************************************************************
                      00033 ; variable and constants
                      00034 ;*******************************************************************************
                      00035     CODE
                      00036             
                      00037     cblock 0x00
  00000000            00038         key1
  00000001            00039         key2
  00000002            00040         key3
  00000003            00041         keyA
  00000004            00042         key4
  00000005            00043         key5
  00000006            00044         key6
  00000007            00045         keyB
  00000008            00046         key7
  00000009            00047         key8
  0000000A            00048         key9
  0000000B            00049         keyC
  0000000C            00050         keyS
  0000000D            00051         key0
  0000000E            00052         keyH
  0000000F            00053         keyD
  00000010            00054         KEY
  00000011            00055         temp_KEY
  00000012            00056         KEY_ISR
  00000013            00057         temp_S  
  00000014            00058         temp_W
  00000015            00059         counter
  00000016            00060         counter2
  00000017            00061         temp
  00000018            00062         OP_sec
  00000019            00063         OP_INT
  0000001A            00064         temp_ISR
  0000001B            00065         delayR
  0000001C            00066         d5us
  0000001D            00067         d200us
  0000001E            00068         d50ms
  0000001F            00069         inExecution
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000020            00070         clear_EE
  00000021            00071         H_EE    
  00000022            00072         L_EE    
  00000023            00073         REG_EE  
  00000024            00074         tempH_EE
  00000025            00075         tempL_EE
  00000026            00076         tempL_EEC
  00000027            00077         MAX_EE   
  00000028            00078         READ_EE
  00000029            00079         last_log
  0000002A            00080         startHt
  0000002B            00081         startHo
  0000002C            00082         startMt
  0000002D            00083         startMo
  0000002E            00084         endHt
  0000002F            00085         endHo
  00000030            00086         endMt
  00000031            00087         endMo
  00000032            00088         LED_Count
  00000033            00089         SkipCount
  00000034            00090         exe_sec
  00000035            00091         exe_int
  00000036            00092         timer_H
  00000037            00093         timer_L
  00000038            00094         convert_buffer
  00000039            00095         transferring
  0000003A            00096         PC_PCL
  0000003B            00097         PC_PCLATH
  0000003C            00098         PC_PCLATU
  0000003D            00099         TIMCNT
  0000003E            00100         CPCNT
  0000003F            00101         TDATA
                      00102     endc
                      00103     
                      00104 
                      00105 
                      00106 ;*******************************************************************************
                      00107 ; tables
                      00108 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00109     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00110     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00111     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00112     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00113     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00114     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00115     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00116     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00117     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00118     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00119     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00120     PC1         db          "PC Interface", 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00121     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00122     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00123     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00124     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00125     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00126     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00127     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00128     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00129         
                      00130 ;*******************************************************************************
                      00131 ; macros
                      00132 ;*******************************************************************************
                      00133 
                      00134 TransferTable macro table
                      00135         local loop
                      00136         
                      00137         movlw   upper table
                      00138         movwf   TBLPTRU
                      00139         movlw   high table
                      00140         movwf   TBLPTRH
                      00141         movlw   low table
                      00142         movwf   TBLPTRL
                      00143         tblrd*
                      00144         movf    TABLAT, W
                      00145 loop
                      00146         call    USART_WAIT
                      00147         tblrd+*
                      00148         movf    TABLAT, W
                      00149         bnz     loop
                      00150         endm
                      00151         
                      00152 ConfigLCD   macro
                      00153           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00154           call      WR_INS
                      00155 
                      00156           movlw     b'00001100'    ; display on/off
                      00157           call      WR_INS
                      00158          ; movlw     B'00000110'    ; Entry mode
                      00159          ; call      WR_INS
                      00160           movlw     b'00000001'    ; Clear ram
                      00161           call      WR_INS
                      00162           endm
                      00163         
                      00164 movMSB  macro   port
                      00165         andlw   0xF0
                      00166         iorwf   port, f
                      00167         iorlw   0x0F
                      00168         andwf   port, f
                      00169         endm
                      00170 
                      00171 Delay50N macro count, N
                      00172         local   loop
                      00173         movlw   N
                      00174         movwf   count
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00175 
                      00176 loop
                      00177         call    Delay50ms
                      00178         decfsz  count
                      00179         goto    loop
                      00180         endm
                      00181 
                      00182 Display macro   Message
                      00183         local   loop
                      00184         movlw   upper Message   ; Move Table<20:16>
                      00185         movwf   TBLPTRU
                      00186         movlw   high Message    ; Move Table<15:8>
                      00187         movwf   TBLPTRH
                      00188         movlw   low Message     ; Move Table<7:0>
                      00189         movwf   TBLPTRL
                      00190         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00191         movf    TABLAT, W
                      00192 loop
                      00193         call    WR_DATA         ; write to LCD
                      00194         tblrd+*                 ; next row in table
                      00195         movf    TABLAT, W
                      00196         bnz     loop
                      00197         endm
                      00198 
                      00199 DisplayLog  macro   addrH, addrL
                      00200             local   Again, Finish
                      00201             
                      00202             clrf    SkipCount
                      00203             clrf    MAX_EE
                      00204 
                      00205             ; Check if there is No Data first
                      00206             READEE      REG_EE, addrH, addrL
                      00207             movlw       0xFF
                      00208             cpfseq      REG_EE
                      00209             goto        Again
                      00210             Display     NoData
                      00211             goto        Finish
                      00212 Again
                      00213             ; Put a space every 3 Writes
                      00214             movlw       d'3'
                      00215             cpfslt      SkipCount
                      00216             cpfslt      MAX_EE
                      00217             goto        Finish
                      00218 
                      00219             ; read EEPROM
                      00220             READEE      REG_EE, addrH, addrL
                      00221             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00222             goto        Finish
                      00223 Finish
                      00224             endm
                      00225             
                      00226 ;TransferLog macro   addrH, addrL
                      00227         
                      00228 
                      00229 incf_BCD    macro   BCD
                      00230         local ones, endBCD
                      00231         movff   BCD, temp
                      00232         
                      00233         ;process ones digit
                      00234         movlw   0x0F
                      00235         andwf   temp
                      00236         movlw   d'9'
                      00237         
                      00238         ;skip if ones digit is 9
                      00239         cpfseq  temp
                      00240         goto    ones
                      00241         
                      00242         movlw   b'00010000'
                      00243         addwf   BCD
                      00244         movlw   0x0F
                      00245         andwf   BCD
                      00246         movlw   0xA0
                      00247         cpfslt  BCD
                      00248         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00249         clrf    BCD
                      00250         goto    endBCD
                      00251         
                      00252 ones
                      00253         incf    BCD
                      00254         goto    endBCD
                      00255 endBCD
                      00256         nop
                      00257         endm
                      00258 
                      00259 WriteRTC    macro
                      00260         movf    tens_digit, W
                      00261         call    WR_DATA
                      00262         movf    ones_digit, W
                      00263         call    WR_DATA
                      00264         endm
                      00265 
                      00266 WriteEE macro   word, addH, addL
                      00267         movff   addH, EEADRH    ; High address
                      00268         movff   addL, EEADRH    ; Low address
                      00269         movff   word, EEDATA    ; set word
                      00270 
                      00271         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00272         bra     $-2
                      00273 
                      00274         bcf     EECON1, EEPGD   ; Point to data memory
                      00275         bcf     EECON1, CFGS    ; Access EEPROM
                      00276         bsf     EECON1, WREN    ; enable write
                      00277         bcf     EECON1, GIE         ; disable interrupts during write
                      00278         bcf     PIR2, EEIF
                      00279 
                      00280         movlw   0x55
                      00281         movwf   EECON2      ; write 55h
                      00282         movlw   0xAA
                      00283         movwf   EECON2      ; write 0xAA
                      00284         bsf     EECON1, WR          ; begin write
                      00285         btfsc   EECON1, WR
                      00286         bra     $-2
                      00287 
                      00288         bsf     EECON1, GIE         ; enable interrupts after write
                      00289         bcf     EECON1, WREN        ; disable writes
                      00290         endm
                      00291 
                      00292 READEE  macro   file, addH, addL
                      00293         movff   addH, EEADRH        ; read to high
                      00294         movff   addL, EEADR         ; read to low
                      00295         bcf     EECON1, EEPGD       ; point to data memory
                      00296         bcf     EECON1, CFGS        ; access to EEPROM
                      00297         bsf     EECON1, RD          ; read EEPROM
                      00298         movff   EEDATA, file        ; put data into file
                      00299         endm
                      00300 
                      00301 ChangeMode  macro   ModeId, NextMode
                      00302         local Next, Exit
                      00303 
                      00304         movlw   ModeId              ; poll for mode
                      00305         cpfseq  KEY                 ; check this against key press
                      00306         goto    Exit
                      00307 
                      00308 Next
                      00309         clrf    LATA                ; clear pins before proceeding
                      00310         clrf    LATB
                      00311         clrf    LATC
                      00312         clrf    LATD
                      00313         goto    NextMode
                      00314 
                      00315 Exit
                      00316         nop
                      00317         endm
                      00318 
                      00319 saveContext macro
                      00320     movff   STATUS, temp_S          ; save STATUS first
                      00321     movwf   temp_W                  ; save W
                      00322     endm
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00323 
                      00324 restoreContext macro
                      00325     swapf   temp_W, W               ; restore W first
                      00326     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00327     endm
                      00328 ;*******************************************************************************
                      00329 ; reset vector and isrs
                      00330 ;*******************************************************************************
                      00331         ORG     0x000               ; processor reset vector
000000 EF?? F???      00332         goto    INIT                ; go to beginning of program
                      00333 
                      00334         ORG     0x008
000008 EF?? F???      00335         goto    ISR_HIGH
                      00336 
                      00337         ORG     0x018
000018 EF?? F???      00338         goto    ISR_LOW
                      00339 
00001C                00340 ISR_HIGH
                      00341         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00342 
                      00343         ;reset timer
000022 0E0B           00344         movlw   0xb
000024 6ED7           00345         movwf   TMR0H
000026 0EDC           00346         movlw   0xdc
000028 6ED6           00347         movwf   TMR0L
                      00348         
                      00349         ;call   DISPLAY_RTC
                      00350         
                      00351         ;timer interrupt
00002A A4F2           00352         btfss   INTCON, TMR0IF
00002C EF?? F???      00353         goto    END_ISR_HIGH
                      00354         
                      00355         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0F
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0E0F               M         movlw   0x0F
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xA0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00356         movlw   d'0'
00005C 6219           00357         cpfseq  OP_INT
00005E EF?? F???      00358         goto    END_ISR_HIGH
                      00359         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0F
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0E0F               M         movlw   0x0F
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xA0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00360 
00008C                00361 END_ISR_HIGH
00008C 94F2           00362         bcf     INTCON, TMR0IF
                      00363         restoreContext
00008E 3814               M     swapf   temp_W, W               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00364         retfie
                      00365 
000096                00366 ISR_LOW
                      00367         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00368         ; KEYPAD INTERRUPT
00009C A0F0           00369         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00370         goto            END_ISR_LOW
                      00371 
                      00372         ;Check operation status
                      00373 ;       movlw           0xFF                                    ; If in operation, skip return
                      00374 ;       cpfseq          InExecution
                      00375 ;       goto            END_ISR_LOW
                      00376 
                      00377         ; Process KEY
0000A2 3881           00378         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00379         andlw           0x0F
0000A6 6E12           00380         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00381 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00382 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00383         goto            END_ISR_LOW
                      00384 
                      00385         ; Reset program counter
0000AC 6AFF           00386         clrf            TOSU
0000AE 6AFE           00387         clrf            TOSH
0000B0 6AFD           00388         clrf            TOSL
                      00389 
0000B2                00390 END_ISR_LOW
0000B2 90F0           00391         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00392         restoreContext
0000B4 3814               M     swapf   temp_W, W               ; restore W first
0000B6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00393         
0000BA 6E14           00394         movwf   temp_W              ; save current W
0000BC CFD8 F013      00395         movff   STATUS, temp_S      ; save status
                      00396 
                      00397         ; ISR_Low routines
0000C0 C013 FFD8      00398         movff   temp_S, STATUS      ; retreive status
0000C4 3A14           00399         swapf   temp_W, f
0000C6 3814           00400         swapf   temp_W, w           ; restore W
0000C8 0010           00401         retfie
                      00402 
                      00403 ;*******************************************************************************
                      00404 ; main
                      00405 ;*******************************************************************************
0000CA                00406 INIT
                      00407         ; i/o
0000CA 0EFF           00408         movlw   b'11111111'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CC 6E92           00409         movwf   TRISA
0000CE 0EFF           00410         movlw   b'11111111'
0000D0 6E93           00411         movwf   TRISB               ; keypad
0000D2 0E00           00412         movlw   b'00000000'
0000D4 6E94           00413         movwf   TRISC
0000D6 0E00           00414         movlw   b'00000000'
0000D8 6E95           00415         movwf   TRISD
0000DA 0E07           00416         movlw   b'00000111'
0000DC 6E96           00417         movwf   TRISE
                      00418 
                      00419         ; analog/digital pins
0000DE 0E0F           00420         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00421         movwf   ADCON1
                      00422 
                      00423         ; clear ports
0000E2 6A89           00424         clrf    LATA
0000E4 6A8A           00425         clrf    LATB
                      00426 ;       bcf     TRISC, SCL
                      00427 ;       bcf     TRISC, SDA
0000E6 6A8B           00428         clrf    LATC
0000E8 6A8C           00429         clrf    LATD
0000EA 6A8D           00430         clrf    LATE
                      00431         
0000EC 0E00           00432         movlw   b'00000000'
0000EE 6EC2           00433         movwf   ADCON0
0000F0 0EFF           00434         movlw   b'11111111'
0000F2 6EC1           00435         movwf   ADCON1
                      00436         
                      00437         ; initializations
                      00438         
0000F4 EC?? F???      00439         call    InitLCD
                      00440         ConfigLCD
0000F8 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
0000FA EC?? F???          M           call      WR_INS
                          M 
0000FE 0E0C               M           movlw     b'00001100'    ; display on/off
000100 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000104 0E01               M           movlw     b'00000001'    ; Clear ram
000106 EC?? F???          M           call      WR_INS
                      00441         
00010A EC?? F???      00442         call    RTC_INIT
00010E EC?? F???      00443         call    Delay50ms
                      00444         
000112 EC?? F???      00445         call    INIT_USART
                      00446 
                      00447         ; interrupts
000116 6AD0           00448         clrf    RCON
000118 6AF2           00449         clrf    INTCON
00011A 6AF1           00450         clrf    INTCON2
00011C 6AF0           00451         clrf    INTCON3
00011E 8ED0           00452         bsf     RCON, IPEN          ; priority mode
000120 8EF2           00453         bsf     INTCON, GIEH        ; permit global interrupts
000122 8CF2           00454         bsf     INTCON, GIEL
000124 8AF1           00455         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000126 8AF2           00456         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000128 84F2           00457         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00012A 84F1           00458         bsf     INTCON2, TMR0IP     ; set to high priority
00012C 86F0           00459         bsf     INTCON3, INT1IE
00012E 9CF0           00460         bcf     INTCON3, INT1IP
                      00461         
                      00462         ; setting up timer to sychronize with 1 second clock intervals
000130 9CD5           00463         bcf     T0CON, T08BIT
000132 9AD5           00464         bcf     T0CON, T0CS
000134 96D5           00465         bcf     T0CON, PSA
000136 84D5           00466         bsf     T0CON, T0PS2
000138 92D5           00467         bcf     T0CON, T0PS1
00013A 90D5           00468         bcf     T0CON, T0PS0
                      00469 
00013C 6A21           00470         clrf    H_EE
00013E 6A22           00471         clrf    L_EE
000140 6A??           00472         clrf    tens_digit
000142 6A??           00473         clrf    ones_digit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00474         
000144 0EF2           00475         movlw     b'11110010'    ; Set required keypad inputs
000146 6E93           00476         movwf     TRISB
                      00477         
                      00478         Display Welcome
  0000                    M         local   loop
000148 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00014A 6EF8               M         movwf   TBLPTRU
00014C 0E??               M         movlw   high Welcome    ; Move Table<15:8>
00014E 6EF7               M         movwf   TBLPTRH
000150 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000152 6EF6               M         movwf   TBLPTRL
000154 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000156 50F5               M         movf    TABLAT, W
000158                    M loop
000158 EC?? F???          M         call    WR_DATA         ; write to LCD
00015C 000B               M         tblrd+*                 ; next row in table
00015E 50F5               M         movf    TABLAT, W
000160 E1??               M         bnz     loop
000162 EC?? F???      00479         call LCD_L2
                      00480         Display Team
  0000                    M         local   loop
000166 0E??               M         movlw   upper Team      ; Move Table<20:16>
000168 6EF8               M         movwf   TBLPTRU
00016A 0E??               M         movlw   high Team       ; Move Table<15:8>
00016C 6EF7               M         movwf   TBLPTRH
00016E 0E??               M         movlw   low Team        ; Move Table<7:0>
000170 6EF6               M         movwf   TBLPTRL
000172 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000174 50F5               M         movf    TABLAT, W
000176                    M loop
000176 EC?? F???          M         call    WR_DATA         ; write to LCD
00017A 000B               M         tblrd+*                 ; next row in table
00017C 50F5               M         movf    TABLAT, W
00017E E1??               M         bnz     loop
                      00481         Delay50N delayR, 0x3C
  0000                    M         local   loop
000180 0E3C               M         movlw   0x3C
000182 6E1B               M         movwf   delayR
                          M 
000184                    M loop
000184 EC?? F???          M         call    Delay50ms
000188 2E1B               M         decfsz  delayR
00018A EF?? F???          M         goto    loop
                      00482 
                      00483 ;*******************************************************************************
                      00484 ; standby mode
                      00485 ;*******************************************************************************
00018E                00486 STANDBY
00018E EC?? F???      00487         call    ClrLCD
                      00488         Display StandBy
  0000                    M         local   loop
000192 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000194 6EF8               M         movwf   TBLPTRU
000196 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000198 6EF7               M         movwf   TBLPTRH
00019A 0E??               M         movlw   low StandBy     ; Move Table<7:0>
00019C 6EF6               M         movwf   TBLPTRL
00019E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001A0 50F5               M         movf    TABLAT, W
0001A2                    M loop
0001A2 EC?? F???          M         call    WR_DATA         ; write to LCD
0001A6 000B               M         tblrd+*                 ; next row in table
0001A8 50F5               M         movf    TABLAT, W
0001AA E1??               M         bnz     loop
                      00489 
0001AC                00490 HOLD_STANDBY
0001AC EC?? F???      00491         call    READ_KEY_TIME
                      00492         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0001B0 0E03               M         movlw   keyA                ; poll for mode
0001B2 6210               M         cpfseq  KEY                 ; check this against key press
0001B4 EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0001B8                    M Next
0001B8 6A89               M         clrf    LATA                ; clear pins before proceeding
0001BA 6A8A               M         clrf    LATB
0001BC 6A8B               M         clrf    LATC
0001BE 6A8C               M         clrf    LATD
0001C0 EF?? F???          M         goto    EXECUTION
                          M 
0001C4                    M Exit
0001C4 0000               M         nop
                      00493         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
0001C6 0E07               M         movlw   keyB                ; poll for mode
0001C8 6210               M         cpfseq  KEY                 ; check this against key press
0001CA EF?? F???          M         goto    Exit
                          M 
0001CE                    M Next
0001CE 6A89               M         clrf    LATA                ; clear pins before proceeding
0001D0 6A8A               M         clrf    LATB
0001D2 6A8B               M         clrf    LATC
0001D4 6A8C               M         clrf    LATD
0001D6 EF?? F???          M         goto    LOG
                          M 
0001DA                    M Exit
0001DA 0000               M         nop
                      00494         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0001DC 0E0B               M         movlw   keyC                ; poll for mode
0001DE 6210               M         cpfseq  KEY                 ; check this against key press
0001E0 EF?? F???          M         goto    Exit
                          M 
0001E4                    M Next
0001E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0001E6 6A8A               M         clrf    LATB
0001E8 6A8B               M         clrf    LATC
0001EA 6A8C               M         clrf    LATD
0001EC EF?? F???          M         goto    PERM_LOG
                          M 
0001F0                    M Exit
0001F0 0000               M         nop
                      00495         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0001F2 0E0F               M         movlw   keyD                ; poll for mode
0001F4 6210               M         cpfseq  KEY                 ; check this against key press
0001F6 EF?? F???          M         goto    Exit
                          M 
0001FA                    M Next
0001FA 6A89               M         clrf    LATA                ; clear pins before proceeding
0001FC 6A8A               M         clrf    LATB
0001FE 6A8B               M         clrf    LATC
000200 6A8C               M         clrf    LATD
000202 EF?? F???          M         goto    PC_MODE
                          M 
000206                    M Exit
000206 0000               M         nop
000208 D???           00496         bra     HOLD_STANDBY
                      00497 
                      00498 ;*******************************************************************************
                      00499 ; execution mode
                      00500 ;*******************************************************************************
                      00501 
00020A                00502 EXECUTION
                      00503         ; save the starting time
00020A EC?? F???      00504         call        SAVE_TIME
                      00505                 
                      00506         ; display
00020E 681F           00507         setf        inExecution
000210 EC?? F???      00508         call        ClrLCD
                      00509         Display     Exe1
  0000                    M         local   loop
000214 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000216 6EF8               M         movwf   TBLPTRU
000218 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00021A 6EF7               M         movwf   TBLPTRH
00021C 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00021E 6EF6               M         movwf   TBLPTRL
000220 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000222 50F5               M         movf    TABLAT, W
000224                    M loop
000224 EC?? F???          M         call    WR_DATA         ; write to LCD
000228 000B               M         tblrd+*                 ; next row in table
00022A 50F5               M         movf    TABLAT, W
00022C E1??               M         bnz     loop
00022E EC?? F???      00510         call        LCD_L2
                      00511         Display     Exe2
  0000                    M         local   loop
000232 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
000234 6EF8               M         movwf   TBLPTRU
000236 0E??               M         movlw   high Exe2       ; Move Table<15:8>
000238 6EF7               M         movwf   TBLPTRH
00023A 0E??               M         movlw   low Exe2        ; Move Table<7:0>
00023C 6EF6               M         movwf   TBLPTRL
00023E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000240 50F5               M         movf    TABLAT, W
000242                    M loop
000242 EC?? F???          M         call    WR_DATA         ; write to LCD
000246 000B               M         tblrd+*                 ; next row in table
000248 50F5               M         movf    TABLAT, W
00024A E1??               M         bnz     loop
                      00512         
                      00513         ; start timer
                      00514         
00024C 0E0B           00515         movlw   0xb
00024E 6ED7           00516         movwf   TMR0H
000250 0EDC           00517         movlw   0xdc
000252 6ED6           00518         movwf   TMR0L
                      00519         
000254 8ED5           00520         bsf         T0CON, TMR0ON                       ; Turn on timer
000256 EC?? F???      00521         call        ClearEEPROM_21
                      00522         
                      00523         ; initialize variables
00025A 6A18           00524         clrf        OP_sec
00025C 6A19           00525         clrf        OP_INT
                      00526 
00025E                00527 HOLD_EXE
00025E EC?? F???      00528         call        READ_KEY
                      00529         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000262 0E0C               M         movlw   keyS                ; poll for mode
000264 6210               M         cpfseq  KEY                 ; check this against key press
000266 EF?? F???          M         goto    Exit
                          M 
00026A                    M Next
00026A 6A89               M         clrf    LATA                ; clear pins before proceeding
00026C 6A8A               M         clrf    LATB
00026E 6A8B               M         clrf    LATC
000270 6A8C               M         clrf    LATD
000272 EF?? F???          M         goto    EXIT_EXE
                          M 
000276                    M Exit
000276 0000               M         nop
000278 D???           00530         bra         HOLD_EXE
                      00531         
00027A                00532 EXIT_EXE
                      00533         WriteEE     OP_sec, H_EE, L_EE
00027A C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00027E C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000282 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000286 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000288 D???               M         bra     $-2
                          M 
00028A 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00028C 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00028E 84A6               M         bsf     EECON1, WREN    ; enable write
000290 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000292 98A1               M         bcf     PIR2, EEIF
                          M 
000294 0E55               M         movlw   0x55
000296 6EA7               M         movwf   EECON2      ; write 55h
000298 0EAA               M         movlw   0xAA
00029A 6EA7               M         movwf   EECON2      ; write 0xAA
00029C 82A6               M         bsf     EECON1, WR          ; begin write
00029E B2A6               M         btfsc   EECON1, WR
0002A0 D???               M         bra     $-2
                          M 
0002A2 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002A4 94A6               M         bcf     EECON1, WREN        ; disable writes
0002A6 2A22           00534         incf        L_EE
                      00535         WriteEE     OP_INT, H_EE, L_EE
0002A8 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0002AC C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0002B0 C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
0002B4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0002B6 D???               M         bra     $-2
                          M 
0002B8 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0002BA 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0002BC 84A6               M         bsf     EECON1, WREN    ; enable write
0002BE 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0002C0 98A1               M         bcf     PIR2, EEIF
                          M 
0002C2 0E55               M         movlw   0x55
0002C4 6EA7               M         movwf   EECON2      ; write 55h
0002C6 0EAA               M         movlw   0xAA
0002C8 6EA7               M         movwf   EECON2      ; write 0xAA
0002CA 82A6               M         bsf     EECON1, WR          ; begin write
0002CC B2A6               M         btfsc   EECON1, WR
0002CE D???               M         bra     $-2
                          M 
0002D0 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002D2 94A6               M         bcf     EECON1, WREN        ; disable writes
0002D4 2A22           00536         incf        L_EE
                      00537         
0002D6 EC?? F???      00538         call        SAVE_TIME
                      00539         
                      00540         ; Clear inExecution flag to stop '*' interrupts
0002DA 6A1F           00541         clrf        inExecution
0002DC EF?? F???      00542         goto        SaveData
                      00543 
0002E0                00544 SaveData
0002E0 EC?? F???      00545         call        ClrLCD
                      00546         Display     SAVE
  0000                    M         local   loop
0002E4 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0002E6 6EF8               M         movwf   TBLPTRU
0002E8 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0002EA 6EF7               M         movwf   TBLPTRH
0002EC 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0002EE 6EF6               M         movwf   TBLPTRL
0002F0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002F2 50F5               M         movf    TABLAT, W
0002F4                    M loop
0002F4 EC?? F???          M         call    WR_DATA         ; write to LCD
0002F8 000B               M         tblrd+*                 ; next row in table
0002FA 50F5               M         movf    TABLAT, W
0002FC E1??               M         bnz     loop
                      00547 
0002FE 0E00           00548         movlw       d'0'
000300 6E21           00549         movwf       H_EE
000302 0EA8           00550         movlw       d'168'              ; take d'168' as last
000304 6E22           00551         movwf       L_EE
000306 0E00           00552         movlw       d'0'
000308 6E24           00553         movwf       tempH_EE
00030A 0EDC           00554         movlw       d'220'              ; temp for low constant
00030C 6E25           00555         movwf       tempL_EE
                      00556         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00030E 6A16           00557         clrf        counter2
000310 6A15           00558         clrf        counter
                      00559 
000312                00560 ShiftLoop
000312 2A15           00561         incf            counter
                      00562         READEE          REG_EE, H_EE, L_EE
000314 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000318 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00031C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00031E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000320 80A6               M         bsf     EECON1, RD          ; read EEPROM
000322 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000326 0E15           00563         movlw           d'21'
000328 2622           00564         addwf           L_EE
                      00565         WriteEE         REG_EE, H_EE, L_EE
00032A C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00032E C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000332 C023 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
000336 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000338 D???               M         bra     $-2
                          M 
00033A 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00033C 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00033E 84A6               M         bsf     EECON1, WREN    ; enable write
000340 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000342 98A1               M         bcf     PIR2, EEIF
                          M 
000344 0E55               M         movlw   0x55
000346 6EA7               M         movwf   EECON2      ; write 55h
000348 0EAA               M         movlw   0xAA
00034A 6EA7               M         movwf   EECON2      ; write 0xAA
00034C 82A6               M         bsf     EECON1, WR          ; begin write
00034E B2A6               M         btfsc   EECON1, WR
000350 D???               M         bra     $-2
                          M 
000352 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000354 94A6               M         bcf     EECON1, WREN        ; disable writes
000356 0E14           00566         movlw           d'20'
000358 5E22           00567         subwf           L_EE
00035A 0E15           00568         movlw           d'21'
00035C 6215           00569         cpfseq          counter
00035E EF?? F???      00570         goto            ShiftLoop
                      00571         
                      00572         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
000362 0E2A           00573         movlw           d'42'
000364 5E22           00574         subwf           L_EE
000366 0EDC           00575         movlw           d'220'
000368 6E25           00576         movwf           tempL_EE
00036A 6A15           00577         clrf            counter
00036C 2A16           00578         incf            counter2
00036E 0E09           00579         movlw           d'9'
000370 6216           00580         cpfseq          counter2        ; Skip if 9 shifts were made
000372 EF?? F???      00581         goto            ShiftLoop
                      00582         
                      00583         ; Finish Saving Data
                      00584         ; Stop Timer and goto logs
000376 9ED5           00585         bcf             T0CON, TMR0ON
000378 0E09           00586         movlw           d'9'
00037A 6E22           00587         movwf           L_EE
                      00588         WriteEE         OP_sec, H_EE, L_EE
00037C C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000380 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000384 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000388 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00038A D???               M         bra     $-2
                          M 
00038C 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00038E 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000390 84A6               M         bsf     EECON1, WREN    ; enable write
000392 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000394 98A1               M         bcf     PIR2, EEIF
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000396 0E55               M         movlw   0x55
000398 6EA7               M         movwf   EECON2      ; write 55h
00039A 0EAA               M         movlw   0xAA
00039C 6EA7               M         movwf   EECON2      ; write 0xAA
00039E 82A6               M         bsf     EECON1, WR          ; begin write
0003A0 B2A6               M         btfsc   EECON1, WR
0003A2 D???               M         bra     $-2
                          M 
0003A4 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0003A6 94A6               M         bcf     EECON1, WREN        ; disable writes
0003A8 2A22           00589         incf            L_EE
                      00590         WriteEE         OP_INT, H_EE, L_EE
0003AA C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0003AE C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0003B2 C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
0003B6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0003B8 D???               M         bra     $-2
                          M 
0003BA 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0003BC 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0003BE 84A6               M         bsf     EECON1, WREN    ; enable write
0003C0 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0003C2 98A1               M         bcf     PIR2, EEIF
                          M 
0003C4 0E55               M         movlw   0x55
0003C6 6EA7               M         movwf   EECON2      ; write 55h
0003C8 0EAA               M         movlw   0xAA
0003CA 6EA7               M         movwf   EECON2      ; write 0xAA
0003CC 82A6               M         bsf     EECON1, WR          ; begin write
0003CE B2A6               M         btfsc   EECON1, WR
0003D0 D???               M         bra     $-2
                          M 
0003D2 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0003D4 94A6               M         bcf     EECON1, WREN        ; disable writes
0003D6 2A22           00591         incf            L_EE
0003D8 EF?? F???      00592         goto            LOG
                      00593 
                      00594 ;*******************************************************************************
                      00595 ; sorting statistics log mode
                      00596 ;*******************************************************************************
                      00597         
0003DC                00598 LOG
0003DC EC?? F???      00599         call    ClrLCD
                      00600         Display Log1
  0000                    M         local   loop
0003E0 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0003E2 6EF8               M         movwf   TBLPTRU
0003E4 0E??               M         movlw   high Log1       ; Move Table<15:8>
0003E6 6EF7               M         movwf   TBLPTRH
0003E8 0E??               M         movlw   low Log1        ; Move Table<7:0>
0003EA 6EF6               M         movwf   TBLPTRL
0003EC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003EE 50F5               M         movf    TABLAT, W
0003F0                    M loop
0003F0 EC?? F???          M         call    WR_DATA         ; write to LCD
0003F4 000B               M         tblrd+*                 ; next row in table
0003F6 50F5               M         movf    TABLAT, W
0003F8 E1??               M         bnz     loop
                      00601 
                      00602         ; display most recent run data
0003FA 0E09           00603         movlw   d'9'
0003FC 6E22           00604         movwf   L_EE
                      00605         READEE  OP_sec, H_EE, L_EE
0003FE C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000402 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000406 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000408 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00040A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00040C CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000410 2A22           00606         incf    L_EE
                      00607         READEE  OP_INT, H_EE, L_EE
000412 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000416 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00041A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00041C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00041E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000420 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000424 2A22           00608         incf    L_EE
000426 EC?? F???      00609         call    DisplayTime
                      00610 
00042A EC?? F???      00611         call    LCD_L2
00042E 6A22           00612         clrf    L_EE
000430 EC?? F???      00613         call    DispOpRTC
                      00614 
000434                00615 HOLD_LOG
000434 EC?? F???      00616         call    READ_KEY
                      00617         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000438 0E07               M         movlw   keyB                ; poll for mode
00043A 6210               M         cpfseq  KEY                 ; check this against key press
00043C EF?? F???          M         goto    Exit
                          M 
000440                    M Next
000440 6A89               M         clrf    LATA                ; clear pins before proceeding
000442 6A8A               M         clrf    LATB
000444 6A8B               M         clrf    LATC
000446 6A8C               M         clrf    LATD
000448 EF?? F???          M         goto    LOG_INFO
                          M 
00044C                    M Exit
00044C 0000               M         nop
                      00618         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00044E 0E0D               M         movlw   key0                ; poll for mode
000450 6210               M         cpfseq  KEY                 ; check this against key press
000452 EF?? F???          M         goto    Exit
                          M 
000456                    M Next
000456 6A89               M         clrf    LATA                ; clear pins before proceeding
000458 6A8A               M         clrf    LATB
00045A 6A8B               M         clrf    LATC
00045C 6A8C               M         clrf    LATD
00045E EF?? F???          M         goto    STANDBY
                          M 
000462                    M Exit
000462 0000               M         nop
000464 D???           00619         bra     HOLD_LOG
                      00620 
000466                00621 LOG_INFO
000466 EC?? F???      00622         call    ClrLCD
                      00623         Display LogInfo1
  0000                    M         local   loop
00046A 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
00046C 6EF8               M         movwf   TBLPTRU
00046E 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000470 6EF7               M         movwf   TBLPTRH
000472 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000474 6EF6               M         movwf   TBLPTRL
000476 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000478 50F5               M         movf    TABLAT, W
00047A                    M loop
00047A EC?? F???          M         call    WR_DATA         ; write to LCD
00047E 000B               M         tblrd+*                 ; next row in table
000480 50F5               M         movf    TABLAT, W
000482 E1??               M         bnz     loop
000484 EC?? F???      00624         call    LCD_L2
                      00625         Display LogInfo2
  0000                    M         local   loop
000488 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00048A 6EF8               M         movwf   TBLPTRU
00048C 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00048E 6EF7               M         movwf   TBLPTRH
000490 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000492 6EF6               M         movwf   TBLPTRL
000494 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000496 50F5               M         movf    TABLAT, W
000498                    M loop
000498 EC?? F???          M         call    WR_DATA         ; write to LCD
00049C 000B               M         tblrd+*                 ; next row in table
00049E 50F5               M         movf    TABLAT, W
0004A0 E1??               M         bnz     loop
0004A2 6A21           00626         clrf    H_EE
0004A4 6A22           00627         clrf    L_EE
                      00628         DisplayLog  H_EE, L_EE
  0000                    M             local   Again, Finish
                          M             
0004A6 6A33               M             clrf    SkipCount
0004A8 6A27               M             clrf    MAX_EE
                          M 
                          M             ; Check if there is No Data first
                          M             READEE      REG_EE, H_EE,  L_EE
0004AA C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004AE C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0004B2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004B4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004B6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004B8 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0004BC 0EFF               M             movlw       0xFF
0004BE 6223               M             cpfseq      REG_EE
0004C0 EF?? F???          M             goto        Again
                          M             Display     NoData
  0000                    M         local   loop
0004C4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0004C6 6EF8               M         movwf   TBLPTRU
0004C8 0E??               M         movlw   high NoData     ; Move Table<15:8>
0004CA 6EF7               M         movwf   TBLPTRH
0004CC 0E??               M         movlw   low NoData      ; Move Table<7:0>
0004CE 6EF6               M         movwf   TBLPTRL
0004D0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004D2 50F5               M         movf    TABLAT, W
0004D4                    M loop
0004D4 EC?? F???          M         call    WR_DATA         ; write to LCD
0004D8 000B               M         tblrd+*                 ; next row in table
0004DA 50F5               M         movf    TABLAT, W
0004DC E1??               M         bnz     loop
0004DE EF?? F???          M             goto        Finish
0004E2                    M Again
                          M             ; Put a space every 3 Writes
0004E2 0E03               M             movlw       d'3'
0004E4 6033               M             cpfslt      SkipCount
0004E6 6027               M             cpfslt      MAX_EE
0004E8 EF?? F???          M             goto        Finish
                          M 
                          M             ; read EEPROM
                          M             READEE      REG_EE, H_EE,  L_EE
0004EC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004F0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0004F4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004F6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004F8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004FA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0004FE BE23               M             btfsc       REG_EE, 7       ; if bit 7 set then done
000500 EF?? F???          M             goto        Finish
000504                    M Finish
000504                00629 HOLD_LOG_INFO
000504 EC?? F???      00630         call    READ_KEY
                      00631         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000508 0E0D               M         movlw   key0                ; poll for mode
00050A 6210               M         cpfseq  KEY                 ; check this against key press
00050C EF?? F???          M         goto    Exit
                          M 
000510                    M Next
000510 6A89               M         clrf    LATA                ; clear pins before proceeding
000512 6A8A               M         clrf    LATB
000514 6A8B               M         clrf    LATC
000516 6A8C               M         clrf    LATD
000518 EF?? F???          M         goto    LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00051C                    M Exit
00051C 0000               M         nop
00051E D???           00632         bra     HOLD_LOG
                      00633         
                      00634 ;*******************************************************************************
                      00635 ; permanent logs
                      00636 ;*******************************************************************************
                      00637 
000520                00638 PERM_LOG
000520 EC?? F???      00639         call    ClrLCD
                      00640         Display PermLog1
  0000                    M         local   loop
000524 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000526 6EF8               M         movwf   TBLPTRU
000528 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00052A 6EF7               M         movwf   TBLPTRH
00052C 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00052E 6EF6               M         movwf   TBLPTRL
000530 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000532 50F5               M         movf    TABLAT, W
000534                    M loop
000534 EC?? F???          M         call    WR_DATA         ; write to LCD
000538 000B               M         tblrd+*                 ; next row in table
00053A 50F5               M         movf    TABLAT, W
00053C E1??               M         bnz     loop
00053E EC?? F???      00641         call    LCD_L2
                      00642         Display PermLog2
  0000                    M         local   loop
000542 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000544 6EF8               M         movwf   TBLPTRU
000546 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000548 6EF7               M         movwf   TBLPTRH
00054A 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
00054C 6EF6               M         movwf   TBLPTRL
00054E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000550 50F5               M         movf    TABLAT, W
000552                    M loop
000552 EC?? F???          M         call    WR_DATA         ; write to LCD
000556 000B               M         tblrd+*                 ; next row in table
000558 50F5               M         movf    TABLAT, W
00055A E1??               M         bnz     loop
                      00643         
00055C                00644 HOLD_PERM_LOG
00055C EC?? F???      00645         call    READ_KEY
                      00646         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000560 0E0D               M         movlw   key0                ; poll for mode
000562 6210               M         cpfseq  KEY                 ; check this against key press
000564 EF?? F???          M         goto    Exit
                          M 
000568                    M Next
000568 6A89               M         clrf    LATA                ; clear pins before proceeding
00056A 6A8A               M         clrf    LATB
00056C 6A8B               M         clrf    LATC
00056E 6A8C               M         clrf    LATD
000570 EF?? F???          M         goto    STANDBY
                          M 
000574                    M Exit
000574 0000               M         nop
                      00647         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000576 0E00               M         movlw   key1                ; poll for mode
000578 6210               M         cpfseq  KEY                 ; check this against key press
00057A EF?? F???          M         goto    Exit
                          M 
00057E                    M Next
00057E 6A89               M         clrf    LATA                ; clear pins before proceeding
000580 6A8A               M         clrf    LATB
000582 6A8B               M         clrf    LATC
000584 6A8C               M         clrf    LATD
000586 EF?? F???          M         goto    PLOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00058A                    M Exit
00058A 0000               M         nop
                      00648         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00058C 0E01               M         movlw   key2                ; poll for mode
00058E 6210               M         cpfseq  KEY                 ; check this against key press
000590 EF?? F???          M         goto    Exit
                          M 
000594                    M Next
000594 6A89               M         clrf    LATA                ; clear pins before proceeding
000596 6A8A               M         clrf    LATB
000598 6A8B               M         clrf    LATC
00059A 6A8C               M         clrf    LATD
00059C EF?? F???          M         goto    PLOG
                          M 
0005A0                    M Exit
0005A0 0000               M         nop
                      00649         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0005A2 0E02               M         movlw   key3                ; poll for mode
0005A4 6210               M         cpfseq  KEY                 ; check this against key press
0005A6 EF?? F???          M         goto    Exit
                          M 
0005AA                    M Next
0005AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0005AC 6A8A               M         clrf    LATB
0005AE 6A8B               M         clrf    LATC
0005B0 6A8C               M         clrf    LATD
0005B2 EF?? F???          M         goto    PLOG
                          M 
0005B6                    M Exit
0005B6 0000               M         nop
                      00650         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0005B8 0E04               M         movlw   key4                ; poll for mode
0005BA 6210               M         cpfseq  KEY                 ; check this against key press
0005BC EF?? F???          M         goto    Exit
                          M 
0005C0                    M Next
0005C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005C2 6A8A               M         clrf    LATB
0005C4 6A8B               M         clrf    LATC
0005C6 6A8C               M         clrf    LATD
0005C8 EF?? F???          M         goto    PLOG
                          M 
0005CC                    M Exit
0005CC 0000               M         nop
                      00651         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0005CE 0E05               M         movlw   key5                ; poll for mode
0005D0 6210               M         cpfseq  KEY                 ; check this against key press
0005D2 EF?? F???          M         goto    Exit
                          M 
0005D6                    M Next
0005D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0005D8 6A8A               M         clrf    LATB
0005DA 6A8B               M         clrf    LATC
0005DC 6A8C               M         clrf    LATD
0005DE EF?? F???          M         goto    PLOG
                          M 
0005E2                    M Exit
0005E2 0000               M         nop
                      00652         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0005E4 0E06               M         movlw   key6                ; poll for mode
0005E6 6210               M         cpfseq  KEY                 ; check this against key press
0005E8 EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005EC                    M Next
0005EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0005EE 6A8A               M         clrf    LATB
0005F0 6A8B               M         clrf    LATC
0005F2 6A8C               M         clrf    LATD
0005F4 EF?? F???          M         goto    PLOG
                          M 
0005F8                    M Exit
0005F8 0000               M         nop
                      00653         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0005FA 0E08               M         movlw   key7                ; poll for mode
0005FC 6210               M         cpfseq  KEY                 ; check this against key press
0005FE EF?? F???          M         goto    Exit
                          M 
000602                    M Next
000602 6A89               M         clrf    LATA                ; clear pins before proceeding
000604 6A8A               M         clrf    LATB
000606 6A8B               M         clrf    LATC
000608 6A8C               M         clrf    LATD
00060A EF?? F???          M         goto    PLOG
                          M 
00060E                    M Exit
00060E 0000               M         nop
                      00654         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000610 0E09               M         movlw   key8                ; poll for mode
000612 6210               M         cpfseq  KEY                 ; check this against key press
000614 EF?? F???          M         goto    Exit
                          M 
000618                    M Next
000618 6A89               M         clrf    LATA                ; clear pins before proceeding
00061A 6A8A               M         clrf    LATB
00061C 6A8B               M         clrf    LATC
00061E 6A8C               M         clrf    LATD
000620 EF?? F???          M         goto    PLOG
                          M 
000624                    M Exit
000624 0000               M         nop
                      00655         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000626 0E0A               M         movlw   key9                ; poll for mode
000628 6210               M         cpfseq  KEY                 ; check this against key press
00062A EF?? F???          M         goto    Exit
                          M 
00062E                    M Next
00062E 6A89               M         clrf    LATA                ; clear pins before proceeding
000630 6A8A               M         clrf    LATB
000632 6A8B               M         clrf    LATC
000634 6A8C               M         clrf    LATD
000636 EF?? F???          M         goto    PLOG
                          M 
00063A                    M Exit
00063A 0000               M         nop
00063C D???           00656         bra HOLD_PERM_LOG
                      00657         
00063E                00658 PLOG
00063E EC?? F???      00659         call    ClrLCD
                      00660         Display PermLog1
  0000                    M         local   loop
000642 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000644 6EF8               M         movwf   TBLPTRU
000646 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000648 6EF7               M         movwf   TBLPTRH
00064A 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00064C 6EF6               M         movwf   TBLPTRL
00064E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000650 50F5               M         movf    TABLAT, W
000652                    M loop
000652 EC?? F???          M         call    WR_DATA         ; write to LCD
000656 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000658 50F5               M         movf    TABLAT, W
00065A E1??               M         bnz     loop
                      00661         
                      00662         ; find the key press value
00065C C010 FFE8      00663         movff   KEY, WREG
000660 2AE8           00664         incf    WREG        ; W = KEY+1
000662 6E17           00665         movwf   temp
                      00666         
000664 42E8           00667         rrncf   WREG        ; division by 4
000666 9EE8           00668         bcf     WREG, 7     ; clear last bit, overflow from rotate
000668 42E8           00669         rrncf   WREG        
00066A 9EE8           00670         bcf     WREG, 7
00066C 5E17           00671         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00066E C017 FFE8      00672         movff   temp, WREG
000672 C017 F011      00673         movff   temp, temp_KEY
000676 0D15           00674         mullw   d'21'       ; indexed as mutliples of 21
                      00675 
000678                00676 displayNum
000678 C011 FFE8      00677         movff   temp_KEY, WREG
00067C 0F30           00678         addlw   0x30
00067E EC?? F???      00679         call    WR_DATA
000682 0E3A           00680         movlw   ":"
000684 EC?? F???      00681         call    WR_DATA
000688 0E20           00682         movlw   " "
00068A EC?? F???      00683         call    WR_DATA
                      00684         
00068E CFF3 F022      00685         movff   PRODL, L_EE
000692 0E00           00686         movlw   d'0'
000694 2622           00687         addwf   L_EE
                      00688         READEE  OP_sec, H_EE, L_EE
000696 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00069A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00069E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006A0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0006A2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0006A4 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0006A8 2A22           00689         incf    L_EE
                      00690         READEE  OP_INT, H_EE, L_EE
0006AA C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0006AE C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0006B2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006B4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0006B6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0006B8 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0006BC 2A22           00691         incf    L_EE
0006BE EC?? F???      00692         call    DisplayTime
0006C2 CFF3 F022      00693         movff   PRODL, L_EE
                      00694         
                      00695         ; reset eeprom to beginning
0006C6 EC?? F???      00696         call    LCD_L2
0006CA CFF3 F022      00697         movff   PRODL, L_EE
0006CE EC?? F???      00698         call    DispOpRTC
                      00699         
0006D2                00700 HOLD_PLOG
0006D2 EC?? F???      00701         call    READ_KEY
                      00702         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0006D6 0E0D               M         movlw   key0                ; poll for mode
0006D8 6210               M         cpfseq  KEY                 ; check this against key press
0006DA EF?? F???          M         goto    Exit
                          M 
0006DE                    M Next
0006DE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E0 6A8A               M         clrf    LATB
0006E2 6A8B               M         clrf    LATC
0006E4 6A8C               M         clrf    LATD
0006E6 EF?? F???          M         goto    PERM_LOG
                          M 
0006EA                    M Exit
0006EA 0000               M         nop
0006EC D???           00703         bra HOLD_PERM_LOG
                      00704         
                      00705 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00706 ; pc interface
                      00707 ;*******************************************************************************
                      00708 
0006EE                00709 PC_MODE
0006EE EC?? F???      00710         call    ClrLCD
                      00711         Display PC1
  0000                    M         local   loop
0006F2 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0006F4 6EF8               M         movwf   TBLPTRU
0006F6 0E??               M         movlw   high PC1        ; Move Table<15:8>
0006F8 6EF7               M         movwf   TBLPTRH
0006FA 0E??               M         movlw   low PC1         ; Move Table<7:0>
0006FC 6EF6               M         movwf   TBLPTRL
0006FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000700 50F5               M         movf    TABLAT, W
000702                    M loop
000702 EC?? F???          M         call    WR_DATA         ; write to LCD
000706 000B               M         tblrd+*                 ; next row in table
000708 50F5               M         movf    TABLAT, W
00070A E1??               M         bnz     loop
00070C EC?? F???      00712         call    LCD_L2
                      00713         Display PC2
  0000                    M         local   loop
000710 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000712 6EF8               M         movwf   TBLPTRU
000714 0E??               M         movlw   high PC2        ; Move Table<15:8>
000716 6EF7               M         movwf   TBLPTRH
000718 0E??               M         movlw   low PC2         ; Move Table<7:0>
00071A 6EF6               M         movwf   TBLPTRL
00071C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00071E 50F5               M         movf    TABLAT, W
000720                    M loop
000720 EC?? F???          M         call    WR_DATA         ; write to LCD
000724 000B               M         tblrd+*                 ; next row in table
000726 50F5               M         movf    TABLAT, W
000728 E1??               M         bnz     loop
00072A CFF9 F03A      00714         movff   PCL, PC_PCL
00072E CFFA F03B      00715         movff   PCLATH, PC_PCLATH
000732 CFFB F03C      00716         movff   PCLATU, PC_PCLATU
                      00717         
000736                00718 HOLD_PC
000736 EC?? F???      00719         call    READ_KEY
                      00720         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00073A 0E0D               M         movlw   key0                ; poll for mode
00073C 6210               M         cpfseq  KEY                 ; check this against key press
00073E EF?? F???          M         goto    Exit
                          M 
000742                    M Next
000742 6A89               M         clrf    LATA                ; clear pins before proceeding
000744 6A8A               M         clrf    LATB
000746 6A8B               M         clrf    LATC
000748 6A8C               M         clrf    LATD
00074A EF?? F???          M         goto    STANDBY
                          M 
00074E                    M Exit
00074E 0000               M         nop
                      00721         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000750 0E0E               M         movlw   keyH                ; poll for mode
000752 6210               M         cpfseq  KEY                 ; check this against key press
000754 EF?? F???          M         goto    Exit
                          M 
000758                    M Next
000758 6A89               M         clrf    LATA                ; clear pins before proceeding
00075A 6A8A               M         clrf    LATB
00075C 6A8B               M         clrf    LATC
00075E 6A8C               M         clrf    LATD
000760 EF?? F???          M         goto    PC_TRANSFER
                          M 
000764                    M Exit
000764 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000766 D???           00722         bra     HOLD_PC
                      00723 
000768                00724 PC_TRANSFER
000768 6839           00725         setf    transferring
00076A EC?? F???      00726         call    ClrLCD
                      00727         Display PCTransfer
  0000                    M         local   loop
00076E 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000770 6EF8               M         movwf   TBLPTRU
000772 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000774 6EF7               M         movwf   TBLPTRH
000776 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000778 6EF6               M         movwf   TBLPTRL
00077A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00077C 50F5               M         movf    TABLAT, W
00077E                    M loop
00077E EC?? F???          M         call    WR_DATA         ; write to LCD
000782 000B               M         tblrd+*                 ; next row in table
000784 50F5               M         movf    TABLAT, W
000786 E1??               M         bnz     loop
                      00728         ;call   DataUSART
000788 6A39           00729         clrf    transferring
00078A D???           00730         bra     HOLD_PC
                      00731         
                      00732 ;*******************************************************************************
                      00733 ; subroutines
                      00734 ;*******************************************************************************
                      00735 
00078C                00736 RTC_INIT
                      00737         ; set sda and scl to high-z
00078C 9882           00738         bcf     PORTC, 4
00078E 9682           00739         bcf     PORTC, 3
000790 8894           00740         bsf     TRISC, 4
000792 8694           00741         bsf     TRISC, 3
                      00742 
000794 EC?? F???      00743         call    i2c_common_setup
                      00744         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000798 0012           00745 return
                      00746         
00079A                00747 SAVE_TIME   
                      00748         rtc_read    0x02        ; hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
00079A 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
00079C 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00079E EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007A2 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007A4 EC?? F???          M call rtc_convert
0007A8 EC?? F???      00749         call    WriteEE_RTC
                      00750         rtc_read    0x01        ; minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007AC 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
0007AE 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007B0 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007B4 50??               M movf datachar,w
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (call)
0007B6 EC?? F???          M call rtc_convert
0007BA EC?? F???      00751         call    WriteEE_RTC
                      00752         rtc_read    0x06        ; years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007BE 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
0007C0 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007C2 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007C6 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007C8 EC?? F???          M call rtc_convert
0007CC EC?? F???      00753         call    WriteEE_RTC
                      00754         rtc_read    0x05        ; months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007D0 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
0007D2 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007D4 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007D8 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007DA EC?? F???          M call rtc_convert
0007DE EC?? F???      00755         call    WriteEE_RTC
                      00756         rtc_read    0x04        ; days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007E2 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
0007E4 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007E6 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007EA 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007EC EC?? F???          M call rtc_convert
0007F0 EC?? F???      00757         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0007F4 0012           00758 return
                      00759                 
0007F6                00760 DISPLAY_RTC
                      00761         
                      00762         ; display data in this format hh/minmin/yy yy/mm/dd
                      00763         rtc_read    0x02            ; 0x02 from DS1307 - hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0007F6 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
0007F8 6E??               M movwf regaddress
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (call)
0007FA EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007FE 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000800 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000804 5000           00764         movf    tens_digit,WREG
000806 EC?? F???      00765         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00080A 5000           00766         movf    ones_digit,WREG
00080C EC?? F???      00767         call    WR_DATA
000810 0E68           00768         movlw   "h"
000812 EC?? F???      00769         call    WR_DATA
                      00770         
                      00771         rtc_read    0x01            ; 0x01 from DS1307 - minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000816 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
000818 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00081A EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00081E 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000820 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000824 5000           00772         movf    tens_digit,WREG
000826 EC?? F???      00773         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00082A 5000           00774         movf    ones_digit,WREG
00082C EC?? F???      00775         call    WR_DATA
000830 0E20           00776         movlw   " "
000832 EC?? F???      00777         call    WR_DATA
                      00778         
                      00779         rtc_read    0x06            ; 0x06 from DS1307 - years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000836 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
000838 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00083A EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00083E 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000840 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000844 5000           00780         movf    tens_digit,WREG
000846 EC?? F???      00781         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00084A 5000           00782         movf    ones_digit,WREG
00084C EC?? F???      00783         call    WR_DATA
000850 0E2F           00784         movlw   "/"
000852 EC?? F???      00785         call    WR_DATA
                      00786         
                      00787         rtc_read    0x05            ; 0x06 from DS1307 - months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (movlw)
000856 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
000858 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00085A EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00085E 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000860 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000864 5000           00788         movf    tens_digit,WREG
000866 EC?? F???      00789         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00086A 5000           00790         movf    ones_digit,WREG
00086C EC?? F???      00791         call    WR_DATA
000870 0E2F           00792         movlw   "/"
000872 EC?? F???      00793         call    WR_DATA
                      00794         
                      00795         rtc_read    0x04            ; 0x06 from DS1307 - days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000876 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
000878 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00087A EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00087E 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000880 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000884 5000           00796         movf    tens_digit,WREG
000886 EC?? F???      00797         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
00088A 5000           00798         movf    ones_digit,WREG
00088C EC?? F???      00799         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000890 0012           00800 return
                      00801         
000892                00802 SET_TIME
                      00803         rtc_resetAll
                          M ;input: none
                          M ;output: none
                          M ;desc: Resets all the time keeping registers on the RTC to zero
                          M 
Warning[203]: Found opcode in column 1. (clrf)
000892 6A??               M clrf databyte
Warning[203]: Found opcode in column 1. (movlw)
000894 0E06               M movlw 6
Warning[203]: Found opcode in column 1. (movwf)
000896 6E??               M movwf regaddress ;start at 6 and go down, and set all to 0
                          M 
000898                    M del_loop0
Warning[203]: Found opcode in column 1. (call)
000898 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (decfsz)
00089C 2E??               M decfsz regaddress
Warning[203]: Found opcode in column 1. (bra)
00089E D???               M bra del_loop0
Warning[203]: Found opcode in column 1. (call)
0008A0 EC?? F???          M call write_rtc ;sets registers 0-6 to zero
  00000001                M _loopknt set _loopknt+1
                      00804         
                      00805         rtc_set 0x00,   b'10000000'
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0008A4 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
0008A6 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0008A8 0E80               M movlw b'10000000'
Warning[203]: Found opcode in column 1. (movwf)
0008AA 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0008AC EC?? F???          M call write_rtc
                      00806 
                      00807         rtc_set 0x06,   b'00010111'             ; Year 17
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0008B0 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
0008B2 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0008B4 0E17               M movlw b'00010111'
Warning[203]: Found opcode in column 1. (movwf)
0008B6 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0008B8 EC?? F???          M call write_rtc
                      00808         rtc_set 0x05,   b'00000010'             ; Month 2
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0008BC 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
0008BE 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0008C0 0E02               M movlw b'00000010'
Warning[203]: Found opcode in column 1. (movwf)
0008C2 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0008C4 EC?? F???          M call write_rtc
                      00809         rtc_set 0x04,   b'00010010'             ; Date 12
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0008C8 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
0008CA 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0008CC 0E12               M movlw b'00010010'
Warning[203]: Found opcode in column 1. (movwf)
0008CE 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0008D0 EC?? F???          M call write_rtc
                      00810         rtc_set 0x02,   b'00010011'             ; Hours 13
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0008D4 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008D6 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0008D8 0E13               M movlw b'00010011'
Warning[203]: Found opcode in column 1. (movwf)
0008DA 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0008DC EC?? F???          M call write_rtc
                      00811         rtc_set 0x01,   b'01000111'             ; Minutes 45
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0008E0 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
0008E2 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0008E4 0E47               M movlw b'01000111'
Warning[203]: Found opcode in column 1. (movwf)
0008E6 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0008E8 EC?? F???          M call write_rtc
                      00812         rtc_set 0x00,   b'00000000'             ; Seconds 0
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0008EC 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
0008EE 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0008F0 0E00               M movlw b'00000000'
Warning[203]: Found opcode in column 1. (movwf)
0008F2 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0008F4 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (return)
0008F8 0012           00813 return
                      00814         
0008FA                00815 INIT_USART
0008FA 0E0F           00816         movlw   15      ; baud rate 9600
0008FC 6EAF           00817         movwf   SPBRG
0008FE 6AAC           00818         clrf    TXSTA
                      00819         
000900 6AAB           00820         clrf    RCSTA
000902 8EAB           00821         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000904 88AB           00822         bsf     RCSTA,CREN      ; continous receive
                      00823         
000906 8AAC           00824         bsf     TXSTA, TXEN     ; transmit enabled
000908 0012           00825         return
                      00826 
                      00827 ;DataUSART
                      00828 ;       
                      00829 ;       movlw   0x02
                      00830 ;       call    USART_WAIT
                      00831 ;       movlw   0x0D
                      00832 ;       call    USART_WAIT
                      00833 ;       
                      00834 ;       movlw   d'21'       ; start of permanent logs
                      00835 ;       movff   w, L_EE
                      00836 ;       TransferTable   PCLog1
                      00837 ;       
                      00838 ;       ; display time here
                      00839 ;;      rtc_read        0x02
                      00840 ;;              movf        tens_digit, W
                      00841 ;;        andlw       b'00000001'
                      00842 ;;        addlw       0x30
                      00843 ;;        call        TransmitWaitUSART
                      00844 ;;        movf        ones_digit, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00845 ;;        call        TransmitWaitUSART
                      00846 ;;              movlw           ":"
                      00847 ;;              call            TransmitWaitUSART
                      00848 ;;              ; Dispay minutes
                      00849 ;;              rtc_read        0x01
                      00850 ;;              call        SendRTC_USART
                      00851 ;;              ; Dispay AM/PM
                      00852 ;;              rtc_read        0x02
                      00853 ;;        movlw       "P"
                      00854 ;;        btfss       tens_digit, 1
                      00855 ;;        movlw       "A"
                      00856 ;;        call        TransmitWaitUSART
                      00857 ;;        movlw       "M"
                      00858 ;;        call        TransmitWaitUSART
                      00859 ;;              movlw           " "
                      00860 ;;        call        TransmitWaitUSART
                      00861 ;;              ; Display month
                      00862 ;;              rtc_read        0x05
                      00863 ;;              call        SendRTC_USART
                      00864 ;;              movlw           0x2F            ; ASCII '/'
                      00865 ;;              call            TransmitWaitUSART
                      00866 ;;              ; Display day
                      00867 ;;              rtc_read        0x04
                      00868 ;;              call        SendRTC_USART
                      00869 ;;              movlw           0x2F            ; ASCII '/'
                      00870 ;;              call            TransmitWaitUSART
                      00871 ;;              ; Display year
                      00872 ;;              rtc_read        0x06
                      00873 ;;              call        SendRTC_USART
                      00874 ;       
                      00875 ;       call    USART_LINE
                      00876 ;       call    USART_LINE
                      00877 ;       
                      00878 ;       clrf    counter
                      00879 ;       incf    counter
                      00880 ;
                      00881 ;USART_TRANSFER
                      00882 ;       movlw   d'21'
                      00883 ;       mulwf   counter
                      00884 ;       movff   PRODL, L_EE
                      00885 ;       movlw   d'9'
                      00886 ;       addwf   L_EE
                      00887 ;       READEE  OP_sec, H_EE, L_EE
                      00888 ;       incf    L_EE
                      00889 ;       READEE  OP_INT, H_EE, L_EE
                      00890 ;       incf    L_EE
                      00891 ;       ; call  TransferTime
                      00892 ;       
                      00893 ;       ; send rtc
                      00894 ;       movlw   0x09
                      00895 ;       call    USART_WAIT
                      00896 ;       movff   PRODL, L_EE
                      00897 ;       ;call   TransferRTC
                      00898 ;       call    USART_LINE
                      00899 ;       
                      00900 ;       
                      00901 ;       
                      00902 ;       
                      00903 ;USART_WAIT
                      00904 ;       movwf   TXREG
                      00905 ;       btfss   TXSTA,1
                      00906 ;       goto    $-2
                      00907 ;       return
                      00908 ;
                      00909 ;USART_LINE
                      00910 ;       movlw   0x0A
                      00911 ;       call    USART_WAIT
                      00912 ;       movlw   0x0D
                      00913 ;       call    USART_WAIT
                      00914 ;       return
                      00915         
                      00916         
00090A                00917 Delay5us
00090A 0E78           00918         movlw   d'120'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00090C 6E1C           00919         movwf   d5us
                      00920 
00090E                00921 loop5us
00090E 2E1C           00922         decfsz  d5us
000910 EF?? F???      00923         goto    loop5us
000914 0000           00924         nop
000916 0012           00925         return
                      00926 
000918                00927 Delay200us
000918 0EA4           00928         movlw   0xA4
00091A 6E1D           00929         movwf   d200us
                      00930 
00091C                00931 loop200us
00091C 2E1D           00932         decfsz  d200us
00091E EF?? F???      00933         goto    loop200us
000922 0000           00934         nop
000924 0012           00935         return
                      00936 
000926                00937 Delay50ms
000926 0EF9           00938         movlw   0xF9
000928 6E1E           00939         movwf   d50ms
                      00940 
00092A                00941 loop50ms
00092A EC?? F???      00942         call    Delay200us
00092E 2E1E           00943         decfsz  d50ms
                      00944 
000930                00945 Cycles
000930 EF?? F???      00946         goto    loop50ms
000934 EC?? F???      00947         call    Delay200us
000938 0012           00948         return
                      00949 
00093A                00950 WriteEE_RTC
                      00951         WriteEE tens_digit, H_EE, L_EE
00093A C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00093E C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000942 C??? FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
000946 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000948 D???               M         bra     $-2
                          M 
00094A 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00094C 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00094E 84A6               M         bsf     EECON1, WREN    ; enable write
000950 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000952 98A1               M         bcf     PIR2, EEIF
                          M 
000954 0E55               M         movlw   0x55
000956 6EA7               M         movwf   EECON2      ; write 55h
000958 0EAA               M         movlw   0xAA
00095A 6EA7               M         movwf   EECON2      ; write 0xAA
00095C 82A6               M         bsf     EECON1, WR          ; begin write
00095E B2A6               M         btfsc   EECON1, WR
000960 D???               M         bra     $-2
                          M 
000962 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000964 94A6               M         bcf     EECON1, WREN        ; disable writes
000966 2A22           00952         incf    L_EE
                      00953         WriteEE ones_digit, H_EE, L_EE
000968 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00096C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000970 C??? FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
000974 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000976 D???               M         bra     $-2
                          M 
000978 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00097A 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00097C 84A6               M         bsf     EECON1, WREN    ; enable write
00097E 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000980 98A1               M         bcf     PIR2, EEIF
                          M 
000982 0E55               M         movlw   0x55
000984 6EA7               M         movwf   EECON2      ; write 55h
000986 0EAA               M         movlw   0xAA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000988 6EA7               M         movwf   EECON2      ; write 0xAA
00098A 82A6               M         bsf     EECON1, WR          ; begin write
00098C B2A6               M         btfsc   EECON1, WR
00098E D???               M         bra     $-2
                          M 
000990 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000992 94A6               M         bcf     EECON1, WREN        ; disable writes
000994 2A22           00954         incf    L_EE
000996 0012           00955         return
                      00956 
000998                00957 ClearEEPROM_21
000998 6A21           00958         clrf    H_EE
00099A 6A22           00959         clrf    L_EE
00099C 6820           00960         setf    clear_EE
00099E 6A15           00961         clrf    counter
0009A0                00962 ClearNext
                      00963         WriteEE         clear_EE, H_EE, L_EE
0009A0 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0009A4 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0009A8 C020 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
0009AC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009AE D???               M         bra     $-2
                          M 
0009B0 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0009B2 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0009B4 84A6               M         bsf     EECON1, WREN    ; enable write
0009B6 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0009B8 98A1               M         bcf     PIR2, EEIF
                          M 
0009BA 0E55               M         movlw   0x55
0009BC 6EA7               M         movwf   EECON2      ; write 55h
0009BE 0EAA               M         movlw   0xAA
0009C0 6EA7               M         movwf   EECON2      ; write 0xAA
0009C2 82A6               M         bsf     EECON1, WR          ; begin write
0009C4 B2A6               M         btfsc   EECON1, WR
0009C6 D???               M         bra     $-2
                          M 
0009C8 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0009CA 94A6               M         bcf     EECON1, WREN        ; disable writes
0009CC 2A15           00964         incf            counter
0009CE 2A22           00965         incf            L_EE
0009D0 0E15           00966         movlw           d'21'
0009D2 6215           00967         cpfseq          counter
0009D4 EF?? F???      00968         goto            ClearNext
0009D8 6A21           00969         clrf            H_EE            ; reset EEPROMaddr
0009DA 6A22           00970         clrf            L_EE
0009DC 0012           00971         return
                      00972         
0009DE                00973 READ_KEY
0009DE A281           00974         btfss   PORTB, 1        ; check for keypad interrupt
0009E0 EF?? F???      00975         goto    READ_KEY
0009E4 3881           00976         swapf   PORTB, W
0009E6 0B0F           00977         andlw   0x0F
0009E8 6E10           00978         movwf   KEY
0009EA B281           00979         btfsc   PORTB, 1
0009EC EF?? F???      00980         goto    $-2
0009F0 0012           00981         return
                      00982 
0009F2                00983 READ_KEY_TIME
0009F2 EC?? F???      00984         call        LCD_L2          ; go to second line to print RTC
                      00985 
                      00986         ; display the time
0009F6 EC?? F???      00987         call    DISPLAY_RTC
                      00988 
0009FA A281           00989         btfss       PORTB, 1    ; keypad interrupt
0009FC EF?? F???      00990         goto        READ_KEY_TIME
000A00 3881           00991         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000A02 0B0F           00992         andlw       0x0F        ; only want W3:0
000A04 6E10           00993         movwf       KEY         ; write this value to the KEY
000A06 B281           00994         btfsc       PORTB, 1    ; wait for release
000A08 EF?? F???      00995         goto        $-2         ; go back one instruction
000A0C 0012           00996         return
                      00997 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A0E                00998 DisplayTime
                      00999         READEE  REG_EE, H_EE, L_EE
000A0E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A12 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A16 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A18 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A1A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A1C CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A20 0EFF           01000         movlw   0xFF
000A22 6223           01001         cpfseq  REG_EE
000A24 EF?? F???      01002         goto    NoSkipDispOpTime
                      01003         Display NoData
  0000                    M         local   loop
000A28 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000A2A 6EF8               M         movwf   TBLPTRU
000A2C 0E??               M         movlw   high NoData     ; Move Table<15:8>
000A2E 6EF7               M         movwf   TBLPTRH
000A30 0E??               M         movlw   low NoData      ; Move Table<7:0>
000A32 6EF6               M         movwf   TBLPTRL
000A34 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000A36 50F5               M         movf    TABLAT, W
000A38                    M loop
000A38 EC?? F???          M         call    WR_DATA         ; write to LCD
000A3C 000B               M         tblrd+*                 ; next row in table
000A3E 50F5               M         movf    TABLAT, W
000A40 E1??               M         bnz     loop
000A42 0EFF           01004         movlw   0xFF
000A44 6023           01005         cpfslt  REG_EE
000A46 EF?? F???      01006         goto    SkipDispOpTime
000A4A 0012           01007         return
                      01008 
000A4C                01009 NoSkipDispOpTime
000A4C 0E21           01010         movlw   b'00100001'
000A4E 6E18           01011         movwf   OP_sec
000A50 3818           01012         swapf   OP_sec, W
000A52 6E17           01013         movwf   temp
000A54 0E0F           01014         movlw   0x0F
000A56 1617           01015         andwf   temp
000A58 C017 FFE8      01016         movff   temp, WREG
000A5C 0F30           01017         addlw   0x30
000A5E EC?? F???      01018         call    WR_DATA
                      01019 
000A62 C018 F017      01020         movff   OP_sec, temp    ; 1's seconds
000A66 0E0F           01021         movlw   0x0F
000A68 1617           01022         andwf   temp            ; Temp = lower nibble of Op_sec
000A6A C017 FFE8      01023         movff   temp, WREG      ; W = Temp
000A6E 0F30           01024         addlw   0x30            ; Convert to ASCII
000A70 EC?? F???      01025         call    WR_DATA
                      01026 
000A74 0E73           01027         movlw   0x73            ; Write 's'
000A76 EC?? F???      01028         call    WR_DATA
000A7A EC?? F???      01029         call    LCD_L2
000A7E                01030 SkipDispOpTime
000A7E 0012           01031         return
                      01032 
000A80                01033 DispOpRTC
000A80 0E0B           01034         movlw   d'11'
000A82 2622           01035         addwf   L_EE
                      01036 
                      01037         READEE  REG_EE, H_EE, L_EE
000A84 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A88 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A8C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A8E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A90 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A92 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A96 0EFF           01038         movlw   0xFF
000A98 6223           01039         cpfseq  REG_EE
000A9A EF?? F???      01040         goto    NoSkipDispOpRTC
                      01041         Display NoData
  0000                    M         local   loop
000A9E 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000AA0 6EF8               M         movwf   TBLPTRU
000AA2 0E??               M         movlw   high NoData     ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AA4 6EF7               M         movwf   TBLPTRH
000AA6 0E??               M         movlw   low NoData      ; Move Table<7:0>
000AA8 6EF6               M         movwf   TBLPTRL
000AAA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000AAC 50F5               M         movf    TABLAT, W
000AAE                    M loop
000AAE EC?? F???          M         call    WR_DATA         ; write to LCD
000AB2 000B               M         tblrd+*                 ; next row in table
000AB4 50F5               M         movf    TABLAT, W
000AB6 E1??               M         bnz     loop
000AB8 0EFF           01042         movlw   0xFF
000ABA 6023           01043         cpfslt  REG_EE
000ABC EF?? F???      01044         goto    SkipDispOpRTC
                      01045 
000AC0                01046 NoSkipDispOpRTC
                      01047         READEE  REG_EE, H_EE, L_EE
000AC0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000AC4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000AC8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000ACA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ACC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ACE CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000AD2 C023 FFE8      01048         movff   REG_EE, WREG
000AD6 0BF1           01049         andlw   b'11110001'
000AD8 EC?? F???      01050         call    WR_DATA
                      01051         
000ADC 2A22           01052         incf    L_EE
                      01053         READEE  REG_EE, H_EE, L_EE
000ADE C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000AE2 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000AE6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000AE8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000AEA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000AEC CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000AF0 C023 FFE8      01054         movff   REG_EE, WREG
000AF4 EC?? F???      01055         call    WR_DATA
000AF8 2A22           01056         incf    L_EE
                      01057 
000AFA 0E68           01058         movlw           "h"
000AFC EC?? F???      01059         call            WR_DATA
000B00 EC?? F???      01060         call DispOpRTC_Helper
000B04 0E20           01061         movlw           " "
000B06 EC?? F???      01062         call            WR_DATA
000B0A EC?? F???      01063         call DispOpRTC_Helper
000B0E 0E2F           01064         movlw           "/"
000B10 EC?? F???      01065         call            WR_DATA
000B14 EC?? F???      01066         call DispOpRTC_Helper
000B18 0E2F           01067         movlw           "/"
000B1A EC?? F???      01068         call            WR_DATA
000B1E EC?? F???      01069         call DispOpRTC_Helper
000B22                01070 SkipDispOpRTC
000B22 0012           01071                 return
000B24                01072 DispOpRTC_Helper
                      01073         READEE          REG_EE, H_EE, L_EE
000B24 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000B28 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000B2C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000B2E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000B30 80A6               M         bsf     EECON1, RD          ; read EEPROM
000B32 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000B36 C023 FFE8      01074         movff           REG_EE, WREG
000B3A EC?? F???      01075         call            WR_DATA
000B3E 2A22           01076         incf            L_EE
                      01077         READEE          REG_EE, H_EE, L_EE
000B40 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000B44 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000B48 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000B4A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000B4C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000B4E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000B52 C023 FFE8      01078         movff           REG_EE, WREG
000B56 EC?? F???      01079         call            WR_DATA
000B5A 2A22           01080         incf            L_EE
000B5C 0012           01081         return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-12-2017  20:56:46         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (end)
                      01082 end

Errors   :     0
Warnings :   133 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

