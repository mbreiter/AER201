MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009 ;*******************************************************************************
                      00010 ; configuration settings
                      00011 ;*******************************************************************************
                      00012 
Warning[205]: Found directive in column 1. (list)
                      00013 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00014 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00015 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00016 #include <rtc.inc>
                      00001 ;External labels
Warning[205]: Found directive in column 1. (extern)
  0000                00002 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00003 
                      00004 ;; RTC MACROS
                      00005 ;;
                      00006 ;; Sebastian K, commit 110219-2205
                      00007 ;; forked off PIC16 sample code
                      00008 ;; for PIC18F4620
                      00009 ;; relocatable labels, declared in another file
                      00010 
Warning[205]: Found directive in column 1. (variable)
  0000                00011 variable _loopknt=0
                      00012 
                      00013 rtc_resetAll macro
                      00014 ;input: none
                      00015 ;output: none
                      00016 ;desc: Resets all the time keeping registers on the RTC to zero
                      00017 
                      00018 clrf databyte
                      00019 movlw 6
                      00020 movwf regaddress ;start at 6 and go down, and set all to 0
                      00021 
                      00022 del_loop#v(_loopknt)
                      00023 call write_rtc
                      00024 decfsz regaddress
                      00025 bra del_loop#v(_loopknt)
                      00026 call write_rtc ;sets registers 0-6 to zero
                      00027 _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00028 endm
                      00029 
                      00030 rtc_set macro addliteral,datliteral
                      00031 ;input: addliteral: value of address
                      00032 ; datliteral: value of data
                      00033 ;output: none
                      00034 ;desc: loads the data in datliteral into the
                      00035 ; address specified by addliteral in the RTC
                      00036 
                      00037 movlw addliteral
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00038 movwf regaddress
                      00039 movlw datliteral
                      00040 movwf databyte
                      00041 call write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00042 endm
                      00043 
                      00044 rtc_read macro addliteral
                      00045 ;input: addliteral
                      00046 ;output: datachar, tens_digit, ones_digit
                      00047 ;desc: From the selected register in the RTC, read the data
                      00048 ; and load it into 0x75. 0x75 is also converted into
                      00049 ; ASCII characters and the tens digit is placed into
                      00050 ; 0x77 and the ones digit is placed in 0x78
                      00051 movlw addliteral
                      00052 movwf regaddress
                      00053 call read_rtc
                      00054 movf datachar,w
                      00055 call rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00056 endm
                      00017 
                      00018     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00019     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00020     CONFIG WDT = OFF, WDTPS = 32768
                      00021     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00022     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00023     CONFIG DEBUG = OFF
                      00024     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00025     CONFIG CPB = OFF, CPD = OFF
                      00026     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00027     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00028     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00029     CONFIG EBTRB = OFF
                      00030 
                      00031 ;*******************************************************************************
                      00032 ; variable and constants
                      00033 ;*******************************************************************************
                      00034     CODE
                      00035             
                      00036     cblock 0x00
  00000000            00037         key1
  00000001            00038         key2
  00000002            00039         key3
  00000003            00040         keyA
  00000004            00041         key4
  00000005            00042         key5
  00000006            00043         key6
  00000007            00044         keyB
  00000008            00045         key7
  00000009            00046         key8
  0000000A            00047         key9
  0000000B            00048         keyC
  0000000C            00049         keyS
  0000000D            00050         key0
  0000000E            00051         keyH
  0000000F            00052         keyD
  00000010            00053         KEY
  00000011            00054         temp_KEY
  00000012            00055         KEY_ISR
  00000013            00056         temp_S  
  00000014            00057         temp_W
  00000015            00058         counter
  00000016            00059         counter2
  00000017            00060         temp
  00000018            00061         OP_sec
  00000019            00062         OP_INT
  0000001A            00063         temp_ISR
  0000001B            00064         delayR
  0000001C            00065         d5us
  0000001D            00066         d200us
  0000001E            00067         d50ms
  0000001F            00068         inExecution
  00000020            00069         clear_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000021            00070         H_EE    
  00000022            00071         L_EE    
  00000023            00072         REG_EE  
  00000024            00073         tempH_EE
  00000025            00074         tempL_EE
  00000026            00075         tempL_EEC
  00000027            00076         MAX_EE   
  00000028            00077         READ_EE
  00000029            00078         last_log
  0000002A            00079         startHt
  0000002B            00080         startHo
  0000002C            00081         startMt
  0000002D            00082         startMo
  0000002E            00083         endHt
  0000002F            00084         endHo
  00000030            00085         endMt
  00000031            00086         endMo
  00000032            00087         LED_Count
  00000033            00088         SkipCount
  00000034            00089         exe_sec
  00000035            00090         exe_int
  00000036            00091         timer_H
  00000037            00092         timer_L
  00000038            00093         convert_buffer
  00000039            00094         transferring
  0000003A            00095         PC_PCL
  0000003B            00096         PC_PCLATH
  0000003C            00097         PC_PCLATU
  0000003D            00098         TIMCNT
  0000003E            00099         CPCNT
  0000003F            00100         TDATA
                      00101     endc
                      00102 
                      00103 ;*******************************************************************************
                      00104 ; tables
                      00105 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00106     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00107     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00108     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007C 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00120     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00121     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00122     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00123     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00124     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00125     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00126         
                      00127 ;*******************************************************************************
                      00128 ; macros
                      00129 ;*******************************************************************************
                      00130 
                      00131 TransferTable macro table
                      00132         local loop
                      00133         
                      00134         movlw   upper table
                      00135         movwf   TBLPTRU
                      00136         movlw   high table
                      00137         movwf   TBLPTRH
                      00138         movlw   low table
                      00139         movwf   TBLPTRL
                      00140         tblrd*
                      00141         movf    TABLAT, W
                      00142 loop
                      00143         call    USART_WAIT
                      00144         tblrd+*
                      00145         movf    TABLAT, W
                      00146         bnz     loop
                      00147         endm
                      00148         
                      00149 ConfigLCD   macro
                      00150           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00151           call      WR_INS
                      00152 
                      00153           movlw     b'00001100'    ; display on/off
                      00154           call      WR_INS
                      00155          ; movlw     B'00000110'    ; Entry mode
                      00156          ; call      WR_INS
                      00157           movlw     b'00000001'    ; Clear ram
                      00158           call      WR_INS
                      00159           endm
                      00160         
                      00161 movMSB  macro   port
                      00162         andlw   0xF0
                      00163         iorwf   port, f
                      00164         iorlw   0x0F
                      00165         andwf   port, f
                      00166         endm
                      00167 
                      00168 Delay50N macro count, N
                      00169         local   loop
                      00170         movlw   N
                      00171         movwf   count
                      00172 
                      00173 loop
                      00174         call    Delay50ms
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00175         decfsz  count
                      00176         goto    loop
                      00177         endm
                      00178 
                      00179 Display macro   Message
                      00180         local   loop
                      00181         movlw   upper Message   ; Move Table<20:16>
                      00182         movwf   TBLPTRU
                      00183         movlw   high Message    ; Move Table<15:8>
                      00184         movwf   TBLPTRH
                      00185         movlw   low Message     ; Move Table<7:0>
                      00186         movwf   TBLPTRL
                      00187         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00188         movf    TABLAT, W
                      00189 loop
                      00190         call    WR_DATA         ; write to LCD
                      00191         tblrd+*                 ; next row in table
                      00192         movf    TABLAT, W
                      00193         bnz     loop
                      00194         endm
                      00195 
                      00196 DisplayLog  macro   addrH, addrL
                      00197             local   Again, Finish
                      00198             clrf    SkipCount
                      00199             clrf    MAX_EE
                      00200 
                      00201             ; Check if there is No Data first
                      00202             READEE      REG_EE, addrH, addrL
                      00203             movlw       0xFF
                      00204             cpfseq      REG_EE
                      00205             goto        Again
                      00206             Display     NoData
                      00207             goto        Finish
                      00208 Again
                      00209             ; Put a space every 3 Writes
                      00210             movlw       d'3'
                      00211             cpfslt      SkipCount
                      00212             cpfslt      MAX_EE
                      00213             goto        Finish
                      00214 
                      00215             ; read EEPROM
                      00216             READEE      REG_EE, addrH, addrL
                      00217             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00218             goto        Finish
                      00219 Finish
                      00220             endm
                      00221             
                      00222 ;TransferLog macro   addrH, addrL
                      00223         
                      00224 
                      00225 incf_BCD    macro   BCD
                      00226         local ones, endBCD
                      00227         movff   BCD, temp
                      00228         
                      00229         ;process ones digit
                      00230         movlw   0x0F
                      00231         andwf   temp
                      00232         movlw   d'9'
                      00233         
                      00234         ;skip if ones digit is 9
                      00235         cpfseq  temp
                      00236         goto    ones
                      00237         
                      00238         movlw   b'00010000'
                      00239         addwf   BCD
                      00240         movlw   0x0F
                      00241         andwf   BCD
                      00242         movlw   0xA0
                      00243         cpfslt  BCD
                      00244         
                      00245         clrf    BCD
                      00246         goto    endBCD
                      00247         
                      00248 ones
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00249         incf    BCD
                      00250         goto    endBCD
                      00251 endBCD
                      00252         nop
                      00253         endm
                      00254 
                      00255 WriteRTC    macro
                      00256         movf    tens_digit, W
                      00257         call    WR_DATA
                      00258         movf    ones_digit, W
                      00259         call    WR_DATA
                      00260         endm
                      00261 
                      00262 WriteEE macro   word, addH, addL
                      00263         movff   addH, EEADRH    ; High address
                      00264         movff   addL, EEADRH    ; Low address
                      00265         movff   word, EEDATA    ; set word
                      00266 
                      00267         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00268         bra     $-2
                      00269 
                      00270         bcf     EECON1, EEPGD   ; Point to data memory
                      00271         bcf     EECON1, CFGS    ; Access EEPROM
                      00272         bsf     EECON1, WREN    ; enable write
                      00273         bcf     EECON1, GIE         ; disable interrupts during write
                      00274         bcf     PIR2, EEIF
                      00275 
                      00276         movlw   0x55
                      00277         movwf   EECON2      ; write 55h
                      00278         movlw   0xAA
                      00279         movwf   EECON2      ; write 0xAA
                      00280         bsf     EECON1, WR          ; begin write
                      00281         btfsc   EECON1, WR
                      00282         bra     $-2
                      00283 
                      00284         bsf     EECON1, GIE         ; enable interrupts after write
                      00285         bcf     EECON1, WREN        ; disable writes
                      00286         endm
                      00287 
                      00288 READEE  macro   file, addH, addL
                      00289         movff   addH, EEADRH        ; read to high
                      00290         movff   addL, EEADR         ; read to low
                      00291         bcf     EECON1, EEPGD       ; point to data memory
                      00292         bcf     EECON1, CFGS        ; access to EEPROM
                      00293         bsf     EECON1, RD          ; read EEPROM
                      00294         movff   EEDATA, file        ; put data into file
                      00295         endm
                      00296 
                      00297 ChangeMode  macro   ModeId, NextMode
                      00298         local Next, Exit
                      00299 
                      00300         movlw   ModeId              ; poll for mode
                      00301         cpfseq  KEY                 ; check this against key press
                      00302         goto    Exit
                      00303 
                      00304 Next
                      00305         clrf    LATA                ; clear pins before proceeding
                      00306         clrf    LATB
                      00307         clrf    LATC
                      00308         clrf    LATD
                      00309         goto    NextMode
                      00310 
                      00311 Exit
                      00312         nop
                      00313         endm
                      00314 
                      00315 saveContext macro
                      00316     movff   STATUS, temp_S          ; save STATUS first
                      00317     movwf   temp_W                  ; save W
                      00318     endm
                      00319 
                      00320 restoreContext macro
                      00321     swapf   temp_W, W               ; restore W first
                      00322     movff   temp_S, STATUS          ; restore STATUS last without affecting W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00323     endm
                      00324 ;*******************************************************************************
                      00325 ; reset vector and isrs
                      00326 ;*******************************************************************************
                      00327         ORG     0x000               ; processor reset vector
000000 EF?? F???      00328         goto    INIT                ; go to beginning of program
                      00329 
                      00330         ORG     0x008
000008 EF?? F???      00331         goto    ISR_HIGH
                      00332 
                      00333         ORG     0x018
000018 EF?? F???      00334         goto    ISR_LOW
                      00335 
00001C                00336 ISR_HIGH
                      00337         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00338 
                      00339         ;reset timer
000022 0E36           00340         movlw   timer_H
000024 6ED7           00341         movwf   TMR0H
000026 0E2E           00342         movlw   timer_L - 9
000028 6ED6           00343         movwf   TMR0L
                      00344         
                      00345         ;timer interrupt
00002A A4F2           00346         btfss   INTCON, TMR0IF
00002C EF?? F???      00347         goto    END_ISR_HIGH
                      00348         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0F
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0E0F               M         movlw   0x0F
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xA0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00349         movlw   d'0'
00005C 6219           00350         cpfseq  OP_INT
00005E EF?? F???      00351         goto    END_ISR_HIGH
                      00352         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0F
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0E0F               M         movlw   0x0F
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xA0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00353 
00008C                00354 END_ISR_HIGH
00008C 94F2           00355         bcf     INTCON, TMR0IF
                      00356         restoreContext
00008E 3814               M     swapf   temp_W, W               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00357         retfie
                      00358 
000096                00359 ISR_LOW
                      00360         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00361         ; KEYPAD INTERRUPT
00009C A0F0           00362         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00363         goto            END_ISR_LOW
                      00364 
                      00365         ;Check operation status
                      00366 ;       movlw           0xFF                                    ; If in operation, skip return
                      00367 ;       cpfseq          InExecution
                      00368 ;       goto            END_ISR_LOW
                      00369 
                      00370         ; Process KEY
0000A2 3881           00371         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00372         andlw           0x0F
0000A6 6E12           00373         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00374 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00375 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00376         goto            END_ISR_LOW
                      00377 
                      00378         ; Reset program counter
0000AC 6AFF           00379         clrf            TOSU
0000AE 6AFE           00380         clrf            TOSH
0000B0 6AFD           00381         clrf            TOSL
                      00382 
0000B2                00383 END_ISR_LOW
0000B2 90F0           00384         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00385         restoreContext
0000B4 3814               M     swapf   temp_W, W               ; restore W first
0000B6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00386         
0000BA 6E14           00387         movwf   temp_W              ; save current W
0000BC CFD8 F013      00388         movff   STATUS, temp_S      ; save status
                      00389 
                      00390         ; ISR_Low routines
0000C0 C013 FFD8      00391         movff   temp_S, STATUS      ; retreive status
0000C4 3A14           00392         swapf   temp_W, f
0000C6 3814           00393         swapf   temp_W, w           ; restore W
0000C8 0010           00394         retfie
                      00395 
                      00396 ;*******************************************************************************
                      00397 ; main
                      00398 ;*******************************************************************************
0000CA                00399 INIT
                      00400         ; i/o
0000CA 0E00           00401         movlw   b'00000000'
0000CC 6E92           00402         movwf   TRISA
0000CE 0EFF           00403         movlw   b'11111111'
0000D0 6E93           00404         movwf   TRISB               ; keypad
0000D2 0EBF           00405         movlw   b'10111111'
0000D4 6E94           00406         movwf   TRISC
                      00407         
0000D6 0E00           00408         movlw   b'00000000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000D8 6E95           00409         movwf   TRISD
0000DA 0E07           00410         movlw   b'00000111'
0000DC 6E96           00411         movwf   TRISE
                      00412 
                      00413         ; analog/digital pins
0000DE 0E0F           00414         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00415         movwf   ADCON1
                      00416 
                      00417         ; clear ports
0000E2 6A89           00418         clrf    LATA
0000E4 6A8A           00419         clrf    LATB
0000E6 9694           00420         bcf     TRISC, SCL
0000E8 9894           00421         bcf     TRISC, SDA
0000EA 6A8B           00422         clrf    LATC
0000EC 6A8C           00423         clrf    LATD
0000EE 6A8D           00424         clrf    LATE
                      00425         
                      00426         ; initializations
                      00427         
0000F0 EC?? F???      00428         call    InitLCD
                      00429         ConfigLCD
0000F4 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
0000F6 EC?? F???          M           call      WR_INS
                          M 
0000FA 0E0C               M           movlw     b'00001100'    ; display on/off
0000FC EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000100 0E01               M           movlw     b'00000001'    ; Clear ram
000102 EC?? F???          M           call      WR_INS
                      00430         
000106 EC?? F???      00431         call    RTC_INIT
00010A EC?? F???      00432         call    Delay50ms
                      00433         
00010E EC?? F???      00434         call    INIT_USART
                      00435 
000112 0E08           00436         movlw   b'00001000'
000114 6ED5           00437         movwf   T0CON
                      00438 
                      00439         ; interrupts
000116 6AD0           00440         clrf    RCON
000118 6AF2           00441         clrf    INTCON
00011A 6AF1           00442         clrf    INTCON2
00011C 6AF0           00443         clrf    INTCON3
00011E 8ED0           00444         bsf     RCON, IPEN          ; priority mode
000120 8EF2           00445         bsf     INTCON, GIEH        ; permit global interrupts
000122 8CF2           00446         bsf     INTCON, GIEL
000124 8AF1           00447         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000126 8AF2           00448         bsf     INTCON, TMR0IE
000128 84F1           00449         bsf     INTCON2, TMR0IP     ; set to high priority
00012A 86F0           00450         bsf     INTCON3, INT1IE
00012C 9CF0           00451         bcf     INTCON3, INT1IP
                      00452 
00012E 6A21           00453         clrf    H_EE
000130 6A22           00454         clrf    L_EE
000132 6A??           00455         clrf    tens_digit
000134 6A??           00456         clrf    ones_digit
                      00457         
000136 0EF2           00458         movlw     b'11110010'    ; Set required keypad inputs
000138 6E93           00459         movwf     TRISB
                      00460         
                      00461         Display Welcome
  0000                    M         local   loop
00013A 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00013C 6EF8               M         movwf   TBLPTRU
00013E 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000140 6EF7               M         movwf   TBLPTRH
000142 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000144 6EF6               M         movwf   TBLPTRL
000146 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000148 50F5               M         movf    TABLAT, W
00014A                    M loop
00014A EC?? F???          M         call    WR_DATA         ; write to LCD
00014E 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000150 50F5               M         movf    TABLAT, W
000152 E1??               M         bnz     loop
000154 EC?? F???      00462         call LCD_L2
                      00463         Display Team
  0000                    M         local   loop
000158 0E??               M         movlw   upper Team      ; Move Table<20:16>
00015A 6EF8               M         movwf   TBLPTRU
00015C 0E??               M         movlw   high Team       ; Move Table<15:8>
00015E 6EF7               M         movwf   TBLPTRH
000160 0E??               M         movlw   low Team        ; Move Table<7:0>
000162 6EF6               M         movwf   TBLPTRL
000164 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000166 50F5               M         movf    TABLAT, W
000168                    M loop
000168 EC?? F???          M         call    WR_DATA         ; write to LCD
00016C 000B               M         tblrd+*                 ; next row in table
00016E 50F5               M         movf    TABLAT, W
000170 E1??               M         bnz     loop
                      00464         Delay50N delayR, 0x3C
  0000                    M         local   loop
000172 0E3C               M         movlw   0x3C
000174 6E1B               M         movwf   delayR
                          M 
000176                    M loop
000176 EC?? F???          M         call    Delay50ms
00017A 2E1B               M         decfsz  delayR
00017C EF?? F???          M         goto    loop
                      00465 
                      00466 ;*******************************************************************************
                      00467 ; standby mode
                      00468 ;*******************************************************************************
000180                00469 STANDBY
000180 EC?? F???      00470         call    ClrLCD
                      00471         Display StandBy
  0000                    M         local   loop
000184 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000186 6EF8               M         movwf   TBLPTRU
000188 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00018A 6EF7               M         movwf   TBLPTRH
00018C 0E??               M         movlw   low StandBy     ; Move Table<7:0>
00018E 6EF6               M         movwf   TBLPTRL
000190 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000192 50F5               M         movf    TABLAT, W
000194                    M loop
000194 EC?? F???          M         call    WR_DATA         ; write to LCD
000198 000B               M         tblrd+*                 ; next row in table
00019A 50F5               M         movf    TABLAT, W
00019C E1??               M         bnz     loop
                      00472 
00019E                00473 HOLD_STANDBY
00019E EC?? F???      00474         call    READ_KEY_TIME
                      00475         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0001A2 0E03               M         movlw   keyA                ; poll for mode
0001A4 6210               M         cpfseq  KEY                 ; check this against key press
0001A6 EF?? F???          M         goto    Exit
                          M 
0001AA                    M Next
0001AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0001AC 6A8A               M         clrf    LATB
0001AE 6A8B               M         clrf    LATC
0001B0 6A8C               M         clrf    LATD
0001B2 EF?? F???          M         goto    EXECUTION
                          M 
0001B6                    M Exit
0001B6 0000               M         nop
                      00476         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
0001B8 0E07               M         movlw   keyB                ; poll for mode
0001BA 6210               M         cpfseq  KEY                 ; check this against key press
0001BC EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001C0                    M Next
0001C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0001C2 6A8A               M         clrf    LATB
0001C4 6A8B               M         clrf    LATC
0001C6 6A8C               M         clrf    LATD
0001C8 EF?? F???          M         goto    LOG
                          M 
0001CC                    M Exit
0001CC 0000               M         nop
                      00477         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0001CE 0E0B               M         movlw   keyC                ; poll for mode
0001D0 6210               M         cpfseq  KEY                 ; check this against key press
0001D2 EF?? F???          M         goto    Exit
                          M 
0001D6                    M Next
0001D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0001D8 6A8A               M         clrf    LATB
0001DA 6A8B               M         clrf    LATC
0001DC 6A8C               M         clrf    LATD
0001DE EF?? F???          M         goto    PERM_LOG
                          M 
0001E2                    M Exit
0001E2 0000               M         nop
                      00478         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0001E4 0E0F               M         movlw   keyD                ; poll for mode
0001E6 6210               M         cpfseq  KEY                 ; check this against key press
0001E8 EF?? F???          M         goto    Exit
                          M 
0001EC                    M Next
0001EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0001EE 6A8A               M         clrf    LATB
0001F0 6A8B               M         clrf    LATC
0001F2 6A8C               M         clrf    LATD
0001F4 EF?? F???          M         goto    PC_MODE
                          M 
0001F8                    M Exit
0001F8 0000               M         nop
0001FA D???           00479         bra     HOLD_STANDBY
                      00480 
                      00481 ;*******************************************************************************
                      00482 ; execution mode
                      00483 ;*******************************************************************************
                      00484 
0001FC                00485 EXECUTION
                      00486         ; save the starting time
                      00487         
                      00488         ; display
0001FC 681F           00489         setf        inExecution
0001FE EC?? F???      00490         call        ClrLCD
                      00491         Display     Exe1
  0000                    M         local   loop
000202 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000204 6EF8               M         movwf   TBLPTRU
000206 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000208 6EF7               M         movwf   TBLPTRH
00020A 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00020C 6EF6               M         movwf   TBLPTRL
00020E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000210 50F5               M         movf    TABLAT, W
000212                    M loop
000212 EC?? F???          M         call    WR_DATA         ; write to LCD
000216 000B               M         tblrd+*                 ; next row in table
000218 50F5               M         movf    TABLAT, W
00021A E1??               M         bnz     loop
00021C EC?? F???      00492         call        LCD_L2
                      00493         Display     Exe2
  0000                    M         local   loop
000220 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
000222 6EF8               M         movwf   TBLPTRU
000224 0E??               M         movlw   high Exe2       ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000226 6EF7               M         movwf   TBLPTRH
000228 0E??               M         movlw   low Exe2        ; Move Table<7:0>
00022A 6EF6               M         movwf   TBLPTRL
00022C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00022E 50F5               M         movf    TABLAT, W
000230                    M loop
000230 EC?? F???          M         call    WR_DATA         ; write to LCD
000234 000B               M         tblrd+*                 ; next row in table
000236 50F5               M         movf    TABLAT, W
000238 E1??               M         bnz     loop
                      00494         
                      00495         ; start timer
00023A 0E36           00496         movlw       timer_H                             ; 1
00023C 6ED7           00497         movwf       TMR0H
00023E 0E37           00498         movlw       timer_L                             ; 1
000240 6ED6           00499         movwf       TMR0L                               ; 1
000242 8ED5           00500         bsf         T0CON, TMR0ON                       ; Turn on timer
000244 EC?? F???      00501         call        ClearEEPROM_21
                      00502         
                      00503         ; initialize variables
000248 6A18           00504         clrf        OP_sec
00024A 6A19           00505         clrf        OP_INT
                      00506 
00024C                00507 HOLD_EXE
00024C EC?? F???      00508         call        READ_KEY
                      00509         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000250 0E0C               M         movlw   keyS                ; poll for mode
000252 6210               M         cpfseq  KEY                 ; check this against key press
000254 EF?? F???          M         goto    Exit
                          M 
000258                    M Next
000258 6A89               M         clrf    LATA                ; clear pins before proceeding
00025A 6A8A               M         clrf    LATB
00025C 6A8B               M         clrf    LATC
00025E 6A8C               M         clrf    LATD
000260 EF?? F???          M         goto    EXIT_EXE
                          M 
000264                    M Exit
000264 0000               M         nop
000266 D???           00510         bra         HOLD_EXE
                      00511 
000268                00512 EXIT_EXE
                      00513         WriteEE     OP_sec, H_EE, L_EE
000268 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00026C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000270 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000274 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000276 D???               M         bra     $-2
                          M 
000278 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00027A 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00027C 84A6               M         bsf     EECON1, WREN    ; enable write
00027E 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000280 98A1               M         bcf     PIR2, EEIF
                          M 
000282 0E55               M         movlw   0x55
000284 6EA7               M         movwf   EECON2      ; write 55h
000286 0EAA               M         movlw   0xAA
000288 6EA7               M         movwf   EECON2      ; write 0xAA
00028A 82A6               M         bsf     EECON1, WR          ; begin write
00028C B2A6               M         btfsc   EECON1, WR
00028E D???               M         bra     $-2
                          M 
000290 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000292 94A6               M         bcf     EECON1, WREN        ; disable writes
000294 2A22           00514         incf        L_EE
                      00515         WriteEE     OP_INT, H_EE, L_EE
000296 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00029A C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00029E C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002A2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0002A4 D???               M         bra     $-2
                          M 
0002A6 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0002A8 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0002AA 84A6               M         bsf     EECON1, WREN    ; enable write
0002AC 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0002AE 98A1               M         bcf     PIR2, EEIF
                          M 
0002B0 0E55               M         movlw   0x55
0002B2 6EA7               M         movwf   EECON2      ; write 55h
0002B4 0EAA               M         movlw   0xAA
0002B6 6EA7               M         movwf   EECON2      ; write 0xAA
0002B8 82A6               M         bsf     EECON1, WR          ; begin write
0002BA B2A6               M         btfsc   EECON1, WR
0002BC D???               M         bra     $-2
                          M 
0002BE 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002C0 94A6               M         bcf     EECON1, WREN        ; disable writes
0002C2 2A22           00516         incf        L_EE
                      00517         
                      00518         ; Clear InOperation flag to stop '*' interrupts
0002C4 6A1F           00519         clrf        inExecution
0002C6 EF?? F???      00520         goto        SaveData
                      00521 
0002CA                00522 SaveData
0002CA EC?? F???      00523         call        ClrLCD
                      00524         Display     SAVE
  0000                    M         local   loop
0002CE 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0002D0 6EF8               M         movwf   TBLPTRU
0002D2 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0002D4 6EF7               M         movwf   TBLPTRH
0002D6 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0002D8 6EF6               M         movwf   TBLPTRL
0002DA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002DC 50F5               M         movf    TABLAT, W
0002DE                    M loop
0002DE EC?? F???          M         call    WR_DATA         ; write to LCD
0002E2 000B               M         tblrd+*                 ; next row in table
0002E4 50F5               M         movf    TABLAT, W
0002E6 E1??               M         bnz     loop
0002E8 0E00           00525         movlw       d'0'
0002EA 6E21           00526         movwf       H_EE
0002EC C029 F022      00527         movff       last_log, L_EE
0002F0 0E00           00528         movlw       d'0'
0002F2 6E24           00529         movwf       tempH_EE
0002F4 C026 F025      00530         movff       tempL_EEC, tempL_EE
0002F8 6A16           00531         clrf        counter2
0002FA 6A15           00532         clrf        counter
                      00533 
0002FC                00534 ShiftLoop
0002FC 2A15           00535         incf            counter
                      00536         READEE          REG_EE, H_EE, L_EE
0002FE C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000302 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000306 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000308 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00030A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00030C CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000310 0E15           00537         movlw           d'21'
000312 2622           00538         addwf           L_EE
                      00539         WriteEE         REG_EE, H_EE, L_EE
000314 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000318 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00031C C023 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
000320 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000322 D???               M         bra     $-2
                          M 
000324 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000326 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000328 84A6               M         bsf     EECON1, WREN    ; enable write
00032A 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00032C 98A1               M         bcf     PIR2, EEIF
                          M 
00032E 0E55               M         movlw   0x55
000330 6EA7               M         movwf   EECON2      ; write 55h
000332 0EAA               M         movlw   0xAA
000334 6EA7               M         movwf   EECON2      ; write 0xAA
000336 82A6               M         bsf     EECON1, WR          ; begin write
000338 B2A6               M         btfsc   EECON1, WR
00033A D???               M         bra     $-2
                          M 
00033C 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00033E 94A6               M         bcf     EECON1, WREN        ; disable writes
000340 0E14           00540         movlw           d'20'
000342 5E22           00541         subwf           L_EE
000344 0E15           00542         movlw           d'21'
000346 6215           00543         cpfseq          counter
000348 EF?? F???      00544         goto            ShiftLoop
                      00545         
                      00546         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
00034C 0E2A           00547         movlw           d'42'
00034E 5E22           00548         subwf           L_EE
000350 C026 F025      00549         movff           tempL_EEC, tempL_EE
000354 6A15           00550         clrf            counter
000356 2A16           00551         incf            counter2
000358 0E09           00552         movlw           d'9'
00035A 6216           00553         cpfseq          counter2                                        ; Skip if 9 shifts were made
00035C EF?? F???      00554         goto            ShiftLoop
                      00555         
                      00556         ; Finish Saving Data
                      00557         ; Stop Timer and goto OpLog
000360 9ED5           00558         bcf             T0CON, TMR0ON
000362 0E09           00559         movlw           d'9'
000364 6E22           00560         movwf           L_EE
                      00561         WriteEE         OP_sec, H_EE, L_EE
000366 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00036A C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00036E C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000372 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000374 D???               M         bra     $-2
                          M 
000376 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000378 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00037A 84A6               M         bsf     EECON1, WREN    ; enable write
00037C 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00037E 98A1               M         bcf     PIR2, EEIF
                          M 
000380 0E55               M         movlw   0x55
000382 6EA7               M         movwf   EECON2      ; write 55h
000384 0EAA               M         movlw   0xAA
000386 6EA7               M         movwf   EECON2      ; write 0xAA
000388 82A6               M         bsf     EECON1, WR          ; begin write
00038A B2A6               M         btfsc   EECON1, WR
00038C D???               M         bra     $-2
                          M 
00038E 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000390 94A6               M         bcf     EECON1, WREN        ; disable writes
000392 2A22           00562         incf            L_EE
                      00563         WriteEE         OP_INT, H_EE, L_EE
000394 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000398 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00039C C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
0003A0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0003A2 D???               M         bra     $-2
                          M 
0003A4 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0003A6 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0003A8 84A6               M         bsf     EECON1, WREN    ; enable write
0003AA 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0003AC 98A1               M         bcf     PIR2, EEIF
                          M 
0003AE 0E55               M         movlw   0x55
0003B0 6EA7               M         movwf   EECON2      ; write 55h
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003B2 0EAA               M         movlw   0xAA
0003B4 6EA7               M         movwf   EECON2      ; write 0xAA
0003B6 82A6               M         bsf     EECON1, WR          ; begin write
0003B8 B2A6               M         btfsc   EECON1, WR
0003BA D???               M         bra     $-2
                          M 
0003BC 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0003BE 94A6               M         bcf     EECON1, WREN        ; disable writes
0003C0 2A22           00564         incf            L_EE
0003C2 EF?? F???      00565         goto            LOG
                      00566 
                      00567 ;*******************************************************************************
                      00568 ; sorting statistics log mode
                      00569 ;*******************************************************************************
                      00570         
0003C6                00571 LOG
0003C6 EC?? F???      00572         call    ClrLCD
                      00573         Display Log1
  0000                    M         local   loop
0003CA 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0003CC 6EF8               M         movwf   TBLPTRU
0003CE 0E??               M         movlw   high Log1       ; Move Table<15:8>
0003D0 6EF7               M         movwf   TBLPTRH
0003D2 0E??               M         movlw   low Log1        ; Move Table<7:0>
0003D4 6EF6               M         movwf   TBLPTRL
0003D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003D8 50F5               M         movf    TABLAT, W
0003DA                    M loop
0003DA EC?? F???          M         call    WR_DATA         ; write to LCD
0003DE 000B               M         tblrd+*                 ; next row in table
0003E0 50F5               M         movf    TABLAT, W
0003E2 E1??               M         bnz     loop
                      00574 
                      00575         ; display most recent run data
0003E4 0E09           00576         movlw   d'9'
0003E6 6E22           00577         movwf   L_EE
                      00578         READEE  OP_sec, H_EE, L_EE
0003E8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0003EC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0003F0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0003F2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0003F4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0003F6 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0003FA 2A22           00579         incf    L_EE
                      00580         READEE  OP_INT, H_EE, L_EE
0003FC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000400 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000404 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000406 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000408 80A6               M         bsf     EECON1, RD          ; read EEPROM
00040A CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00040E 2A22           00581         incf    L_EE
000410 EC?? F???      00582         call    DisplayTime
                      00583 
000414 EC?? F???      00584         call    LCD_L2
000418 6A22           00585         clrf    L_EE
00041A EC?? F???      00586         call    DispOpRTC
                      00587 
00041E                00588 HOLD_LOG
00041E EC?? F???      00589         call    READ_KEY
                      00590         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000422 0E07               M         movlw   keyB                ; poll for mode
000424 6210               M         cpfseq  KEY                 ; check this against key press
000426 EF?? F???          M         goto    Exit
                          M 
00042A                    M Next
00042A 6A89               M         clrf    LATA                ; clear pins before proceeding
00042C 6A8A               M         clrf    LATB
00042E 6A8B               M         clrf    LATC
000430 6A8C               M         clrf    LATD
000432 EF?? F???          M         goto    LOG_INFO
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000436                    M Exit
000436 0000               M         nop
                      00591         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000438 0E0D               M         movlw   key0                ; poll for mode
00043A 6210               M         cpfseq  KEY                 ; check this against key press
00043C EF?? F???          M         goto    Exit
                          M 
000440                    M Next
000440 6A89               M         clrf    LATA                ; clear pins before proceeding
000442 6A8A               M         clrf    LATB
000444 6A8B               M         clrf    LATC
000446 6A8C               M         clrf    LATD
000448 EF?? F???          M         goto    STANDBY
                          M 
00044C                    M Exit
00044C 0000               M         nop
00044E D???           00592         bra     HOLD_LOG
                      00593 
000450                00594 LOG_INFO
000450 EC?? F???      00595         call    ClrLCD
                      00596         Display LogInfo1
  0000                    M         local   loop
000454 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
000456 6EF8               M         movwf   TBLPTRU
000458 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
00045A 6EF7               M         movwf   TBLPTRH
00045C 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
00045E 6EF6               M         movwf   TBLPTRL
000460 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000462 50F5               M         movf    TABLAT, W
000464                    M loop
000464 EC?? F???          M         call    WR_DATA         ; write to LCD
000468 000B               M         tblrd+*                 ; next row in table
00046A 50F5               M         movf    TABLAT, W
00046C E1??               M         bnz     loop
00046E EC?? F???      00597         call    LCD_L2
                      00598         Display LogInfo2
  0000                    M         local   loop
000472 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000474 6EF8               M         movwf   TBLPTRU
000476 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000478 6EF7               M         movwf   TBLPTRH
00047A 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
00047C 6EF6               M         movwf   TBLPTRL
00047E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000480 50F5               M         movf    TABLAT, W
000482                    M loop
000482 EC?? F???          M         call    WR_DATA         ; write to LCD
000486 000B               M         tblrd+*                 ; next row in table
000488 50F5               M         movf    TABLAT, W
00048A E1??               M         bnz     loop
00048C                00599 HOLD_LOG_INFO
00048C EC?? F???      00600         call    READ_KEY
                      00601         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000490 0E0D               M         movlw   key0                ; poll for mode
000492 6210               M         cpfseq  KEY                 ; check this against key press
000494 EF?? F???          M         goto    Exit
                          M 
000498                    M Next
000498 6A89               M         clrf    LATA                ; clear pins before proceeding
00049A 6A8A               M         clrf    LATB
00049C 6A8B               M         clrf    LATC
00049E 6A8C               M         clrf    LATD
0004A0 EF?? F???          M         goto    LOG
                          M 
0004A4                    M Exit
0004A4 0000               M         nop
0004A6 D???           00602         bra     HOLD_LOG
                      00603         
                      00604 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00605 ; permanent logs
                      00606 ;*******************************************************************************
                      00607 
0004A8                00608 PERM_LOG
0004A8 EC?? F???      00609         call    ClrLCD
                      00610         Display PermLog1
  0000                    M         local   loop
0004AC 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0004AE 6EF8               M         movwf   TBLPTRU
0004B0 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0004B2 6EF7               M         movwf   TBLPTRH
0004B4 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0004B6 6EF6               M         movwf   TBLPTRL
0004B8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004BA 50F5               M         movf    TABLAT, W
0004BC                    M loop
0004BC EC?? F???          M         call    WR_DATA         ; write to LCD
0004C0 000B               M         tblrd+*                 ; next row in table
0004C2 50F5               M         movf    TABLAT, W
0004C4 E1??               M         bnz     loop
0004C6 EC?? F???      00611         call    LCD_L2
                      00612         Display PermLog2
  0000                    M         local   loop
0004CA 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0004CC 6EF8               M         movwf   TBLPTRU
0004CE 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0004D0 6EF7               M         movwf   TBLPTRH
0004D2 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0004D4 6EF6               M         movwf   TBLPTRL
0004D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004D8 50F5               M         movf    TABLAT, W
0004DA                    M loop
0004DA EC?? F???          M         call    WR_DATA         ; write to LCD
0004DE 000B               M         tblrd+*                 ; next row in table
0004E0 50F5               M         movf    TABLAT, W
0004E2 E1??               M         bnz     loop
                      00613         
0004E4                00614 HOLD_PERM_LOG
0004E4 EC?? F???      00615         call    READ_KEY
                      00616         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0004E8 0E0D               M         movlw   key0                ; poll for mode
0004EA 6210               M         cpfseq  KEY                 ; check this against key press
0004EC EF?? F???          M         goto    Exit
                          M 
0004F0                    M Next
0004F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0004F2 6A8A               M         clrf    LATB
0004F4 6A8B               M         clrf    LATC
0004F6 6A8C               M         clrf    LATD
0004F8 EF?? F???          M         goto    STANDBY
                          M 
0004FC                    M Exit
0004FC 0000               M         nop
                      00617         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
0004FE 0E00               M         movlw   key1                ; poll for mode
000500 6210               M         cpfseq  KEY                 ; check this against key press
000502 EF?? F???          M         goto    Exit
                          M 
000506                    M Next
000506 6A89               M         clrf    LATA                ; clear pins before proceeding
000508 6A8A               M         clrf    LATB
00050A 6A8B               M         clrf    LATC
00050C 6A8C               M         clrf    LATD
00050E EF?? F???          M         goto    PLOG
                          M 
000512                    M Exit
000512 0000               M         nop
                      00618         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000514 0E01               M         movlw   key2                ; poll for mode
000516 6210               M         cpfseq  KEY                 ; check this against key press
000518 EF?? F???          M         goto    Exit
                          M 
00051C                    M Next
00051C 6A89               M         clrf    LATA                ; clear pins before proceeding
00051E 6A8A               M         clrf    LATB
000520 6A8B               M         clrf    LATC
000522 6A8C               M         clrf    LATD
000524 EF?? F???          M         goto    PLOG
                          M 
000528                    M Exit
000528 0000               M         nop
                      00619         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00052A 0E02               M         movlw   key3                ; poll for mode
00052C 6210               M         cpfseq  KEY                 ; check this against key press
00052E EF?? F???          M         goto    Exit
                          M 
000532                    M Next
000532 6A89               M         clrf    LATA                ; clear pins before proceeding
000534 6A8A               M         clrf    LATB
000536 6A8B               M         clrf    LATC
000538 6A8C               M         clrf    LATD
00053A EF?? F???          M         goto    PLOG
                          M 
00053E                    M Exit
00053E 0000               M         nop
                      00620         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000540 0E04               M         movlw   key4                ; poll for mode
000542 6210               M         cpfseq  KEY                 ; check this against key press
000544 EF?? F???          M         goto    Exit
                          M 
000548                    M Next
000548 6A89               M         clrf    LATA                ; clear pins before proceeding
00054A 6A8A               M         clrf    LATB
00054C 6A8B               M         clrf    LATC
00054E 6A8C               M         clrf    LATD
000550 EF?? F???          M         goto    PLOG
                          M 
000554                    M Exit
000554 0000               M         nop
                      00621         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000556 0E05               M         movlw   key5                ; poll for mode
000558 6210               M         cpfseq  KEY                 ; check this against key press
00055A EF?? F???          M         goto    Exit
                          M 
00055E                    M Next
00055E 6A89               M         clrf    LATA                ; clear pins before proceeding
000560 6A8A               M         clrf    LATB
000562 6A8B               M         clrf    LATC
000564 6A8C               M         clrf    LATD
000566 EF?? F???          M         goto    PLOG
                          M 
00056A                    M Exit
00056A 0000               M         nop
                      00622         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
00056C 0E06               M         movlw   key6                ; poll for mode
00056E 6210               M         cpfseq  KEY                 ; check this against key press
000570 EF?? F???          M         goto    Exit
                          M 
000574                    M Next
000574 6A89               M         clrf    LATA                ; clear pins before proceeding
000576 6A8A               M         clrf    LATB
000578 6A8B               M         clrf    LATC
00057A 6A8C               M         clrf    LATD
00057C EF?? F???          M         goto    PLOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000580                    M Exit
000580 0000               M         nop
                      00623         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000582 0E08               M         movlw   key7                ; poll for mode
000584 6210               M         cpfseq  KEY                 ; check this against key press
000586 EF?? F???          M         goto    Exit
                          M 
00058A                    M Next
00058A 6A89               M         clrf    LATA                ; clear pins before proceeding
00058C 6A8A               M         clrf    LATB
00058E 6A8B               M         clrf    LATC
000590 6A8C               M         clrf    LATD
000592 EF?? F???          M         goto    PLOG
                          M 
000596                    M Exit
000596 0000               M         nop
                      00624         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000598 0E09               M         movlw   key8                ; poll for mode
00059A 6210               M         cpfseq  KEY                 ; check this against key press
00059C EF?? F???          M         goto    Exit
                          M 
0005A0                    M Next
0005A0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005A2 6A8A               M         clrf    LATB
0005A4 6A8B               M         clrf    LATC
0005A6 6A8C               M         clrf    LATD
0005A8 EF?? F???          M         goto    PLOG
                          M 
0005AC                    M Exit
0005AC 0000               M         nop
                      00625         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0005AE 0E0A               M         movlw   key9                ; poll for mode
0005B0 6210               M         cpfseq  KEY                 ; check this against key press
0005B2 EF?? F???          M         goto    Exit
                          M 
0005B6                    M Next
0005B6 6A89               M         clrf    LATA                ; clear pins before proceeding
0005B8 6A8A               M         clrf    LATB
0005BA 6A8B               M         clrf    LATC
0005BC 6A8C               M         clrf    LATD
0005BE EF?? F???          M         goto    PLOG
                          M 
0005C2                    M Exit
0005C2 0000               M         nop
0005C4 D???           00626         bra HOLD_PERM_LOG
                      00627         
0005C6                00628 PLOG
0005C6 EC?? F???      00629         call    ClrLCD
                      00630         Display PermLog1
  0000                    M         local   loop
0005CA 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005CC 6EF8               M         movwf   TBLPTRU
0005CE 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005D0 6EF7               M         movwf   TBLPTRH
0005D2 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005D4 6EF6               M         movwf   TBLPTRL
0005D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005D8 50F5               M         movf    TABLAT, W
0005DA                    M loop
0005DA EC?? F???          M         call    WR_DATA         ; write to LCD
0005DE 000B               M         tblrd+*                 ; next row in table
0005E0 50F5               M         movf    TABLAT, W
0005E2 E1??               M         bnz     loop
                      00631         
                      00632         ; find the key press value
0005E4 C010 FFE8      00633         movff   KEY, WREG
0005E8 2AE8           00634         incf    WREG        ; W = KEY+1
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005EA 6E17           00635         movwf   temp
                      00636         
0005EC 42E8           00637         rrncf   WREG        ; division by 4
0005EE 9EE8           00638         bcf     WREG, 7     ; clear last bit, overflow from rotate
0005F0 42E8           00639         rrncf   WREG        
0005F2 9EE8           00640         bcf     WREG, 7
0005F4 5E17           00641         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0005F6 C017 FFE8      00642         movff   temp, WREG
0005FA C017 F011      00643         movff   temp, temp_KEY
0005FE 0D15           00644         mullw   d'21'       ; indexed as mutliples of 21
                      00645 
000600                00646 displayNum
000600 C011 FFE8      00647         movff   temp_KEY, WREG
000604 0F30           00648         addlw   0x30
000606 EC?? F???      00649         call    WR_DATA
00060A 0E3A           00650         movlw   ":"
00060C EC?? F???      00651         call    WR_DATA
000610 0E20           00652         movlw   " "
000612 EC?? F???      00653         call    WR_DATA
                      00654         
000616 CFF3 F022      00655         movff   PRODL, L_EE
00061A 0E00           00656         movlw   d'0'
00061C 2622           00657         addwf   L_EE
                      00658         READEE  OP_sec, H_EE, L_EE
00061E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000622 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000626 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000628 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00062A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00062C CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000630 2A22           00659         incf    L_EE
                      00660         READEE  OP_INT, H_EE, L_EE
000632 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000636 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00063A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00063C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00063E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000640 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000644 2A22           00661         incf    L_EE
000646 EC?? F???      00662         call    DisplayTime
00064A CFF3 F022      00663         movff   PRODL, L_EE
                      00664         
                      00665         ; reset eeprom to beginning
00064E EC?? F???      00666         call    LCD_L2
000652 CFF3 F022      00667         movff   PRODL, L_EE
000656 EC?? F???      00668         call    DispOpRTC
                      00669         
00065A                00670 HOLD_PLOG
00065A EC?? F???      00671         call    READ_KEY
                      00672         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00065E 0E0D               M         movlw   key0                ; poll for mode
000660 6210               M         cpfseq  KEY                 ; check this against key press
000662 EF?? F???          M         goto    Exit
                          M 
000666                    M Next
000666 6A89               M         clrf    LATA                ; clear pins before proceeding
000668 6A8A               M         clrf    LATB
00066A 6A8B               M         clrf    LATC
00066C 6A8C               M         clrf    LATD
00066E EF?? F???          M         goto    PERM_LOG
                          M 
000672                    M Exit
000672 0000               M         nop
000674 D???           00673         bra HOLD_PERM_LOG
                      00674         
                      00675 ;*******************************************************************************
                      00676 ; pc interface
                      00677 ;*******************************************************************************
                      00678 
000676                00679 PC_MODE
000676 EC?? F???      00680         call    ClrLCD
                      00681         Display PC1
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
00067A 0E??               M         movlw   upper PC1       ; Move Table<20:16>
00067C 6EF8               M         movwf   TBLPTRU
00067E 0E??               M         movlw   high PC1        ; Move Table<15:8>
000680 6EF7               M         movwf   TBLPTRH
000682 0E??               M         movlw   low PC1         ; Move Table<7:0>
000684 6EF6               M         movwf   TBLPTRL
000686 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000688 50F5               M         movf    TABLAT, W
00068A                    M loop
00068A EC?? F???          M         call    WR_DATA         ; write to LCD
00068E 000B               M         tblrd+*                 ; next row in table
000690 50F5               M         movf    TABLAT, W
000692 E1??               M         bnz     loop
000694 EC?? F???      00682         call    LCD_L2
                      00683         Display PC2
  0000                    M         local   loop
000698 0E??               M         movlw   upper PC2       ; Move Table<20:16>
00069A 6EF8               M         movwf   TBLPTRU
00069C 0E??               M         movlw   high PC2        ; Move Table<15:8>
00069E 6EF7               M         movwf   TBLPTRH
0006A0 0E??               M         movlw   low PC2         ; Move Table<7:0>
0006A2 6EF6               M         movwf   TBLPTRL
0006A4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006A6 50F5               M         movf    TABLAT, W
0006A8                    M loop
0006A8 EC?? F???          M         call    WR_DATA         ; write to LCD
0006AC 000B               M         tblrd+*                 ; next row in table
0006AE 50F5               M         movf    TABLAT, W
0006B0 E1??               M         bnz     loop
0006B2 CFF9 F03A      00684         movff   PCL, PC_PCL
0006B6 CFFA F03B      00685         movff   PCLATH, PC_PCLATH
0006BA CFFB F03C      00686         movff   PCLATU, PC_PCLATU
                      00687         
0006BE                00688 HOLD_PC
0006BE EC?? F???      00689         call    READ_KEY
                      00690         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0006C2 0E0D               M         movlw   key0                ; poll for mode
0006C4 6210               M         cpfseq  KEY                 ; check this against key press
0006C6 EF?? F???          M         goto    Exit
                          M 
0006CA                    M Next
0006CA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006CC 6A8A               M         clrf    LATB
0006CE 6A8B               M         clrf    LATC
0006D0 6A8C               M         clrf    LATD
0006D2 EF?? F???          M         goto    STANDBY
                          M 
0006D6                    M Exit
0006D6 0000               M         nop
                      00691         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0006D8 0E0E               M         movlw   keyH                ; poll for mode
0006DA 6210               M         cpfseq  KEY                 ; check this against key press
0006DC EF?? F???          M         goto    Exit
                          M 
0006E0                    M Next
0006E0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E2 6A8A               M         clrf    LATB
0006E4 6A8B               M         clrf    LATC
0006E6 6A8C               M         clrf    LATD
0006E8 EF?? F???          M         goto    PC_TRANSFER
                          M 
0006EC                    M Exit
0006EC 0000               M         nop
0006EE D???           00692         bra     HOLD_PC
                      00693 
0006F0                00694 PC_TRANSFER
0006F0 6839           00695         setf    transferring
0006F2 EC?? F???      00696         call    ClrLCD
                      00697         Display PCTransfer
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
0006F6 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0006F8 6EF8               M         movwf   TBLPTRU
0006FA 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0006FC 6EF7               M         movwf   TBLPTRH
0006FE 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000700 6EF6               M         movwf   TBLPTRL
000702 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000704 50F5               M         movf    TABLAT, W
000706                    M loop
000706 EC?? F???          M         call    WR_DATA         ; write to LCD
00070A 000B               M         tblrd+*                 ; next row in table
00070C 50F5               M         movf    TABLAT, W
00070E E1??               M         bnz     loop
                      00698         ;call   DataUSART
000710 6A39           00699         clrf    transferring
000712 D???           00700         bra     HOLD_PC
                      00701         
                      00702 ;*******************************************************************************
                      00703 ; subroutines
                      00704 ;*******************************************************************************
                      00705 
000714                00706 RTC_INIT
                      00707         ; set sda and scl to high-z
000714 9882           00708         bcf     PORTC, 4
000716 9682           00709         bcf     PORTC, 3
000718 8894           00710         bsf     TRISC, 4
00071A 8694           00711         bsf     TRISC, 3
                      00712 
00071C EC?? F???      00713         call    i2c_common_setup
                      00714         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000720 0012           00715 return
                      00716                 
000722                00717 DISPLAY_RTC
                      00718         
                      00719         ; display data in this format hh/minmin/yy yy/mm/dd
                      00720         rtc_read    0x02            ; 0x02 from DS1307 - hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000722 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000724 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000726 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00072A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00072C EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000730 5000           00721         movf    tens_digit,WREG
000732 EC?? F???      00722         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000736 5000           00723         movf    ones_digit,WREG
000738 EC?? F???      00724         call    WR_DATA
00073C 0E68           00725         movlw   "h"
00073E EC?? F???      00726         call    WR_DATA
                      00727         
                      00728         rtc_read    0x01            ; 0x01 from DS1307 - minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000742 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
000744 6E??               M movwf regaddress
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (call)
000746 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00074A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00074C EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000750 5000           00729         movf    tens_digit,WREG
000752 EC?? F???      00730         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000756 5000           00731         movf    ones_digit,WREG
000758 EC?? F???      00732         call    WR_DATA
00075C 0E20           00733         movlw   " "
00075E EC?? F???      00734         call    WR_DATA
                      00735         
                      00736         rtc_read    0x06            ; 0x06 from DS1307 - years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000762 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
000764 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000766 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00076A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00076C EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000770 5000           00737         movf    tens_digit,WREG
000772 EC?? F???      00738         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000776 5000           00739         movf    ones_digit,WREG
000778 EC?? F???      00740         call    WR_DATA
00077C 0E2F           00741         movlw   "/"
00077E EC?? F???      00742         call    WR_DATA
                      00743         
                      00744         rtc_read    0x05            ; 0x06 from DS1307 - months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000782 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
000784 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000786 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00078A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00078C EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000790 5000           00745         movf    tens_digit,WREG
000792 EC?? F???      00746         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000796 5000           00747         movf    ones_digit,WREG
000798 EC?? F???      00748         call    WR_DATA
00079C 0E2F           00749         movlw   "/"
00079E EC?? F???      00750         call    WR_DATA
                      00751         
                      00752         rtc_read    0x04            ; 0x06 from DS1307 - days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (movlw)
0007A2 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
0007A4 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0007A6 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0007AA 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0007AC EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0007B0 5000           00753         movf    tens_digit,WREG
0007B2 EC?? F???      00754         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0007B6 5000           00755         movf    ones_digit,WREG
0007B8 EC?? F???      00756         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
0007BC 0012           00757 return
                      00758         
0007BE                00759 SET_TIME
                      00760         rtc_resetAll
                          M ;input: none
                          M ;output: none
                          M ;desc: Resets all the time keeping registers on the RTC to zero
                          M 
Warning[203]: Found opcode in column 1. (clrf)
0007BE 6A??               M clrf databyte
Warning[203]: Found opcode in column 1. (movlw)
0007C0 0E06               M movlw 6
Warning[203]: Found opcode in column 1. (movwf)
0007C2 6E??               M movwf regaddress ;start at 6 and go down, and set all to 0
                          M 
0007C4                    M del_loop0
Warning[203]: Found opcode in column 1. (call)
0007C4 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (decfsz)
0007C8 2E??               M decfsz regaddress
Warning[203]: Found opcode in column 1. (bra)
0007CA D???               M bra del_loop0
Warning[203]: Found opcode in column 1. (call)
0007CC EC?? F???          M call write_rtc ;sets registers 0-6 to zero
  00000001                M _loopknt set _loopknt+1
                      00761         
                      00762         rtc_set 0x00,   b'10000000'
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0007D0 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
0007D2 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0007D4 0E80               M movlw b'10000000'
Warning[203]: Found opcode in column 1. (movwf)
0007D6 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0007D8 EC?? F???          M call write_rtc
                      00763 
                      00764         rtc_set 0x06,   b'00010111'             ; Year 17
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0007DC 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
0007DE 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0007E0 0E17               M movlw b'00010111'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (movwf)
0007E2 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0007E4 EC?? F???          M call write_rtc
                      00765         rtc_set 0x05,   b'00000010'             ; Month 2
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0007E8 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
0007EA 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0007EC 0E02               M movlw b'00000010'
Warning[203]: Found opcode in column 1. (movwf)
0007EE 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0007F0 EC?? F???          M call write_rtc
                      00766         rtc_set 0x04,   b'00010000'             ; Date 10
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
0007F4 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
0007F6 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0007F8 0E10               M movlw b'00010000'
Warning[203]: Found opcode in column 1. (movwf)
0007FA 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
0007FC EC?? F???          M call write_rtc
                      00767         rtc_set 0x02,   b'00100001'             ; Hours 18
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000800 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000802 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000804 0E21               M movlw b'00100001'
Warning[203]: Found opcode in column 1. (movwf)
000806 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000808 EC?? F???          M call write_rtc
                      00768         rtc_set 0x01,   b'00101001'             ; Minutes 27
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00080C 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
00080E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000810 0E29               M movlw b'00101001'
Warning[203]: Found opcode in column 1. (movwf)
000812 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000814 EC?? F???          M call write_rtc
                      00769         rtc_set 0x00,   b'00000000'             ; Seconds 0
                          M ;input: addliteral: value of address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000818 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
00081A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
00081C 0E00               M movlw b'00000000'
Warning[203]: Found opcode in column 1. (movwf)
00081E 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (call)
000820 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (return)
000824 0012           00770 return
                      00771         
000826                00772 INIT_USART
000826 0E0F           00773         movlw   15      ; baud rate 9600
000828 6EAF           00774         movwf   SPBRG
00082A 6AAC           00775         clrf    TXSTA
                      00776         
00082C 6AAB           00777         clrf    RCSTA
00082E 8EAB           00778         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000830 88AB           00779         bsf     RCSTA,CREN      ; continous receive
                      00780         
000832 8AAC           00781         bsf     TXSTA, TXEN     ; transmit enabled
000834 0012           00782         return
                      00783 
                      00784 ;DataUSART
                      00785 ;       
                      00786 ;       movlw   0x02
                      00787 ;       call    USART_WAIT
                      00788 ;       movlw   0x0D
                      00789 ;       call    USART_WAIT
                      00790 ;       
                      00791 ;       movlw   d'21'       ; start of permanent logs
                      00792 ;       movff   w, L_EE
                      00793 ;       TransferTable   PCLog1
                      00794 ;       
                      00795 ;       ; display time here
                      00796 ;;      rtc_read        0x02
                      00797 ;;              movf        tens_digit, W
                      00798 ;;        andlw       b'00000001'
                      00799 ;;        addlw       0x30
                      00800 ;;        call        TransmitWaitUSART
                      00801 ;;        movf        ones_digit, W
                      00802 ;;        call        TransmitWaitUSART
                      00803 ;;              movlw           ":"
                      00804 ;;              call            TransmitWaitUSART
                      00805 ;;              ; Dispay minutes
                      00806 ;;              rtc_read        0x01
                      00807 ;;              call        SendRTC_USART
                      00808 ;;              ; Dispay AM/PM
                      00809 ;;              rtc_read        0x02
                      00810 ;;        movlw       "P"
                      00811 ;;        btfss       tens_digit, 1
                      00812 ;;        movlw       "A"
                      00813 ;;        call        TransmitWaitUSART
                      00814 ;;        movlw       "M"
                      00815 ;;        call        TransmitWaitUSART
                      00816 ;;              movlw           " "
                      00817 ;;        call        TransmitWaitUSART
                      00818 ;;              ; Display month
                      00819 ;;              rtc_read        0x05
                      00820 ;;              call        SendRTC_USART
                      00821 ;;              movlw           0x2F            ; ASCII '/'
                      00822 ;;              call            TransmitWaitUSART
                      00823 ;;              ; Display day
                      00824 ;;              rtc_read        0x04
                      00825 ;;              call        SendRTC_USART
                      00826 ;;              movlw           0x2F            ; ASCII '/'
                      00827 ;;              call            TransmitWaitUSART
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00828 ;;              ; Display year
                      00829 ;;              rtc_read        0x06
                      00830 ;;              call        SendRTC_USART
                      00831 ;       
                      00832 ;       call    USART_LINE
                      00833 ;       call    USART_LINE
                      00834 ;       
                      00835 ;       clrf    counter
                      00836 ;       incf    counter
                      00837 ;
                      00838 ;USART_TRANSFER
                      00839 ;       movlw   d'21'
                      00840 ;       mulwf   counter
                      00841 ;       movff   PRODL, L_EE
                      00842 ;       movlw   d'9'
                      00843 ;       addwf   L_EE
                      00844 ;       READEE  OP_sec, H_EE, L_EE
                      00845 ;       incf    L_EE
                      00846 ;       READEE  OP_INT, H_EE, L_EE
                      00847 ;       incf    L_EE
                      00848 ;       ; call  TransferTime
                      00849 ;       
                      00850 ;       ; send rtc
                      00851 ;       movlw   0x09
                      00852 ;       call    USART_WAIT
                      00853 ;       movff   PRODL, L_EE
                      00854 ;       ;call   TransferRTC
                      00855 ;       call    USART_LINE
                      00856 ;       
                      00857 ;       
                      00858 ;       
                      00859 ;       
                      00860 ;USART_WAIT
                      00861 ;       movwf   TXREG
                      00862 ;       btfss   TXSTA,1
                      00863 ;       goto    $-2
                      00864 ;       return
                      00865 ;
                      00866 ;USART_LINE
                      00867 ;       movlw   0x0A
                      00868 ;       call    USART_WAIT
                      00869 ;       movlw   0x0D
                      00870 ;       call    USART_WAIT
                      00871 ;       return
                      00872         
                      00873         
000836                00874 Delay5us
000836 0E78           00875         movlw   d'120'
000838 6E1C           00876         movwf   d5us
                      00877 
00083A                00878 loop5us
00083A 2E1C           00879         decfsz  d5us
00083C EF?? F???      00880         goto    loop5us
000840 0000           00881         nop
000842 0012           00882         return
                      00883 
000844                00884 Delay200us
000844 0EA4           00885         movlw   0xA4
000846 6E1D           00886         movwf   d200us
                      00887 
000848                00888 loop200us
000848 2E1D           00889         decfsz  d200us
00084A EF?? F???      00890         goto    loop200us
00084E 0000           00891         nop
000850 0012           00892         return
                      00893 
000852                00894 Delay50ms
000852 0EF9           00895         movlw   0xF9
000854 6E1E           00896         movwf   d50ms
                      00897 
000856                00898 loop50ms
000856 EC?? F???      00899         call    Delay200us
00085A 2E1E           00900         decfsz  d50ms
                      00901 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00085C                00902 Cycles
00085C EF?? F???      00903         goto    loop50ms
000860 EC?? F???      00904         call    Delay200us
000864 0012           00905         return
                      00906 
000866                00907 WriteEE_RTC
                      00908         WriteEE tens_digit, H_EE, L_EE
000866 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00086A C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00086E C??? FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
000872 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000874 D???               M         bra     $-2
                          M 
000876 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000878 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00087A 84A6               M         bsf     EECON1, WREN    ; enable write
00087C 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00087E 98A1               M         bcf     PIR2, EEIF
                          M 
000880 0E55               M         movlw   0x55
000882 6EA7               M         movwf   EECON2      ; write 55h
000884 0EAA               M         movlw   0xAA
000886 6EA7               M         movwf   EECON2      ; write 0xAA
000888 82A6               M         bsf     EECON1, WR          ; begin write
00088A B2A6               M         btfsc   EECON1, WR
00088C D???               M         bra     $-2
                          M 
00088E 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000890 94A6               M         bcf     EECON1, WREN        ; disable writes
000892 2A22           00909         incf    L_EE
                      00910         WriteEE ones_digit, H_EE, L_EE
000894 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000898 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00089C C??? FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
0008A0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008A2 D???               M         bra     $-2
                          M 
0008A4 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0008A6 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0008A8 84A6               M         bsf     EECON1, WREN    ; enable write
0008AA 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0008AC 98A1               M         bcf     PIR2, EEIF
                          M 
0008AE 0E55               M         movlw   0x55
0008B0 6EA7               M         movwf   EECON2      ; write 55h
0008B2 0EAA               M         movlw   0xAA
0008B4 6EA7               M         movwf   EECON2      ; write 0xAA
0008B6 82A6               M         bsf     EECON1, WR          ; begin write
0008B8 B2A6               M         btfsc   EECON1, WR
0008BA D???               M         bra     $-2
                          M 
0008BC 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0008BE 94A6               M         bcf     EECON1, WREN        ; disable writes
0008C0 2A22           00911         incf    L_EE
0008C2 0012           00912         return
                      00913 
0008C4                00914 ClearEEPROM_21
0008C4 6A21           00915         clrf    H_EE
0008C6 6A22           00916         clrf    L_EE
0008C8 6820           00917         setf    clear_EE
0008CA 6A15           00918         clrf    counter
0008CC                00919 ClearNext
                      00920         WriteEE         clear_EE, H_EE, L_EE
0008CC C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0008D0 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0008D4 C020 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
0008D8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008DA D???               M         bra     $-2
                          M 
0008DC 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0008DE 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008E0 84A6               M         bsf     EECON1, WREN    ; enable write
0008E2 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0008E4 98A1               M         bcf     PIR2, EEIF
                          M 
0008E6 0E55               M         movlw   0x55
0008E8 6EA7               M         movwf   EECON2      ; write 55h
0008EA 0EAA               M         movlw   0xAA
0008EC 6EA7               M         movwf   EECON2      ; write 0xAA
0008EE 82A6               M         bsf     EECON1, WR          ; begin write
0008F0 B2A6               M         btfsc   EECON1, WR
0008F2 D???               M         bra     $-2
                          M 
0008F4 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0008F6 94A6               M         bcf     EECON1, WREN        ; disable writes
0008F8 2A15           00921         incf            counter
0008FA 2A22           00922         incf            L_EE
0008FC 0E15           00923         movlw           d'21'
0008FE 6215           00924         cpfseq          counter
000900 EF?? F???      00925         goto            ClearNext
000904 6A21           00926         clrf            H_EE            ; reset EEPROMaddr
000906 6A22           00927         clrf            L_EE
000908 0012           00928         return
                      00929         
00090A                00930 READ_KEY
00090A A281           00931         btfss   PORTB, 1        ; check for keypad interrupt
00090C EF?? F???      00932         goto    READ_KEY
000910 3881           00933         swapf   PORTB, W
000912 0B0F           00934         andlw   0x0F
000914 6E10           00935         movwf   KEY
000916 B281           00936         btfsc   PORTB, 1
000918 EF?? F???      00937         goto    $-2
00091C 0012           00938         return
                      00939 
00091E                00940 READ_KEY_TIME
00091E EC?? F???      00941         call        LCD_L2          ; go to second line to print RTC
                      00942 
                      00943         ; display the time
000922 EC?? F???      00944         call    DISPLAY_RTC
                      00945 
000926 A281           00946         btfss       PORTB, 1    ; keypad interrupt
000928 EF?? F???      00947         goto        READ_KEY_TIME
00092C 3881           00948         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
00092E 0B0F           00949         andlw       0x0F        ; only want W3:0
000930 6E10           00950         movwf       KEY         ; write this value to the KEY
000932 B281           00951         btfsc       PORTB, 1    ; wait for release
000934 EF?? F???      00952         goto        $-2         ; go back one instruction
000938 0012           00953         return
                      00954 
00093A                00955 DisplayTime
                      00956         READEE  REG_EE, H_EE, L_EE
00093A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00093E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000942 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000944 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000946 80A6               M         bsf     EECON1, RD          ; read EEPROM
000948 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
00094C 0EFF           00957         movlw   0xFF
00094E 6223           00958         cpfseq  REG_EE
000950 EF?? F???      00959         goto    NoSkipDispOpTime
                      00960         Display NoData
  0000                    M         local   loop
000954 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000956 6EF8               M         movwf   TBLPTRU
000958 0E??               M         movlw   high NoData     ; Move Table<15:8>
00095A 6EF7               M         movwf   TBLPTRH
00095C 0E??               M         movlw   low NoData      ; Move Table<7:0>
00095E 6EF6               M         movwf   TBLPTRL
000960 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000962 50F5               M         movf    TABLAT, W
000964                    M loop
000964 EC?? F???          M         call    WR_DATA         ; write to LCD
000968 000B               M         tblrd+*                 ; next row in table
00096A 50F5               M         movf    TABLAT, W
00096C E1??               M         bnz     loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00096E 0EFF           00961         movlw   0xFF
000970 6023           00962         cpfslt  REG_EE
000972 EF?? F???      00963         goto    SkipDispOpTime
                      00964 
000976                00965 NoSkipDispOpTime
000976 3818           00966         swapf   OP_sec, W
000978 6E17           00967         movwf   temp
00097A 0E0F           00968         movlw   0x0F
00097C 1617           00969         andwf   temp
00097E C017 FFE8      00970         movff   temp, WREG
000982 0F30           00971         addlw   0x30
000984 EC?? F???      00972         call    WR_DATA
                      00973 
000988 C018 F017      00974         movff   OP_sec, temp    ; 1's seconds
00098C 0E0F           00975         movlw   0x0F
00098E 1617           00976         andwf   temp            ; Temp = lower nibble of Op_Seconds
000990 C017 FFE8      00977         movff   temp, WREG      ; W = Temp
000994 0F30           00978         addlw   0x30            ; Convert to ASCII
000996 EC?? F???      00979         call    WR_DATA
                      00980 
00099A 0E2E           00981         movlw   0x2E            ; Write '.'
00099C EC?? F???      00982         call    WR_DATA
                      00983 
0009A0 0E73           00984         movlw   0x73            ; Write 's'
0009A2 EC?? F???      00985         call    WR_DATA
0009A6 EC?? F???      00986         call    LCD_L2
0009AA                00987 SkipDispOpTime
0009AA 0012           00988         return
                      00989 
0009AC                00990 DispOpRTC
0009AC 0E0B           00991         movlw   d'11'
0009AE 2622           00992         addwf   L_EE
                      00993 
                      00994         READEE  REG_EE, H_EE, L_EE
0009B0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0009B4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0009B8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009BA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009BC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009BE CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0009C2 0EFF           00995         movlw   0xFF
0009C4 6223           00996         cpfseq  REG_EE
0009C6 EF?? F???      00997         goto    NoSkipDispOpRTC
                      00998         Display NoData
  0000                    M         local   loop
0009CA 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0009CC 6EF8               M         movwf   TBLPTRU
0009CE 0E??               M         movlw   high NoData     ; Move Table<15:8>
0009D0 6EF7               M         movwf   TBLPTRH
0009D2 0E??               M         movlw   low NoData      ; Move Table<7:0>
0009D4 6EF6               M         movwf   TBLPTRL
0009D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0009D8 50F5               M         movf    TABLAT, W
0009DA                    M loop
0009DA EC?? F???          M         call    WR_DATA         ; write to LCD
0009DE 000B               M         tblrd+*                 ; next row in table
0009E0 50F5               M         movf    TABLAT, W
0009E2 E1??               M         bnz     loop
0009E4 0EFF           00999         movlw   0xFF
0009E6 6023           01000         cpfslt  REG_EE
0009E8 EF?? F???      01001         goto    SkipDispOpRTC
                      01002 
0009EC                01003 NoSkipDispOpRTC
                      01004         READEE  REG_EE, H_EE, L_EE
0009EC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0009F0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0009F4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009F6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009F8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009FA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0009FE C023 FFE8      01005         movff   REG_EE, WREG
000A02 0BF1           01006         andlw   b'11110001'
000A04 EC?? F???      01007         call    WR_DATA
000A08 2A22           01008         incf    L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-10-2017  21:29:05         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01009         READEE  REG_EE, H_EE, L_EE
000A0A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A0E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A12 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A14 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A16 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A18 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A1C C023 FFE8      01010         movff   REG_EE, WREG
000A20 EC?? F???      01011         call    WR_DATA
000A24 2A22           01012         incf    L_EE
                      01013 
000A26 0E3A           01014         movlw           ":"
000A28 EC?? F???      01015         call            WR_DATA
000A2C EC?? F???      01016         call DispOpRTC_Helper
000A30 0E20           01017         movlw           " "
000A32 EC?? F???      01018         call            WR_DATA
000A36 EC?? F???      01019         call DispOpRTC_Helper
000A3A 0E2F           01020         movlw           "/"
000A3C EC?? F???      01021         call            WR_DATA
000A40 EC?? F???      01022         call DispOpRTC_Helper
000A44 0E2F           01023         movlw           "/"
000A46 EC?? F???      01024         call            WR_DATA
000A4A EC?? F???      01025         call DispOpRTC_Helper
000A4E                01026 SkipDispOpRTC
000A4E 0012           01027                 return
000A50                01028 DispOpRTC_Helper
                      01029         READEE          REG_EE, H_EE, L_EE
000A50 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A54 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A58 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A5A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A5C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A5E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A62 C023 FFE8      01030         movff           REG_EE, WREG
000A66 EC?? F???      01031         call            WR_DATA
000A6A 2A22           01032         incf            L_EE
                      01033         READEE          REG_EE, H_EE, L_EE
000A6C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A70 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000A74 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A76 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A78 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A7A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000A7E C023 FFE8      01034         movff           REG_EE, WREG
000A82 EC?? F???      01035         call            WR_DATA
000A86 2A22           01036         incf            L_EE
000A88 0012           01037         return
Warning[205]: Found directive in column 1. (end)
                      01038 end

Errors   :     0
Warnings :   107 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

