MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000096 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
0000A2 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000AE 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000B6 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000C4 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000CE 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000DE 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000E8 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000F2 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 LOAD_STANDBY_TIME
00001C 0EFF           00271         movlw   0xff
00001E 6ED7           00272         movwf   TMR0H
000020 0EFF           00273         movlw   0xff
000022 6ED6           00274         movwf   TMR0L
                      00275 
000024 0012           00276         return  
                      00277 
000026                00278 LOAD_EXE_TIME
000026 0EC3           00279         movlw   0xc3
000028 6ED7           00280         movwf   TMR0H
00002A 0E25           00281         movlw   0x25
00002C 6ED6           00282         movwf   TMR0L
                      00283         
00002E 0012           00284         return
                      00285         
000030                00286 ISR_HIGH
                      00287         saveContext
000030 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000034 6E14               M     movwf   temp_W                  ; save W
                      00288         
000036 0E00           00289         movlw   0x00
000038 6238           00290         cpfseq  inStandby
00003A EC?? F???      00291         call    Shift
                      00292         
                      00293         ;reset timer, but need to check which time increment 
00003E 0E00           00294         movlw   0x00
000040 6238           00295         cpfseq  inStandby
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000042 EC?? F???      00296         call    LOAD_STANDBY_TIME
                      00297         
000046 0EFF           00298         movlw   0xff
000048 6238           00299         cpfseq  inStandby
00004A EC?? F???      00300         call    LOAD_EXE_TIME
                      00301 
                      00302                 
                      00303         ; displaying the execution time in seconds
                      00304 ;       swapf   OP_sec, 0       ; 100's seconds
                      00305 ;       movwf   temp
                      00306 ;       movlw   0x0f
                      00307 ;       andwf   temp
                      00308 ;       movff   temp, WREG
                      00309 ;       addlw   0x30
                      00310 ;       call    WR_DATA
                      00311 ;
                      00312 ;       movff   OP_sec, temp    ; 10's seconds
                      00313 ;       movlw   0x0f
                      00314 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00315 ;       movff   temp, WREG      ; W = Temp
                      00316 ;       addlw   0x30            ; Convert to ASCII
                      00317 ;       call    WR_DATA
                      00318 ;       
                      00319 ;       swapf   OP_INT, WREG    ;1's seconds
                      00320 ;       movwf   temp
                      00321 ;       movlw   0x0f
                      00322 ;       andwf   temp
                      00323 ;       movff   temp, WREG
                      00324 ;       addlw   0x30
                      00325 ;       call    WR_DATA
                      00326 ;
                      00327 ;       movlw   0x73            ; Write 's'
                      00328 ;       call    WR_DATA
                      00329 ;       call    LCD_L2
                      00330                 
                      00331         ;timer interrupt
00004E A4F2           00332         btfss   INTCON, TMR0IF
000050 EF?? F???      00333         goto    END_ISR_HIGH
                      00334         
                      00335         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000054 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000058 0E0F               M         movlw   0x0f
00005A 1617               M         andwf   temp
00005C 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00005E 6217               M         cpfseq  temp
000060 EF?? F???          M         goto    ones
                          M         
000064 0E10               M         movlw   b'00010000'
000066 2619               M         addwf   OP_INT
000068 0EF0               M         movlw   0xf0
00006A 1619               M         andwf   OP_INT
00006C 0EA0               M         movlw   0xa0
00006E 6019               M         cpfslt  OP_INT
                          M         
000070 6A19               M         clrf    OP_INT
000072 EF?? F???          M         goto    endBCD
                          M         
000076                    M ones
000076 2A19               M         incf    OP_INT
000078 EF?? F???          M         goto    endBCD
00007C                    M endBCD
00007C 0000               M         nop
00007E 0E00           00336         movlw   d'0'
000080 6219           00337         cpfseq  OP_INT
000082 EF?? F???      00338         goto    END_ISR_HIGH
                      00339         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000086 C018 F017          M         movff   OP_sec, temp
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;process ones digit
00008A 0E0F               M         movlw   0x0f
00008C 1617               M         andwf   temp
00008E 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000090 6217               M         cpfseq  temp
000092 EF?? F???          M         goto    ones
                          M         
000096 0E10               M         movlw   b'00010000'
000098 2618               M         addwf   OP_sec
00009A 0EF0               M         movlw   0xf0
00009C 1618               M         andwf   OP_sec
00009E 0EA0               M         movlw   0xa0
0000A0 6018               M         cpfslt  OP_sec
                          M         
0000A2 6A18               M         clrf    OP_sec
0000A4 EF?? F???          M         goto    endBCD
                          M         
0000A8                    M ones
0000A8 2A18               M         incf    OP_sec
0000AA EF?? F???          M         goto    endBCD
0000AE                    M endBCD
0000AE 0000               M         nop
                      00340 
0000B0                00341 END_ISR_HIGH
0000B0 94F2           00342         bcf     INTCON, TMR0IF
                      00343         restoreContext
0000B2 3814               M     swapf   temp_W, 0               ; restore W first
0000B4 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000B8 0010           00344         retfie
                      00345 
0000BA                00346 ISR_LOW
                      00347         saveContext
0000BA CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000BE 6E14               M     movwf   temp_W                  ; save W
                      00348         ; KEYPAD INTERRUPT
0000C0 A0F0           00349         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000C2 EF?? F???      00350         goto    END_ISR_LOW
                      00351 
                      00352         ; check operation status
0000C6 0EFF           00353         movlw   0xff                    ; If in operation, skip return
0000C8 621E           00354         cpfseq  inExecution
0000CA EF?? F???      00355         goto    END_ISR_LOW
                      00356 
                      00357         ; process KEY
0000CE 3881           00358         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D0 0B0F           00359         andlw   0x0f
0000D2 6E12           00360         movwf   KEY_ISR
                      00361         
0000D4 0E0C           00362         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000D6 6212           00363         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000D8 EF?? F???      00364         goto    END_ISR_LOW
                      00365         
                      00366         ; reset program counter - emergency stop recorded. 
0000DC 9ED5           00367         bcf     T0CON, TMR0ON
0000DE EC?? F???      00368         call    SAVE_EXE_TIME
                      00369                 
                      00370         ; Clear inExecution flag to stop '*' interrupts
0000E2 6A1E           00371         clrf    inExecution
0000E4 0E01           00372         movlw   d'1'
0000E6 6E37           00373         movwf   STOP_CONDITION
0000E8 EC?? F???      00374         call    SaveData
                      00375         
0000EC 6AFF           00376         clrf    TOSU
0000EE 6AFE           00377         clrf    TOSH
0000F0 6AFD           00378         clrf    TOSL
0000F2 90F0           00379         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00380         restoreContext
0000F4 3814               M     swapf   temp_W, 0               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000FA 0010           00381         retfie
                      00382 
0000FC                00383 END_ISR_LOW
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000FC 90F0           00384         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00385         restoreContext
0000FE 3814               M     swapf   temp_W, 0               ; restore W first
000100 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000104 0010           00386         retfie
                      00387 
                      00388 ;*******************************************************************************
                      00389 ; main
                      00390 ;*******************************************************************************
000106                00391 INIT
000106 0E70           00392         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000108 6ED3           00393         movwf   OSCCON
                      00394         
                      00395         ; i/o
00010A 0E00           00396         movlw   b'00000000'
00010C 6E92           00397         movwf   TRISA
00010E 0EFF           00398         movlw   b'11111111'
000110 6E93           00399         movwf   TRISB               ; keypad
000112 0E00           00400         movlw   b'00000000'
000114 6E94           00401         movwf   TRISC
000116 0E00           00402         movlw   b'00000000'
000118 6E95           00403         movwf   TRISD
00011A 0E00           00404         movlw   b'00000000'
00011C 6E96           00405         movwf   TRISE
                      00406 
                      00407         ; clear ports
00011E 0E00           00408         movlw   b'00000000'
000120 6E89           00409         movwf   LATA
000122 0E00           00410         movlw   b'00000000'
000124 6E8A           00411         movwf   LATB
000126 0E00           00412         movlw   b'00000000'
000128 6E8B           00413         movwf   LATC
00012A 0E00           00414         movlw   b'00000000'
00012C 6E8C           00415         movwf   LATD
00012E 0E00           00416         movlw   b'00000000'
000130 6E8D           00417         movwf   LATE
                      00418         
000132 0E00           00419         movlw   b'00000000'
000134 6EC2           00420         movwf   ADCON0
                      00421 ;       movlw   b'11111111'
                      00422 ;       movwf   ADCON1
                      00423         
                      00424         ; setting up pwm
                      00425 ;       clrf    CM1CONO         ; disable comparators
                      00426 ;       clrf    CM2CONO
                      00427 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00428 ;       movwf   CCP2CON
                      00429 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
                      00430 ;       movwf   CCPR2L
                      00431 ;       
                      00432 ;       bcf     PIR1, TMR2IF
                      00433 ;       bcf     T2CON, T2CKPS1
                      00434 ;       bsf     T2CON, TMR2ON
                      00435         
                      00436         ; initializations
000136 EC?? F???      00437         call    InitLCD
                      00438         ConfigLCD
00013A 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00013C EC?? F???          M           call      WR_INS
                          M 
000140 0E0C               M           movlw     b'00001100'    ; display on/off
000142 EC?? F???          M           call      WR_INS
000146 0E01               M           movlw     b'00000001'    ; Clear ram
000148 EC?? F???          M           call      WR_INS
                      00439         
00014C EC?? F???      00440         call    i2c_common_setup
                      00441         
000150 EC?? F???      00442         call    RTC_INIT
                      00443         ;COLOUR_INIT
000154 EC?? F???      00444         call    INIT_USART
                      00445 
                      00446         ; interrupts
000158 6AD0           00447         clrf    RCON
00015A 6AF2           00448         clrf    INTCON
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00015C 6AF1           00449         clrf    INTCON2
00015E 6AF0           00450         clrf    INTCON3
000160 8ED0           00451         bsf     RCON, IPEN          ; priority mode
000162 8EF2           00452         bsf     INTCON, GIEH        ; permit global interrupts
000164 8CF2           00453         bsf     INTCON, GIEL
000166 8AF1           00454         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000168 8AF2           00455         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
00016A 84F2           00456         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00016C 84F1           00457         bsf     INTCON2, TMR0IP     ; set to high priority
00016E 86F0           00458         bsf     INTCON3, INT1IE
000170 9CF0           00459         bcf     INTCON3, INT1IP
                      00460         
                      00461         ; setting up timer to sychronize with 1 second clock intervals
000172 9ED5           00462         bcf     T0CON, TMR0ON
000174 9CD5           00463         bcf     T0CON, T08BIT
000176 9AD5           00464         bcf     T0CON, T0CS
000178 98D5           00465         bcf     T0CON, T0SE
00017A 96D5           00466         bcf     T0CON, PSA
00017C 94D5           00467         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
00017E 82D5           00468         bsf     T0CON, T0PS1
000180 80D5           00469         bsf     T0CON, T0PS0
                      00470 
000182 6A20           00471         clrf    H_EE
000184 6A21           00472         clrf    L_EE
000186 6A??           00473         clrf    tens_digit
000188 6A??           00474         clrf    ones_digit
                      00475         
00018A 6A2C           00476         clrf    DETECTION_VAL
00018C 6A2D           00477         clrf    ESKA
00018E 6A2E           00478         clrf    ESKA_NOCAP
000190 6A2F           00479         clrf    YOP
000192 6A30           00480         clrf    YOP_NOCAP
000194 6A31           00481         clrf    TOTAL_BOTTLES
000196 6A32           00482         clrf    COLLECTIONS_COUNT
                      00483         
000198 0EF2           00484         movlw     b'11110010'    ; Set required keypad inputs
00019A 6E93           00485         movwf     TRISB
                      00486         
00019C EC?? F???      00487         call    ClrLCD
                      00488         Display Welcome
  0000                    M         local   loop
0001A0 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001A2 6EF8               M         movwf   TBLPTRU
0001A4 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001A6 6EF7               M         movwf   TBLPTRH
0001A8 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001AA 6EF6               M         movwf   TBLPTRL
0001AC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001AE 50F5               M         movf    TABLAT, W
0001B0                    M loop
0001B0 EC?? F???          M         call    WR_DATA         ; write to LCD
0001B4 000B               M         tblrd+*                 ; next row in table
0001B6 50F5               M         movf    TABLAT, W
0001B8 E1??               M         bnz     loop
0001BA EC?? F???      00489         call LCD_L2
                      00490         Display Team
  0000                    M         local   loop
0001BE 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001C0 6EF8               M         movwf   TBLPTRU
0001C2 0E??               M         movlw   high Team       ; Move Table<15:8>
0001C4 6EF7               M         movwf   TBLPTRH
0001C6 0E??               M         movlw   low Team        ; Move Table<7:0>
0001C8 6EF6               M         movwf   TBLPTRL
0001CA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001CC 50F5               M         movf    TABLAT, W
0001CE                    M loop
0001CE EC?? F???          M         call    WR_DATA         ; write to LCD
0001D2 000B               M         tblrd+*                 ; next row in table
0001D4 50F5               M         movf    TABLAT, W
0001D6 E1??               M         bnz     loop
                      00491         
                      00492         Delay50N delayR, 0x28
  0000                    M         local   loop
0001D8 0E28               M         movlw   0x28
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001DA 6E1A               M         movwf   delayR
                          M 
0001DC                    M loop
0001DC EC?? F???          M         call    Delay50ms
0001E0 2E1A               M         decfsz  delayR
0001E2 EF?? F???          M         goto    loop
                      00493 
                      00494 ;*******************************************************************************
                      00495 ; standby mode
                      00496 ;*******************************************************************************
0001E6                00497 STANDBY
0001E6 0E00           00498         movlw   b'00000000'
0001E8 6E84           00499         movwf   PORTE
0001EA 0E00           00500         movlw   b'00000000'
0001EC 6E80           00501         movwf   PORTA
                      00502         
0001EE 6838           00503         setf    inStandby       
0001F0 EC?? F???      00504         call    ClrLCD
                      00505         Display StandBy
  0000                    M         local   loop
0001F4 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F6 6EF8               M         movwf   TBLPTRU
0001F8 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001FA 6EF7               M         movwf   TBLPTRH
0001FC 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FE 6EF6               M         movwf   TBLPTRL
000200 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000202 50F5               M         movf    TABLAT, W
000204                    M loop
000204 EC?? F???          M         call    WR_DATA         ; write to LCD
000208 000B               M         tblrd+*                 ; next row in table
00020A 50F5               M         movf    TABLAT, W
00020C E1??               M         bnz     loop
00020E EC?? F???      00506         call    LCD_L2
                      00507         Display StandbyInfo
  0000                    M         local   loop
000212 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
000214 6EF8               M         movwf   TBLPTRU
000216 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000218 6EF7               M         movwf   TBLPTRH
00021A 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
00021C 6EF6               M         movwf   TBLPTRL
00021E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000220 50F5               M         movf    TABLAT, W
000222                    M loop
000222 EC?? F???          M         call    WR_DATA         ; write to LCD
000226 000B               M         tblrd+*                 ; next row in table
000228 50F5               M         movf    TABLAT, W
00022A E1??               M         bnz     loop
                      00508         
00022C 0EFF           00509         movlw   0xff
00022E 6ED7           00510         movwf   TMR0H
000230 0EFF           00511         movlw   0xff
000232 6ED6           00512         movwf   TMR0L
000234 8ED5           00513         bsf     T0CON, TMR0ON       ; turning on timer
                      00514 
                      00515 
000236                00516 HOLD_STANDBY
000236 EC?? F???      00517         call    READ_KEY_TIME
                      00518 
                      00519         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
00023A 0E00               M         movlw   key1                ; poll for mode
00023C 6210               M         cpfseq  KEY                 ; check this against key press
00023E EF?? F???          M         goto    Exit
                          M 
000242                    M Next
000242 6A89               M         clrf    LATA                ; clear pins before proceeding
000244 6A8A               M         clrf    LATB
000246 6A8B               M         clrf    LATC
000248 6A8C               M         clrf    LATD
00024A EF?? F???          M         goto    COLOUR_TEST
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00024E                    M Exit
00024E 0000               M         nop
                      00520         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000250 0E01               M         movlw   key2                ; poll for mode
000252 6210               M         cpfseq  KEY                 ; check this against key press
000254 EF?? F???          M         goto    Exit
                          M 
000258                    M Next
000258 6A89               M         clrf    LATA                ; clear pins before proceeding
00025A 6A8A               M         clrf    LATB
00025C 6A8B               M         clrf    LATC
00025E 6A8C               M         clrf    LATD
000260 EF?? F???          M         goto    STEP_TEST
                          M 
000264                    M Exit
000264 0000               M         nop
                      00521         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
                          M 
000266 0E02               M         movlw   key3                ; poll for mode
000268 6210               M         cpfseq  KEY                 ; check this against key press
00026A EF?? F???          M         goto    Exit
                          M 
00026E                    M Next
00026E 6A89               M         clrf    LATA                ; clear pins before proceeding
000270 6A8A               M         clrf    LATB
000272 6A8B               M         clrf    LATC
000274 6A8C               M         clrf    LATD
000276 EF?? F???          M         goto    DC_TEST_CW
                          M 
00027A                    M Exit
00027A 0000               M         nop
                      00522         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
00027C 0E04               M         movlw   key4                ; poll for mode
00027E 6210               M         cpfseq  KEY                 ; check this against key press
000280 EF?? F???          M         goto    Exit
                          M 
000284                    M Next
000284 6A89               M         clrf    LATA                ; clear pins before proceeding
000286 6A8A               M         clrf    LATB
000288 6A8B               M         clrf    LATC
00028A 6A8C               M         clrf    LATD
00028C EF?? F???          M         goto    DC_TEST_CCW
                          M 
000290                    M Exit
000290 0000               M         nop
                      00523         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000292 0E03               M         movlw   keyA                ; poll for mode
000294 6210               M         cpfseq  KEY                 ; check this against key press
000296 EF?? F???          M         goto    Exit
                          M 
00029A                    M Next
00029A 6A89               M         clrf    LATA                ; clear pins before proceeding
00029C 6A8A               M         clrf    LATB
00029E 6A8B               M         clrf    LATC
0002A0 6A8C               M         clrf    LATD
0002A2 EF?? F???          M         goto    EXECUTION
                          M 
0002A6                    M Exit
0002A6 0000               M         nop
                      00524         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002A8 0E07               M         movlw   keyB                ; poll for mode
0002AA 6210               M         cpfseq  KEY                 ; check this against key press
0002AC EF?? F???          M         goto    Exit
                          M 
0002B0                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002B0 6A89               M         clrf    LATA                ; clear pins before proceeding
0002B2 6A8A               M         clrf    LATB
0002B4 6A8B               M         clrf    LATC
0002B6 6A8C               M         clrf    LATD
0002B8 EF?? F???          M         goto    LOG
                          M 
0002BC                    M Exit
0002BC 0000               M         nop
                      00525         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002BE 0E0B               M         movlw   keyC                ; poll for mode
0002C0 6210               M         cpfseq  KEY                 ; check this against key press
0002C2 EF?? F???          M         goto    Exit
                          M 
0002C6                    M Next
0002C6 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C8 6A8A               M         clrf    LATB
0002CA 6A8B               M         clrf    LATC
0002CC 6A8C               M         clrf    LATD
0002CE EF?? F???          M         goto    PERM_LOG
                          M 
0002D2                    M Exit
0002D2 0000               M         nop
                      00526         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002D4 0E0F               M         movlw   keyD                ; poll for mode
0002D6 6210               M         cpfseq  KEY                 ; check this against key press
0002D8 EF?? F???          M         goto    Exit
                          M 
0002DC                    M Next
0002DC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002DE 6A8A               M         clrf    LATB
0002E0 6A8B               M         clrf    LATC
0002E2 6A8C               M         clrf    LATD
0002E4 EF?? F???          M         goto    PC_MODE
                          M 
0002E8                    M Exit
0002E8 0000               M         nop
0002EA D???           00527         bra     HOLD_STANDBY
                      00528         
                      00529 ;*******************************************************************************
                      00530 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00531 ;*******************************************************************************
                      00532 
0002EC                00533 DC_TEST_CW
0002EC 6A38           00534         clrf    inStandby
0002EE 0E00           00535         movlw   b'00000000'
0002F0 6E84           00536         movwf   PORTE
                      00537         Delay50N    delayR, 0x0a   
  0000                    M         local   loop
0002F2 0E0A               M         movlw   0x0a
0002F4 6E1A               M         movwf   delayR
                          M 
0002F6                    M loop
0002F6 EC?? F???          M         call    Delay50ms
0002FA 2E1A               M         decfsz  delayR
0002FC EF?? F???          M         goto    loop
000300                00538 DC_TEST_CW_HOLD
000300 0E01           00539         movlw   b'00000001'
000302 6E84           00540         movwf   PORTE
                      00541 
000304 EC?? F???      00542         call    READ_KEY
                      00543         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000308 0E0D               M         movlw   key0                ; poll for mode
00030A 6210               M         cpfseq  KEY                 ; check this against key press
00030C EF?? F???          M         goto    Exit
                          M 
000310                    M Next
000310 6A89               M         clrf    LATA                ; clear pins before proceeding
000312 6A8A               M         clrf    LATB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000314 6A8B               M         clrf    LATC
000316 6A8C               M         clrf    LATD
000318 EF?? F???          M         goto    STANDBY
                          M 
00031C                    M Exit
00031C 0000               M         nop
00031E D???           00544         bra     DC_TEST_CW_HOLD
                      00545         
000320                00546 DC_TEST_CCW
000320 6A38           00547         clrf    inStandby
000322 0E00           00548         movlw   b'00000000'
000324 6E84           00549         movwf   PORTE
                      00550         Delay50N    delayR, 0x0a
  0000                    M         local   loop
000326 0E0A               M         movlw   0x0a
000328 6E1A               M         movwf   delayR
                          M 
00032A                    M loop
00032A EC?? F???          M         call    Delay50ms
00032E 2E1A               M         decfsz  delayR
000330 EF?? F???          M         goto    loop
000334                00551 DC_TEST_CCW_HOLD
000334 0E02           00552         movlw   b'00000010'
000336 6E84           00553         movwf   PORTE
                      00554         
000338 EC?? F???      00555         call    READ_KEY
                      00556         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00033C 0E0D               M         movlw   key0                ; poll for mode
00033E 6210               M         cpfseq  KEY                 ; check this against key press
000340 EF?? F???          M         goto    Exit
                          M 
000344                    M Next
000344 6A89               M         clrf    LATA                ; clear pins before proceeding
000346 6A8A               M         clrf    LATB
000348 6A8B               M         clrf    LATC
00034A 6A8C               M         clrf    LATD
00034C EF?? F???          M         goto    STANDBY
                          M 
000350                    M Exit
000350 0000               M         nop
000352 D???           00557         bra     DC_TEST_CCW_HOLD
                      00558                 
000354                00559 STEP_TEST
000354 6A38           00560         clrf    inStandby
000356 6A32           00561         clrf    COLLECTIONS_COUNT
                      00562         Delay50N    delayR, 0x14
  0000                    M         local   loop
000358 0E14               M         movlw   0x14
00035A 6E1A               M         movwf   delayR
                          M 
00035C                    M loop
00035C EC?? F???          M         call    Delay50ms
000360 2E1A               M         decfsz  delayR
000362 EF?? F???          M         goto    loop
                      00563     
000366                00564 ROTATE_90_TEST
000366 0E23           00565         movlw   b'00100011'
000368 6E80           00566         movwf   PORTA
00036A EC?? F???      00567         call    delay5ms
                      00568         
00036E 0E26           00569         movlw   b'00100110'
000370 6E80           00570         movwf   PORTA
000372 EC?? F???      00571         call    delay5ms
                      00572         
000376 0E2C           00573         movlw   b'00101100'
000378 6E80           00574         movwf   PORTA
00037A EC?? F???      00575         call    delay5ms
                      00576 
00037E 0E29           00577         movlw   b'00101001'
000380 6E80           00578         movwf   PORTA
000382 EC?? F???      00579         call    delay5ms
                      00580         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000386 2A32           00581         incf    COLLECTIONS_COUNT
000388 0E78           00582         movlw   d'120'
00038A 6232           00583         cpfseq  COLLECTIONS_COUNT
00038C D???           00584         bra     ROTATE_90_TEST
                      00585         
00038E D???           00586         bra STEP_TEST
                      00587 
000390                00588 COLOUR_TEST
000390 6A38           00589         clrf    inStandby
                      00590 
000392                00591 LOOPING
                      00592         Delay50N delayR, 0x28
  0000                    M         local   loop
000392 0E28               M         movlw   0x28
000394 6E1A               M         movwf   delayR
                          M 
000396                    M loop
000396 EC?? F???          M         call    Delay50ms
00039A 2E1A               M         decfsz  delayR
00039C EF?? F???          M         goto    loop
0003A0 EC?? F???      00593         call    ClrLCD
0003A4 EC?? F???      00594         call    READ_ARDUINO
0003A8 0F30           00595         addlw   0x30
0003AA EC?? F???      00596         call    WR_DATA
0003AE D???           00597         bra LOOPING
                      00598 
                      00599 ;*******************************************************************************
                      00600 ; execution mode
                      00601 ;*******************************************************************************
                      00602         
0003B0                00603 EXECUTION
0003B0 9ED5           00604         bcf         T0CON, TMR0ON           ; turning on timer
0003B2 6A38           00605         clrf    inStandby       
0003B4 EC?? F???      00606         call        ClearEEPROM_21
                      00607         
                      00608         ; save the starting time
0003B8 EC?? F???      00609         call        SAVE_TIME
                      00610                 
                      00611         ; display
0003BC 681E           00612         setf        inExecution
0003BE EC?? F???      00613         call        ClrLCD
                      00614         Display     Exe1
  0000                    M         local   loop
0003C2 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003C4 6EF8               M         movwf   TBLPTRU
0003C6 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003C8 6EF7               M         movwf   TBLPTRH
0003CA 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003CC 6EF6               M         movwf   TBLPTRL
0003CE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003D0 50F5               M         movf    TABLAT, W
0003D2                    M loop
0003D2 EC?? F???          M         call    WR_DATA         ; write to LCD
0003D6 000B               M         tblrd+*                 ; next row in table
0003D8 50F5               M         movf    TABLAT, W
0003DA E1??               M         bnz     loop
0003DC EC?? F???      00615         call        LCD_L2
                      00616         
0003E0 0EC3           00617         movlw   0xc3
0003E2 6ED7           00618         movwf   TMR0H
0003E4 0E25           00619         movlw   0x25
0003E6 6ED6           00620         movwf   TMR0L
                      00621         
0003E8 8ED5           00622         bsf         T0CON, TMR0ON           ; turning on timer
                      00623         
                      00624         ; initialize variables
0003EA 6A18           00625         clrf        OP_sec
0003EC 6A19           00626         clrf        OP_INT
                      00627         
0003EE 6A2D           00628         clrf        ESKA
0003F0 6A2E           00629         clrf        ESKA_NOCAP
0003F2 6A2F           00630         clrf        YOP
0003F4 6A30           00631         clrf        YOP_NOCAP
0003F6 6A31           00632         clrf        TOTAL_BOTTLES
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F8 0E01           00633         movlw       d'1'
0003FA 6E35           00634         movwf       TRAY_CURRENT
0003FC 6A34           00635         clrf        TRAY_DELAY
                      00636         
                      00637         ; todo: make sure tray is in position one on reset, add some delay
                      00638         
0003FE EF?? F???      00639         goto        COLLECTIONS_STEP
                      00640 
000402                00641 COLLECTIONS_STEP
000402 6A32           00642         clrf        COLLECTIONS_COUNT
                      00643 
000404                00644 ROTATE_90
000404 0E23           00645         movlw   b'00100011'
000406 6E80           00646         movwf   PORTA
000408 EC?? F???      00647         call    delay5ms
                      00648 
00040C 0E26           00649         movlw   b'00100110'
00040E 6E80           00650         movwf   PORTA
000410 EC?? F???      00651         call    delay5ms
                      00652         
000414 0E2C           00653         movlw   b'00101100'
000416 6E80           00654         movwf   PORTA
000418 EC?? F???      00655         call    delay5ms
                      00656 
00041C 0E29           00657         movlw   b'00101001'
00041E 6E80           00658         movwf   PORTA
000420 EC?? F???      00659         call    delay5ms
                      00660         
000424 2A32           00661         incf    COLLECTIONS_COUNT
000426 0E78           00662         movlw   d'120'
000428 6232           00663         cpfseq  COLLECTIONS_COUNT
00042A D???           00664         bra     ROTATE_90
                      00665         
00042C D???           00666         bra DETECTIONS
                      00667         
00042E                00668 DETECTIONS
                      00669 
                      00670 ;       movlw   d'1000'
                      00671 ;       movwf   TRAY_DELAY
                      00672         
                      00673         ; reading data from arduino 
                      00674         ; expect:   1 for eska cap
                      00675         ;           2 for eska no cap
                      00676         ;           3 for yop cap
                      00677         ;           4 for yop no cap
                      00678         ;           5 for no bottle, get outta here
00042E EC?? F???      00679         call    READ_ARDUINO
                      00680         ;movlw  d'2'                    ; testing!!!
000432 6E2C           00681         movwf   DETECTION_VAL
                      00682         
                      00683         ; first check if there was a bottle detected, if go to COLLECTIONS_STEP
000434 0E05           00684         movlw   d'5'
000436 5C2C           00685         subwf   DETECTION_VAL, 0
000438 E0??           00686         bz      INC_YOPNOCAP
                      00687         
                      00688         ; okay we have a bottle, first increment total count then see what it is
00043A 2A31           00689         incf    TOTAL_BOTTLES
                      00690         
                      00691         ; yop no cap
00043C 0E04           00692         movlw   d'4'
00043E 5C2C           00693         subwf   DETECTION_VAL, 0
000440 E0??           00694         bz      INC_YOPNOCAP
                      00695         
                      00696         ; yop with cap
000442 0E03           00697         movlw   d'3'
000444 5C2C           00698         subwf   DETECTION_VAL, 0
000446 E0??           00699         bz      INC_YOPCAP
                      00700         
                      00701         ; eska no cap
000448 0E02           00702         movlw   d'2'
00044A 5C2C           00703         subwf   DETECTION_VAL, 0
00044C E0??           00704         bz      INC_ESKANOCAP
                      00705         
                      00706         ; eksa with cap
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00044E 0E01           00707         movlw   d'1'
000450 5C2C           00708         subwf   DETECTION_VAL, 0
000452 E0??           00709         bz      INC_ESKACAP
                      00710         
000454 D???           00711         bra     DETECTIONS
                      00712         
000456                00713 INC_YOPNOCAP
000456 2A30           00714         incf    YOP_NOCAP
                      00715 
                      00716         ; determine what position to rotate the tray to: brute force, but w/e
000458 0E04           00717         movlw   d'4'
00045A 6E36           00718         movwf   TRAY_GOTO               ; new position will be 4
00045C 5C35           00719         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00045E E0??           00720         bz      TRAY_STEP_END
                      00721         
000460 0E03           00722         movlw   d'3'
000462 5C35           00723         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
000464 E0??           00724         bz      TRAY_STEP_CW            
                      00725         
000466 0E02           00726         movlw   d'2'
000468 5C35           00727         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
00046A E0??           00728         bz      TRAY_STEP_CW
                      00729         
00046C 0E01           00730         movlw   d'1'
00046E 5C35           00731         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
000470 E0??           00732         bz      TRAY_STEP_CW
                      00733         
000472                00734 INC_YOPCAP
000472 2A2F           00735         incf    YOP
                      00736         
                      00737         ; determine what position to rotate the tray to: brute force, but w/e
000474 0E03           00738         movlw   d'3'
000476 6E36           00739         movwf   TRAY_GOTO
000478 5C35           00740         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00047A E0??           00741         bz      TRAY_STEP_END
                      00742         
00047C 0E04           00743         movlw   d'4'
00047E 5C35           00744         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
000480 E0??           00745         bz      TRAY_STEP_CCW   
                      00746         
000482 0E02           00747         movlw   d'2'
000484 5C35           00748         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
000486 E0??           00749         bz      TRAY_STEP_CW
                      00750         
000488 0E01           00751         movlw   d'1'
00048A 5C35           00752         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
00048C E0??           00753         bz      TRAY_STEP_CW
                      00754         
00048E                00755 INC_ESKANOCAP
00048E 2A2E           00756         incf    ESKA_NOCAP
                      00757         
                      00758         ; determine what position to rotate the tray to: brute force, but w/e
000490 0E02           00759         movlw   d'2'
000492 6E36           00760         movwf   TRAY_GOTO
000494 5C35           00761         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000496 E0??           00762         bz      TRAY_STEP_END
                      00763         
000498 0E04           00764         movlw   d'4'
00049A 5C35           00765         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
00049C E0??           00766         bz      TRAY_STEP_CCW   
                      00767         
00049E 0E03           00768         movlw   d'3'
0004A0 5C35           00769         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
0004A2 E0??           00770         bz      TRAY_STEP_CCW
                      00771         
0004A4 0E01           00772         movlw   d'1'
0004A6 5C35           00773         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
0004A8 E0??           00774         bz      TRAY_STEP_CW
                      00775         
0004AA                00776 INC_ESKACAP
0004AA 2A2D           00777         incf    ESKA
                      00778         
                      00779         ; determine what position to rotate the tray to: brute force, but w/e
0004AC 0E01           00780         movlw   d'1'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004AE 6E36           00781         movwf   TRAY_GOTO
0004B0 5C35           00782         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004B2 E0??           00783         bz      TRAY_STEP_END
                      00784         
0004B4 0E04           00785         movlw   d'4'
0004B6 5C35           00786         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
0004B8 E0??           00787         bz      TRAY_STEP_CCW   
                      00788         
0004BA 0E03           00789         movlw   d'3'
0004BC 5C35           00790         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
0004BE E0??           00791         bz      TRAY_STEP_CCW
                      00792         
0004C0 0E02           00793         movlw   d'2'
0004C2 5C35           00794         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
0004C4 E0??           00795         bz      TRAY_STEP_CCW
                      00796 
0004C6                00797 TRAY_STEP_CW
0004C6 6A33           00798         clrf    TRAY_COUNT
0004C8 0E00           00799         movlw   b'00000000'
0004CA 6E84           00800         movwf   PORTE
                      00801 
0004CC                00802 TRAY_CW_HOLD
0004CC 0E01           00803         movlw   b'00000001'
0004CE 6E84           00804         movwf   PORTE
                      00805 
                      00806 ;       incf    TRAY_COUNT
                      00807 ;       movff   TRAY_COUNT, WREG
                      00808 ;       cpfseq  TRAY_DELAY
                      00809 ;       goto    TRAY_CW_HOLD
                      00810         Delay50N    delayR, 0x24
  0000                    M         local   loop
0004D0 0E24               M         movlw   0x24
0004D2 6E1A               M         movwf   delayR
                          M 
0004D4                    M loop
0004D4 EC?? F???          M         call    Delay50ms
0004D8 2E1A               M         decfsz  delayR
0004DA EF?? F???          M         goto    loop
                      00811         
0004DE D???           00812         bra     TRAY_STEP_END
                      00813         
0004E0                00814 TRAY_STEP_CCW
0004E0 6A33           00815         clrf    TRAY_COUNT
0004E2 0E00           00816         movlw   b'00000000'
0004E4 6E84           00817         movwf   PORTE
                      00818 
0004E6                00819 TRAY_CCW_HOLD
0004E6 0E02           00820         movlw   b'00000010'
0004E8 6E84           00821         movwf   PORTE
                      00822 
                      00823 ;       incf    TRAY_COUNT
                      00824 ;       movff   TRAY_COUNT, WREG
                      00825 ;       cpfseq  TRAY_DELAY
                      00826 ;       bra     TRAY_CCW_HOLD
                      00827         Delay50N    delayR, 0x24
  0000                    M         local   loop
0004EA 0E24               M         movlw   0x24
0004EC 6E1A               M         movwf   delayR
                          M 
0004EE                    M loop
0004EE EC?? F???          M         call    Delay50ms
0004F2 2E1A               M         decfsz  delayR
0004F4 EF?? F???          M         goto    loop
                      00828 
                      00829         
0004F8 D???           00830         bra     TRAY_STEP_END
                      00831         
0004FA                00832 TRAY_STEP_END
0004FA C036 F035      00833         movff   TRAY_GOTO, TRAY_CURRENT
0004FE 0E00           00834         movlw   b'00000000'
000500 6E84           00835         movwf   PORTE
                      00836         
000502                00837 CHECK_DONE
                      00838         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00839         ; Challenging:  logic to figure out when the machine is done sorting 
                      00840         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00841         
                      00842         ; NUMBER: 
                      00843         ; if the total bottle count is 10, then we are done (most basic end condition)
000502 6A37           00844         clrf        STOP_CONDITION      ; denote regular stop, saved in eeprom as 0
000504 0E09           00845         movlw   d'9'
000506 5C31           00846         subwf   TOTAL_BOTTLES, 0
000508 E0??           00847         bz      EXIT_EXE
                      00848         
                      00849         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00850         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00851         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00852         ; 150s then stop.
00050A 3818           00853         swapf   OP_sec, 0       ; 100's seconds
00050C 6E17           00854         movwf   temp
00050E 0E0F           00855         movlw   0x0f
000510 1617           00856         andwf   temp
000512 0E00           00857         movlw   d'0'
000514 6417           00858         cpfsgt  temp
000516 EF?? F???      00859         goto    COLLECTIONS_STEP; if 100 second, continue to check for 150s then 120s.
                      00860 
                      00861         ; MAX
00051A 0E02           00862         movlw   d'2'
00051C 6E37           00863         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
00051E C018 F017      00864         movff   OP_sec, temp    ; 10's seconds
000522 0E0F           00865         movlw   0x0f
000524 1617           00866         andwf   temp
000526 0E05           00867         movlw   d'5'
000528 5C17           00868         subwf   temp, 0
00052A E0??           00869         bz      EXIT_EXE        ; if 150 second, terminate
                      00870         
                      00871         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00872         ; qualified run has at least 4 bottles, with 1 of each different kind
00052C 0E03           00873         movlw   d'3'
00052E 6431           00874         cpfsgt  TOTAL_BOTTLES
000530 EF?? F???      00875         goto    COLLECTIONS_STEP
                      00876 
000534 0E00           00877         movlw   d'0'
000536 6430           00878         cpfsgt  YOP_NOCAP, 0
000538 EF?? F???      00879         goto    COLLECTIONS_STEP
                      00880         
00053C 0E00           00881         movlw   d'0'
00053E 642F           00882         cpfsgt  YOP, 0
000540 EF?? F???      00883         goto    COLLECTIONS_STEP
                      00884         
000544 0E00           00885         movlw   d'0'
000546 642E           00886         cpfsgt  ESKA_NOCAP, 0
000548 EF?? F???      00887         goto    COLLECTIONS_STEP
                      00888         
00054C 0E00           00889         movlw   d'0'
00054E 642D           00890         cpfsgt  ESKA, 0
000550 EF?? F???      00891         goto    COLLECTIONS_STEP
                      00892         
                      00893         ; finally, if we get here then consider the termination optimized.
000554 0E03           00894         movlw   d'3'
000556 6E37           00895         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
000558 EF?? F???      00896         goto    EXIT_EXE
                      00897         
00055C                00898 EXIT_EXE
                      00899         ; stop timer and save the execution time to eeprom
00055C 9ED5           00900         bcf         T0CON, TMR0ON
00055E EC?? F???      00901         call        SAVE_EXE_TIME
                      00902                 
                      00903         ; Clear inExecution flag to stop '*' interrupts
000562 6A1E           00904         clrf        inExecution
                      00905         
000564 EC?? F???      00906         call        ClrLCD
                      00907         Display     SAVE
  0000                    M         local   loop
000568 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
00056A 6EF8               M         movwf   TBLPTRU
00056C 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00056E 6EF7               M         movwf   TBLPTRH
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000570 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000572 6EF6               M         movwf   TBLPTRL
000574 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000576 50F5               M         movf    TABLAT, W
000578                    M loop
000578 EC?? F???          M         call    WR_DATA         ; write to LCD
00057C 000B               M         tblrd+*                 ; next row in table
00057E 50F5               M         movf    TABLAT, W
000580 E1??               M         bnz     loop
000582 EC?? F???      00908         call        SaveData
000586 EF?? F???      00909         goto        LOG
                      00910 
                      00911 ;*******************************************************************************
                      00912 ; sorting statistics log mode
                      00913 ;*******************************************************************************
                      00914         
00058A                00915 LOG
00058A 6A38           00916         clrf    inStandby
00058C EC?? F???      00917         call    ClrLCD
                      00918         Display Log1
  0000                    M         local   loop
000590 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000592 6EF8               M         movwf   TBLPTRU
000594 0E??               M         movlw   high Log1       ; Move Table<15:8>
000596 6EF7               M         movwf   TBLPTRH
000598 0E??               M         movlw   low Log1        ; Move Table<7:0>
00059A 6EF6               M         movwf   TBLPTRL
00059C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00059E 50F5               M         movf    TABLAT, W
0005A0                    M loop
0005A0 EC?? F???          M         call    WR_DATA         ; write to LCD
0005A4 000B               M         tblrd+*                 ; next row in table
0005A6 50F5               M         movf    TABLAT, W
0005A8 E1??               M         bnz     loop
                      00919 
                      00920         ; display most recent run data
0005AA 0E0A           00921         movlw   d'10'
0005AC 6E21           00922         movwf   L_EE
0005AE EC?? F???      00923         call    DisplayExeTime
                      00924 
0005B2 EC?? F???      00925         call    LCD_L2
0005B6 0E0D           00926         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
0005B8 6E21           00927         movwf   L_EE
0005BA EC?? F???      00928         call    DispOpSort
                      00929 
0005BE                00930 HOLD_LOG
0005BE EC?? F???      00931         call    READ_KEY
                      00932         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0005C2 0E07               M         movlw   keyB                ; poll for mode
0005C4 6210               M         cpfseq  KEY                 ; check this against key press
0005C6 EF?? F???          M         goto    Exit
                          M 
0005CA                    M Next
0005CA 6A89               M         clrf    LATA                ; clear pins before proceeding
0005CC 6A8A               M         clrf    LATB
0005CE 6A8B               M         clrf    LATC
0005D0 6A8C               M         clrf    LATD
0005D2 EF?? F???          M         goto    LOG_INFO
                          M 
0005D6                    M Exit
0005D6 0000               M         nop
                      00933         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005D8 0E0D               M         movlw   key0                ; poll for mode
0005DA 6210               M         cpfseq  KEY                 ; check this against key press
0005DC EF?? F???          M         goto    Exit
                          M 
0005E0                    M Next
0005E0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005E2 6A8A               M         clrf    LATB
0005E4 6A8B               M         clrf    LATC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005E6 6A8C               M         clrf    LATD
0005E8 EF?? F???          M         goto    STANDBY
                          M 
0005EC                    M Exit
0005EC 0000               M         nop
0005EE D???           00934         bra     HOLD_LOG
                      00935 
0005F0                00936 LOG_INFO
0005F0 EC?? F???      00937         call    ClrLCD
0005F4 6A21           00938         clrf    L_EE
0005F6 EC?? F???      00939         call    DispOpRTC
                      00940         
0005FA EC?? F???      00941         call    LCD_L2
                      00942         Display LogInfo2
  0000                    M         local   loop
0005FE 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000600 6EF8               M         movwf   TBLPTRU
000602 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000604 6EF7               M         movwf   TBLPTRH
000606 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000608 6EF6               M         movwf   TBLPTRL
00060A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00060C 50F5               M         movf    TABLAT, W
00060E                    M loop
00060E EC?? F???          M         call    WR_DATA         ; write to LCD
000612 000B               M         tblrd+*                 ; next row in table
000614 50F5               M         movf    TABLAT, W
000616 E1??               M         bnz     loop
000618 6A20           00943         clrf    H_EE
00061A 6A21           00944         clrf    L_EE
00061C                00945 HOLD_LOG_INFO
00061C EC?? F???      00946         call    READ_KEY
                      00947         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000620 0E0D               M         movlw   key0                ; poll for mode
000622 6210               M         cpfseq  KEY                 ; check this against key press
000624 EF?? F???          M         goto    Exit
                          M 
000628                    M Next
000628 6A89               M         clrf    LATA                ; clear pins before proceeding
00062A 6A8A               M         clrf    LATB
00062C 6A8B               M         clrf    LATC
00062E 6A8C               M         clrf    LATD
000630 EF?? F???          M         goto    LOG
                          M 
000634                    M Exit
000634 0000               M         nop
000636 D???           00948         bra     HOLD_LOG
                      00949         
                      00950 ;*******************************************************************************
                      00951 ; permanent logs
                      00952 ;*******************************************************************************
                      00953 
000638                00954 PERM_LOG
000638 6A38           00955         clrf    inStandby
00063A EC?? F???      00956         call    ClrLCD
                      00957         Display PermLog1
  0000                    M         local   loop
00063E 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000640 6EF8               M         movwf   TBLPTRU
000642 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000644 6EF7               M         movwf   TBLPTRH
000646 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000648 6EF6               M         movwf   TBLPTRL
00064A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00064C 50F5               M         movf    TABLAT, W
00064E                    M loop
00064E EC?? F???          M         call    WR_DATA         ; write to LCD
000652 000B               M         tblrd+*                 ; next row in table
000654 50F5               M         movf    TABLAT, W
000656 E1??               M         bnz     loop
000658 EC?? F???      00958         call    LCD_L2
                      00959         Display PermLog2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
00065C 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00065E 6EF8               M         movwf   TBLPTRU
000660 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000662 6EF7               M         movwf   TBLPTRH
000664 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000666 6EF6               M         movwf   TBLPTRL
000668 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00066A 50F5               M         movf    TABLAT, W
00066C                    M loop
00066C EC?? F???          M         call    WR_DATA         ; write to LCD
000670 000B               M         tblrd+*                 ; next row in table
000672 50F5               M         movf    TABLAT, W
000674 E1??               M         bnz     loop
                      00960         
000676                00961 HOLD_PERM_LOG
000676 EC?? F???      00962         call    READ_KEY
                      00963         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00067A 0E0D               M         movlw   key0                ; poll for mode
00067C 6210               M         cpfseq  KEY                 ; check this against key press
00067E EF?? F???          M         goto    Exit
                          M 
000682                    M Next
000682 6A89               M         clrf    LATA                ; clear pins before proceeding
000684 6A8A               M         clrf    LATB
000686 6A8B               M         clrf    LATC
000688 6A8C               M         clrf    LATD
00068A EF?? F???          M         goto    STANDBY
                          M 
00068E                    M Exit
00068E 0000               M         nop
                      00964         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000690 0E00               M         movlw   key1                ; poll for mode
000692 6210               M         cpfseq  KEY                 ; check this against key press
000694 EF?? F???          M         goto    Exit
                          M 
000698                    M Next
000698 6A89               M         clrf    LATA                ; clear pins before proceeding
00069A 6A8A               M         clrf    LATB
00069C 6A8B               M         clrf    LATC
00069E 6A8C               M         clrf    LATD
0006A0 EF?? F???          M         goto    PLOG
                          M 
0006A4                    M Exit
0006A4 0000               M         nop
                      00965         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0006A6 0E01               M         movlw   key2                ; poll for mode
0006A8 6210               M         cpfseq  KEY                 ; check this against key press
0006AA EF?? F???          M         goto    Exit
                          M 
0006AE                    M Next
0006AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006B0 6A8A               M         clrf    LATB
0006B2 6A8B               M         clrf    LATC
0006B4 6A8C               M         clrf    LATD
0006B6 EF?? F???          M         goto    PLOG
                          M 
0006BA                    M Exit
0006BA 0000               M         nop
                      00966         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0006BC 0E02               M         movlw   key3                ; poll for mode
0006BE 6210               M         cpfseq  KEY                 ; check this against key press
0006C0 EF?? F???          M         goto    Exit
                          M 
0006C4                    M Next
0006C4 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006C6 6A8A               M         clrf    LATB
0006C8 6A8B               M         clrf    LATC
0006CA 6A8C               M         clrf    LATD
0006CC EF?? F???          M         goto    PLOG
                          M 
0006D0                    M Exit
0006D0 0000               M         nop
                      00967         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006D2 0E04               M         movlw   key4                ; poll for mode
0006D4 6210               M         cpfseq  KEY                 ; check this against key press
0006D6 EF?? F???          M         goto    Exit
                          M 
0006DA                    M Next
0006DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006DC 6A8A               M         clrf    LATB
0006DE 6A8B               M         clrf    LATC
0006E0 6A8C               M         clrf    LATD
0006E2 EF?? F???          M         goto    PLOG
                          M 
0006E6                    M Exit
0006E6 0000               M         nop
                      00968         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0006E8 0E05               M         movlw   key5                ; poll for mode
0006EA 6210               M         cpfseq  KEY                 ; check this against key press
0006EC EF?? F???          M         goto    Exit
                          M 
0006F0                    M Next
0006F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F2 6A8A               M         clrf    LATB
0006F4 6A8B               M         clrf    LATC
0006F6 6A8C               M         clrf    LATD
0006F8 EF?? F???          M         goto    PLOG
                          M 
0006FC                    M Exit
0006FC 0000               M         nop
                      00969         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006FE 0E06               M         movlw   key6                ; poll for mode
000700 6210               M         cpfseq  KEY                 ; check this against key press
000702 EF?? F???          M         goto    Exit
                          M 
000706                    M Next
000706 6A89               M         clrf    LATA                ; clear pins before proceeding
000708 6A8A               M         clrf    LATB
00070A 6A8B               M         clrf    LATC
00070C 6A8C               M         clrf    LATD
00070E EF?? F???          M         goto    PLOG
                          M 
000712                    M Exit
000712 0000               M         nop
                      00970         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000714 0E08               M         movlw   key7                ; poll for mode
000716 6210               M         cpfseq  KEY                 ; check this against key press
000718 EF?? F???          M         goto    Exit
                          M 
00071C                    M Next
00071C 6A89               M         clrf    LATA                ; clear pins before proceeding
00071E 6A8A               M         clrf    LATB
000720 6A8B               M         clrf    LATC
000722 6A8C               M         clrf    LATD
000724 EF?? F???          M         goto    PLOG
                          M 
000728                    M Exit
000728 0000               M         nop
                      00971         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00072A 0E09               M         movlw   key8                ; poll for mode
00072C 6210               M         cpfseq  KEY                 ; check this against key press
00072E EF?? F???          M         goto    Exit
                          M 
000732                    M Next
000732 6A89               M         clrf    LATA                ; clear pins before proceeding
000734 6A8A               M         clrf    LATB
000736 6A8B               M         clrf    LATC
000738 6A8C               M         clrf    LATD
00073A EF?? F???          M         goto    PLOG
                          M 
00073E                    M Exit
00073E 0000               M         nop
                      00972         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000740 0E0A               M         movlw   key9                ; poll for mode
000742 6210               M         cpfseq  KEY                 ; check this against key press
000744 EF?? F???          M         goto    Exit
                          M 
000748                    M Next
000748 6A89               M         clrf    LATA                ; clear pins before proceeding
00074A 6A8A               M         clrf    LATB
00074C 6A8B               M         clrf    LATC
00074E 6A8C               M         clrf    LATD
000750 EF?? F???          M         goto    PLOG
                          M 
000754                    M Exit
000754 0000               M         nop
000756 D???           00973         bra HOLD_PERM_LOG
                      00974         
000758                00975 PLOG
000758 EC?? F???      00976         call    ClrLCD
                      00977         Display PermLog1
  0000                    M         local   loop
00075C 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00075E 6EF8               M         movwf   TBLPTRU
000760 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000762 6EF7               M         movwf   TBLPTRH
000764 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000766 6EF6               M         movwf   TBLPTRL
000768 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00076A 50F5               M         movf    TABLAT, W
00076C                    M loop
00076C EC?? F???          M         call    WR_DATA         ; write to LCD
000770 000B               M         tblrd+*                 ; next row in table
000772 50F5               M         movf    TABLAT, W
000774 E1??               M         bnz     loop
                      00978         
                      00979         ; find the key press value
000776 C010 FFE8      00980         movff   KEY, WREG
00077A 2AE8           00981         incf    WREG        ; W = KEY+1
00077C 6E17           00982         movwf   temp
                      00983         
00077E 42E8           00984         rrncf   WREG        ; division by 4
000780 9EE8           00985         bcf     WREG, 7     ; clear last bit, overflow from rotate
000782 42E8           00986         rrncf   WREG        
000784 9EE8           00987         bcf     WREG, 7
000786 5E17           00988         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000788 C017 FFE8      00989         movff   temp, WREG
00078C C017 F011      00990         movff   temp, temp_KEY
000790 0D15           00991         mullw   d'21'       ; indexed as mutliples of 21
                      00992 
000792                00993 displayNum
000792 C011 FFE8      00994         movff   temp_KEY, WREG
000796 0F30           00995         addlw   0x30
000798 EC?? F???      00996         call    WR_DATA
00079C 0E3A           00997         movlw   ":"
00079E EC?? F???      00998         call    WR_DATA
0007A2 0E20           00999         movlw   " "
0007A4 EC?? F???      01000         call    WR_DATA
                      01001         
0007A8 CFF3 F021      01002         movff   PRODL, L_EE
0007AC 0E00           01003         movlw   d'0'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007AE 2621           01004         addwf   L_EE
                      01005         READEE  OP_sec, H_EE, L_EE
0007B0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007B4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007B8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007BA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007BC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007BE CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0007C2 2A21           01006         incf    L_EE
                      01007         READEE  OP_INT, H_EE, L_EE
0007C4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007C8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007CC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007CE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007D0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007D2 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0007D6 2A21           01008         incf    L_EE
0007D8 EC?? F???      01009         call    DisplayExeTime
0007DC CFF3 F021      01010         movff   PRODL, L_EE
                      01011         
                      01012         ; reset eeprom to beginning
0007E0 EC?? F???      01013         call    LCD_L2
0007E4 CFF3 F021      01014         movff   PRODL, L_EE
0007E8 EC?? F???      01015         call    DispOpRTC
                      01016         
0007EC                01017 HOLD_PLOG
0007EC EC?? F???      01018         call    READ_KEY
                      01019         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0007F0 0E03               M         movlw   keyA                ; poll for mode
0007F2 6210               M         cpfseq  KEY                 ; check this against key press
0007F4 EF?? F???          M         goto    Exit
                          M 
0007F8                    M Next
0007F8 6A89               M         clrf    LATA                ; clear pins before proceeding
0007FA 6A8A               M         clrf    LATB
0007FC 6A8B               M         clrf    LATC
0007FE 6A8C               M         clrf    LATD
000800 EF?? F???          M         goto    PLOG_DETAILS
                          M 
000804                    M Exit
000804 0000               M         nop
                      01020         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000806 0E0D               M         movlw   key0                ; poll for mode
000808 6210               M         cpfseq  KEY                 ; check this against key press
00080A EF?? F???          M         goto    Exit
                          M 
00080E                    M Next
00080E 6A89               M         clrf    LATA                ; clear pins before proceeding
000810 6A8A               M         clrf    LATB
000812 6A8B               M         clrf    LATC
000814 6A8C               M         clrf    LATD
000816 EF?? F???          M         goto    PERM_LOG
                          M 
00081A                    M Exit
00081A 0000               M         nop
00081C D???           01021         bra HOLD_PLOG
                      01022         
00081E                01023 PLOG_DETAILS
00081E EC?? F???      01024         call    ClrLCD
                      01025         
                      01026         Display Log1
  0000                    M         local   loop
000822 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000824 6EF8               M         movwf   TBLPTRU
000826 0E??               M         movlw   high Log1       ; Move Table<15:8>
000828 6EF7               M         movwf   TBLPTRH
00082A 0E??               M         movlw   low Log1        ; Move Table<7:0>
00082C 6EF6               M         movwf   TBLPTRL
00082E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000830 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000832                    M loop
000832 EC?? F???          M         call    WR_DATA         ; write to LCD
000836 000B               M         tblrd+*                 ; next row in table
000838 50F5               M         movf    TABLAT, W
00083A E1??               M         bnz     loop
00083C EC?? F???      01027         call    DisplayExeTime
                      01028         
000840 EC?? F???      01029         call    LCD_L2
000844 EC?? F???      01030         call    DispOpSort
                      01031         
000848                01032 HOLD_PLOG_DETAILS
000848 EC?? F???      01033         call    READ_KEY
                      01034         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00084C 0E0D               M         movlw   key0                ; poll for mode
00084E 6210               M         cpfseq  KEY                 ; check this against key press
000850 EF?? F???          M         goto    Exit
                          M 
000854                    M Next
000854 6A89               M         clrf    LATA                ; clear pins before proceeding
000856 6A8A               M         clrf    LATB
000858 6A8B               M         clrf    LATC
00085A 6A8C               M         clrf    LATD
00085C EF?? F???          M         goto    PERM_LOG
                          M 
000860                    M Exit
000860 0000               M         nop
000862 D???           01035         bra HOLD_PLOG_DETAILS
                      01036         
                      01037 ;*******************************************************************************
                      01038 ; pc interface
                      01039 ;*******************************************************************************
                      01040 
000864                01041 PC_MODE
000864 6A38           01042         clrf    inStandby
000866 EC?? F???      01043         call    ClrLCD
                      01044         Display PC1
  0000                    M         local   loop
00086A 0E??               M         movlw   upper PC1       ; Move Table<20:16>
00086C 6EF8               M         movwf   TBLPTRU
00086E 0E??               M         movlw   high PC1        ; Move Table<15:8>
000870 6EF7               M         movwf   TBLPTRH
000872 0E??               M         movlw   low PC1         ; Move Table<7:0>
000874 6EF6               M         movwf   TBLPTRL
000876 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000878 50F5               M         movf    TABLAT, W
00087A                    M loop
00087A EC?? F???          M         call    WR_DATA         ; write to LCD
00087E 000B               M         tblrd+*                 ; next row in table
000880 50F5               M         movf    TABLAT, W
000882 E1??               M         bnz     loop
000884 EC?? F???      01045         call    LCD_L2
                      01046         Display PC2
  0000                    M         local   loop
000888 0E??               M         movlw   upper PC2       ; Move Table<20:16>
00088A 6EF8               M         movwf   TBLPTRU
00088C 0E??               M         movlw   high PC2        ; Move Table<15:8>
00088E 6EF7               M         movwf   TBLPTRH
000890 0E??               M         movlw   low PC2         ; Move Table<7:0>
000892 6EF6               M         movwf   TBLPTRL
000894 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000896 50F5               M         movf    TABLAT, W
000898                    M loop
000898 EC?? F???          M         call    WR_DATA         ; write to LCD
00089C 000B               M         tblrd+*                 ; next row in table
00089E 50F5               M         movf    TABLAT, W
0008A0 E1??               M         bnz     loop
0008A2 CFF9 F029      01047         movff   PCL, PC_PCL
0008A6 CFFA F02A      01048         movff   PCLATH, PC_PCLATH
0008AA CFFB F02B      01049         movff   PCLATU, PC_PCLATU
                      01050         
0008AE                01051 HOLD_PC
0008AE EC?? F???      01052         call    READ_KEY
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01053         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008B2 0E0D               M         movlw   key0                ; poll for mode
0008B4 6210               M         cpfseq  KEY                 ; check this against key press
0008B6 EF?? F???          M         goto    Exit
                          M 
0008BA                    M Next
0008BA 6A89               M         clrf    LATA                ; clear pins before proceeding
0008BC 6A8A               M         clrf    LATB
0008BE 6A8B               M         clrf    LATC
0008C0 6A8C               M         clrf    LATD
0008C2 EF?? F???          M         goto    STANDBY
                          M 
0008C6                    M Exit
0008C6 0000               M         nop
                      01054         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008C8 0E0E               M         movlw   keyH                ; poll for mode
0008CA 6210               M         cpfseq  KEY                 ; check this against key press
0008CC EF?? F???          M         goto    Exit
                          M 
0008D0                    M Next
0008D0 6A89               M         clrf    LATA                ; clear pins before proceeding
0008D2 6A8A               M         clrf    LATB
0008D4 6A8B               M         clrf    LATC
0008D6 6A8C               M         clrf    LATD
0008D8 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008DC                    M Exit
0008DC 0000               M         nop
0008DE D???           01055         bra     HOLD_PC
                      01056 
0008E0                01057 PC_TRANSFER
0008E0 6828           01058         setf    transferring
0008E2 EC?? F???      01059         call    ClrLCD
                      01060         Display PCTransfer
  0000                    M         local   loop
0008E6 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0008E8 6EF8               M         movwf   TBLPTRU
0008EA 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008EC 6EF7               M         movwf   TBLPTRH
0008EE 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008F0 6EF6               M         movwf   TBLPTRL
0008F2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008F4 50F5               M         movf    TABLAT, W
0008F6                    M loop
0008F6 EC?? F???          M         call    WR_DATA         ; write to LCD
0008FA 000B               M         tblrd+*                 ; next row in table
0008FC 50F5               M         movf    TABLAT, W
0008FE E1??               M         bnz     loop
000900 EC?? F???      01061         call    DataUSART
000904 6A28           01062         clrf    transferring
000906 EF?? F???      01063         goto    STANDBY
                      01064         
                      01065 ;*******************************************************************************
                      01066 ; subroutines
                      01067 ;*******************************************************************************
                      01068 
00090A                01069 SaveData
00090A C02D FFE8      01070         movff       ESKA, WREG
00090E 0F30           01071         addlw       0x30
                      01072         WriteEE     WREG, H_EE, L_EE
000910 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000914 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000918 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00091C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00091E D???               M         bra     $-2
                          M 
000920 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000922 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000924 84A6               M         bsf     EECON1, WREN        ; enable write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000926 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000928 98A1               M         bcf     PIR2, EEIF
                          M 
00092A 0E55               M         movlw   0x55
00092C 6EA7               M         movwf   EECON2              ; write 55h
00092E 0EAA               M         movlw   0xaa
000930 6EA7               M         movwf   EECON2              ; write 0xaa
000932 82A6               M         bsf     EECON1, WR          ; begin write
000934 B2A6               M         btfsc   EECON1, WR
000936 D???               M         bra     $-2
                          M 
000938 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00093A 94A6               M         bcf     EECON1, WREN        ; disable writes
00093C 2A21           01073         incf        L_EE
                      01074         
00093E C02E FFE8      01075         movff       ESKA_NOCAP, WREG
000942 0F30           01076         addlw       0x30
                      01077         WriteEE     WREG, H_EE, L_EE
000944 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000948 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00094C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000950 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000952 D???               M         bra     $-2
                          M 
000954 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000956 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000958 84A6               M         bsf     EECON1, WREN        ; enable write
00095A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00095C 98A1               M         bcf     PIR2, EEIF
                          M 
00095E 0E55               M         movlw   0x55
000960 6EA7               M         movwf   EECON2              ; write 55h
000962 0EAA               M         movlw   0xaa
000964 6EA7               M         movwf   EECON2              ; write 0xaa
000966 82A6               M         bsf     EECON1, WR          ; begin write
000968 B2A6               M         btfsc   EECON1, WR
00096A D???               M         bra     $-2
                          M 
00096C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00096E 94A6               M         bcf     EECON1, WREN        ; disable writes
000970 2A21           01078         incf        L_EE
                      01079         
000972 C02F FFE8      01080         movff       YOP, WREG
000976 0F30           01081         addlw       0x30
                      01082         WriteEE     WREG, H_EE, L_EE
000978 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00097C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000980 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000984 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000986 D???               M         bra     $-2
                          M 
000988 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00098A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00098C 84A6               M         bsf     EECON1, WREN        ; enable write
00098E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000990 98A1               M         bcf     PIR2, EEIF
                          M 
000992 0E55               M         movlw   0x55
000994 6EA7               M         movwf   EECON2              ; write 55h
000996 0EAA               M         movlw   0xaa
000998 6EA7               M         movwf   EECON2              ; write 0xaa
00099A 82A6               M         bsf     EECON1, WR          ; begin write
00099C B2A6               M         btfsc   EECON1, WR
00099E D???               M         bra     $-2
                          M 
0009A0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009A2 94A6               M         bcf     EECON1, WREN        ; disable writes
0009A4 2A21           01083         incf        L_EE
                      01084         
0009A6 C030 FFE8      01085         movff       YOP_NOCAP, WREG
0009AA 0F30           01086         addlw       0x30
                      01087         WriteEE     WREG, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009AC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009B0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009B4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009B8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009BA D???               M         bra     $-2
                          M 
0009BC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009BE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009C0 84A6               M         bsf     EECON1, WREN        ; enable write
0009C2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009C4 98A1               M         bcf     PIR2, EEIF
                          M 
0009C6 0E55               M         movlw   0x55
0009C8 6EA7               M         movwf   EECON2              ; write 55h
0009CA 0EAA               M         movlw   0xaa
0009CC 6EA7               M         movwf   EECON2              ; write 0xaa
0009CE 82A6               M         bsf     EECON1, WR          ; begin write
0009D0 B2A6               M         btfsc   EECON1, WR
0009D2 D???               M         bra     $-2
                          M 
0009D4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009D6 94A6               M         bcf     EECON1, WREN        ; disable writes
0009D8 2A21           01088         incf        L_EE
                      01089         
0009DA C037 FFE8      01090         movff       STOP_CONDITION, WREG
0009DE 0F30           01091         addlw       0x30
                      01092         WriteEE     WREG, H_EE, L_EE
0009E0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009E4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009E8 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009EC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009EE D???               M         bra     $-2
                          M 
0009F0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009F2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009F4 84A6               M         bsf     EECON1, WREN        ; enable write
0009F6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009F8 98A1               M         bcf     PIR2, EEIF
                          M 
0009FA 0E55               M         movlw   0x55
0009FC 6EA7               M         movwf   EECON2              ; write 55h
0009FE 0EAA               M         movlw   0xaa
000A00 6EA7               M         movwf   EECON2              ; write 0xaa
000A02 82A6               M         bsf     EECON1, WR          ; begin write
000A04 B2A6               M         btfsc   EECON1, WR
000A06 D???               M         bra     $-2
                          M 
000A08 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A0A 94A6               M         bcf     EECON1, WREN        ; disable writes
000A0C 2A21           01093         incf        L_EE
                      01094         
000A0E 0E00           01095         movlw       d'0'
000A10 6E20           01096         movwf       H_EE
000A12 0EA8           01097         movlw       d'168'              ; take d'168' as last
000A14 6E21           01098         movwf       L_EE
000A16 0E00           01099         movlw       d'0'
000A18 6E23           01100         movwf       tempH_EE
000A1A 0EDC           01101         movlw       d'220'              ; temp for low constant
000A1C 6E24           01102         movwf       tempL_EE
                      01103         
000A1E 6A16           01104         clrf        counter2
000A20 6A15           01105         clrf        counter
                      01106         
000A22                01107 ShiftLoop
000A22 2A15           01108         incf            counter
                      01109         READEE          REG_EE, H_EE, L_EE
000A24 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A28 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000A2C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A2E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A30 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A32 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A36 0E15           01110         movlw           d'21'
000A38 2621           01111         addwf           L_EE
                      01112         WriteEE         REG_EE, H_EE, L_EE
000A3A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A3E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A42 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000A46 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A48 D???               M         bra     $-2
                          M 
000A4A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A4C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A4E 84A6               M         bsf     EECON1, WREN        ; enable write
000A50 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A52 98A1               M         bcf     PIR2, EEIF
                          M 
000A54 0E55               M         movlw   0x55
000A56 6EA7               M         movwf   EECON2              ; write 55h
000A58 0EAA               M         movlw   0xaa
000A5A 6EA7               M         movwf   EECON2              ; write 0xaa
000A5C 82A6               M         bsf     EECON1, WR          ; begin write
000A5E B2A6               M         btfsc   EECON1, WR
000A60 D???               M         bra     $-2
                          M 
000A62 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A64 94A6               M         bcf     EECON1, WREN        ; disable writes
000A66 0E14           01113         movlw           d'20'
000A68 5E21           01114         subwf           L_EE
000A6A 0E15           01115         movlw           d'21'
000A6C 6215           01116         cpfseq          counter
000A6E EF?? F???      01117         goto            ShiftLoop
                      01118         
                      01119         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A72 0E2A           01120         movlw           d'42'
000A74 5E21           01121         subwf           L_EE
000A76 0EDC           01122         movlw           d'220'
000A78 6E24           01123         movwf           tempL_EE
000A7A 6A15           01124         clrf            counter
000A7C 2A16           01125         incf            counter2
000A7E 0E09           01126         movlw           d'9'
000A80 6216           01127         cpfseq          counter2        ; Skip if 9 shifts were made
000A82 EF?? F???      01128         goto            ShiftLoop
                      01129 
000A86 0012           01130         return
                      01131         
000A88                01132 RTC_INIT
                      01133         ; set sda and scl to high
000A88 9882           01134         bcf     PORTC, 4
000A8A 9682           01135         bcf     PORTC, 3
000A8C 8894           01136         bsf     TRISC, 4
000A8E 8694           01137         bsf     TRISC, 3
                      01138         
000A90 EC?? F???      01139         call    INIT_RTC
                      01140         
                      01141         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A94 0012           01142 return
                      01143         
000A96                01144 SAVE_TIME
                      01145         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A96 0E02               M     movlw   0x02
000A98 6E??               M     movwf   regaddress
000A9A EC?? F???          M     call    read_rtc
000A9E C??? FFE8          M     movff   datachar, WREG
000AA2 EC?? F???          M     call    rtc_convert
                      01146         rtc_read    0x02        ; hours
000AA6 0E02               M     movlw   0x02
000AA8 6E??               M     movwf   regaddress
000AAA EC?? F???          M     call    read_rtc
000AAE C??? FFE8          M     movff   datachar, WREG
000AB2 EC?? F???          M     call    rtc_convert
000AB6 EC?? F???      01147         call    WriteEE_RTC
                      01148         rtc_read    0x01        ; minutes
000ABA 0E01               M     movlw   0x01
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000ABC 6E??               M     movwf   regaddress
000ABE EC?? F???          M     call    read_rtc
000AC2 C??? FFE8          M     movff   datachar, WREG
000AC6 EC?? F???          M     call    rtc_convert
000ACA EC?? F???      01149         call    WriteEE_RTC
                      01150         rtc_read    0x06        ; years
000ACE 0E06               M     movlw   0x06
000AD0 6E??               M     movwf   regaddress
000AD2 EC?? F???          M     call    read_rtc
000AD6 C??? FFE8          M     movff   datachar, WREG
000ADA EC?? F???          M     call    rtc_convert
000ADE EC?? F???      01151         call    WriteEE_RTC
                      01152         rtc_read    0x05        ; months
000AE2 0E05               M     movlw   0x05
000AE4 6E??               M     movwf   regaddress
000AE6 EC?? F???          M     call    read_rtc
000AEA C??? FFE8          M     movff   datachar, WREG
000AEE EC?? F???          M     call    rtc_convert
000AF2 EC?? F???      01153         call    WriteEE_RTC
                      01154         rtc_read    0x04        ; days
000AF6 0E04               M     movlw   0x04
000AF8 6E??               M     movwf   regaddress
000AFA EC?? F???          M     call    read_rtc
000AFE C??? FFE8          M     movff   datachar, WREG
000B02 EC?? F???          M     call    rtc_convert
000B06 EC?? F???      01155         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000B0A 0012           01156 return
                      01157         
000B0C                01158 SAVE_EXE_TIME
                      01159         
Warning[202]: Argument out of range.  Least significant bits used.
000B0C 3818           01160         swapf   OP_sec, WREG    ; 100's seconds
000B0E 6E17           01161         movwf   temp
000B10 0E0F           01162         movlw   0x0f
000B12 1617           01163         andwf   temp
000B14 C017 FFE8      01164         movff   temp, WREG
000B18 0F30           01165         addlw   0x30    
                      01166         WriteEE WREG, H_EE, L_EE
000B1A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B1E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B22 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B26 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B28 D???               M         bra     $-2
                          M 
000B2A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B2C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B2E 84A6               M         bsf     EECON1, WREN        ; enable write
000B30 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B32 98A1               M         bcf     PIR2, EEIF
                          M 
000B34 0E55               M         movlw   0x55
000B36 6EA7               M         movwf   EECON2              ; write 55h
000B38 0EAA               M         movlw   0xaa
000B3A 6EA7               M         movwf   EECON2              ; write 0xaa
000B3C 82A6               M         bsf     EECON1, WR          ; begin write
000B3E B2A6               M         btfsc   EECON1, WR
000B40 D???               M         bra     $-2
                          M 
000B42 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B44 94A6               M         bcf     EECON1, WREN        ; disable writes
000B46 2A21           01167         incf    L_EE
                      01168         
000B48 C018 F017      01169         movff   OP_sec, temp    ; 10's seconds
000B4C 0E0F           01170         movlw   0x0f
000B4E 1617           01171         andwf   temp            ; Temp = lower nibble of Op_sec
000B50 C017 FFE8      01172         movff   temp, WREG      ; W = Temp
000B54 0F30           01173         addlw   0x30            ; Convert to ASCII
                      01174         WriteEE WREG, H_EE, L_EE
000B56 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B5A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B5E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B62 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B64 D???               M         bra     $-2
                          M 
000B66 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B68 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B6A 84A6               M         bsf     EECON1, WREN        ; enable write
000B6C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B6E 98A1               M         bcf     PIR2, EEIF
                          M 
000B70 0E55               M         movlw   0x55
000B72 6EA7               M         movwf   EECON2              ; write 55h
000B74 0EAA               M         movlw   0xaa
000B76 6EA7               M         movwf   EECON2              ; write 0xaa
000B78 82A6               M         bsf     EECON1, WR          ; begin write
000B7A B2A6               M         btfsc   EECON1, WR
000B7C D???               M         bra     $-2
                          M 
000B7E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B80 94A6               M         bcf     EECON1, WREN        ; disable writes
000B82 2A21           01175         incf    L_EE
                      01176         
Warning[202]: Argument out of range.  Least significant bits used.
000B84 3819           01177         swapf   OP_INT, WREG    ;1's seconds
000B86 6E17           01178         movwf   temp
000B88 0E0F           01179         movlw   0x0f
000B8A 1617           01180         andwf   temp
000B8C C017 FFE8      01181         movff   temp, WREG
000B90 0F30           01182         addlw   0x30
                      01183         WriteEE WREG, H_EE, L_EE
000B92 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B96 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B9A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B9E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BA0 D???               M         bra     $-2
                          M 
000BA2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BA4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BA6 84A6               M         bsf     EECON1, WREN        ; enable write
000BA8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BAA 98A1               M         bcf     PIR2, EEIF
                          M 
000BAC 0E55               M         movlw   0x55
000BAE 6EA7               M         movwf   EECON2              ; write 55h
000BB0 0EAA               M         movlw   0xaa
000BB2 6EA7               M         movwf   EECON2              ; write 0xaa
000BB4 82A6               M         bsf     EECON1, WR          ; begin write
000BB6 B2A6               M         btfsc   EECON1, WR
000BB8 D???               M         bra     $-2
                          M 
000BBA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BBC 94A6               M         bcf     EECON1, WREN        ; disable writes
000BBE 2A21           01184         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000BC0 0012           01185 return
                      01186         
                      01187                 
000BC2                01188 DISPLAY_RTC
                      01189         ; display data in this format hh/minmin/yy yy/mm/dd
                      01190         
                      01191         rtc_read    0x02            ; 0x02 from DS1307 - hours
000BC2 0E02               M     movlw   0x02
000BC4 6E??               M     movwf   regaddress
000BC6 EC?? F???          M     call    read_rtc
000BCA C??? FFE8          M     movff   datachar, WREG
000BCE EC?? F???          M     call    rtc_convert
000BD2 C??? FFE8      01192         movff   tens_digit,WREG
000BD6 EC?? F???      01193         call    WR_DATA
000BDA C??? FFE8      01194         movff   ones_digit,WREG
000BDE EC?? F???      01195         call    WR_DATA
000BE2 0E68           01196         movlw   "h"
000BE4 EC?? F???      01197         call    WR_DATA
                      01198         
                      01199         rtc_read    0x01            ; 0x01 from DS1307 - minutes
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BE8 0E01               M     movlw   0x01
000BEA 6E??               M     movwf   regaddress
000BEC EC?? F???          M     call    read_rtc
000BF0 C??? FFE8          M     movff   datachar, WREG
000BF4 EC?? F???          M     call    rtc_convert
000BF8 C??? FFE8      01200         movff   tens_digit,WREG
000BFC EC?? F???      01201         call    WR_DATA
000C00 C??? FFE8      01202         movff   ones_digit,WREG
000C04 EC?? F???      01203         call    WR_DATA
                      01204         
                      01205         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000C08 0E00               M     movlw   0x00
000C0A 6E??               M     movwf   regaddress
000C0C EC?? F???          M     call    read_rtc
000C10 C??? FFE8          M     movff   datachar, WREG
000C14 EC?? F???          M     call    rtc_convert
000C18 C??? FFE8      01206         movff   tens_digit,WREG
000C1C EC?? F???      01207         call    WR_DATA
000C20 C??? FFE8      01208         movff   ones_digit,WREG
000C24 EC?? F???      01209         call    WR_DATA
000C28 0E20           01210         movlw   " "
000C2A EC?? F???      01211         call    WR_DATA
                      01212         
                      01213         rtc_read    0x06            ; 0x06 from DS1307 - years
000C2E 0E06               M     movlw   0x06
000C30 6E??               M     movwf   regaddress
000C32 EC?? F???          M     call    read_rtc
000C36 C??? FFE8          M     movff   datachar, WREG
000C3A EC?? F???          M     call    rtc_convert
000C3E C??? FFE8      01214         movff   tens_digit,WREG
000C42 EC?? F???      01215         call    WR_DATA
000C46 C??? FFE8      01216         movff   ones_digit,WREG
000C4A EC?? F???      01217         call    WR_DATA
000C4E 0E2F           01218         movlw   "/"
000C50 EC?? F???      01219         call    WR_DATA
                      01220         
                      01221         rtc_read    0x05            ; 0x05 from DS1307 - months
000C54 0E05               M     movlw   0x05
000C56 6E??               M     movwf   regaddress
000C58 EC?? F???          M     call    read_rtc
000C5C C??? FFE8          M     movff   datachar, WREG
000C60 EC?? F???          M     call    rtc_convert
000C64 C??? FFE8      01222         movff   tens_digit,WREG
000C68 EC?? F???      01223         call    WR_DATA
000C6C C??? FFE8      01224         movff   ones_digit,WREG
000C70 EC?? F???      01225         call    WR_DATA
000C74 0E2F           01226         movlw   "/"
000C76 EC?? F???      01227         call    WR_DATA
                      01228         
                      01229         rtc_read    0x04            ; 0x04 from DS1307 - days
000C7A 0E04               M     movlw   0x04
000C7C 6E??               M     movwf   regaddress
000C7E EC?? F???          M     call    read_rtc
000C82 C??? FFE8          M     movff   datachar, WREG
000C86 EC?? F???          M     call    rtc_convert
000C8A C??? FFE8      01230         movff   tens_digit,WREG
000C8E EC?? F???      01231         call    WR_DATA
000C92 C??? FFE8      01232         movff   ones_digit,WREG
000C96 EC?? F???      01233         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C9A 0012           01234 return
                      01235         
000C9C                01236 SET_TIME
                      01237         rtc_resetAll
                          M 
000C9C 6A??               M     clrf    databyte
000C9E 0E06               M     movlw   6
000CA0 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000CA2                    M     del_loop0
000CA2 EC?? F???          M     call    write_rtc
000CA6 2E??               M     decfsz  regaddress
000CA8 D???               M     bra     del_loop0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CAA EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01238         
                      01239         rtc_set 0x00,   b'10000000'
000CAE 0E00               M     movlw   0x00
000CB0 6E??               M     movwf   regaddress
000CB2 0E80               M     movlw   b'10000000'
000CB4 6E??               M     movwf   databyte
000CB6 EC?? F???          M     call    write_rtc
                      01240 
                      01241         rtc_set 0x06,   b'00010111'             ; Year 17
000CBA 0E06               M     movlw   0x06
000CBC 6E??               M     movwf   regaddress
000CBE 0E17               M     movlw   b'00010111'
000CC0 6E??               M     movwf   databyte
000CC2 EC?? F???          M     call    write_rtc
                      01242         rtc_set 0x05,   b'00000011'             ; Month 03
000CC6 0E05               M     movlw   0x05
000CC8 6E??               M     movwf   regaddress
000CCA 0E03               M     movlw   b'00000011'
000CCC 6E??               M     movwf   databyte
000CCE EC?? F???          M     call    write_rtc
                      01243         rtc_set 0x04,   b'00000100'             ; Date 04
000CD2 0E04               M     movlw   0x04
000CD4 6E??               M     movwf   regaddress
000CD6 0E04               M     movlw   b'00000100'
000CD8 6E??               M     movwf   databyte
000CDA EC?? F???          M     call    write_rtc
                      01244         rtc_set 0x02,   b'00010010'             ; Hours 12
000CDE 0E02               M     movlw   0x02
000CE0 6E??               M     movwf   regaddress
000CE2 0E12               M     movlw   b'00010010'
000CE4 6E??               M     movwf   databyte
000CE6 EC?? F???          M     call    write_rtc
                      01245         rtc_set 0x01,   b'01001000'             ; Minutes 27
000CEA 0E01               M     movlw   0x01
000CEC 6E??               M     movwf   regaddress
000CEE 0E48               M     movlw   b'01001000'
000CF0 6E??               M     movwf   databyte
000CF2 EC?? F???          M     call    write_rtc
                      01246         rtc_set 0x00,   b'00000000'             ; Seconds 0
000CF6 0E00               M     movlw   0x00
000CF8 6E??               M     movwf   regaddress
000CFA 0E00               M     movlw   b'00000000'
000CFC 6E??               M     movwf   databyte
000CFE EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000D02 0012           01247 return
                      01248         
000D04                01249 INIT_USART
                      01250         
000D04 8E94           01251         bsf     TRISC, 7        ; set RC7=USART RC
000D06 9C94           01252         bcf     TRISC, 6        ; clear RC6=USART TX
                      01253 
000D08 0E0F           01254         movlw   15              ; baud rate 9600
000D0A 6EAF           01255         movwf   SPBRG
000D0C 6AAC           01256         clrf    TXSTA
                      01257         
000D0E 6AAB           01258         clrf    RCSTA
000D10 8EAB           01259         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000D12 88AB           01260         bsf     RCSTA,CREN      ; continous receive
                      01261         
000D14 8AAC           01262         bsf     TXSTA, TXEN     ; transmit enabled
000D16 0012           01263         return
                      01264 
000D18                01265 DataUSART
000D18 0E02           01266         movlw   0x02
000D1A EC?? F???      01267         call    USART_WAIT
000D1E 0E0D           01268         movlw   0x0D
000D20 EC?? F???      01269         call    USART_WAIT
                      01270         
000D24 6A15           01271         clrf    counter         ; used to cycle through past 9 eeprom logs
000D26 6A16           01272         clrf    counter2        ; used to transmit all 18 bits of saved data
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01273         
000D28                01274 TRANSFER_LOGS
000D28 0E15           01275         movlw   d'21'           ; logs are 21 bits apart
000D2A 0215           01276         mulwf   counter         ; log number one starts at eeprom address 0
000D2C CFF3 F021      01277         movff   PRODL, L_EE     ; low address now points to count X 21
000D30 6A16           01278         clrf    counter2
                      01279         
000D32                01280 TRANSFER_DATA   
                      01281         READEE  WREG, H_EE, L_EE
000D32 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D36 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D3A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D3C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D3E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D40 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D44 EC?? F???      01282         call    USART_WAIT      ; transfer bit
000D48 2A21           01283         incf    L_EE
                      01284         
000D4A 2A16           01285         incf    counter2
000D4C 0E12           01286         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000D4E 6216           01287         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000D50 D???           01288         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01289         
000D52 EC?? F???      01290         call    USART_LINE      ; new line because a e s t h e t i c
                      01291         
000D56 2A15           01292         incf    counter
000D58 0E08           01293         movlw   d'8'            ; we save up to the last 9 permanent logs
000D5A 6215           01294         cpfseq  counter
000D5C D???           01295         bra     TRANSFER_LOGS
                      01296         
000D5E EC?? F???      01297         call    LCD_L2
                      01298         Display PCComplete
  0000                    M         local   loop
000D62 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D64 6EF8               M         movwf   TBLPTRU
000D66 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D68 6EF7               M         movwf   TBLPTRH
000D6A 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D6C 6EF6               M         movwf   TBLPTRL
000D6E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D70 50F5               M         movf    TABLAT, W
000D72                    M loop
000D72 EC?? F???          M         call    WR_DATA         ; write to LCD
000D76 000B               M         tblrd+*                 ; next row in table
000D78 50F5               M         movf    TABLAT, W
000D7A E1??               M         bnz     loop
                      01299         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D7C 0E28               M         movlw   0x28
000D7E 6E1A               M         movwf   delayR
                          M 
000D80                    M loop
000D80 EC?? F???          M         call    Delay50ms
000D84 2E1A               M         decfsz  delayR
000D86 EF?? F???          M         goto    loop
000D8A 0012           01300         return                  ; done transmitting data
                      01301         
000D8C                01302 USART_WAIT
000D8C 6EAD           01303         movwf   TXREG
000D8E A2AC           01304         btfss   TXSTA, 1
000D90 EF?? F???      01305         goto    $-2
000D94 0012           01306         return
                      01307 
000D96                01308 USART_LINE
000D96 0E0A           01309         movlw   0x0A
000D98 EC?? F???      01310         call    USART_WAIT
000D9C 0E0D           01311         movlw   0x0D
000D9E EC?? F???      01312         call    USART_WAIT
000DA2 0012           01313         return
                      01314         
000DA4                01315 Delay5us
000DA4 0E78           01316         movlw   d'120'
000DA6 6E1B           01317         movwf   d5us
                      01318 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DA8                01319 loop5us
000DA8 2E1B           01320         decfsz  d5us
000DAA EF?? F???      01321         goto    loop5us
000DAE 0000           01322         nop
000DB0 0012           01323         return
                      01324 
000DB2                01325 Delay200us
000DB2 0EA4           01326         movlw   0xA4
000DB4 6E1C           01327         movwf   d200us
                      01328 
000DB6                01329 loop200us
000DB6 2E1C           01330         decfsz  d200us
000DB8 EF?? F???      01331         goto    loop200us
000DBC 0000           01332         nop
000DBE 0012           01333         return
                      01334 
000DC0                01335 Delay50ms
000DC0 0EF9           01336         movlw   0xF9
000DC2 6E1D           01337         movwf   d50ms
                      01338 
000DC4                01339 loop50ms
000DC4 EC?? F???      01340         call    Delay200us
000DC8 2E1D           01341         decfsz  d50ms
                      01342 
000DCA                01343 Cycles
000DCA EF?? F???      01344         goto    loop50ms
000DCE EC?? F???      01345         call    Delay200us
000DD2 0012           01346         return
                      01347 
000DD4                01348 WriteEE_RTC
                      01349         WriteEE tens_digit, H_EE, L_EE
000DD4 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DD8 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DDC C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000DE0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DE2 D???               M         bra     $-2
                          M 
000DE4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DE6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DE8 84A6               M         bsf     EECON1, WREN        ; enable write
000DEA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DEC 98A1               M         bcf     PIR2, EEIF
                          M 
000DEE 0E55               M         movlw   0x55
000DF0 6EA7               M         movwf   EECON2              ; write 55h
000DF2 0EAA               M         movlw   0xaa
000DF4 6EA7               M         movwf   EECON2              ; write 0xaa
000DF6 82A6               M         bsf     EECON1, WR          ; begin write
000DF8 B2A6               M         btfsc   EECON1, WR
000DFA D???               M         bra     $-2
                          M 
000DFC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DFE 94A6               M         bcf     EECON1, WREN        ; disable writes
000E00 2A21           01350         incf    L_EE
                      01351         WriteEE ones_digit, H_EE, L_EE
000E02 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E06 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E0A C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000E0E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E10 D???               M         bra     $-2
                          M 
000E12 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E14 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E16 84A6               M         bsf     EECON1, WREN        ; enable write
000E18 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E1A 98A1               M         bcf     PIR2, EEIF
                          M 
000E1C 0E55               M         movlw   0x55
000E1E 6EA7               M         movwf   EECON2              ; write 55h
000E20 0EAA               M         movlw   0xaa
000E22 6EA7               M         movwf   EECON2              ; write 0xaa
000E24 82A6               M         bsf     EECON1, WR          ; begin write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E26 B2A6               M         btfsc   EECON1, WR
000E28 D???               M         bra     $-2
                          M 
000E2A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E2C 94A6               M         bcf     EECON1, WREN        ; disable writes
000E2E 2A21           01352         incf    L_EE
000E30 0012           01353         return
                      01354 
000E32                01355 ClearEEPROM_21
000E32 6A20           01356         clrf    H_EE
000E34 6A21           01357         clrf    L_EE
000E36 681F           01358         setf    clear_EE
000E38 6A15           01359         clrf    counter
000E3A                01360 ClearNext
                      01361         WriteEE         clear_EE, H_EE, L_EE
000E3A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E3E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E42 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000E46 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E48 D???               M         bra     $-2
                          M 
000E4A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E4C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E4E 84A6               M         bsf     EECON1, WREN        ; enable write
000E50 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E52 98A1               M         bcf     PIR2, EEIF
                          M 
000E54 0E55               M         movlw   0x55
000E56 6EA7               M         movwf   EECON2              ; write 55h
000E58 0EAA               M         movlw   0xaa
000E5A 6EA7               M         movwf   EECON2              ; write 0xaa
000E5C 82A6               M         bsf     EECON1, WR          ; begin write
000E5E B2A6               M         btfsc   EECON1, WR
000E60 D???               M         bra     $-2
                          M 
000E62 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E64 94A6               M         bcf     EECON1, WREN        ; disable writes
000E66 2A15           01362         incf            counter
000E68 2A21           01363         incf            L_EE
000E6A 0E15           01364         movlw           d'21'
000E6C 6215           01365         cpfseq          counter
000E6E EF?? F???      01366         goto            ClearNext
000E72 6A20           01367         clrf            H_EE
000E74 6A21           01368         clrf            L_EE
000E76 0012           01369         return
                      01370         
000E78                01371 READ_KEY
000E78 A281           01372         btfss   PORTB, 1        ; check for keypad interrupt
000E7A EF?? F???      01373         goto    READ_KEY
000E7E 3881           01374         swapf   PORTB, W
000E80 0B0F           01375         andlw   0x0F
000E82 6E10           01376         movwf   KEY
000E84 B281           01377         btfsc   PORTB, 1
000E86 EF?? F???      01378         goto    $-2
000E8A 0012           01379         return
                      01380 
000E8C                01381 READ_KEY_TIME
000E8C EC?? F???      01382         call        LCD_L2          ; go to second line to print RTC    
                      01383         ; display the time
                      01384         ; call      DISPLAY_RTC 
                      01385 
000E90 A281           01386         btfss       PORTB, 1    ; keypad interrupt
000E92 EF?? F???      01387         goto        READ_KEY_TIME
000E96 3881           01388         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E98 0B0F           01389         andlw       0x0F        ; only want W3:0
000E9A 6E10           01390         movwf       KEY         ; write this value to the KEY
000E9C B281           01391         btfsc       PORTB, 1    ; wait for release
000E9E EF?? F???      01392         goto        $-2         ; go back one instruction
000EA2 0012           01393         return
                      01394 
000EA4                01395 DisplayExeTime
                      01396         READEE  REG_EE, H_EE, L_EE
000EA4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EA8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EAC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EAE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EB0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EB2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EB6 0EFF           01397         movlw   0xFF
000EB8 6222           01398         cpfseq  REG_EE
000EBA EF?? F???      01399         goto    NoSkipDispExeTime
                      01400         Display NoData
  0000                    M         local   loop
000EBE 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EC0 6EF8               M         movwf   TBLPTRU
000EC2 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EC4 6EF7               M         movwf   TBLPTRH
000EC6 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EC8 6EF6               M         movwf   TBLPTRL
000ECA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000ECC 50F5               M         movf    TABLAT, W
000ECE                    M loop
000ECE EC?? F???          M         call    WR_DATA         ; write to LCD
000ED2 000B               M         tblrd+*                 ; next row in table
000ED4 50F5               M         movf    TABLAT, W
000ED6 E1??               M         bnz     loop
000ED8 0EFF           01401         movlw   0xFF
000EDA 6022           01402         cpfslt  REG_EE
000EDC EF?? F???      01403         goto    SkipDispExeTime
000EE0 0012           01404         return
                      01405 
000EE2                01406 NoSkipDispExeTime
                      01407         READEE  WREG, H_EE, L_EE
000EE2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EE6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EEA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EEC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EEE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EF0 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EF4 EC?? F???      01408         call    WR_DATA
000EF8 2A21           01409         incf    L_EE
                      01410         
                      01411         READEE  WREG, H_EE, L_EE
000EFA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EFE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F02 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F04 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F06 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F08 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F0C EC?? F???      01412         call    WR_DATA
000F10 2A21           01413         incf    L_EE
                      01414         
                      01415         READEE  WREG, H_EE, L_EE
000F12 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F16 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F1A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F1C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F1E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F20 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F24 EC?? F???      01416         call    WR_DATA
000F28 2A21           01417         incf    L_EE
                      01418 
000F2A 0E73           01419         movlw   0x73            ; Write 's'
000F2C EC?? F???      01420         call    WR_DATA
000F30 EC?? F???      01421         call    LCD_L2
000F34                01422 SkipDispExeTime
000F34 0012           01423         return
                      01424 
000F36                01425 DispOpSort
                      01426         READEE  REG_EE, H_EE, L_EE
000F36 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F3A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F3E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F40 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F42 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F44 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F48 0EFF           01427         movlw   0xff
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F4A 6222           01428         cpfseq  REG_EE
000F4C EF?? F???      01429         goto    NoSkipDispOpSort
                      01430         Display NoData
  0000                    M         local   loop
000F50 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F52 6EF8               M         movwf   TBLPTRU
000F54 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F56 6EF7               M         movwf   TBLPTRH
000F58 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F5A 6EF6               M         movwf   TBLPTRL
000F5C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F5E 50F5               M         movf    TABLAT, W
000F60                    M loop
000F60 EC?? F???          M         call    WR_DATA         ; write to LCD
000F64 000B               M         tblrd+*                 ; next row in table
000F66 50F5               M         movf    TABLAT, W
000F68 E1??               M         bnz     loop
000F6A 0EFF           01431         movlw   0xff
000F6C 6022           01432         cpfslt  REG_EE
000F6E EF?? F???      01433         goto    SkipDispOpSort
                      01434 
000F72                01435 NoSkipDispOpSort
000F72 0E61           01436         movlw   "a"
000F74 EC?? F???      01437         call    WR_DATA
                      01438         
                      01439         READEE  REG_EE, H_EE, L_EE
000F78 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F7C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F80 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F82 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F84 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F86 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F8A C022 FFE8      01440         movff   REG_EE, WREG
000F8E EC?? F???      01441         call    WR_DATA
000F92 2A21           01442         incf    L_EE
                      01443         
000F94 0E20           01444         movlw   " "
000F96 EC?? F???      01445         call    WR_DATA
                      01446         
000F9A 0E62           01447         movlw   "b"
000F9C EC?? F???      01448         call    WR_DATA
                      01449         
                      01450         READEE  REG_EE, H_EE, L_EE
000FA0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FA4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FA8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FAA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FAC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FAE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FB2 C022 FFE8      01451         movff   REG_EE, WREG
000FB6 EC?? F???      01452         call    WR_DATA
000FBA 2A21           01453         incf    L_EE
                      01454         
000FBC 0E20           01455         movlw   " "
000FBE EC?? F???      01456         call    WR_DATA
                      01457         
000FC2 0E63           01458         movlw   "c"
000FC4 EC?? F???      01459         call    WR_DATA
                      01460         
                      01461         READEE  REG_EE, H_EE, L_EE
000FC8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FCC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FD0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FD2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FD4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FD6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FDA C022 FFE8      01462         movff   REG_EE, WREG
000FDE EC?? F???      01463         call    WR_DATA
000FE2 2A21           01464         incf    L_EE
                      01465         
000FE4 0E20           01466         movlw   " "
000FE6 EC?? F???      01467         call    WR_DATA
                      01468         
000FEA 0E64           01469         movlw   "d"
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000FEC EC?? F???      01470         call    WR_DATA
                      01471         
                      01472         READEE  REG_EE, H_EE, L_EE
000FF0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FF4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FF8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FFA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FFC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FFE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001002 C022 FFE8      01473         movff   REG_EE, WREG
001006 EC?? F???      01474         call    WR_DATA
00100A 2A21           01475         incf    L_EE
                      01476 
00100C                01477 SkipDispOpSort
00100C 0012           01478         return
                      01479         
00100E                01480 DispOpRTC
                      01481         READEE  REG_EE, H_EE, L_EE
00100E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001012 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001016 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001018 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00101A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00101C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001020 0EFF           01482         movlw   0xff
001022 6222           01483         cpfseq  REG_EE
001024 EF?? F???      01484         goto    NoSkipDispOpRTC
                      01485         Display NoData
  0000                    M         local   loop
001028 0E??               M         movlw   upper NoData    ; Move Table<20:16>
00102A 6EF8               M         movwf   TBLPTRU
00102C 0E??               M         movlw   high NoData     ; Move Table<15:8>
00102E 6EF7               M         movwf   TBLPTRH
001030 0E??               M         movlw   low NoData      ; Move Table<7:0>
001032 6EF6               M         movwf   TBLPTRL
001034 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
001036 50F5               M         movf    TABLAT, W
001038                    M loop
001038 EC?? F???          M         call    WR_DATA         ; write to LCD
00103C 000B               M         tblrd+*                 ; next row in table
00103E 50F5               M         movf    TABLAT, W
001040 E1??               M         bnz     loop
001042 0EFF           01486         movlw   0xff
001044 6022           01487         cpfslt  REG_EE
001046 EF?? F???      01488         goto    SkipDispOpRTC
                      01489 
00104A                01490 NoSkipDispOpRTC
                      01491         READEE  REG_EE, H_EE, L_EE
00104A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00104E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001052 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001054 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001056 80A6               M         bsf     EECON1, RD          ; read EEPROM
001058 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00105C C022 FFE8      01492         movff   REG_EE, WREG
001060 EC?? F???      01493         call    WR_DATA
001064 2A21           01494         incf    L_EE
                      01495         
                      01496         READEE  REG_EE, H_EE, L_EE
001066 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00106A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00106E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001070 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001072 80A6               M         bsf     EECON1, RD          ; read EEPROM
001074 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001078 C022 FFE8      01497         movff   REG_EE, WREG
00107C EC?? F???      01498         call    WR_DATA
001080 2A21           01499         incf    L_EE
                      01500 
001082 0E68           01501         movlw   "h"
001084 EC?? F???      01502         call    WR_DATA
                      01503         
001088 EC?? F???      01504         call    DispOpRTC_Helper
                      01505         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-7-2017  14:33:40         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00108C 0E20           01506         movlw   " "
00108E EC?? F???      01507         call    WR_DATA
                      01508         
001092 EC?? F???      01509         call    DispOpRTC_Helper
001096 0E2F           01510         movlw   "/"
001098 EC?? F???      01511         call    WR_DATA
                      01512 
00109C EC?? F???      01513         call    DispOpRTC_Helper
0010A0 0E2F           01514         movlw   "/"
0010A2 EC?? F???      01515         call    WR_DATA
0010A6 EC?? F???      01516         call    DispOpRTC_Helper
0010AA                01517 SkipDispOpRTC
0010AA 0012           01518                 return
0010AC                01519 DispOpRTC_Helper
                      01520         READEE          REG_EE, H_EE, L_EE
0010AC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010B0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010B4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010B6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010B8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010BA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010BE C022 FFE8      01521         movff           REG_EE, WREG
0010C2 EC?? F???      01522         call            WR_DATA
0010C6 2A21           01523         incf            L_EE
                      01524         READEE          REG_EE, H_EE, L_EE
0010C8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010CC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010D0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010D2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010D4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010D6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010DA C022 FFE8      01525         movff           REG_EE, WREG
0010DE EC?? F???      01526         call            WR_DATA
0010E2 2A21           01527         incf            L_EE
0010E4 0012           01528         return
Warning[205]: Found directive in column 1. (end)
                      01529 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

