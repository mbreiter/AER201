MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000096 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
0000A2 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000AE 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000B6 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000C4 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000CE 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000DE 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000E8 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000F2 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 EMERGENCY_STOP
                      00271         ; first check if we're currently sorting - else, no need to restart
00001C 0EFF           00272         movlw   0xff                ; if in operation, skip return
00001E 621E           00273         cpfseq  inExecution
000020 EF?? F???      00274         goto    END_ISR_HIGH
                      00275         
                      00276         ; reset program counter - emergency stop recorded. 
000024 9ED5           00277         bcf     T0CON, TMR0ON
000026 EC?? F???      00278         call    SAVE_EXE_TIME
                      00279         
                      00280         ; reset emergency stop interrupt bit
00002A 92F2           00281         bcf     INTCON, INT0IF
                      00282                 
                      00283         ; clear inExecution flag
00002C 6A1E           00284         clrf    inExecution
00002E 0E01           00285         movlw   d'1'
000030 6E37           00286         movwf   STOP_CONDITION
000032 EC?? F???      00287         call    SaveData
                      00288         
000036 6AFF           00289         clrf    TOSU
000038 6AFE           00290         clrf    TOSH
00003A 6AFD           00291         clrf    TOSL
00003C 90F0           00292         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00293         restoreContext
00003E 3814               M     swapf   temp_W, 0               ; restore W first
000040 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000044 0010           00294         retfie
                      00295 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000046                00296 LOAD_STANDBY_TIME
000046 0EFF           00297         movlw   0xff
000048 6ED7           00298         movwf   TMR0H
00004A 0EFF           00299         movlw   0xff
00004C 6ED6           00300         movwf   TMR0L
                      00301 
00004E 0012           00302         return  
                      00303 
000050                00304 LOAD_EXE_TIME
000050 0EC3           00305         movlw   0xc3
000052 6ED7           00306         movwf   TMR0H
000054 0E25           00307         movlw   0x25
000056 6ED6           00308         movwf   TMR0L
                      00309         
000058 0012           00310         return
                      00311         
00005A                00312 ISR_HIGH
                      00313         saveContext
00005A CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00005E 6E14               M     movwf   temp_W                  ; save W
                      00314         
                      00315 ;       btfsc   INTCON, INT0IF
                      00316 ;       call    EMERGENCY_STOP
                      00317         
000060 0E00           00318         movlw   0x00
000062 6238           00319         cpfseq  inStandby
000064 EC?? F???      00320         call    Shift
                      00321         
                      00322         ;reset timer, but need to check which time increment 
000068 0E00           00323         movlw   0x00
00006A 6238           00324         cpfseq  inStandby
00006C EC?? F???      00325         call    LOAD_STANDBY_TIME
                      00326         
000070 0EFF           00327         movlw   0xff
000072 6238           00328         cpfseq  inStandby
000074 EC?? F???      00329         call    LOAD_EXE_TIME
                      00330 
                      00331                 
                      00332         ; displaying the execution time in seconds
                      00333 ;       swapf   OP_sec, 0       ; 100's seconds
                      00334 ;       movwf   temp
                      00335 ;       movlw   0x0f
                      00336 ;       andwf   temp
                      00337 ;       movff   temp, WREG
                      00338 ;       addlw   0x30
                      00339 ;       call    WR_DATA
                      00340 ;
                      00341 ;       movff   OP_sec, temp    ; 10's seconds
                      00342 ;       movlw   0x0f
                      00343 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00344 ;       movff   temp, WREG      ; W = Temp
                      00345 ;       addlw   0x30            ; Convert to ASCII
                      00346 ;       call    WR_DATA
                      00347 ;       
                      00348 ;       swapf   OP_INT, WREG    ;1's seconds
                      00349 ;       movwf   temp
                      00350 ;       movlw   0x0f
                      00351 ;       andwf   temp
                      00352 ;       movff   temp, WREG
                      00353 ;       addlw   0x30
                      00354 ;       call    WR_DATA
                      00355 ;
                      00356 ;       movlw   0x73            ; Write 's'
                      00357 ;       call    WR_DATA
                      00358 ;       call    LCD_L2
                      00359                 
                      00360         ;timer interrupt
000078 A4F2           00361         btfss   INTCON, TMR0IF
00007A EF?? F???      00362         goto    END_ISR_HIGH
                      00363         
                      00364         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00007E C019 F017          M         movff   OP_INT, temp
                          M         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;process ones digit
000082 0E0F               M         movlw   0x0f
000084 1617               M         andwf   temp
000086 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000088 6217               M         cpfseq  temp
00008A EF?? F???          M         goto    ones
                          M         
00008E 0E10               M         movlw   b'00010000'
000090 2619               M         addwf   OP_INT
000092 0EF0               M         movlw   0xf0
000094 1619               M         andwf   OP_INT
000096 0EA0               M         movlw   0xa0
000098 6019               M         cpfslt  OP_INT
                          M         
00009A 6A19               M         clrf    OP_INT
00009C EF?? F???          M         goto    endBCD
                          M         
0000A0                    M ones
0000A0 2A19               M         incf    OP_INT
0000A2 EF?? F???          M         goto    endBCD
0000A6                    M endBCD
0000A6 0000               M         nop
0000A8 0E00           00365         movlw   d'0'
0000AA 6219           00366         cpfseq  OP_INT
0000AC EF?? F???      00367         goto    END_ISR_HIGH
                      00368         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000B0 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000B4 0E0F               M         movlw   0x0f
0000B6 1617               M         andwf   temp
0000B8 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000BA 6217               M         cpfseq  temp
0000BC EF?? F???          M         goto    ones
                          M         
0000C0 0E10               M         movlw   b'00010000'
0000C2 2618               M         addwf   OP_sec
0000C4 0EF0               M         movlw   0xf0
0000C6 1618               M         andwf   OP_sec
0000C8 0EA0               M         movlw   0xa0
0000CA 6018               M         cpfslt  OP_sec
                          M         
0000CC 6A18               M         clrf    OP_sec
0000CE EF?? F???          M         goto    endBCD
                          M         
0000D2                    M ones
0000D2 2A18               M         incf    OP_sec
0000D4 EF?? F???          M         goto    endBCD
0000D8                    M endBCD
0000D8 0000               M         nop
                      00369 
0000DA                00370 END_ISR_HIGH
0000DA 94F2           00371         bcf     INTCON, TMR0IF
                      00372         restoreContext
0000DC 3814               M     swapf   temp_W, 0               ; restore W first
0000DE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000E2 0010           00373         retfie
                      00374 
0000E4                00375 ISR_LOW
                      00376         saveContext
0000E4 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000E8 6E14               M     movwf   temp_W                  ; save W
                      00377         ; KEYPAD INTERRUPT
0000EA A0F0           00378         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000EC EF?? F???      00379         goto    END_ISR_LOW
                      00380 
                      00381         ; check operation status
0000F0 0EFF           00382         movlw   0xff                    ; If in operation, skip return
0000F2 621E           00383         cpfseq  inExecution
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000F4 EF?? F???      00384         goto    END_ISR_LOW
                      00385 
                      00386         ; process KEY
0000F8 3881           00387         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000FA 0B0F           00388         andlw   0x0f
0000FC 6E12           00389         movwf   KEY_ISR
                      00390         
0000FE 0E0C           00391         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
000100 6212           00392         cpfseq  KEY_ISR                 ; If key was '*', skip return
000102 EF?? F???      00393         goto    END_ISR_LOW
                      00394         
                      00395         ; reset program counter - emergency stop recorded. 
000106 9ED5           00396         bcf     T0CON, TMR0ON
000108 EC?? F???      00397         call    SAVE_EXE_TIME
                      00398                 
                      00399         ; Clear inExecution flag to stop '*' interrupts
00010C 6A1E           00400         clrf    inExecution
00010E 0E01           00401         movlw   d'1'
000110 6E37           00402         movwf   STOP_CONDITION
000112 EC?? F???      00403         call    SaveData
                      00404         
000116 6AFF           00405         clrf    TOSU
000118 6AFE           00406         clrf    TOSH
00011A 6AFD           00407         clrf    TOSL
00011C 90F0           00408         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00409         restoreContext
00011E 3814               M     swapf   temp_W, 0               ; restore W first
000120 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000124 0010           00410         retfie
                      00411 
000126                00412 END_ISR_LOW
000126 90F0           00413         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00414         restoreContext
000128 3814               M     swapf   temp_W, 0               ; restore W first
00012A C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00012E 0010           00415         retfie
                      00416 
                      00417 ;*******************************************************************************
                      00418 ; main
                      00419 ;*******************************************************************************
000130                00420 INIT
000130 0E70           00421         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000132 6ED3           00422         movwf   OSCCON
                      00423         
                      00424         ; i/o
000134 0E00           00425         movlw   b'00000000'
000136 6E92           00426         movwf   TRISA
000138 0EFF           00427         movlw   b'11111111'
00013A 6E93           00428         movwf   TRISB               ; keypad
00013C 0E00           00429         movlw   b'00000000'
00013E 6E94           00430         movwf   TRISC
000140 0E00           00431         movlw   b'00000000'
000142 6E95           00432         movwf   TRISD
000144 0E00           00433         movlw   b'00000000'
000146 6E96           00434         movwf   TRISE
                      00435 
                      00436         ; clear ports
000148 0E00           00437         movlw   b'00000000'
00014A 6E89           00438         movwf   LATA
00014C 0E00           00439         movlw   b'00000000'
00014E 6E8A           00440         movwf   LATB
000150 0E00           00441         movlw   b'00000000'
000152 6E8B           00442         movwf   LATC
000154 0E00           00443         movlw   b'00000000'
000156 6E8C           00444         movwf   LATD
000158 0E00           00445         movlw   b'00000000'
00015A 6E8D           00446         movwf   LATE
                      00447         
00015C 0E00           00448         movlw   b'00000000'
00015E 6EC2           00449         movwf   ADCON0
                      00450 ;       movlw   b'11111111'
                      00451 ;       movwf   ADCON1
                      00452         
                      00453         ; setting up pwm
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00454 ;       clrf    CM1CONO         ; disable comparators
                      00455 ;       clrf    CM2CONO
                      00456 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00457 ;       movwf   CCP2CON
                      00458 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
                      00459 ;       movwf   CCPR2L
                      00460 ;       
                      00461 ;       bcf     PIR1, TMR2IF
                      00462 ;       bcf     T2CON, T2CKPS1
                      00463 ;       bsf     T2CON, TMR2ON
                      00464         
                      00465         ; initializations
000160 EC?? F???      00466         call    InitLCD
                      00467         ConfigLCD
000164 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000166 EC?? F???          M           call      WR_INS
                          M 
00016A 0E0C               M           movlw     b'00001100'    ; display on/off
00016C EC?? F???          M           call      WR_INS
000170 0E01               M           movlw     b'00000001'    ; Clear ram
000172 EC?? F???          M           call      WR_INS
                      00468         
000176 EC?? F???      00469         call    i2c_common_setup
                      00470         
00017A EC?? F???      00471         call    RTC_INIT
                      00472         ;COLOUR_INIT
00017E EC?? F???      00473         call    INIT_USART
                      00474 
                      00475         ; interrupts
000182 6AD0           00476         clrf    RCON
000184 6AF2           00477         clrf    INTCON
000186 6AF1           00478         clrf    INTCON2
000188 6AF0           00479         clrf    INTCON3
00018A 8ED0           00480         bsf     RCON, IPEN          ; priority mode
00018C 8EF2           00481         bsf     INTCON, GIEH        ; permit global interrupts
00018E 8CF2           00482         bsf     INTCON, GIEL
000190 8AF1           00483         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000192 8AF2           00484         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000194 84F2           00485         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000196 84F1           00486         bsf     INTCON2, TMR0IP     ; set to high priority
000198 86F0           00487         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
00019A 9CF0           00488         bcf     INTCON3, INT1IP     ; keyboard to low priority
                      00489 ;       bsf     INTCON, INT0IE      ; enable high interrupts on rb0 for emergency stop
                      00490 ;       bcf     INTCON, INT0IF      ; clear emergency stop interrupt
                      00491         
                      00492         ; setting up timer to sychronize with 1 second clock intervals
00019C 9ED5           00493         bcf     T0CON, TMR0ON
00019E 9CD5           00494         bcf     T0CON, T08BIT
0001A0 9AD5           00495         bcf     T0CON, T0CS
0001A2 98D5           00496         bcf     T0CON, T0SE
0001A4 96D5           00497         bcf     T0CON, PSA
0001A6 94D5           00498         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
0001A8 82D5           00499         bsf     T0CON, T0PS1
0001AA 80D5           00500         bsf     T0CON, T0PS0
                      00501 
0001AC 6A20           00502         clrf    H_EE
0001AE 6A21           00503         clrf    L_EE
0001B0 6A??           00504         clrf    tens_digit
0001B2 6A??           00505         clrf    ones_digit
                      00506         
0001B4 6A2C           00507         clrf    DETECTION_VAL
0001B6 6A2D           00508         clrf    ESKA
0001B8 6A2E           00509         clrf    ESKA_NOCAP
0001BA 6A2F           00510         clrf    YOP
0001BC 6A30           00511         clrf    YOP_NOCAP
0001BE 6A31           00512         clrf    TOTAL_BOTTLES
0001C0 6A32           00513         clrf    COLLECTIONS_COUNT
                      00514         
0001C2 0EF2           00515         movlw     b'11110010'    ; Set required keypad inputs
0001C4 6E93           00516         movwf     TRISB
                      00517         
0001C6 EC?? F???      00518         call    ClrLCD
                      00519         Display Welcome
  0000                    M         local   loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001CA 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001CC 6EF8               M         movwf   TBLPTRU
0001CE 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001D0 6EF7               M         movwf   TBLPTRH
0001D2 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001D4 6EF6               M         movwf   TBLPTRL
0001D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D8 50F5               M         movf    TABLAT, W
0001DA                    M loop
0001DA EC?? F???          M         call    WR_DATA         ; write to LCD
0001DE 000B               M         tblrd+*                 ; next row in table
0001E0 50F5               M         movf    TABLAT, W
0001E2 E1??               M         bnz     loop
0001E4 EC?? F???      00520         call LCD_L2
                      00521         Display Team
  0000                    M         local   loop
0001E8 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001EA 6EF8               M         movwf   TBLPTRU
0001EC 0E??               M         movlw   high Team       ; Move Table<15:8>
0001EE 6EF7               M         movwf   TBLPTRH
0001F0 0E??               M         movlw   low Team        ; Move Table<7:0>
0001F2 6EF6               M         movwf   TBLPTRL
0001F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001F6 50F5               M         movf    TABLAT, W
0001F8                    M loop
0001F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001FC 000B               M         tblrd+*                 ; next row in table
0001FE 50F5               M         movf    TABLAT, W
000200 E1??               M         bnz     loop
                      00522         
                      00523         Delay50N delayR, 0x28
  0000                    M         local   loop
000202 0E28               M         movlw   0x28
000204 6E1A               M         movwf   delayR
                          M 
000206                    M loop
000206 EC?? F???          M         call    Delay50ms
00020A 2E1A               M         decfsz  delayR
00020C EF?? F???          M         goto    loop
                      00524 
                      00525 ;*******************************************************************************
                      00526 ; standby mode
                      00527 ;*******************************************************************************
000210                00528 STANDBY
000210 0E00           00529         movlw   b'00000000'
000212 6E84           00530         movwf   PORTE
000214 0E00           00531         movlw   b'00000000'
000216 6E80           00532         movwf   PORTA
                      00533         
000218 6838           00534         setf    inStandby       
00021A EC?? F???      00535         call    ClrLCD
                      00536         Display StandBy
  0000                    M         local   loop
00021E 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000220 6EF8               M         movwf   TBLPTRU
000222 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000224 6EF7               M         movwf   TBLPTRH
000226 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000228 6EF6               M         movwf   TBLPTRL
00022A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00022C 50F5               M         movf    TABLAT, W
00022E                    M loop
00022E EC?? F???          M         call    WR_DATA         ; write to LCD
000232 000B               M         tblrd+*                 ; next row in table
000234 50F5               M         movf    TABLAT, W
000236 E1??               M         bnz     loop
000238 EC?? F???      00537         call    LCD_L2
                      00538         Display StandbyInfo
  0000                    M         local   loop
00023C 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
00023E 6EF8               M         movwf   TBLPTRU
000240 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000242 6EF7               M         movwf   TBLPTRH
000244 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000246 6EF6               M         movwf   TBLPTRL
000248 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00024A 50F5               M         movf    TABLAT, W
00024C                    M loop
00024C EC?? F???          M         call    WR_DATA         ; write to LCD
000250 000B               M         tblrd+*                 ; next row in table
000252 50F5               M         movf    TABLAT, W
000254 E1??               M         bnz     loop
                      00539         
000256 0EFF           00540         movlw   0xff
000258 6ED7           00541         movwf   TMR0H
00025A 0EFF           00542         movlw   0xff
00025C 6ED6           00543         movwf   TMR0L
00025E 8ED5           00544         bsf     T0CON, TMR0ON       ; turning on timer
                      00545 
                      00546 
000260                00547 HOLD_STANDBY
000260 EC?? F???      00548         call    READ_KEY_TIME
                      00549 
                      00550         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000264 0E00               M         movlw   key1                ; poll for mode
000266 6210               M         cpfseq  KEY                 ; check this against key press
000268 EF?? F???          M         goto    Exit
                          M 
00026C                    M Next
00026C 6A89               M         clrf    LATA                ; clear pins before proceeding
00026E 6A8A               M         clrf    LATB
000270 6A8B               M         clrf    LATC
000272 6A8C               M         clrf    LATD
000274 EF?? F???          M         goto    COLOUR_TEST
                          M 
000278                    M Exit
000278 0000               M         nop
                      00551         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
00027A 0E01               M         movlw   key2                ; poll for mode
00027C 6210               M         cpfseq  KEY                 ; check this against key press
00027E EF?? F???          M         goto    Exit
                          M 
000282                    M Next
000282 6A89               M         clrf    LATA                ; clear pins before proceeding
000284 6A8A               M         clrf    LATB
000286 6A8B               M         clrf    LATC
000288 6A8C               M         clrf    LATD
00028A EF?? F???          M         goto    STEP_TEST
                          M 
00028E                    M Exit
00028E 0000               M         nop
                      00552         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000290 0E03               M         movlw   keyA                ; poll for mode
000292 6210               M         cpfseq  KEY                 ; check this against key press
000294 EF?? F???          M         goto    Exit
                          M 
000298                    M Next
000298 6A89               M         clrf    LATA                ; clear pins before proceeding
00029A 6A8A               M         clrf    LATB
00029C 6A8B               M         clrf    LATC
00029E 6A8C               M         clrf    LATD
0002A0 EF?? F???          M         goto    EXECUTION
                          M 
0002A4                    M Exit
0002A4 0000               M         nop
                      00553         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002A6 0E07               M         movlw   keyB                ; poll for mode
0002A8 6210               M         cpfseq  KEY                 ; check this against key press
0002AA EF?? F???          M         goto    Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002AE                    M Next
0002AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0002B0 6A8A               M         clrf    LATB
0002B2 6A8B               M         clrf    LATC
0002B4 6A8C               M         clrf    LATD
0002B6 EF?? F???          M         goto    LOG
                          M 
0002BA                    M Exit
0002BA 0000               M         nop
                      00554         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002BC 0E0B               M         movlw   keyC                ; poll for mode
0002BE 6210               M         cpfseq  KEY                 ; check this against key press
0002C0 EF?? F???          M         goto    Exit
                          M 
0002C4                    M Next
0002C4 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C6 6A8A               M         clrf    LATB
0002C8 6A8B               M         clrf    LATC
0002CA 6A8C               M         clrf    LATD
0002CC EF?? F???          M         goto    PERM_LOG
                          M 
0002D0                    M Exit
0002D0 0000               M         nop
                      00555         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002D2 0E0F               M         movlw   keyD                ; poll for mode
0002D4 6210               M         cpfseq  KEY                 ; check this against key press
0002D6 EF?? F???          M         goto    Exit
                          M 
0002DA                    M Next
0002DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0002DC 6A8A               M         clrf    LATB
0002DE 6A8B               M         clrf    LATC
0002E0 6A8C               M         clrf    LATD
0002E2 EF?? F???          M         goto    PC_MODE
                          M 
0002E6                    M Exit
0002E6 0000               M         nop
0002E8 D???           00556         bra     HOLD_STANDBY
                      00557         
                      00558 ;*******************************************************************************
                      00559 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00560 ;*******************************************************************************
                      00561         
0002EA                00562 STEP_TEST
0002EA 6A38           00563         clrf    inStandby
0002EC 6A32           00564         clrf    COLLECTIONS_COUNT
                      00565         Delay50N    delayR, 0x14
  0000                    M         local   loop
0002EE 0E14               M         movlw   0x14
0002F0 6E1A               M         movwf   delayR
                          M 
0002F2                    M loop
0002F2 EC?? F???          M         call    Delay50ms
0002F6 2E1A               M         decfsz  delayR
0002F8 EF?? F???          M         goto    loop
                      00566     
0002FC                00567 ROTATE_90_TEST                      ; actually 45, but dont care to change label
0002FC 0E23           00568         movlw   b'00100011'
0002FE 6E80           00569         movwf   PORTA
000300 EC?? F???      00570         call    delay5ms
000304 EC?? F???      00571         call    delay5ms
000308 EC?? F???      00572         call    delay5ms
00030C EC?? F???      00573         call    delay5ms
000310 EC?? F???      00574         call    delay5ms
000314 EC?? F???      00575         call    delay5ms
000318 EC?? F???      00576         call    delay5ms
00031C EC?? F???      00577         call    delay5ms
                      00578 ;       incf    COLLECTIONS_COUNT
                      00579 ;       
                      00580 ;       movlw   d'15'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00581 ;       subwf   COLLECTIONS_COUNT, 0
                      00582 ;       bz      STEP_TEST
                      00583 
000320 0E26           00584         movlw   b'00100110'
000322 6E80           00585         movwf   PORTA
000324 EC?? F???      00586         call    delay5ms
000328 EC?? F???      00587         call    delay5ms
00032C EC?? F???      00588         call    delay5ms
000330 EC?? F???      00589         call    delay5ms
000334 EC?? F???      00590         call    delay5ms
000338 EC?? F???      00591         call    delay5ms
00033C EC?? F???      00592         call    delay5ms
000340 EC?? F???      00593         call    delay5ms
                      00594 ;       incf    COLLECTIONS_COUNT
                      00595         
000344 0E2C           00596         movlw   b'00101100'
000346 6E80           00597         movwf   PORTA
000348 EC?? F???      00598         call    delay5ms
00034C EC?? F???      00599         call    delay5ms
000350 EC?? F???      00600         call    delay5ms
000354 EC?? F???      00601         call    delay5ms
000358 EC?? F???      00602         call    delay5ms
00035C EC?? F???      00603         call    delay5ms
000360 EC?? F???      00604         call    delay5ms
000364 EC?? F???      00605         call    delay5ms
                      00606 ;       incf    COLLECTIONS_COUNT
                      00607 
000368 0E29           00608         movlw   b'00101001'
00036A 6E80           00609         movwf   PORTA
00036C EC?? F???      00610         call    delay5ms
000370 EC?? F???      00611         call    delay5ms
000374 EC?? F???      00612         call    delay5ms
000378 EC?? F???      00613         call    delay5ms
00037C EC?? F???      00614         call    delay5ms
000380 EC?? F???      00615         call    delay5ms
000384 EC?? F???      00616         call    delay5ms
000388 EC?? F???      00617         call    delay5ms        
00038C 2A32           00618         incf    COLLECTIONS_COUNT
                      00619         
00038E 0E02           00620         movlw   d'2'                        ; 7 ~ 45 degrees
000390 6232           00621         cpfseq  COLLECTIONS_COUNT
000392 D???           00622         bra     ROTATE_90_TEST
                      00623         
000394 D???           00624         bra     STEP_TEST
                      00625 
000396                00626 COLOUR_TEST
000396 EC?? F???      00627         call    ClrLCD
00039A 6A38           00628         clrf    inStandby
00039C 0E01           00629         movlw   b'00000001'
00039E 6E84           00630         movwf   PORTE
                      00631 
0003A0                00632 LOOPING
                      00633         Delay50N delayR, 0x28
  0000                    M         local   loop
0003A0 0E28               M         movlw   0x28
0003A2 6E1A               M         movwf   delayR
                          M 
0003A4                    M loop
0003A4 EC?? F???          M         call    Delay50ms
0003A8 2E1A               M         decfsz  delayR
0003AA EF?? F???          M         goto    loop
                      00634 
                      00635 ;       movlw   d'1000'
                      00636 ;       movwf   TRAY_DELAY
                      00637         
                      00638         ; reading data from arduino 
                      00639         ; expect:   1 for eska cap
                      00640         ;           2 for eska no cap
                      00641         ;           3 for yop cap
                      00642         ;           4 for yop no cap
                      00643         ;           5 for no bottle, get outta here
0003AE EC?? F???      00644         call    READ_ARDUINO
                      00645         ;movlw  d'2'                    ; testing!!!
0003B2 6E2C           00646         movwf   DETECTION_VAL
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003B4 0F30           00647         addlw   0x30
0003B6 EC?? F???      00648         call    WR_DATA
                      00649         Delay50N delayR, 0x28
  0000                    M         local   loop
0003BA 0E28               M         movlw   0x28
0003BC 6E1A               M         movwf   delayR
                          M 
0003BE                    M loop
0003BE EC?? F???          M         call    Delay50ms
0003C2 2E1A               M         decfsz  delayR
0003C4 EF?? F???          M         goto    loop
                      00650         
0003C8 D???           00651         bra COLOUR_TEST
                      00652 
                      00653 ;*******************************************************************************
                      00654 ; execution mode
                      00655 ;*******************************************************************************
                      00656         
0003CA                00657 EXECUTION
0003CA 9ED5           00658         bcf     T0CON, TMR0ON       ; turning on timer
0003CC 6A38           00659         clrf    inStandby       
0003CE EC?? F???      00660         call    ClearEEPROM_21
                      00661         
                      00662         ; save the starting time
0003D2 EC?? F???      00663         call        SAVE_TIME
                      00664                 
                      00665         ; display
0003D6 681E           00666         setf        inExecution
0003D8 EC?? F???      00667         call        ClrLCD
                      00668         Display     Exe1
  0000                    M         local   loop
0003DC 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003DE 6EF8               M         movwf   TBLPTRU
0003E0 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003E2 6EF7               M         movwf   TBLPTRH
0003E4 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003E6 6EF6               M         movwf   TBLPTRL
0003E8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003EA 50F5               M         movf    TABLAT, W
0003EC                    M loop
0003EC EC?? F???          M         call    WR_DATA         ; write to LCD
0003F0 000B               M         tblrd+*                 ; next row in table
0003F2 50F5               M         movf    TABLAT, W
0003F4 E1??               M         bnz     loop
0003F6 EC?? F???      00669         call        LCD_L2
                      00670         
0003FA 0EC3           00671         movlw   0xc3
0003FC 6ED7           00672         movwf   TMR0H
0003FE 0E25           00673         movlw   0x25
000400 6ED6           00674         movwf   TMR0L
                      00675         
000402 8ED5           00676         bsf         T0CON, TMR0ON           ; turning on timer
                      00677         
                      00678         ; initialize variables
000404 6A18           00679         clrf        OP_sec
000406 6A19           00680         clrf        OP_INT
                      00681         
000408 6A2D           00682         clrf        ESKA
00040A 6A2E           00683         clrf        ESKA_NOCAP
00040C 6A2F           00684         clrf        YOP
00040E 6A30           00685         clrf        YOP_NOCAP
000410 6A31           00686         clrf        TOTAL_BOTTLES
000412 0E01           00687         movlw       d'1'
000414 6E35           00688         movwf       TRAY_CURRENT
000416 6A34           00689         clrf        TRAY_DELAY
                      00690         
000418 0E01           00691         movlw   b'00000001'
00041A 6E84           00692         movwf   PORTE
                      00693         
                      00694         ; todo: make sure tray is in position one on reset, add some delay
                      00695         
00041C EF?? F???      00696         goto        COLLECTIONS_STEP
                      00697 
000420                00698 COLLECTIONS_CORRECTION
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000420 0E00           00699         movlw       d'0'
000422 6E33           00700         movwf       TRAY_COUNT
                      00701         
000424 0E1A           00702         movlw       d'26'
000426 6E34           00703         movwf       TRAY_DELAY
000428 D???           00704         bra         ROTATE_45
                      00705         
00042A                00706 COLLECTIONS_VALUE
00042A 0E01           00707         movlw       d'1'
00042C 6E33           00708         movwf       TRAY_COUNT
                      00709         
00042E 0E19           00710         movlw       d'25'
000430 6E34           00711         movwf       TRAY_DELAY
000432 D???           00712         bra         ROTATE_45
                      00713         
000434                00714 COLLECTIONS_STEP
000434 6A32           00715         clrf        COLLECTIONS_COUNT
000436 0E00           00716         movlw       d'0'
                      00717 ;       cpfseq      TRAY_COUNT
                      00718 ;       bra         COLLECTIONS_CORRECTION
                      00719 ;       bra         COLLECTIONS_VALUE
                      00720         Delay50N    delayR, 0x14
  0000                    M         local   loop
000438 0E14               M         movlw   0x14
00043A 6E1A               M         movwf   delayR
                          M 
00043C                    M loop
00043C EC?? F???          M         call    Delay50ms
000440 2E1A               M         decfsz  delayR
000442 EF?? F???          M         goto    loop
                      00721 
                      00722 
000446                00723 ROTATE_45                       ; count needs to be 25 for 45 (45/1.8=25)
000446 0E23           00724         movlw   b'00100011'
000448 6E80           00725         movwf   PORTA
                      00726         Delay50N    delayR, 0x03
  0000                    M         local   loop
00044A 0E03               M         movlw   0x03
00044C 6E1A               M         movwf   delayR
                          M 
00044E                    M loop
00044E EC?? F???          M         call    Delay50ms
000452 2E1A               M         decfsz  delayR
000454 EF?? F???          M         goto    loop
000458 2A32           00727         incf    COLLECTIONS_COUNT
                      00728         
00045A C034 FFE8      00729         movff   TRAY_DELAY, WREG
00045E 0E19           00730         movlw   d'25'
000460 5C32           00731         subwf   COLLECTIONS_COUNT, 0
000462 E0??           00732         bz      DETECTIONS
                      00733 
000464 0E26           00734         movlw   b'00100110'
000466 6E80           00735         movwf   PORTA
                      00736         Delay50N    delayR, 0x03
  0000                    M         local   loop
000468 0E03               M         movlw   0x03
00046A 6E1A               M         movwf   delayR
                          M 
00046C                    M loop
00046C EC?? F???          M         call    Delay50ms
000470 2E1A               M         decfsz  delayR
000472 EF?? F???          M         goto    loop
000476 2A32           00737         incf    COLLECTIONS_COUNT
                      00738         
                      00739 ;       movff   TRAY_DELAY, WREG
                      00740 ;       subwf   COLLECTIONS_COUNT, 0
                      00741 ;       bz      DETECTIONS
                      00742         
000478 0E2C           00743         movlw   b'00101100'
00047A 6E80           00744         movwf   PORTA
                      00745         Delay50N    delayR, 0x03
  0000                    M         local   loop
00047C 0E03               M         movlw   0x03
00047E 6E1A               M         movwf   delayR
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000480                    M loop
000480 EC?? F???          M         call    Delay50ms
000484 2E1A               M         decfsz  delayR
000486 EF?? F???          M         goto    loop
00048A 2A32           00746         incf    COLLECTIONS_COUNT
                      00747         
                      00748 ;       movff   TRAY_DELAY, WREG
                      00749 ;       subwf   COLLECTIONS_COUNT, 0
                      00750 ;       bz      DETECTIONS
                      00751 
00048C 0E29           00752         movlw   b'00101001'
00048E 6E80           00753         movwf   PORTA
                      00754         Delay50N    delayR, 0x03
  0000                    M         local   loop
000490 0E03               M         movlw   0x03
000492 6E1A               M         movwf   delayR
                          M 
000494                    M loop
000494 EC?? F???          M         call    Delay50ms
000498 2E1A               M         decfsz  delayR
00049A EF?? F???          M         goto    loop
00049E 2A32           00755         incf    COLLECTIONS_COUNT
                      00756         
                      00757 ;       movff   TRAY_DELAY, WREG
                      00758 ;       subwf   COLLECTIONS_COUNT, 0
                      00759 ;       bz      DETECTIONS
0004A0 EF?? F???      00760         goto    ROTATE_45
                      00761         
0004A4                00762 DETECTIONS
0004A4 0E09           00763         movlw   b'00001001'
0004A6 6E80           00764         movwf   PORTA
0004A8 EC?? F???      00765         call    CHECK_DONE
                      00766         
0004AC C018 F017      00767         movff   OP_sec, temp    ; 10's seconds
0004B0 0E0F           00768         movlw   0x0f
0004B2 1617           00769         andwf   temp
0004B4 0E01           00770         movlw   d'1'
0004B6 5C17           00771         subwf   temp, 0
0004B8 E0??           00772         bz      EXIT_EXE        ; if 150 second, terminate
                      00773         
                      00774         ; reading data from arduino 
                      00775         ; expect:   1 for eska cap
                      00776         ;           2 for eska no cap
                      00777         ;           3 for yop cap
                      00778         ;           4 for yop no cap
                      00779         ;           5 for no bottle, get outta here
0004BA EC?? F???      00780         call    READ_ARDUINO
                      00781         ;movlw  d'2'                    ; testing!!!
0004BE 6E2C           00782         movwf   DETECTION_VAL
                      00783         Delay50N    delayR, 0x28
  0000                    M         local   loop
0004C0 0E28               M         movlw   0x28
0004C2 6E1A               M         movwf   delayR
                          M 
0004C4                    M loop
0004C4 EC?? F???          M         call    Delay50ms
0004C8 2E1A               M         decfsz  delayR
0004CA EF?? F???          M         goto    loop
                      00784         
                      00785         ; first check if there was a bottle detected, if so go to COLLECTIONS_STEP
0004CE 0E05           00786         movlw   d'5'
0004D0 5C2C           00787         subwf   DETECTION_VAL, 0
0004D2 E0??           00788         bz      COLLECTIONS_STEP
                      00789         
                      00790         ; okay we have a bottle, first increment total count then see what it is
0004D4 2A31           00791         incf    TOTAL_BOTTLES
                      00792         
                      00793         ; yop no cap
0004D6 0E04           00794         movlw   d'4'
0004D8 5C2C           00795         subwf   DETECTION_VAL, 0
0004DA E0??           00796         bz      INC_YOPNOCAP
                      00797         
                      00798         ; yop with cap
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004DC 0E03           00799         movlw   d'3'
0004DE 5C2C           00800         subwf   DETECTION_VAL, 0
0004E0 E0??           00801         bz      INC_YOPCAP
                      00802         
                      00803         ; eska no cap
0004E2 0E02           00804         movlw   d'2'
0004E4 5C2C           00805         subwf   DETECTION_VAL, 0
0004E6 E0??           00806         bz      INC_ESKANOCAP
                      00807         
                      00808         ; eksa with cap
0004E8 0E01           00809         movlw   d'1'
0004EA 5C2C           00810         subwf   DETECTION_VAL, 0
0004EC E0??           00811         bz      INC_ESKACAP
                      00812         
                      00813         ; edge case, cant determine bottle so check if done sorting
0004EE D???           00814         bra     DETECTIONS
                      00815         
0004F0                00816 INC_YOPNOCAP
0004F0 2A30           00817         incf    YOP_NOCAP
0004F2 D???           00818         bra     CHECK_DONE
                      00819         
0004F4                00820 INC_YOPCAP
0004F4 2A2F           00821         incf    YOP
0004F6 D???           00822         bra     CHECK_DONE
                      00823         
0004F8                00824 INC_ESKANOCAP
0004F8 2A2E           00825         incf    ESKA_NOCAP
0004FA D???           00826         bra     CHECK_DONE
                      00827         
0004FC                00828 INC_ESKACAP
0004FC 2A2D           00829         incf    ESKA
0004FE D???           00830         bra     CHECK_DONE
                      00831         
000500                00832 CHECK_DONE
                      00833         ; Challenging:  logic to figure out when the machine is done sorting 
                      00834         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00835         
                      00836         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00837         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00838         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00839         ; 150s then stop.
000500 3818           00840         swapf   OP_sec, 0       ; 100's seconds
000502 6E17           00841         movwf   temp
000504 0E0F           00842         movlw   0x0f
000506 1617           00843         andwf   temp
000508 0E00           00844         movlw   d'0'
00050A 6417           00845         cpfsgt  temp
00050C EF?? F???      00846         goto    COLLECTIONS_STEP; if 100 second, continue to check for 150s then 120s.
                      00847 
                      00848         ; MAX
000510 0E02           00849         movlw   d'2'
000512 6E37           00850         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
000514 C018 F017      00851         movff   OP_sec, temp    ; 10's seconds
000518 0E0F           00852         movlw   0x0f
00051A 1617           00853         andwf   temp
00051C 0E05           00854         movlw   d'5'
00051E 5C17           00855         subwf   temp, 0
000520 E0??           00856         bz      EXIT_EXE        ; if 150 second, terminate
                      00857         
                      00858         ; NUMBER: 
                      00859         ; if the total bottle count is 10, then we are done (most basic end condition)
000522 6A37           00860         clrf    STOP_CONDITION  ; denote regular stop, saved in eeprom as 0
000524 0E0A           00861         movlw   d'10'
000526 5C31           00862         subwf   TOTAL_BOTTLES, 0
000528 E0??           00863         bz      EXIT_EXE
                      00864         
                      00865         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00866         ; qualified run has at least 4 bottles, with 1 of each different kind
00052A 0E03           00867         movlw   d'3'
00052C 6431           00868         cpfsgt  TOTAL_BOTTLES
00052E EF?? F???      00869         goto    COLLECTIONS_STEP
                      00870 
000532 0E00           00871         movlw   d'0'
000534 6430           00872         cpfsgt  YOP_NOCAP, 0
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000536 EF?? F???      00873         goto    COLLECTIONS_STEP
                      00874         
00053A 0E00           00875         movlw   d'0'
00053C 642F           00876         cpfsgt  YOP, 0
00053E EF?? F???      00877         goto    COLLECTIONS_STEP
                      00878         
000542 0E00           00879         movlw   d'0'
000544 642E           00880         cpfsgt  ESKA_NOCAP, 0
000546 EF?? F???      00881         goto    COLLECTIONS_STEP
                      00882         
00054A 0E00           00883         movlw   d'0'
00054C 642D           00884         cpfsgt  ESKA, 0
00054E EF?? F???      00885         goto    COLLECTIONS_STEP
                      00886         
                      00887         ; finally, if we get here then consider the termination optimized.
000552 0E03           00888         movlw   d'3'
000554 6E37           00889         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
000556 EF?? F???      00890         goto    EXIT_EXE
                      00891         
00055A                00892 EXIT_EXE
                      00893         ; stop timer and save the execution time to eeprom
00055A 9ED5           00894         bcf         T0CON, TMR0ON
00055C EC?? F???      00895         call        SAVE_EXE_TIME
                      00896                 
                      00897         ; Clear inExecution flag to stop '*' interrupts
000560 6A1E           00898         clrf        inExecution
                      00899         
000562 EC?? F???      00900         call        ClrLCD
                      00901         Display     SAVE
  0000                    M         local   loop
000566 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000568 6EF8               M         movwf   TBLPTRU
00056A 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00056C 6EF7               M         movwf   TBLPTRH
00056E 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000570 6EF6               M         movwf   TBLPTRL
000572 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000574 50F5               M         movf    TABLAT, W
000576                    M loop
000576 EC?? F???          M         call    WR_DATA         ; write to LCD
00057A 000B               M         tblrd+*                 ; next row in table
00057C 50F5               M         movf    TABLAT, W
00057E E1??               M         bnz     loop
000580 EC?? F???      00902         call        SaveData
000584 EF?? F???      00903         goto        LOG
                      00904 
                      00905 ;*******************************************************************************
                      00906 ; sorting statistics log mode
                      00907 ;*******************************************************************************
                      00908         
000588                00909 LOG
000588 6A38           00910         clrf    inStandby
00058A EC?? F???      00911         call    ClrLCD
                      00912         Display Log1
  0000                    M         local   loop
00058E 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000590 6EF8               M         movwf   TBLPTRU
000592 0E??               M         movlw   high Log1       ; Move Table<15:8>
000594 6EF7               M         movwf   TBLPTRH
000596 0E??               M         movlw   low Log1        ; Move Table<7:0>
000598 6EF6               M         movwf   TBLPTRL
00059A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00059C 50F5               M         movf    TABLAT, W
00059E                    M loop
00059E EC?? F???          M         call    WR_DATA         ; write to LCD
0005A2 000B               M         tblrd+*                 ; next row in table
0005A4 50F5               M         movf    TABLAT, W
0005A6 E1??               M         bnz     loop
                      00913 
                      00914         ; display most recent run data
0005A8 0E0A           00915         movlw   d'10'
0005AA 6E21           00916         movwf   L_EE
0005AC EC?? F???      00917         call    DisplayExeTime
                      00918 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005B0 EC?? F???      00919         call    LCD_L2
0005B4 0E0D           00920         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
0005B6 6E21           00921         movwf   L_EE
0005B8 EC?? F???      00922         call    DispOpSort
                      00923 
0005BC                00924 HOLD_LOG
0005BC EC?? F???      00925         call    READ_KEY
                      00926         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0005C0 0E07               M         movlw   keyB                ; poll for mode
0005C2 6210               M         cpfseq  KEY                 ; check this against key press
0005C4 EF?? F???          M         goto    Exit
                          M 
0005C8                    M Next
0005C8 6A89               M         clrf    LATA                ; clear pins before proceeding
0005CA 6A8A               M         clrf    LATB
0005CC 6A8B               M         clrf    LATC
0005CE 6A8C               M         clrf    LATD
0005D0 EF?? F???          M         goto    LOG_INFO
                          M 
0005D4                    M Exit
0005D4 0000               M         nop
                      00927         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005D6 0E0D               M         movlw   key0                ; poll for mode
0005D8 6210               M         cpfseq  KEY                 ; check this against key press
0005DA EF?? F???          M         goto    Exit
                          M 
0005DE                    M Next
0005DE 6A89               M         clrf    LATA                ; clear pins before proceeding
0005E0 6A8A               M         clrf    LATB
0005E2 6A8B               M         clrf    LATC
0005E4 6A8C               M         clrf    LATD
0005E6 EF?? F???          M         goto    STANDBY
                          M 
0005EA                    M Exit
0005EA 0000               M         nop
0005EC D???           00928         bra     HOLD_LOG
                      00929 
0005EE                00930 LOG_INFO
0005EE EC?? F???      00931         call    ClrLCD
0005F2 6A21           00932         clrf    L_EE
0005F4 EC?? F???      00933         call    DispOpRTC
                      00934         
0005F8 EC?? F???      00935         call    LCD_L2
                      00936         Display LogInfo2
  0000                    M         local   loop
0005FC 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0005FE 6EF8               M         movwf   TBLPTRU
000600 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000602 6EF7               M         movwf   TBLPTRH
000604 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000606 6EF6               M         movwf   TBLPTRL
000608 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00060A 50F5               M         movf    TABLAT, W
00060C                    M loop
00060C EC?? F???          M         call    WR_DATA         ; write to LCD
000610 000B               M         tblrd+*                 ; next row in table
000612 50F5               M         movf    TABLAT, W
000614 E1??               M         bnz     loop
000616 6A20           00937         clrf    H_EE
000618 6A21           00938         clrf    L_EE
00061A                00939 HOLD_LOG_INFO
00061A EC?? F???      00940         call    READ_KEY
                      00941         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
00061E 0E0D               M         movlw   key0                ; poll for mode
000620 6210               M         cpfseq  KEY                 ; check this against key press
000622 EF?? F???          M         goto    Exit
                          M 
000626                    M Next
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000626 6A89               M         clrf    LATA                ; clear pins before proceeding
000628 6A8A               M         clrf    LATB
00062A 6A8B               M         clrf    LATC
00062C 6A8C               M         clrf    LATD
00062E EF?? F???          M         goto    LOG
                          M 
000632                    M Exit
000632 0000               M         nop
000634 D???           00942         bra     HOLD_LOG
                      00943         
                      00944 ;*******************************************************************************
                      00945 ; permanent logs
                      00946 ;*******************************************************************************
                      00947 
000636                00948 PERM_LOG
000636 6A38           00949         clrf    inStandby
000638 EC?? F???      00950         call    ClrLCD
                      00951         Display PermLog1
  0000                    M         local   loop
00063C 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00063E 6EF8               M         movwf   TBLPTRU
000640 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000642 6EF7               M         movwf   TBLPTRH
000644 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000646 6EF6               M         movwf   TBLPTRL
000648 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00064A 50F5               M         movf    TABLAT, W
00064C                    M loop
00064C EC?? F???          M         call    WR_DATA         ; write to LCD
000650 000B               M         tblrd+*                 ; next row in table
000652 50F5               M         movf    TABLAT, W
000654 E1??               M         bnz     loop
000656 EC?? F???      00952         call    LCD_L2
                      00953         Display PermLog2
  0000                    M         local   loop
00065A 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00065C 6EF8               M         movwf   TBLPTRU
00065E 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000660 6EF7               M         movwf   TBLPTRH
000662 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000664 6EF6               M         movwf   TBLPTRL
000666 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000668 50F5               M         movf    TABLAT, W
00066A                    M loop
00066A EC?? F???          M         call    WR_DATA         ; write to LCD
00066E 000B               M         tblrd+*                 ; next row in table
000670 50F5               M         movf    TABLAT, W
000672 E1??               M         bnz     loop
                      00954         
000674                00955 HOLD_PERM_LOG
000674 EC?? F???      00956         call    READ_KEY
                      00957         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000678 0E0D               M         movlw   key0                ; poll for mode
00067A 6210               M         cpfseq  KEY                 ; check this against key press
00067C EF?? F???          M         goto    Exit
                          M 
000680                    M Next
000680 6A89               M         clrf    LATA                ; clear pins before proceeding
000682 6A8A               M         clrf    LATB
000684 6A8B               M         clrf    LATC
000686 6A8C               M         clrf    LATD
000688 EF?? F???          M         goto    STANDBY
                          M 
00068C                    M Exit
00068C 0000               M         nop
                      00958         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00068E 0E00               M         movlw   key1                ; poll for mode
000690 6210               M         cpfseq  KEY                 ; check this against key press
000692 EF?? F???          M         goto    Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000696                    M Next
000696 6A89               M         clrf    LATA                ; clear pins before proceeding
000698 6A8A               M         clrf    LATB
00069A 6A8B               M         clrf    LATC
00069C 6A8C               M         clrf    LATD
00069E EF?? F???          M         goto    PLOG
                          M 
0006A2                    M Exit
0006A2 0000               M         nop
                      00959         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0006A4 0E01               M         movlw   key2                ; poll for mode
0006A6 6210               M         cpfseq  KEY                 ; check this against key press
0006A8 EF?? F???          M         goto    Exit
                          M 
0006AC                    M Next
0006AC 6A89               M         clrf    LATA                ; clear pins before proceeding
0006AE 6A8A               M         clrf    LATB
0006B0 6A8B               M         clrf    LATC
0006B2 6A8C               M         clrf    LATD
0006B4 EF?? F???          M         goto    PLOG
                          M 
0006B8                    M Exit
0006B8 0000               M         nop
                      00960         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0006BA 0E02               M         movlw   key3                ; poll for mode
0006BC 6210               M         cpfseq  KEY                 ; check this against key press
0006BE EF?? F???          M         goto    Exit
                          M 
0006C2                    M Next
0006C2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006C4 6A8A               M         clrf    LATB
0006C6 6A8B               M         clrf    LATC
0006C8 6A8C               M         clrf    LATD
0006CA EF?? F???          M         goto    PLOG
                          M 
0006CE                    M Exit
0006CE 0000               M         nop
                      00961         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006D0 0E04               M         movlw   key4                ; poll for mode
0006D2 6210               M         cpfseq  KEY                 ; check this against key press
0006D4 EF?? F???          M         goto    Exit
                          M 
0006D8                    M Next
0006D8 6A89               M         clrf    LATA                ; clear pins before proceeding
0006DA 6A8A               M         clrf    LATB
0006DC 6A8B               M         clrf    LATC
0006DE 6A8C               M         clrf    LATD
0006E0 EF?? F???          M         goto    PLOG
                          M 
0006E4                    M Exit
0006E4 0000               M         nop
                      00962         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0006E6 0E05               M         movlw   key5                ; poll for mode
0006E8 6210               M         cpfseq  KEY                 ; check this against key press
0006EA EF?? F???          M         goto    Exit
                          M 
0006EE                    M Next
0006EE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F0 6A8A               M         clrf    LATB
0006F2 6A8B               M         clrf    LATC
0006F4 6A8C               M         clrf    LATD
0006F6 EF?? F???          M         goto    PLOG
                          M 
0006FA                    M Exit
0006FA 0000               M         nop
                      00963         ChangeMode  key6, PLOG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
0006FC 0E06               M         movlw   key6                ; poll for mode
0006FE 6210               M         cpfseq  KEY                 ; check this against key press
000700 EF?? F???          M         goto    Exit
                          M 
000704                    M Next
000704 6A89               M         clrf    LATA                ; clear pins before proceeding
000706 6A8A               M         clrf    LATB
000708 6A8B               M         clrf    LATC
00070A 6A8C               M         clrf    LATD
00070C EF?? F???          M         goto    PLOG
                          M 
000710                    M Exit
000710 0000               M         nop
                      00964         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000712 0E08               M         movlw   key7                ; poll for mode
000714 6210               M         cpfseq  KEY                 ; check this against key press
000716 EF?? F???          M         goto    Exit
                          M 
00071A                    M Next
00071A 6A89               M         clrf    LATA                ; clear pins before proceeding
00071C 6A8A               M         clrf    LATB
00071E 6A8B               M         clrf    LATC
000720 6A8C               M         clrf    LATD
000722 EF?? F???          M         goto    PLOG
                          M 
000726                    M Exit
000726 0000               M         nop
                      00965         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000728 0E09               M         movlw   key8                ; poll for mode
00072A 6210               M         cpfseq  KEY                 ; check this against key press
00072C EF?? F???          M         goto    Exit
                          M 
000730                    M Next
000730 6A89               M         clrf    LATA                ; clear pins before proceeding
000732 6A8A               M         clrf    LATB
000734 6A8B               M         clrf    LATC
000736 6A8C               M         clrf    LATD
000738 EF?? F???          M         goto    PLOG
                          M 
00073C                    M Exit
00073C 0000               M         nop
                      00966         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
00073E 0E0A               M         movlw   key9                ; poll for mode
000740 6210               M         cpfseq  KEY                 ; check this against key press
000742 EF?? F???          M         goto    Exit
                          M 
000746                    M Next
000746 6A89               M         clrf    LATA                ; clear pins before proceeding
000748 6A8A               M         clrf    LATB
00074A 6A8B               M         clrf    LATC
00074C 6A8C               M         clrf    LATD
00074E EF?? F???          M         goto    PLOG
                          M 
000752                    M Exit
000752 0000               M         nop
000754 D???           00967         bra HOLD_PERM_LOG
                      00968         
000756                00969 PLOG
000756 EC?? F???      00970         call    ClrLCD
                      00971         Display PermLog1
  0000                    M         local   loop
00075A 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00075C 6EF8               M         movwf   TBLPTRU
00075E 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000760 6EF7               M         movwf   TBLPTRH
000762 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000764 6EF6               M         movwf   TBLPTRL
000766 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000768 50F5               M         movf    TABLAT, W
00076A                    M loop
00076A EC?? F???          M         call    WR_DATA         ; write to LCD
00076E 000B               M         tblrd+*                 ; next row in table
000770 50F5               M         movf    TABLAT, W
000772 E1??               M         bnz     loop
                      00972         
                      00973         ; find the key press value
000774 C010 FFE8      00974         movff   KEY, WREG
000778 2AE8           00975         incf    WREG        ; W = KEY+1
00077A 6E17           00976         movwf   temp
                      00977         
00077C 42E8           00978         rrncf   WREG        ; division by 4
00077E 9EE8           00979         bcf     WREG, 7     ; clear last bit, overflow from rotate
000780 42E8           00980         rrncf   WREG        
000782 9EE8           00981         bcf     WREG, 7
000784 5E17           00982         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000786 C017 FFE8      00983         movff   temp, WREG
00078A C017 F011      00984         movff   temp, temp_KEY
00078E 0D15           00985         mullw   d'21'       ; indexed as mutliples of 21
                      00986 
000790                00987 displayNum
000790 C011 FFE8      00988         movff   temp_KEY, WREG
000794 0F30           00989         addlw   0x30
000796 EC?? F???      00990         call    WR_DATA
00079A 0E3A           00991         movlw   ":"
00079C EC?? F???      00992         call    WR_DATA
0007A0 0E20           00993         movlw   " "
0007A2 EC?? F???      00994         call    WR_DATA
                      00995         
0007A6 CFF3 F021      00996         movff   PRODL, L_EE
0007AA 0E00           00997         movlw   d'0'
0007AC 2621           00998         addwf   L_EE
                      00999         READEE  OP_sec, H_EE, L_EE
0007AE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007B2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007B6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007B8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007BA 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007BC CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0007C0 2A21           01000         incf    L_EE
                      01001         READEE  OP_INT, H_EE, L_EE
0007C2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007C6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007CA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007CC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007CE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007D0 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0007D4 2A21           01002         incf    L_EE
0007D6 EC?? F???      01003         call    DisplayExeTime
0007DA CFF3 F021      01004         movff   PRODL, L_EE
                      01005         
                      01006         ; reset eeprom to beginning
0007DE EC?? F???      01007         call    LCD_L2
0007E2 CFF3 F021      01008         movff   PRODL, L_EE
0007E6 EC?? F???      01009         call    DispOpRTC
                      01010         
0007EA                01011 HOLD_PLOG
0007EA EC?? F???      01012         call    READ_KEY
                      01013         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0007EE 0E03               M         movlw   keyA                ; poll for mode
0007F0 6210               M         cpfseq  KEY                 ; check this against key press
0007F2 EF?? F???          M         goto    Exit
                          M 
0007F6                    M Next
0007F6 6A89               M         clrf    LATA                ; clear pins before proceeding
0007F8 6A8A               M         clrf    LATB
0007FA 6A8B               M         clrf    LATC
0007FC 6A8C               M         clrf    LATD
0007FE EF?? F???          M         goto    PLOG_DETAILS
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000802                    M Exit
000802 0000               M         nop
                      01014         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000804 0E0D               M         movlw   key0                ; poll for mode
000806 6210               M         cpfseq  KEY                 ; check this against key press
000808 EF?? F???          M         goto    Exit
                          M 
00080C                    M Next
00080C 6A89               M         clrf    LATA                ; clear pins before proceeding
00080E 6A8A               M         clrf    LATB
000810 6A8B               M         clrf    LATC
000812 6A8C               M         clrf    LATD
000814 EF?? F???          M         goto    PERM_LOG
                          M 
000818                    M Exit
000818 0000               M         nop
00081A D???           01015         bra HOLD_PLOG
                      01016         
00081C                01017 PLOG_DETAILS
00081C EC?? F???      01018         call    ClrLCD
                      01019         
                      01020         Display Log1
  0000                    M         local   loop
000820 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000822 6EF8               M         movwf   TBLPTRU
000824 0E??               M         movlw   high Log1       ; Move Table<15:8>
000826 6EF7               M         movwf   TBLPTRH
000828 0E??               M         movlw   low Log1        ; Move Table<7:0>
00082A 6EF6               M         movwf   TBLPTRL
00082C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00082E 50F5               M         movf    TABLAT, W
000830                    M loop
000830 EC?? F???          M         call    WR_DATA         ; write to LCD
000834 000B               M         tblrd+*                 ; next row in table
000836 50F5               M         movf    TABLAT, W
000838 E1??               M         bnz     loop
00083A EC?? F???      01021         call    DisplayExeTime
                      01022         
00083E EC?? F???      01023         call    LCD_L2
000842 EC?? F???      01024         call    DispOpSort
                      01025         
000846                01026 HOLD_PLOG_DETAILS
000846 EC?? F???      01027         call    READ_KEY
                      01028         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00084A 0E0D               M         movlw   key0                ; poll for mode
00084C 6210               M         cpfseq  KEY                 ; check this against key press
00084E EF?? F???          M         goto    Exit
                          M 
000852                    M Next
000852 6A89               M         clrf    LATA                ; clear pins before proceeding
000854 6A8A               M         clrf    LATB
000856 6A8B               M         clrf    LATC
000858 6A8C               M         clrf    LATD
00085A EF?? F???          M         goto    PERM_LOG
                          M 
00085E                    M Exit
00085E 0000               M         nop
000860 D???           01029         bra HOLD_PLOG_DETAILS
                      01030         
                      01031 ;*******************************************************************************
                      01032 ; pc interface
                      01033 ;*******************************************************************************
                      01034 
000862                01035 PC_MODE
000862 6A38           01036         clrf    inStandby
000864 EC?? F???      01037         call    ClrLCD
                      01038         Display PC1
  0000                    M         local   loop
000868 0E??               M         movlw   upper PC1       ; Move Table<20:16>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00086A 6EF8               M         movwf   TBLPTRU
00086C 0E??               M         movlw   high PC1        ; Move Table<15:8>
00086E 6EF7               M         movwf   TBLPTRH
000870 0E??               M         movlw   low PC1         ; Move Table<7:0>
000872 6EF6               M         movwf   TBLPTRL
000874 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000876 50F5               M         movf    TABLAT, W
000878                    M loop
000878 EC?? F???          M         call    WR_DATA         ; write to LCD
00087C 000B               M         tblrd+*                 ; next row in table
00087E 50F5               M         movf    TABLAT, W
000880 E1??               M         bnz     loop
000882 EC?? F???      01039         call    LCD_L2
                      01040         Display PC2
  0000                    M         local   loop
000886 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000888 6EF8               M         movwf   TBLPTRU
00088A 0E??               M         movlw   high PC2        ; Move Table<15:8>
00088C 6EF7               M         movwf   TBLPTRH
00088E 0E??               M         movlw   low PC2         ; Move Table<7:0>
000890 6EF6               M         movwf   TBLPTRL
000892 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000894 50F5               M         movf    TABLAT, W
000896                    M loop
000896 EC?? F???          M         call    WR_DATA         ; write to LCD
00089A 000B               M         tblrd+*                 ; next row in table
00089C 50F5               M         movf    TABLAT, W
00089E E1??               M         bnz     loop
0008A0 CFF9 F029      01041         movff   PCL, PC_PCL
0008A4 CFFA F02A      01042         movff   PCLATH, PC_PCLATH
0008A8 CFFB F02B      01043         movff   PCLATU, PC_PCLATU
                      01044         
0008AC                01045 HOLD_PC
0008AC EC?? F???      01046         call    READ_KEY
                      01047         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008B0 0E0D               M         movlw   key0                ; poll for mode
0008B2 6210               M         cpfseq  KEY                 ; check this against key press
0008B4 EF?? F???          M         goto    Exit
                          M 
0008B8                    M Next
0008B8 6A89               M         clrf    LATA                ; clear pins before proceeding
0008BA 6A8A               M         clrf    LATB
0008BC 6A8B               M         clrf    LATC
0008BE 6A8C               M         clrf    LATD
0008C0 EF?? F???          M         goto    STANDBY
                          M 
0008C4                    M Exit
0008C4 0000               M         nop
                      01048         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008C6 0E0E               M         movlw   keyH                ; poll for mode
0008C8 6210               M         cpfseq  KEY                 ; check this against key press
0008CA EF?? F???          M         goto    Exit
                          M 
0008CE                    M Next
0008CE 6A89               M         clrf    LATA                ; clear pins before proceeding
0008D0 6A8A               M         clrf    LATB
0008D2 6A8B               M         clrf    LATC
0008D4 6A8C               M         clrf    LATD
0008D6 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008DA                    M Exit
0008DA 0000               M         nop
0008DC D???           01049         bra     HOLD_PC
                      01050 
0008DE                01051 PC_TRANSFER
0008DE 6828           01052         setf    transferring
0008E0 EC?? F???      01053         call    ClrLCD
                      01054         Display PCTransfer
  0000                    M         local   loop
0008E4 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008E6 6EF8               M         movwf   TBLPTRU
0008E8 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008EA 6EF7               M         movwf   TBLPTRH
0008EC 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008EE 6EF6               M         movwf   TBLPTRL
0008F0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008F2 50F5               M         movf    TABLAT, W
0008F4                    M loop
0008F4 EC?? F???          M         call    WR_DATA         ; write to LCD
0008F8 000B               M         tblrd+*                 ; next row in table
0008FA 50F5               M         movf    TABLAT, W
0008FC E1??               M         bnz     loop
0008FE EC?? F???      01055         call    DataUSART
000902 6A28           01056         clrf    transferring
000904 EF?? F???      01057         goto    STANDBY
                      01058         
                      01059 ;*******************************************************************************
                      01060 ; subroutines
                      01061 ;*******************************************************************************
                      01062 
000908                01063 SaveData
000908 C02D FFE8      01064         movff       ESKA, WREG
00090C 0F30           01065         addlw       0x30
                      01066         WriteEE     WREG, H_EE, L_EE
00090E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000912 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000916 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00091A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00091C D???               M         bra     $-2
                          M 
00091E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000920 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000922 84A6               M         bsf     EECON1, WREN        ; enable write
000924 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000926 98A1               M         bcf     PIR2, EEIF
                          M 
000928 0E55               M         movlw   0x55
00092A 6EA7               M         movwf   EECON2              ; write 55h
00092C 0EAA               M         movlw   0xaa
00092E 6EA7               M         movwf   EECON2              ; write 0xaa
000930 82A6               M         bsf     EECON1, WR          ; begin write
000932 B2A6               M         btfsc   EECON1, WR
000934 D???               M         bra     $-2
                          M 
000936 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000938 94A6               M         bcf     EECON1, WREN        ; disable writes
00093A 2A21           01067         incf        L_EE
                      01068         
00093C C02E FFE8      01069         movff       ESKA_NOCAP, WREG
000940 0F30           01070         addlw       0x30
                      01071         WriteEE     WREG, H_EE, L_EE
000942 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000946 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00094A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00094E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000950 D???               M         bra     $-2
                          M 
000952 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000954 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000956 84A6               M         bsf     EECON1, WREN        ; enable write
000958 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00095A 98A1               M         bcf     PIR2, EEIF
                          M 
00095C 0E55               M         movlw   0x55
00095E 6EA7               M         movwf   EECON2              ; write 55h
000960 0EAA               M         movlw   0xaa
000962 6EA7               M         movwf   EECON2              ; write 0xaa
000964 82A6               M         bsf     EECON1, WR          ; begin write
000966 B2A6               M         btfsc   EECON1, WR
000968 D???               M         bra     $-2
                          M 
00096A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00096C 94A6               M         bcf     EECON1, WREN        ; disable writes
00096E 2A21           01072         incf        L_EE
                      01073         
000970 C02F FFE8      01074         movff       YOP, WREG
000974 0F30           01075         addlw       0x30
                      01076         WriteEE     WREG, H_EE, L_EE
000976 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00097A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00097E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000982 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000984 D???               M         bra     $-2
                          M 
000986 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000988 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00098A 84A6               M         bsf     EECON1, WREN        ; enable write
00098C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00098E 98A1               M         bcf     PIR2, EEIF
                          M 
000990 0E55               M         movlw   0x55
000992 6EA7               M         movwf   EECON2              ; write 55h
000994 0EAA               M         movlw   0xaa
000996 6EA7               M         movwf   EECON2              ; write 0xaa
000998 82A6               M         bsf     EECON1, WR          ; begin write
00099A B2A6               M         btfsc   EECON1, WR
00099C D???               M         bra     $-2
                          M 
00099E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009A0 94A6               M         bcf     EECON1, WREN        ; disable writes
0009A2 2A21           01077         incf        L_EE
                      01078         
0009A4 C030 FFE8      01079         movff       YOP_NOCAP, WREG
0009A8 0F30           01080         addlw       0x30
                      01081         WriteEE     WREG, H_EE, L_EE
0009AA C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009AE C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009B2 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009B6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009B8 D???               M         bra     $-2
                          M 
0009BA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009BC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009BE 84A6               M         bsf     EECON1, WREN        ; enable write
0009C0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009C2 98A1               M         bcf     PIR2, EEIF
                          M 
0009C4 0E55               M         movlw   0x55
0009C6 6EA7               M         movwf   EECON2              ; write 55h
0009C8 0EAA               M         movlw   0xaa
0009CA 6EA7               M         movwf   EECON2              ; write 0xaa
0009CC 82A6               M         bsf     EECON1, WR          ; begin write
0009CE B2A6               M         btfsc   EECON1, WR
0009D0 D???               M         bra     $-2
                          M 
0009D2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009D4 94A6               M         bcf     EECON1, WREN        ; disable writes
0009D6 2A21           01082         incf        L_EE
                      01083         
0009D8 C037 FFE8      01084         movff       STOP_CONDITION, WREG
0009DC 0F30           01085         addlw       0x30
                      01086         WriteEE     WREG, H_EE, L_EE
0009DE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009E2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009E6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009EA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009EC D???               M         bra     $-2
                          M 
0009EE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009F0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009F2 84A6               M         bsf     EECON1, WREN        ; enable write
0009F4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009F6 98A1               M         bcf     PIR2, EEIF
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0009F8 0E55               M         movlw   0x55
0009FA 6EA7               M         movwf   EECON2              ; write 55h
0009FC 0EAA               M         movlw   0xaa
0009FE 6EA7               M         movwf   EECON2              ; write 0xaa
000A00 82A6               M         bsf     EECON1, WR          ; begin write
000A02 B2A6               M         btfsc   EECON1, WR
000A04 D???               M         bra     $-2
                          M 
000A06 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A08 94A6               M         bcf     EECON1, WREN        ; disable writes
000A0A 2A21           01087         incf        L_EE
                      01088         
000A0C 0E00           01089         movlw       d'0'
000A0E 6E20           01090         movwf       H_EE
000A10 0EA8           01091         movlw       d'168'              ; take d'168' as last
000A12 6E21           01092         movwf       L_EE
000A14 0E00           01093         movlw       d'0'
000A16 6E23           01094         movwf       tempH_EE
000A18 0EDC           01095         movlw       d'220'              ; temp for low constant
000A1A 6E24           01096         movwf       tempL_EE
                      01097         
000A1C 6A16           01098         clrf        counter2
000A1E 6A15           01099         clrf        counter
                      01100         
000A20                01101 ShiftLoop
000A20 2A15           01102         incf            counter
                      01103         READEE          REG_EE, H_EE, L_EE
000A22 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A26 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000A2A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A2C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A2E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A30 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000A34 0E15           01104         movlw           d'21'
000A36 2621           01105         addwf           L_EE
                      01106         WriteEE         REG_EE, H_EE, L_EE
000A38 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A3C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A40 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000A44 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A46 D???               M         bra     $-2
                          M 
000A48 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A4A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A4C 84A6               M         bsf     EECON1, WREN        ; enable write
000A4E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A50 98A1               M         bcf     PIR2, EEIF
                          M 
000A52 0E55               M         movlw   0x55
000A54 6EA7               M         movwf   EECON2              ; write 55h
000A56 0EAA               M         movlw   0xaa
000A58 6EA7               M         movwf   EECON2              ; write 0xaa
000A5A 82A6               M         bsf     EECON1, WR          ; begin write
000A5C B2A6               M         btfsc   EECON1, WR
000A5E D???               M         bra     $-2
                          M 
000A60 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A62 94A6               M         bcf     EECON1, WREN        ; disable writes
000A64 0E14           01107         movlw           d'20'
000A66 5E21           01108         subwf           L_EE
000A68 0E15           01109         movlw           d'21'
000A6A 6215           01110         cpfseq          counter
000A6C EF?? F???      01111         goto            ShiftLoop
                      01112         
                      01113         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A70 0E2A           01114         movlw           d'42'
000A72 5E21           01115         subwf           L_EE
000A74 0EDC           01116         movlw           d'220'
000A76 6E24           01117         movwf           tempL_EE
000A78 6A15           01118         clrf            counter
000A7A 2A16           01119         incf            counter2
000A7C 0E09           01120         movlw           d'9'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A7E 6216           01121         cpfseq          counter2        ; Skip if 9 shifts were made
000A80 EF?? F???      01122         goto            ShiftLoop
                      01123 
000A84 0012           01124         return
                      01125         
000A86                01126 RTC_INIT
                      01127         ; set sda and scl to high
000A86 9882           01128         bcf     PORTC, 4
000A88 9682           01129         bcf     PORTC, 3
000A8A 8894           01130         bsf     TRISC, 4
000A8C 8694           01131         bsf     TRISC, 3
                      01132         
000A8E EC?? F???      01133         call    INIT_RTC
                      01134         
                      01135         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A92 0012           01136 return
                      01137         
000A94                01138 SAVE_TIME
                      01139         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A94 0E02               M     movlw   0x02
000A96 6E??               M     movwf   regaddress
000A98 EC?? F???          M     call    read_rtc
000A9C C??? FFE8          M     movff   datachar, WREG
000AA0 EC?? F???          M     call    rtc_convert
                      01140         rtc_read    0x02        ; hours
000AA4 0E02               M     movlw   0x02
000AA6 6E??               M     movwf   regaddress
000AA8 EC?? F???          M     call    read_rtc
000AAC C??? FFE8          M     movff   datachar, WREG
000AB0 EC?? F???          M     call    rtc_convert
000AB4 EC?? F???      01141         call    WriteEE_RTC
                      01142         rtc_read    0x01        ; minutes
000AB8 0E01               M     movlw   0x01
000ABA 6E??               M     movwf   regaddress
000ABC EC?? F???          M     call    read_rtc
000AC0 C??? FFE8          M     movff   datachar, WREG
000AC4 EC?? F???          M     call    rtc_convert
000AC8 EC?? F???      01143         call    WriteEE_RTC
                      01144         rtc_read    0x06        ; years
000ACC 0E06               M     movlw   0x06
000ACE 6E??               M     movwf   regaddress
000AD0 EC?? F???          M     call    read_rtc
000AD4 C??? FFE8          M     movff   datachar, WREG
000AD8 EC?? F???          M     call    rtc_convert
000ADC EC?? F???      01145         call    WriteEE_RTC
                      01146         rtc_read    0x05        ; months
000AE0 0E05               M     movlw   0x05
000AE2 6E??               M     movwf   regaddress
000AE4 EC?? F???          M     call    read_rtc
000AE8 C??? FFE8          M     movff   datachar, WREG
000AEC EC?? F???          M     call    rtc_convert
000AF0 EC?? F???      01147         call    WriteEE_RTC
                      01148         rtc_read    0x04        ; days
000AF4 0E04               M     movlw   0x04
000AF6 6E??               M     movwf   regaddress
000AF8 EC?? F???          M     call    read_rtc
000AFC C??? FFE8          M     movff   datachar, WREG
000B00 EC?? F???          M     call    rtc_convert
000B04 EC?? F???      01149         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000B08 0012           01150 return
                      01151         
000B0A                01152 SAVE_EXE_TIME
                      01153         
Warning[202]: Argument out of range.  Least significant bits used.
000B0A 3818           01154         swapf   OP_sec, WREG    ; 100's seconds
000B0C 6E17           01155         movwf   temp
000B0E 0E0F           01156         movlw   0x0f
000B10 1617           01157         andwf   temp
000B12 C017 FFE8      01158         movff   temp, WREG
000B16 0F30           01159         addlw   0x30    
                      01160         WriteEE WREG, H_EE, L_EE
000B18 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B1C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B20 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B24 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B26 D???               M         bra     $-2
                          M 
000B28 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B2A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B2C 84A6               M         bsf     EECON1, WREN        ; enable write
000B2E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B30 98A1               M         bcf     PIR2, EEIF
                          M 
000B32 0E55               M         movlw   0x55
000B34 6EA7               M         movwf   EECON2              ; write 55h
000B36 0EAA               M         movlw   0xaa
000B38 6EA7               M         movwf   EECON2              ; write 0xaa
000B3A 82A6               M         bsf     EECON1, WR          ; begin write
000B3C B2A6               M         btfsc   EECON1, WR
000B3E D???               M         bra     $-2
                          M 
000B40 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B42 94A6               M         bcf     EECON1, WREN        ; disable writes
000B44 2A21           01161         incf    L_EE
                      01162         
000B46 C018 F017      01163         movff   OP_sec, temp    ; 10's seconds
000B4A 0E0F           01164         movlw   0x0f
000B4C 1617           01165         andwf   temp            ; Temp = lower nibble of Op_sec
000B4E C017 FFE8      01166         movff   temp, WREG      ; W = Temp
000B52 0F30           01167         addlw   0x30            ; Convert to ASCII
                      01168         WriteEE WREG, H_EE, L_EE
000B54 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B58 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B5C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B60 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B62 D???               M         bra     $-2
                          M 
000B64 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B66 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B68 84A6               M         bsf     EECON1, WREN        ; enable write
000B6A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B6C 98A1               M         bcf     PIR2, EEIF
                          M 
000B6E 0E55               M         movlw   0x55
000B70 6EA7               M         movwf   EECON2              ; write 55h
000B72 0EAA               M         movlw   0xaa
000B74 6EA7               M         movwf   EECON2              ; write 0xaa
000B76 82A6               M         bsf     EECON1, WR          ; begin write
000B78 B2A6               M         btfsc   EECON1, WR
000B7A D???               M         bra     $-2
                          M 
000B7C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B7E 94A6               M         bcf     EECON1, WREN        ; disable writes
000B80 2A21           01169         incf    L_EE
                      01170         
Warning[202]: Argument out of range.  Least significant bits used.
000B82 3819           01171         swapf   OP_INT, WREG    ;1's seconds
000B84 6E17           01172         movwf   temp
000B86 0E0F           01173         movlw   0x0f
000B88 1617           01174         andwf   temp
000B8A C017 FFE8      01175         movff   temp, WREG
000B8E 0F30           01176         addlw   0x30
                      01177         WriteEE WREG, H_EE, L_EE
000B90 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B94 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B98 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B9C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B9E D???               M         bra     $-2
                          M 
000BA0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BA2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BA4 84A6               M         bsf     EECON1, WREN        ; enable write
000BA6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BA8 98A1               M         bcf     PIR2, EEIF
                          M 
000BAA 0E55               M         movlw   0x55
000BAC 6EA7               M         movwf   EECON2              ; write 55h
000BAE 0EAA               M         movlw   0xaa
000BB0 6EA7               M         movwf   EECON2              ; write 0xaa
000BB2 82A6               M         bsf     EECON1, WR          ; begin write
000BB4 B2A6               M         btfsc   EECON1, WR
000BB6 D???               M         bra     $-2
                          M 
000BB8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BBA 94A6               M         bcf     EECON1, WREN        ; disable writes
000BBC 2A21           01178         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000BBE 0012           01179 return
                      01180         
                      01181                 
000BC0                01182 DISPLAY_RTC
                      01183         ; display data in this format hh/minmin/yy yy/mm/dd
                      01184         
                      01185         rtc_read    0x02            ; 0x02 from DS1307 - hours
000BC0 0E02               M     movlw   0x02
000BC2 6E??               M     movwf   regaddress
000BC4 EC?? F???          M     call    read_rtc
000BC8 C??? FFE8          M     movff   datachar, WREG
000BCC EC?? F???          M     call    rtc_convert
000BD0 C??? FFE8      01186         movff   tens_digit,WREG
000BD4 EC?? F???      01187         call    WR_DATA
000BD8 C??? FFE8      01188         movff   ones_digit,WREG
000BDC EC?? F???      01189         call    WR_DATA
000BE0 0E68           01190         movlw   "h"
000BE2 EC?? F???      01191         call    WR_DATA
                      01192         
                      01193         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000BE6 0E01               M     movlw   0x01
000BE8 6E??               M     movwf   regaddress
000BEA EC?? F???          M     call    read_rtc
000BEE C??? FFE8          M     movff   datachar, WREG
000BF2 EC?? F???          M     call    rtc_convert
000BF6 C??? FFE8      01194         movff   tens_digit,WREG
000BFA EC?? F???      01195         call    WR_DATA
000BFE C??? FFE8      01196         movff   ones_digit,WREG
000C02 EC?? F???      01197         call    WR_DATA
                      01198         
                      01199         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000C06 0E00               M     movlw   0x00
000C08 6E??               M     movwf   regaddress
000C0A EC?? F???          M     call    read_rtc
000C0E C??? FFE8          M     movff   datachar, WREG
000C12 EC?? F???          M     call    rtc_convert
000C16 C??? FFE8      01200         movff   tens_digit,WREG
000C1A EC?? F???      01201         call    WR_DATA
000C1E C??? FFE8      01202         movff   ones_digit,WREG
000C22 EC?? F???      01203         call    WR_DATA
000C26 0E20           01204         movlw   " "
000C28 EC?? F???      01205         call    WR_DATA
                      01206         
                      01207         rtc_read    0x06            ; 0x06 from DS1307 - years
000C2C 0E06               M     movlw   0x06
000C2E 6E??               M     movwf   regaddress
000C30 EC?? F???          M     call    read_rtc
000C34 C??? FFE8          M     movff   datachar, WREG
000C38 EC?? F???          M     call    rtc_convert
000C3C C??? FFE8      01208         movff   tens_digit,WREG
000C40 EC?? F???      01209         call    WR_DATA
000C44 C??? FFE8      01210         movff   ones_digit,WREG
000C48 EC?? F???      01211         call    WR_DATA
000C4C 0E2F           01212         movlw   "/"
000C4E EC?? F???      01213         call    WR_DATA
                      01214         
                      01215         rtc_read    0x05            ; 0x05 from DS1307 - months
000C52 0E05               M     movlw   0x05
000C54 6E??               M     movwf   regaddress
000C56 EC?? F???          M     call    read_rtc
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C5A C??? FFE8          M     movff   datachar, WREG
000C5E EC?? F???          M     call    rtc_convert
000C62 C??? FFE8      01216         movff   tens_digit,WREG
000C66 EC?? F???      01217         call    WR_DATA
000C6A C??? FFE8      01218         movff   ones_digit,WREG
000C6E EC?? F???      01219         call    WR_DATA
000C72 0E2F           01220         movlw   "/"
000C74 EC?? F???      01221         call    WR_DATA
                      01222         
                      01223         rtc_read    0x04            ; 0x04 from DS1307 - days
000C78 0E04               M     movlw   0x04
000C7A 6E??               M     movwf   regaddress
000C7C EC?? F???          M     call    read_rtc
000C80 C??? FFE8          M     movff   datachar, WREG
000C84 EC?? F???          M     call    rtc_convert
000C88 C??? FFE8      01224         movff   tens_digit,WREG
000C8C EC?? F???      01225         call    WR_DATA
000C90 C??? FFE8      01226         movff   ones_digit,WREG
000C94 EC?? F???      01227         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C98 0012           01228 return
                      01229         
000C9A                01230 SET_TIME
                      01231         rtc_resetAll
                          M 
000C9A 6A??               M     clrf    databyte
000C9C 0E06               M     movlw   6
000C9E 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000CA0                    M     del_loop0
000CA0 EC?? F???          M     call    write_rtc
000CA4 2E??               M     decfsz  regaddress
000CA6 D???               M     bra     del_loop0
000CA8 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01232         
                      01233         rtc_set 0x00,   b'10000000'
000CAC 0E00               M     movlw   0x00
000CAE 6E??               M     movwf   regaddress
000CB0 0E80               M     movlw   b'10000000'
000CB2 6E??               M     movwf   databyte
000CB4 EC?? F???          M     call    write_rtc
                      01234 
                      01235         rtc_set 0x06,   b'00010111'             ; Year 17
000CB8 0E06               M     movlw   0x06
000CBA 6E??               M     movwf   regaddress
000CBC 0E17               M     movlw   b'00010111'
000CBE 6E??               M     movwf   databyte
000CC0 EC?? F???          M     call    write_rtc
                      01236         rtc_set 0x05,   b'00000011'             ; Month 03
000CC4 0E05               M     movlw   0x05
000CC6 6E??               M     movwf   regaddress
000CC8 0E03               M     movlw   b'00000011'
000CCA 6E??               M     movwf   databyte
000CCC EC?? F???          M     call    write_rtc
                      01237         rtc_set 0x04,   b'00000100'             ; Date 04
000CD0 0E04               M     movlw   0x04
000CD2 6E??               M     movwf   regaddress
000CD4 0E04               M     movlw   b'00000100'
000CD6 6E??               M     movwf   databyte
000CD8 EC?? F???          M     call    write_rtc
                      01238         rtc_set 0x02,   b'00010010'             ; Hours 12
000CDC 0E02               M     movlw   0x02
000CDE 6E??               M     movwf   regaddress
000CE0 0E12               M     movlw   b'00010010'
000CE2 6E??               M     movwf   databyte
000CE4 EC?? F???          M     call    write_rtc
                      01239         rtc_set 0x01,   b'01001000'             ; Minutes 27
000CE8 0E01               M     movlw   0x01
000CEA 6E??               M     movwf   regaddress
000CEC 0E48               M     movlw   b'01001000'
000CEE 6E??               M     movwf   databyte
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CF0 EC?? F???          M     call    write_rtc
                      01240         rtc_set 0x00,   b'00000000'             ; Seconds 0
000CF4 0E00               M     movlw   0x00
000CF6 6E??               M     movwf   regaddress
000CF8 0E00               M     movlw   b'00000000'
000CFA 6E??               M     movwf   databyte
000CFC EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000D00 0012           01241 return
                      01242         
000D02                01243 INIT_USART
                      01244         
000D02 8E94           01245         bsf     TRISC, 7        ; set RC7=USART RC
000D04 9C94           01246         bcf     TRISC, 6        ; clear RC6=USART TX
                      01247 
000D06 0E0F           01248         movlw   15              ; baud rate 9600
000D08 6EAF           01249         movwf   SPBRG
000D0A 6AAC           01250         clrf    TXSTA
                      01251         
000D0C 6AAB           01252         clrf    RCSTA
000D0E 8EAB           01253         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000D10 88AB           01254         bsf     RCSTA,CREN      ; continous receive
                      01255         
000D12 8AAC           01256         bsf     TXSTA, TXEN     ; transmit enabled
000D14 0012           01257         return
                      01258 
000D16                01259 DataUSART
000D16 0E02           01260         movlw   0x02
000D18 EC?? F???      01261         call    USART_WAIT
000D1C 0E0D           01262         movlw   0x0D
000D1E EC?? F???      01263         call    USART_WAIT
                      01264         
000D22 6A15           01265         clrf    counter         ; used to cycle through past 9 eeprom logs
000D24 6A16           01266         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01267         
000D26                01268 TRANSFER_LOGS
000D26 0E15           01269         movlw   d'21'           ; logs are 21 bits apart
000D28 0215           01270         mulwf   counter         ; log number one starts at eeprom address 0
000D2A CFF3 F021      01271         movff   PRODL, L_EE     ; low address now points to count X 21
000D2E 6A16           01272         clrf    counter2
                      01273         
000D30                01274 TRANSFER_DATA   
                      01275         READEE  WREG, H_EE, L_EE
000D30 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D34 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D38 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D3A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D3C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D3E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D42 EC?? F???      01276         call    USART_WAIT      ; transfer bit
000D46 2A21           01277         incf    L_EE
                      01278         
000D48 2A16           01279         incf    counter2
000D4A 0E12           01280         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000D4C 6216           01281         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000D4E D???           01282         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01283         
000D50 EC?? F???      01284         call    USART_LINE      ; new line because a e s t h e t i c
                      01285         
000D54 2A15           01286         incf    counter
000D56 0E08           01287         movlw   d'8'            ; we save up to the last 9 permanent logs
000D58 6215           01288         cpfseq  counter
000D5A D???           01289         bra     TRANSFER_LOGS
                      01290         
000D5C EC?? F???      01291         call    LCD_L2
                      01292         Display PCComplete
  0000                    M         local   loop
000D60 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D62 6EF8               M         movwf   TBLPTRU
000D64 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D66 6EF7               M         movwf   TBLPTRH
000D68 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D6A 6EF6               M         movwf   TBLPTRL
000D6C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D6E 50F5               M         movf    TABLAT, W
000D70                    M loop
000D70 EC?? F???          M         call    WR_DATA         ; write to LCD
000D74 000B               M         tblrd+*                 ; next row in table
000D76 50F5               M         movf    TABLAT, W
000D78 E1??               M         bnz     loop
                      01293         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D7A 0E28               M         movlw   0x28
000D7C 6E1A               M         movwf   delayR
                          M 
000D7E                    M loop
000D7E EC?? F???          M         call    Delay50ms
000D82 2E1A               M         decfsz  delayR
000D84 EF?? F???          M         goto    loop
000D88 0012           01294         return                  ; done transmitting data
                      01295         
000D8A                01296 USART_WAIT
000D8A 6EAD           01297         movwf   TXREG
000D8C A2AC           01298         btfss   TXSTA, 1
000D8E EF?? F???      01299         goto    $-2
000D92 0012           01300         return
                      01301 
000D94                01302 USART_LINE
000D94 0E0A           01303         movlw   0x0A
000D96 EC?? F???      01304         call    USART_WAIT
000D9A 0E0D           01305         movlw   0x0D
000D9C EC?? F???      01306         call    USART_WAIT
000DA0 0012           01307         return
                      01308         
000DA2                01309 Delay5us
000DA2 0E78           01310         movlw   d'120'
000DA4 6E1B           01311         movwf   d5us
                      01312 
000DA6                01313 loop5us
000DA6 2E1B           01314         decfsz  d5us
000DA8 EF?? F???      01315         goto    loop5us
000DAC 0000           01316         nop
000DAE 0012           01317         return
                      01318 
000DB0                01319 Delay200us
000DB0 0EA4           01320         movlw   0xA4
000DB2 6E1C           01321         movwf   d200us
                      01322 
000DB4                01323 loop200us
000DB4 2E1C           01324         decfsz  d200us
000DB6 EF?? F???      01325         goto    loop200us
000DBA 0000           01326         nop
000DBC 0012           01327         return
                      01328 
000DBE                01329 Delay50ms
000DBE 0EF9           01330         movlw   0xF9
000DC0 6E1D           01331         movwf   d50ms
                      01332 
000DC2                01333 loop50ms
000DC2 EC?? F???      01334         call    Delay200us
000DC6 2E1D           01335         decfsz  d50ms
                      01336 
000DC8                01337 Cycles
000DC8 EF?? F???      01338         goto    loop50ms
000DCC EC?? F???      01339         call    Delay200us
000DD0 0012           01340         return
                      01341 
000DD2                01342 WriteEE_RTC
                      01343         WriteEE tens_digit, H_EE, L_EE
000DD2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DD6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DDA C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000DDE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DE0 D???               M         bra     $-2
                          M 
000DE2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DE4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DE6 84A6               M         bsf     EECON1, WREN        ; enable write
000DE8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DEA 98A1               M         bcf     PIR2, EEIF
                          M 
000DEC 0E55               M         movlw   0x55
000DEE 6EA7               M         movwf   EECON2              ; write 55h
000DF0 0EAA               M         movlw   0xaa
000DF2 6EA7               M         movwf   EECON2              ; write 0xaa
000DF4 82A6               M         bsf     EECON1, WR          ; begin write
000DF6 B2A6               M         btfsc   EECON1, WR
000DF8 D???               M         bra     $-2
                          M 
000DFA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DFC 94A6               M         bcf     EECON1, WREN        ; disable writes
000DFE 2A21           01344         incf    L_EE
                      01345         WriteEE ones_digit, H_EE, L_EE
000E00 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E04 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E08 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000E0C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E0E D???               M         bra     $-2
                          M 
000E10 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E12 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E14 84A6               M         bsf     EECON1, WREN        ; enable write
000E16 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E18 98A1               M         bcf     PIR2, EEIF
                          M 
000E1A 0E55               M         movlw   0x55
000E1C 6EA7               M         movwf   EECON2              ; write 55h
000E1E 0EAA               M         movlw   0xaa
000E20 6EA7               M         movwf   EECON2              ; write 0xaa
000E22 82A6               M         bsf     EECON1, WR          ; begin write
000E24 B2A6               M         btfsc   EECON1, WR
000E26 D???               M         bra     $-2
                          M 
000E28 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E2A 94A6               M         bcf     EECON1, WREN        ; disable writes
000E2C 2A21           01346         incf    L_EE
000E2E 0012           01347         return
                      01348 
000E30                01349 ClearEEPROM_21
000E30 6A20           01350         clrf    H_EE
000E32 6A21           01351         clrf    L_EE
000E34 681F           01352         setf    clear_EE
000E36 6A15           01353         clrf    counter
000E38                01354 ClearNext
                      01355         WriteEE         clear_EE, H_EE, L_EE
000E38 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E3C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E40 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000E44 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E46 D???               M         bra     $-2
                          M 
000E48 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E4A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E4C 84A6               M         bsf     EECON1, WREN        ; enable write
000E4E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E50 98A1               M         bcf     PIR2, EEIF
                          M 
000E52 0E55               M         movlw   0x55
000E54 6EA7               M         movwf   EECON2              ; write 55h
000E56 0EAA               M         movlw   0xaa
000E58 6EA7               M         movwf   EECON2              ; write 0xaa
000E5A 82A6               M         bsf     EECON1, WR          ; begin write
000E5C B2A6               M         btfsc   EECON1, WR
000E5E D???               M         bra     $-2
                          M 
000E60 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E62 94A6               M         bcf     EECON1, WREN        ; disable writes
000E64 2A15           01356         incf            counter
000E66 2A21           01357         incf            L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E68 0E15           01358         movlw           d'21'
000E6A 6215           01359         cpfseq          counter
000E6C EF?? F???      01360         goto            ClearNext
000E70 6A20           01361         clrf            H_EE
000E72 6A21           01362         clrf            L_EE
000E74 0012           01363         return
                      01364         
000E76                01365 READ_KEY
000E76 A281           01366         btfss   PORTB, 1        ; check for keypad interrupt
000E78 EF?? F???      01367         goto    READ_KEY
000E7C 3881           01368         swapf   PORTB, W
000E7E 0B0F           01369         andlw   0x0F
000E80 6E10           01370         movwf   KEY
000E82 B281           01371         btfsc   PORTB, 1
000E84 EF?? F???      01372         goto    $-2
000E88 0012           01373         return
                      01374 
000E8A                01375 READ_KEY_TIME
000E8A EC?? F???      01376         call        LCD_L2          ; go to second line to print RTC    
                      01377         ; display the time
                      01378         ; call      DISPLAY_RTC 
                      01379 
000E8E A281           01380         btfss       PORTB, 1    ; keypad interrupt
000E90 EF?? F???      01381         goto        READ_KEY_TIME
000E94 3881           01382         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E96 0B0F           01383         andlw       0x0F        ; only want W3:0
000E98 6E10           01384         movwf       KEY         ; write this value to the KEY
000E9A B281           01385         btfsc       PORTB, 1    ; wait for release
000E9C EF?? F???      01386         goto        $-2         ; go back one instruction
000EA0 0012           01387         return
                      01388 
000EA2                01389 DisplayExeTime
                      01390         READEE  REG_EE, H_EE, L_EE
000EA2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EA6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EAA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EAC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EAE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EB0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EB4 0EFF           01391         movlw   0xFF
000EB6 6222           01392         cpfseq  REG_EE
000EB8 EF?? F???      01393         goto    NoSkipDispExeTime
                      01394         Display NoData
  0000                    M         local   loop
000EBC 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EBE 6EF8               M         movwf   TBLPTRU
000EC0 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EC2 6EF7               M         movwf   TBLPTRH
000EC4 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EC6 6EF6               M         movwf   TBLPTRL
000EC8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000ECA 50F5               M         movf    TABLAT, W
000ECC                    M loop
000ECC EC?? F???          M         call    WR_DATA         ; write to LCD
000ED0 000B               M         tblrd+*                 ; next row in table
000ED2 50F5               M         movf    TABLAT, W
000ED4 E1??               M         bnz     loop
000ED6 0EFF           01395         movlw   0xFF
000ED8 6022           01396         cpfslt  REG_EE
000EDA EF?? F???      01397         goto    SkipDispExeTime
000EDE 0012           01398         return
                      01399 
000EE0                01400 NoSkipDispExeTime
                      01401         READEE  WREG, H_EE, L_EE
000EE0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EE4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EE8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EEA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EEC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EEE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EF2 EC?? F???      01402         call    WR_DATA
000EF6 2A21           01403         incf    L_EE
                      01404         
                      01405         READEE  WREG, H_EE, L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EF8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EFC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F00 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F02 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F04 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F06 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F0A EC?? F???      01406         call    WR_DATA
000F0E 2A21           01407         incf    L_EE
                      01408         
                      01409         READEE  WREG, H_EE, L_EE
000F10 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F14 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F18 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F1A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F1C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F1E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F22 EC?? F???      01410         call    WR_DATA
000F26 2A21           01411         incf    L_EE
                      01412 
000F28 0E73           01413         movlw   0x73            ; Write 's'
000F2A EC?? F???      01414         call    WR_DATA
000F2E EC?? F???      01415         call    LCD_L2
000F32                01416 SkipDispExeTime
000F32 0012           01417         return
                      01418 
000F34                01419 DispOpSort
                      01420         READEE  REG_EE, H_EE, L_EE
000F34 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F38 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F3C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F3E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F40 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F42 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F46 0EFF           01421         movlw   0xff
000F48 6222           01422         cpfseq  REG_EE
000F4A EF?? F???      01423         goto    NoSkipDispOpSort
                      01424         Display NoData
  0000                    M         local   loop
000F4E 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F50 6EF8               M         movwf   TBLPTRU
000F52 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F54 6EF7               M         movwf   TBLPTRH
000F56 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F58 6EF6               M         movwf   TBLPTRL
000F5A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F5C 50F5               M         movf    TABLAT, W
000F5E                    M loop
000F5E EC?? F???          M         call    WR_DATA         ; write to LCD
000F62 000B               M         tblrd+*                 ; next row in table
000F64 50F5               M         movf    TABLAT, W
000F66 E1??               M         bnz     loop
000F68 0EFF           01425         movlw   0xff
000F6A 6022           01426         cpfslt  REG_EE
000F6C EF?? F???      01427         goto    SkipDispOpSort
                      01428 
000F70                01429 NoSkipDispOpSort
000F70 0E61           01430         movlw   "a"
000F72 EC?? F???      01431         call    WR_DATA
                      01432         
                      01433         READEE  REG_EE, H_EE, L_EE
000F76 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F7A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F7E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F80 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F82 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F84 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F88 C022 FFE8      01434         movff   REG_EE, WREG
000F8C EC?? F???      01435         call    WR_DATA
000F90 2A21           01436         incf    L_EE
                      01437         
000F92 0E20           01438         movlw   " "
000F94 EC?? F???      01439         call    WR_DATA
                      01440         
000F98 0E62           01441         movlw   "b"
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F9A EC?? F???      01442         call    WR_DATA
                      01443         
                      01444         READEE  REG_EE, H_EE, L_EE
000F9E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FA2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FA6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FAA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FAC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FB0 C022 FFE8      01445         movff   REG_EE, WREG
000FB4 EC?? F???      01446         call    WR_DATA
000FB8 2A21           01447         incf    L_EE
                      01448         
000FBA 0E20           01449         movlw   " "
000FBC EC?? F???      01450         call    WR_DATA
                      01451         
000FC0 0E63           01452         movlw   "c"
000FC2 EC?? F???      01453         call    WR_DATA
                      01454         
                      01455         READEE  REG_EE, H_EE, L_EE
000FC6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FCA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FCE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FD0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FD2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FD4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FD8 C022 FFE8      01456         movff   REG_EE, WREG
000FDC EC?? F???      01457         call    WR_DATA
000FE0 2A21           01458         incf    L_EE
                      01459         
000FE2 0E20           01460         movlw   " "
000FE4 EC?? F???      01461         call    WR_DATA
                      01462         
000FE8 0E64           01463         movlw   "d"
000FEA EC?? F???      01464         call    WR_DATA
                      01465         
                      01466         READEE  REG_EE, H_EE, L_EE
000FEE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FF2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FF6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FF8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FFA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FFC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001000 C022 FFE8      01467         movff   REG_EE, WREG
001004 EC?? F???      01468         call    WR_DATA
001008 2A21           01469         incf    L_EE
                      01470 
00100A                01471 SkipDispOpSort
00100A 0012           01472         return
                      01473         
00100C                01474 DispOpRTC
                      01475         READEE  REG_EE, H_EE, L_EE
00100C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001010 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001014 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001016 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001018 80A6               M         bsf     EECON1, RD          ; read EEPROM
00101A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00101E 0EFF           01476         movlw   0xff
001020 6222           01477         cpfseq  REG_EE
001022 EF?? F???      01478         goto    NoSkipDispOpRTC
                      01479         Display NoData
  0000                    M         local   loop
001026 0E??               M         movlw   upper NoData    ; Move Table<20:16>
001028 6EF8               M         movwf   TBLPTRU
00102A 0E??               M         movlw   high NoData     ; Move Table<15:8>
00102C 6EF7               M         movwf   TBLPTRH
00102E 0E??               M         movlw   low NoData      ; Move Table<7:0>
001030 6EF6               M         movwf   TBLPTRL
001032 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
001034 50F5               M         movf    TABLAT, W
001036                    M loop
001036 EC?? F???          M         call    WR_DATA         ; write to LCD
00103A 000B               M         tblrd+*                 ; next row in table
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00103C 50F5               M         movf    TABLAT, W
00103E E1??               M         bnz     loop
001040 0EFF           01480         movlw   0xff
001042 6022           01481         cpfslt  REG_EE
001044 EF?? F???      01482         goto    SkipDispOpRTC
                      01483 
001048                01484 NoSkipDispOpRTC
                      01485         READEE  REG_EE, H_EE, L_EE
001048 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00104C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001050 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001052 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001054 80A6               M         bsf     EECON1, RD          ; read EEPROM
001056 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00105A C022 FFE8      01486         movff   REG_EE, WREG
00105E EC?? F???      01487         call    WR_DATA
001062 2A21           01488         incf    L_EE
                      01489         
                      01490         READEE  REG_EE, H_EE, L_EE
001064 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001068 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00106C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00106E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001070 80A6               M         bsf     EECON1, RD          ; read EEPROM
001072 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001076 C022 FFE8      01491         movff   REG_EE, WREG
00107A EC?? F???      01492         call    WR_DATA
00107E 2A21           01493         incf    L_EE
                      01494 
001080 0E68           01495         movlw   "h"
001082 EC?? F???      01496         call    WR_DATA
                      01497         
001086 EC?? F???      01498         call    DispOpRTC_Helper
                      01499         
00108A 0E20           01500         movlw   " "
00108C EC?? F???      01501         call    WR_DATA
                      01502         
001090 EC?? F???      01503         call    DispOpRTC_Helper
001094 0E2F           01504         movlw   "/"
001096 EC?? F???      01505         call    WR_DATA
                      01506 
00109A EC?? F???      01507         call    DispOpRTC_Helper
00109E 0E2F           01508         movlw   "/"
0010A0 EC?? F???      01509         call    WR_DATA
0010A4 EC?? F???      01510         call    DispOpRTC_Helper
0010A8                01511 SkipDispOpRTC
0010A8 0012           01512                 return
0010AA                01513 DispOpRTC_Helper
                      01514         READEE          REG_EE, H_EE, L_EE
0010AA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010AE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010B2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010B4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010B6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010B8 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010BC C022 FFE8      01515         movff           REG_EE, WREG
0010C0 EC?? F???      01516         call            WR_DATA
0010C4 2A21           01517         incf            L_EE
                      01518         READEE          REG_EE, H_EE, L_EE
0010C6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010CA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010CE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010D0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010D2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010D4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010D8 C022 FFE8      01519         movff           REG_EE, WREG
0010DC EC?? F???      01520         call            WR_DATA
0010E0 2A21           01521         incf            L_EE
0010E2 0012           01522         return
Warning[205]: Found directive in column 1. (end)
                      01523 end

MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-29-2017  18:59:31         PAGE 42





Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

