MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movf    datachar,w
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   datachar, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   datachar, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   datachar, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   datachar, red+1
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   datachar, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   datachar, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   datachar, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   datachar, blue+1
                      00102     endm
                      00103     
                      00019 
                      00020     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00021     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00022     CONFIG WDT = OFF, WDTPS = 32768
                      00023     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00024     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00025     CONFIG DEBUG = OFF
                      00026     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00027     CONFIG CPB = OFF, CPD = OFF
                      00028     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00029     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00030     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00031     CONFIG EBTRB = OFF
                      00032 
                      00033 ;*******************************************************************************
                      00034 ; variable and constants
                      00035 ;*******************************************************************************
                      00036     CODE
                      00037             
                      00038     cblock 0x00
  00000000            00039         key1
  00000001            00040         key2
  00000002            00041         key3
  00000003            00042         keyA
  00000004            00043         key4
  00000005            00044         key5
  00000006            00045         key6
  00000007            00046         keyB
  00000008            00047         key7
  00000009            00048         key8
  0000000A            00049         key9
  0000000B            00050         keyC
  0000000C            00051         keyS
  0000000D            00052         key0
  0000000E            00053         keyH
  0000000F            00054         keyD
  00000010            00055         KEY
  00000011            00056         temp_KEY
  00000012            00057         KEY_ISR
  00000013            00058         temp_S  
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000014            00059         temp_W
  00000015            00060         counter
  00000016            00061         counter2
  00000017            00062         temp
  00000018            00063         OP_sec
  00000019            00064         OP_INT
  0000001A            00065         temp_ISR
  0000001B            00066         delayR
  0000001C            00067         d5us
  0000001D            00068         d200us
  0000001E            00069         d50ms
  0000001F            00070         inExecution
  00000020            00071         clear_EE
  00000021            00072         H_EE    
  00000022            00073         L_EE    
  00000023            00074         REG_EE  
  00000024            00075         tempH_EE
  00000025            00076         tempL_EE
  00000026            00077         tempL_EEC
  00000027            00078         MAX_EE   
  00000028            00079         READ_EE
  00000029            00080         last_log
  0000002A            00081         startHt
  0000002B            00082         startHo
  0000002C            00083         startMt
  0000002D            00084         startMo
  0000002E            00085         endHt
  0000002F            00086         endHo
  00000030            00087         endMt
  00000031            00088         endMo
  00000032            00089         LED_Count
  00000033            00090         SkipCount
  00000034            00091         exe_sec
  00000035            00092         exe_int
  00000036            00093         timer_H
  00000037            00094         timer_L
  00000038            00095         convert_buffer
  00000039            00096         transferring
  0000003A            00097         PC_PCL
  0000003B            00098         PC_PCLATH
  0000003C            00099         PC_PCLATU
  0000003D            00100         TIMCNT
  0000003E            00101         CPCNT
  0000003F            00102         TDATA
  00000040            00103         CLEAR:2
  00000042            00104         RED:2
  00000044            00105         GREEN:2
  00000046            00106         BLUE:2
  00000048            00107         temp_colour:2   
                      00108     endc
                      00109     
  0000                00110     extern tens_digit, ones_digit
                      00111     
                      00112 ;*******************************************************************************
                      00113 ; tables
                      00114 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00115     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00116     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00117     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00118     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00119     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00120     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000034 6142 6B63 3C20 00121     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00122     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00123     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00124     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00125     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00126     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00127     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00128     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00129     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00130     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00131     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00132     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00133     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00134     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00135         
                      00136 ;*******************************************************************************
                      00137 ; macros
                      00138 ;*******************************************************************************
                      00139 
                      00140 TransferTable macro table
                      00141         local loop
                      00142         
                      00143         movlw   upper table
                      00144         movwf   TBLPTRU
                      00145         movlw   high table
                      00146         movwf   TBLPTRH
                      00147         movlw   low table
                      00148         movwf   TBLPTRL
                      00149         tblrd*
                      00150         movff   TABLAT, WREG
                      00151 loop
                      00152         call    USART_WAIT
                      00153         tblrd+*
                      00154         movff   TABLAT, WREG
                      00155         bnz     loop
                      00156         endm
                      00157         
                      00158 ConfigLCD   macro
                      00159           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00160           call      WR_INS
                      00161 
                      00162           movlw     b'00001100'    ; display on/off
                      00163           call      WR_INS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164          ; movlw     B'00000110'    ; Entry mode
                      00165          ; call      WR_INS
                      00166           movlw     b'00000001'    ; Clear ram
                      00167           call      WR_INS
                      00168           endm
                      00169         
                      00170 movMSB  macro   port
                      00171         andlw   0xF0
                      00172         iorwf   port, f
                      00173         iorlw   0x0F
                      00174         andwf   port, f
                      00175         endm
                      00176 
                      00177 Delay50N macro count, N
                      00178         local   loop
                      00179         movlw   N
                      00180         movwf   count
                      00181 
                      00182 loop
                      00183         call    Delay50ms
                      00184         decfsz  count
                      00185         goto    loop
                      00186         endm
                      00187 
                      00188 Display macro   Message
                      00189         local   loop
                      00190         movlw   upper Message   ; Move Table<20:16>
                      00191         movwf   TBLPTRU
                      00192         movlw   high Message    ; Move Table<15:8>
                      00193         movwf   TBLPTRH
                      00194         movlw   low Message     ; Move Table<7:0>
                      00195         movwf   TBLPTRL
                      00196         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00197         movf    TABLAT, W
                      00198 loop
                      00199         call    WR_DATA         ; write to LCD
                      00200         tblrd+*                 ; next row in table
                      00201         movf    TABLAT, W
                      00202         bnz     loop
                      00203         endm
                      00204 
                      00205 DisplayLog  macro   addrH, addrL
                      00206             local   Again, Finish
                      00207             
                      00208             clrf    SkipCount
                      00209             clrf    MAX_EE
                      00210 
                      00211             ; Check if there is No Data first
                      00212             READEE      REG_EE, addrH, addrL
                      00213             movlw       0xFF
                      00214             cpfseq      REG_EE
                      00215             goto        Again
                      00216             Display     NoData
                      00217             goto        Finish
                      00218 Again
                      00219             ; Put a space every 3 Writes
                      00220             movlw       d'3'
                      00221             cpfslt      SkipCount
                      00222             cpfslt      MAX_EE
                      00223             goto        Finish
                      00224 
                      00225             ; read EEPROM
                      00226             READEE      REG_EE, addrH, addrL
                      00227             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00228             goto        Finish
                      00229 Finish
                      00230             endm
                      00231             
                      00232 ;TransferLog macro   addrH, addrL
                      00233         
                      00234 
                      00235 incf_BCD    macro   BCD
                      00236         local ones, endBCD
                      00237         movff   BCD, temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00238         
                      00239         ;process ones digit
                      00240         movlw   0x0f
                      00241         andwf   temp
                      00242         movlw   d'9'
                      00243         
                      00244         ;skip if ones digit is 9
                      00245         cpfseq  temp
                      00246         goto    ones
                      00247         
                      00248         movlw   b'00010000'
                      00249         addwf   BCD
                      00250         movlw   0xf0
                      00251         andwf   BCD
                      00252         movlw   0xa0
                      00253         cpfslt  BCD
                      00254         
                      00255         clrf    BCD
                      00256         goto    endBCD
                      00257         
                      00258 ones
                      00259         incf    BCD
                      00260         goto    endBCD
                      00261 endBCD
                      00262         nop
                      00263         endm
                      00264         
                      00265 SUB16   macro   x, y        ; does not modify x nor y
                      00266         local RESULTS
                      00267         movf    y+1, WREG   ; move high y into working register
                      00268         subwf   x+1, 0      ; do subtraction x - w => w
                      00269         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00270         goto    RESULTS     ; if it is, need to check lower bytes
                      00271         
                      00272         movf    y, WREG
                      00273         subwf   x, 0    
                      00274 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00275         endm
                      00276 
                      00277 WriteRTC    macro
                      00278         movff   tens_digit, WREG
                      00279         call    WR_DATA
                      00280         movff   ones_digit, WREG
                      00281         call    WR_DATA
                      00282         endm
                      00283 
                      00284 WriteEE macro   word, addH, addL
                      00285         movff   addH, EEADRH        ; High address
                      00286         movff   addL, EEADR         ; Low address
                      00287         movff   word, EEDATA        ; set word
                      00288 
                      00289         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00290         bra     $-2
                      00291 
                      00292         bcf     EECON1, EEPGD       ; Point to data memory
                      00293         bcf     EECON1, CFGS        ; Access EEPROM
                      00294         bsf     EECON1, WREN        ; enable write
                      00295         bcf     INTCON, GIE         ; disable interrupts during write
                      00296         bcf     PIR2, EEIF
                      00297 
                      00298         movlw   0x55
                      00299         movwf   EECON2              ; write 55h
                      00300         movlw   0xaa
                      00301         movwf   EECON2              ; write 0xaa
                      00302         bsf     EECON1, WR          ; begin write
                      00303         btfsc   EECON1, WR
                      00304         bra     $-2
                      00305 
                      00306         bsf     INTCON, GIE         ; enable interrupts after write
                      00307         bcf     EECON1, WREN        ; disable writes
                      00308         endm
                      00309 
                      00310 READEE  macro   file, addH, addL
                      00311         movff   addH, EEADRH        ; read to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312         movff   addL, EEADR         ; read to low
                      00313         bcf     EECON1, EEPGD       ; point to data memory
                      00314         bcf     EECON1, CFGS        ; access to EEPROM
                      00315         bsf     EECON1, RD          ; read EEPROM
                      00316         movff   EEDATA, file        ; put data into file
                      00317         endm
                      00318 
                      00319 ChangeMode  macro   ModeId, NextMode
                      00320         local Next, Exit
                      00321 
                      00322         movlw   ModeId              ; poll for mode
                      00323         cpfseq  KEY                 ; check this against key press
                      00324         goto    Exit
                      00325 
                      00326 Next
                      00327         clrf    LATA                ; clear pins before proceeding
                      00328         clrf    LATB
                      00329         clrf    LATC
                      00330         clrf    LATD
                      00331         goto    NextMode
                      00332 
                      00333 Exit
                      00334         nop
                      00335         endm
                      00336 
                      00337 saveContext macro
                      00338     movff   STATUS, temp_S          ; save STATUS first
                      00339     movwf   temp_W                  ; save W
                      00340     endm
                      00341 
                      00342 restoreContext macro
                      00343     swapf   temp_W, W               ; restore W first
                      00344     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00345     endm
                      00346 ;*******************************************************************************
                      00347 ; reset vector and isrs
                      00348 ;*******************************************************************************
                      00349         ORG     0x000               ; processor reset vector
000000 EF?? F???      00350         goto    INIT                ; go to beginning of program
                      00351 
                      00352         ORG     0x008
000008 EF?? F???      00353         goto    ISR_HIGH
                      00354 
                      00355         ORG     0x018
000018 EF?? F???      00356         goto    ISR_LOW
                      00357 
00001C                00358 ISR_HIGH
                      00359         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00360         
Warning[202]: Argument out of range.  Least significant bits used.
000022 3818           00361         swapf   OP_sec, WREG    ; 100's seconds
000024 6E17           00362         movwf   temp
000026 0E0F           00363         movlw   0x0F
000028 1617           00364         andwf   temp
00002A C017 FFE8      00365         movff   temp, WREG
00002E 0F30           00366         addlw   0x30
000030 EC?? F???      00367         call    WR_DATA
                      00368 
000034 C018 F017      00369         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00370         movlw   0x0F
00003A 1617           00371         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C017 FFE8      00372         movff   temp, WREG      ; W = Temp
000040 0F30           00373         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00374         call    WR_DATA
                      00375         
Warning[202]: Argument out of range.  Least significant bits used.
000046 3819           00376         swapf   OP_INT, WREG    ;1's seconds
000048 6E17           00377         movwf   temp
00004A 0E0F           00378         movlw   0x0f
00004C 1617           00379         andwf   temp
00004E C017 FFE8      00380         movff   temp, WREG
000052 0F30           00381         addlw   0x30
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000054 EC?? F???      00382         call    WR_DATA
                      00383 
000058 0E73           00384         movlw   0x73            ; Write 's'
00005A EC?? F???      00385         call    WR_DATA
00005E EC?? F???      00386         call    LCD_L2
                      00387 
                      00388         ;reset timer
000062 0EC6           00389         movlw   0xc6
000064 6ED7           00390         movwf   TMR0H
000066 0E3E           00391         movlw   0x3e
000068 6ED6           00392         movwf   TMR0L
                      00393                 
                      00394         ;timer interrupt
00006A A4F2           00395         btfss   INTCON, TMR0IF
00006C EF?? F???      00396         goto    END_ISR_HIGH
                      00397         
                      00398         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1617               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6217               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 2619               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 1619               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 6019               M         cpfslt  OP_INT
                          M         
00008C 6A19               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A19               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00399         movlw   d'0'
00009C 6219           00400         cpfseq  OP_INT
00009E EF?? F???      00401         goto    END_ISR_HIGH
                      00402         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1617               M         andwf   temp
0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6217               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2618               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1618               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6018               M         cpfslt  OP_sec
                          M         
0000BE 6A18               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
                          M         
0000C4                    M ones
0000C4 2A18               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CA 0000               M         nop
                      00403 
0000CC                00404 END_ISR_HIGH
0000CC 94F2           00405         bcf     INTCON, TMR0IF
                      00406         restoreContext
0000CE 3814               M     swapf   temp_W, W               ; restore W first
0000D0 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00407         retfie
                      00408 
0000D6                00409 ISR_LOW
                      00410         saveContext
0000D6 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E14               M     movwf   temp_W                  ; save W
                      00411         ; KEYPAD INTERRUPT
0000DC A0F0           00412         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00413         goto            END_ISR_LOW
                      00414 
                      00415         ;Check operation status
                      00416 ;       movlw           0xFF                                    ; If in operation, skip return
                      00417 ;       cpfseq          InExecution
                      00418 ;       goto            END_ISR_LOW
                      00419 
                      00420         ; Process KEY
0000E2 3881           00421         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00422         andlw           0x0F
0000E6 6E12           00423         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00424 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00425 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000E8 EF?? F???      00426         goto            END_ISR_LOW
                      00427 
                      00428         ; Reset program counter
0000EC 6AFF           00429         clrf            TOSU
0000EE 6AFE           00430         clrf            TOSH
0000F0 6AFD           00431         clrf            TOSL
                      00432 
0000F2                00433 END_ISR_LOW
0000F2 90F0           00434         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00435         restoreContext
0000F4 3814               M     swapf   temp_W, W               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00436         
0000FA 6E14           00437         movwf   temp_W              ; save current W
0000FC CFD8 F013      00438         movff   STATUS, temp_S      ; save status
                      00439 
                      00440         ; ISR_Low routines
000100 C013 FFD8      00441         movff   temp_S, STATUS      ; retreive status
000104 3A14           00442         swapf   temp_W, f
000106 3814           00443         swapf   temp_W, w           ; restore W
000108 0010           00444         retfie
                      00445 
                      00446 ;*******************************************************************************
                      00447 ; main
                      00448 ;*******************************************************************************
00010A                00449 INIT
                      00450         ; i/o
00010A 0EFF           00451         movlw   b'11111111'
00010C 6E92           00452         movwf   TRISA
00010E 0EFF           00453         movlw   b'11111111'
000110 6E93           00454         movwf   TRISB               ; keypad
000112 0E00           00455         movlw   b'00000000'
000114 6E94           00456         movwf   TRISC
000116 0E00           00457         movlw   b'00000000'
000118 6E95           00458         movwf   TRISD
00011A 0E07           00459         movlw   b'00000111'
00011C 6E96           00460         movwf   TRISE
                      00461 
                      00462         ; analog/digital pins
00011E 0E0F           00463         movlw   b'00001111'     ; Set all AN pins to Digital
000120 6EC1           00464         movwf   ADCON1
                      00465 
                      00466         ; clear ports
000122 6A89           00467         clrf    LATA
000124 6A8A           00468         clrf    LATB
                      00469 ;       bcf     TRISC, SCL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00470 ;       bcf     TRISC, SDA
000126 6A8B           00471         clrf    LATC
000128 6A8C           00472         clrf    LATD
00012A 6A8D           00473         clrf    LATE
                      00474         
00012C 0E00           00475         movlw   b'00000000'
00012E 6EC2           00476         movwf   ADCON0
000130 0EFF           00477         movlw   b'11111111'
000132 6EC1           00478         movwf   ADCON1
                      00479         
                      00480         ; initializations
                      00481         
000134 EC?? F???      00482         call    InitLCD
                      00483         ConfigLCD
000138 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00013A EC?? F???          M           call      WR_INS
                          M 
00013E 0E0C               M           movlw     b'00001100'    ; display on/off
000140 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000144 0E01               M           movlw     b'00000001'    ; Clear ram
000146 EC?? F???          M           call      WR_INS
                      00484         
00014A EC?? F???      00485         call    RTC_INIT
00014E EC?? F???      00486         call    Delay50ms
                      00487         
                      00488         COLOUR_INIT
                          M         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
000152 0E00               M         movlw   0x00
000154 6E??               M         movwf   regaddress
000156 0E01               M         movlw   0x01
000158 6E??               M         movwf   databyte
00015A EC?? F???          M         call    WRITE_COLOUR_I2C
00015E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
000162 0E00               M         movlw   0x00
000164 6E??               M         movwf   regaddress
000166 0E03               M         movlw   0x03
000168 6E??               M         movwf   databyte
00016A EC?? F???          M         call    WRITE_COLOUR_I2C
00016E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
000172 0E01               M         movlw   0x01
000174 6E??               M         movwf   regaddress
000176 0ED6               M         movlw   0xd6
000178 6E??               M         movwf   databyte
00017A EC?? F???          M         call    WRITE_COLOUR_I2C
00017E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
000182 0E0F               M         movlw   0x0f
000184 6E??               M         movwf   regaddress
000186 0E03               M         movlw   0x03
000188 6E??               M         movwf   databyte
00018A EC?? F???          M         call    WRITE_COLOUR_I2C
00018E EC?? F???          M         call    delay5ms
                      00489         
000192 EC?? F???      00490         call    INIT_USART
                      00491 
                      00492         ; interrupts
000196 6AD0           00493         clrf    RCON
000198 6AF2           00494         clrf    INTCON
00019A 6AF1           00495         clrf    INTCON2
00019C 6AF0           00496         clrf    INTCON3
00019E 8ED0           00497         bsf     RCON, IPEN          ; priority mode
0001A0 8EF2           00498         bsf     INTCON, GIEH        ; permit global interrupts
0001A2 8CF2           00499         bsf     INTCON, GIEL
0001A4 8AF1           00500         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
0001A6 8AF2           00501         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
0001A8 84F2           00502         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
0001AA 84F1           00503         bsf     INTCON2, TMR0IP     ; set to high priority
0001AC 86F0           00504         bsf     INTCON3, INT1IE
0001AE 9CF0           00505         bcf     INTCON3, INT1IP
                      00506         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00507         ; setting up timer to sychronize with 1 second clock intervals
0001B0 9ED5           00508         bcf     T0CON, TMR0ON
0001B2 9CD5           00509         bcf     T0CON, T08BIT
0001B4 9AD5           00510         bcf     T0CON, T0CS
0001B6 98D5           00511         bcf     T0CON, T0SE
0001B8 96D5           00512         bcf     T0CON, PSA
0001BA 94D5           00513         bcf     T0CON, T0PS2
0001BC 82D5           00514         bsf     T0CON, T0PS1
0001BE 80D5           00515         bsf     T0CON, T0PS0
                      00516 
0001C0 6A21           00517         clrf    H_EE
0001C2 6A22           00518         clrf    L_EE
0001C4 6A??           00519         clrf    tens_digit
0001C6 6A??           00520         clrf    ones_digit
                      00521         
0001C8 0EF2           00522         movlw     b'11110010'    ; Set required keypad inputs
0001CA 6E93           00523         movwf     TRISB
                      00524         
                      00525         Display Welcome
  0000                    M         local   loop
0001CC 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001CE 6EF8               M         movwf   TBLPTRU
0001D0 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001D2 6EF7               M         movwf   TBLPTRH
0001D4 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001D6 6EF6               M         movwf   TBLPTRL
0001D8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001DA 50F5               M         movf    TABLAT, W
0001DC                    M loop
0001DC EC?? F???          M         call    WR_DATA         ; write to LCD
0001E0 000B               M         tblrd+*                 ; next row in table
0001E2 50F5               M         movf    TABLAT, W
0001E4 E1??               M         bnz     loop
0001E6 EC?? F???      00526         call LCD_L2
                      00527         Display Team
  0000                    M         local   loop
0001EA 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001EC 6EF8               M         movwf   TBLPTRU
0001EE 0E??               M         movlw   high Team       ; Move Table<15:8>
0001F0 6EF7               M         movwf   TBLPTRH
0001F2 0E??               M         movlw   low Team        ; Move Table<7:0>
0001F4 6EF6               M         movwf   TBLPTRL
0001F6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001F8 50F5               M         movf    TABLAT, W
0001FA                    M loop
0001FA EC?? F???          M         call    WR_DATA         ; write to LCD
0001FE 000B               M         tblrd+*                 ; next row in table
000200 50F5               M         movf    TABLAT, W
000202 E1??               M         bnz     loop
                      00528         
                      00529         Delay50N delayR, 0x14
  0000                    M         local   loop
000204 0E14               M         movlw   0x14
000206 6E1B               M         movwf   delayR
                          M 
000208                    M loop
000208 EC?? F???          M         call    Delay50ms
00020C 2E1B               M         decfsz  delayR
00020E EF?? F???          M         goto    loop
                      00530 
                      00531 ;*******************************************************************************
                      00532 ; standby mode
                      00533 ;*******************************************************************************
000212                00534 STANDBY
000212 EC?? F???      00535         call    ClrLCD
                      00536         Display StandBy
  0000                    M         local   loop
000216 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000218 6EF8               M         movwf   TBLPTRU
00021A 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00021C 6EF7               M         movwf   TBLPTRH
00021E 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000220 6EF6               M         movwf   TBLPTRL
000222 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000224 50F5               M         movf    TABLAT, W
000226                    M loop
000226 EC?? F???          M         call    WR_DATA         ; write to LCD
00022A 000B               M         tblrd+*                 ; next row in table
00022C 50F5               M         movf    TABLAT, W
00022E E1??               M         bnz     loop
                      00537 
000230                00538 HOLD_STANDBY
000230 EC?? F???      00539         call    READ_KEY_TIME
                      00540         ChangeMode key5, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000234 0E05               M         movlw   key5                ; poll for mode
000236 6210               M         cpfseq  KEY                 ; check this against key press
000238 EF?? F???          M         goto    Exit
                          M 
00023C                    M Next
00023C 6A89               M         clrf    LATA                ; clear pins before proceeding
00023E 6A8A               M         clrf    LATB
000240 6A8B               M         clrf    LATC
000242 6A8C               M         clrf    LATD
000244 EF?? F???          M         goto    COLOUR_TEST
                          M 
000248                    M Exit
000248 0000               M         nop
                      00541         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
00024A 0E03               M         movlw   keyA                ; poll for mode
00024C 6210               M         cpfseq  KEY                 ; check this against key press
00024E EF?? F???          M         goto    Exit
                          M 
000252                    M Next
000252 6A89               M         clrf    LATA                ; clear pins before proceeding
000254 6A8A               M         clrf    LATB
000256 6A8B               M         clrf    LATC
000258 6A8C               M         clrf    LATD
00025A EF?? F???          M         goto    EXECUTION
                          M 
00025E                    M Exit
00025E 0000               M         nop
                      00542         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
000260 0E07               M         movlw   keyB                ; poll for mode
000262 6210               M         cpfseq  KEY                 ; check this against key press
000264 EF?? F???          M         goto    Exit
                          M 
000268                    M Next
000268 6A89               M         clrf    LATA                ; clear pins before proceeding
00026A 6A8A               M         clrf    LATB
00026C 6A8B               M         clrf    LATC
00026E 6A8C               M         clrf    LATD
000270 EF?? F???          M         goto    LOG
                          M 
000274                    M Exit
000274 0000               M         nop
                      00543         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000276 0E0B               M         movlw   keyC                ; poll for mode
000278 6210               M         cpfseq  KEY                 ; check this against key press
00027A EF?? F???          M         goto    Exit
                          M 
00027E                    M Next
00027E 6A89               M         clrf    LATA                ; clear pins before proceeding
000280 6A8A               M         clrf    LATB
000282 6A8B               M         clrf    LATC
000284 6A8C               M         clrf    LATD
000286 EF?? F???          M         goto    PERM_LOG
                          M 
00028A                    M Exit
00028A 0000               M         nop
                      00544         ChangeMode keyD, PC_MODE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
00028C 0E0F               M         movlw   keyD                ; poll for mode
00028E 6210               M         cpfseq  KEY                 ; check this against key press
000290 EF?? F???          M         goto    Exit
                          M 
000294                    M Next
000294 6A89               M         clrf    LATA                ; clear pins before proceeding
000296 6A8A               M         clrf    LATB
000298 6A8B               M         clrf    LATC
00029A 6A8C               M         clrf    LATD
00029C EF?? F???          M         goto    PC_MODE
                          M 
0002A0                    M Exit
0002A0 0000               M         nop
0002A2 D???           00545         bra     HOLD_STANDBY
                      00546 
                      00547 ;*******************************************************************************
                      00548 ; execution mode
                      00549 ;*******************************************************************************
                      00550 
0002A4                00551 CHECK_CLEAR
                      00552         SUB16   CLEAR, RED                  ; check first against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002A4 5043               M         movf    RED+1, WREG ; move high y into working register
0002A6 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002A8 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002AA EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002AE 5042               M         movf    RED, WREG
0002B0 5C40               M         subwf   CLEAR, 0 
0002B2                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002B2 A0D8           00553         btfss   STATUS, C
0002B4 0012           00554         return                              ; RED > CLEAR
                      00555         
                      00556         SUB16   CLEAR, GREEN                ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002B6 5045               M         movf    GREEN+1, WREG ; move high y into working register
0002B8 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002BA B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002BC EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002C0 5044               M         movf    GREEN, WREG
0002C2 5C40               M         subwf   CLEAR, 0 
0002C4                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002C4 A0D8           00557         btfss   STATUS, C
0002C6 0012           00558         return                              ; GREEN > CLEAR
                      00559         
                      00560         SUB16   CLEAR, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002C8 5047               M         movf    BLUE+1, WREG ; move high y into working register
0002CA 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002CC B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002CE EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002D2 5046               M         movf    BLUE, WREG
0002D4 5C40               M         subwf   CLEAR, 0 
0002D6                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002D6 A0D8           00561         btfss   STATUS, C
0002D8 0012           00562         return                              ; BLUE > CLEAR
                      00563         
0002DA 0E63           00564         movlw   'c'                         ; CLEAR > everything else
0002DC EC?? F???      00565         call    WR_DATA
0002E0 D???           00566         bra     LOOPING
                      00567 
0002E2                00568 CHECK_RED
                      00569         SUB16   RED, CLEAR                  ; check first against clear
  0000                    M         local RESULTS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[202]: Argument out of range.  Least significant bits used.
0002E2 5041               M         movf    CLEAR+1, WREG ; move high y into working register
0002E4 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002E6 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002E8 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002EC 5040               M         movf    CLEAR, WREG
0002EE 5C42               M         subwf   RED, 0  
0002F0                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002F0 A0D8           00570         btfss   STATUS, C
0002F2 0012           00571         return                              ; CLEAR > RED
                      00572         
                      00573         SUB16   RED, GREEN                  ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002F4 5045               M         movf    GREEN+1, WREG ; move high y into working register
0002F6 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002F8 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002FA EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002FE 5044               M         movf    GREEN, WREG
000300 5C42               M         subwf   RED, 0  
000302                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000302 A0D8           00574         btfss   STATUS, C
000304 0012           00575         return                              ; GREEN > RED
                      00576         
                      00577         SUB16   RED, BLUE                   ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000306 5047               M         movf    BLUE+1, WREG ; move high y into working register
000308 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
00030A B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00030C EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000310 5046               M         movf    BLUE, WREG
000312 5C42               M         subwf   RED, 0  
000314                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000314 A0D8           00578         btfss   STATUS, C
000316 0012           00579         return                              ; BLUE > RED
                      00580         
000318 0E72           00581         movlw   'r'                         ; RED > everything else
00031A EC?? F???      00582         call    WR_DATA
00031E D???           00583         bra     LOOPING
                      00584         
000320                00585 CHECK_GREEN
                      00586         SUB16   GREEN, CLEAR                ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000320 5041               M         movf    CLEAR+1, WREG ; move high y into working register
000322 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000324 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000326 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00032A 5040               M         movf    CLEAR, WREG
00032C 5C44               M         subwf   GREEN, 0 
00032E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00032E A0D8           00587         btfss   STATUS, C
000330 0012           00588         return                              ; CLEAR > GREEN
                      00589         
                      00590         SUB16   GREEN, RED                  ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000332 5043               M         movf    RED+1, WREG ; move high y into working register
000334 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000336 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000338 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00033C 5042               M         movf    RED, WREG
00033E 5C44               M         subwf   GREEN, 0 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000340                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000340 A0D8           00591         btfss   STATUS, C
000342 0012           00592         return                              ; RED > GREEN
                      00593         
                      00594         SUB16   GREEN, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000344 5047               M         movf    BLUE+1, WREG ; move high y into working register
000346 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000348 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00034A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00034E 5046               M         movf    BLUE, WREG
000350 5C44               M         subwf   GREEN, 0 
000352                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000352 A0D8           00595         btfss   STATUS, C
000354 0012           00596         return                              ; BLUE > GREEN
                      00597         
000356 0E67           00598         movlw   'g'                         ; GREEN > everything else
000358 EC?? F???      00599         call    WR_DATA
00035C D???           00600         bra     LOOPING
                      00601         
00035E                00602 CHECK_BLUE
                      00603         SUB16   BLUE, CLEAR                 ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00035E 5041               M         movf    CLEAR+1, WREG ; move high y into working register
000360 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000362 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000364 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000368 5040               M         movf    CLEAR, WREG
00036A 5C46               M         subwf   BLUE, 0 
00036C                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00036C A0D8           00604         btfss   STATUS, C
00036E 0012           00605         return                              ; CLEAR > BLUE
                      00606         
                      00607         SUB16   BLUE, RED                   ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000370 5043               M         movf    RED+1, WREG ; move high y into working register
000372 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000374 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000376 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00037A 5042               M         movf    RED, WREG
00037C 5C46               M         subwf   BLUE, 0 
00037E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00037E A0D8           00608         btfss   STATUS, C
000380 0012           00609         return                              ; RED > BLUE
                      00610 
                      00611         SUB16   BLUE, GREEN                 ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000382 5045               M         movf    GREEN+1, WREG ; move high y into working register
000384 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000386 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000388 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00038C 5044               M         movf    GREEN, WREG
00038E 5C46               M         subwf   BLUE, 0 
000390                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000390 A0D8           00612         btfss   STATUS, C
000392 0012           00613         return                              ; GREEN > CLEAR
                      00614         
000394 0E62           00615         movlw   'b'                         ; BLUE > everything else
000396 EC?? F???      00616         call    WR_DATA
00039A 0012           00617         return
                      00618         
00039C                00619 COLOUR_TEST
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00620 
00039C                00621 LOOPING
                      00622         Delay50N delayR, 0x28
  0000                    M         local   loop
00039C 0E28               M         movlw   0x28
00039E 6E1B               M         movwf   delayR
                          M 
0003A0                    M loop
0003A0 EC?? F???          M         call    Delay50ms
0003A4 2E1B               M         decfsz  delayR
0003A6 EF?? F???          M         goto    loop
0003AA EC?? F???      00623         call    ClrLCD
                      00624         COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
0003AE EC?? F???          M         call    delay5ms
                          M         
                          M         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
0003B2 0E14               M         movlw   0x14
0003B4 6E??               M         movwf   regaddress
0003B6 EC?? F???          M         call    READ_COLOUR_I2C
0003BA C??? F040          M         movff   datachar, CLEAR+0
                          M         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
0003BE 0E15               M         movlw   0x15
0003C0 6E??               M         movwf   regaddress
0003C2 EC?? F???          M         call    READ_COLOUR_I2C
0003C6 C??? F041          M         movff   datachar, CLEAR+1
                          M                 
                          M         COLOUR_READ 0x16    ; read red colour address low, command bits set later
0003CA 0E16               M         movlw   0x16
0003CC 6E??               M         movwf   regaddress
0003CE EC?? F???          M         call    READ_COLOUR_I2C
0003D2 C??? F042          M         movff   datachar, RED+0
                          M         COLOUR_READ 0x17    ; read red colour address high, command bits set later
0003D6 0E17               M         movlw   0x17
0003D8 6E??               M         movwf   regaddress
0003DA EC?? F???          M         call    READ_COLOUR_I2C
0003DE C??? F043          M         movff   datachar, RED+1
                          M         
                          M         COLOUR_READ 0x18    ; read green colour address low, command bits set later
0003E2 0E18               M         movlw   0x18
0003E4 6E??               M         movwf   regaddress
0003E6 EC?? F???          M         call    READ_COLOUR_I2C
0003EA C??? F044          M         movff   datachar, GREEN+0
                          M         COLOUR_READ 0x19    ; read green colour address high, command bits set later
0003EE 0E19               M         movlw   0x19
0003F0 6E??               M         movwf   regaddress
0003F2 EC?? F???          M         call    READ_COLOUR_I2C
0003F6 C??? F045          M         movff   datachar, GREEN+1
                          M         
                          M         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
0003FA 0E1A               M         movlw   0x1a
0003FC 6E??               M         movwf   regaddress
0003FE EC?? F???          M         call    READ_COLOUR_I2C
000402 C??? F046          M         movff   datachar, BLUE+0
                          M         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
000406 0E1B               M         movlw   0x1b
000408 6E??               M         movwf   regaddress
00040A EC?? F???          M         call    READ_COLOUR_I2C
00040E C??? F047          M         movff   datachar, BLUE+1
                      00625         
000412 EC?? F???      00626         call    CHECK_CLEAR
000416 EC?? F???      00627         call    CHECK_RED
00041A EC?? F???      00628         call    CHECK_GREEN
00041E EC?? F???      00629         call    CHECK_BLUE
000422 D???           00630         bra LOOPING
                      00631         
000424                00632 EXECUTION
                      00633         ; save the starting time
000424 EC?? F???      00634         call        SAVE_TIME
                      00635                 
                      00636         ; display
000428 681F           00637         setf        inExecution
00042A EC?? F???      00638         call        ClrLCD
                      00639         Display     Exe1
  0000                    M         local   loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00042E 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000430 6EF8               M         movwf   TBLPTRU
000432 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000434 6EF7               M         movwf   TBLPTRH
000436 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000438 6EF6               M         movwf   TBLPTRL
00043A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00043C 50F5               M         movf    TABLAT, W
00043E                    M loop
00043E EC?? F???          M         call    WR_DATA         ; write to LCD
000442 000B               M         tblrd+*                 ; next row in table
000444 50F5               M         movf    TABLAT, W
000446 E1??               M         bnz     loop
000448 EC?? F???      00640         call        LCD_L2
                      00641 ;       Display     Exe2
                      00642         
00044C 0EC5           00643         movlw       0xc5                    ; setting up timer
00044E 6ED7           00644         movwf       TMR0H
000450 0E44           00645         movlw       0x44    
000452 6ED6           00646         movwf       TMR0L
                      00647         
000454 8ED5           00648         bsf         T0CON, TMR0ON           ; turning on timer
000456 EC?? F???      00649         call        ClearEEPROM_21
                      00650         
                      00651         ; initialize variables
00045A 6A18           00652         clrf        OP_sec
00045C 6A19           00653         clrf        OP_INT
00045E 6A40           00654         clrf        CLEAR
000460 6A44           00655         clrf        GREEN
000462 6A42           00656         clrf        RED
000464 6A46           00657         clrf        BLUE
                      00658         
                      00659 ;COLLECTIONS_STEP
                      00660 ;       
                      00661 ;TERM_CHECK
                      00662 ;       
                      00663 ;BOTTLE_CHECK
                      00664 ;
                      00665 ;COLOUR_ONE
                      00666 ;
                      00667 ;COLOUR_TWO
                      00668 ;       
                      00669 ;BRAINS
                      00670 ;       
                      00671 ;TRAY_STEP
                      00672 ;       
                      00673 
000466                00674 HOLD_EXE
000466 EC?? F???      00675         call        READ_KEY
                      00676         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
00046A 0E0C               M         movlw   keyS                ; poll for mode
00046C 6210               M         cpfseq  KEY                 ; check this against key press
00046E EF?? F???          M         goto    Exit
                          M 
000472                    M Next
000472 6A89               M         clrf    LATA                ; clear pins before proceeding
000474 6A8A               M         clrf    LATB
000476 6A8B               M         clrf    LATC
000478 6A8C               M         clrf    LATD
00047A EF?? F???          M         goto    EXIT_EXE
                          M 
00047E                    M Exit
00047E 0000               M         nop
000480 D???           00677         bra         HOLD_EXE
                      00678         
000482                00679 EXIT_EXE
                      00680         ; stop timer and save the time to eeprom
000482 9ED5           00681         bcf         T0CON, TMR0ON
                      00682         WriteEE     OP_sec, H_EE, L_EE
000484 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000488 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
00048C C018 FFA8          M         movff   OP_sec, EEDATA      ; set word
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000490 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000492 D???               M         bra     $-2
                          M 
000494 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000496 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000498 84A6               M         bsf     EECON1, WREN        ; enable write
00049A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00049C 98A1               M         bcf     PIR2, EEIF
                          M 
00049E 0E55               M         movlw   0x55
0004A0 6EA7               M         movwf   EECON2              ; write 55h
0004A2 0EAA               M         movlw   0xaa
0004A4 6EA7               M         movwf   EECON2              ; write 0xaa
0004A6 82A6               M         bsf     EECON1, WR          ; begin write
0004A8 B2A6               M         btfsc   EECON1, WR
0004AA D???               M         bra     $-2
                          M 
0004AC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004AE 94A6               M         bcf     EECON1, WREN        ; disable writes
0004B0 2A22           00683         incf        L_EE
                      00684         WriteEE     OP_INT, H_EE, L_EE
0004B2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004B6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004BA C019 FFA8          M         movff   OP_INT, EEDATA      ; set word
                          M 
0004BE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004C0 D???               M         bra     $-2
                          M 
0004C2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004C4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004C6 84A6               M         bsf     EECON1, WREN        ; enable write
0004C8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004CA 98A1               M         bcf     PIR2, EEIF
                          M 
0004CC 0E55               M         movlw   0x55
0004CE 6EA7               M         movwf   EECON2              ; write 55h
0004D0 0EAA               M         movlw   0xaa
0004D2 6EA7               M         movwf   EECON2              ; write 0xaa
0004D4 82A6               M         bsf     EECON1, WR          ; begin write
0004D6 B2A6               M         btfsc   EECON1, WR
0004D8 D???               M         bra     $-2
                          M 
0004DA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004DC 94A6               M         bcf     EECON1, WREN        ; disable writes
0004DE 2A22           00685         incf        L_EE
                      00686         
0004E0 EC?? F???      00687         call        SAVE_TIME
                      00688         
                      00689         ; Clear inExecution flag to stop '*' interrupts
0004E4 6A1F           00690         clrf        inExecution
0004E6 EF?? F???      00691         goto        SaveData
                      00692 
0004EA                00693 SaveData
0004EA EC?? F???      00694         call        ClrLCD
                      00695         Display     SAVE
  0000                    M         local   loop
0004EE 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0004F0 6EF8               M         movwf   TBLPTRU
0004F2 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0004F4 6EF7               M         movwf   TBLPTRH
0004F6 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0004F8 6EF6               M         movwf   TBLPTRL
0004FA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004FC 50F5               M         movf    TABLAT, W
0004FE                    M loop
0004FE EC?? F???          M         call    WR_DATA         ; write to LCD
000502 000B               M         tblrd+*                 ; next row in table
000504 50F5               M         movf    TABLAT, W
000506 E1??               M         bnz     loop
                      00696 
000508 0E00           00697         movlw       d'0'
00050A 6E21           00698         movwf       H_EE
00050C 0EA8           00699         movlw       d'168'              ; take d'168' as last
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00050E 6E22           00700         movwf       L_EE
000510 0E00           00701         movlw       d'0'
000512 6E24           00702         movwf       tempH_EE
000514 0EDC           00703         movlw       d'220'              ; temp for low constant
000516 6E25           00704         movwf       tempL_EE
                      00705         
000518 6A16           00706         clrf        counter2
00051A 6A15           00707         clrf        counter
                      00708 
00051C                00709 ShiftLoop
00051C 2A15           00710         incf            counter
                      00711         READEE          REG_EE, H_EE, L_EE
00051E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000522 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000526 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000528 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00052A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00052C CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000530 0E15           00712         movlw           d'21'
000532 2622           00713         addwf           L_EE
                      00714         WriteEE         REG_EE, H_EE, L_EE
000534 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000538 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
00053C C023 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000540 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000542 D???               M         bra     $-2
                          M 
000544 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000546 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000548 84A6               M         bsf     EECON1, WREN        ; enable write
00054A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00054C 98A1               M         bcf     PIR2, EEIF
                          M 
00054E 0E55               M         movlw   0x55
000550 6EA7               M         movwf   EECON2              ; write 55h
000552 0EAA               M         movlw   0xaa
000554 6EA7               M         movwf   EECON2              ; write 0xaa
000556 82A6               M         bsf     EECON1, WR          ; begin write
000558 B2A6               M         btfsc   EECON1, WR
00055A D???               M         bra     $-2
                          M 
00055C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00055E 94A6               M         bcf     EECON1, WREN        ; disable writes
000560 0E14           00715         movlw           d'20'
000562 5E22           00716         subwf           L_EE
000564 0E15           00717         movlw           d'21'
000566 6215           00718         cpfseq          counter
000568 EF?? F???      00719         goto            ShiftLoop
                      00720         
                      00721         ; Set EEPROM address to the previous 21 byte block, and reset temp address
00056C 0E2A           00722         movlw           d'42'
00056E 5E22           00723         subwf           L_EE
000570 0EDC           00724         movlw           d'220'
000572 6E25           00725         movwf           tempL_EE
000574 6A15           00726         clrf            counter
000576 2A16           00727         incf            counter2
000578 0E09           00728         movlw           d'9'
00057A 6216           00729         cpfseq          counter2        ; Skip if 9 shifts were made
00057C EF?? F???      00730         goto            ShiftLoop
                      00731         
                      00732         ; Finish Saving Data
000580 0E09           00733         movlw           d'9'
000582 6E22           00734         movwf           L_EE
                      00735         WriteEE         OP_sec, H_EE, L_EE
000584 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000588 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
00058C C018 FFA8          M         movff   OP_sec, EEDATA      ; set word
                          M 
000590 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000592 D???               M         bra     $-2
                          M 
000594 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000596 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000598 84A6               M         bsf     EECON1, WREN        ; enable write
00059A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00059C 98A1               M         bcf     PIR2, EEIF
                          M 
00059E 0E55               M         movlw   0x55
0005A0 6EA7               M         movwf   EECON2              ; write 55h
0005A2 0EAA               M         movlw   0xaa
0005A4 6EA7               M         movwf   EECON2              ; write 0xaa
0005A6 82A6               M         bsf     EECON1, WR          ; begin write
0005A8 B2A6               M         btfsc   EECON1, WR
0005AA D???               M         bra     $-2
                          M 
0005AC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0005AE 94A6               M         bcf     EECON1, WREN        ; disable writes
0005B0 2A22           00736         incf            L_EE
                      00737         WriteEE         OP_INT, H_EE, L_EE
0005B2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0005B6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0005BA C019 FFA8          M         movff   OP_INT, EEDATA      ; set word
                          M 
0005BE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0005C0 D???               M         bra     $-2
                          M 
0005C2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0005C4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0005C6 84A6               M         bsf     EECON1, WREN        ; enable write
0005C8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0005CA 98A1               M         bcf     PIR2, EEIF
                          M 
0005CC 0E55               M         movlw   0x55
0005CE 6EA7               M         movwf   EECON2              ; write 55h
0005D0 0EAA               M         movlw   0xaa
0005D2 6EA7               M         movwf   EECON2              ; write 0xaa
0005D4 82A6               M         bsf     EECON1, WR          ; begin write
0005D6 B2A6               M         btfsc   EECON1, WR
0005D8 D???               M         bra     $-2
                          M 
0005DA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0005DC 94A6               M         bcf     EECON1, WREN        ; disable writes
0005DE 2A22           00738         incf            L_EE
0005E0 EF?? F???      00739         goto            LOG
                      00740 
                      00741 ;*******************************************************************************
                      00742 ; sorting statistics log mode
                      00743 ;*******************************************************************************
                      00744         
0005E4                00745 LOG
0005E4 EC?? F???      00746         call    ClrLCD
                      00747         Display Log1
  0000                    M         local   loop
0005E8 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0005EA 6EF8               M         movwf   TBLPTRU
0005EC 0E??               M         movlw   high Log1       ; Move Table<15:8>
0005EE 6EF7               M         movwf   TBLPTRH
0005F0 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005F2 6EF6               M         movwf   TBLPTRL
0005F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005F6 50F5               M         movf    TABLAT, W
0005F8                    M loop
0005F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0005FC 000B               M         tblrd+*                 ; next row in table
0005FE 50F5               M         movf    TABLAT, W
000600 E1??               M         bnz     loop
                      00748 
                      00749         ; display most recent run data
000602 0E09           00750         movlw   d'9'
000604 6E22           00751         movwf   L_EE
                      00752         READEE  OP_sec, H_EE, L_EE
000606 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00060A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00060E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000610 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000612 80A6               M         bsf     EECON1, RD          ; read EEPROM
000614 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000618 2A22           00753         incf    L_EE
                      00754         READEE  OP_INT, H_EE, L_EE
00061A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00061E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000622 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000624 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000626 80A6               M         bsf     EECON1, RD          ; read EEPROM
000628 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00062C 2A22           00755         incf    L_EE
00062E EC?? F???      00756         call    DisplayExeTime
                      00757 
000632 EC?? F???      00758         call    LCD_L2
000636 6A22           00759         clrf    L_EE
000638 EC?? F???      00760         call    DispOpRTC
                      00761 
00063C                00762 HOLD_LOG
00063C EC?? F???      00763         call    READ_KEY
                      00764         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000640 0E07               M         movlw   keyB                ; poll for mode
000642 6210               M         cpfseq  KEY                 ; check this against key press
000644 EF?? F???          M         goto    Exit
                          M 
000648                    M Next
000648 6A89               M         clrf    LATA                ; clear pins before proceeding
00064A 6A8A               M         clrf    LATB
00064C 6A8B               M         clrf    LATC
00064E 6A8C               M         clrf    LATD
000650 EF?? F???          M         goto    LOG_INFO
                          M 
000654                    M Exit
000654 0000               M         nop
                      00765         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000656 0E0D               M         movlw   key0                ; poll for mode
000658 6210               M         cpfseq  KEY                 ; check this against key press
00065A EF?? F???          M         goto    Exit
                          M 
00065E                    M Next
00065E 6A89               M         clrf    LATA                ; clear pins before proceeding
000660 6A8A               M         clrf    LATB
000662 6A8B               M         clrf    LATC
000664 6A8C               M         clrf    LATD
000666 EF?? F???          M         goto    STANDBY
                          M 
00066A                    M Exit
00066A 0000               M         nop
00066C D???           00766         bra     HOLD_LOG
                      00767 
00066E                00768 LOG_INFO
00066E EC?? F???      00769         call    ClrLCD
                      00770         Display LogInfo1
  0000                    M         local   loop
000672 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
000674 6EF8               M         movwf   TBLPTRU
000676 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000678 6EF7               M         movwf   TBLPTRH
00067A 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
00067C 6EF6               M         movwf   TBLPTRL
00067E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000680 50F5               M         movf    TABLAT, W
000682                    M loop
000682 EC?? F???          M         call    WR_DATA         ; write to LCD
000686 000B               M         tblrd+*                 ; next row in table
000688 50F5               M         movf    TABLAT, W
00068A E1??               M         bnz     loop
00068C EC?? F???      00771         call    LCD_L2
                      00772         Display LogInfo2
  0000                    M         local   loop
000690 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000692 6EF8               M         movwf   TBLPTRU
000694 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000696 6EF7               M         movwf   TBLPTRH
000698 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
00069A 6EF6               M         movwf   TBLPTRL
00069C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00069E 50F5               M         movf    TABLAT, W
0006A0                    M loop
0006A0 EC?? F???          M         call    WR_DATA         ; write to LCD
0006A4 000B               M         tblrd+*                 ; next row in table
0006A6 50F5               M         movf    TABLAT, W
0006A8 E1??               M         bnz     loop
0006AA 6A21           00773         clrf    H_EE
0006AC 6A22           00774         clrf    L_EE
                      00775         DisplayLog  H_EE, L_EE
  0000                    M             local   Again, Finish
                          M             
0006AE 6A33               M             clrf    SkipCount
0006B0 6A27               M             clrf    MAX_EE
                          M 
                          M             ; Check if there is No Data first
                          M             READEE      REG_EE, H_EE,  L_EE
0006B2 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0006B6 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0006BA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006BC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0006BE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0006C0 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0006C4 0EFF               M             movlw       0xFF
0006C6 6223               M             cpfseq      REG_EE
0006C8 EF?? F???          M             goto        Again
                          M             Display     NoData
  0000                    M         local   loop
0006CC 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0006CE 6EF8               M         movwf   TBLPTRU
0006D0 0E??               M         movlw   high NoData     ; Move Table<15:8>
0006D2 6EF7               M         movwf   TBLPTRH
0006D4 0E??               M         movlw   low NoData      ; Move Table<7:0>
0006D6 6EF6               M         movwf   TBLPTRL
0006D8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006DA 50F5               M         movf    TABLAT, W
0006DC                    M loop
0006DC EC?? F???          M         call    WR_DATA         ; write to LCD
0006E0 000B               M         tblrd+*                 ; next row in table
0006E2 50F5               M         movf    TABLAT, W
0006E4 E1??               M         bnz     loop
0006E6 EF?? F???          M             goto        Finish
0006EA                    M Again
                          M             ; Put a space every 3 Writes
0006EA 0E03               M             movlw       d'3'
0006EC 6033               M             cpfslt      SkipCount
0006EE 6027               M             cpfslt      MAX_EE
0006F0 EF?? F???          M             goto        Finish
                          M 
                          M             ; read EEPROM
                          M             READEE      REG_EE, H_EE,  L_EE
0006F4 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0006F8 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0006FC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006FE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000700 80A6               M         bsf     EECON1, RD          ; read EEPROM
000702 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000706 BE23               M             btfsc       REG_EE, 7       ; if bit 7 set then done
000708 EF?? F???          M             goto        Finish
00070C                    M Finish
00070C                00776 HOLD_LOG_INFO
00070C EC?? F???      00777         call    READ_KEY
                      00778         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000710 0E0D               M         movlw   key0                ; poll for mode
000712 6210               M         cpfseq  KEY                 ; check this against key press
000714 EF?? F???          M         goto    Exit
                          M 
000718                    M Next
000718 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00071A 6A8A               M         clrf    LATB
00071C 6A8B               M         clrf    LATC
00071E 6A8C               M         clrf    LATD
000720 EF?? F???          M         goto    LOG
                          M 
000724                    M Exit
000724 0000               M         nop
000726 D???           00779         bra     HOLD_LOG
                      00780         
                      00781 ;*******************************************************************************
                      00782 ; permanent logs
                      00783 ;*******************************************************************************
                      00784 
000728                00785 PERM_LOG
000728 EC?? F???      00786         call    ClrLCD
                      00787         Display PermLog1
  0000                    M         local   loop
00072C 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00072E 6EF8               M         movwf   TBLPTRU
000730 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000732 6EF7               M         movwf   TBLPTRH
000734 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000736 6EF6               M         movwf   TBLPTRL
000738 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00073A 50F5               M         movf    TABLAT, W
00073C                    M loop
00073C EC?? F???          M         call    WR_DATA         ; write to LCD
000740 000B               M         tblrd+*                 ; next row in table
000742 50F5               M         movf    TABLAT, W
000744 E1??               M         bnz     loop
000746 EC?? F???      00788         call    LCD_L2
                      00789         Display PermLog2
  0000                    M         local   loop
00074A 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00074C 6EF8               M         movwf   TBLPTRU
00074E 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000750 6EF7               M         movwf   TBLPTRH
000752 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000754 6EF6               M         movwf   TBLPTRL
000756 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000758 50F5               M         movf    TABLAT, W
00075A                    M loop
00075A EC?? F???          M         call    WR_DATA         ; write to LCD
00075E 000B               M         tblrd+*                 ; next row in table
000760 50F5               M         movf    TABLAT, W
000762 E1??               M         bnz     loop
                      00790         
000764                00791 HOLD_PERM_LOG
000764 EC?? F???      00792         call    READ_KEY
                      00793         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000768 0E0D               M         movlw   key0                ; poll for mode
00076A 6210               M         cpfseq  KEY                 ; check this against key press
00076C EF?? F???          M         goto    Exit
                          M 
000770                    M Next
000770 6A89               M         clrf    LATA                ; clear pins before proceeding
000772 6A8A               M         clrf    LATB
000774 6A8B               M         clrf    LATC
000776 6A8C               M         clrf    LATD
000778 EF?? F???          M         goto    STANDBY
                          M 
00077C                    M Exit
00077C 0000               M         nop
                      00794         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00077E 0E00               M         movlw   key1                ; poll for mode
000780 6210               M         cpfseq  KEY                 ; check this against key press
000782 EF?? F???          M         goto    Exit
                          M 
000786                    M Next
000786 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000788 6A8A               M         clrf    LATB
00078A 6A8B               M         clrf    LATC
00078C 6A8C               M         clrf    LATD
00078E EF?? F???          M         goto    PLOG
                          M 
000792                    M Exit
000792 0000               M         nop
                      00795         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000794 0E01               M         movlw   key2                ; poll for mode
000796 6210               M         cpfseq  KEY                 ; check this against key press
000798 EF?? F???          M         goto    Exit
                          M 
00079C                    M Next
00079C 6A89               M         clrf    LATA                ; clear pins before proceeding
00079E 6A8A               M         clrf    LATB
0007A0 6A8B               M         clrf    LATC
0007A2 6A8C               M         clrf    LATD
0007A4 EF?? F???          M         goto    PLOG
                          M 
0007A8                    M Exit
0007A8 0000               M         nop
                      00796         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0007AA 0E02               M         movlw   key3                ; poll for mode
0007AC 6210               M         cpfseq  KEY                 ; check this against key press
0007AE EF?? F???          M         goto    Exit
                          M 
0007B2                    M Next
0007B2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007B4 6A8A               M         clrf    LATB
0007B6 6A8B               M         clrf    LATC
0007B8 6A8C               M         clrf    LATD
0007BA EF?? F???          M         goto    PLOG
                          M 
0007BE                    M Exit
0007BE 0000               M         nop
                      00797         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0007C0 0E04               M         movlw   key4                ; poll for mode
0007C2 6210               M         cpfseq  KEY                 ; check this against key press
0007C4 EF?? F???          M         goto    Exit
                          M 
0007C8                    M Next
0007C8 6A89               M         clrf    LATA                ; clear pins before proceeding
0007CA 6A8A               M         clrf    LATB
0007CC 6A8B               M         clrf    LATC
0007CE 6A8C               M         clrf    LATD
0007D0 EF?? F???          M         goto    PLOG
                          M 
0007D4                    M Exit
0007D4 0000               M         nop
                      00798         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0007D6 0E05               M         movlw   key5                ; poll for mode
0007D8 6210               M         cpfseq  KEY                 ; check this against key press
0007DA EF?? F???          M         goto    Exit
                          M 
0007DE                    M Next
0007DE 6A89               M         clrf    LATA                ; clear pins before proceeding
0007E0 6A8A               M         clrf    LATB
0007E2 6A8B               M         clrf    LATC
0007E4 6A8C               M         clrf    LATD
0007E6 EF?? F???          M         goto    PLOG
                          M 
0007EA                    M Exit
0007EA 0000               M         nop
                      00799         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007EC 0E06               M         movlw   key6                ; poll for mode
0007EE 6210               M         cpfseq  KEY                 ; check this against key press
0007F0 EF?? F???          M         goto    Exit
                          M 
0007F4                    M Next
0007F4 6A89               M         clrf    LATA                ; clear pins before proceeding
0007F6 6A8A               M         clrf    LATB
0007F8 6A8B               M         clrf    LATC
0007FA 6A8C               M         clrf    LATD
0007FC EF?? F???          M         goto    PLOG
                          M 
000800                    M Exit
000800 0000               M         nop
                      00800         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000802 0E08               M         movlw   key7                ; poll for mode
000804 6210               M         cpfseq  KEY                 ; check this against key press
000806 EF?? F???          M         goto    Exit
                          M 
00080A                    M Next
00080A 6A89               M         clrf    LATA                ; clear pins before proceeding
00080C 6A8A               M         clrf    LATB
00080E 6A8B               M         clrf    LATC
000810 6A8C               M         clrf    LATD
000812 EF?? F???          M         goto    PLOG
                          M 
000816                    M Exit
000816 0000               M         nop
                      00801         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000818 0E09               M         movlw   key8                ; poll for mode
00081A 6210               M         cpfseq  KEY                 ; check this against key press
00081C EF?? F???          M         goto    Exit
                          M 
000820                    M Next
000820 6A89               M         clrf    LATA                ; clear pins before proceeding
000822 6A8A               M         clrf    LATB
000824 6A8B               M         clrf    LATC
000826 6A8C               M         clrf    LATD
000828 EF?? F???          M         goto    PLOG
                          M 
00082C                    M Exit
00082C 0000               M         nop
                      00802         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
00082E 0E0A               M         movlw   key9                ; poll for mode
000830 6210               M         cpfseq  KEY                 ; check this against key press
000832 EF?? F???          M         goto    Exit
                          M 
000836                    M Next
000836 6A89               M         clrf    LATA                ; clear pins before proceeding
000838 6A8A               M         clrf    LATB
00083A 6A8B               M         clrf    LATC
00083C 6A8C               M         clrf    LATD
00083E EF?? F???          M         goto    PLOG
                          M 
000842                    M Exit
000842 0000               M         nop
000844 D???           00803         bra HOLD_PERM_LOG
                      00804         
000846                00805 PLOG
000846 EC?? F???      00806         call    ClrLCD
                      00807         Display PermLog1
  0000                    M         local   loop
00084A 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00084C 6EF8               M         movwf   TBLPTRU
00084E 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000850 6EF7               M         movwf   TBLPTRH
000852 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000854 6EF6               M         movwf   TBLPTRL
000856 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000858 50F5               M         movf    TABLAT, W
00085A                    M loop
00085A EC?? F???          M         call    WR_DATA         ; write to LCD
00085E 000B               M         tblrd+*                 ; next row in table
000860 50F5               M         movf    TABLAT, W
000862 E1??               M         bnz     loop
                      00808         
                      00809         ; find the key press value
000864 C010 FFE8      00810         movff   KEY, WREG
000868 2AE8           00811         incf    WREG        ; W = KEY+1
00086A 6E17           00812         movwf   temp
                      00813         
00086C 42E8           00814         rrncf   WREG        ; division by 4
00086E 9EE8           00815         bcf     WREG, 7     ; clear last bit, overflow from rotate
000870 42E8           00816         rrncf   WREG        
000872 9EE8           00817         bcf     WREG, 7
000874 5E17           00818         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000876 C017 FFE8      00819         movff   temp, WREG
00087A C017 F011      00820         movff   temp, temp_KEY
00087E 0D15           00821         mullw   d'21'       ; indexed as mutliples of 21
                      00822 
000880                00823 displayNum
000880 C011 FFE8      00824         movff   temp_KEY, WREG
000884 0F30           00825         addlw   0x30
000886 EC?? F???      00826         call    WR_DATA
00088A 0E3A           00827         movlw   ":"
00088C EC?? F???      00828         call    WR_DATA
000890 0E20           00829         movlw   " "
000892 EC?? F???      00830         call    WR_DATA
                      00831         
000896 CFF3 F022      00832         movff   PRODL, L_EE
00089A 0E00           00833         movlw   d'0'
00089C 2622           00834         addwf   L_EE
                      00835         READEE  OP_sec, H_EE, L_EE
00089E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0008A2 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0008A6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0008A8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0008AA 80A6               M         bsf     EECON1, RD          ; read EEPROM
0008AC CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0008B0 2A22           00836         incf    L_EE
                      00837         READEE  OP_INT, H_EE, L_EE
0008B2 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0008B6 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0008BA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0008BC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0008BE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0008C0 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0008C4 2A22           00838         incf    L_EE
0008C6 EC?? F???      00839         call    DisplayExeTime
0008CA CFF3 F022      00840         movff   PRODL, L_EE
                      00841         
                      00842         ; reset eeprom to beginning
0008CE EC?? F???      00843         call    LCD_L2
0008D2 CFF3 F022      00844         movff   PRODL, L_EE
0008D6 EC?? F???      00845         call    DispOpRTC
                      00846         
0008DA                00847 HOLD_PLOG
0008DA EC?? F???      00848         call    READ_KEY
                      00849         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0008DE 0E0D               M         movlw   key0                ; poll for mode
0008E0 6210               M         cpfseq  KEY                 ; check this against key press
0008E2 EF?? F???          M         goto    Exit
                          M 
0008E6                    M Next
0008E6 6A89               M         clrf    LATA                ; clear pins before proceeding
0008E8 6A8A               M         clrf    LATB
0008EA 6A8B               M         clrf    LATC
0008EC 6A8C               M         clrf    LATD
0008EE EF?? F???          M         goto    PERM_LOG
                          M 
0008F2                    M Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008F2 0000               M         nop
0008F4 D???           00850         bra HOLD_PLOG
                      00851         
                      00852 ;*******************************************************************************
                      00853 ; pc interface
                      00854 ;*******************************************************************************
                      00855 
0008F6                00856 PC_MODE
0008F6 EC?? F???      00857         call    ClrLCD
                      00858         Display PC1
  0000                    M         local   loop
0008FA 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0008FC 6EF8               M         movwf   TBLPTRU
0008FE 0E??               M         movlw   high PC1        ; Move Table<15:8>
000900 6EF7               M         movwf   TBLPTRH
000902 0E??               M         movlw   low PC1         ; Move Table<7:0>
000904 6EF6               M         movwf   TBLPTRL
000906 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000908 50F5               M         movf    TABLAT, W
00090A                    M loop
00090A EC?? F???          M         call    WR_DATA         ; write to LCD
00090E 000B               M         tblrd+*                 ; next row in table
000910 50F5               M         movf    TABLAT, W
000912 E1??               M         bnz     loop
000914 EC?? F???      00859         call    LCD_L2
                      00860         Display PC2
  0000                    M         local   loop
000918 0E??               M         movlw   upper PC2       ; Move Table<20:16>
00091A 6EF8               M         movwf   TBLPTRU
00091C 0E??               M         movlw   high PC2        ; Move Table<15:8>
00091E 6EF7               M         movwf   TBLPTRH
000920 0E??               M         movlw   low PC2         ; Move Table<7:0>
000922 6EF6               M         movwf   TBLPTRL
000924 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000926 50F5               M         movf    TABLAT, W
000928                    M loop
000928 EC?? F???          M         call    WR_DATA         ; write to LCD
00092C 000B               M         tblrd+*                 ; next row in table
00092E 50F5               M         movf    TABLAT, W
000930 E1??               M         bnz     loop
000932 CFF9 F03A      00861         movff   PCL, PC_PCL
000936 CFFA F03B      00862         movff   PCLATH, PC_PCLATH
00093A CFFB F03C      00863         movff   PCLATU, PC_PCLATU
                      00864         
00093E                00865 HOLD_PC
00093E EC?? F???      00866         call    READ_KEY
                      00867         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000942 0E0D               M         movlw   key0                ; poll for mode
000944 6210               M         cpfseq  KEY                 ; check this against key press
000946 EF?? F???          M         goto    Exit
                          M 
00094A                    M Next
00094A 6A89               M         clrf    LATA                ; clear pins before proceeding
00094C 6A8A               M         clrf    LATB
00094E 6A8B               M         clrf    LATC
000950 6A8C               M         clrf    LATD
000952 EF?? F???          M         goto    STANDBY
                          M 
000956                    M Exit
000956 0000               M         nop
                      00868         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000958 0E0E               M         movlw   keyH                ; poll for mode
00095A 6210               M         cpfseq  KEY                 ; check this against key press
00095C EF?? F???          M         goto    Exit
                          M 
000960                    M Next
000960 6A89               M         clrf    LATA                ; clear pins before proceeding
000962 6A8A               M         clrf    LATB
000964 6A8B               M         clrf    LATC
000966 6A8C               M         clrf    LATD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000968 EF?? F???          M         goto    PC_TRANSFER
                          M 
00096C                    M Exit
00096C 0000               M         nop
00096E D???           00869         bra     HOLD_PC
                      00870 
000970                00871 PC_TRANSFER
000970 6839           00872         setf    transferring
000972 EC?? F???      00873         call    ClrLCD
                      00874         Display PCTransfer
  0000                    M         local   loop
000976 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000978 6EF8               M         movwf   TBLPTRU
00097A 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
00097C 6EF7               M         movwf   TBLPTRH
00097E 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000980 6EF6               M         movwf   TBLPTRL
000982 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000984 50F5               M         movf    TABLAT, W
000986                    M loop
000986 EC?? F???          M         call    WR_DATA         ; write to LCD
00098A 000B               M         tblrd+*                 ; next row in table
00098C 50F5               M         movf    TABLAT, W
00098E E1??               M         bnz     loop
                      00875         ;call   DataUSART
000990 6A39           00876         clrf    transferring
000992 D???           00877         bra     HOLD_PC
                      00878         
                      00879 ;*******************************************************************************
                      00880 ; subroutines
                      00881 ;*******************************************************************************
                      00882 
000994                00883 RTC_INIT
                      00884         ; set sda and scl to high-z
000994 9882           00885         bcf     PORTC, 4
000996 9682           00886         bcf     PORTC, 3
000998 8894           00887         bsf     TRISC, 4
00099A 8694           00888         bsf     TRISC, 3
                      00889         
00099C EC?? F???      00890         call    i2c_common_setup
                      00891         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
0009A0 0012           00892 return
                      00893         
0009A2                00894 SAVE_TIME   
                      00895         rtc_read    0x02        ; hours
0009A2 0E02               M     movlw   0x02
0009A4 6E??               M     movwf   regaddress
0009A6 EC?? F???          M     call    read_rtc
0009AA 50??               M     movf    datachar,w
0009AC EC?? F???          M     call    rtc_convert
0009B0 EC?? F???      00896         call    WriteEE_RTC
                      00897         rtc_read    0x01        ; minutes
0009B4 0E01               M     movlw   0x01
0009B6 6E??               M     movwf   regaddress
0009B8 EC?? F???          M     call    read_rtc
0009BC 50??               M     movf    datachar,w
0009BE EC?? F???          M     call    rtc_convert
0009C2 EC?? F???      00898         call    WriteEE_RTC
                      00899         rtc_read    0x06        ; years
0009C6 0E06               M     movlw   0x06
0009C8 6E??               M     movwf   regaddress
0009CA EC?? F???          M     call    read_rtc
0009CE 50??               M     movf    datachar,w
0009D0 EC?? F???          M     call    rtc_convert
0009D4 EC?? F???      00900         call    WriteEE_RTC
                      00901         rtc_read    0x05        ; months
0009D8 0E05               M     movlw   0x05
0009DA 6E??               M     movwf   regaddress
0009DC EC?? F???          M     call    read_rtc
0009E0 50??               M     movf    datachar,w
0009E2 EC?? F???          M     call    rtc_convert
0009E6 EC?? F???      00902         call    WriteEE_RTC
                      00903         rtc_read    0x04        ; days
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009EA 0E04               M     movlw   0x04
0009EC 6E??               M     movwf   regaddress
0009EE EC?? F???          M     call    read_rtc
0009F2 50??               M     movf    datachar,w
0009F4 EC?? F???          M     call    rtc_convert
0009F8 EC?? F???      00904         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0009FC 0012           00905 return
                      00906                 
0009FE                00907 DISPLAY_RTC     
                      00908         ; display data in this format hh/minmin/yy yy/mm/dd
                      00909         rtc_read    0x02            ; 0x02 from DS1307 - hours
0009FE 0E02               M     movlw   0x02
000A00 6E??               M     movwf   regaddress
000A02 EC?? F???          M     call    read_rtc
000A06 50??               M     movf    datachar,w
000A08 EC?? F???          M     call    rtc_convert
000A0C C??? FFE8      00910         movff   tens_digit,WREG
000A10 EC?? F???      00911         call    WR_DATA
000A14 C??? FFE8      00912         movff   ones_digit,WREG
000A18 EC?? F???      00913         call    WR_DATA
000A1C 0E68           00914         movlw   "h"
000A1E EC?? F???      00915         call    WR_DATA
                      00916         
                      00917         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000A22 0E01               M     movlw   0x01
000A24 6E??               M     movwf   regaddress
000A26 EC?? F???          M     call    read_rtc
000A2A 50??               M     movf    datachar,w
000A2C EC?? F???          M     call    rtc_convert
000A30 C??? FFE8      00918         movff   tens_digit,WREG
000A34 EC?? F???      00919         call    WR_DATA
000A38 C??? FFE8      00920         movff   ones_digit,WREG
000A3C EC?? F???      00921         call    WR_DATA
                      00922         
                      00923         rtc_read    0x00            ; 0x01 from DS1307 - seconds
000A40 0E00               M     movlw   0x00
000A42 6E??               M     movwf   regaddress
000A44 EC?? F???          M     call    read_rtc
000A48 50??               M     movf    datachar,w
000A4A EC?? F???          M     call    rtc_convert
000A4E C??? FFE8      00924         movff   tens_digit,WREG
000A52 EC?? F???      00925         call    WR_DATA
000A56 C??? FFE8      00926         movff   ones_digit,WREG
000A5A EC?? F???      00927         call    WR_DATA
000A5E 0E20           00928         movlw   " "
000A60 EC?? F???      00929         call    WR_DATA
                      00930         
                      00931         rtc_read    0x06            ; 0x06 from DS1307 - years
000A64 0E06               M     movlw   0x06
000A66 6E??               M     movwf   regaddress
000A68 EC?? F???          M     call    read_rtc
000A6C 50??               M     movf    datachar,w
000A6E EC?? F???          M     call    rtc_convert
000A72 C??? FFE8      00932         movff   tens_digit,WREG
000A76 EC?? F???      00933         call    WR_DATA
000A7A C??? FFE8      00934         movff   ones_digit,WREG
000A7E EC?? F???      00935         call    WR_DATA
000A82 0E2F           00936         movlw   "/"
000A84 EC?? F???      00937         call    WR_DATA
                      00938         
                      00939         rtc_read    0x05            ; 0x05 from DS1307 - months
000A88 0E05               M     movlw   0x05
000A8A 6E??               M     movwf   regaddress
000A8C EC?? F???          M     call    read_rtc
000A90 50??               M     movf    datachar,w
000A92 EC?? F???          M     call    rtc_convert
000A96 C??? FFE8      00940         movff   tens_digit,WREG
000A9A EC?? F???      00941         call    WR_DATA
000A9E C??? FFE8      00942         movff   ones_digit,WREG
000AA2 EC?? F???      00943         call    WR_DATA
000AA6 0E2F           00944         movlw   "/"
000AA8 EC?? F???      00945         call    WR_DATA
                      00946         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00947         rtc_read    0x04            ; 0x04 from DS1307 - days
000AAC 0E04               M     movlw   0x04
000AAE 6E??               M     movwf   regaddress
000AB0 EC?? F???          M     call    read_rtc
000AB4 50??               M     movf    datachar,w
000AB6 EC?? F???          M     call    rtc_convert
000ABA C??? FFE8      00948         movff   tens_digit,WREG
000ABE EC?? F???      00949         call    WR_DATA
000AC2 C??? FFE8      00950         movff   ones_digit,WREG
000AC6 EC?? F???      00951         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000ACA 0012           00952 return
                      00953         
000ACC                00954 SET_TIME
                      00955         rtc_resetAll
                          M 
000ACC 6A??               M     clrf    databyte
000ACE 0E06               M     movlw   6
000AD0 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000AD2                    M     del_loop0
000AD2 EC?? F???          M     call    write_rtc
000AD6 2E??               M     decfsz  regaddress
000AD8 D???               M     bra     del_loop0
000ADA EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      00956         
                      00957         rtc_set 0x00,   b'10000000'
000ADE 0E00               M     movlw   0x00
000AE0 6E??               M     movwf   regaddress
000AE2 0E80               M     movlw   b'10000000'
000AE4 6E??               M     movwf   databyte
000AE6 EC?? F???          M     call    write_rtc
                      00958 
                      00959         rtc_set 0x06,   b'00010111'             ; Year 17
000AEA 0E06               M     movlw   0x06
000AEC 6E??               M     movwf   regaddress
000AEE 0E17               M     movlw   b'00010111'
000AF0 6E??               M     movwf   databyte
000AF2 EC?? F???          M     call    write_rtc
                      00960         rtc_set 0x05,   b'00000010'             ; Month 2
000AF6 0E05               M     movlw   0x05
000AF8 6E??               M     movwf   regaddress
000AFA 0E02               M     movlw   b'00000010'
000AFC 6E??               M     movwf   databyte
000AFE EC?? F???          M     call    write_rtc
                      00961         rtc_set 0x04,   b'00011001'             ; Date 19
000B02 0E04               M     movlw   0x04
000B04 6E??               M     movwf   regaddress
000B06 0E19               M     movlw   b'00011001'
000B08 6E??               M     movwf   databyte
000B0A EC?? F???          M     call    write_rtc
                      00962         rtc_set 0x02,   b'00010001'             ; Hours 11
000B0E 0E02               M     movlw   0x02
000B10 6E??               M     movwf   regaddress
000B12 0E11               M     movlw   b'00010001'
000B14 6E??               M     movwf   databyte
000B16 EC?? F???          M     call    write_rtc
                      00963         rtc_set 0x01,   b'00111000'             ; Minutes 38
000B1A 0E01               M     movlw   0x01
000B1C 6E??               M     movwf   regaddress
000B1E 0E38               M     movlw   b'00111000'
000B20 6E??               M     movwf   databyte
000B22 EC?? F???          M     call    write_rtc
                      00964         rtc_set 0x00,   b'00000000'             ; Seconds 0
000B26 0E00               M     movlw   0x00
000B28 6E??               M     movwf   regaddress
000B2A 0E00               M     movlw   b'00000000'
000B2C 6E??               M     movwf   databyte
000B2E EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000B32 0012           00965 return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00966         
000B34                00967 INIT_USART
000B34 0E0F           00968         movlw   15      ; baud rate 9600
000B36 6EAF           00969         movwf   SPBRG
000B38 6AAC           00970         clrf    TXSTA
                      00971         
000B3A 6AAB           00972         clrf    RCSTA
000B3C 8EAB           00973         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000B3E 88AB           00974         bsf     RCSTA,CREN      ; continous receive
                      00975         
000B40 8AAC           00976         bsf     TXSTA, TXEN     ; transmit enabled
000B42 0012           00977         return
                      00978 
                      00979 ;DataUSART
                      00980 ;       
                      00981 ;       movlw   0x02
                      00982 ;       call    USART_WAIT
                      00983 ;       movlw   0x0D
                      00984 ;       call    USART_WAIT
                      00985 ;       
                      00986 ;       movlw   d'21'       ; start of permanent logs
                      00987 ;       movff   w, L_EE
                      00988 ;       TransferTable   PCLog1
                      00989 ;       
                      00990 ;       ; display time here
                      00991 ;;      rtc_read        0x02
                      00992 ;;              movf        tens_digit, W
                      00993 ;;        andlw       b'00000001'
                      00994 ;;        addlw       0x30
                      00995 ;;        call        TransmitWaitUSART
                      00996 ;;        movf        ones_digit, W
                      00997 ;;        call        TransmitWaitUSART
                      00998 ;;              movlw           ":"
                      00999 ;;              call            TransmitWaitUSART
                      01000 ;;              ; Dispay minutes
                      01001 ;;              rtc_read        0x01
                      01002 ;;              call        SendRTC_USART
                      01003 ;;              ; Dispay AM/PM
                      01004 ;;              rtc_read        0x02
                      01005 ;;        movlw       "P"
                      01006 ;;        btfss       tens_digit, 1
                      01007 ;;        movlw       "A"
                      01008 ;;        call        TransmitWaitUSART
                      01009 ;;        movlw       "M"
                      01010 ;;        call        TransmitWaitUSART
                      01011 ;;              movlw           " "
                      01012 ;;        call        TransmitWaitUSART
                      01013 ;;              ; Display month
                      01014 ;;              rtc_read        0x05
                      01015 ;;              call        SendRTC_USART
                      01016 ;;              movlw           0x2F            ; ASCII '/'
                      01017 ;;              call            TransmitWaitUSART
                      01018 ;;              ; Display day
                      01019 ;;              rtc_read        0x04
                      01020 ;;              call        SendRTC_USART
                      01021 ;;              movlw           0x2F            ; ASCII '/'
                      01022 ;;              call            TransmitWaitUSART
                      01023 ;;              ; Display year
                      01024 ;;              rtc_read        0x06
                      01025 ;;              call        SendRTC_USART
                      01026 ;       
                      01027 ;       call    USART_LINE
                      01028 ;       call    USART_LINE
                      01029 ;       
                      01030 ;       clrf    counter
                      01031 ;       incf    counter
                      01032 ;
                      01033 ;USART_TRANSFER
                      01034 ;       movlw   d'21'
                      01035 ;       mulwf   counter
                      01036 ;       movff   PRODL, L_EE
                      01037 ;       movlw   d'9'
                      01038 ;       addwf   L_EE
                      01039 ;       READEE  OP_sec, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01040 ;       incf    L_EE
                      01041 ;       READEE  OP_INT, H_EE, L_EE
                      01042 ;       incf    L_EE
                      01043 ;       ; call  TransferTime
                      01044 ;       
                      01045 ;       ; send rtc
                      01046 ;       movlw   0x09
                      01047 ;       call    USART_WAIT
                      01048 ;       movff   PRODL, L_EE
                      01049 ;       ;call   TransferRTC
                      01050 ;       call    USART_LINE
                      01051 ;       
                      01052 ;       
                      01053 ;       
                      01054 ;       
                      01055 ;USART_WAIT
                      01056 ;       movwf   TXREG
                      01057 ;       btfss   TXSTA,1
                      01058 ;       goto    $-2
                      01059 ;       return
                      01060 ;
                      01061 ;USART_LINE
                      01062 ;       movlw   0x0A
                      01063 ;       call    USART_WAIT
                      01064 ;       movlw   0x0D
                      01065 ;       call    USART_WAIT
                      01066 ;       return
                      01067         
                      01068         
000B44                01069 Delay5us
000B44 0E78           01070         movlw   d'120'
000B46 6E1C           01071         movwf   d5us
                      01072 
000B48                01073 loop5us
000B48 2E1C           01074         decfsz  d5us
000B4A EF?? F???      01075         goto    loop5us
000B4E 0000           01076         nop
000B50 0012           01077         return
                      01078 
000B52                01079 Delay200us
000B52 0EA4           01080         movlw   0xA4
000B54 6E1D           01081         movwf   d200us
                      01082 
000B56                01083 loop200us
000B56 2E1D           01084         decfsz  d200us
000B58 EF?? F???      01085         goto    loop200us
000B5C 0000           01086         nop
000B5E 0012           01087         return
                      01088 
000B60                01089 Delay50ms
000B60 0EF9           01090         movlw   0xF9
000B62 6E1E           01091         movwf   d50ms
                      01092 
000B64                01093 loop50ms
000B64 EC?? F???      01094         call    Delay200us
000B68 2E1E           01095         decfsz  d50ms
                      01096 
000B6A                01097 Cycles
000B6A EF?? F???      01098         goto    loop50ms
000B6E EC?? F???      01099         call    Delay200us
000B72 0012           01100         return
                      01101 
000B74                01102 WriteEE_RTC
                      01103         WriteEE tens_digit, H_EE, L_EE
000B74 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000B78 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000B7C C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000B80 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B82 D???               M         bra     $-2
                          M 
000B84 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B86 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B88 84A6               M         bsf     EECON1, WREN        ; enable write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B8A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B8C 98A1               M         bcf     PIR2, EEIF
                          M 
000B8E 0E55               M         movlw   0x55
000B90 6EA7               M         movwf   EECON2              ; write 55h
000B92 0EAA               M         movlw   0xaa
000B94 6EA7               M         movwf   EECON2              ; write 0xaa
000B96 82A6               M         bsf     EECON1, WR          ; begin write
000B98 B2A6               M         btfsc   EECON1, WR
000B9A D???               M         bra     $-2
                          M 
000B9C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B9E 94A6               M         bcf     EECON1, WREN        ; disable writes
000BA0 2A22           01104         incf    L_EE
                      01105         WriteEE ones_digit, H_EE, L_EE
000BA2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BA6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BAA C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000BAE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BB0 D???               M         bra     $-2
                          M 
000BB2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BB4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BB6 84A6               M         bsf     EECON1, WREN        ; enable write
000BB8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BBA 98A1               M         bcf     PIR2, EEIF
                          M 
000BBC 0E55               M         movlw   0x55
000BBE 6EA7               M         movwf   EECON2              ; write 55h
000BC0 0EAA               M         movlw   0xaa
000BC2 6EA7               M         movwf   EECON2              ; write 0xaa
000BC4 82A6               M         bsf     EECON1, WR          ; begin write
000BC6 B2A6               M         btfsc   EECON1, WR
000BC8 D???               M         bra     $-2
                          M 
000BCA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BCC 94A6               M         bcf     EECON1, WREN        ; disable writes
000BCE 2A22           01106         incf    L_EE
000BD0 0012           01107         return
                      01108 
000BD2                01109 ClearEEPROM_21
000BD2 6A21           01110         clrf    H_EE
000BD4 6A22           01111         clrf    L_EE
000BD6 6820           01112         setf    clear_EE
000BD8 6A15           01113         clrf    counter
000BDA                01114 ClearNext
                      01115         WriteEE         clear_EE, H_EE, L_EE
000BDA C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BDE C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BE2 C020 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000BE6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BE8 D???               M         bra     $-2
                          M 
000BEA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BEC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BEE 84A6               M         bsf     EECON1, WREN        ; enable write
000BF0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BF2 98A1               M         bcf     PIR2, EEIF
                          M 
000BF4 0E55               M         movlw   0x55
000BF6 6EA7               M         movwf   EECON2              ; write 55h
000BF8 0EAA               M         movlw   0xaa
000BFA 6EA7               M         movwf   EECON2              ; write 0xaa
000BFC 82A6               M         bsf     EECON1, WR          ; begin write
000BFE B2A6               M         btfsc   EECON1, WR
000C00 D???               M         bra     $-2
                          M 
000C02 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C04 94A6               M         bcf     EECON1, WREN        ; disable writes
000C06 2A15           01116         incf            counter
000C08 2A22           01117         incf            L_EE
000C0A 0E15           01118         movlw           d'21'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C0C 6215           01119         cpfseq          counter
000C0E EF?? F???      01120         goto            ClearNext
000C12 6A21           01121         clrf            H_EE
000C14 6A22           01122         clrf            L_EE
000C16 0012           01123         return
                      01124         
000C18                01125 READ_KEY
000C18 A281           01126         btfss   PORTB, 1        ; check for keypad interrupt
000C1A EF?? F???      01127         goto    READ_KEY
000C1E 3881           01128         swapf   PORTB, W
000C20 0B0F           01129         andlw   0x0F
000C22 6E10           01130         movwf   KEY
000C24 B281           01131         btfsc   PORTB, 1
000C26 EF?? F???      01132         goto    $-2
000C2A 0012           01133         return
                      01134 
000C2C                01135 READ_KEY_TIME
000C2C EC?? F???      01136         call        LCD_L2          ; go to second line to print RTC
                      01137 
                      01138         ; display the time
000C30 EC?? F???      01139         call    DISPLAY_RTC
                      01140 
000C34 A281           01141         btfss       PORTB, 1    ; keypad interrupt
000C36 EF?? F???      01142         goto        READ_KEY_TIME
000C3A 3881           01143         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000C3C 0B0F           01144         andlw       0x0F        ; only want W3:0
000C3E 6E10           01145         movwf       KEY         ; write this value to the KEY
000C40 B281           01146         btfsc       PORTB, 1    ; wait for release
000C42 EF?? F???      01147         goto        $-2         ; go back one instruction
000C46 0012           01148         return
                      01149 
000C48                01150 DisplayExeTime
                      01151         READEE  REG_EE, H_EE, L_EE
000C48 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C4C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C50 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C52 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C54 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C56 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000C5A 0EFF           01152         movlw   0xFF
000C5C 6223           01153         cpfseq  REG_EE
000C5E EF?? F???      01154         goto    NoSkipDispExeTime
                      01155         Display NoData
  0000                    M         local   loop
000C62 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000C64 6EF8               M         movwf   TBLPTRU
000C66 0E??               M         movlw   high NoData     ; Move Table<15:8>
000C68 6EF7               M         movwf   TBLPTRH
000C6A 0E??               M         movlw   low NoData      ; Move Table<7:0>
000C6C 6EF6               M         movwf   TBLPTRL
000C6E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C70 50F5               M         movf    TABLAT, W
000C72                    M loop
000C72 EC?? F???          M         call    WR_DATA         ; write to LCD
000C76 000B               M         tblrd+*                 ; next row in table
000C78 50F5               M         movf    TABLAT, W
000C7A E1??               M         bnz     loop
000C7C 0EFF           01156         movlw   0xFF
000C7E 6023           01157         cpfslt  REG_EE
000C80 EF?? F???      01158         goto    SkipDispExeTime
000C84 0012           01159         return
                      01160 
000C86                01161 NoSkipDispExeTime
Warning[202]: Argument out of range.  Least significant bits used.
000C86 3818           01162         swapf   OP_sec, WREG    ; 100's seconds
000C88 6E17           01163         movwf   temp
000C8A 0E0F           01164         movlw   0x0F
000C8C 1617           01165         andwf   temp
000C8E C017 FFE8      01166         movff   temp, WREG
000C92 0F30           01167         addlw   0x30
000C94 EC?? F???      01168         call    WR_DATA
                      01169 
000C98 C018 F017      01170         movff   OP_sec, temp    ; 10's seconds
000C9C 0E0F           01171         movlw   0x0F
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C9E 1617           01172         andwf   temp            ; Temp = lower nibble of Op_sec
000CA0 C017 FFE8      01173         movff   temp, WREG      ; W = Temp
000CA4 0F30           01174         addlw   0x30            ; Convert to ASCII
000CA6 EC?? F???      01175         call    WR_DATA
                      01176         
Warning[202]: Argument out of range.  Least significant bits used.
000CAA 3819           01177         swapf   OP_INT, WREG    ;1's seconds
000CAC 6E17           01178         movwf   temp
000CAE 0E0F           01179         movlw   0x0f
000CB0 1617           01180         andwf   temp
000CB2 C017 FFE8      01181         movff   temp, WREG
000CB6 0F30           01182         addlw   0x30
000CB8 EC?? F???      01183         call    WR_DATA
                      01184 
000CBC 0E73           01185         movlw   0x73            ; Write 's'
000CBE EC?? F???      01186         call    WR_DATA
000CC2 EC?? F???      01187         call    LCD_L2
000CC6                01188 SkipDispExeTime
000CC6 0012           01189         return
                      01190 
000CC8                01191 DispOpRTC
000CC8 0E02           01192         movlw   d'2'
000CCA 2622           01193         addwf   L_EE
                      01194 
                      01195         READEE  REG_EE, H_EE, L_EE
000CCC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CD0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CD4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CD6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CD8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CDA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000CDE 0EFF           01196         movlw   0xff
000CE0 6223           01197         cpfseq  REG_EE
000CE2 EF?? F???      01198         goto    NoSkipDispOpRTC
                      01199         Display NoData
  0000                    M         local   loop
000CE6 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000CE8 6EF8               M         movwf   TBLPTRU
000CEA 0E??               M         movlw   high NoData     ; Move Table<15:8>
000CEC 6EF7               M         movwf   TBLPTRH
000CEE 0E??               M         movlw   low NoData      ; Move Table<7:0>
000CF0 6EF6               M         movwf   TBLPTRL
000CF2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CF4 50F5               M         movf    TABLAT, W
000CF6                    M loop
000CF6 EC?? F???          M         call    WR_DATA         ; write to LCD
000CFA 000B               M         tblrd+*                 ; next row in table
000CFC 50F5               M         movf    TABLAT, W
000CFE E1??               M         bnz     loop
000D00 0EFF           01200         movlw   0xff
000D02 6023           01201         cpfslt  REG_EE
000D04 EF?? F???      01202         goto    SkipDispOpRTC
                      01203 
000D08                01204 NoSkipDispOpRTC
                      01205         READEE  REG_EE, H_EE, L_EE
000D08 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D0C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D10 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D12 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D14 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D16 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D1A C023 FFE8      01206         movff   REG_EE, WREG
000D1E 0BF1           01207         andlw   b'11110001'
000D20 EC?? F???      01208         call    WR_DATA
                      01209         
000D24 2A22           01210         incf    L_EE
                      01211         READEE  REG_EE, H_EE, L_EE
000D26 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D2A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D2E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D30 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D32 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D34 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D38 C023 FFE8      01212         movff   REG_EE, WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  22:45:28         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D3C EC?? F???      01213         call    WR_DATA
000D40 2A22           01214         incf    L_EE
                      01215 
000D42 0E68           01216         movlw           "h"
000D44 EC?? F???      01217         call            WR_DATA
                      01218         
000D48 EC?? F???      01219         call DispOpRTC_Helper
                      01220         
000D4C 0E20           01221         movlw           " "
000D4E EC?? F???      01222         call            WR_DATA
                      01223         
000D52 EC?? F???      01224         call DispOpRTC_Helper
000D56 0E2F           01225         movlw           "/"
000D58 EC?? F???      01226         call            WR_DATA
                      01227 
000D5C EC?? F???      01228         call DispOpRTC_Helper
000D60 0E2F           01229         movlw           "/"
000D62 EC?? F???      01230         call            WR_DATA
000D66 EC?? F???      01231         call DispOpRTC_Helper
000D6A                01232 SkipDispOpRTC
000D6A 0012           01233                 return
000D6C                01234 DispOpRTC_Helper
                      01235         READEE          REG_EE, H_EE, L_EE
000D6C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D70 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D74 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D76 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D78 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D7A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D7E C023 FFE8      01236         movff           REG_EE, WREG
000D82 EC?? F???      01237         call            WR_DATA
000D86 2A22           01238         incf            L_EE
                      01239         READEE          REG_EE, H_EE, L_EE
000D88 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D8C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D90 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D92 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D94 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D96 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D9A C023 FFE8      01240         movff           REG_EE, WREG
000D9E EC?? F???      01241         call            WR_DATA
000DA2 2A22           01242         incf            L_EE
000DA4 0012           01243         return
Warning[205]: Found directive in column 1. (end)
                      01244 end

Errors   :     0
Warnings :    65 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

