MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... Standing by", 0
       676E 6220 2079 
       2E2E 202E 7453 
       6E61 6964 676E 
       6220 0079 
Warning[207]: Found label after column 1. (StandbyInfo)
00002C 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
       7265 206D 6F4C 
       7367 3C20 3E44 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000054 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00005A 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000068 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000070 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00007A 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00008A 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
000096 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000A2 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000AA 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000B8 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000C2 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000D2 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000DC 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000E6 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127 
                      00128 TransferTable macro table
                      00129         local loop
                      00130         
                      00131         movlw   upper table
                      00132         movwf   TBLPTRU
                      00133         movlw   high table
                      00134         movwf   TBLPTRH
                      00135         movlw   low table
                      00136         movwf   TBLPTRL
                      00137         tblrd*
                      00138         movff   TABLAT, WREG
                      00139 loop
                      00140         call    USART_WAIT
                      00141         tblrd+*
                      00142         movff   TABLAT, WREG
                      00143         bnz     loop
                      00144         endm
                      00145         
                      00146 ConfigLCD   macro
                      00147           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00148           call      WR_INS
                      00149 
                      00150           movlw     b'00001100'    ; display on/off
                      00151           call      WR_INS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00152           movlw     b'00000001'    ; Clear ram
                      00153           call      WR_INS
                      00154           endm
                      00155         
                      00156 movMSB  macro   port
                      00157         andlw   0xF0
                      00158         iorwf   port, f
                      00159         iorlw   0x0F
                      00160         andwf   port, f
                      00161         endm
                      00162 
                      00163 Delay50N macro count, N
                      00164         local   loop
                      00165         movlw   N
                      00166         movwf   count
                      00167 
                      00168 loop
                      00169         call    Delay50ms
                      00170         decfsz  count
                      00171         goto    loop
                      00172         endm
                      00173 
                      00174 Display macro   Message
                      00175         local   loop
                      00176         movlw   upper Message   ; Move Table<20:16>
                      00177         movwf   TBLPTRU
                      00178         movlw   high Message    ; Move Table<15:8>
                      00179         movwf   TBLPTRH
                      00180         movlw   low Message     ; Move Table<7:0>
                      00181         movwf   TBLPTRL
                      00182         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00183         movf    TABLAT, W
                      00184 loop
                      00185         call    WR_DATA         ; write to LCD
                      00186         tblrd+*                 ; next row in table
                      00187         movf    TABLAT, W
                      00188         bnz     loop
                      00189         endm
                      00190 
                      00191 DisplayLog  macro   addrH, addrL
                      00192             local   Again, Finish
                      00193             
                      00194             clrf    SkipCount
                      00195             clrf    MAX_EE
                      00196 
                      00197             ; Check if there is No Data first
                      00198             READEE      REG_EE, addrH, addrL
                      00199             movlw       0xFF
                      00200             cpfseq      REG_EE
                      00201             goto        Again
                      00202             Display     NoData
                      00203             goto        Finish
                      00204 Again
                      00205             ; Put a space every 3 Writes
                      00206             movlw       d'3'
                      00207             cpfslt      SkipCount
                      00208             cpfslt      MAX_EE
                      00209             goto        Finish
                      00210 
                      00211             ; read EEPROM
                      00212             READEE      REG_EE, addrH, addrL
                      00213             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00214             goto        Finish
                      00215 Finish
                      00216             endm        
                      00217 
                      00218 incf_BCD    macro   BCD
                      00219         local ones, endBCD
                      00220         movff   BCD, temp
                      00221         
                      00222         ;process ones digit
                      00223         movlw   0x0f
                      00224         andwf   temp
                      00225         movlw   d'9'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00226         
                      00227         ;skip if ones digit is 9
                      00228         cpfseq  temp
                      00229         goto    ones
                      00230         
                      00231         movlw   b'00010000'
                      00232         addwf   BCD
                      00233         movlw   0xf0
                      00234         andwf   BCD
                      00235         movlw   0xa0
                      00236         cpfslt  BCD
                      00237         
                      00238         clrf    BCD
                      00239         goto    endBCD
                      00240         
                      00241 ones
                      00242         incf    BCD
                      00243         goto    endBCD
                      00244 endBCD
                      00245         nop
                      00246         endm
                      00247         
                      00248 SUB16   macro   x, y        ; does not modify x nor y
                      00249         local   RESULTS
                      00250         movff   y+1, WREG   ; move high y into working register
                      00251         subwf   x+1, 0      ; do subtraction xH - yH => w
                      00252         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00253         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                      00254         
                      00255         movff   y+0, WREG
                      00256         subwf   x+0, 0  
                      00257 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00258         endm
                      00259 
                      00260 WriteRTC    macro
                      00261         movff   tens_digit, WREG
                      00262         call    WR_DATA
                      00263         movff   ones_digit, WREG
                      00264         call    WR_DATA
                      00265         endm
                      00266 
                      00267 WriteEE macro   word, addH, addL
                      00268         movff   addH, EEADRH        ; High address
                      00269         movff   addL, EEADR         ; Low address
                      00270         movff   word, EEDATA        ; set word
                      00271 
                      00272         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00273         bra     $-2
                      00274 
                      00275         bcf     EECON1, EEPGD       ; Point to data memory
                      00276         bcf     EECON1, CFGS        ; Access EEPROM
                      00277         bsf     EECON1, WREN        ; enable write
                      00278         bcf     INTCON, GIE         ; disable interrupts during write
                      00279         bcf     PIR2, EEIF
                      00280 
                      00281         movlw   0x55
                      00282         movwf   EECON2              ; write 55h
                      00283         movlw   0xaa
                      00284         movwf   EECON2              ; write 0xaa
                      00285         bsf     EECON1, WR          ; begin write
                      00286         btfsc   EECON1, WR
                      00287         bra     $-2
                      00288 
                      00289         bsf     INTCON, GIE         ; enable interrupts after write
                      00290         bcf     EECON1, WREN        ; disable writes
                      00291         endm
                      00292 
                      00293 READEE  macro   file, addH, addL
                      00294         movff   addH, EEADRH        ; read to high
                      00295         movff   addL, EEADR         ; read to low
                      00296         bcf     EECON1, EEPGD       ; point to data memory
                      00297         bcf     EECON1, CFGS        ; access to EEPROM
                      00298         bsf     EECON1, RD          ; read EEPROM
                      00299         movff   EEDATA, file        ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00300         endm
                      00301 
                      00302 ChangeMode  macro   ModeId, NextMode
                      00303         local Next, Exit
                      00304 
                      00305         movlw   ModeId              ; poll for mode
                      00306         cpfseq  KEY                 ; check this against key press
                      00307         goto    Exit
                      00308 
                      00309 Next
                      00310         clrf    LATA                ; clear pins before proceeding
                      00311         clrf    LATB
                      00312         clrf    LATC
                      00313         clrf    LATD
                      00314         goto    NextMode
                      00315 
                      00316 Exit
                      00317         nop
                      00318         endm
                      00319 
                      00320 saveContext macro
                      00321     movff   STATUS, temp_S          ; save STATUS first
                      00322     movwf   temp_W                  ; save W
                      00323     endm
                      00324 
                      00325 restoreContext macro
                      00326     swapf   temp_W, 0               ; restore W first
                      00327     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00328     endm
                      00329 ;*******************************************************************************
                      00330 ; reset vector and isrs
                      00331 ;*******************************************************************************
                      00332         ORG     0x000               ; processor reset vector
000000 EF?? F???      00333         goto    INIT                ; go to beginning of program
                      00334 
                      00335         ORG     0x008
000008 EF?? F???      00336         goto    ISR_HIGH
                      00337 
                      00338         ORG     0x018
000018 EF?? F???      00339         goto    ISR_LOW
                      00340 
00001C                00341 LOAD_STANDBY_TIME
00001C 0EFF           00342         movlw   0xff
00001E 6ED7           00343         movwf   TMR0H
000020 0EFF           00344         movlw   0xff
000022 6ED6           00345         movwf   TMR0L
                      00346 
000024 0012           00347         return  
                      00348 
000026                00349 LOAD_EXE_TIME
000026 0EC5           00350         movlw   0xc5
000028 6ED7           00351         movwf   TMR0H
00002A 0E44           00352         movlw   0x44
00002C 6ED6           00353         movwf   TMR0L
                      00354         
00002E 0012           00355         return
                      00356         
000030                00357 ISR_HIGH
                      00358         saveContext
000030 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000034 6E14               M     movwf   temp_W                  ; save W
                      00359         
000036 0E00           00360         movlw   0x00
000038 6238           00361         cpfseq  inStandby
00003A EC?? F???      00362         call    Shift
                      00363         
                      00364         ;reset timer, but need to check which time increment 
00003E 0E00           00365         movlw   0x00
000040 6238           00366         cpfseq  inStandby
000042 EC?? F???      00367         call    LOAD_STANDBY_TIME
                      00368         
000046 0EFF           00369         movlw   0xff
000048 6238           00370         cpfseq  inStandby
00004A EC?? F???      00371         call    LOAD_EXE_TIME
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00372 
                      00373                 
                      00374         ; displaying the execution time in seconds
                      00375 ;       swapf   OP_sec, 0       ; 100's seconds
                      00376 ;       movwf   temp
                      00377 ;       movlw   0x0f
                      00378 ;       andwf   temp
                      00379 ;       movff   temp, WREG
                      00380 ;       addlw   0x30
                      00381 ;       call    WR_DATA
                      00382 ;
                      00383 ;       movff   OP_sec, temp    ; 10's seconds
                      00384 ;       movlw   0x0f
                      00385 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00386 ;       movff   temp, WREG      ; W = Temp
                      00387 ;       addlw   0x30            ; Convert to ASCII
                      00388 ;       call    WR_DATA
                      00389 ;       
                      00390 ;       swapf   OP_INT, WREG    ;1's seconds
                      00391 ;       movwf   temp
                      00392 ;       movlw   0x0f
                      00393 ;       andwf   temp
                      00394 ;       movff   temp, WREG
                      00395 ;       addlw   0x30
                      00396 ;       call    WR_DATA
                      00397 ;
                      00398 ;       movlw   0x73            ; Write 's'
                      00399 ;       call    WR_DATA
                      00400 ;       call    LCD_L2
                      00401                 
                      00402         ;timer interrupt
00004E A4F2           00403         btfss   INTCON, TMR0IF
000050 EF?? F???      00404         goto    END_ISR_HIGH
                      00405         
                      00406         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000054 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000058 0E0F               M         movlw   0x0f
00005A 1617               M         andwf   temp
00005C 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00005E 6217               M         cpfseq  temp
000060 EF?? F???          M         goto    ones
                          M         
000064 0E10               M         movlw   b'00010000'
000066 2619               M         addwf   OP_INT
000068 0EF0               M         movlw   0xf0
00006A 1619               M         andwf   OP_INT
00006C 0EA0               M         movlw   0xa0
00006E 6019               M         cpfslt  OP_INT
                          M         
000070 6A19               M         clrf    OP_INT
000072 EF?? F???          M         goto    endBCD
                          M         
000076                    M ones
000076 2A19               M         incf    OP_INT
000078 EF?? F???          M         goto    endBCD
00007C                    M endBCD
00007C 0000               M         nop
00007E 0E00           00407         movlw   d'0'
000080 6219           00408         cpfseq  OP_INT
000082 EF?? F???      00409         goto    END_ISR_HIGH
                      00410         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000086 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
00008A 0E0F               M         movlw   0x0f
00008C 1617               M         andwf   temp
00008E 0E09               M         movlw   d'9'
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;skip if ones digit is 9
000090 6217               M         cpfseq  temp
000092 EF?? F???          M         goto    ones
                          M         
000096 0E10               M         movlw   b'00010000'
000098 2618               M         addwf   OP_sec
00009A 0EF0               M         movlw   0xf0
00009C 1618               M         andwf   OP_sec
00009E 0EA0               M         movlw   0xa0
0000A0 6018               M         cpfslt  OP_sec
                          M         
0000A2 6A18               M         clrf    OP_sec
0000A4 EF?? F???          M         goto    endBCD
                          M         
0000A8                    M ones
0000A8 2A18               M         incf    OP_sec
0000AA EF?? F???          M         goto    endBCD
0000AE                    M endBCD
0000AE 0000               M         nop
                      00411 
0000B0                00412 END_ISR_HIGH
0000B0 94F2           00413         bcf     INTCON, TMR0IF
                      00414         restoreContext
0000B2 3814               M     swapf   temp_W, 0               ; restore W first
0000B4 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000B8 0010           00415         retfie
                      00416 
0000BA                00417 ISR_LOW
                      00418         saveContext
0000BA CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000BE 6E14               M     movwf   temp_W                  ; save W
                      00419         ; KEYPAD INTERRUPT
0000C0 A0F0           00420         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000C2 EF?? F???      00421         goto    END_ISR_LOW
                      00422 
                      00423         ; check operation status
0000C6 0EFF           00424         movlw   0xff                    ; If in operation, skip return
0000C8 621E           00425         cpfseq  inExecution
0000CA EF?? F???      00426         goto    END_ISR_LOW
                      00427 
                      00428         ; process KEY
0000CE 3881           00429         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D0 0B0F           00430         andlw   0x0f
0000D2 6E12           00431         movwf   KEY_ISR
                      00432         
0000D4 0E0C           00433         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000D6 6212           00434         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000D8 EF?? F???      00435         goto    END_ISR_LOW
                      00436         
                      00437         ; reset program counter - emergency stop recorded. 
0000DC 9ED5           00438         bcf     T0CON, TMR0ON
0000DE EC?? F???      00439         call    SAVE_EXE_TIME
                      00440                 
                      00441         ; Clear inExecution flag to stop '*' interrupts
0000E2 6A1E           00442         clrf    inExecution
0000E4 0E01           00443         movlw   d'1'
0000E6 6E37           00444         movwf   STOP_CONDITION
0000E8 EC?? F???      00445         call    SaveData
                      00446         
0000EC 6AFF           00447         clrf    TOSU
0000EE 6AFE           00448         clrf    TOSH
0000F0 6AFD           00449         clrf    TOSL
0000F2 90F0           00450         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00451         restoreContext
0000F4 3814               M     swapf   temp_W, 0               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000FA 0010           00452         retfie
                      00453 
0000FC                00454 END_ISR_LOW
0000FC 90F0           00455         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00456         restoreContext
0000FE 3814               M     swapf   temp_W, 0               ; restore W first
000100 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000104 0010           00457         retfie
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00458 
                      00459 ;*******************************************************************************
                      00460 ; main
                      00461 ;*******************************************************************************
000106                00462 INIT
                      00463         ; i/o
000106 0E00           00464         movlw   b'00000000'
000108 6E92           00465         movwf   TRISA
00010A 0EFF           00466         movlw   b'11111111'
00010C 6E93           00467         movwf   TRISB               ; keypad
00010E 0E00           00468         movlw   b'00000000'
000110 6E94           00469         movwf   TRISC
000112 0E00           00470         movlw   b'00000000'
000114 6E95           00471         movwf   TRISD
000116 0E00           00472         movlw   b'00000000'
000118 6E96           00473         movwf   TRISE
                      00474 
                      00475         ; clear ports
00011A 0E00           00476         movlw   b'00000000'
00011C 6E89           00477         movwf   LATA
00011E 0E00           00478         movlw   b'00000000'
000120 6E8A           00479         movwf   LATB
000122 0E00           00480         movlw   b'00000000'
000124 6E8B           00481         movwf   LATC
000126 0E00           00482         movlw   b'00000000'
000128 6E8C           00483         movwf   LATD
00012A 0E00           00484         movlw   b'00000000'
00012C 6E8D           00485         movwf   LATE
                      00486         
00012E 0E00           00487         movlw   b'00000000'
000130 6EC2           00488         movwf   ADCON0
                      00489 ;       movlw   b'11111111'
                      00490 ;       movwf   ADCON1
                      00491         
                      00492         ; initializations
000132 EC?? F???      00493         call    InitLCD
                      00494         ConfigLCD
000136 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000138 EC?? F???          M           call      WR_INS
                          M 
00013C 0E0C               M           movlw     b'00001100'    ; display on/off
00013E EC?? F???          M           call      WR_INS
000142 0E01               M           movlw     b'00000001'    ; Clear ram
000144 EC?? F???          M           call      WR_INS
                      00495         
000148 EC?? F???      00496         call    i2c_common_setup
                      00497         
00014C EC?? F???      00498         call    RTC_INIT
                      00499         ;COLOUR_INIT
000150 EC?? F???      00500         call    INIT_USART
                      00501 
                      00502         ; interrupts
000154 6AD0           00503         clrf    RCON
000156 6AF2           00504         clrf    INTCON
000158 6AF1           00505         clrf    INTCON2
00015A 6AF0           00506         clrf    INTCON3
00015C 8ED0           00507         bsf     RCON, IPEN          ; priority mode
00015E 8EF2           00508         bsf     INTCON, GIEH        ; permit global interrupts
000160 8CF2           00509         bsf     INTCON, GIEL
000162 8AF1           00510         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000164 8AF2           00511         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000166 84F2           00512         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000168 84F1           00513         bsf     INTCON2, TMR0IP     ; set to high priority
00016A 86F0           00514         bsf     INTCON3, INT1IE
00016C 9CF0           00515         bcf     INTCON3, INT1IP
                      00516         
                      00517         ; setting up timer to sychronize with 1 second clock intervals
00016E 9ED5           00518         bcf     T0CON, TMR0ON
000170 9CD5           00519         bcf     T0CON, T08BIT
000172 9AD5           00520         bcf     T0CON, T0CS
000174 98D5           00521         bcf     T0CON, T0SE
000176 96D5           00522         bcf     T0CON, PSA
000178 94D5           00523         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
00017A 82D5           00524         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00017C 80D5           00525         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00526 
00017E 6A20           00527         clrf    H_EE
000180 6A21           00528         clrf    L_EE
000182 6A??           00529         clrf    tens_digit
000184 6A??           00530         clrf    ones_digit
                      00531         
000186 6A2C           00532         clrf    DETECTION_VAL
000188 6A2D           00533         clrf    ESKA
00018A 6A2E           00534         clrf    ESKA_NOCAP
00018C 6A2F           00535         clrf    YOP
00018E 6A30           00536         clrf    YOP_NOCAP
000190 6A31           00537         clrf    TOTAL_BOTTLES
000192 6A32           00538         clrf    COLLECTIONS_COUNT
                      00539         
000194 0EF2           00540         movlw     b'11110010'    ; Set required keypad inputs
000196 6E93           00541         movwf     TRISB
                      00542         
000198 EC?? F???      00543         call    ClrLCD
                      00544         Display Welcome
  0000                    M         local   loop
00019C 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00019E 6EF8               M         movwf   TBLPTRU
0001A0 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001A2 6EF7               M         movwf   TBLPTRH
0001A4 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001A6 6EF6               M         movwf   TBLPTRL
0001A8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001AA 50F5               M         movf    TABLAT, W
0001AC                    M loop
0001AC EC?? F???          M         call    WR_DATA         ; write to LCD
0001B0 000B               M         tblrd+*                 ; next row in table
0001B2 50F5               M         movf    TABLAT, W
0001B4 E1??               M         bnz     loop
0001B6 EC?? F???      00545         call LCD_L2
                      00546         Display Team
  0000                    M         local   loop
0001BA 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001BC 6EF8               M         movwf   TBLPTRU
0001BE 0E??               M         movlw   high Team       ; Move Table<15:8>
0001C0 6EF7               M         movwf   TBLPTRH
0001C2 0E??               M         movlw   low Team        ; Move Table<7:0>
0001C4 6EF6               M         movwf   TBLPTRL
0001C6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001C8 50F5               M         movf    TABLAT, W
0001CA                    M loop
0001CA EC?? F???          M         call    WR_DATA         ; write to LCD
0001CE 000B               M         tblrd+*                 ; next row in table
0001D0 50F5               M         movf    TABLAT, W
0001D2 E1??               M         bnz     loop
                      00547         
                      00548         Delay50N delayR, 0x28
  0000                    M         local   loop
0001D4 0E28               M         movlw   0x28
0001D6 6E1A               M         movwf   delayR
                          M 
0001D8                    M loop
0001D8 EC?? F???          M         call    Delay50ms
0001DC 2E1A               M         decfsz  delayR
0001DE EF?? F???          M         goto    loop
                      00549 
                      00550 ;*******************************************************************************
                      00551 ; standby mode
                      00552 ;*******************************************************************************
0001E2                00553 STANDBY
0001E2 0E00           00554         movlw   b'00000000'
0001E4 6E84           00555         movwf   PORTE
0001E6 0E00           00556         movlw   b'00000000'
0001E8 6E80           00557         movwf   PORTA
                      00558         
0001EA 6838           00559         setf    inStandby       
0001EC EC?? F???      00560         call    ClrLCD
                      00561         Display StandBy
  0000                    M         local   loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F0 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F2 6EF8               M         movwf   TBLPTRU
0001F4 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001F6 6EF7               M         movwf   TBLPTRH
0001F8 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FA 6EF6               M         movwf   TBLPTRL
0001FC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001FE 50F5               M         movf    TABLAT, W
000200                    M loop
000200 EC?? F???          M         call    WR_DATA         ; write to LCD
000204 000B               M         tblrd+*                 ; next row in table
000206 50F5               M         movf    TABLAT, W
000208 E1??               M         bnz     loop
00020A EC?? F???      00562         call    LCD_L2
                      00563         Display StandbyInfo
  0000                    M         local   loop
00020E 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
000210 6EF8               M         movwf   TBLPTRU
000212 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000214 6EF7               M         movwf   TBLPTRH
000216 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
000218 6EF6               M         movwf   TBLPTRL
00021A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00021C 50F5               M         movf    TABLAT, W
00021E                    M loop
00021E EC?? F???          M         call    WR_DATA         ; write to LCD
000222 000B               M         tblrd+*                 ; next row in table
000224 50F5               M         movf    TABLAT, W
000226 E1??               M         bnz     loop
                      00564         
000228 0EFF           00565         movlw   0xff
00022A 6ED7           00566         movwf   TMR0H
00022C 0EFF           00567         movlw   0xff
00022E 6ED6           00568         movwf   TMR0L
000230 8ED5           00569         bsf     T0CON, TMR0ON       ; turning on timer
                      00570 
                      00571 
000232                00572 HOLD_STANDBY
000232 EC?? F???      00573         call    READ_KEY_TIME
                      00574 
                      00575         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000236 0E00               M         movlw   key1                ; poll for mode
000238 6210               M         cpfseq  KEY                 ; check this against key press
00023A EF?? F???          M         goto    Exit
                          M 
00023E                    M Next
00023E 6A89               M         clrf    LATA                ; clear pins before proceeding
000240 6A8A               M         clrf    LATB
000242 6A8B               M         clrf    LATC
000244 6A8C               M         clrf    LATD
000246 EF?? F???          M         goto    COLOUR_TEST
                          M 
00024A                    M Exit
00024A 0000               M         nop
                      00576         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
00024C 0E01               M         movlw   key2                ; poll for mode
00024E 6210               M         cpfseq  KEY                 ; check this against key press
000250 EF?? F???          M         goto    Exit
                          M 
000254                    M Next
000254 6A89               M         clrf    LATA                ; clear pins before proceeding
000256 6A8A               M         clrf    LATB
000258 6A8B               M         clrf    LATC
00025A 6A8C               M         clrf    LATD
00025C EF?? F???          M         goto    STEP_TEST
                          M 
000260                    M Exit
000260 0000               M         nop
                      00577         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000262 0E02               M         movlw   key3                ; poll for mode
000264 6210               M         cpfseq  KEY                 ; check this against key press
000266 EF?? F???          M         goto    Exit
                          M 
00026A                    M Next
00026A 6A89               M         clrf    LATA                ; clear pins before proceeding
00026C 6A8A               M         clrf    LATB
00026E 6A8B               M         clrf    LATC
000270 6A8C               M         clrf    LATD
000272 EF?? F???          M         goto    DC_TEST_CW
                          M 
000276                    M Exit
000276 0000               M         nop
                      00578         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
000278 0E04               M         movlw   key4                ; poll for mode
00027A 6210               M         cpfseq  KEY                 ; check this against key press
00027C EF?? F???          M         goto    Exit
                          M 
000280                    M Next
000280 6A89               M         clrf    LATA                ; clear pins before proceeding
000282 6A8A               M         clrf    LATB
000284 6A8B               M         clrf    LATC
000286 6A8C               M         clrf    LATD
000288 EF?? F???          M         goto    DC_TEST_CCW
                          M 
00028C                    M Exit
00028C 0000               M         nop
                      00579         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
00028E 0E03               M         movlw   keyA                ; poll for mode
000290 6210               M         cpfseq  KEY                 ; check this against key press
000292 EF?? F???          M         goto    Exit
                          M 
000296                    M Next
000296 6A89               M         clrf    LATA                ; clear pins before proceeding
000298 6A8A               M         clrf    LATB
00029A 6A8B               M         clrf    LATC
00029C 6A8C               M         clrf    LATD
00029E EF?? F???          M         goto    EXECUTION
                          M 
0002A2                    M Exit
0002A2 0000               M         nop
                      00580         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002A4 0E07               M         movlw   keyB                ; poll for mode
0002A6 6210               M         cpfseq  KEY                 ; check this against key press
0002A8 EF?? F???          M         goto    Exit
                          M 
0002AC                    M Next
0002AC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002AE 6A8A               M         clrf    LATB
0002B0 6A8B               M         clrf    LATC
0002B2 6A8C               M         clrf    LATD
0002B4 EF?? F???          M         goto    LOG
                          M 
0002B8                    M Exit
0002B8 0000               M         nop
                      00581         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002BA 0E0B               M         movlw   keyC                ; poll for mode
0002BC 6210               M         cpfseq  KEY                 ; check this against key press
0002BE EF?? F???          M         goto    Exit
                          M 
0002C2                    M Next
0002C2 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C4 6A8A               M         clrf    LATB
0002C6 6A8B               M         clrf    LATC
0002C8 6A8C               M         clrf    LATD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002CA EF?? F???          M         goto    PERM_LOG
                          M 
0002CE                    M Exit
0002CE 0000               M         nop
                      00582         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002D0 0E0F               M         movlw   keyD                ; poll for mode
0002D2 6210               M         cpfseq  KEY                 ; check this against key press
0002D4 EF?? F???          M         goto    Exit
                          M 
0002D8                    M Next
0002D8 6A89               M         clrf    LATA                ; clear pins before proceeding
0002DA 6A8A               M         clrf    LATB
0002DC 6A8B               M         clrf    LATC
0002DE 6A8C               M         clrf    LATD
0002E0 EF?? F???          M         goto    PC_MODE
                          M 
0002E4                    M Exit
0002E4 0000               M         nop
0002E6 D???           00583         bra     HOLD_STANDBY
                      00584         
                      00585 ;*******************************************************************************
                      00586 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00587 ;*******************************************************************************
                      00588 
0002E8                00589 DC_TEST_CW
0002E8 6A38           00590         clrf    inStandby
0002EA 0E00           00591         movlw   b'00000000'
0002EC 6E84           00592         movwf   PORTE
                      00593         Delay50N    delayR, 0x0a   
  0000                    M         local   loop
0002EE 0E0A               M         movlw   0x0a
0002F0 6E1A               M         movwf   delayR
                          M 
0002F2                    M loop
0002F2 EC?? F???          M         call    Delay50ms
0002F6 2E1A               M         decfsz  delayR
0002F8 EF?? F???          M         goto    loop
0002FC                00594 DC_TEST_CW_HOLD
0002FC 0E01           00595         movlw   b'00000001'
0002FE 6E84           00596         movwf   PORTE
                      00597 
000300 EC?? F???      00598         call    READ_KEY
                      00599         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000304 0E0D               M         movlw   key0                ; poll for mode
000306 6210               M         cpfseq  KEY                 ; check this against key press
000308 EF?? F???          M         goto    Exit
                          M 
00030C                    M Next
00030C 6A89               M         clrf    LATA                ; clear pins before proceeding
00030E 6A8A               M         clrf    LATB
000310 6A8B               M         clrf    LATC
000312 6A8C               M         clrf    LATD
000314 EF?? F???          M         goto    STANDBY
                          M 
000318                    M Exit
000318 0000               M         nop
00031A D???           00600         bra     DC_TEST_CW_HOLD
                      00601         
00031C                00602 DC_TEST_CCW
00031C 6A38           00603         clrf    inStandby
00031E 0E00           00604         movlw   b'00000000'
000320 6E84           00605         movwf   PORTE
                      00606         Delay50N    delayR, 0x0a
  0000                    M         local   loop
000322 0E0A               M         movlw   0x0a
000324 6E1A               M         movwf   delayR
                          M 
000326                    M loop
000326 EC?? F???          M         call    Delay50ms
00032A 2E1A               M         decfsz  delayR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00032C EF?? F???          M         goto    loop
000330                00607 DC_TEST_CCW_HOLD
000330 0E02           00608         movlw   b'00000010'
000332 6E84           00609         movwf   PORTE
                      00610         
000334 EC?? F???      00611         call    READ_KEY
                      00612         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000338 0E0D               M         movlw   key0                ; poll for mode
00033A 6210               M         cpfseq  KEY                 ; check this against key press
00033C EF?? F???          M         goto    Exit
                          M 
000340                    M Next
000340 6A89               M         clrf    LATA                ; clear pins before proceeding
000342 6A8A               M         clrf    LATB
000344 6A8B               M         clrf    LATC
000346 6A8C               M         clrf    LATD
000348 EF?? F???          M         goto    STANDBY
                          M 
00034C                    M Exit
00034C 0000               M         nop
00034E D???           00613         bra     DC_TEST_CCW_HOLD
                      00614                 
000350                00615 STEP_TEST
000350 6A38           00616         clrf    inStandby
000352 6A32           00617         clrf    COLLECTIONS_COUNT
                      00618         Delay50N    delayR, 0x14
  0000                    M         local   loop
000354 0E14               M         movlw   0x14
000356 6E1A               M         movwf   delayR
                          M 
000358                    M loop
000358 EC?? F???          M         call    Delay50ms
00035C 2E1A               M         decfsz  delayR
00035E EF?? F???          M         goto    loop
                      00619     
000362                00620 ROTATE_90_TEST
000362 0E23           00621         movlw   b'00100011'
000364 6E80           00622         movwf   PORTA
000366 EC?? F???      00623         call    delay5ms
                      00624         
00036A 0E26           00625         movlw   b'00100110'
00036C 6E80           00626         movwf   PORTA
00036E EC?? F???      00627         call    delay5ms
                      00628         
000372 0E2C           00629         movlw   b'00101100'
000374 6E80           00630         movwf   PORTA
000376 EC?? F???      00631         call    delay5ms
                      00632 
00037A 0E29           00633         movlw   b'00101001'
00037C 6E80           00634         movwf   PORTA
00037E EC?? F???      00635         call    delay5ms
                      00636         
000382 2A32           00637         incf    COLLECTIONS_COUNT
000384 0E78           00638         movlw   d'120'
000386 6232           00639         cpfseq  COLLECTIONS_COUNT
000388 D???           00640         bra     ROTATE_90_TEST
                      00641         
00038A D???           00642         bra STEP_TEST
                      00643 
00038C                00644 COLOUR_TEST
00038C 6A38           00645         clrf    inStandby
                      00646 
00038E                00647 LOOPING
                      00648         Delay50N delayR, 0x28
  0000                    M         local   loop
00038E 0E28               M         movlw   0x28
000390 6E1A               M         movwf   delayR
                          M 
000392                    M loop
000392 EC?? F???          M         call    Delay50ms
000396 2E1A               M         decfsz  delayR
000398 EF?? F???          M         goto    loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00039C EC?? F???      00649         call    ClrLCD
0003A0 EC?? F???      00650         call    READ_ARDUINO
0003A4 0F30           00651         addlw   0x30
0003A6 EC?? F???      00652         call    WR_DATA
0003AA D???           00653         bra LOOPING
                      00654 
                      00655 ;*******************************************************************************
                      00656 ; execution mode
                      00657 ;*******************************************************************************
                      00658         
0003AC                00659 EXECUTION
0003AC 9ED5           00660         bcf         T0CON, TMR0ON           ; turning on timer
0003AE 6A38           00661         clrf    inStandby       
0003B0 EC?? F???      00662         call        ClearEEPROM_21
                      00663         
                      00664         ; save the starting time
0003B4 EC?? F???      00665         call        SAVE_TIME
                      00666                 
                      00667         ; display
0003B8 681E           00668         setf        inExecution
0003BA EC?? F???      00669         call        ClrLCD
                      00670         Display     Exe1
  0000                    M         local   loop
0003BE 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003C0 6EF8               M         movwf   TBLPTRU
0003C2 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003C4 6EF7               M         movwf   TBLPTRH
0003C6 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003C8 6EF6               M         movwf   TBLPTRL
0003CA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003CC 50F5               M         movf    TABLAT, W
0003CE                    M loop
0003CE EC?? F???          M         call    WR_DATA         ; write to LCD
0003D2 000B               M         tblrd+*                 ; next row in table
0003D4 50F5               M         movf    TABLAT, W
0003D6 E1??               M         bnz     loop
0003D8 EC?? F???      00671         call        LCD_L2
                      00672         
0003DC 0EC5           00673         movlw       0xc5                    ; setting up timer
0003DE 6ED7           00674         movwf       TMR0H
0003E0 0E44           00675         movlw       0x44    
0003E2 6ED6           00676         movwf       TMR0L
                      00677         
0003E4 8ED5           00678         bsf         T0CON, TMR0ON           ; turning on timer
                      00679         
                      00680         ; initialize variables
0003E6 6A18           00681         clrf        OP_sec
0003E8 6A19           00682         clrf        OP_INT
                      00683         
0003EA 6A2D           00684         clrf        ESKA
0003EC 6A2E           00685         clrf        ESKA_NOCAP
0003EE 6A2F           00686         clrf        YOP
0003F0 6A30           00687         clrf        YOP_NOCAP
0003F2 6A31           00688         clrf        TOTAL_BOTTLES
0003F4 0E01           00689         movlw       d'1'
0003F6 6E35           00690         movwf       TRAY_CURRENT
0003F8 6A34           00691         clrf        TRAY_DELAY
                      00692         
                      00693         ; todo: make sure tray is in position one on reset, add some delay
                      00694         
0003FA EF?? F???      00695         goto        COLLECTIONS_STEP
                      00696 
0003FE                00697 COLLECTIONS_STEP
0003FE 6A32           00698         clrf        COLLECTIONS_COUNT
                      00699 
000400                00700 ROTATE_90
000400 0E23           00701         movlw   b'00100011'
000402 6E80           00702         movwf   PORTA
000404 EC?? F???      00703         call    delay5ms
                      00704 
000408 0E26           00705         movlw   b'00100110'
00040A 6E80           00706         movwf   PORTA
00040C EC?? F???      00707         call    delay5ms
                      00708         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000410 0E2C           00709         movlw   b'00101100'
000412 6E80           00710         movwf   PORTA
000414 EC?? F???      00711         call    delay5ms
                      00712 
000418 0E29           00713         movlw   b'00101001'
00041A 6E80           00714         movwf   PORTA
00041C EC?? F???      00715         call    delay5ms
                      00716         
000420 2A32           00717         incf    COLLECTIONS_COUNT
000422 0E78           00718         movlw   d'120'
000424 6232           00719         cpfseq  COLLECTIONS_COUNT
000426 D???           00720         bra     ROTATE_90
                      00721         
000428 D???           00722         bra DETECTIONS
                      00723         
00042A                00724 DETECTIONS
                      00725         ; first up, lets give the 0.5 seconds to process its data
                      00726         ;Delay50N delayR, 0x0a
                      00727 ;       movlw   d'1000'
                      00728 ;       movwf   TRAY_DELAY
                      00729         
                      00730         ; reading data from arduino - expect: 1 for eska cap, 2 for eska no cap
                      00731         ;                                     3 for yop cap, 4 for yop no cap
                      00732         ;                                     5 for no bottle, get outta here
                      00733         ;call   READ_ARDUINO
                      00734         
00042A 0E02           00735         movlw   d'2'                    ; testing!!!
00042C 6E2C           00736         movwf   DETECTION_VAL
                      00737         
                      00738         ; now for handling the comparisions
00042E 0E05           00739         movlw   d'5'
000430 602C           00740         cpfslt  DETECTION_VAL           ; If DETECTION_VAL = 5, make another collections step
000432 EF?? F???      00741         goto    COLLECTIONS_STEP
                      00742         
                      00743         ; okay we have a bottle, increment toal and see what it is
000436 2A31           00744         incf    TOTAL_BOTTLES
                      00745 
000438 0E04           00746         movlw   d'4'
00043A 5C2C           00747         subwf   DETECTION_VAL, 0
00043C E0??           00748         bz      INC_YOPNOCAP
                      00749         
00043E 0E03           00750         movlw   d'3'
000440 5C2C           00751         subwf   DETECTION_VAL, 0
000442 E0??           00752         bz      INC_YOPCAP
                      00753         
000444 0E02           00754         movlw   d'2'
000446 5C2C           00755         subwf   DETECTION_VAL, 0
000448 E0??           00756         bz      INC_ESKANOCAP
                      00757         
00044A 0E01           00758         movlw   d'1'
00044C 5C2C           00759         subwf   DETECTION_VAL, 0
00044E E0??           00760         bz      INC_ESKACAP
                      00761         
                      00762         ;make some kind of fail safe here.
                      00763         
000450                00764 INC_YOPNOCAP
000450 2A30           00765         incf    YOP_NOCAP
                      00766 
                      00767         ; determine what position to rotate the tray to: brute force, but w/e
000452 0E04           00768         movlw   d'4'
000454 6E36           00769         movwf   TRAY_GOTO
000456 5C35           00770         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000458 E0??           00771         bz      TRAY_STEP_END
                      00772         
00045A 0E03           00773         movlw   d'3'
00045C 5C35           00774         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
00045E E0??           00775         bz      TRAY_STEP_CW            
                      00776         
000460 0E02           00777         movlw   d'2'
000462 5C35           00778         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
000464 E0??           00779         bz      TRAY_STEP_CW
                      00780         
000466 0E01           00781         movlw   d'1'
000468 5C35           00782         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00046A E0??           00783         bz      TRAY_STEP_CW
                      00784         
00046C                00785 INC_YOPCAP
00046C 2A2F           00786         incf    YOP
                      00787         
                      00788         ; determine what position to rotate the tray to: brute force, but w/e
00046E 0E03           00789         movlw   d'3'
000470 6E36           00790         movwf   TRAY_GOTO
000472 5C35           00791         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000474 E0??           00792         bz      TRAY_STEP_END
                      00793         
000476 0E04           00794         movlw   d'4'
000478 5C35           00795         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
00047A E0??           00796         bz      TRAY_STEP_CCW   
                      00797         
00047C 0E02           00798         movlw   d'2'
00047E 5C35           00799         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
000480 E0??           00800         bz      TRAY_STEP_CW
                      00801         
000482 0E01           00802         movlw   d'1'
000484 5C35           00803         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
000486 E0??           00804         bz      TRAY_STEP_CW
                      00805         
000488                00806 INC_ESKANOCAP
000488 2A2E           00807         incf    ESKA_NOCAP
00048A EF?? F???      00808         goto    CHECK_DONE
                      00809         
                      00810         ; determine what position to rotate the tray to: brute force, but w/e
00048E 0E02           00811         movlw   d'2'
000490 6E36           00812         movwf   TRAY_GOTO
000492 5C35           00813         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000494 E0??           00814         bz      TRAY_STEP_END
                      00815         
000496 0E04           00816         movlw   d'4'
000498 5C35           00817         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
00049A E0??           00818         bz      TRAY_STEP_CCW   
                      00819         
00049C 0E03           00820         movlw   d'3'
00049E 5C35           00821         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
0004A0 E0??           00822         bz      TRAY_STEP_CCW
                      00823         
0004A2 0E01           00824         movlw   d'1'
0004A4 5C35           00825         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
0004A6 E0??           00826         bz      TRAY_STEP_CW
                      00827         
0004A8                00828 INC_ESKACAP
0004A8 2A2D           00829         incf    ESKA
                      00830         
                      00831         ; determine what position to rotate the tray to: brute force, but w/e
0004AA 0E01           00832         movlw   d'1'
0004AC 6E36           00833         movwf   TRAY_GOTO
0004AE 5C35           00834         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004B0 E0??           00835         bz      TRAY_STEP_END
                      00836         
0004B2 0E04           00837         movlw   d'4'
0004B4 5C35           00838         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
0004B6 E0??           00839         bz      TRAY_STEP_CCW   
                      00840         
0004B8 0E03           00841         movlw   d'3'
0004BA 5C35           00842         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
0004BC E0??           00843         bz      TRAY_STEP_CCW
                      00844         
0004BE 0E02           00845         movlw   d'2'
0004C0 5C35           00846         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
0004C2 E0??           00847         bz      TRAY_STEP_CCW
                      00848 
0004C4                00849 TRAY_STEP_CW
0004C4 6A33           00850         clrf    TRAY_COUNT
0004C6 0E00           00851         movlw   b'00000000'
0004C8 6E84           00852         movwf   PORTE
                      00853 
0004CA                00854 TRAY_CW_HOLD
0004CA 0E01           00855         movlw   b'00000001'
0004CC 6E84           00856         movwf   PORTE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00857 
0004CE 2A33           00858         incf    TRAY_COUNT
0004D0 C033 FFE8      00859         movff   TRAY_COUNT, WREG
0004D4 6234           00860         cpfseq  TRAY_DELAY
0004D6 EF?? F???      00861         goto    TRAY_CW_HOLD
                      00862         
0004DA D???           00863         bra     TRAY_STEP_END
                      00864         
0004DC                00865 TRAY_STEP_CCW
0004DC 6A33           00866         clrf    TRAY_COUNT
0004DE 0E00           00867         movlw   b'00000000'
0004E0 6E84           00868         movwf   PORTE
                      00869 
0004E2                00870 TRAY_CCW_HOLD
0004E2 0E02           00871         movlw   b'00000010'
0004E4 6E84           00872         movwf   PORTE
                      00873 
0004E6 2A33           00874         incf    TRAY_COUNT
0004E8 C033 FFE8      00875         movff   TRAY_COUNT, WREG
0004EC 6234           00876         cpfseq  TRAY_DELAY
0004EE D???           00877         bra     TRAY_CCW_HOLD
                      00878         
0004F0 D???           00879         bra     TRAY_STEP_END
                      00880         
0004F2                00881 TRAY_STEP_END
0004F2 C036 F035      00882         movff   TRAY_GOTO, TRAY_CURRENT
0004F6 0E00           00883         movlw   b'00000000'
0004F8 6E84           00884         movwf   PORTE
                      00885         
0004FA                00886 CHECK_DONE
0004FA 0E09           00887         movlw   d'9'
0004FC 6231           00888         cpfseq  TOTAL_BOTTLES
0004FE EF?? F???      00889         goto    COLLECTIONS_STEP
                      00890         
000502 EF?? F???      00891         goto    EXIT_EXE
                      00892         
000506                00893 EXIT_EXE
                      00894         ; stop timer and save the execution time to eeprom
000506 9ED5           00895         bcf         T0CON, TMR0ON
000508 EC?? F???      00896         call        SAVE_EXE_TIME
                      00897                 
                      00898         ; Clear inExecution flag to stop '*' interrupts
00050C 6A1E           00899         clrf        inExecution
00050E 6A37           00900         clrf        STOP_CONDITION      ; regular stop, saved in eeprom as 0
                      00901         
000510 EC?? F???      00902                 call        ClrLCD
                      00903         Display     SAVE
  0000                    M         local   loop
000514 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000516 6EF8               M         movwf   TBLPTRU
000518 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00051A 6EF7               M         movwf   TBLPTRH
00051C 0E??               M         movlw   low SAVE        ; Move Table<7:0>
00051E 6EF6               M         movwf   TBLPTRL
000520 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000522 50F5               M         movf    TABLAT, W
000524                    M loop
000524 EC?? F???          M         call    WR_DATA         ; write to LCD
000528 000B               M         tblrd+*                 ; next row in table
00052A 50F5               M         movf    TABLAT, W
00052C E1??               M         bnz     loop
00052E EC?? F???      00904         call        SaveData
000532 EF?? F???      00905         goto        LOG
                      00906 
                      00907 ;*******************************************************************************
                      00908 ; sorting statistics log mode
                      00909 ;*******************************************************************************
                      00910         
000536                00911 LOG
000536 6A38           00912         clrf    inStandby
000538 EC?? F???      00913         call    ClrLCD
                      00914         Display Log1
  0000                    M         local   loop
00053C 0E??               M         movlw   upper Log1      ; Move Table<20:16>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00053E 6EF8               M         movwf   TBLPTRU
000540 0E??               M         movlw   high Log1       ; Move Table<15:8>
000542 6EF7               M         movwf   TBLPTRH
000544 0E??               M         movlw   low Log1        ; Move Table<7:0>
000546 6EF6               M         movwf   TBLPTRL
000548 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00054A 50F5               M         movf    TABLAT, W
00054C                    M loop
00054C EC?? F???          M         call    WR_DATA         ; write to LCD
000550 000B               M         tblrd+*                 ; next row in table
000552 50F5               M         movf    TABLAT, W
000554 E1??               M         bnz     loop
                      00915 
                      00916         ; display most recent run data
000556 0E0A           00917         movlw   d'10'
000558 6E21           00918         movwf   L_EE
00055A EC?? F???      00919         call    DisplayExeTime
                      00920 
00055E EC?? F???      00921         call    LCD_L2
000562 0E0D           00922         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000564 6E21           00923         movwf   L_EE
000566 EC?? F???      00924         call    DispOpSort
                      00925 
00056A                00926 HOLD_LOG
00056A EC?? F???      00927         call    READ_KEY
                      00928         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
00056E 0E07               M         movlw   keyB                ; poll for mode
000570 6210               M         cpfseq  KEY                 ; check this against key press
000572 EF?? F???          M         goto    Exit
                          M 
000576                    M Next
000576 6A89               M         clrf    LATA                ; clear pins before proceeding
000578 6A8A               M         clrf    LATB
00057A 6A8B               M         clrf    LATC
00057C 6A8C               M         clrf    LATD
00057E EF?? F???          M         goto    LOG_INFO
                          M 
000582                    M Exit
000582 0000               M         nop
                      00929         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000584 0E0D               M         movlw   key0                ; poll for mode
000586 6210               M         cpfseq  KEY                 ; check this against key press
000588 EF?? F???          M         goto    Exit
                          M 
00058C                    M Next
00058C 6A89               M         clrf    LATA                ; clear pins before proceeding
00058E 6A8A               M         clrf    LATB
000590 6A8B               M         clrf    LATC
000592 6A8C               M         clrf    LATD
000594 EF?? F???          M         goto    STANDBY
                          M 
000598                    M Exit
000598 0000               M         nop
00059A D???           00930         bra     HOLD_LOG
                      00931 
00059C                00932 LOG_INFO
00059C EC?? F???      00933         call    ClrLCD
0005A0 6A21           00934         clrf    L_EE
0005A2 EC?? F???      00935         call    DispOpRTC
                      00936         
0005A6 EC?? F???      00937         call    LCD_L2
                      00938         Display LogInfo2
  0000                    M         local   loop
0005AA 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0005AC 6EF8               M         movwf   TBLPTRU
0005AE 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0005B0 6EF7               M         movwf   TBLPTRH
0005B2 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0005B4 6EF6               M         movwf   TBLPTRL
0005B6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005B8 50F5               M         movf    TABLAT, W
0005BA                    M loop
0005BA EC?? F???          M         call    WR_DATA         ; write to LCD
0005BE 000B               M         tblrd+*                 ; next row in table
0005C0 50F5               M         movf    TABLAT, W
0005C2 E1??               M         bnz     loop
0005C4 6A20           00939         clrf    H_EE
0005C6 6A21           00940         clrf    L_EE
                      00941         ;DisplayLog  H_EE, L_EE
0005C8                00942 HOLD_LOG_INFO
0005C8 EC?? F???      00943         call    READ_KEY
                      00944         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005CC 0E0D               M         movlw   key0                ; poll for mode
0005CE 6210               M         cpfseq  KEY                 ; check this against key press
0005D0 EF?? F???          M         goto    Exit
                          M 
0005D4                    M Next
0005D4 6A89               M         clrf    LATA                ; clear pins before proceeding
0005D6 6A8A               M         clrf    LATB
0005D8 6A8B               M         clrf    LATC
0005DA 6A8C               M         clrf    LATD
0005DC EF?? F???          M         goto    LOG
                          M 
0005E0                    M Exit
0005E0 0000               M         nop
0005E2 D???           00945         bra     HOLD_LOG
                      00946         
                      00947 ;*******************************************************************************
                      00948 ; permanent logs
                      00949 ;*******************************************************************************
                      00950 
0005E4                00951 PERM_LOG
0005E4 6A38           00952         clrf    inStandby
0005E6 EC?? F???      00953         call    ClrLCD
                      00954         Display PermLog1
  0000                    M         local   loop
0005EA 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005EC 6EF8               M         movwf   TBLPTRU
0005EE 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005F0 6EF7               M         movwf   TBLPTRH
0005F2 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005F4 6EF6               M         movwf   TBLPTRL
0005F6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005F8 50F5               M         movf    TABLAT, W
0005FA                    M loop
0005FA EC?? F???          M         call    WR_DATA         ; write to LCD
0005FE 000B               M         tblrd+*                 ; next row in table
000600 50F5               M         movf    TABLAT, W
000602 E1??               M         bnz     loop
000604 EC?? F???      00955         call    LCD_L2
                      00956         Display PermLog2
  0000                    M         local   loop
000608 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00060A 6EF8               M         movwf   TBLPTRU
00060C 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
00060E 6EF7               M         movwf   TBLPTRH
000610 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000612 6EF6               M         movwf   TBLPTRL
000614 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000616 50F5               M         movf    TABLAT, W
000618                    M loop
000618 EC?? F???          M         call    WR_DATA         ; write to LCD
00061C 000B               M         tblrd+*                 ; next row in table
00061E 50F5               M         movf    TABLAT, W
000620 E1??               M         bnz     loop
                      00957         
000622                00958 HOLD_PERM_LOG
000622 EC?? F???      00959         call    READ_KEY
                      00960         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000626 0E0D               M         movlw   key0                ; poll for mode
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000628 6210               M         cpfseq  KEY                 ; check this against key press
00062A EF?? F???          M         goto    Exit
                          M 
00062E                    M Next
00062E 6A89               M         clrf    LATA                ; clear pins before proceeding
000630 6A8A               M         clrf    LATB
000632 6A8B               M         clrf    LATC
000634 6A8C               M         clrf    LATD
000636 EF?? F???          M         goto    STANDBY
                          M 
00063A                    M Exit
00063A 0000               M         nop
                      00961         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00063C 0E00               M         movlw   key1                ; poll for mode
00063E 6210               M         cpfseq  KEY                 ; check this against key press
000640 EF?? F???          M         goto    Exit
                          M 
000644                    M Next
000644 6A89               M         clrf    LATA                ; clear pins before proceeding
000646 6A8A               M         clrf    LATB
000648 6A8B               M         clrf    LATC
00064A 6A8C               M         clrf    LATD
00064C EF?? F???          M         goto    PLOG
                          M 
000650                    M Exit
000650 0000               M         nop
                      00962         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000652 0E01               M         movlw   key2                ; poll for mode
000654 6210               M         cpfseq  KEY                 ; check this against key press
000656 EF?? F???          M         goto    Exit
                          M 
00065A                    M Next
00065A 6A89               M         clrf    LATA                ; clear pins before proceeding
00065C 6A8A               M         clrf    LATB
00065E 6A8B               M         clrf    LATC
000660 6A8C               M         clrf    LATD
000662 EF?? F???          M         goto    PLOG
                          M 
000666                    M Exit
000666 0000               M         nop
                      00963         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000668 0E02               M         movlw   key3                ; poll for mode
00066A 6210               M         cpfseq  KEY                 ; check this against key press
00066C EF?? F???          M         goto    Exit
                          M 
000670                    M Next
000670 6A89               M         clrf    LATA                ; clear pins before proceeding
000672 6A8A               M         clrf    LATB
000674 6A8B               M         clrf    LATC
000676 6A8C               M         clrf    LATD
000678 EF?? F???          M         goto    PLOG
                          M 
00067C                    M Exit
00067C 0000               M         nop
                      00964         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
00067E 0E04               M         movlw   key4                ; poll for mode
000680 6210               M         cpfseq  KEY                 ; check this against key press
000682 EF?? F???          M         goto    Exit
                          M 
000686                    M Next
000686 6A89               M         clrf    LATA                ; clear pins before proceeding
000688 6A8A               M         clrf    LATB
00068A 6A8B               M         clrf    LATC
00068C 6A8C               M         clrf    LATD
00068E EF?? F???          M         goto    PLOG
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000692                    M Exit
000692 0000               M         nop
                      00965         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000694 0E05               M         movlw   key5                ; poll for mode
000696 6210               M         cpfseq  KEY                 ; check this against key press
000698 EF?? F???          M         goto    Exit
                          M 
00069C                    M Next
00069C 6A89               M         clrf    LATA                ; clear pins before proceeding
00069E 6A8A               M         clrf    LATB
0006A0 6A8B               M         clrf    LATC
0006A2 6A8C               M         clrf    LATD
0006A4 EF?? F???          M         goto    PLOG
                          M 
0006A8                    M Exit
0006A8 0000               M         nop
                      00966         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006AA 0E06               M         movlw   key6                ; poll for mode
0006AC 6210               M         cpfseq  KEY                 ; check this against key press
0006AE EF?? F???          M         goto    Exit
                          M 
0006B2                    M Next
0006B2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006B4 6A8A               M         clrf    LATB
0006B6 6A8B               M         clrf    LATC
0006B8 6A8C               M         clrf    LATD
0006BA EF?? F???          M         goto    PLOG
                          M 
0006BE                    M Exit
0006BE 0000               M         nop
                      00967         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0006C0 0E08               M         movlw   key7                ; poll for mode
0006C2 6210               M         cpfseq  KEY                 ; check this against key press
0006C4 EF?? F???          M         goto    Exit
                          M 
0006C8                    M Next
0006C8 6A89               M         clrf    LATA                ; clear pins before proceeding
0006CA 6A8A               M         clrf    LATB
0006CC 6A8B               M         clrf    LATC
0006CE 6A8C               M         clrf    LATD
0006D0 EF?? F???          M         goto    PLOG
                          M 
0006D4                    M Exit
0006D4 0000               M         nop
                      00968         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0006D6 0E09               M         movlw   key8                ; poll for mode
0006D8 6210               M         cpfseq  KEY                 ; check this against key press
0006DA EF?? F???          M         goto    Exit
                          M 
0006DE                    M Next
0006DE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E0 6A8A               M         clrf    LATB
0006E2 6A8B               M         clrf    LATC
0006E4 6A8C               M         clrf    LATD
0006E6 EF?? F???          M         goto    PLOG
                          M 
0006EA                    M Exit
0006EA 0000               M         nop
                      00969         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0006EC 0E0A               M         movlw   key9                ; poll for mode
0006EE 6210               M         cpfseq  KEY                 ; check this against key press
0006F0 EF?? F???          M         goto    Exit
                          M 
0006F4                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006F4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F6 6A8A               M         clrf    LATB
0006F8 6A8B               M         clrf    LATC
0006FA 6A8C               M         clrf    LATD
0006FC EF?? F???          M         goto    PLOG
                          M 
000700                    M Exit
000700 0000               M         nop
000702 D???           00970         bra HOLD_PERM_LOG
                      00971         
000704                00972 PLOG
000704 EC?? F???      00973         call    ClrLCD
                      00974         Display PermLog1
  0000                    M         local   loop
000708 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00070A 6EF8               M         movwf   TBLPTRU
00070C 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00070E 6EF7               M         movwf   TBLPTRH
000710 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000712 6EF6               M         movwf   TBLPTRL
000714 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000716 50F5               M         movf    TABLAT, W
000718                    M loop
000718 EC?? F???          M         call    WR_DATA         ; write to LCD
00071C 000B               M         tblrd+*                 ; next row in table
00071E 50F5               M         movf    TABLAT, W
000720 E1??               M         bnz     loop
                      00975         
                      00976         ; find the key press value
000722 C010 FFE8      00977         movff   KEY, WREG
000726 2AE8           00978         incf    WREG        ; W = KEY+1
000728 6E17           00979         movwf   temp
                      00980         
00072A 42E8           00981         rrncf   WREG        ; division by 4
00072C 9EE8           00982         bcf     WREG, 7     ; clear last bit, overflow from rotate
00072E 42E8           00983         rrncf   WREG        
000730 9EE8           00984         bcf     WREG, 7
000732 5E17           00985         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000734 C017 FFE8      00986         movff   temp, WREG
000738 C017 F011      00987         movff   temp, temp_KEY
00073C 0D15           00988         mullw   d'21'       ; indexed as mutliples of 21
                      00989 
00073E                00990 displayNum
00073E C011 FFE8      00991         movff   temp_KEY, WREG
000742 0F30           00992         addlw   0x30
000744 EC?? F???      00993         call    WR_DATA
000748 0E3A           00994         movlw   ":"
00074A EC?? F???      00995         call    WR_DATA
00074E 0E20           00996         movlw   " "
000750 EC?? F???      00997         call    WR_DATA
                      00998         
000754 CFF3 F021      00999         movff   PRODL, L_EE
000758 0E00           01000         movlw   d'0'
00075A 2621           01001         addwf   L_EE
                      01002         READEE  OP_sec, H_EE, L_EE
00075C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000760 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000764 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000766 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000768 80A6               M         bsf     EECON1, RD          ; read EEPROM
00076A CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
00076E 2A21           01003         incf    L_EE
                      01004         READEE  OP_INT, H_EE, L_EE
000770 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000774 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000778 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00077A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00077C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00077E CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000782 2A21           01005         incf    L_EE
000784 EC?? F???      01006         call    DisplayExeTime
000788 CFF3 F021      01007         movff   PRODL, L_EE
                      01008         
                      01009         ; reset eeprom to beginning
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00078C EC?? F???      01010         call    LCD_L2
000790 CFF3 F021      01011         movff   PRODL, L_EE
000794 EC?? F???      01012         call    DispOpRTC
                      01013         
000798                01014 HOLD_PLOG
000798 EC?? F???      01015         call    READ_KEY
                      01016         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
00079C 0E03               M         movlw   keyA                ; poll for mode
00079E 6210               M         cpfseq  KEY                 ; check this against key press
0007A0 EF?? F???          M         goto    Exit
                          M 
0007A4                    M Next
0007A4 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A6 6A8A               M         clrf    LATB
0007A8 6A8B               M         clrf    LATC
0007AA 6A8C               M         clrf    LATD
0007AC EF?? F???          M         goto    PLOG_DETAILS
                          M 
0007B0                    M Exit
0007B0 0000               M         nop
                      01017         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007B2 0E0D               M         movlw   key0                ; poll for mode
0007B4 6210               M         cpfseq  KEY                 ; check this against key press
0007B6 EF?? F???          M         goto    Exit
                          M 
0007BA                    M Next
0007BA 6A89               M         clrf    LATA                ; clear pins before proceeding
0007BC 6A8A               M         clrf    LATB
0007BE 6A8B               M         clrf    LATC
0007C0 6A8C               M         clrf    LATD
0007C2 EF?? F???          M         goto    PERM_LOG
                          M 
0007C6                    M Exit
0007C6 0000               M         nop
0007C8 D???           01018         bra HOLD_PLOG
                      01019         
0007CA                01020 PLOG_DETAILS
0007CA EC?? F???      01021         call    ClrLCD
                      01022         
                      01023         Display Log1
  0000                    M         local   loop
0007CE 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0007D0 6EF8               M         movwf   TBLPTRU
0007D2 0E??               M         movlw   high Log1       ; Move Table<15:8>
0007D4 6EF7               M         movwf   TBLPTRH
0007D6 0E??               M         movlw   low Log1        ; Move Table<7:0>
0007D8 6EF6               M         movwf   TBLPTRL
0007DA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007DC 50F5               M         movf    TABLAT, W
0007DE                    M loop
0007DE EC?? F???          M         call    WR_DATA         ; write to LCD
0007E2 000B               M         tblrd+*                 ; next row in table
0007E4 50F5               M         movf    TABLAT, W
0007E6 E1??               M         bnz     loop
0007E8 EC?? F???      01024         call    DisplayExeTime
                      01025         
0007EC EC?? F???      01026         call    LCD_L2
0007F0 EC?? F???      01027         call    DispOpSort
                      01028         
0007F4                01029 HOLD_PLOG_DETAILS
0007F4 EC?? F???      01030         call    READ_KEY
                      01031         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007F8 0E0D               M         movlw   key0                ; poll for mode
0007FA 6210               M         cpfseq  KEY                 ; check this against key press
0007FC EF?? F???          M         goto    Exit
                          M 
000800                    M Next
000800 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000802 6A8A               M         clrf    LATB
000804 6A8B               M         clrf    LATC
000806 6A8C               M         clrf    LATD
000808 EF?? F???          M         goto    PERM_LOG
                          M 
00080C                    M Exit
00080C 0000               M         nop
00080E D???           01032         bra HOLD_PLOG_DETAILS
                      01033         
                      01034 ;*******************************************************************************
                      01035 ; pc interface
                      01036 ;*******************************************************************************
                      01037 
000810                01038 PC_MODE
000810 6A38           01039         clrf    inStandby
000812 EC?? F???      01040         call    ClrLCD
                      01041         Display PC1
  0000                    M         local   loop
000816 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000818 6EF8               M         movwf   TBLPTRU
00081A 0E??               M         movlw   high PC1        ; Move Table<15:8>
00081C 6EF7               M         movwf   TBLPTRH
00081E 0E??               M         movlw   low PC1         ; Move Table<7:0>
000820 6EF6               M         movwf   TBLPTRL
000822 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000824 50F5               M         movf    TABLAT, W
000826                    M loop
000826 EC?? F???          M         call    WR_DATA         ; write to LCD
00082A 000B               M         tblrd+*                 ; next row in table
00082C 50F5               M         movf    TABLAT, W
00082E E1??               M         bnz     loop
000830 EC?? F???      01042         call    LCD_L2
                      01043         Display PC2
  0000                    M         local   loop
000834 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000836 6EF8               M         movwf   TBLPTRU
000838 0E??               M         movlw   high PC2        ; Move Table<15:8>
00083A 6EF7               M         movwf   TBLPTRH
00083C 0E??               M         movlw   low PC2         ; Move Table<7:0>
00083E 6EF6               M         movwf   TBLPTRL
000840 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000842 50F5               M         movf    TABLAT, W
000844                    M loop
000844 EC?? F???          M         call    WR_DATA         ; write to LCD
000848 000B               M         tblrd+*                 ; next row in table
00084A 50F5               M         movf    TABLAT, W
00084C E1??               M         bnz     loop
00084E CFF9 F029      01044         movff   PCL, PC_PCL
000852 CFFA F02A      01045         movff   PCLATH, PC_PCLATH
000856 CFFB F02B      01046         movff   PCLATU, PC_PCLATU
                      01047         
00085A                01048 HOLD_PC
00085A EC?? F???      01049         call    READ_KEY
                      01050         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00085E 0E0D               M         movlw   key0                ; poll for mode
000860 6210               M         cpfseq  KEY                 ; check this against key press
000862 EF?? F???          M         goto    Exit
                          M 
000866                    M Next
000866 6A89               M         clrf    LATA                ; clear pins before proceeding
000868 6A8A               M         clrf    LATB
00086A 6A8B               M         clrf    LATC
00086C 6A8C               M         clrf    LATD
00086E EF?? F???          M         goto    STANDBY
                          M 
000872                    M Exit
000872 0000               M         nop
                      01051         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000874 0E0E               M         movlw   keyH                ; poll for mode
000876 6210               M         cpfseq  KEY                 ; check this against key press
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000878 EF?? F???          M         goto    Exit
                          M 
00087C                    M Next
00087C 6A89               M         clrf    LATA                ; clear pins before proceeding
00087E 6A8A               M         clrf    LATB
000880 6A8B               M         clrf    LATC
000882 6A8C               M         clrf    LATD
000884 EF?? F???          M         goto    PC_TRANSFER
                          M 
000888                    M Exit
000888 0000               M         nop
00088A D???           01052         bra     HOLD_PC
                      01053 
00088C                01054 PC_TRANSFER
00088C 6828           01055         setf    transferring
00088E EC?? F???      01056         call    ClrLCD
                      01057         Display PCTransfer
  0000                    M         local   loop
000892 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000894 6EF8               M         movwf   TBLPTRU
000896 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000898 6EF7               M         movwf   TBLPTRH
00089A 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
00089C 6EF6               M         movwf   TBLPTRL
00089E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008A0 50F5               M         movf    TABLAT, W
0008A2                    M loop
0008A2 EC?? F???          M         call    WR_DATA         ; write to LCD
0008A6 000B               M         tblrd+*                 ; next row in table
0008A8 50F5               M         movf    TABLAT, W
0008AA E1??               M         bnz     loop
0008AC EC?? F???      01058         call    DataUSART
0008B0 6A28           01059         clrf    transferring
0008B2 EF?? F???      01060         goto    STANDBY
                      01061         
                      01062 ;*******************************************************************************
                      01063 ; subroutines
                      01064 ;*******************************************************************************
                      01065 
0008B6                01066 SaveData
0008B6 C02D FFE8      01067         movff       ESKA, WREG
0008BA 0F30           01068         addlw       0x30
                      01069         WriteEE     WREG, H_EE, L_EE
0008BC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008C0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008C4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008C8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008CA D???               M         bra     $-2
                          M 
0008CC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008CE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008D0 84A6               M         bsf     EECON1, WREN        ; enable write
0008D2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008D4 98A1               M         bcf     PIR2, EEIF
                          M 
0008D6 0E55               M         movlw   0x55
0008D8 6EA7               M         movwf   EECON2              ; write 55h
0008DA 0EAA               M         movlw   0xaa
0008DC 6EA7               M         movwf   EECON2              ; write 0xaa
0008DE 82A6               M         bsf     EECON1, WR          ; begin write
0008E0 B2A6               M         btfsc   EECON1, WR
0008E2 D???               M         bra     $-2
                          M 
0008E4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008E6 94A6               M         bcf     EECON1, WREN        ; disable writes
0008E8 2A21           01070         incf        L_EE
                      01071         
0008EA C02E FFE8      01072         movff       ESKA_NOCAP, WREG
0008EE 0F30           01073         addlw       0x30
                      01074         WriteEE     WREG, H_EE, L_EE
0008F0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008F4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008F8 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0008FC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008FE D???               M         bra     $-2
                          M 
000900 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000902 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000904 84A6               M         bsf     EECON1, WREN        ; enable write
000906 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000908 98A1               M         bcf     PIR2, EEIF
                          M 
00090A 0E55               M         movlw   0x55
00090C 6EA7               M         movwf   EECON2              ; write 55h
00090E 0EAA               M         movlw   0xaa
000910 6EA7               M         movwf   EECON2              ; write 0xaa
000912 82A6               M         bsf     EECON1, WR          ; begin write
000914 B2A6               M         btfsc   EECON1, WR
000916 D???               M         bra     $-2
                          M 
000918 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00091A 94A6               M         bcf     EECON1, WREN        ; disable writes
00091C 2A21           01075         incf        L_EE
                      01076         
00091E C02F FFE8      01077         movff       YOP, WREG
000922 0F30           01078         addlw       0x30
                      01079         WriteEE     WREG, H_EE, L_EE
000924 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000928 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00092C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000930 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000932 D???               M         bra     $-2
                          M 
000934 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000936 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000938 84A6               M         bsf     EECON1, WREN        ; enable write
00093A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00093C 98A1               M         bcf     PIR2, EEIF
                          M 
00093E 0E55               M         movlw   0x55
000940 6EA7               M         movwf   EECON2              ; write 55h
000942 0EAA               M         movlw   0xaa
000944 6EA7               M         movwf   EECON2              ; write 0xaa
000946 82A6               M         bsf     EECON1, WR          ; begin write
000948 B2A6               M         btfsc   EECON1, WR
00094A D???               M         bra     $-2
                          M 
00094C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00094E 94A6               M         bcf     EECON1, WREN        ; disable writes
000950 2A21           01080         incf        L_EE
                      01081         
000952 C030 FFE8      01082         movff       YOP_NOCAP, WREG
000956 0F30           01083         addlw       0x30
                      01084         WriteEE     WREG, H_EE, L_EE
000958 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00095C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000960 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000964 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000966 D???               M         bra     $-2
                          M 
000968 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00096A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00096C 84A6               M         bsf     EECON1, WREN        ; enable write
00096E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000970 98A1               M         bcf     PIR2, EEIF
                          M 
000972 0E55               M         movlw   0x55
000974 6EA7               M         movwf   EECON2              ; write 55h
000976 0EAA               M         movlw   0xaa
000978 6EA7               M         movwf   EECON2              ; write 0xaa
00097A 82A6               M         bsf     EECON1, WR          ; begin write
00097C B2A6               M         btfsc   EECON1, WR
00097E D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000980 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000982 94A6               M         bcf     EECON1, WREN        ; disable writes
000984 2A21           01085         incf        L_EE
                      01086         
000986 C037 FFE8      01087         movff       STOP_CONDITION, WREG
00098A 0F30           01088         addlw       0x30
                      01089         WriteEE     WREG, H_EE, L_EE
00098C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000990 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000994 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000998 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00099A D???               M         bra     $-2
                          M 
00099C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00099E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009A0 84A6               M         bsf     EECON1, WREN        ; enable write
0009A2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009A4 98A1               M         bcf     PIR2, EEIF
                          M 
0009A6 0E55               M         movlw   0x55
0009A8 6EA7               M         movwf   EECON2              ; write 55h
0009AA 0EAA               M         movlw   0xaa
0009AC 6EA7               M         movwf   EECON2              ; write 0xaa
0009AE 82A6               M         bsf     EECON1, WR          ; begin write
0009B0 B2A6               M         btfsc   EECON1, WR
0009B2 D???               M         bra     $-2
                          M 
0009B4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009B6 94A6               M         bcf     EECON1, WREN        ; disable writes
0009B8 2A21           01090         incf        L_EE
                      01091         
0009BA 0E00           01092         movlw       d'0'
0009BC 6E20           01093         movwf       H_EE
0009BE 0EA8           01094         movlw       d'168'              ; take d'168' as last
0009C0 6E21           01095         movwf       L_EE
0009C2 0E00           01096         movlw       d'0'
0009C4 6E23           01097         movwf       tempH_EE
0009C6 0EDC           01098         movlw       d'220'              ; temp for low constant
0009C8 6E24           01099         movwf       tempL_EE
                      01100         
0009CA 6A16           01101         clrf        counter2
0009CC 6A15           01102         clrf        counter
                      01103         
0009CE                01104 ShiftLoop
0009CE 2A15           01105         incf            counter
                      01106         READEE          REG_EE, H_EE, L_EE
0009D0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0009D4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0009D8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009DA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009DC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009DE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0009E2 0E15           01107         movlw           d'21'
0009E4 2621           01108         addwf           L_EE
                      01109         WriteEE         REG_EE, H_EE, L_EE
0009E6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009EA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009EE C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0009F2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009F4 D???               M         bra     $-2
                          M 
0009F6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009F8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009FA 84A6               M         bsf     EECON1, WREN        ; enable write
0009FC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009FE 98A1               M         bcf     PIR2, EEIF
                          M 
000A00 0E55               M         movlw   0x55
000A02 6EA7               M         movwf   EECON2              ; write 55h
000A04 0EAA               M         movlw   0xaa
000A06 6EA7               M         movwf   EECON2              ; write 0xaa
000A08 82A6               M         bsf     EECON1, WR          ; begin write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A0A B2A6               M         btfsc   EECON1, WR
000A0C D???               M         bra     $-2
                          M 
000A0E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A10 94A6               M         bcf     EECON1, WREN        ; disable writes
000A12 0E14           01110         movlw           d'20'
000A14 5E21           01111         subwf           L_EE
000A16 0E15           01112         movlw           d'21'
000A18 6215           01113         cpfseq          counter
000A1A EF?? F???      01114         goto            ShiftLoop
                      01115         
                      01116         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A1E 0E2A           01117         movlw           d'42'
000A20 5E21           01118         subwf           L_EE
000A22 0EDC           01119         movlw           d'220'
000A24 6E24           01120         movwf           tempL_EE
000A26 6A15           01121         clrf            counter
000A28 2A16           01122         incf            counter2
000A2A 0E09           01123         movlw           d'9'
000A2C 6216           01124         cpfseq          counter2        ; Skip if 9 shifts were made
000A2E EF?? F???      01125         goto            ShiftLoop
                      01126 
000A32 0012           01127         return
                      01128         
000A34                01129 RTC_INIT
                      01130         ; set sda and scl to high
000A34 9882           01131         bcf     PORTC, 4
000A36 9682           01132         bcf     PORTC, 3
000A38 8894           01133         bsf     TRISC, 4
000A3A 8694           01134         bsf     TRISC, 3
                      01135         
000A3C EC?? F???      01136         call    INIT_RTC
                      01137         
                      01138         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A40 0012           01139 return
                      01140         
000A42                01141 SAVE_TIME
                      01142         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A42 0E02               M     movlw   0x02
000A44 6E??               M     movwf   regaddress
000A46 EC?? F???          M     call    read_rtc
000A4A C??? FFE8          M     movff   datachar, WREG
000A4E EC?? F???          M     call    rtc_convert
                      01143         rtc_read    0x02        ; hours
000A52 0E02               M     movlw   0x02
000A54 6E??               M     movwf   regaddress
000A56 EC?? F???          M     call    read_rtc
000A5A C??? FFE8          M     movff   datachar, WREG
000A5E EC?? F???          M     call    rtc_convert
000A62 EC?? F???      01144         call    WriteEE_RTC
                      01145         rtc_read    0x01        ; minutes
000A66 0E01               M     movlw   0x01
000A68 6E??               M     movwf   regaddress
000A6A EC?? F???          M     call    read_rtc
000A6E C??? FFE8          M     movff   datachar, WREG
000A72 EC?? F???          M     call    rtc_convert
000A76 EC?? F???      01146         call    WriteEE_RTC
                      01147         rtc_read    0x06        ; years
000A7A 0E06               M     movlw   0x06
000A7C 6E??               M     movwf   regaddress
000A7E EC?? F???          M     call    read_rtc
000A82 C??? FFE8          M     movff   datachar, WREG
000A86 EC?? F???          M     call    rtc_convert
000A8A EC?? F???      01148         call    WriteEE_RTC
                      01149         rtc_read    0x05        ; months
000A8E 0E05               M     movlw   0x05
000A90 6E??               M     movwf   regaddress
000A92 EC?? F???          M     call    read_rtc
000A96 C??? FFE8          M     movff   datachar, WREG
000A9A EC?? F???          M     call    rtc_convert
000A9E EC?? F???      01150         call    WriteEE_RTC
                      01151         rtc_read    0x04        ; days
000AA2 0E04               M     movlw   0x04
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AA4 6E??               M     movwf   regaddress
000AA6 EC?? F???          M     call    read_rtc
000AAA C??? FFE8          M     movff   datachar, WREG
000AAE EC?? F???          M     call    rtc_convert
000AB2 EC?? F???      01152         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000AB6 0012           01153 return
                      01154         
000AB8                01155 SAVE_EXE_TIME
                      01156         
Warning[202]: Argument out of range.  Least significant bits used.
000AB8 3818           01157         swapf   OP_sec, WREG    ; 100's seconds
000ABA 6E17           01158         movwf   temp
000ABC 0E0F           01159         movlw   0x0F
000ABE 1617           01160         andwf   temp
000AC0 C017 FFE8      01161         movff   temp, WREG
000AC4 0F30           01162         addlw   0x30    
                      01163         WriteEE WREG, H_EE, L_EE
000AC6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000ACA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000ACE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AD2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AD4 D???               M         bra     $-2
                          M 
000AD6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AD8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000ADA 84A6               M         bsf     EECON1, WREN        ; enable write
000ADC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000ADE 98A1               M         bcf     PIR2, EEIF
                          M 
000AE0 0E55               M         movlw   0x55
000AE2 6EA7               M         movwf   EECON2              ; write 55h
000AE4 0EAA               M         movlw   0xaa
000AE6 6EA7               M         movwf   EECON2              ; write 0xaa
000AE8 82A6               M         bsf     EECON1, WR          ; begin write
000AEA B2A6               M         btfsc   EECON1, WR
000AEC D???               M         bra     $-2
                          M 
000AEE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AF0 94A6               M         bcf     EECON1, WREN        ; disable writes
000AF2 2A21           01164         incf    L_EE
                      01165         
000AF4 C018 F017      01166         movff   OP_sec, temp    ; 10's seconds
000AF8 0E0F           01167         movlw   0x0F
000AFA 1617           01168         andwf   temp            ; Temp = lower nibble of Op_sec
000AFC C017 FFE8      01169         movff   temp, WREG      ; W = Temp
000B00 0F30           01170         addlw   0x30            ; Convert to ASCII
                      01171         WriteEE WREG, H_EE, L_EE
000B02 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B06 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B0A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B0E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B10 D???               M         bra     $-2
                          M 
000B12 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B14 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B16 84A6               M         bsf     EECON1, WREN        ; enable write
000B18 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B1A 98A1               M         bcf     PIR2, EEIF
                          M 
000B1C 0E55               M         movlw   0x55
000B1E 6EA7               M         movwf   EECON2              ; write 55h
000B20 0EAA               M         movlw   0xaa
000B22 6EA7               M         movwf   EECON2              ; write 0xaa
000B24 82A6               M         bsf     EECON1, WR          ; begin write
000B26 B2A6               M         btfsc   EECON1, WR
000B28 D???               M         bra     $-2
                          M 
000B2A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B2C 94A6               M         bcf     EECON1, WREN        ; disable writes
000B2E 2A21           01172         incf    L_EE
                      01173         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[202]: Argument out of range.  Least significant bits used.
000B30 3819           01174         swapf   OP_INT, WREG    ;1's seconds
000B32 6E17           01175         movwf   temp
000B34 0E0F           01176         movlw   0x0f
000B36 1617           01177         andwf   temp
000B38 C017 FFE8      01178         movff   temp, WREG
000B3C 0F30           01179         addlw   0x30
                      01180         WriteEE WREG, H_EE, L_EE
000B3E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B42 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B46 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B4A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B4C D???               M         bra     $-2
                          M 
000B4E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B50 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B52 84A6               M         bsf     EECON1, WREN        ; enable write
000B54 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B56 98A1               M         bcf     PIR2, EEIF
                          M 
000B58 0E55               M         movlw   0x55
000B5A 6EA7               M         movwf   EECON2              ; write 55h
000B5C 0EAA               M         movlw   0xaa
000B5E 6EA7               M         movwf   EECON2              ; write 0xaa
000B60 82A6               M         bsf     EECON1, WR          ; begin write
000B62 B2A6               M         btfsc   EECON1, WR
000B64 D???               M         bra     $-2
                          M 
000B66 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B68 94A6               M         bcf     EECON1, WREN        ; disable writes
000B6A 2A21           01181         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000B6C 0012           01182 return
                      01183         
                      01184                 
000B6E                01185 DISPLAY_RTC
                      01186         ; display data in this format hh/minmin/yy yy/mm/dd
                      01187         
                      01188         rtc_read    0x02            ; 0x02 from DS1307 - hours
000B6E 0E02               M     movlw   0x02
000B70 6E??               M     movwf   regaddress
000B72 EC?? F???          M     call    read_rtc
000B76 C??? FFE8          M     movff   datachar, WREG
000B7A EC?? F???          M     call    rtc_convert
000B7E C??? FFE8      01189         movff   tens_digit,WREG
000B82 EC?? F???      01190         call    WR_DATA
000B86 C??? FFE8      01191         movff   ones_digit,WREG
000B8A EC?? F???      01192         call    WR_DATA
000B8E 0E68           01193         movlw   "h"
000B90 EC?? F???      01194         call    WR_DATA
                      01195         
                      01196         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000B94 0E01               M     movlw   0x01
000B96 6E??               M     movwf   regaddress
000B98 EC?? F???          M     call    read_rtc
000B9C C??? FFE8          M     movff   datachar, WREG
000BA0 EC?? F???          M     call    rtc_convert
000BA4 C??? FFE8      01197         movff   tens_digit,WREG
000BA8 EC?? F???      01198         call    WR_DATA
000BAC C??? FFE8      01199         movff   ones_digit,WREG
000BB0 EC?? F???      01200         call    WR_DATA
                      01201         
                      01202         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000BB4 0E00               M     movlw   0x00
000BB6 6E??               M     movwf   regaddress
000BB8 EC?? F???          M     call    read_rtc
000BBC C??? FFE8          M     movff   datachar, WREG
000BC0 EC?? F???          M     call    rtc_convert
000BC4 C??? FFE8      01203         movff   tens_digit,WREG
000BC8 EC?? F???      01204         call    WR_DATA
000BCC C??? FFE8      01205         movff   ones_digit,WREG
000BD0 EC?? F???      01206         call    WR_DATA
000BD4 0E20           01207         movlw   " "
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BD6 EC?? F???      01208         call    WR_DATA
                      01209         
                      01210         rtc_read    0x06            ; 0x06 from DS1307 - years
000BDA 0E06               M     movlw   0x06
000BDC 6E??               M     movwf   regaddress
000BDE EC?? F???          M     call    read_rtc
000BE2 C??? FFE8          M     movff   datachar, WREG
000BE6 EC?? F???          M     call    rtc_convert
000BEA C??? FFE8      01211         movff   tens_digit,WREG
000BEE EC?? F???      01212         call    WR_DATA
000BF2 C??? FFE8      01213         movff   ones_digit,WREG
000BF6 EC?? F???      01214         call    WR_DATA
000BFA 0E2F           01215         movlw   "/"
000BFC EC?? F???      01216         call    WR_DATA
                      01217         
                      01218         rtc_read    0x05            ; 0x05 from DS1307 - months
000C00 0E05               M     movlw   0x05
000C02 6E??               M     movwf   regaddress
000C04 EC?? F???          M     call    read_rtc
000C08 C??? FFE8          M     movff   datachar, WREG
000C0C EC?? F???          M     call    rtc_convert
000C10 C??? FFE8      01219         movff   tens_digit,WREG
000C14 EC?? F???      01220         call    WR_DATA
000C18 C??? FFE8      01221         movff   ones_digit,WREG
000C1C EC?? F???      01222         call    WR_DATA
000C20 0E2F           01223         movlw   "/"
000C22 EC?? F???      01224         call    WR_DATA
                      01225         
                      01226         rtc_read    0x04            ; 0x04 from DS1307 - days
000C26 0E04               M     movlw   0x04
000C28 6E??               M     movwf   regaddress
000C2A EC?? F???          M     call    read_rtc
000C2E C??? FFE8          M     movff   datachar, WREG
000C32 EC?? F???          M     call    rtc_convert
000C36 C??? FFE8      01227         movff   tens_digit,WREG
000C3A EC?? F???      01228         call    WR_DATA
000C3E C??? FFE8      01229         movff   ones_digit,WREG
000C42 EC?? F???      01230         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C46 0012           01231 return
                      01232         
000C48                01233 SET_TIME
                      01234         rtc_resetAll
                          M 
000C48 6A??               M     clrf    databyte
000C4A 0E06               M     movlw   6
000C4C 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000C4E                    M     del_loop0
000C4E EC?? F???          M     call    write_rtc
000C52 2E??               M     decfsz  regaddress
000C54 D???               M     bra     del_loop0
000C56 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01235         
                      01236         rtc_set 0x00,   b'10000000'
000C5A 0E00               M     movlw   0x00
000C5C 6E??               M     movwf   regaddress
000C5E 0E80               M     movlw   b'10000000'
000C60 6E??               M     movwf   databyte
000C62 EC?? F???          M     call    write_rtc
                      01237 
                      01238         rtc_set 0x06,   b'00010111'             ; Year 17
000C66 0E06               M     movlw   0x06
000C68 6E??               M     movwf   regaddress
000C6A 0E17               M     movlw   b'00010111'
000C6C 6E??               M     movwf   databyte
000C6E EC?? F???          M     call    write_rtc
                      01239         rtc_set 0x05,   b'00000011'             ; Month 03
000C72 0E05               M     movlw   0x05
000C74 6E??               M     movwf   regaddress
000C76 0E03               M     movlw   b'00000011'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C78 6E??               M     movwf   databyte
000C7A EC?? F???          M     call    write_rtc
                      01240         rtc_set 0x04,   b'00000100'             ; Date 04
000C7E 0E04               M     movlw   0x04
000C80 6E??               M     movwf   regaddress
000C82 0E04               M     movlw   b'00000100'
000C84 6E??               M     movwf   databyte
000C86 EC?? F???          M     call    write_rtc
                      01241         rtc_set 0x02,   b'00010010'             ; Hours 12
000C8A 0E02               M     movlw   0x02
000C8C 6E??               M     movwf   regaddress
000C8E 0E12               M     movlw   b'00010010'
000C90 6E??               M     movwf   databyte
000C92 EC?? F???          M     call    write_rtc
                      01242         rtc_set 0x01,   b'01001000'             ; Minutes 27
000C96 0E01               M     movlw   0x01
000C98 6E??               M     movwf   regaddress
000C9A 0E48               M     movlw   b'01001000'
000C9C 6E??               M     movwf   databyte
000C9E EC?? F???          M     call    write_rtc
                      01243         rtc_set 0x00,   b'00000000'             ; Seconds 0
000CA2 0E00               M     movlw   0x00
000CA4 6E??               M     movwf   regaddress
000CA6 0E00               M     movlw   b'00000000'
000CA8 6E??               M     movwf   databyte
000CAA EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000CAE 0012           01244 return
                      01245         
000CB0                01246 INIT_USART
                      01247         
000CB0 8E94           01248         bsf     TRISC, 7        ; set RC7=USART RC
000CB2 9C94           01249         bcf     TRISC, 6        ; clear RC6=USART TX
                      01250 
000CB4 0E0F           01251         movlw   15              ; baud rate 9600
000CB6 6EAF           01252         movwf   SPBRG
000CB8 6AAC           01253         clrf    TXSTA
                      01254         
000CBA 6AAB           01255         clrf    RCSTA
000CBC 8EAB           01256         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000CBE 88AB           01257         bsf     RCSTA,CREN      ; continous receive
                      01258         
000CC0 8AAC           01259         bsf     TXSTA, TXEN     ; transmit enabled
000CC2 0012           01260         return
                      01261 
000CC4                01262 DataUSART
000CC4 0E02           01263         movlw   0x02
000CC6 EC?? F???      01264         call    USART_WAIT
000CCA 0E0D           01265         movlw   0x0D
000CCC EC?? F???      01266         call    USART_WAIT
                      01267         
000CD0 6A15           01268         clrf    counter         ; used to cycle through past 9 eeprom logs
000CD2 6A16           01269         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01270         
000CD4                01271 TRANSFER_LOGS
000CD4 0E15           01272         movlw   d'21'           ; logs are 21 bits apart
000CD6 0215           01273         mulwf   counter         ; log number one starts at eeprom address 0
000CD8 CFF3 F021      01274         movff   PRODL, L_EE     ; low address now points to count X 21
000CDC 6A16           01275         clrf    counter2
                      01276         
000CDE                01277 TRANSFER_DATA   
                      01278         READEE  WREG, H_EE, L_EE
000CDE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CE2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000CE6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CE8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CEA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CEC CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CF0 EC?? F???      01279         call    USART_WAIT      ; transfer bit
000CF4 2A21           01280         incf    L_EE
                      01281         
000CF6 2A16           01282         incf    counter2
000CF8 0E12           01283         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000CFA 6216           01284         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CFC D???           01285         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01286         
000CFE EC?? F???      01287         call    USART_LINE      ; new line because a e s t h e t i c
                      01288         
000D02 2A15           01289         incf    counter
000D04 0E08           01290         movlw   d'8'            ; we save up to the last 9 permanent logs
000D06 6215           01291         cpfseq  counter
000D08 D???           01292         bra     TRANSFER_LOGS
                      01293         
000D0A EC?? F???      01294         call    LCD_L2
                      01295         Display PCComplete
  0000                    M         local   loop
000D0E 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D10 6EF8               M         movwf   TBLPTRU
000D12 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D14 6EF7               M         movwf   TBLPTRH
000D16 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D18 6EF6               M         movwf   TBLPTRL
000D1A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D1C 50F5               M         movf    TABLAT, W
000D1E                    M loop
000D1E EC?? F???          M         call    WR_DATA         ; write to LCD
000D22 000B               M         tblrd+*                 ; next row in table
000D24 50F5               M         movf    TABLAT, W
000D26 E1??               M         bnz     loop
                      01296         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D28 0E28               M         movlw   0x28
000D2A 6E1A               M         movwf   delayR
                          M 
000D2C                    M loop
000D2C EC?? F???          M         call    Delay50ms
000D30 2E1A               M         decfsz  delayR
000D32 EF?? F???          M         goto    loop
000D36 0012           01297         return                  ; done transmitting data
                      01298         
000D38                01299 USART_WAIT
000D38 6EAD           01300         movwf   TXREG
000D3A A2AC           01301         btfss   TXSTA, 1
000D3C EF?? F???      01302         goto    $-2
000D40 0012           01303         return
                      01304 
000D42                01305 USART_LINE
000D42 0E0A           01306         movlw   0x0A
000D44 EC?? F???      01307         call    USART_WAIT
000D48 0E0D           01308         movlw   0x0D
000D4A EC?? F???      01309         call    USART_WAIT
000D4E 0012           01310         return
                      01311         
000D50                01312 Delay5us
000D50 0E78           01313         movlw   d'120'
000D52 6E1B           01314         movwf   d5us
                      01315 
000D54                01316 loop5us
000D54 2E1B           01317         decfsz  d5us
000D56 EF?? F???      01318         goto    loop5us
000D5A 0000           01319         nop
000D5C 0012           01320         return
                      01321 
000D5E                01322 Delay200us
000D5E 0EA4           01323         movlw   0xA4
000D60 6E1C           01324         movwf   d200us
                      01325 
000D62                01326 loop200us
000D62 2E1C           01327         decfsz  d200us
000D64 EF?? F???      01328         goto    loop200us
000D68 0000           01329         nop
000D6A 0012           01330         return
                      01331 
000D6C                01332 Delay50ms
000D6C 0EF9           01333         movlw   0xF9
000D6E 6E1D           01334         movwf   d50ms
                      01335 
000D70                01336 loop50ms
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D70 EC?? F???      01337         call    Delay200us
000D74 2E1D           01338         decfsz  d50ms
                      01339 
000D76                01340 Cycles
000D76 EF?? F???      01341         goto    loop50ms
000D7A EC?? F???      01342         call    Delay200us
000D7E 0012           01343         return
                      01344 
000D80                01345 WriteEE_RTC
                      01346         WriteEE tens_digit, H_EE, L_EE
000D80 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D84 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D88 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000D8C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D8E D???               M         bra     $-2
                          M 
000D90 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D92 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D94 84A6               M         bsf     EECON1, WREN        ; enable write
000D96 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D98 98A1               M         bcf     PIR2, EEIF
                          M 
000D9A 0E55               M         movlw   0x55
000D9C 6EA7               M         movwf   EECON2              ; write 55h
000D9E 0EAA               M         movlw   0xaa
000DA0 6EA7               M         movwf   EECON2              ; write 0xaa
000DA2 82A6               M         bsf     EECON1, WR          ; begin write
000DA4 B2A6               M         btfsc   EECON1, WR
000DA6 D???               M         bra     $-2
                          M 
000DA8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DAA 94A6               M         bcf     EECON1, WREN        ; disable writes
000DAC 2A21           01347         incf    L_EE
                      01348         WriteEE ones_digit, H_EE, L_EE
000DAE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DB2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DB6 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000DBA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DBC D???               M         bra     $-2
                          M 
000DBE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DC0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DC2 84A6               M         bsf     EECON1, WREN        ; enable write
000DC4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DC6 98A1               M         bcf     PIR2, EEIF
                          M 
000DC8 0E55               M         movlw   0x55
000DCA 6EA7               M         movwf   EECON2              ; write 55h
000DCC 0EAA               M         movlw   0xaa
000DCE 6EA7               M         movwf   EECON2              ; write 0xaa
000DD0 82A6               M         bsf     EECON1, WR          ; begin write
000DD2 B2A6               M         btfsc   EECON1, WR
000DD4 D???               M         bra     $-2
                          M 
000DD6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DD8 94A6               M         bcf     EECON1, WREN        ; disable writes
000DDA 2A21           01349         incf    L_EE
000DDC 0012           01350         return
                      01351 
000DDE                01352 ClearEEPROM_21
000DDE 6A20           01353         clrf    H_EE
000DE0 6A21           01354         clrf    L_EE
000DE2 681F           01355         setf    clear_EE
000DE4 6A15           01356         clrf    counter
000DE6                01357 ClearNext
                      01358         WriteEE         clear_EE, H_EE, L_EE
000DE6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DEA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DEE C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000DF2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DF4 D???               M         bra     $-2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000DF6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DF8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DFA 84A6               M         bsf     EECON1, WREN        ; enable write
000DFC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DFE 98A1               M         bcf     PIR2, EEIF
                          M 
000E00 0E55               M         movlw   0x55
000E02 6EA7               M         movwf   EECON2              ; write 55h
000E04 0EAA               M         movlw   0xaa
000E06 6EA7               M         movwf   EECON2              ; write 0xaa
000E08 82A6               M         bsf     EECON1, WR          ; begin write
000E0A B2A6               M         btfsc   EECON1, WR
000E0C D???               M         bra     $-2
                          M 
000E0E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E10 94A6               M         bcf     EECON1, WREN        ; disable writes
000E12 2A15           01359         incf            counter
000E14 2A21           01360         incf            L_EE
000E16 0E15           01361         movlw           d'21'
000E18 6215           01362         cpfseq          counter
000E1A EF?? F???      01363         goto            ClearNext
000E1E 6A20           01364         clrf            H_EE
000E20 6A21           01365         clrf            L_EE
000E22 0012           01366         return
                      01367         
000E24                01368 READ_KEY
000E24 A281           01369         btfss   PORTB, 1        ; check for keypad interrupt
000E26 EF?? F???      01370         goto    READ_KEY
000E2A 3881           01371         swapf   PORTB, W
000E2C 0B0F           01372         andlw   0x0F
000E2E 6E10           01373         movwf   KEY
000E30 B281           01374         btfsc   PORTB, 1
000E32 EF?? F???      01375         goto    $-2
000E36 0012           01376         return
                      01377 
000E38                01378 READ_KEY_TIME
000E38 EC?? F???      01379         call        LCD_L2          ; go to second line to print RTC    
                      01380         ; display the time
                      01381         ; call      DISPLAY_RTC 
                      01382 
000E3C A281           01383         btfss       PORTB, 1    ; keypad interrupt
000E3E EF?? F???      01384         goto        READ_KEY_TIME
000E42 3881           01385         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E44 0B0F           01386         andlw       0x0F        ; only want W3:0
000E46 6E10           01387         movwf       KEY         ; write this value to the KEY
000E48 B281           01388         btfsc       PORTB, 1    ; wait for release
000E4A EF?? F???      01389         goto        $-2         ; go back one instruction
000E4E 0012           01390         return
                      01391 
000E50                01392 DisplayExeTime
                      01393         READEE  REG_EE, H_EE, L_EE
000E50 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E54 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E58 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E5A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E5C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E5E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E62 0EFF           01394         movlw   0xFF
000E64 6222           01395         cpfseq  REG_EE
000E66 EF?? F???      01396         goto    NoSkipDispExeTime
                      01397         Display NoData
  0000                    M         local   loop
000E6A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E6C 6EF8               M         movwf   TBLPTRU
000E6E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E70 6EF7               M         movwf   TBLPTRH
000E72 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E74 6EF6               M         movwf   TBLPTRL
000E76 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E78 50F5               M         movf    TABLAT, W
000E7A                    M loop
000E7A EC?? F???          M         call    WR_DATA         ; write to LCD
000E7E 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E80 50F5               M         movf    TABLAT, W
000E82 E1??               M         bnz     loop
000E84 0EFF           01398         movlw   0xFF
000E86 6022           01399         cpfslt  REG_EE
000E88 EF?? F???      01400         goto    SkipDispExeTime
000E8C 0012           01401         return
                      01402 
000E8E                01403 NoSkipDispExeTime
                      01404         READEE  WREG, H_EE, L_EE
000E8E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E92 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E96 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E98 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E9A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E9C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EA0 EC?? F???      01405         call    WR_DATA
000EA4 2A21           01406         incf    L_EE
                      01407         
                      01408         READEE  WREG, H_EE, L_EE
000EA6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EAA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EAE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EB0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EB2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EB4 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EB8 EC?? F???      01409         call    WR_DATA
000EBC 2A21           01410         incf    L_EE
                      01411         
                      01412         READEE  WREG, H_EE, L_EE
000EBE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EC2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EC6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EC8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ECA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ECC CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000ED0 EC?? F???      01413         call    WR_DATA
000ED4 2A21           01414         incf    L_EE
                      01415 
000ED6 0E73           01416         movlw   0x73            ; Write 's'
000ED8 EC?? F???      01417         call    WR_DATA
000EDC EC?? F???      01418         call    LCD_L2
000EE0                01419 SkipDispExeTime
000EE0 0012           01420         return
                      01421 
000EE2                01422 DispOpSort
                      01423         READEE  REG_EE, H_EE, L_EE
000EE2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EE6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EEA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EEC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EEE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EF0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EF4 0EFF           01424         movlw   0xff
000EF6 6222           01425         cpfseq  REG_EE
000EF8 EF?? F???      01426         goto    NoSkipDispOpSort
                      01427         Display NoData
  0000                    M         local   loop
000EFC 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EFE 6EF8               M         movwf   TBLPTRU
000F00 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F02 6EF7               M         movwf   TBLPTRH
000F04 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F06 6EF6               M         movwf   TBLPTRL
000F08 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F0A 50F5               M         movf    TABLAT, W
000F0C                    M loop
000F0C EC?? F???          M         call    WR_DATA         ; write to LCD
000F10 000B               M         tblrd+*                 ; next row in table
000F12 50F5               M         movf    TABLAT, W
000F14 E1??               M         bnz     loop
000F16 0EFF           01428         movlw   0xff
000F18 6022           01429         cpfslt  REG_EE
000F1A EF?? F???      01430         goto    SkipDispOpSort
                      01431 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F1E                01432 NoSkipDispOpSort
000F1E 0E61           01433         movlw   "a"
000F20 EC?? F???      01434         call    WR_DATA
                      01435         
                      01436         READEE  REG_EE, H_EE, L_EE
000F24 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F28 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F2C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F2E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F30 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F32 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F36 C022 FFE8      01437         movff   REG_EE, WREG
000F3A EC?? F???      01438         call    WR_DATA
000F3E 2A21           01439         incf    L_EE
                      01440         
000F40 0E20           01441         movlw   " "
000F42 EC?? F???      01442         call    WR_DATA
                      01443         
000F46 0E62           01444         movlw   "b"
000F48 EC?? F???      01445         call    WR_DATA
                      01446         
                      01447         READEE  REG_EE, H_EE, L_EE
000F4C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F50 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F54 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F56 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F58 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F5A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F5E C022 FFE8      01448         movff   REG_EE, WREG
000F62 EC?? F???      01449         call    WR_DATA
000F66 2A21           01450         incf    L_EE
                      01451         
000F68 0E20           01452         movlw   " "
000F6A EC?? F???      01453         call    WR_DATA
                      01454         
000F6E 0E63           01455         movlw   "c"
000F70 EC?? F???      01456         call    WR_DATA
                      01457         
                      01458         READEE  REG_EE, H_EE, L_EE
000F74 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F78 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F7C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F7E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F80 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F82 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F86 C022 FFE8      01459         movff   REG_EE, WREG
000F8A EC?? F???      01460         call    WR_DATA
000F8E 2A21           01461         incf    L_EE
                      01462         
000F90 0E20           01463         movlw   " "
000F92 EC?? F???      01464         call    WR_DATA
                      01465         
000F96 0E64           01466         movlw   "d"
000F98 EC?? F???      01467         call    WR_DATA
                      01468         
                      01469         READEE  REG_EE, H_EE, L_EE
000F9C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FA0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FA4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FA8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FAA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FAE C022 FFE8      01470         movff   REG_EE, WREG
000FB2 EC?? F???      01471         call    WR_DATA
000FB6 2A21           01472         incf    L_EE
                      01473 
000FB8                01474 SkipDispOpSort
000FB8 0012           01475         return
                      01476         
000FBA                01477 DispOpRTC
                      01478         READEE  REG_EE, H_EE, L_EE
000FBA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FBE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FC2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000FC4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FC6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FC8 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FCC 0EFF           01479         movlw   0xff
000FCE 6222           01480         cpfseq  REG_EE
000FD0 EF?? F???      01481         goto    NoSkipDispOpRTC
                      01482         Display NoData
  0000                    M         local   loop
000FD4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000FD6 6EF8               M         movwf   TBLPTRU
000FD8 0E??               M         movlw   high NoData     ; Move Table<15:8>
000FDA 6EF7               M         movwf   TBLPTRH
000FDC 0E??               M         movlw   low NoData      ; Move Table<7:0>
000FDE 6EF6               M         movwf   TBLPTRL
000FE0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000FE2 50F5               M         movf    TABLAT, W
000FE4                    M loop
000FE4 EC?? F???          M         call    WR_DATA         ; write to LCD
000FE8 000B               M         tblrd+*                 ; next row in table
000FEA 50F5               M         movf    TABLAT, W
000FEC E1??               M         bnz     loop
000FEE 0EFF           01483         movlw   0xff
000FF0 6022           01484         cpfslt  REG_EE
000FF2 EF?? F???      01485         goto    SkipDispOpRTC
                      01486 
000FF6                01487 NoSkipDispOpRTC
                      01488         READEE  REG_EE, H_EE, L_EE
000FF6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FFA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FFE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001000 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001002 80A6               M         bsf     EECON1, RD          ; read EEPROM
001004 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001008 C022 FFE8      01489         movff   REG_EE, WREG
00100C EC?? F???      01490         call    WR_DATA
001010 2A21           01491         incf    L_EE
                      01492         
                      01493         READEE  REG_EE, H_EE, L_EE
001012 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001016 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00101A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00101C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00101E 80A6               M         bsf     EECON1, RD          ; read EEPROM
001020 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001024 C022 FFE8      01494         movff   REG_EE, WREG
001028 EC?? F???      01495         call    WR_DATA
00102C 2A21           01496         incf    L_EE
                      01497 
00102E 0E68           01498         movlw   "h"
001030 EC?? F???      01499         call    WR_DATA
                      01500         
001034 EC?? F???      01501         call    DispOpRTC_Helper
                      01502         
001038 0E20           01503         movlw   " "
00103A EC?? F???      01504         call    WR_DATA
                      01505         
00103E EC?? F???      01506         call    DispOpRTC_Helper
001042 0E2F           01507         movlw   "/"
001044 EC?? F???      01508         call    WR_DATA
                      01509 
001048 EC?? F???      01510         call    DispOpRTC_Helper
00104C 0E2F           01511         movlw   "/"
00104E EC?? F???      01512         call    WR_DATA
001052 EC?? F???      01513         call    DispOpRTC_Helper
001056                01514 SkipDispOpRTC
001056 0012           01515                 return
001058                01516 DispOpRTC_Helper
                      01517         READEE          REG_EE, H_EE, L_EE
001058 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00105C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001060 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001062 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001064 80A6               M         bsf     EECON1, RD          ; read EEPROM
001066 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-4-2017  20:31:45         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00106A C022 FFE8      01518         movff           REG_EE, WREG
00106E EC?? F???      01519         call            WR_DATA
001072 2A21           01520         incf            L_EE
                      01521         READEE          REG_EE, H_EE, L_EE
001074 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001078 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00107C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00107E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001080 80A6               M         bsf     EECON1, RD          ; read EEPROM
001082 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001086 C022 FFE8      01522         movff           REG_EE, WREG
00108A EC?? F???      01523         call            WR_DATA
00108E 2A21           01524         incf            L_EE
001090 0012           01525         return
Warning[205]: Found directive in column 1. (end)
                      01526 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

