MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009 ;*******************************************************************************
                      00010 ; configuration settings
                      00011 ;*******************************************************************************
                      00012 
Warning[205]: Found directive in column 1. (list)
                      00013 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00014 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00015 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00016 #include <i2c.inc>
  0000                00001     extern      I2C_Master_INIT, I2C_Master_WAIT,I2C_Master_START,I2C_Master_RSTART,I2C_Master_STOP,I2C_Master_WRITE, I2C_Master_REA
                            D, I2C_ACKDT 
                      00002 
                      00003 
                      00017 
                      00018     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00019     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00020     CONFIG WDT = OFF, WDTPS = 32768
                      00021     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00022     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00023     CONFIG DEBUG = ON
                      00024     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00025     CONFIG CPB = OFF, CPD = OFF
                      00026     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00027     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00028     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00029     CONFIG EBTRB = OFF
                      00030 
                      00031 ;*******************************************************************************
                      00032 ; variable and constants
                      00033 ;*******************************************************************************
                      00034             CODE
                      00035 ; timers
                      00036 #define     timer_H     0x9E
                      00037 #define     timer_L     0x58
  00000010            00038 OP_sec      equ         0x10
  00000011            00039 OP_INT      equ         0x11
                      00040 
                      00041 ; keys
  00000000            00042 key1        equ         d'0'
  00000001            00043 key2        equ         d'1'
  00000002            00044 key3        equ         d'2'
  00000003            00045 keyA        equ         d'3'
  00000004            00046 key4        equ         d'4'
  00000005            00047 key5        equ         d'5'
  00000006            00048 key6        equ         d'6'
  00000007            00049 keyB        equ         d'7'
  00000008            00050 key7        equ         d'8'
  00000009            00051 key8        equ         d'9'
  0000000A            00052 key9        equ         d'10'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            00053 keyC        equ         d'11'
  0000000C            00054 keyS        equ         d'12'
  0000000D            00055 key0        equ         d'13'
  0000000E            00056 keyH        equ         d'14'
  0000000F            00057 keyD        equ         d'15'
                      00058 
  00000050            00059 KEY         equ         0x50
  00000051            00060 temp_KEY    equ         0x51
  00000052            00061 KEY_ISR     equ         0x52
                      00062 
                      00063 ; temporary variable used in isrs
  00000005            00064 temp_ISR    equ         0x05
                      00065 
                      00066 ; temporary registers to save W and status
  00000001            00067 temp_S      equ         0x01
  00000002            00068 temp_W      equ         0x02
  00000003            00069 counter     equ         0x03
  00000004            00070 counter2    equ         0x04
  00000006            00071 temp        equ         0x06
                      00072 
                      00073 ; delays for timers
  00000028            00074 delayR      equ         0x28        ; primary delay register
  00000029            00075 d5us        equ         0x29        ; 5 us delay
  00000030            00076 d200us      equ         0x30        ; 200 us delay
  00000031            00077 d50ms       equ         0x31        ; 50 ms delay
                      00078 
                      00079 ; execution
  00000060            00080 inExecution equ         0x60
                      00081             
                      00082 ; EEPROM
                      00083 #define     temp_EE     d'220'
                      00084 #define     last_log    d'168'
  00000070            00085 clear_EE    equ         0x70
  00000071            00086 H_EE        equ         0x71
  00000072            00087 L_EE        equ         0x72
  00000073            00088 REG_EE      equ         0x73
  00000074            00089 tempH_EE    equ         0x74
  00000075            00090 tempL_EE    equ         0x75
  00000082            00091 tempL_EEC   equ         0x82
  00000076            00092 MAX_EE      equ         0x76
  00000077            00093 READ_EE     equ         0x77
  00000078            00094 LED_Count   equ         0x78
  00000079            00095 SkipCount   equ         0x79
                      00096 
                      00097 ; execution
  00000080            00098 exe_sec     equ         0x80
  00000081            00099 exe_int     equ         0x81
                      00100 
                      00101 ; pc interface
                      00102 ; rtc
  00000090            00103 tens_digit  equ         0x90
  00000091            00104 ones_digit  equ         0x91
                      00105 
                      00106 ;*******************************************************************************
                      00107 ; tables
                      00108 ;*******************************************************************************
000000 6F62 4C74 0000 00109 Welcome         db          "botL", 0
000006 726D 6820 206C 00110 Team            db          "mr hl hg", 0
       6768 0000 
000010 7453 6E61 6264 00111 StandBy         db          "Standby", 0
       0079 
000018 6954 656D 003A 00112 Log1            db          "Time:",0
00001E 3231 303A 2030 00113 Log2            db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
00002C 6153 6576 3A64 00114 LogInfo1        db          "Saved:", 0
       0000 
000034 6142 6B63 3C20 00115 LogInfo2        db          "Back <0>", 0
       3E30 0000 
00003E 6F53 7472 6E69 00116 Exe1            db          "Sorting...", 0
       2E67 2E2E 0000 
00004A 4E45 2044 2A3C 00117 Exe2            db          "END <*>", 0
       003E 
000052 7453 706F 6570 00118 Stopped         db          "Stopped", 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       0064 
00005A 6954 656D 203A 00119 Op_Time         db          "Time: ", 0
       0000 
000062 6153 6976 676E 00120 SAVE            db          "Saving...", 0
       2E2E 002E 
00006C 7254 6E61 6673 00121 Transfer        db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
00007C 6153 6566 7974 00122 Safety          db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
00008C 2F4E 0041      00123 NoData          db          "N/A", 0
                      00124 
                      00125 ;*******************************************************************************
                      00126 ; macros
                      00127 ;*******************************************************************************
                      00128 
                      00129 movMSB  macro   port
                      00130         andlw   0xF0
                      00131         iorwf   port, f
                      00132         iorlw   0x0F
                      00133         andwf   port, f
                      00134         endm
                      00135 
                      00136 Delay50N macro count, N
                      00137         local   loop
                      00138         movlw   N
                      00139         movwf   count
                      00140 
                      00141 loop
                      00142         call    Delay50ms
                      00143         decfsz  count
                      00144         goto    loop
                      00145         endm
                      00146 
                      00147 Display macro   Message
                      00148         local   loop
                      00149         movlw   upper Message   ; Move Table<20:16>
                      00150         movwf   TBLPTRU
                      00151         movlw   high Message    ; Move Table<15:8>
                      00152         movwf   TBLPTRH
                      00153         movlw   low Message     ; Move Table<7:0>
                      00154         movwf   TBLPTRL
                      00155         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00156         movf    TABLAT, W
                      00157 loop
                      00158         call    WR_DATA         ; write to LCD
                      00159         tblrd+*                 ; next row in table
                      00160         movf    TABLAT, W
                      00161         bnz     loop
                      00162         endm
                      00163 
                      00164 DisplayLog  macro   addrH, addrL
                      00165             local   Again, Finish
                      00166             clrf    SkipCount
                      00167             clrf    MAX_EE
                      00168 
                      00169             ; Check if there is No Data first
                      00170             READEE      REG_EE, addrH, addrL
                      00171             movlw       0xFF
                      00172             cpfseq      REG_EE
                      00173             goto        Again
                      00174             Display     NoData
                      00175             goto        Finish
                      00176 Again
                      00177             ; Put a space every 3 Writes
                      00178             movlw       d'3'
                      00179             cpfslt      SkipCount
                      00180             cpfslt      MAX_EE
                      00181             goto        Finish
                      00182 
                      00183             ; read EEPROM
                      00184             READEE      REG_EE, addrH, addrL
                      00185             btfsc       REG_EE, 7       ; if bit 7 set then done
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00186             goto        Finish
                      00187 Finish
                      00188             endm
                      00189 
                      00190 incf_BCD    macro   BCD
                      00191         local ones, endBCD
                      00192         movff   BCD, temp
                      00193         
                      00194         ;process ones digit
                      00195         movlw   0x0F
                      00196         andwf   temp
                      00197         movlw   d'9'
                      00198         
                      00199         ;skip if ones digit is 9
                      00200         cpfseq  temp
                      00201         goto    ones
                      00202         
                      00203         movlw   b'00010000'
                      00204         addwf   BCD
                      00205         movlw   0x0F
                      00206         andwf   BCD
                      00207         movlw   0xA0
                      00208         cpfslt  BCD
                      00209         
                      00210         clrf    BCD
                      00211         goto    endBCD
                      00212         
                      00213 ones
                      00214         incf    BCD
                      00215         goto    endBCD
                      00216 endBCD
                      00217         nop
                      00218         endm
                      00219 
                      00220 WriteRTC    macro
                      00221         movff   tens_digit, W
                      00222         call    WR_DATA
                      00223         movff   ones_digit, W
                      00224         call    WR_DATA
                      00225         endm
                      00226 
                      00227 WriteEE macro   word, addH, addL
                      00228         movff   addH, EEADRH    ; High address
                      00229         movff   addL, EEADRH    ; Low address
                      00230         movff   word, EEDATA    ; set word
                      00231 
                      00232         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00233         bra     $-2
                      00234 
                      00235         bcf     EECON1, EEPGD   ; Point to data memory
                      00236         bcf     EECON1, CFGS    ; Access EEPROM
                      00237         bsf     EECON1, WREN    ; enable write
                      00238         bcf     EECON1, GIE         ; disable interrupts during write
                      00239         bcf     PIR2, EEIF
                      00240 
                      00241         movlw   0x55
                      00242         movwf   EECON2      ; write 55h
                      00243         movlw   0xAA
                      00244         movwf   EECON2      ; write 0xAA
                      00245         bsf     EECON1, WR          ; begin write
                      00246         btfsc   EECON1, WR
                      00247         bra     $-2
                      00248 
                      00249         bsf     EECON1, GIE         ; enable interrupts after write
                      00250         bcf     EECON1, WREN        ; disable writes
                      00251         endm
                      00252 
                      00253 READEE  macro   file, addH, addL
                      00254         movff   addH, EEADRH        ; read to high
                      00255         movff   addL, EEADR         ; read to low
                      00256         bcf     EECON1, EEPGD       ; point to data memory
                      00257         bcf     EECON1, CFGS        ; access to EEPROM
                      00258         bsf     EECON1, RD          ; read EEPROM
                      00259         movff   EEDATA, file        ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00260         endm
                      00261 
                      00262 ChangeMode  macro   ModeId, NextMode
                      00263         local Next, Exit
                      00264 
                      00265         movlw   ModeId              ; poll for mode
                      00266         cpfseq  KEY                 ; check this against key press
                      00267         goto    Exit
                      00268 
                      00269 Next
                      00270         clrf    LATA                ; clear pins before proceeding
                      00271         clrf    LATB
                      00272         clrf    LATC
                      00273         clrf    LATD
                      00274         goto    NextMode
                      00275 
                      00276 Exit
                      00277         nop
                      00278         endm
                      00279 
                      00280 saveContext macro
                      00281     movff   STATUS, temp_S          ; save STATUS first
                      00282     movwf   temp_W                  ; save W
                      00283     endm
                      00284 
                      00285 restoreContext macro
                      00286     swapf   temp_W, W               ; restore W first
                      00287     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00288     endm
                      00289 ;*******************************************************************************
                      00290 ; reset vector and isrs
                      00291 ;*******************************************************************************
                      00292         ORG     0x000               ; processor reset vector
000000 EF?? F???      00293         goto    INIT                ; go to beginning of program
                      00294 
                      00295         ORG     0x008
000008 EF?? F???      00296         goto    ISR_HIGH
                      00297 
                      00298         ORG     0x018
000018 EF?? F???      00299         goto    ISR_LOW
                      00300 
00001C                00301 ISR_HIGH
                      00302         saveContext
00001C CFD8 F001          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E02               M     movwf   temp_W                  ; save W
                      00303 
                      00304         ;reset timer
000022 0E9E           00305         movlw   timer_H
000024 6ED7           00306         movwf   TMR0H
000026 0E4F           00307         movlw   timer_L - 9
000028 6ED6           00308         movwf   TMR0L
                      00309         
                      00310         ;timer interrupt
00002A A4F2           00311         btfss   INTCON, TMR0IF
00002C EF?? F???      00312         goto    END_ISR_HIGH
                      00313         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C011 F006          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0F
000036 1606               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6206               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2611               M         addwf   OP_INT
000044 0E0F               M         movlw   0x0F
000046 1611               M         andwf   OP_INT
000048 0EA0               M         movlw   0xA0
00004A 6011               M         cpfslt  OP_INT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
00004C 6A11               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A11               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00314         movlw   d'0'
00005C 6211           00315         cpfseq  OP_INT
00005E EF?? F???      00316         goto    END_ISR_HIGH
                      00317         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C010 F006          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0F
000068 1606               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6206               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2610               M         addwf   OP_sec
000076 0E0F               M         movlw   0x0F
000078 1610               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xA0
00007C 6010               M         cpfslt  OP_sec
                          M         
00007E 6A10               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A10               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00318 
00008C                00319 END_ISR_HIGH
00008C 94F2           00320         bcf     INTCON, TMR0IF
                      00321         restoreContext
00008E 3802               M     swapf   temp_W, W               ; restore W first
000090 C001 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00322         retfie
                      00323 
000096                00324 ISR_LOW
                      00325         saveContext
000096 CFD8 F001          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E02               M     movwf   temp_W                  ; save W
                      00326         ; KEYPAD INTERRUPT
00009C A0F0           00327         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00328         goto            END_ISR_LOW
                      00329 
                      00330         ;Check operation status
                      00331 ;       movlw           0xFF                                    ; If in operation, skip return
                      00332 ;       cpfseq          InExecution
                      00333 ;       goto            END_ISR_LOW
                      00334 
                      00335         ; Process KEY
0000A2 3881           00336         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00337         andlw           0x0F
0000A6 6E52           00338         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00339 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00340 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00341         goto            END_ISR_LOW
                      00342 
                      00343         ; Reset program counter
0000AC 6AFF           00344         clrf            TOSU
0000AE 6AFE           00345         clrf            TOSH
0000B0 6AFD           00346         clrf            TOSL
                      00347 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000B2                00348 END_ISR_LOW
0000B2 90F0           00349         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00350         restoreContext
0000B4 3802               M     swapf   temp_W, W               ; restore W first
0000B6 C001 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00351         
0000BA 6E02           00352         movwf   temp_W              ; save current W
0000BC CFD8 F001      00353         movff   STATUS, temp_S      ; save status
                      00354 
                      00355         ; ISR_Low routines
0000C0 C001 FFD8      00356         movff   temp_S, STATUS      ; retreive status
0000C4 3A02           00357         swapf   temp_W, f
0000C6 3802           00358         swapf   temp_W, w           ; restore W
0000C8 0010           00359         retfie
                      00360 
                      00361 ;*******************************************************************************
                      00362 ; main
                      00363 ;*******************************************************************************
0000CA                00364 INIT
                      00365         ; i/o
0000CA 0E00           00366         movlw   b'00000000'
0000CC 6E92           00367         movwf   TRISA
0000CE 0EFF           00368         movlw   b'11111111'
0000D0 6E93           00369         movwf   TRISB               ; keypad
0000D2 0EBF           00370         movlw   b'10111111'
0000D4 6E94           00371         movwf   TRISC
0000D6 0E00           00372         movlw   b'00000000'
0000D8 6E95           00373         movwf   TRISD
0000DA 0E07           00374         movlw   b'00000111'
0000DC 6E96           00375         movwf   TRISE
                      00376 
                      00377         ; analog/digital pins
0000DE 0E0F           00378         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00379         movwf   ADCON1
                      00380 
                      00381         ; clear Ports
0000E2 6A89           00382         clrf    LATA
0000E4 6A8A           00383         clrf    LATB
0000E6 6A8B           00384         clrf    LATC
0000E8 6A8C           00385         clrf    LATD
0000EA 6A8D           00386         clrf    LATE
                      00387 
                      00388         ; initializations
0000EC EC?? F???      00389         call    InitLCD
0000F0 EC?? F???      00390         call    I2C_Master_INIT
0000F4 EC?? F???      00391         call    Delay50ms
                      00392         ;call   initUSART
                      00393         ;call   initEEPROM
                      00394 
0000F8 0E08           00395         movlw   b'00001000'
0000FA 6ED5           00396         movwf   T0CON
                      00397 
                      00398         ; interrupts
0000FC 6AD0           00399         clrf    RCON
0000FE 6AF2           00400         clrf    INTCON
000100 6AF1           00401         clrf    INTCON2
000102 6AF0           00402         clrf    INTCON3
000104 8ED0           00403         bsf     RCON, IPEN          ; priority mode
000106 8EF2           00404         bsf     INTCON, GIEH        ; permit global interrupts
000108 8CF2           00405         bsf     INTCON, GIEL
00010A 8AF1           00406         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
00010C 8AF2           00407         bsf     INTCON, TMR0IE
00010E 84F1           00408         bsf     INTCON2, TMR0IP     ; set to high priority
000110 86F0           00409         bsf     INTCON3, INT1IE
000112 9CF0           00410         bcf     INTCON3, INT1IP
                      00411 
000114 6A71           00412         clrf    H_EE
000116 6A72           00413         clrf    L_EE
000118 6B90           00414         clrf    tens_digit
00011A 6B91           00415         clrf    ones_digit
                      00416 
                      00417         ; set real time clock
                      00418 ;       call    I2C_Master_START
                      00419 ;       movlw   'w'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00420 ;       call    WR_DATA
                      00421 ;       call    Delay50ms
                      00422 ;       movlw   b'11010000'
                      00423 ;       call    I2C_Master_WRITE
                      00424 ;       movlw   0x00                ; memory point to seconds
                      00425 ;       call    I2C_Master_WRITE
                      00426 ;
                      00427 ;       movlw   0x00                ; set seconds to 0
                      00428 ;       call    I2C_Master_WRITE
                      00429 ;       movlw   0x40                ; set minutes to 40
                      00430 ;       call    I2C_Master_WRITE
                      00431 ;       movlw   0x15                ; set hours to 15
                      00432 ;       call    I2C_Master_WRITE
                      00433 ;       movlw   0x5                 ; set day to 5
                      00434 ;       call    I2C_Master_WRITE
                      00435 ;       movlw   0x02                ; set month to feb
                      00436 ;       call    I2C_Master_WRITE
                      00437 ;       movlw   0x17                ; set year to 17
                      00438 ;       call    I2C_Master_STOP
                      00439 
                      00440         Display Welcome
  0000                    M         local   loop
00011C 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00011E 6EF8               M         movwf   TBLPTRU
000120 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000122 6EF7               M         movwf   TBLPTRH
000124 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000126 6EF6               M         movwf   TBLPTRL
000128 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00012A 50F5               M         movf    TABLAT, W
00012C                    M loop
00012C EC?? F???          M         call    WR_DATA         ; write to LCD
000130 000B               M         tblrd+*                 ; next row in table
000132 50F5               M         movf    TABLAT, W
000134 E1??               M         bnz     loop
000136 EC?? F???      00441         call LCD_L2
                      00442         Display Team
  0000                    M         local   loop
00013A 0E??               M         movlw   upper Team      ; Move Table<20:16>
00013C 6EF8               M         movwf   TBLPTRU
00013E 0E??               M         movlw   high Team       ; Move Table<15:8>
000140 6EF7               M         movwf   TBLPTRH
000142 0E??               M         movlw   low Team        ; Move Table<7:0>
000144 6EF6               M         movwf   TBLPTRL
000146 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000148 50F5               M         movf    TABLAT, W
00014A                    M loop
00014A EC?? F???          M         call    WR_DATA         ; write to LCD
00014E 000B               M         tblrd+*                 ; next row in table
000150 50F5               M         movf    TABLAT, W
000152 E1??               M         bnz     loop
                      00443         Delay50N delayR, 0x3C
  0000                    M         local   loop
000154 0E3C               M         movlw   0x3C
000156 6E28               M         movwf   delayR
                          M 
000158                    M loop
000158 EC?? F???          M         call    Delay50ms
00015C 2E28               M         decfsz  delayR
00015E EF?? F???          M         goto    loop
                      00444 
                      00445 ;*******************************************************************************
                      00446 ; standby mode
                      00447 ;*******************************************************************************
000162                00448 STANDBY
000162 EC?? F???      00449         call    ClrLCD
                      00450         Display StandBy
  0000                    M         local   loop
000166 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000168 6EF8               M         movwf   TBLPTRU
00016A 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00016C 6EF7               M         movwf   TBLPTRH
00016E 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000170 6EF6               M         movwf   TBLPTRL
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000172 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000174 50F5               M         movf    TABLAT, W
000176                    M loop
000176 EC?? F???          M         call    WR_DATA         ; write to LCD
00017A 000B               M         tblrd+*                 ; next row in table
00017C 50F5               M         movf    TABLAT, W
00017E E1??               M         bnz     loop
                      00451 
000180                00452 HOLD_STANDBY
000180 EC?? F???      00453         call    READ_KEY_RTC
                      00454         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000184 0E03               M         movlw   keyA                ; poll for mode
000186 6250               M         cpfseq  KEY                 ; check this against key press
000188 EF?? F???          M         goto    Exit
                          M 
00018C                    M Next
00018C 6A89               M         clrf    LATA                ; clear pins before proceeding
00018E 6A8A               M         clrf    LATB
000190 6A8B               M         clrf    LATC
000192 6A8C               M         clrf    LATD
000194 EF?? F???          M         goto    EXECUTION
                          M 
000198                    M Exit
000198 0000               M         nop
                      00455         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
00019A 0E07               M         movlw   keyB                ; poll for mode
00019C 6250               M         cpfseq  KEY                 ; check this against key press
00019E EF?? F???          M         goto    Exit
                          M 
0001A2                    M Next
0001A2 6A89               M         clrf    LATA                ; clear pins before proceeding
0001A4 6A8A               M         clrf    LATB
0001A6 6A8B               M         clrf    LATC
0001A8 6A8C               M         clrf    LATD
0001AA EF?? F???          M         goto    LOG
                          M 
0001AE                    M Exit
0001AE 0000               M         nop
                      00456         ;ChangeMode keyC, PLOG
                      00457         ;ChangeMode keyD, PC
0001B0 D???           00458         bra     HOLD_STANDBY
                      00459 
                      00460 ;*******************************************************************************
                      00461 ; sorting statistics log mode
                      00462 ;*******************************************************************************
                      00463 
0001B2                00464 EXECUTION
                      00465         ; display
0001B2 6860           00466         setf        inExecution
0001B4 EC?? F???      00467         call        ClrLCD
                      00468         Display     Exe1
  0000                    M         local   loop
0001B8 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0001BA 6EF8               M         movwf   TBLPTRU
0001BC 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0001BE 6EF7               M         movwf   TBLPTRH
0001C0 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0001C2 6EF6               M         movwf   TBLPTRL
0001C4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001C6 50F5               M         movf    TABLAT, W
0001C8                    M loop
0001C8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001CC 000B               M         tblrd+*                 ; next row in table
0001CE 50F5               M         movf    TABLAT, W
0001D0 E1??               M         bnz     loop
0001D2 EC?? F???      00469         call        LCD_L2
                      00470         Display     Exe2
  0000                    M         local   loop
0001D6 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
0001D8 6EF8               M         movwf   TBLPTRU
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001DA 0E??               M         movlw   high Exe2       ; Move Table<15:8>
0001DC 6EF7               M         movwf   TBLPTRH
0001DE 0E??               M         movlw   low Exe2        ; Move Table<7:0>
0001E0 6EF6               M         movwf   TBLPTRL
0001E2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001E4 50F5               M         movf    TABLAT, W
0001E6                    M loop
0001E6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001EA 000B               M         tblrd+*                 ; next row in table
0001EC 50F5               M         movf    TABLAT, W
0001EE E1??               M         bnz     loop
                      00471         
                      00472 ;       ; start timer
                      00473 ;       movlw       timer_H                             ; 1
                      00474 ;       movwf       TMR0H
                      00475 ;       movlw       timer_L                             ; 1
                      00476 ;       movwf       TMR0L                               ; 1
                      00477 ;       bsf         T0CON, TMR0ON                       ; Turn on timer
                      00478 ;       call        ClearEEPROM_21
                      00479         
                      00480         ; initialize variables
0001F0 6A10           00481         clrf        OP_sec
0001F2 6A11           00482         clrf        OP_INT
                      00483 
0001F4                00484 HOLD_EXE
0001F4 EC?? F???      00485         call        READ_KEY
                      00486         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
0001F8 0E0C               M         movlw   keyS                ; poll for mode
0001FA 6250               M         cpfseq  KEY                 ; check this against key press
0001FC EF?? F???          M         goto    Exit
                          M 
000200                    M Next
000200 6A89               M         clrf    LATA                ; clear pins before proceeding
000202 6A8A               M         clrf    LATB
000204 6A8B               M         clrf    LATC
000206 6A8C               M         clrf    LATD
000208 EF?? F???          M         goto    EXIT_EXE
                          M 
00020C                    M Exit
00020C 0000               M         nop
00020E D???           00487         bra         HOLD_EXE
                      00488 
000210                00489 EXIT_EXE
                      00490         WriteEE     OP_sec, H_EE, L_EE
000210 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000214 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
000218 C010 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
00021C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00021E D???               M         bra     $-2
                          M 
000220 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000222 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000224 84A6               M         bsf     EECON1, WREN    ; enable write
000226 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000228 98A1               M         bcf     PIR2, EEIF
                          M 
00022A 0E55               M         movlw   0x55
00022C 6EA7               M         movwf   EECON2      ; write 55h
00022E 0EAA               M         movlw   0xAA
000230 6EA7               M         movwf   EECON2      ; write 0xAA
000232 82A6               M         bsf     EECON1, WR          ; begin write
000234 B2A6               M         btfsc   EECON1, WR
000236 D???               M         bra     $-2
                          M 
000238 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00023A 94A6               M         bcf     EECON1, WREN        ; disable writes
00023C 2A72           00491         incf        L_EE
                      00492         WriteEE     OP_INT, H_EE, L_EE
00023E C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000242 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
000246 C011 FFA8          M         movff   OP_INT, EEDATA  ; set word
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00024A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00024C D???               M         bra     $-2
                          M 
00024E 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000250 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000252 84A6               M         bsf     EECON1, WREN    ; enable write
000254 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000256 98A1               M         bcf     PIR2, EEIF
                          M 
000258 0E55               M         movlw   0x55
00025A 6EA7               M         movwf   EECON2      ; write 55h
00025C 0EAA               M         movlw   0xAA
00025E 6EA7               M         movwf   EECON2      ; write 0xAA
000260 82A6               M         bsf     EECON1, WR          ; begin write
000262 B2A6               M         btfsc   EECON1, WR
000264 D???               M         bra     $-2
                          M 
000266 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000268 94A6               M         bcf     EECON1, WREN        ; disable writes
00026A 2A72           00493         incf        L_EE
                      00494         
                      00495 ;       movlw       0x02
                      00496 ;       call        I2C_Master_READ                                     ; Hours
                      00497 ;       call        WriteEE_RTC
                      00498 ;       
                      00499 ;       movlw       0x01
                      00500 ;       call        I2C_Master_READ                                     ; Minutes
                      00501 ;       call        WriteEE_RTC
                      00502 ;       
                      00503 ;       movlw       0x05
                      00504 ;       call        I2C_Master_READ                                     ; Month
                      00505 ;       call        WriteEE_RTC
                      00506 ;       
                      00507 ;       movlw       0x04
                      00508 ;       call        I2C_Master_READ                                     ; Day
                      00509 ;       call        WriteEE_RTC
                      00510 ;       
                      00511 ;       movlw       0x06
                      00512 ;       call        I2C_Master_READ                                     ; Year
                      00513 ;       call        WriteEE_RTC
                      00514         
                      00515         ; Clear InOperation flag to stop '*' interrupts
00026C 6A60           00516         clrf        inExecution
00026E EF?? F???      00517         goto        SaveData
                      00518 
000272                00519 SaveData
000272 EC?? F???      00520         call        ClrLCD
                      00521         Display     SAVE
  0000                    M         local   loop
000276 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000278 6EF8               M         movwf   TBLPTRU
00027A 0E??               M         movlw   high SAVE       ; Move Table<15:8>
00027C 6EF7               M         movwf   TBLPTRH
00027E 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000280 6EF6               M         movwf   TBLPTRL
000282 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000284 50F5               M         movf    TABLAT, W
000286                    M loop
000286 EC?? F???          M         call    WR_DATA         ; write to LCD
00028A 000B               M         tblrd+*                 ; next row in table
00028C 50F5               M         movf    TABLAT, W
00028E E1??               M         bnz     loop
000290 0E00           00522         movlw       d'0'
000292 6E71           00523         movwf       H_EE
000294 C0A8 F072      00524         movff       last_log, L_EE
000298 0E00           00525         movlw       d'0'
00029A 6E74           00526         movwf       tempH_EE
00029C C082 F075      00527         movff       tempL_EEC, tempL_EE
0002A0 6A04           00528         clrf        counter2
0002A2 6A03           00529         clrf        counter
                      00530 
0002A4                00531 ShiftLoop
0002A4 2A03           00532         incf            counter
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00533         READEE          REG_EE, H_EE, L_EE
0002A6 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0002AA C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0002AE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0002B0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0002B2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0002B4 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0002B8 0E15           00534         movlw           d'21'
0002BA 2672           00535         addwf           L_EE
                      00536         WriteEE         REG_EE, H_EE, L_EE
0002BC C071 FFAA          M         movff   H_EE, EEADRH    ; High address
0002C0 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
0002C4 C073 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
0002C8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0002CA D???               M         bra     $-2
                          M 
0002CC 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0002CE 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0002D0 84A6               M         bsf     EECON1, WREN    ; enable write
0002D2 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0002D4 98A1               M         bcf     PIR2, EEIF
                          M 
0002D6 0E55               M         movlw   0x55
0002D8 6EA7               M         movwf   EECON2      ; write 55h
0002DA 0EAA               M         movlw   0xAA
0002DC 6EA7               M         movwf   EECON2      ; write 0xAA
0002DE 82A6               M         bsf     EECON1, WR          ; begin write
0002E0 B2A6               M         btfsc   EECON1, WR
0002E2 D???               M         bra     $-2
                          M 
0002E4 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002E6 94A6               M         bcf     EECON1, WREN        ; disable writes
0002E8 0E14           00537         movlw           d'20'
0002EA 5E72           00538         subwf           L_EE
0002EC 0E15           00539         movlw           d'21'
0002EE 6203           00540         cpfseq          counter
0002F0 EF?? F???      00541         goto            ShiftLoop
                      00542         
                      00543         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
0002F4 0E2A           00544         movlw           d'42'
0002F6 5E72           00545         subwf           L_EE
0002F8 C082 F075      00546         movff           tempL_EEC, tempL_EE
0002FC 6A03           00547         clrf            counter
0002FE 2A04           00548         incf            counter2
000300 0E09           00549         movlw           d'9'
000302 6204           00550         cpfseq          counter2                                        ; Skip if 9 shifts were made
000304 EF?? F???      00551         goto            ShiftLoop
                      00552         
                      00553         ; Finish Saving Data
                      00554         ;Stop Timer and goto OpLog
000308 9ED5           00555         bcf             T0CON, TMR0ON
00030A 0E09           00556         movlw           d'9'
00030C 6E72           00557         movwf           L_EE
                      00558         WriteEE         OP_sec, H_EE, L_EE
00030E C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000312 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
000316 C010 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
00031A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00031C D???               M         bra     $-2
                          M 
00031E 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000320 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000322 84A6               M         bsf     EECON1, WREN    ; enable write
000324 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000326 98A1               M         bcf     PIR2, EEIF
                          M 
000328 0E55               M         movlw   0x55
00032A 6EA7               M         movwf   EECON2      ; write 55h
00032C 0EAA               M         movlw   0xAA
00032E 6EA7               M         movwf   EECON2      ; write 0xAA
000330 82A6               M         bsf     EECON1, WR          ; begin write
000332 B2A6               M         btfsc   EECON1, WR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000334 D???               M         bra     $-2
                          M 
000336 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000338 94A6               M         bcf     EECON1, WREN        ; disable writes
00033A 2A72           00559         incf            L_EE
                      00560         WriteEE         OP_INT, H_EE, L_EE
00033C C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000340 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
000344 C011 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
000348 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00034A D???               M         bra     $-2
                          M 
00034C 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00034E 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000350 84A6               M         bsf     EECON1, WREN    ; enable write
000352 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000354 98A1               M         bcf     PIR2, EEIF
                          M 
000356 0E55               M         movlw   0x55
000358 6EA7               M         movwf   EECON2      ; write 55h
00035A 0EAA               M         movlw   0xAA
00035C 6EA7               M         movwf   EECON2      ; write 0xAA
00035E 82A6               M         bsf     EECON1, WR          ; begin write
000360 B2A6               M         btfsc   EECON1, WR
000362 D???               M         bra     $-2
                          M 
000364 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000366 94A6               M         bcf     EECON1, WREN        ; disable writes
000368 2A72           00561         incf            L_EE
00036A EF?? F???      00562         goto            LOG
                      00563         
00036E                00564 LOG
00036E EC?? F???      00565         call    ClrLCD
                      00566         Display Log1
  0000                    M         local   loop
000372 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000374 6EF8               M         movwf   TBLPTRU
000376 0E??               M         movlw   high Log1       ; Move Table<15:8>
000378 6EF7               M         movwf   TBLPTRH
00037A 0E??               M         movlw   low Log1        ; Move Table<7:0>
00037C 6EF6               M         movwf   TBLPTRL
00037E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000380 50F5               M         movf    TABLAT, W
000382                    M loop
000382 EC?? F???          M         call    WR_DATA         ; write to LCD
000386 000B               M         tblrd+*                 ; next row in table
000388 50F5               M         movf    TABLAT, W
00038A E1??               M         bnz     loop
                      00567 
                      00568         ; display most recent run data
00038C 0E09           00569         movlw   d'9'
00038E 6E72           00570         movwf   L_EE
                      00571         READEE  OP_sec, H_EE, L_EE
000390 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000394 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000398 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00039A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00039C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00039E CFA8 F010          M         movff   EEDATA, OP_sec      ; put data into file
0003A2 2A72           00572         incf    L_EE
                      00573         READEE  OP_INT, H_EE, L_EE
0003A4 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0003A8 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0003AC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0003AE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0003B0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0003B2 CFA8 F011          M         movff   EEDATA, OP_INT      ; put data into file
0003B6 2A72           00574         incf    L_EE
0003B8 EC?? F???      00575         call    DisplayTime
                      00576 
0003BC EC?? F???      00577         call    LCD_L2
0003C0 6A72           00578         clrf    L_EE
0003C2 EC?? F???      00579         call    DispOpRTC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00580 
0003C6                00581 HOLD_LOG
0003C6 EC?? F???      00582         call    READ_KEY
                      00583         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0003CA 0E07               M         movlw   keyB                ; poll for mode
0003CC 6250               M         cpfseq  KEY                 ; check this against key press
0003CE EF?? F???          M         goto    Exit
                          M 
0003D2                    M Next
0003D2 6A89               M         clrf    LATA                ; clear pins before proceeding
0003D4 6A8A               M         clrf    LATB
0003D6 6A8B               M         clrf    LATC
0003D8 6A8C               M         clrf    LATD
0003DA EF?? F???          M         goto    LOG_INFO
                          M 
0003DE                    M Exit
0003DE 0000               M         nop
                      00584         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0003E0 0E0D               M         movlw   key0                ; poll for mode
0003E2 6250               M         cpfseq  KEY                 ; check this against key press
0003E4 EF?? F???          M         goto    Exit
                          M 
0003E8                    M Next
0003E8 6A89               M         clrf    LATA                ; clear pins before proceeding
0003EA 6A8A               M         clrf    LATB
0003EC 6A8B               M         clrf    LATC
0003EE 6A8C               M         clrf    LATD
0003F0 EF?? F???          M         goto    STANDBY
                          M 
0003F4                    M Exit
0003F4 0000               M         nop
0003F6 D???           00585         bra     HOLD_LOG
                      00586 
0003F8                00587 LOG_INFO
0003F8 EC?? F???      00588         call    ClrLCD
                      00589         Display LogInfo1
  0000                    M         local   loop
0003FC 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
0003FE 6EF8               M         movwf   TBLPTRU
000400 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000402 6EF7               M         movwf   TBLPTRH
000404 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000406 6EF6               M         movwf   TBLPTRL
000408 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00040A 50F5               M         movf    TABLAT, W
00040C                    M loop
00040C EC?? F???          M         call    WR_DATA         ; write to LCD
000410 000B               M         tblrd+*                 ; next row in table
000412 50F5               M         movf    TABLAT, W
000414 E1??               M         bnz     loop
000416 EC?? F???      00590         call    LCD_L2
                      00591         Display LogInfo2
  0000                    M         local   loop
00041A 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00041C 6EF8               M         movwf   TBLPTRU
00041E 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000420 6EF7               M         movwf   TBLPTRH
000422 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000424 6EF6               M         movwf   TBLPTRL
000426 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000428 50F5               M         movf    TABLAT, W
00042A                    M loop
00042A EC?? F???          M         call    WR_DATA         ; write to LCD
00042E 000B               M         tblrd+*                 ; next row in table
000430 50F5               M         movf    TABLAT, W
000432 E1??               M         bnz     loop
000434                00592 HOLD_LOG_INFO
000434 EC?? F???      00593         call    READ_KEY
                      00594         ChangeMode key0, LOG
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000438 0E0D               M         movlw   key0                ; poll for mode
00043A 6250               M         cpfseq  KEY                 ; check this against key press
00043C EF?? F???          M         goto    Exit
                          M 
000440                    M Next
000440 6A89               M         clrf    LATA                ; clear pins before proceeding
000442 6A8A               M         clrf    LATB
000444 6A8B               M         clrf    LATC
000446 6A8C               M         clrf    LATD
000448 EF?? F???          M         goto    LOG
                          M 
00044C                    M Exit
00044C 0000               M         nop
00044E D???           00595         bra     HOLD_LOG
                      00596 
                      00597 ;*******************************************************************************
                      00598 ; subroutines
                      00599 ;*******************************************************************************
                      00600 
000450                00601 Delay5us
000450 0E78           00602         movlw   d'120'
000452 6E29           00603         movwf   d5us
                      00604 
000454                00605 loop5us
000454 2E29           00606         decfsz  d5us
000456 EF?? F???      00607         goto    loop5us
00045A 0000           00608         nop
00045C 0012           00609         return
                      00610 
00045E                00611 Delay200us
00045E 0EA4           00612         movlw   0xA4
000460 6E30           00613         movwf   d200us
                      00614 
000462                00615 loop200us
000462 2E30           00616         decfsz  d200us
000464 EF?? F???      00617         goto    loop200us
000468 0000           00618         nop
00046A 0012           00619         return
                      00620 
00046C                00621 Delay50ms
00046C 0EF9           00622         movlw   0xF9
00046E 6E31           00623         movwf   d50ms
                      00624 
000470                00625 loop50ms
000470 EC?? F???      00626         call    Delay200us
000474 2E31           00627         decfsz  d50ms
                      00628 
000476                00629 Cycles
000476 EF?? F???      00630         goto    loop50ms
00047A EC?? F???      00631         call    Delay200us
00047E 0012           00632         return
                      00633 
000480                00634 WriteEE_RTC
                      00635         WriteEE tens_digit, H_EE, L_EE
000480 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000484 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
000488 C090 FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
00048C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00048E D???               M         bra     $-2
                          M 
000490 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000492 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000494 84A6               M         bsf     EECON1, WREN    ; enable write
000496 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000498 98A1               M         bcf     PIR2, EEIF
                          M 
00049A 0E55               M         movlw   0x55
00049C 6EA7               M         movwf   EECON2      ; write 55h
00049E 0EAA               M         movlw   0xAA
0004A0 6EA7               M         movwf   EECON2      ; write 0xAA
0004A2 82A6               M         bsf     EECON1, WR          ; begin write
0004A4 B2A6               M         btfsc   EECON1, WR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004A6 D???               M         bra     $-2
                          M 
0004A8 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0004AA 94A6               M         bcf     EECON1, WREN        ; disable writes
0004AC 2A72           00636         incf    L_EE
                      00637         WriteEE ones_digit, H_EE, L_EE
0004AE C071 FFAA          M         movff   H_EE, EEADRH    ; High address
0004B2 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
0004B6 C091 FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
0004BA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004BC D???               M         bra     $-2
                          M 
0004BE 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0004C0 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0004C2 84A6               M         bsf     EECON1, WREN    ; enable write
0004C4 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0004C6 98A1               M         bcf     PIR2, EEIF
                          M 
0004C8 0E55               M         movlw   0x55
0004CA 6EA7               M         movwf   EECON2      ; write 55h
0004CC 0EAA               M         movlw   0xAA
0004CE 6EA7               M         movwf   EECON2      ; write 0xAA
0004D0 82A6               M         bsf     EECON1, WR          ; begin write
0004D2 B2A6               M         btfsc   EECON1, WR
0004D4 D???               M         bra     $-2
                          M 
0004D6 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0004D8 94A6               M         bcf     EECON1, WREN        ; disable writes
0004DA 2A72           00638         incf    L_EE
0004DC 0012           00639         return
                      00640 
0004DE                00641 ClearEEPROM_21
0004DE 6A71           00642         clrf    H_EE
0004E0 6A72           00643         clrf    L_EE
0004E2 6870           00644         setf    clear_EE
0004E4 6A03           00645         clrf    counter
0004E6                00646 ClearNext
                      00647         WriteEE         clear_EE, H_EE, L_EE
0004E6 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
0004EA C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
0004EE C070 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
0004F2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004F4 D???               M         bra     $-2
                          M 
0004F6 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0004F8 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0004FA 84A6               M         bsf     EECON1, WREN    ; enable write
0004FC 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0004FE 98A1               M         bcf     PIR2, EEIF
                          M 
000500 0E55               M         movlw   0x55
000502 6EA7               M         movwf   EECON2      ; write 55h
000504 0EAA               M         movlw   0xAA
000506 6EA7               M         movwf   EECON2      ; write 0xAA
000508 82A6               M         bsf     EECON1, WR          ; begin write
00050A B2A6               M         btfsc   EECON1, WR
00050C D???               M         bra     $-2
                          M 
00050E 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000510 94A6               M         bcf     EECON1, WREN        ; disable writes
000512 2A03           00648         incf            counter
000514 2A72           00649         incf            L_EE
000516 0E15           00650         movlw           d'21'
000518 6203           00651         cpfseq          counter
00051A EF?? F???      00652         goto            ClearNext
00051E 6A71           00653         clrf            H_EE            ; reset EEPROMaddr
000520 6A72           00654         clrf            L_EE
000522 0012           00655         return
                      00656         
000524                00657 READ_KEY
000524                00658 HOLD_KEY
000524 A281           00659         btfss   PORTB, 1        ; check for keypad interrupt
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000526 EF?? F???      00660         goto    HOLD_KEY
00052A 3881           00661         swapf   PORTB, W
00052C 0B0F           00662         andlw   0x0F
00052E 6E50           00663         movwf   KEY
000530 B281           00664         btfsc   PORTB, 1
000532 EF?? F???      00665         goto    $-2
000536 0012           00666         return
                      00667 
000538                00668 READ_KEY_RTC
000538                00669 HOLD_KEY_RTC
000538 EC?? F???      00670         call        LCD_L2      ; go to second line to print RTC
                      00671 ;       call        I2C_Master_START
                      00672 ;       movlw       b'11010000'
                      00673 ;       movlw       0x00
                      00674 ;       call        I2C_Master_WRITE
                      00675 ;       call        I2C_Master_STOP
                      00676 ;
                      00677 ;       movlw       0x01        ; set ACKDT
                      00678 ;       movwf       I2C_ACKDT
                      00679 ;
                      00680 ;       movlw       0x02        ; get hours
                      00681 ;       call        I2C_Master_READ
                      00682 ;       movf        tens_digit, W
                      00683 ;       andlw       b'00000001'
                      00684 ;       addlw       0x30
                      00685 ;       call        WR_DATA
                      00686 ;       movf        ones_digit, W
                      00687 ;       call        WR_DATA
                      00688 ;       movlw       0x01        ; get minutes
                      00689 ;       call        I2C_Master_READ
                      00690 ;       WriteRTC
                      00691 ;       movlw       " "         ; wow grate formatng very nice. thank you
                      00692 ;       call        WR_DATA
                      00693 ;       movlw       0x05        ; month
                      00694 ;       call        I2C_Master_READ
                      00695 ;       WriteRTC
                      00696 ;       movlw       0x2F        ; ascii code for forward slash
                      00697 ;       call        WR_DATA
                      00698 ;       movlw       0x04        ; get day
                      00699 ;       call        I2C_Master_READ
                      00700 ;       WriteRTC
                      00701 ;       movlw       0x2F        ; ascii code for forward slash
                      00702 ;       call        WR_DATA
                      00703 ;       movlw       0x00        ; clear ACKDT
                      00704 ;       movwf       I2C_ACKDT
                      00705 ;       movlw    0x06           ; get year
                      00706 ;       call        I2C_Master_READ
                      00707 ;       WriteRTC
                      00708 
00053C A281           00709         btfss       PORTB, 1    ; keypad interrupt
00053E EF?? F???      00710         goto        HOLD_KEY_RTC
000542 3881           00711         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000544 0B0F           00712         andlw       0x0F        ; only want W3:0
000546 6E50           00713         movwf       KEY         ; write this value to the KEY
000548 B281           00714         btfsc       PORTB, 1    ; wait for release
00054A EF?? F???      00715         goto        $-2         ; go back one instruction
00054E 0012           00716         return
                      00717 
000550                00718 DisplayTime
                      00719         READEE  REG_EE, H_EE, L_EE
000550 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000554 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000558 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00055A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00055C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00055E CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
000562 0EFF           00720         movlw   0xFF
000564 6273           00721         cpfseq  REG_EE
000566 EF?? F???      00722         goto    NoSkipDispOpTime
                      00723         Display NoData
  0000                    M         local   loop
00056A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
00056C 6EF8               M         movwf   TBLPTRU
00056E 0E??               M         movlw   high NoData     ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000570 6EF7               M         movwf   TBLPTRH
000572 0E??               M         movlw   low NoData      ; Move Table<7:0>
000574 6EF6               M         movwf   TBLPTRL
000576 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000578 50F5               M         movf    TABLAT, W
00057A                    M loop
00057A EC?? F???          M         call    WR_DATA         ; write to LCD
00057E 000B               M         tblrd+*                 ; next row in table
000580 50F5               M         movf    TABLAT, W
000582 E1??               M         bnz     loop
000584 0EFF           00724         movlw   0xFF
000586 6073           00725         cpfslt  REG_EE
000588 EF?? F???      00726         goto    SkipDispOpTime
                      00727 
00058C                00728 NoSkipDispOpTime
00058C 3810           00729         swapf   OP_sec, W
00058E 6E06           00730         movwf   temp
000590 0E0F           00731         movlw   0x0F
000592 1606           00732         andwf   temp
000594 C006 FFE8      00733         movff   temp, WREG
000598 0F30           00734         addlw   0x30
00059A EC?? F???      00735         call    WR_DATA
                      00736 
00059E C010 F006      00737         movff   OP_sec, temp    ; 1's seconds
0005A2 0E0F           00738         movlw   0x0F
0005A4 1606           00739         andwf   temp            ; Temp = lower nibble of Op_Seconds
0005A6 C006 FFE8      00740         movff   temp, WREG      ; W = Temp
0005AA 0F30           00741         addlw   0x30            ; Convert to ASCII
0005AC EC?? F???      00742         call    WR_DATA
                      00743 
0005B0 0E2E           00744         movlw   0x2E            ; Write '.'
0005B2 EC?? F???      00745         call    WR_DATA
                      00746 
0005B6 0E73           00747         movlw   0x73            ; Write 's'
0005B8 EC?? F???      00748         call    WR_DATA
0005BC EC?? F???      00749         call    LCD_L2
0005C0                00750 SkipDispOpTime
0005C0 0012           00751         return
                      00752 
0005C2                00753 DispOpRTC
0005C2 0E0B           00754         movlw   d'11'
0005C4 2672           00755         addwf   L_EE
                      00756 
                      00757         READEE  REG_EE, H_EE, L_EE
0005C6 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005CA C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0005CE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005D0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005D2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005D4 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0005D8 0EFF           00758         movlw   0xFF
0005DA 6273           00759         cpfseq  REG_EE
0005DC EF?? F???      00760         goto    NoSkipDispOpRTC
                      00761         Display NoData
  0000                    M         local   loop
0005E0 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0005E2 6EF8               M         movwf   TBLPTRU
0005E4 0E??               M         movlw   high NoData     ; Move Table<15:8>
0005E6 6EF7               M         movwf   TBLPTRH
0005E8 0E??               M         movlw   low NoData      ; Move Table<7:0>
0005EA 6EF6               M         movwf   TBLPTRL
0005EC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005EE 50F5               M         movf    TABLAT, W
0005F0                    M loop
0005F0 EC?? F???          M         call    WR_DATA         ; write to LCD
0005F4 000B               M         tblrd+*                 ; next row in table
0005F6 50F5               M         movf    TABLAT, W
0005F8 E1??               M         bnz     loop
0005FA 0EFF           00762         movlw   0xFF
0005FC 6073           00763         cpfslt  REG_EE
0005FE EF?? F???      00764         goto    SkipDispOpRTC
                      00765 
000602                00766 NoSkipDispOpRTC
                      00767         READEE  REG_EE, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-6-2017  12:26:25         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000602 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000606 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
00060A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00060C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00060E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000610 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
000614 C073 FFE8      00768         movff   REG_EE, WREG
000618 0BF1           00769         andlw   b'11110001'
00061A EC?? F???      00770         call    WR_DATA
00061E 2A72           00771         incf    L_EE
                      00772         READEE  REG_EE, H_EE, L_EE
000620 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000624 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000628 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00062A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00062C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00062E CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
000632 C073 FFE8      00773         movff   REG_EE, WREG
000636 EC?? F???      00774         call    WR_DATA
00063A 2A72           00775         incf    L_EE
                      00776 
00063C 0E3A           00777         movlw           ":"
00063E EC?? F???      00778         call            WR_DATA
000642 EC?? F???      00779         call DispOpRTC_Helper
000646 0E20           00780         movlw           " "
000648 EC?? F???      00781         call            WR_DATA
00064C EC?? F???      00782         call DispOpRTC_Helper
000650 0E2F           00783         movlw           "/"
000652 EC?? F???      00784         call            WR_DATA
000656 EC?? F???      00785         call DispOpRTC_Helper
00065A 0E2F           00786         movlw           "/"
00065C EC?? F???      00787         call            WR_DATA
000660 EC?? F???      00788         call DispOpRTC_Helper
000664                00789 SkipDispOpRTC
000664 0012           00790                 return
000666                00791 DispOpRTC_Helper
                      00792         READEE          REG_EE, H_EE, L_EE
000666 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00066A C072 FFA9          M         movff   L_EE, EEADR         ; read to low
00066E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000670 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000672 80A6               M         bsf     EECON1, RD          ; read EEPROM
000674 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
000678 C073 FFE8      00793         movff           REG_EE, WREG
00067C EC?? F???      00794         call            WR_DATA
000680 2A72           00795         incf            L_EE
                      00796         READEE          REG_EE, H_EE, L_EE
000682 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000686 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
00068A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00068C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00068E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000690 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
000694 C073 FFE8      00797         movff           REG_EE, WREG
000698 EC?? F???      00798         call            WR_DATA
00069C 2A72           00799         incf            L_EE
00069E 0012           00800         return
Warning[205]: Found directive in column 1. (end)
                      00801 end

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

