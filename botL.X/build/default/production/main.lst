MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009 ;*******************************************************************************
                      00010 ; configuration settings
                      00011 ;*******************************************************************************
                      00012 
Warning[205]: Found directive in column 1. (list)
                      00013 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00014 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00015 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00016 #include <i2c.inc>
  0000                00001     extern      I2C_Master_INIT, I2C_Master_WAIT,I2C_Master_START,I2C_Master_RSTART,I2C_Master_STOP,I2C_Master_WRITE, I2C_Master_REA
                            D, I2C_ACKDT 
                      00002 
                      00003 
                      00017 
                      00018     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00019     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00020     CONFIG WDT = OFF, WDTPS = 32768
                      00021     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00022     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00023     CONFIG DEBUG = ON
                      00024     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00025     CONFIG CPB = OFF, CPD = OFF
                      00026     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00027     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00028     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00029     CONFIG EBTRB = OFF
                      00030 
                      00031 ;*******************************************************************************
                      00032 ; variable and constants
                      00033 ;*******************************************************************************
                      00034             CODE
                      00035 ; timers
                      00036 #define     timer_H     0x9E
                      00037 #define     timer_L     0x58
  00000010            00038 OP_sec      equ         0x10
  00000011            00039 OP_INT      equ         0x11
                      00040 
                      00041 ; keys
  00000000            00042 key1        equ         d'0'
  00000001            00043 key2        equ         d'1'
  00000002            00044 key3        equ         d'2'
  00000003            00045 keyA        equ         d'3'
  00000004            00046 key4        equ         d'4'
  00000005            00047 key5        equ         d'5'
  00000006            00048 key6        equ         d'6'
  00000007            00049 keyB        equ         d'7'
  00000008            00050 key7        equ         d'8'
  00000009            00051 key8        equ         d'9'
  0000000A            00052 key9        equ         d'10'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000B            00053 keyC        equ         d'11'
  0000000C            00054 keyS        equ         d'12'
  0000000D            00055 key0        equ         d'13'
  0000000E            00056 keyH        equ         d'14'
  0000000F            00057 keyD        equ         d'15'
                      00058 
  00000050            00059 KEY         equ         0x50
  00000051            00060 temp_KEY    equ         0x51
  00000052            00061 KEY_ISR     equ         0x52
                      00062 
                      00063 ; temporary variable used in isrs
  00000005            00064 temp_ISR    equ         0x05
                      00065 
                      00066 ; temporary registers to save W and status
  00000001            00067 temp_S      equ         0x01
  00000002            00068 temp_W      equ         0x02
  00000003            00069 counter     equ         0x03
  00000004            00070 counter2    equ         0x04
  00000006            00071 temp        equ         0x06
                      00072 
                      00073 ; delays for timers
  00000028            00074 delayR      equ         0x28        ; primary delay register
  00000029            00075 d5us        equ         0x29        ; 5 us delay
  00000030            00076 d200us      equ         0x30        ; 200 us delay
  00000031            00077 d50ms       equ         0x31        ; 50 ms delay
                      00078 
                      00079 ; execution
  00000060            00080 inExecution equ         0x60
                      00081             
                      00082 ; EEPROM
                      00083 #define     temp_EE     d'220'
                      00084 #define     last_log    d'168'
  00000070            00085 clear_EE    equ         0x70
  00000071            00086 H_EE        equ         0x71
  00000072            00087 L_EE        equ         0x72
  00000073            00088 REG_EE      equ         0x73
  00000074            00089 tempH_EE    equ         0x74
  00000075            00090 tempL_EE    equ         0x75
  00000082            00091 tempL_EEC   equ         0x82
  00000076            00092 MAX_EE      equ         0x76
  00000077            00093 READ_EE     equ         0x77
  00000078            00094 LED_Count   equ         0x78
  00000079            00095 SkipCount   equ         0x79
                      00096 
                      00097 ; execution
  00000080            00098 exe_sec     equ         0x80
  00000081            00099 exe_int     equ         0x81
                      00100 
                      00101 ; pc interface
                      00102 ; rtc
  00000090            00103 tens_digit  equ         0x90
  00000091            00104 ones_digit  equ         0x91
                      00105 
                      00106 ;*******************************************************************************
                      00107 ; tables
                      00108 ;*******************************************************************************
000000 6F62 4C74 0000 00109 Welcome         db          "botL", 0
000006 726D 6820 206C 00110 Team            db          "mr hl hg", 0
       6768 0000 
000010 7453 6E61 6264 00111 StandBy         db          "Standby", 0
       0079 
000018 6954 656D 003A 00112 Log1            db          "Time:",0
00001E 3231 303A 2030 00113 Log2            db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
00002C 6153 6576 3A64 00114 LogInfo1        db          "Saved:", 0
       0000 
000034 6142 6B63 3C20 00115 LogInfo2        db          "Back <0>", 0
       3E30 0000 
00003E 6F53 7472 6E69 00116 Exe1            db          "Sorting...", 0
       2E67 2E2E 0000 
00004A 4E45 2044 2A3C 00117 Exe2            db          "END <*>", 0
       003E 
000052 7453 706F 6570 00118 Stopped         db          "Stopped", 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       0064 
00005A 6954 656D 203A 00119 Op_Time         db          "Time: ", 0
       0000 
000062 6153 6976 676E 00120 SAVE            db          "Saving...", 0
       2E2E 002E 
00006C 7254 6E61 6673 00121 Transfer        db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
00007C 6153 6566 7974 00122 Safety          db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
00008C 2F4E 0041      00123 NoData          db          "N/A", 0
                      00124 
                      00125 ;*******************************************************************************
                      00126 ; macros
                      00127 ;*******************************************************************************
                      00128 
                      00129 movMSB  macro   port
                      00130         andlw   0xF0
                      00131         iorwf   port, f
                      00132         iorlw   0x0F
                      00133         andwf   port, f
                      00134         endm
                      00135 
                      00136 Delay50N macro count, N
                      00137         local   loop
                      00138         movlw   N
                      00139         movwf   count
                      00140 
                      00141 loop
                      00142         call    Delay50ms
                      00143         decfsz  count
                      00144         goto    loop
                      00145         endm
                      00146 
                      00147 Display macro   Message
                      00148         local   loop
                      00149         movlw   upper Message   ; Move Table<20:16>
                      00150         movwf   TBLPTRU
                      00151         movlw   high Message    ; Move Table<15:8>
                      00152         movwf   TBLPTRH
                      00153         movlw   low Message     ; Move Table<7:0>
                      00154         movwf   TBLPTRL
                      00155         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00156         movf    TABLAT, W
                      00157 loop
                      00158         call    WR_DATA         ; write to LCD
                      00159         tblrd+*                 ; next row in table
                      00160         movf    TABLAT, W
                      00161         bnz     loop
                      00162         endm
                      00163 
                      00164 DisplayLog  macro   addrH, addrL
                      00165             local   Again, Finish
                      00166             clrf    SkipCount
                      00167             clrf    MAX_EE
                      00168 
                      00169             ; Check if there is No Data first
                      00170             READEE      REG_EE, addrH, addrL
                      00171             movlw       0xFF
                      00172             cpfseq      REG_EE
                      00173             goto        Again
                      00174             Display     NoData
                      00175             goto        Finish
                      00176 Again
                      00177             ; Put a space every 3 Writes
                      00178             movlw       d'3'
                      00179             cpfslt      SkipCount
                      00180             cpfslt      MAX_EE
                      00181             goto        Finish
                      00182 
                      00183             ; read EEPROM
                      00184             READEE      REG_EE, addrH, addrL
                      00185             btfsc       REG_EE, 7       ; if bit 7 set then done
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00186             goto        Finish
                      00187 Finish
                      00188             endm
                      00189 
                      00190 WriteRTC    macro
                      00191         movff   tens_digit, W
                      00192         call    WR_DATA
                      00193         movff   ones_digit, W
                      00194         call    WR_DATA
                      00195         endm
                      00196 
                      00197 WriteEE macro   word, addH, addL
                      00198         movff   addH, EEADRH    ; High address
                      00199         movff   addL, EEADRH    ; Low address
                      00200         movff   word, EEDATA    ; set word
                      00201 
                      00202         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00203         bra     $-2
                      00204 
                      00205         bcf     EECON1, EEPGD   ; Point to data memory
                      00206         bcf     EECON1, CFGS    ; Access EEPROM
                      00207         bsf     EECON1, WREN    ; enable write
                      00208         bcf     EECON1, GIE         ; disable interrupts during write
                      00209         bcf     PIR2, EEIF
                      00210 
                      00211         movlw   0x55
                      00212         movwf   EECON2      ; write 55h
                      00213         movlw   0xAA
                      00214         movwf   EECON2      ; write 0xAA
                      00215         bsf     EECON1, WR          ; begin write
                      00216         btfsc   EECON1, WR
                      00217         bra     $-2
                      00218 
                      00219         bsf     EECON1, GIE         ; enable interrupts after write
                      00220         bcf     EECON1, WREN        ; disable writes
                      00221         endm
                      00222 
                      00223 READEE  macro   file, addH, addL
                      00224         movff   addH, EEADRH        ; read to high
                      00225         movff   addL, EEADR         ; read to low
                      00226         bcf     EECON1, EEPGD       ; point to data memory
                      00227         bcf     EECON1, CFGS        ; access to EEPROM
                      00228         bsf     EECON1, RD          ; read EEPROM
                      00229         movff   EEDATA, file        ; put data into file
                      00230         endm
                      00231 
                      00232 ChangeMode  macro   ModeId, NextMode
                      00233         local Next, Exit
                      00234 
                      00235         movlw   ModeId              ; poll for mode
                      00236         cpfseq  KEY                 ; check this against key press
                      00237         goto    Exit
                      00238 
                      00239 Next
                      00240         clrf    LATA                ; clear pins before proceeding
                      00241         clrf    LATB
                      00242         clrf    LATC
                      00243         clrf    LATD
                      00244         goto    NextMode
                      00245 
                      00246 Exit
                      00247         nop
                      00248         endm
                      00249 
                      00250 saveContext macro
                      00251     movff   STATUS, temp_S          ; save STATUS first
                      00252     movwf   temp_W                  ; save W
                      00253     endm
                      00254 
                      00255 restContext macro
                      00256     swapf   temp_W, W               ; restore W first
                      00257     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00258     endm
                      00259 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00260 ; reset vector and isrs
                      00261 ;*******************************************************************************
                      00262         ORG     0x000               ; processor reset vector
000000 EF?? F???      00263         goto    INIT                ; go to beginning of program
                      00264 
                      00265         ORG     0x008
000008 EF?? F???      00266         goto    ISR_High
                      00267 
                      00268         ORG     0x018
000018 EF?? F???      00269         goto    ISR_LOW
                      00270 
00001C                00271 ISR_High
00001C 6E02           00272         movwf   temp_W              ; save current W
00001E CFD8 F001      00273         movff   STATUS, temp_S      ; save status
                      00274 
                      00275         ; ISR_High routines
000022 C001 FFD8      00276         movff   temp_S, STATUS      ; retreive status
000026 3A02           00277         swapf   temp_W, f
000028 3802           00278         swapf   temp_W, w           ; restore W
00002A 0010           00279         retfie
                      00280 
00002C                00281 ISR_LOW
                      00282         saveContext
00002C CFD8 F001          M     movff   STATUS, temp_S          ; save STATUS first
000030 6E02               M     movwf   temp_W                  ; save W
                      00283         ; KEYPAD INTERRUPT
000032 A0F0           00284         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
000034 EF?? F???      00285         goto            END_ISR_LOW
                      00286 
                      00287         ;Check operation status
                      00288 ;       movlw           0xFF                                    ; If in operation, skip return
                      00289 ;       cpfseq          InExecution
                      00290 ;       goto            END_ISR_LOW
                      00291 
                      00292         ; Process KEY
000038 3881           00293         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
00003A 0B0F           00294         andlw           0x0F
00003C 6E52           00295         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00296 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00297 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
00003E EF?? F???      00298         goto            END_ISR_LOW
                      00299 
                      00300         ; Reset program counter
000042 6AFF           00301         clrf            TOSU
000044 6AFE           00302         clrf            TOSH
000046 6AFD           00303         clrf            TOSL
                      00304 
000048                00305 END_ISR_LOW
000048 90F0           00306     bcf                 INTCON3, INT1IF         ; Clear flag for next interrupt
                      00307     restContext
00004A 3802               M     swapf   temp_W, W               ; restore W first
00004C C001 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00308 
000050 6E02           00309         movwf   temp_W              ; save current W
000052 CFD8 F001      00310         movff   STATUS, temp_S      ; save status
                      00311 
                      00312         ; ISR_Low routines
000056 C001 FFD8      00313         movff   temp_S, STATUS      ; retreive status
00005A 3A02           00314         swapf   temp_W, f
00005C 3802           00315         swapf   temp_W, w           ; restore W
00005E 0010           00316         retfie
                      00317 
                      00318 ;*******************************************************************************
                      00319 ; main
                      00320 ;*******************************************************************************
000060                00321 INIT
                      00322         ; i/o
000060 0E00           00323         movlw   b'00000000'
000062 6E92           00324         movwf   TRISA
000064 0EFF           00325         movlw   b'11111111'
000066 6E93           00326         movwf   TRISB               ; keypad
000068 0EBF           00327         movlw   b'10111111'
00006A 6E94           00328         movwf   TRISC
00006C 0E00           00329         movlw   b'00000000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00006E 6E95           00330         movwf   TRISD
000070 0E07           00331         movlw   b'00000111'
000072 6E96           00332         movwf   TRISE
                      00333 
                      00334         ; analog/digital pins
000074 0E0F           00335         movlw   b'00001111'     ; Set all AN pins to Digital
000076 6EC1           00336         movwf   ADCON1
                      00337 
                      00338         ; clear Ports
000078 6A89           00339         clrf    LATA
00007A 6A8A           00340         clrf    LATB
00007C 6A8B           00341         clrf    LATC
00007E 6A8C           00342         clrf    LATD
000080 6A8D           00343         clrf    LATE
                      00344 
                      00345         ; initializations
000082 EC?? F???      00346         call    InitLCD
000086 EC?? F???      00347         call    I2C_Master_INIT
00008A EC?? F???      00348         call    Delay50ms
                      00349         ;call   initUSART
                      00350         ;call   initEEPROM
                      00351 
00008E 0E08           00352         movlw   b'00001000'
000090 6ED5           00353         movwf   T0CON
                      00354 
                      00355         ; interrupts
000092 6AD0           00356         clrf    RCON
000094 6AF2           00357         clrf    INTCON
000096 6AF1           00358         clrf    INTCON2
000098 6AF0           00359         clrf    INTCON3
00009A 8ED0           00360         bsf     RCON, IPEN          ; priority mode
00009C 8EF2           00361         bsf     INTCON, GIEH        ; permit global interrupts
00009E 8CF2           00362         bsf     INTCON, GIEL
0000A0 8AF1           00363         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
0000A2 8AF2           00364         bsf     INTCON, TMR0IE
0000A4 84F1           00365         bsf     INTCON2, TMR0IP     ; set to high priority
0000A6 86F0           00366         bsf     INTCON3, INT1IE
0000A8 9CF0           00367         bcf     INTCON3, INT1IP
                      00368 
0000AA 6A71           00369         clrf    H_EE
0000AC 6A72           00370         clrf    L_EE
0000AE 6B90           00371         clrf    tens_digit
0000B0 6B91           00372         clrf    ones_digit
                      00373 
                      00374         ; set real time clock
                      00375 ;       call    I2C_Master_START
                      00376 ;       movlw   'w'
                      00377 ;       call    WR_DATA
                      00378 ;       call    Delay50ms
                      00379 ;       movlw   b'11010000'
                      00380 ;       call    I2C_Master_WRITE
                      00381 ;       movlw   0x00                ; memory point to seconds
                      00382 ;       call    I2C_Master_WRITE
                      00383 ;
                      00384 ;       movlw   0x00                ; set seconds to 0
                      00385 ;       call    I2C_Master_WRITE
                      00386 ;       movlw   0x40                ; set minutes to 40
                      00387 ;       call    I2C_Master_WRITE
                      00388 ;       movlw   0x15                ; set hours to 15
                      00389 ;       call    I2C_Master_WRITE
                      00390 ;       movlw   0x5                 ; set day to 5
                      00391 ;       call    I2C_Master_WRITE
                      00392 ;       movlw   0x02                ; set month to feb
                      00393 ;       call    I2C_Master_WRITE
                      00394 ;       movlw   0x17                ; set year to 17
                      00395 ;       call    I2C_Master_STOP
                      00396 
                      00397         Display Welcome
  0000                    M         local   loop
0000B2 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0000B4 6EF8               M         movwf   TBLPTRU
0000B6 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0000B8 6EF7               M         movwf   TBLPTRH
0000BA 0E??               M         movlw   low Welcome     ; Move Table<7:0>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000BC 6EF6               M         movwf   TBLPTRL
0000BE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0000C0 50F5               M         movf    TABLAT, W
0000C2                    M loop
0000C2 EC?? F???          M         call    WR_DATA         ; write to LCD
0000C6 000B               M         tblrd+*                 ; next row in table
0000C8 50F5               M         movf    TABLAT, W
0000CA E1??               M         bnz     loop
0000CC EC?? F???      00398         call LCD_L2
                      00399         Display Team
  0000                    M         local   loop
0000D0 0E??               M         movlw   upper Team      ; Move Table<20:16>
0000D2 6EF8               M         movwf   TBLPTRU
0000D4 0E??               M         movlw   high Team       ; Move Table<15:8>
0000D6 6EF7               M         movwf   TBLPTRH
0000D8 0E??               M         movlw   low Team        ; Move Table<7:0>
0000DA 6EF6               M         movwf   TBLPTRL
0000DC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0000DE 50F5               M         movf    TABLAT, W
0000E0                    M loop
0000E0 EC?? F???          M         call    WR_DATA         ; write to LCD
0000E4 000B               M         tblrd+*                 ; next row in table
0000E6 50F5               M         movf    TABLAT, W
0000E8 E1??               M         bnz     loop
                      00400         Delay50N delayR, 0x3C
  0000                    M         local   loop
0000EA 0E3C               M         movlw   0x3C
0000EC 6E28               M         movwf   delayR
                          M 
0000EE                    M loop
0000EE EC?? F???          M         call    Delay50ms
0000F2 2E28               M         decfsz  delayR
0000F4 EF?? F???          M         goto    loop
                      00401 
                      00402 ;*******************************************************************************
                      00403 ; standby mode
                      00404 ;*******************************************************************************
0000F8                00405 STANDBY
0000F8 EC?? F???      00406         call    ClrLCD
                      00407         Display StandBy
  0000                    M         local   loop
0000FC 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0000FE 6EF8               M         movwf   TBLPTRU
000100 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000102 6EF7               M         movwf   TBLPTRH
000104 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000106 6EF6               M         movwf   TBLPTRL
000108 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00010A 50F5               M         movf    TABLAT, W
00010C                    M loop
00010C EC?? F???          M         call    WR_DATA         ; write to LCD
000110 000B               M         tblrd+*                 ; next row in table
000112 50F5               M         movf    TABLAT, W
000114 E1??               M         bnz     loop
                      00408 
000116                00409 HOLD_STANDBY
000116 EC?? F???      00410         call    READ_KEY_RTC
                      00411         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
00011A 0E03               M         movlw   keyA                ; poll for mode
00011C 6250               M         cpfseq  KEY                 ; check this against key press
00011E EF?? F???          M         goto    Exit
                          M 
000122                    M Next
000122 6A89               M         clrf    LATA                ; clear pins before proceeding
000124 6A8A               M         clrf    LATB
000126 6A8B               M         clrf    LATC
000128 6A8C               M         clrf    LATD
00012A EF?? F???          M         goto    EXECUTION
                          M 
00012E                    M Exit
00012E 0000               M         nop
                      00412         ChangeMode keyB, LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
000130 0E07               M         movlw   keyB                ; poll for mode
000132 6250               M         cpfseq  KEY                 ; check this against key press
000134 EF?? F???          M         goto    Exit
                          M 
000138                    M Next
000138 6A89               M         clrf    LATA                ; clear pins before proceeding
00013A 6A8A               M         clrf    LATB
00013C 6A8B               M         clrf    LATC
00013E 6A8C               M         clrf    LATD
000140 EF?? F???          M         goto    LOG
                          M 
000144                    M Exit
000144 0000               M         nop
                      00413         ;ChangeMode keyC, PLOG
                      00414         ;ChangeMode keyD, PC
000146 D???           00415         bra     HOLD_STANDBY
                      00416 
                      00417 ;*******************************************************************************
                      00418 ; sorting statistics log mode
                      00419 ;*******************************************************************************
                      00420 
000148                00421 EXECUTION
                      00422         ; display
000148 6860           00423         setf        inExecution
00014A EC?? F???      00424         call        ClrLCD
                      00425         Display     Exe1
  0000                    M         local   loop
00014E 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000150 6EF8               M         movwf   TBLPTRU
000152 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000154 6EF7               M         movwf   TBLPTRH
000156 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000158 6EF6               M         movwf   TBLPTRL
00015A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00015C 50F5               M         movf    TABLAT, W
00015E                    M loop
00015E EC?? F???          M         call    WR_DATA         ; write to LCD
000162 000B               M         tblrd+*                 ; next row in table
000164 50F5               M         movf    TABLAT, W
000166 E1??               M         bnz     loop
000168 EC?? F???      00426         call        LCD_L2
                      00427         Display     Exe2
  0000                    M         local   loop
00016C 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
00016E 6EF8               M         movwf   TBLPTRU
000170 0E??               M         movlw   high Exe2       ; Move Table<15:8>
000172 6EF7               M         movwf   TBLPTRH
000174 0E??               M         movlw   low Exe2        ; Move Table<7:0>
000176 6EF6               M         movwf   TBLPTRL
000178 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00017A 50F5               M         movf    TABLAT, W
00017C                    M loop
00017C EC?? F???          M         call    WR_DATA         ; write to LCD
000180 000B               M         tblrd+*                 ; next row in table
000182 50F5               M         movf    TABLAT, W
000184 E1??               M         bnz     loop
                      00428         
                      00429 ;       ; start timer
                      00430 ;       movlw       timer_H                             ; 1
                      00431 ;       movwf       TMR0H
                      00432 ;       movlw       timer_L                             ; 1
                      00433 ;       movwf       TMR0L                               ; 1
                      00434 ;       bsf         T0CON, TMR0ON                       ; Turn on timer
                      00435 ;       call        ClearEEPROM_21
                      00436         
                      00437         ; initialize variables
000186 6A10           00438         clrf        OP_sec
000188 6A11           00439         clrf        OP_INT
                      00440 
00018A                00441 HOLD_EXE
00018A EC?? F???      00442         call        READ_KEY
                      00443         ChangeMode  keyS, EXIT_EXE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
00018E 0E0C               M         movlw   keyS                ; poll for mode
000190 6250               M         cpfseq  KEY                 ; check this against key press
000192 EF?? F???          M         goto    Exit
                          M 
000196                    M Next
000196 6A89               M         clrf    LATA                ; clear pins before proceeding
000198 6A8A               M         clrf    LATB
00019A 6A8B               M         clrf    LATC
00019C 6A8C               M         clrf    LATD
00019E EF?? F???          M         goto    EXIT_EXE
                          M 
0001A2                    M Exit
0001A2 0000               M         nop
0001A4 D???           00444         bra         HOLD_EXE
                      00445 
0001A6                00446 EXIT_EXE
                      00447         WriteEE     OP_sec, H_EE, L_EE
0001A6 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
0001AA C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
0001AE C010 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
0001B2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0001B4 D???               M         bra     $-2
                          M 
0001B6 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0001B8 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0001BA 84A6               M         bsf     EECON1, WREN    ; enable write
0001BC 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0001BE 98A1               M         bcf     PIR2, EEIF
                          M 
0001C0 0E55               M         movlw   0x55
0001C2 6EA7               M         movwf   EECON2      ; write 55h
0001C4 0EAA               M         movlw   0xAA
0001C6 6EA7               M         movwf   EECON2      ; write 0xAA
0001C8 82A6               M         bsf     EECON1, WR          ; begin write
0001CA B2A6               M         btfsc   EECON1, WR
0001CC D???               M         bra     $-2
                          M 
0001CE 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0001D0 94A6               M         bcf     EECON1, WREN        ; disable writes
0001D2 2A72           00448         incf        L_EE
                      00449         WriteEE     OP_INT, H_EE, L_EE
0001D4 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
0001D8 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
0001DC C011 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
0001E0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0001E2 D???               M         bra     $-2
                          M 
0001E4 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0001E6 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0001E8 84A6               M         bsf     EECON1, WREN    ; enable write
0001EA 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0001EC 98A1               M         bcf     PIR2, EEIF
                          M 
0001EE 0E55               M         movlw   0x55
0001F0 6EA7               M         movwf   EECON2      ; write 55h
0001F2 0EAA               M         movlw   0xAA
0001F4 6EA7               M         movwf   EECON2      ; write 0xAA
0001F6 82A6               M         bsf     EECON1, WR          ; begin write
0001F8 B2A6               M         btfsc   EECON1, WR
0001FA D???               M         bra     $-2
                          M 
0001FC 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0001FE 94A6               M         bcf     EECON1, WREN        ; disable writes
000200 2A72           00450         incf        L_EE
                      00451         
                      00452 ;       movlw       0x02
                      00453 ;       call        I2C_Master_READ                                     ; Hours
                      00454 ;       call        WriteEE_RTC
                      00455 ;       
                      00456 ;       movlw       0x01
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00457 ;       call        I2C_Master_READ                                     ; Minutes
                      00458 ;       call        WriteEE_RTC
                      00459 ;       
                      00460 ;       movlw       0x05
                      00461 ;       call        I2C_Master_READ                                     ; Month
                      00462 ;       call        WriteEE_RTC
                      00463 ;       
                      00464 ;       movlw       0x04
                      00465 ;       call        I2C_Master_READ                                     ; Day
                      00466 ;       call        WriteEE_RTC
                      00467 ;       
                      00468 ;       movlw       0x06
                      00469 ;       call        I2C_Master_READ                                     ; Year
                      00470 ;       call        WriteEE_RTC
                      00471         
                      00472         ; Clear InOperation flag to stop '*' interrupts
000202 6A60           00473         clrf        inExecution
000204 EF?? F???      00474         goto        SaveData
                      00475 
000208                00476 SaveData
000208 EC?? F???      00477         call        ClrLCD
                      00478         Display     SAVE
  0000                    M         local   loop
00020C 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
00020E 6EF8               M         movwf   TBLPTRU
000210 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000212 6EF7               M         movwf   TBLPTRH
000214 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000216 6EF6               M         movwf   TBLPTRL
000218 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00021A 50F5               M         movf    TABLAT, W
00021C                    M loop
00021C EC?? F???          M         call    WR_DATA         ; write to LCD
000220 000B               M         tblrd+*                 ; next row in table
000222 50F5               M         movf    TABLAT, W
000224 E1??               M         bnz     loop
000226 0E00           00479         movlw       d'0'
000228 6E71           00480         movwf       H_EE
00022A C0A8 F072      00481         movff       last_log, L_EE
00022E 0E00           00482         movlw       d'0'
000230 6E74           00483         movwf       tempH_EE
000232 C082 F075      00484         movff       tempL_EEC, tempL_EE
000236 6A04           00485         clrf        counter2
000238 6A03           00486         clrf        counter
                      00487 
00023A                00488 ShiftLoop
00023A 2A03           00489         incf            counter
                      00490         READEE          REG_EE, H_EE, L_EE
00023C C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000240 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000244 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000246 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000248 80A6               M         bsf     EECON1, RD          ; read EEPROM
00024A CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
00024E 0E15           00491         movlw           d'21'
000250 2672           00492         addwf           L_EE
                      00493         WriteEE         REG_EE, H_EE, L_EE
000252 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000256 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
00025A C073 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
00025E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000260 D???               M         bra     $-2
                          M 
000262 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000264 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000266 84A6               M         bsf     EECON1, WREN    ; enable write
000268 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00026A 98A1               M         bcf     PIR2, EEIF
                          M 
00026C 0E55               M         movlw   0x55
00026E 6EA7               M         movwf   EECON2      ; write 55h
000270 0EAA               M         movlw   0xAA
000272 6EA7               M         movwf   EECON2      ; write 0xAA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000274 82A6               M         bsf     EECON1, WR          ; begin write
000276 B2A6               M         btfsc   EECON1, WR
000278 D???               M         bra     $-2
                          M 
00027A 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00027C 94A6               M         bcf     EECON1, WREN        ; disable writes
00027E 0E14           00494         movlw           d'20'
000280 5E72           00495         subwf           L_EE
000282 0E15           00496         movlw           d'21'
000284 6203           00497         cpfseq          counter
000286 EF?? F???      00498         goto            ShiftLoop
                      00499         
                      00500         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
00028A 0E2A           00501         movlw           d'42'
00028C 5E72           00502         subwf           L_EE
00028E C082 F075      00503         movff           tempL_EEC, tempL_EE
000292 6A03           00504         clrf            counter
000294 2A04           00505         incf            counter2
000296 0E09           00506         movlw           d'9'
000298 6204           00507         cpfseq          counter2                                        ; Skip if 9 shifts were made
00029A EF?? F???      00508         goto            ShiftLoop
                      00509         
                      00510         ; Finish Saving Data
                      00511         ;Stop Timer and goto OpLog
00029E 9ED5           00512         bcf             T0CON, TMR0ON
0002A0 0E09           00513         movlw           d'9'
0002A2 6E72           00514         movwf           L_EE
                      00515         WriteEE         OP_sec, H_EE, L_EE
0002A4 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
0002A8 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
0002AC C010 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
0002B0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0002B2 D???               M         bra     $-2
                          M 
0002B4 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0002B6 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0002B8 84A6               M         bsf     EECON1, WREN    ; enable write
0002BA 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0002BC 98A1               M         bcf     PIR2, EEIF
                          M 
0002BE 0E55               M         movlw   0x55
0002C0 6EA7               M         movwf   EECON2      ; write 55h
0002C2 0EAA               M         movlw   0xAA
0002C4 6EA7               M         movwf   EECON2      ; write 0xAA
0002C6 82A6               M         bsf     EECON1, WR          ; begin write
0002C8 B2A6               M         btfsc   EECON1, WR
0002CA D???               M         bra     $-2
                          M 
0002CC 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002CE 94A6               M         bcf     EECON1, WREN        ; disable writes
0002D0 2A72           00516         incf            L_EE
                      00517         WriteEE         OP_INT, H_EE, L_EE
0002D2 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
0002D6 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
0002DA C011 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
0002DE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0002E0 D???               M         bra     $-2
                          M 
0002E2 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0002E4 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0002E6 84A6               M         bsf     EECON1, WREN    ; enable write
0002E8 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0002EA 98A1               M         bcf     PIR2, EEIF
                          M 
0002EC 0E55               M         movlw   0x55
0002EE 6EA7               M         movwf   EECON2      ; write 55h
0002F0 0EAA               M         movlw   0xAA
0002F2 6EA7               M         movwf   EECON2      ; write 0xAA
0002F4 82A6               M         bsf     EECON1, WR          ; begin write
0002F6 B2A6               M         btfsc   EECON1, WR
0002F8 D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002FA 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0002FC 94A6               M         bcf     EECON1, WREN        ; disable writes
0002FE 2A72           00518         incf            L_EE
000300 EF?? F???      00519         goto            LOG
                      00520         
000304                00521 LOG
000304 EC?? F???      00522         call    ClrLCD
                      00523         Display Log1
  0000                    M         local   loop
000308 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00030A 6EF8               M         movwf   TBLPTRU
00030C 0E??               M         movlw   high Log1       ; Move Table<15:8>
00030E 6EF7               M         movwf   TBLPTRH
000310 0E??               M         movlw   low Log1        ; Move Table<7:0>
000312 6EF6               M         movwf   TBLPTRL
000314 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000316 50F5               M         movf    TABLAT, W
000318                    M loop
000318 EC?? F???          M         call    WR_DATA         ; write to LCD
00031C 000B               M         tblrd+*                 ; next row in table
00031E 50F5               M         movf    TABLAT, W
000320 E1??               M         bnz     loop
                      00524 
                      00525         ; display most recent run data
000322 0E09           00526         movlw   d'9'
000324 6E72           00527         movwf   L_EE
                      00528         READEE  OP_sec, H_EE, L_EE
000326 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00032A C072 FFA9          M         movff   L_EE, EEADR         ; read to low
00032E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000330 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000332 80A6               M         bsf     EECON1, RD          ; read EEPROM
000334 CFA8 F010          M         movff   EEDATA, OP_sec      ; put data into file
000338 2A72           00529         incf    L_EE
                      00530         READEE  OP_INT, H_EE, L_EE
00033A C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00033E C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000342 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000344 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000346 80A6               M         bsf     EECON1, RD          ; read EEPROM
000348 CFA8 F011          M         movff   EEDATA, OP_INT      ; put data into file
00034C 2A72           00531         incf    L_EE
00034E EC?? F???      00532         call    DisplayTime
                      00533 
000352 EC?? F???      00534         call    LCD_L2
000356 6A72           00535         clrf    L_EE
000358 EC?? F???      00536         call    DispOpRTC
                      00537 
00035C                00538 HOLD_LOG
00035C EC?? F???      00539         call    READ_KEY
                      00540         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000360 0E07               M         movlw   keyB                ; poll for mode
000362 6250               M         cpfseq  KEY                 ; check this against key press
000364 EF?? F???          M         goto    Exit
                          M 
000368                    M Next
000368 6A89               M         clrf    LATA                ; clear pins before proceeding
00036A 6A8A               M         clrf    LATB
00036C 6A8B               M         clrf    LATC
00036E 6A8C               M         clrf    LATD
000370 EF?? F???          M         goto    LOG_INFO
                          M 
000374                    M Exit
000374 0000               M         nop
                      00541         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000376 0E0D               M         movlw   key0                ; poll for mode
000378 6250               M         cpfseq  KEY                 ; check this against key press
00037A EF?? F???          M         goto    Exit
                          M 
00037E                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00037E 6A89               M         clrf    LATA                ; clear pins before proceeding
000380 6A8A               M         clrf    LATB
000382 6A8B               M         clrf    LATC
000384 6A8C               M         clrf    LATD
000386 EF?? F???          M         goto    STANDBY
                          M 
00038A                    M Exit
00038A 0000               M         nop
00038C D???           00542         bra     HOLD_LOG
                      00543 
00038E                00544 LOG_INFO
00038E EC?? F???      00545         call    ClrLCD
                      00546         Display LogInfo1
  0000                    M         local   loop
000392 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
000394 6EF8               M         movwf   TBLPTRU
000396 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000398 6EF7               M         movwf   TBLPTRH
00039A 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
00039C 6EF6               M         movwf   TBLPTRL
00039E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003A0 50F5               M         movf    TABLAT, W
0003A2                    M loop
0003A2 EC?? F???          M         call    WR_DATA         ; write to LCD
0003A6 000B               M         tblrd+*                 ; next row in table
0003A8 50F5               M         movf    TABLAT, W
0003AA E1??               M         bnz     loop
0003AC EC?? F???      00547         call    LCD_L2
                      00548         Display LogInfo2
  0000                    M         local   loop
0003B0 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0003B2 6EF8               M         movwf   TBLPTRU
0003B4 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0003B6 6EF7               M         movwf   TBLPTRH
0003B8 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0003BA 6EF6               M         movwf   TBLPTRL
0003BC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003BE 50F5               M         movf    TABLAT, W
0003C0                    M loop
0003C0 EC?? F???          M         call    WR_DATA         ; write to LCD
0003C4 000B               M         tblrd+*                 ; next row in table
0003C6 50F5               M         movf    TABLAT, W
0003C8 E1??               M         bnz     loop
0003CA                00549 HOLD_LOG_INFO
0003CA EC?? F???      00550         call    READ_KEY
                      00551         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0003CE 0E0D               M         movlw   key0                ; poll for mode
0003D0 6250               M         cpfseq  KEY                 ; check this against key press
0003D2 EF?? F???          M         goto    Exit
                          M 
0003D6                    M Next
0003D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0003D8 6A8A               M         clrf    LATB
0003DA 6A8B               M         clrf    LATC
0003DC 6A8C               M         clrf    LATD
0003DE EF?? F???          M         goto    LOG
                          M 
0003E2                    M Exit
0003E2 0000               M         nop
0003E4 D???           00552         bra     HOLD_LOG
                      00553 
                      00554 ;*******************************************************************************
                      00555 ; subroutines
                      00556 ;*******************************************************************************
                      00557 
0003E6                00558 Delay5us
0003E6 0E78           00559         movlw   d'120'
0003E8 6E29           00560         movwf   d5us
                      00561 
0003EA                00562 loop5us
0003EA 2E29           00563         decfsz  d5us
0003EC EF?? F???      00564         goto    loop5us
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F0 0000           00565         nop
0003F2 0012           00566         return
                      00567 
0003F4                00568 Delay200us
0003F4 0EA4           00569         movlw   0xA4
0003F6 6E30           00570         movwf   d200us
                      00571 
0003F8                00572 loop200us
0003F8 2E30           00573         decfsz  d200us
0003FA EF?? F???      00574         goto    loop200us
0003FE 0000           00575         nop
000400 0012           00576         return
                      00577 
000402                00578 Delay50ms
000402 0EF9           00579         movlw   0xF9
000404 6E31           00580         movwf   d50ms
                      00581 
000406                00582 loop50ms
000406 EC?? F???      00583         call    Delay200us
00040A 2E31           00584         decfsz  d50ms
                      00585 
00040C                00586 Cycles
00040C EF?? F???      00587         goto    loop50ms
000410 EC?? F???      00588         call    Delay200us
000414 0012           00589         return
                      00590 
000416                00591 WriteEE_RTC
                      00592         WriteEE tens_digit, H_EE, L_EE
000416 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
00041A C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
00041E C090 FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
000422 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000424 D???               M         bra     $-2
                          M 
000426 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000428 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00042A 84A6               M         bsf     EECON1, WREN    ; enable write
00042C 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00042E 98A1               M         bcf     PIR2, EEIF
                          M 
000430 0E55               M         movlw   0x55
000432 6EA7               M         movwf   EECON2      ; write 55h
000434 0EAA               M         movlw   0xAA
000436 6EA7               M         movwf   EECON2      ; write 0xAA
000438 82A6               M         bsf     EECON1, WR          ; begin write
00043A B2A6               M         btfsc   EECON1, WR
00043C D???               M         bra     $-2
                          M 
00043E 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000440 94A6               M         bcf     EECON1, WREN        ; disable writes
000442 2A72           00593         incf    L_EE
                      00594         WriteEE ones_digit, H_EE, L_EE
000444 C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000448 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
00044C C091 FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
000450 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000452 D???               M         bra     $-2
                          M 
000454 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000456 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000458 84A6               M         bsf     EECON1, WREN    ; enable write
00045A 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00045C 98A1               M         bcf     PIR2, EEIF
                          M 
00045E 0E55               M         movlw   0x55
000460 6EA7               M         movwf   EECON2      ; write 55h
000462 0EAA               M         movlw   0xAA
000464 6EA7               M         movwf   EECON2      ; write 0xAA
000466 82A6               M         bsf     EECON1, WR          ; begin write
000468 B2A6               M         btfsc   EECON1, WR
00046A D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00046C 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00046E 94A6               M         bcf     EECON1, WREN        ; disable writes
000470 2A72           00595         incf    L_EE
000472 0012           00596         return
                      00597 
000474                00598 ClearEEPROM_21
000474 6A71           00599         clrf    H_EE
000476 6A72           00600         clrf    L_EE
000478 6870           00601         setf    clear_EE
00047A 6A03           00602         clrf    counter
00047C                00603 ClearNext
                      00604         WriteEE         clear_EE, H_EE, L_EE
00047C C071 FFAA          M         movff   H_EE, EEADRH    ; High address
000480 C072 FFAA          M         movff   L_EE, EEADRH    ; Low address
000484 C070 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
000488 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00048A D???               M         bra     $-2
                          M 
00048C 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00048E 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000490 84A6               M         bsf     EECON1, WREN    ; enable write
000492 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000494 98A1               M         bcf     PIR2, EEIF
                          M 
000496 0E55               M         movlw   0x55
000498 6EA7               M         movwf   EECON2      ; write 55h
00049A 0EAA               M         movlw   0xAA
00049C 6EA7               M         movwf   EECON2      ; write 0xAA
00049E 82A6               M         bsf     EECON1, WR          ; begin write
0004A0 B2A6               M         btfsc   EECON1, WR
0004A2 D???               M         bra     $-2
                          M 
0004A4 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0004A6 94A6               M         bcf     EECON1, WREN        ; disable writes
0004A8 2A03           00605         incf            counter
0004AA 2A72           00606         incf            L_EE
0004AC 0E15           00607         movlw           d'21'
0004AE 6203           00608         cpfseq          counter
0004B0 EF?? F???      00609         goto            ClearNext
0004B4 6A71           00610         clrf            H_EE            ; reset EEPROMaddr
0004B6 6A72           00611         clrf            L_EE
0004B8 0012           00612         return
                      00613         
0004BA                00614 READ_KEY
0004BA                00615 HOLD_KEY
0004BA A281           00616         btfss   PORTB, 1        ; check for keypad interrupt
0004BC EF?? F???      00617         goto    HOLD_KEY
0004C0 3881           00618         swapf   PORTB, W
0004C2 0B0F           00619         andlw   0x0F
0004C4 6E50           00620         movwf   KEY
0004C6 B281           00621         btfsc   PORTB, 1
0004C8 EF?? F???      00622         goto    $-2
0004CC 0012           00623         return
                      00624 
0004CE                00625 READ_KEY_RTC
0004CE                00626 HOLD_KEY_RTC
0004CE EC?? F???      00627         call        LCD_L2      ; go to second line to print RTC
                      00628 ;       call        I2C_Master_START
                      00629 ;       movlw       b'11010000'
                      00630 ;       movlw       0x00
                      00631 ;       call        I2C_Master_WRITE
                      00632 ;       call        I2C_Master_STOP
                      00633 ;
                      00634 ;       movlw       0x01        ; set ACKDT
                      00635 ;       movwf       I2C_ACKDT
                      00636 ;
                      00637 ;       movlw       0x02        ; get hours
                      00638 ;       call        I2C_Master_READ
                      00639 ;       movf        tens_digit, W
                      00640 ;       andlw       b'00000001'
                      00641 ;       addlw       0x30
                      00642 ;       call        WR_DATA
                      00643 ;       movf        ones_digit, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00644 ;       call        WR_DATA
                      00645 ;       movlw       0x01        ; get minutes
                      00646 ;       call        I2C_Master_READ
                      00647 ;       WriteRTC
                      00648 ;       movlw       " "         ; wow grate formatng very nice. thank you
                      00649 ;       call        WR_DATA
                      00650 ;       movlw       0x05        ; month
                      00651 ;       call        I2C_Master_READ
                      00652 ;       WriteRTC
                      00653 ;       movlw       0x2F        ; ascii code for forward slash
                      00654 ;       call        WR_DATA
                      00655 ;       movlw       0x04        ; get day
                      00656 ;       call        I2C_Master_READ
                      00657 ;       WriteRTC
                      00658 ;       movlw       0x2F        ; ascii code for forward slash
                      00659 ;       call        WR_DATA
                      00660 ;       movlw       0x00        ; clear ACKDT
                      00661 ;       movwf       I2C_ACKDT
                      00662 ;       movlw    0x06           ; get year
                      00663 ;       call        I2C_Master_READ
                      00664 ;       WriteRTC
                      00665 
0004D2 A281           00666         btfss       PORTB, 1    ; keypad interrupt
0004D4 EF?? F???      00667         goto        HOLD_KEY_RTC
0004D8 3881           00668         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
0004DA 0B0F           00669         andlw       0x0F        ; only want W3:0
0004DC 6E50           00670         movwf       KEY         ; write this value to the KEY
0004DE B281           00671         btfsc       PORTB, 1    ; wait for release
0004E0 EF?? F???      00672         goto        $-2         ; go back one instruction
0004E4 0012           00673         return
                      00674 
0004E6                00675 DisplayTime
                      00676         READEE  REG_EE, H_EE, L_EE
0004E6 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004EA C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0004EE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004F0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004F2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004F4 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0004F8 0EFF           00677         movlw   0xFF
0004FA 6273           00678         cpfseq  REG_EE
0004FC EF?? F???      00679         goto    NoSkipDispOpTime
                      00680         Display NoData
  0000                    M         local   loop
000500 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000502 6EF8               M         movwf   TBLPTRU
000504 0E??               M         movlw   high NoData     ; Move Table<15:8>
000506 6EF7               M         movwf   TBLPTRH
000508 0E??               M         movlw   low NoData      ; Move Table<7:0>
00050A 6EF6               M         movwf   TBLPTRL
00050C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00050E 50F5               M         movf    TABLAT, W
000510                    M loop
000510 EC?? F???          M         call    WR_DATA         ; write to LCD
000514 000B               M         tblrd+*                 ; next row in table
000516 50F5               M         movf    TABLAT, W
000518 E1??               M         bnz     loop
00051A 0EFF           00681         movlw   0xFF
00051C 6073           00682         cpfslt  REG_EE
00051E EF?? F???      00683         goto    SkipDispOpTime
                      00684 
000522                00685 NoSkipDispOpTime
000522 3810           00686         swapf   OP_sec, W
000524 6E06           00687         movwf   temp
000526 0E0F           00688         movlw   0x0F
000528 1606           00689         andwf   temp
00052A C006 FFE8      00690         movff   temp, WREG
00052E 0F30           00691         addlw   0x30
000530 EC?? F???      00692         call    WR_DATA
                      00693 
000534 C010 F006      00694         movff   OP_sec, temp    ; 1's seconds
000538 0E0F           00695         movlw   0x0F
00053A 1606           00696         andwf   temp            ; Temp = lower nibble of Op_Seconds
00053C C006 FFE8      00697         movff   temp, WREG      ; W = Temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000540 0F30           00698         addlw   0x30            ; Convert to ASCII
000542 EC?? F???      00699         call    WR_DATA
                      00700 
000546 0E2E           00701         movlw   0x2E            ; Write '.'
000548 EC?? F???      00702         call    WR_DATA
                      00703 
00054C 0E73           00704         movlw   0x73            ; Write 's'
00054E EC?? F???      00705         call    WR_DATA
000552 EC?? F???      00706         call    LCD_L2
000556                00707 SkipDispOpTime
000556 0012           00708         return
                      00709 
000558                00710 DispOpRTC
000558 0E0B           00711         movlw   d'11'
00055A 2672           00712         addwf   L_EE
                      00713 
                      00714         READEE  REG_EE, H_EE, L_EE
00055C C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000560 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000564 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000566 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000568 80A6               M         bsf     EECON1, RD          ; read EEPROM
00056A CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
00056E 0EFF           00715         movlw   0xFF
000570 6273           00716         cpfseq  REG_EE
000572 EF?? F???      00717         goto    NoSkipDispOpRTC
                      00718         Display NoData
  0000                    M         local   loop
000576 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000578 6EF8               M         movwf   TBLPTRU
00057A 0E??               M         movlw   high NoData     ; Move Table<15:8>
00057C 6EF7               M         movwf   TBLPTRH
00057E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000580 6EF6               M         movwf   TBLPTRL
000582 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000584 50F5               M         movf    TABLAT, W
000586                    M loop
000586 EC?? F???          M         call    WR_DATA         ; write to LCD
00058A 000B               M         tblrd+*                 ; next row in table
00058C 50F5               M         movf    TABLAT, W
00058E E1??               M         bnz     loop
000590 0EFF           00719         movlw   0xFF
000592 6073           00720         cpfslt  REG_EE
000594 EF?? F???      00721         goto    SkipDispOpRTC
                      00722 
000598                00723 NoSkipDispOpRTC
                      00724         READEE  REG_EE, H_EE, L_EE
000598 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00059C C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0005A0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005A2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005A4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005A6 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0005AA C073 FFE8      00725         movff   REG_EE, WREG
0005AE 0BF1           00726         andlw   b'11110001'
0005B0 EC?? F???      00727         call    WR_DATA
0005B4 2A72           00728         incf    L_EE
                      00729         READEE  REG_EE, H_EE, L_EE
0005B6 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005BA C072 FFA9          M         movff   L_EE, EEADR         ; read to low
0005BE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005C0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005C2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005C4 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
0005C8 C073 FFE8      00730         movff   REG_EE, WREG
0005CC EC?? F???      00731         call    WR_DATA
0005D0 2A72           00732         incf    L_EE
                      00733 
0005D2 0E3A           00734         movlw           ":"
0005D4 EC?? F???      00735         call            WR_DATA
0005D8 EC?? F???      00736         call DispOpRTC_Helper
0005DC 0E20           00737         movlw           " "
0005DE EC?? F???      00738         call            WR_DATA
0005E2 EC?? F???      00739         call DispOpRTC_Helper
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-5-2017  23:18:10         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005E6 0E2F           00740         movlw           "/"
0005E8 EC?? F???      00741         call            WR_DATA
0005EC EC?? F???      00742         call DispOpRTC_Helper
0005F0 0E2F           00743         movlw           "/"
0005F2 EC?? F???      00744         call            WR_DATA
0005F6 EC?? F???      00745         call DispOpRTC_Helper
0005FA                00746 SkipDispOpRTC
0005FA 0012           00747                 return
0005FC                00748 DispOpRTC_Helper
                      00749         READEE          REG_EE, H_EE, L_EE
0005FC C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
000600 C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000604 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000606 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000608 80A6               M         bsf     EECON1, RD          ; read EEPROM
00060A CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
00060E C073 FFE8      00750         movff           REG_EE, WREG
000612 EC?? F???      00751         call            WR_DATA
000616 2A72           00752         incf            L_EE
                      00753         READEE          REG_EE, H_EE, L_EE
000618 C071 FFAA          M         movff   H_EE, EEADRH        ; read to high
00061C C072 FFA9          M         movff   L_EE, EEADR         ; read to low
000620 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000622 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000624 80A6               M         bsf     EECON1, RD          ; read EEPROM
000626 CFA8 F073          M         movff   EEDATA, REG_EE      ; put data into file
00062A C073 FFE8      00754         movff           REG_EE, WREG
00062E EC?? F???      00755         call            WR_DATA
000632 2A72           00756         incf            L_EE
000634 0012           00757         return
Warning[205]: Found directive in column 1. (end)
                      00758 end

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

