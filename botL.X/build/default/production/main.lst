MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008     
                      00009     
                      00010 
                      00011 
                      00012 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00047         keyB
  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
  00000039            00097         fromEXE
                      00098     endc
                      00099     
  0000                00100     extern tens_digit, ones_digit, databyte
  0000                00101     extern WRITE_ARDUINO, READ_ARDUINO, INIT_RTC, INIT_ARDUINO
                      00102     
                      00103 ;*******************************************************************************
                      00104 ; tables
                      00105 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00106     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00107     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7473 6E61 6964 00108     StandBy     db          "standing by ... ... standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7473 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 733C 726F 3E74 00109     StandbyInfo db          "<sort> or <stats> or <logs> or <pc> or", 0
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       6F20 2072 733C 
       6174 7374 203E 
       726F 3C20 6F6C 
       7367 203E 726F 
       3C20 6370 203E 
       726F 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6974 656D 003A 00110     Log1        db          "time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00111     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6173 6576 3A64 00112     LogInfo1    db          "saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 623C 6361 3E6B 00113     LogInfo2    db          "<back> to stats", 0
       7420 206F 7473 
       7461 0073 
Warning[207]: Found label after column 1. (PermLog1)
00008C 6570 6D72 6E61 00114     PermLog1    db          "permanent logs ", 0
       6E65 2074 6F6C 
       7367 0020 
Warning[207]: Found label after column 1. (PermLog2)
00009C 7270 7365 2073 00115     PermLog2    db          "press <1> to <9>", 0       
       313C 203E 6F74 
       3C20 3E39 0000 
Warning[207]: Found label after column 1. (Exe1)
0000AE 6F73 7472 6E69 00116     Exe1        db          "sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000BA 653C 646E 003E 00117     Exe2        db          "<end>", 0
Warning[207]: Found label after column 1. (PC1)
0000C0 6370 6920 746E 00118     PC1         db          "pc interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000CE 783C 6566 3E72 00119     PC2         db          "<xfer> to begin", 0
       7420 206F 6562 
       6967 006E 
Warning[207]: Found label after column 1. (PCTransfer)
0000DE 7274 6E61 6673 00120     PCTransfer  db          "transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000EE 6F63 706D 656C 00121     PCComplete  db          "complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000F8 6173 6976 676E 00122     SAVE        db          "saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
000102 2F6E 0061      00123     NoData      db          "n/a", 0
                      00124         
                      00125 ;*******************************************************************************
                      00126 ; macros
                      00127 ;*******************************************************************************
                      00128         
                      00129 ConfigLCD   macro
                      00130           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00131           call      WR_INS
                      00132 
                      00133           movlw     b'00001100'    ; display on/off
                      00134           call      WR_INS
                      00135           movlw     b'00000001'    ; Clear ram
                      00136           call      WR_INS
                      00137           endm
                      00138 
                      00139 Delay50N macro count, N
                      00140         local   loop
                      00141         movlw   N
                      00142         movwf   count
                      00143 
                      00144 loop
                      00145         call    Delay50ms
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00146         decfsz  count
                      00147         goto    loop
                      00148         endm
                      00149 
                      00150 Display macro   Message
                      00151         local   loop
                      00152         movlw   upper Message   ; Move Table<20:16>
                      00153         movwf   TBLPTRU
                      00154         movlw   high Message    ; Move Table<15:8>
                      00155         movwf   TBLPTRH
                      00156         movlw   low Message     ; Move Table<7:0>
                      00157         movwf   TBLPTRL
                      00158         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00159         movf    TABLAT, W
                      00160 loop
                      00161         call    WR_DATA         ; write to LCD
                      00162         tblrd+*                 ; next row in table
                      00163         movf    TABLAT, W
                      00164         bnz     loop
                      00165         endm    
                      00166 
                      00167 incf_BCD    macro   BCD
                      00168         local ones, endBCD
                      00169         movff   BCD, temp
                      00170         
                      00171         ;process ones digit
                      00172         movlw   0x0f
                      00173         andwf   temp
                      00174         movlw   d'9'
                      00175         
                      00176         ;skip if ones digit is 9
                      00177         cpfseq  temp
                      00178         goto    ones
                      00179         
                      00180         movlw   b'00010000'
                      00181         addwf   BCD
                      00182         movlw   0xf0
                      00183         andwf   BCD
                      00184         movlw   0xa0
                      00185         cpfslt  BCD
                      00186         
                      00187         clrf    BCD
                      00188         goto    endBCD
                      00189         
                      00190 ones
                      00191         incf    BCD
                      00192         goto    endBCD
                      00193 endBCD
                      00194         nop
                      00195         endm
                      00196 
                      00197 WriteEE macro   word, addH, addL
                      00198         movff   addH, EEADRH        ; High address
                      00199         movff   addL, EEADR         ; Low address
                      00200         movff   word, EEDATA        ; set word
                      00201 
                      00202         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00203         bra     $-2
                      00204 
                      00205         bcf     EECON1, EEPGD       ; Point to data memory
                      00206         bcf     EECON1, CFGS        ; Access EEPROM
                      00207         bsf     EECON1, WREN        ; enable write
                      00208         bcf     INTCON, GIE         ; disable interrupts during write
                      00209         bcf     PIR2, EEIF
                      00210 
                      00211         movlw   0x55
                      00212         movwf   EECON2              ; write 55h
                      00213         movlw   0xaa
                      00214         movwf   EECON2              ; write 0xaa
                      00215         bsf     EECON1, WR          ; begin write
                      00216         btfsc   EECON1, WR
                      00217         bra     $-2
                      00218 
                      00219         bsf     INTCON, GIE         ; enable interrupts after write
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00220         bcf     EECON1, WREN        ; disable writes
                      00221         endm
                      00222 
                      00223 READEE  macro   file, addH, addL
                      00224         movff   addH, EEADRH        ; read to high
                      00225         movff   addL, EEADR         ; read to low
                      00226         bcf     EECON1, EEPGD       ; point to data memory
                      00227         bcf     EECON1, CFGS        ; access to EEPROM
                      00228         bsf     EECON1, RD          ; read EEPROM
                      00229         movff   EEDATA, file        ; put data into file
                      00230         endm
                      00231 
                      00232 ChangeMode  macro   ModeId, NextMode
                      00233         local Next, Exit
                      00234 
                      00235         movlw   ModeId              ; poll for mode
                      00236         cpfseq  KEY                 ; check this against key press
                      00237         goto    Exit
                      00238 
                      00239 Next
                      00240         clrf    LATA                ; clear pins before proceeding
                      00241         clrf    LATB
                      00242         clrf    LATC
                      00243         clrf    LATD
                      00244         goto    NextMode
                      00245 
                      00246 Exit
                      00247         nop
                      00248         endm
                      00249 
                      00250 saveContext macro
                      00251     movff   STATUS, temp_S          ; save STATUS first
                      00252     movwf   temp_W                  ; save W
                      00253     endm
                      00254 
                      00255 restoreContext macro
                      00256     swapf   temp_W, 0               ; restore W first
                      00257     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00258     endm
                      00259 ;*******************************************************************************
                      00260 ; reset vector and isrs
                      00261 ;*******************************************************************************
                      00262         ORG     0x000               ; processor reset vector
000000 EF?? F???      00263         goto    INIT                ; go to beginning of program
                      00264 
                      00265         ORG     0x008
000008 EF?? F???      00266         goto    ISR_HIGH
                      00267 
                      00268         ORG     0x018
000018 EF?? F???      00269         goto    ISR_LOW
                      00270 
00001C                00271 LOAD_STANDBY_TIME
00001C AED5           00272         btfss   T0CON, TMR0ON
00001E 0012           00273         return
                      00274         
000020 0EFF           00275         movlw   0xff
000022 6ED7           00276         movwf   TMR0H
000024 0EFF           00277         movlw   0xff
000026 6ED6           00278         movwf   TMR0L
                      00279 
000028 0012           00280         return  
                      00281 
00002A                00282 LOAD_EXE_TIME
00002A AED5           00283         btfss   T0CON, TMR0ON
00002C 0012           00284         return
                      00285         
00002E 0EC3           00286         movlw   0xc3
000030 6ED7           00287         movwf   TMR0H
000032 0E28           00288         movlw   0x28
000034 6ED6           00289         movwf   TMR0L
                      00290         
000036 0012           00291         return
                      00292         
000038                00293 ISR_HIGH
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00294         saveContext
000038 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00003C 6E14               M     movwf   temp_W                  ; save W
                      00295         
00003E 0E00           00296         movlw   0x00
000040 6238           00297         cpfseq  inStandby
000042 EC?? F???      00298         call    Shift
                      00299         
                      00300         ;reset timer, but need to check which time increment 
000046 0E00           00301         movlw   0x00
000048 6238           00302         cpfseq  inStandby
00004A EC?? F???      00303         call    LOAD_STANDBY_TIME
                      00304         
00004E 0EFF           00305         movlw   0xff
000050 6238           00306         cpfseq  inStandby
000052 EC?? F???      00307         call    LOAD_EXE_TIME
                      00308                 
                      00309         ;timer interrupt
000056 A4F2           00310         btfss   INTCON, TMR0IF
000058 EF?? F???      00311         goto    END_ISR_HIGH
                      00312         
                      00313         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00005C C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000060 0E0F               M         movlw   0x0f
000062 1617               M         andwf   temp
000064 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000066 6217               M         cpfseq  temp
000068 EF?? F???          M         goto    ones
                          M         
00006C 0E10               M         movlw   b'00010000'
00006E 2619               M         addwf   OP_INT
000070 0EF0               M         movlw   0xf0
000072 1619               M         andwf   OP_INT
000074 0EA0               M         movlw   0xa0
000076 6019               M         cpfslt  OP_INT
                          M         
000078 6A19               M         clrf    OP_INT
00007A EF?? F???          M         goto    endBCD
                          M         
00007E                    M ones
00007E 2A19               M         incf    OP_INT
000080 EF?? F???          M         goto    endBCD
000084                    M endBCD
000084 0000               M         nop
000086 0E00           00314         movlw   d'0'
000088 6219           00315         cpfseq  OP_INT
00008A EF?? F???      00316         goto    END_ISR_HIGH
                      00317         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
00008E C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000092 0E0F               M         movlw   0x0f
000094 1617               M         andwf   temp
000096 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000098 6217               M         cpfseq  temp
00009A EF?? F???          M         goto    ones
                          M         
00009E 0E10               M         movlw   b'00010000'
0000A0 2618               M         addwf   OP_sec
0000A2 0EF0               M         movlw   0xf0
0000A4 1618               M         andwf   OP_sec
0000A6 0EA0               M         movlw   0xa0
0000A8 6018               M         cpfslt  OP_sec
                          M         
0000AA 6A18               M         clrf    OP_sec
0000AC EF?? F???          M         goto    endBCD
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
0000B0                    M ones
0000B0 2A18               M         incf    OP_sec
0000B2 EF?? F???          M         goto    endBCD
0000B6                    M endBCD
0000B6 0000               M         nop
                      00318 
0000B8                00319 END_ISR_HIGH
0000B8 94F2           00320         bcf     INTCON, TMR0IF
                      00321         restoreContext
0000BA 3814               M     swapf   temp_W, 0               ; restore W first
0000BC C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000C0 0010           00322         retfie
                      00323 
0000C2                00324 ISR_LOW
                      00325         saveContext
0000C2 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000C6 6E14               M     movwf   temp_W                  ; save W
                      00326         ; KEYPAD INTERRUPT
0000C8 A0F0           00327         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000CA EF?? F???      00328         goto    END_ISR_LOW
                      00329 
                      00330         ; check operation status
0000CE 0EFF           00331         movlw   0xff                    ; If in operation, skip return
0000D0 621E           00332         cpfseq  inExecution
0000D2 EF?? F???      00333         goto    END_ISR_LOW
                      00334 
                      00335         ; process KEY
0000D6 3881           00336         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D8 0B0F           00337         andlw   0x0f
0000DA 6E12           00338         movwf   KEY_ISR
                      00339         
0000DC 0E0C           00340         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000DE 6212           00341         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000E0 EF?? F???      00342         goto    END_ISR_LOW
                      00343         
                      00344         ; reset program counter - emergency stop recorded. 
0000E4 9ED5           00345         bcf     T0CON, TMR0ON
0000E6 EC?? F???      00346         call    SAVE_EXE_TIME
                      00347                 
                      00348         ; Clear inExecution flag to stop '*' interrupts
0000EA 6A1E           00349         clrf    inExecution
0000EC 0E01           00350         movlw   d'1'
0000EE 6E37           00351         movwf   STOP_CONDITION
                      00352 
0000F0 EC?? F???      00353         call    SaveData
                      00354         
0000F4 6AFF           00355         clrf    TOSU
0000F6 6AFE           00356         clrf    TOSH
0000F8 6AFD           00357         clrf    TOSL
0000FA 90F0           00358         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00359         restoreContext
0000FC 3814               M     swapf   temp_W, 0               ; restore W first
0000FE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000102 0010           00360         retfie
                      00361 
000104                00362 END_ISR_LOW
000104 90F0           00363         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00364         restoreContext
000106 3814               M     swapf   temp_W, 0               ; restore W first
000108 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00010C 0010           00365         retfie
                      00366 
                      00367 ;*******************************************************************************
                      00368 ; main
                      00369 ;*******************************************************************************
00010E                00370 INIT
00010E 6A39           00371         clrf    fromEXE
000110 0E70           00372         movlw   b'01110000'         ; set internal oscillator frequency to 8MHz
000112 6ED3           00373         movwf   OSCCON
                      00374         
                      00375         ; i/o
000114 0E00           00376         movlw   b'00000000'
000116 6E92           00377         movwf   TRISA
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000118 0EFF           00378         movlw   b'11111111'
00011A 6E93           00379         movwf   TRISB               ; keypad
00011C 0E00           00380         movlw   b'00000000'
00011E 6E94           00381         movwf   TRISC
000120 0E00           00382         movlw   b'00000000'
000122 6E95           00383         movwf   TRISD
000124 0E03           00384         movlw   b'00000011'
000126 6E96           00385         movwf   TRISE
                      00386 
                      00387         ; clear ports
000128 0E00           00388         movlw   b'00000000'
00012A 6E89           00389         movwf   LATA
00012C 0E00           00390         movlw   b'00000000'
00012E 6E8A           00391         movwf   LATB
000130 0E00           00392         movlw   b'00000000'
000132 6E8B           00393         movwf   LATC
000134 0E00           00394         movlw   b'00000000'
000136 6E8C           00395         movwf   LATD
000138 0E00           00396         movlw   b'00000000'
00013A 6E8D           00397         movwf   LATE
                      00398         
00013C 0E00           00399         movlw   b'00000000'
00013E 6EC2           00400         movwf   ADCON0
                      00401         
                      00402         ; initializations
000140 EC?? F???      00403         call    InitLCD
                      00404         ConfigLCD
000144 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000146 EC?? F???          M           call      WR_INS
                          M 
00014A 0E0C               M           movlw     b'00001100'    ; display on/off
00014C EC?? F???          M           call      WR_INS
000150 0E01               M           movlw     b'00000001'    ; Clear ram
000152 EC?? F???          M           call      WR_INS
                      00405         
000156 EC?? F???      00406         call    i2c_common_setup
00015A EC?? F???      00407         call    RTC_INIT
00015E EC?? F???      00408         call    INIT_ARDUINO
000162 EC?? F???      00409         call    INIT_USART
                      00410         
000166 D???           00411         bra     RESETS
                      00412 
000168                00413 RESETS
                      00414                 
000168 EC?? F???      00415         call    ClrLCD
                      00416         Display Welcome
  0000                    M         local   loop
00016C 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00016E 6EF8               M         movwf   TBLPTRU
000170 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000172 6EF7               M         movwf   TBLPTRH
000174 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000176 6EF6               M         movwf   TBLPTRL
000178 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00017A 50F5               M         movf    TABLAT, W
00017C                    M loop
00017C EC?? F???          M         call    WR_DATA         ; write to LCD
000180 000B               M         tblrd+*                 ; next row in table
000182 50F5               M         movf    TABLAT, W
000184 E1??               M         bnz     loop
000186 EC?? F???      00417         call    LCD_L2
                      00418         Display Team
  0000                    M         local   loop
00018A 0E??               M         movlw   upper Team      ; Move Table<20:16>
00018C 6EF8               M         movwf   TBLPTRU
00018E 0E??               M         movlw   high Team       ; Move Table<15:8>
000190 6EF7               M         movwf   TBLPTRH
000192 0E??               M         movlw   low Team        ; Move Table<7:0>
000194 6EF6               M         movwf   TBLPTRL
000196 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000198 50F5               M         movf    TABLAT, W
00019A                    M loop
00019A EC?? F???          M         call    WR_DATA         ; write to LCD
00019E 000B               M         tblrd+*                 ; next row in table
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001A0 50F5               M         movf    TABLAT, W
0001A2 E1??               M         bnz     loop
                      00419         
                      00420         Delay50N delayR, 0x05
  0000                    M         local   loop
0001A4 0E05               M         movlw   0x05
0001A6 6E1A               M         movwf   delayR
                          M 
0001A8                    M loop
0001A8 EC?? F???          M         call    Delay50ms
0001AC 2E1A               M         decfsz  delayR
0001AE EF?? F???          M         goto    loop
                      00421         ; request eska
0001B2 0E02           00422         movlw   d'2'
0001B4 CFE8 F???      00423         movff   WREG, databyte
0001B8 EC?? F???      00424         call    WRITE_ARDUINO
                      00425         Delay50N delayR, 0x05
  0000                    M         local   loop
0001BC 0E05               M         movlw   0x05
0001BE 6E1A               M         movwf   delayR
                          M 
0001C0                    M loop
0001C0 EC?? F???          M         call    Delay50ms
0001C4 2E1A               M         decfsz  delayR
0001C6 EF?? F???          M         goto    loop
                      00426         ; get eska
0001CA EC?? F???      00427         call    READ_ARDUINO
0001CE 6E2D           00428         movwf   ESKA
                      00429         
                      00430         Delay50N delayR, 0x05
  0000                    M         local   loop
0001D0 0E05               M         movlw   0x05
0001D2 6E1A               M         movwf   delayR
                          M 
0001D4                    M loop
0001D4 EC?? F???          M         call    Delay50ms
0001D8 2E1A               M         decfsz  delayR
0001DA EF?? F???          M         goto    loop
                      00431         ; request eska without a cap
0001DE 0E03           00432         movlw   d'3'
0001E0 CFE8 F???      00433         movff   WREG, databyte
0001E4 EC?? F???      00434         call    WRITE_ARDUINO
                      00435         Delay50N delayR, 0x05
  0000                    M         local   loop
0001E8 0E05               M         movlw   0x05
0001EA 6E1A               M         movwf   delayR
                          M 
0001EC                    M loop
0001EC EC?? F???          M         call    Delay50ms
0001F0 2E1A               M         decfsz  delayR
0001F2 EF?? F???          M         goto    loop
                      00436         ; get eska without a cap
0001F6 EC?? F???      00437         call    READ_ARDUINO
0001FA 6E2E           00438         movwf   ESKA_NOCAP
                      00439         
                      00440         Delay50N delayR, 0x05
  0000                    M         local   loop
0001FC 0E05               M         movlw   0x05
0001FE 6E1A               M         movwf   delayR
                          M 
000200                    M loop
000200 EC?? F???          M         call    Delay50ms
000204 2E1A               M         decfsz  delayR
000206 EF?? F???          M         goto    loop
                      00441         ; request yop
00020A 0E04           00442         movlw   d'4'
00020C CFE8 F???      00443         movff   WREG, databyte
000210 EC?? F???      00444         call    WRITE_ARDUINO
                      00445         Delay50N delayR, 0x05
  0000                    M         local   loop
000214 0E05               M         movlw   0x05
000216 6E1A               M         movwf   delayR
                          M 
000218                    M loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000218 EC?? F???          M         call    Delay50ms
00021C 2E1A               M         decfsz  delayR
00021E EF?? F???          M         goto    loop
                      00446         ; get yop
000222 EC?? F???      00447         call    READ_ARDUINO
000226 6E2F           00448         movwf   YOP
                      00449         
                      00450         Delay50N delayR, 0x05
  0000                    M         local   loop
000228 0E05               M         movlw   0x05
00022A 6E1A               M         movwf   delayR
                          M 
00022C                    M loop
00022C EC?? F???          M         call    Delay50ms
000230 2E1A               M         decfsz  delayR
000232 EF?? F???          M         goto    loop
                      00451         ; request yop without a cap
000236 0E05           00452         movlw   d'5'
000238 CFE8 F???      00453         movff   WREG, databyte
00023C EC?? F???      00454         call    WRITE_ARDUINO
                      00455         Delay50N delayR, 0x05
  0000                    M         local   loop
000240 0E05               M         movlw   0x05
000242 6E1A               M         movwf   delayR
                          M 
000244                    M loop
000244 EC?? F???          M         call    Delay50ms
000248 2E1A               M         decfsz  delayR
00024A EF?? F???          M         goto    loop
                      00456         ; get yop without a cap
00024E EC?? F???      00457         call    READ_ARDUINO
000252 6E30           00458         movwf   YOP_NOCAP
                      00459         
000254 0E00           00460         movlw   0x00
000256 6239           00461         cpfseq  fromEXE
000258 EC?? F???      00462         call    SaveData        ; save the data
                      00463         
                      00464         ; interrupts
00025C 6AD0           00465         clrf    RCON
00025E 6AF2           00466         clrf    INTCON
000260 6AF1           00467         clrf    INTCON2
000262 6AF0           00468         clrf    INTCON3
000264 8ED0           00469         bsf     RCON, IPEN          ; priority mode
000266 8EF2           00470         bsf     INTCON, GIEH        ; permit global interrupts
000268 8CF2           00471         bsf     INTCON, GIEL
00026A 8AF1           00472         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
00026C 8AF2           00473         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
00026E 84F2           00474         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000270 84F1           00475         bsf     INTCON2, TMR0IP     ; set to high priority
000272 86F0           00476         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
000274 9CF0           00477         bcf     INTCON3, INT1IP     ; keyboard to low priority
                      00478         
                      00479         ; setting up timer to sychronize with 1 second clock intervals
000276 9ED5           00480         bcf     T0CON, TMR0ON
000278 9CD5           00481         bcf     T0CON, T08BIT
00027A 9AD5           00482         bcf     T0CON, T0CS
00027C 98D5           00483         bcf     T0CON, T0SE
00027E 96D5           00484         bcf     T0CON, PSA
000280 94D5           00485         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
000282 82D5           00486         bsf     T0CON, T0PS1
000284 80D5           00487         bsf     T0CON, T0PS0
                      00488 
000286 6A20           00489         clrf    H_EE
000288 6A21           00490         clrf    L_EE
00028A 6A??           00491         clrf    tens_digit
00028C 6A??           00492         clrf    ones_digit
                      00493         
00028E 0EF2           00494         movlw   b'11110010'    ; Set required keypad inputs
000290 6E93           00495         movwf   TRISB
000292 0E03           00496         movlw   b'00000011'
000294 6E96           00497         movwf   TRISE
000296 D???           00498         bra     STANDBY
                      00499                 
                      00500 ;*******************************************************************************
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00501 ; standby mode
                      00502 ;*******************************************************************************
000298                00503 STANDBY
000298 0E00           00504         movlw   b'00000000'
00029A 6E84           00505         movwf   PORTE
00029C 0E00           00506         movlw   b'00000000'
00029E 6E80           00507         movwf   PORTA
                      00508         
0002A0 6838           00509         setf    inStandby       
0002A2 EC?? F???      00510         call    ClrLCD
                      00511         Display StandBy
  0000                    M         local   loop
0002A6 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0002A8 6EF8               M         movwf   TBLPTRU
0002AA 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0002AC 6EF7               M         movwf   TBLPTRH
0002AE 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0002B0 6EF6               M         movwf   TBLPTRL
0002B2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002B4 50F5               M         movf    TABLAT, W
0002B6                    M loop
0002B6 EC?? F???          M         call    WR_DATA         ; write to LCD
0002BA 000B               M         tblrd+*                 ; next row in table
0002BC 50F5               M         movf    TABLAT, W
0002BE E1??               M         bnz     loop
0002C0 EC?? F???      00512         call    LCD_L2
                      00513         Display StandbyInfo
  0000                    M         local   loop
0002C4 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
0002C6 6EF8               M         movwf   TBLPTRU
0002C8 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
0002CA 6EF7               M         movwf   TBLPTRH
0002CC 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
0002CE 6EF6               M         movwf   TBLPTRL
0002D0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002D2 50F5               M         movf    TABLAT, W
0002D4                    M loop
0002D4 EC?? F???          M         call    WR_DATA         ; write to LCD
0002D8 000B               M         tblrd+*                 ; next row in table
0002DA 50F5               M         movf    TABLAT, W
0002DC E1??               M         bnz     loop
                      00514         
0002DE 0EFF           00515         movlw   0xff
0002E0 6ED7           00516         movwf   TMR0H
0002E2 0EFF           00517         movlw   0xff
0002E4 6ED6           00518         movwf   TMR0L
0002E6 8ED5           00519         bsf     T0CON, TMR0ON       ; turning on timer (for scrolling screen)
                      00520 
0002E8                00521 HOLD_STANDBY
0002E8 EC?? F???      00522         call    READ_KEY_TIME
                      00523 
                      00524         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0002EC 0E03               M         movlw   keyA                ; poll for mode
0002EE 6210               M         cpfseq  KEY                 ; check this against key press
0002F0 EF?? F???          M         goto    Exit
                          M 
0002F4                    M Next
0002F4 6A89               M         clrf    LATA                ; clear pins before proceeding
0002F6 6A8A               M         clrf    LATB
0002F8 6A8B               M         clrf    LATC
0002FA 6A8C               M         clrf    LATD
0002FC EF?? F???          M         goto    EXECUTION
                          M 
000300                    M Exit
000300 0000               M         nop
                      00525         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
000302 0E07               M         movlw   keyB                ; poll for mode
000304 6210               M         cpfseq  KEY                 ; check this against key press
000306 EF?? F???          M         goto    Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00030A                    M Next
00030A 6A89               M         clrf    LATA                ; clear pins before proceeding
00030C 6A8A               M         clrf    LATB
00030E 6A8B               M         clrf    LATC
000310 6A8C               M         clrf    LATD
000312 EF?? F???          M         goto    LOG
                          M 
000316                    M Exit
000316 0000               M         nop
                      00526         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000318 0E0B               M         movlw   keyC                ; poll for mode
00031A 6210               M         cpfseq  KEY                 ; check this against key press
00031C EF?? F???          M         goto    Exit
                          M 
000320                    M Next
000320 6A89               M         clrf    LATA                ; clear pins before proceeding
000322 6A8A               M         clrf    LATB
000324 6A8B               M         clrf    LATC
000326 6A8C               M         clrf    LATD
000328 EF?? F???          M         goto    PERM_LOG
                          M 
00032C                    M Exit
00032C 0000               M         nop
                      00527         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
00032E 0E0F               M         movlw   keyD                ; poll for mode
000330 6210               M         cpfseq  KEY                 ; check this against key press
000332 EF?? F???          M         goto    Exit
                          M 
000336                    M Next
000336 6A89               M         clrf    LATA                ; clear pins before proceeding
000338 6A8A               M         clrf    LATB
00033A 6A8B               M         clrf    LATC
00033C 6A8C               M         clrf    LATD
00033E EF?? F???          M         goto    PC_MODE
                          M 
000342                    M Exit
000342 0000               M         nop
000344 D???           00528         bra     HOLD_STANDBY
                      00529 
                      00530 ;*******************************************************************************
                      00531 ; execution mode
                      00532 ;*******************************************************************************
                      00533         
000346                00534 EXECUTION
                      00535         ;bcf    T0CON, TMR0ON       ; turning off standby timer
000346 6A38           00536         clrf    inStandby       
000348 EC?? F???      00537         call    ClearEEPROM_21
                      00538         
                      00539         ; save the starting time
00034C EC?? F???      00540         call    SAVE_TIME
                      00541                 
                      00542         ; display
000350 681E           00543         setf    inExecution
000352 EC?? F???      00544         call    ClrLCD
                      00545         Display Exe1
  0000                    M         local   loop
000356 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000358 6EF8               M         movwf   TBLPTRU
00035A 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00035C 6EF7               M         movwf   TBLPTRH
00035E 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000360 6EF6               M         movwf   TBLPTRL
000362 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000364 50F5               M         movf    TABLAT, W
000366                    M loop
000366 EC?? F???          M         call    WR_DATA         ; write to LCD
00036A 000B               M         tblrd+*                 ; next row in table
00036C 50F5               M         movf    TABLAT, W
00036E E1??               M         bnz     loop
                      00546         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000370 0EC3           00547         movlw   0xc3
000372 6ED7           00548         movwf   TMR0H
000374 0E28           00549         movlw   0x28
000376 6ED6           00550         movwf   TMR0L
                      00551         
000378 8ED5           00552         bsf     T0CON, TMR0ON       ; turning on timer
                      00553         
                      00554         ; initialize variables
00037A 6A18           00555         clrf    OP_sec
00037C 6A19           00556         clrf    OP_INT
                      00557         
                      00558         ; turn motors on and begin the sort
00037E 0E01           00559         movlw   d'1'
000380 CFE8 F???      00560         movff   WREG, databyte
000384 EC?? F???      00561         call    WRITE_ARDUINO
                      00562         Delay50N delayR, 0x03
  0000                    M         local   loop
000388 0E03               M         movlw   0x03
00038A 6E1A               M         movwf   delayR
                          M 
00038C                    M loop
00038C EC?? F???          M         call    Delay50ms
000390 2E1A               M         decfsz  delayR
000392 EF?? F???          M         goto    loop
                      00563         
000396 EF?? F???      00564         goto    DETECTIONS
                      00565         
00039A                00566 CHECK_TIMEOUT
00039A 3818           00567     swapf       OP_sec, 0; 100's seconds
00039C 6E17           00568     movwf       temp
00039E 0E0F           00569     movlw       0x0f
0003A0 1617           00570     andwf       temp
0003A2 0E00           00571     movlw       d'0'
0003A4 5E17           00572     subwf       temp
0003A6 E0??           00573     bz  EXIT_EXE        ; if 100 second, continue to check for 150s then 120s.
                      00574 
0003A8 0012           00575     return
                      00576         
0003AA                00577 DETECTIONS
                      00578         ; displaying the execution time in seconds
0003AA EC?? F???      00579         call    LCD_L2
0003AE 3818           00580         swapf   OP_sec, 0       ; 100's seconds
0003B0 6E17           00581         movwf   temp
0003B2 0E0F           00582         movlw   0x0f
0003B4 1617           00583         andwf   temp
0003B6 C017 FFE8      00584         movff   temp, WREG
0003BA 0F30           00585         addlw   0x30
0003BC EC?? F???      00586         call    WR_DATA
                      00587 
0003C0 C018 F017      00588         movff   OP_sec, temp    ; 10's seconds
0003C4 0E0F           00589         movlw   0x0f
0003C6 1617           00590         andwf   temp            ; temp = lower nibble of Op_sec
0003C8 C017 FFE8      00591         movff   temp, WREG      ; wreg = temp
0003CC 0F30           00592         addlw   0x30            ; convert to ASCII
0003CE EC?? F???      00593         call    WR_DATA
                      00594         
Warning[202]: Argument out of range.  Least significant bits used.
0003D2 3819           00595         swapf   OP_INT, WREG    ; 1's seconds
0003D4 6E17           00596         movwf   temp
0003D6 0E0F           00597         movlw   0x0f
0003D8 1617           00598         andwf   temp
0003DA C017 FFE8      00599         movff   temp, WREG
0003DE 0F30           00600         addlw   0x30
0003E0 EC?? F???      00601         call    WR_DATA
                      00602 
0003E4 0E73           00603         movlw   0x73            ; write 's'
0003E6 EC?? F???      00604         call    WR_DATA
                      00605         
0003EA CF80 F017      00606         movff   PORTA, temp     ; putting the value of port a into temp
0003EE B817           00607         btfsc   temp, 4         ; testing if to proceed or not
0003F0 D???           00608         bra     DETECTIONS
                      00609         
0003F2 D???           00610         bra     EXIT_EXE
                      00611         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F4                00612 EXIT_EXE
                      00613         ; stop timer and save the execution time to eeprom
0003F4 9ED5           00614         bcf     T0CON, TMR0ON
0003F6 EC?? F???      00615         call    SAVE_EXE_TIME
0003FA EC?? F???      00616         call    ClrLCD
                      00617         Display SAVE
  0000                    M         local   loop
0003FE 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000400 6EF8               M         movwf   TBLPTRU
000402 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000404 6EF7               M         movwf   TBLPTRH
000406 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000408 6EF6               M         movwf   TBLPTRL
00040A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00040C 50F5               M         movf    TABLAT, W
00040E                    M loop
00040E EC?? F???          M         call    WR_DATA         ; write to LCD
000412 000B               M         tblrd+*                 ; next row in table
000414 50F5               M         movf    TABLAT, W
000416 E1??               M         bnz     loop
                      00618                 
000418 6A1E           00619         clrf    inExecution     ; clear inExecution flag to disable software resets
00041A 6839           00620         setf    fromEXE
                      00621         
                      00622         Delay50N delayR, 0x05
  0000                    M         local   loop
00041C 0E05               M         movlw   0x05
00041E 6E1A               M         movwf   delayR
                          M 
000420                    M loop
000420 EC?? F???          M         call    Delay50ms
000424 2E1A               M         decfsz  delayR
000426 EF?? F???          M         goto    loop
                      00623         ; request eska
00042A 0E02           00624         movlw   d'2'
00042C CFE8 F???      00625         movff   WREG, databyte
000430 EC?? F???      00626         call    WRITE_ARDUINO
                      00627         Delay50N delayR, 0x05
  0000                    M         local   loop
000434 0E05               M         movlw   0x05
000436 6E1A               M         movwf   delayR
                          M 
000438                    M loop
000438 EC?? F???          M         call    Delay50ms
00043C 2E1A               M         decfsz  delayR
00043E EF?? F???          M         goto    loop
                      00628         ; get eska
000442 EC?? F???      00629         call    READ_ARDUINO
000446 6E2D           00630         movwf   ESKA
                      00631         
                      00632         Delay50N delayR, 0x05
  0000                    M         local   loop
000448 0E05               M         movlw   0x05
00044A 6E1A               M         movwf   delayR
                          M 
00044C                    M loop
00044C EC?? F???          M         call    Delay50ms
000450 2E1A               M         decfsz  delayR
000452 EF?? F???          M         goto    loop
                      00633         ; request eska without a cap
000456 0E03           00634         movlw   d'3'
000458 CFE8 F???      00635         movff   WREG, databyte
00045C EC?? F???      00636         call    WRITE_ARDUINO
                      00637         Delay50N delayR, 0x05
  0000                    M         local   loop
000460 0E05               M         movlw   0x05
000462 6E1A               M         movwf   delayR
                          M 
000464                    M loop
000464 EC?? F???          M         call    Delay50ms
000468 2E1A               M         decfsz  delayR
00046A EF?? F???          M         goto    loop
                      00638         ; get eska without a cap
00046E EC?? F???      00639         call    READ_ARDUINO
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000472 6E2E           00640         movwf   ESKA_NOCAP
                      00641         
                      00642         Delay50N delayR, 0x05
  0000                    M         local   loop
000474 0E05               M         movlw   0x05
000476 6E1A               M         movwf   delayR
                          M 
000478                    M loop
000478 EC?? F???          M         call    Delay50ms
00047C 2E1A               M         decfsz  delayR
00047E EF?? F???          M         goto    loop
                      00643         ; request yop
000482 0E04           00644         movlw   d'4'
000484 CFE8 F???      00645         movff   WREG, databyte
000488 EC?? F???      00646         call    WRITE_ARDUINO
                      00647         Delay50N delayR, 0x05
  0000                    M         local   loop
00048C 0E05               M         movlw   0x05
00048E 6E1A               M         movwf   delayR
                          M 
000490                    M loop
000490 EC?? F???          M         call    Delay50ms
000494 2E1A               M         decfsz  delayR
000496 EF?? F???          M         goto    loop
                      00648         ; get yop
00049A EC?? F???      00649         call    READ_ARDUINO
00049E 6E2F           00650         movwf   YOP
                      00651         
                      00652         Delay50N delayR, 0x05
  0000                    M         local   loop
0004A0 0E05               M         movlw   0x05
0004A2 6E1A               M         movwf   delayR
                          M 
0004A4                    M loop
0004A4 EC?? F???          M         call    Delay50ms
0004A8 2E1A               M         decfsz  delayR
0004AA EF?? F???          M         goto    loop
                      00653         ; request yop without a cap
0004AE 0E05           00654         movlw   d'5'
0004B0 CFE8 F???      00655         movff   WREG, databyte
0004B4 EC?? F???      00656         call    WRITE_ARDUINO
                      00657         Delay50N delayR, 0x05
  0000                    M         local   loop
0004B8 0E05               M         movlw   0x05
0004BA 6E1A               M         movwf   delayR
                          M 
0004BC                    M loop
0004BC EC?? F???          M         call    Delay50ms
0004C0 2E1A               M         decfsz  delayR
0004C2 EF?? F???          M         goto    loop
                      00658         ; get yop without a cap
0004C6 EC?? F???      00659         call    READ_ARDUINO
0004CA 6E30           00660         movwf   YOP_NOCAP
                      00661         
0004CC 0E00           00662         movlw   0x00
0004CE 6239           00663         cpfseq  fromEXE
0004D0 EC?? F???      00664         call    SaveData        ; save the data
                      00665         
0004D4 D???           00666         bra     RESETS          ; branch to reset to re-initialize everything
                      00667 
                      00668 ;*******************************************************************************
                      00669 ; sorting statistics log mode
                      00670 ;*******************************************************************************
                      00671         
0004D6                00672 LOG
0004D6 6A38           00673         clrf    inStandby
0004D8 EC?? F???      00674         call    ClrLCD
                      00675         Display Log1
  0000                    M         local   loop
0004DC 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0004DE 6EF8               M         movwf   TBLPTRU
0004E0 0E??               M         movlw   high Log1       ; Move Table<15:8>
0004E2 6EF7               M         movwf   TBLPTRH
0004E4 0E??               M         movlw   low Log1        ; Move Table<7:0>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004E6 6EF6               M         movwf   TBLPTRL
0004E8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004EA 50F5               M         movf    TABLAT, W
0004EC                    M loop
0004EC EC?? F???          M         call    WR_DATA         ; write to LCD
0004F0 000B               M         tblrd+*                 ; next row in table
0004F2 50F5               M         movf    TABLAT, W
0004F4 E1??               M         bnz     loop
                      00676 
                      00677         ; display most recent run data
0004F6 0E0A           00678         movlw   d'10'
0004F8 6E21           00679         movwf   L_EE
0004FA EC?? F???      00680         call    DisplayExeTime
                      00681 
0004FE EC?? F???      00682         call    LCD_L2
000502 0E0D           00683         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000504 6E21           00684         movwf   L_EE
000506 EC?? F???      00685         call    DispOpSort
                      00686 
00050A                00687 HOLD_LOG
00050A EC?? F???      00688         call    READ_KEY
                      00689         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
00050E 0E07               M         movlw   keyB                ; poll for mode
000510 6210               M         cpfseq  KEY                 ; check this against key press
000512 EF?? F???          M         goto    Exit
                          M 
000516                    M Next
000516 6A89               M         clrf    LATA                ; clear pins before proceeding
000518 6A8A               M         clrf    LATB
00051A 6A8B               M         clrf    LATC
00051C 6A8C               M         clrf    LATD
00051E EF?? F???          M         goto    LOG_INFO
                          M 
000522                    M Exit
000522 0000               M         nop
                      00690         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000524 0E0D               M         movlw   key0                ; poll for mode
000526 6210               M         cpfseq  KEY                 ; check this against key press
000528 EF?? F???          M         goto    Exit
                          M 
00052C                    M Next
00052C 6A89               M         clrf    LATA                ; clear pins before proceeding
00052E 6A8A               M         clrf    LATB
000530 6A8B               M         clrf    LATC
000532 6A8C               M         clrf    LATD
000534 EF?? F???          M         goto    STANDBY
                          M 
000538                    M Exit
000538 0000               M         nop
00053A D???           00691         bra     HOLD_LOG
                      00692 
00053C                00693 LOG_INFO
00053C EC?? F???      00694         call    ClrLCD
000540 6A21           00695         clrf    L_EE
000542 EC?? F???      00696         call    DispOpRTC
                      00697         
000546 EC?? F???      00698         call    LCD_L2
                      00699         Display LogInfo2
  0000                    M         local   loop
00054A 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00054C 6EF8               M         movwf   TBLPTRU
00054E 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000550 6EF7               M         movwf   TBLPTRH
000552 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000554 6EF6               M         movwf   TBLPTRL
000556 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000558 50F5               M         movf    TABLAT, W
00055A                    M loop
00055A EC?? F???          M         call    WR_DATA         ; write to LCD
00055E 000B               M         tblrd+*                 ; next row in table
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000560 50F5               M         movf    TABLAT, W
000562 E1??               M         bnz     loop
000564 6A20           00700         clrf    H_EE
000566 6A21           00701         clrf    L_EE
000568                00702 HOLD_LOG_INFO
000568 EC?? F???      00703         call    READ_KEY
                      00704         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
00056C 0E0D               M         movlw   key0                ; poll for mode
00056E 6210               M         cpfseq  KEY                 ; check this against key press
000570 EF?? F???          M         goto    Exit
                          M 
000574                    M Next
000574 6A89               M         clrf    LATA                ; clear pins before proceeding
000576 6A8A               M         clrf    LATB
000578 6A8B               M         clrf    LATC
00057A 6A8C               M         clrf    LATD
00057C EF?? F???          M         goto    LOG
                          M 
000580                    M Exit
000580 0000               M         nop
000582 D???           00705         bra     HOLD_LOG
                      00706         
                      00707 ;*******************************************************************************
                      00708 ; permanent logs
                      00709 ;*******************************************************************************
                      00710 
000584                00711 PERM_LOG
000584 6A38           00712         clrf    inStandby
000586 EC?? F???      00713         call    ClrLCD
                      00714         Display PermLog1
  0000                    M         local   loop
00058A 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00058C 6EF8               M         movwf   TBLPTRU
00058E 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000590 6EF7               M         movwf   TBLPTRH
000592 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000594 6EF6               M         movwf   TBLPTRL
000596 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000598 50F5               M         movf    TABLAT, W
00059A                    M loop
00059A EC?? F???          M         call    WR_DATA         ; write to LCD
00059E 000B               M         tblrd+*                 ; next row in table
0005A0 50F5               M         movf    TABLAT, W
0005A2 E1??               M         bnz     loop
0005A4 EC?? F???      00715         call    LCD_L2
                      00716         Display PermLog2
  0000                    M         local   loop
0005A8 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0005AA 6EF8               M         movwf   TBLPTRU
0005AC 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0005AE 6EF7               M         movwf   TBLPTRH
0005B0 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0005B2 6EF6               M         movwf   TBLPTRL
0005B4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005B6 50F5               M         movf    TABLAT, W
0005B8                    M loop
0005B8 EC?? F???          M         call    WR_DATA         ; write to LCD
0005BC 000B               M         tblrd+*                 ; next row in table
0005BE 50F5               M         movf    TABLAT, W
0005C0 E1??               M         bnz     loop
                      00717         
0005C2                00718 HOLD_PERM_LOG
0005C2 EC?? F???      00719         call    READ_KEY
                      00720         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005C6 0E0D               M         movlw   key0                ; poll for mode
0005C8 6210               M         cpfseq  KEY                 ; check this against key press
0005CA EF?? F???          M         goto    Exit
                          M 
0005CE                    M Next
0005CE 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005D0 6A8A               M         clrf    LATB
0005D2 6A8B               M         clrf    LATC
0005D4 6A8C               M         clrf    LATD
0005D6 EF?? F???          M         goto    STANDBY
                          M 
0005DA                    M Exit
0005DA 0000               M         nop
                      00721         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
0005DC 0E00               M         movlw   key1                ; poll for mode
0005DE 6210               M         cpfseq  KEY                 ; check this against key press
0005E0 EF?? F???          M         goto    Exit
                          M 
0005E4                    M Next
0005E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0005E6 6A8A               M         clrf    LATB
0005E8 6A8B               M         clrf    LATC
0005EA 6A8C               M         clrf    LATD
0005EC EF?? F???          M         goto    PLOG
                          M 
0005F0                    M Exit
0005F0 0000               M         nop
                      00722         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0005F2 0E01               M         movlw   key2                ; poll for mode
0005F4 6210               M         cpfseq  KEY                 ; check this against key press
0005F6 EF?? F???          M         goto    Exit
                          M 
0005FA                    M Next
0005FA 6A89               M         clrf    LATA                ; clear pins before proceeding
0005FC 6A8A               M         clrf    LATB
0005FE 6A8B               M         clrf    LATC
000600 6A8C               M         clrf    LATD
000602 EF?? F???          M         goto    PLOG
                          M 
000606                    M Exit
000606 0000               M         nop
                      00723         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000608 0E02               M         movlw   key3                ; poll for mode
00060A 6210               M         cpfseq  KEY                 ; check this against key press
00060C EF?? F???          M         goto    Exit
                          M 
000610                    M Next
000610 6A89               M         clrf    LATA                ; clear pins before proceeding
000612 6A8A               M         clrf    LATB
000614 6A8B               M         clrf    LATC
000616 6A8C               M         clrf    LATD
000618 EF?? F???          M         goto    PLOG
                          M 
00061C                    M Exit
00061C 0000               M         nop
                      00724         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
00061E 0E04               M         movlw   key4                ; poll for mode
000620 6210               M         cpfseq  KEY                 ; check this against key press
000622 EF?? F???          M         goto    Exit
                          M 
000626                    M Next
000626 6A89               M         clrf    LATA                ; clear pins before proceeding
000628 6A8A               M         clrf    LATB
00062A 6A8B               M         clrf    LATC
00062C 6A8C               M         clrf    LATD
00062E EF?? F???          M         goto    PLOG
                          M 
000632                    M Exit
000632 0000               M         nop
                      00725         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000634 0E05               M         movlw   key5                ; poll for mode
000636 6210               M         cpfseq  KEY                 ; check this against key press
000638 EF?? F???          M         goto    Exit
                          M 
00063C                    M Next
00063C 6A89               M         clrf    LATA                ; clear pins before proceeding
00063E 6A8A               M         clrf    LATB
000640 6A8B               M         clrf    LATC
000642 6A8C               M         clrf    LATD
000644 EF?? F???          M         goto    PLOG
                          M 
000648                    M Exit
000648 0000               M         nop
                      00726         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
00064A 0E06               M         movlw   key6                ; poll for mode
00064C 6210               M         cpfseq  KEY                 ; check this against key press
00064E EF?? F???          M         goto    Exit
                          M 
000652                    M Next
000652 6A89               M         clrf    LATA                ; clear pins before proceeding
000654 6A8A               M         clrf    LATB
000656 6A8B               M         clrf    LATC
000658 6A8C               M         clrf    LATD
00065A EF?? F???          M         goto    PLOG
                          M 
00065E                    M Exit
00065E 0000               M         nop
                      00727         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000660 0E08               M         movlw   key7                ; poll for mode
000662 6210               M         cpfseq  KEY                 ; check this against key press
000664 EF?? F???          M         goto    Exit
                          M 
000668                    M Next
000668 6A89               M         clrf    LATA                ; clear pins before proceeding
00066A 6A8A               M         clrf    LATB
00066C 6A8B               M         clrf    LATC
00066E 6A8C               M         clrf    LATD
000670 EF?? F???          M         goto    PLOG
                          M 
000674                    M Exit
000674 0000               M         nop
                      00728         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000676 0E09               M         movlw   key8                ; poll for mode
000678 6210               M         cpfseq  KEY                 ; check this against key press
00067A EF?? F???          M         goto    Exit
                          M 
00067E                    M Next
00067E 6A89               M         clrf    LATA                ; clear pins before proceeding
000680 6A8A               M         clrf    LATB
000682 6A8B               M         clrf    LATC
000684 6A8C               M         clrf    LATD
000686 EF?? F???          M         goto    PLOG
                          M 
00068A                    M Exit
00068A 0000               M         nop
                      00729         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
00068C 0E0A               M         movlw   key9                ; poll for mode
00068E 6210               M         cpfseq  KEY                 ; check this against key press
000690 EF?? F???          M         goto    Exit
                          M 
000694                    M Next
000694 6A89               M         clrf    LATA                ; clear pins before proceeding
000696 6A8A               M         clrf    LATB
000698 6A8B               M         clrf    LATC
00069A 6A8C               M         clrf    LATD
00069C EF?? F???          M         goto    PLOG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0006A0                    M Exit
0006A0 0000               M         nop
0006A2 D???           00730         bra HOLD_PERM_LOG
                      00731         
0006A4                00732 PLOG
0006A4 6A38           00733         clrf    inStandby
0006A6 EC?? F???      00734         call    ClrLCD
                      00735         Display PermLog1
  0000                    M         local   loop
0006AA 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0006AC 6EF8               M         movwf   TBLPTRU
0006AE 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0006B0 6EF7               M         movwf   TBLPTRH
0006B2 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0006B4 6EF6               M         movwf   TBLPTRL
0006B6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006B8 50F5               M         movf    TABLAT, W
0006BA                    M loop
0006BA EC?? F???          M         call    WR_DATA         ; write to LCD
0006BE 000B               M         tblrd+*                 ; next row in table
0006C0 50F5               M         movf    TABLAT, W
0006C2 E1??               M         bnz     loop
                      00736         
                      00737         ; find the key press value
0006C4 C010 FFE8      00738         movff   KEY, WREG
0006C8 2AE8           00739         incf    WREG        ; W = KEY+1
0006CA 6E17           00740         movwf   temp
                      00741         
0006CC 42E8           00742         rrncf   WREG        ; division by 4
0006CE 9EE8           00743         bcf     WREG, 7     ; clear last bit, overflow from rotate
0006D0 42E8           00744         rrncf   WREG        
0006D2 9EE8           00745         bcf     WREG, 7
0006D4 5E17           00746         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0006D6 C017 FFE8      00747         movff   temp, WREG
0006DA C017 F011      00748         movff   temp, temp_KEY
0006DE 0D15           00749         mullw   d'21'       ; indexed as mutliples of 21
                      00750 
0006E0                00751 displayNum
0006E0 C011 FFE8      00752         movff   temp_KEY, WREG
0006E4 0F30           00753         addlw   0x30
0006E6 EC?? F???      00754         call    WR_DATA
0006EA 0E3A           00755         movlw   ":"
0006EC EC?? F???      00756         call    WR_DATA
0006F0 0E20           00757         movlw   " "
0006F2 EC?? F???      00758         call    WR_DATA
                      00759         
0006F6 CFF3 F021      00760         movff   PRODL, L_EE
0006FA 0E00           00761         movlw   d'0'
0006FC 2621           00762         addwf   L_EE
                      00763         READEE  OP_sec, H_EE, L_EE
0006FE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000702 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000706 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000708 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00070A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00070C CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000710 2A21           00764         incf    L_EE
                      00765         READEE  OP_INT, H_EE, L_EE
000712 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000716 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00071A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00071C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00071E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000720 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000724 2A21           00766         incf    L_EE
000726 EC?? F???      00767         call    DisplayExeTime
00072A CFF3 F021      00768         movff   PRODL, L_EE
                      00769         
                      00770         ; reset eeprom to beginning
00072E EC?? F???      00771         call    LCD_L2
000732 CFF3 F021      00772         movff   PRODL, L_EE
000736 EC?? F???      00773         call    DispOpRTC
                      00774         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00073A                00775 HOLD_PLOG
00073A EC?? F???      00776         call    READ_KEY
                      00777         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
00073E 0E03               M         movlw   keyA                ; poll for mode
000740 6210               M         cpfseq  KEY                 ; check this against key press
000742 EF?? F???          M         goto    Exit
                          M 
000746                    M Next
000746 6A89               M         clrf    LATA                ; clear pins before proceeding
000748 6A8A               M         clrf    LATB
00074A 6A8B               M         clrf    LATC
00074C 6A8C               M         clrf    LATD
00074E EF?? F???          M         goto    PLOG_DETAILS
                          M 
000752                    M Exit
000752 0000               M         nop
                      00778         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000754 0E0D               M         movlw   key0                ; poll for mode
000756 6210               M         cpfseq  KEY                 ; check this against key press
000758 EF?? F???          M         goto    Exit
                          M 
00075C                    M Next
00075C 6A89               M         clrf    LATA                ; clear pins before proceeding
00075E 6A8A               M         clrf    LATB
000760 6A8B               M         clrf    LATC
000762 6A8C               M         clrf    LATD
000764 EF?? F???          M         goto    PERM_LOG
                          M 
000768                    M Exit
000768 0000               M         nop
00076A D???           00779         bra HOLD_PLOG
                      00780         
00076C                00781 PLOG_DETAILS
00076C EC?? F???      00782         call    ClrLCD
                      00783         
                      00784         Display Log1
  0000                    M         local   loop
000770 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000772 6EF8               M         movwf   TBLPTRU
000774 0E??               M         movlw   high Log1       ; Move Table<15:8>
000776 6EF7               M         movwf   TBLPTRH
000778 0E??               M         movlw   low Log1        ; Move Table<7:0>
00077A 6EF6               M         movwf   TBLPTRL
00077C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00077E 50F5               M         movf    TABLAT, W
000780                    M loop
000780 EC?? F???          M         call    WR_DATA         ; write to LCD
000784 000B               M         tblrd+*                 ; next row in table
000786 50F5               M         movf    TABLAT, W
000788 E1??               M         bnz     loop
00078A EC?? F???      00785         call    DisplayExeTime
                      00786         
00078E EC?? F???      00787         call    LCD_L2
000792 EC?? F???      00788         call    DispOpSort
                      00789         
000796                00790 HOLD_PLOG_DETAILS
000796 EC?? F???      00791         call    READ_KEY
                      00792         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00079A 0E0D               M         movlw   key0                ; poll for mode
00079C 6210               M         cpfseq  KEY                 ; check this against key press
00079E EF?? F???          M         goto    Exit
                          M 
0007A2                    M Next
0007A2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A4 6A8A               M         clrf    LATB
0007A6 6A8B               M         clrf    LATC
0007A8 6A8C               M         clrf    LATD
0007AA EF?? F???          M         goto    PERM_LOG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0007AE                    M Exit
0007AE 0000               M         nop
0007B0 D???           00793         bra HOLD_PLOG_DETAILS
                      00794         
                      00795 ;*******************************************************************************
                      00796 ; pc interface
                      00797 ;*******************************************************************************
                      00798 
0007B2                00799 PC_MODE
0007B2 6A38           00800         clrf    inStandby
0007B4 EC?? F???      00801         call    ClrLCD
                      00802         Display PC1
  0000                    M         local   loop
0007B8 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0007BA 6EF8               M         movwf   TBLPTRU
0007BC 0E??               M         movlw   high PC1        ; Move Table<15:8>
0007BE 6EF7               M         movwf   TBLPTRH
0007C0 0E??               M         movlw   low PC1         ; Move Table<7:0>
0007C2 6EF6               M         movwf   TBLPTRL
0007C4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007C6 50F5               M         movf    TABLAT, W
0007C8                    M loop
0007C8 EC?? F???          M         call    WR_DATA         ; write to LCD
0007CC 000B               M         tblrd+*                 ; next row in table
0007CE 50F5               M         movf    TABLAT, W
0007D0 E1??               M         bnz     loop
0007D2 EC?? F???      00803         call    LCD_L2
                      00804         Display PC2
  0000                    M         local   loop
0007D6 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0007D8 6EF8               M         movwf   TBLPTRU
0007DA 0E??               M         movlw   high PC2        ; Move Table<15:8>
0007DC 6EF7               M         movwf   TBLPTRH
0007DE 0E??               M         movlw   low PC2         ; Move Table<7:0>
0007E0 6EF6               M         movwf   TBLPTRL
0007E2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007E4 50F5               M         movf    TABLAT, W
0007E6                    M loop
0007E6 EC?? F???          M         call    WR_DATA         ; write to LCD
0007EA 000B               M         tblrd+*                 ; next row in table
0007EC 50F5               M         movf    TABLAT, W
0007EE E1??               M         bnz     loop
0007F0 CFF9 F029      00805         movff   PCL, PC_PCL
0007F4 CFFA F02A      00806         movff   PCLATH, PC_PCLATH
0007F8 CFFB F02B      00807         movff   PCLATU, PC_PCLATU
                      00808         
0007FC                00809 HOLD_PC
0007FC EC?? F???      00810         call    READ_KEY
                      00811         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000800 0E0D               M         movlw   key0                ; poll for mode
000802 6210               M         cpfseq  KEY                 ; check this against key press
000804 EF?? F???          M         goto    Exit
                          M 
000808                    M Next
000808 6A89               M         clrf    LATA                ; clear pins before proceeding
00080A 6A8A               M         clrf    LATB
00080C 6A8B               M         clrf    LATC
00080E 6A8C               M         clrf    LATD
000810 EF?? F???          M         goto    STANDBY
                          M 
000814                    M Exit
000814 0000               M         nop
                      00812         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000816 0E0E               M         movlw   keyH                ; poll for mode
000818 6210               M         cpfseq  KEY                 ; check this against key press
00081A EF?? F???          M         goto    Exit
                          M 
00081E                    M Next
00081E 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000820 6A8A               M         clrf    LATB
000822 6A8B               M         clrf    LATC
000824 6A8C               M         clrf    LATD
000826 EF?? F???          M         goto    PC_TRANSFER
                          M 
00082A                    M Exit
00082A 0000               M         nop
00082C D???           00813         bra     HOLD_PC
                      00814 
00082E                00815 PC_TRANSFER
00082E 6A38           00816         clrf    inStandby
000830 6828           00817         setf    transferring
000832 EC?? F???      00818         call    ClrLCD
                      00819         Display PCTransfer
  0000                    M         local   loop
000836 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000838 6EF8               M         movwf   TBLPTRU
00083A 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
00083C 6EF7               M         movwf   TBLPTRH
00083E 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000840 6EF6               M         movwf   TBLPTRL
000842 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000844 50F5               M         movf    TABLAT, W
000846                    M loop
000846 EC?? F???          M         call    WR_DATA         ; write to LCD
00084A 000B               M         tblrd+*                 ; next row in table
00084C 50F5               M         movf    TABLAT, W
00084E E1??               M         bnz     loop
000850 EC?? F???      00820         call    DataUSART
000854 6A28           00821         clrf    transferring
000856 EF?? F???      00822         goto    STANDBY
                      00823         
                      00824 ;*******************************************************************************
                      00825 ; subroutines
                      00826 ;*******************************************************************************
                      00827 
00085A                00828 SaveData
00085A C02D FFE8      00829         movff       ESKA, WREG
00085E 0F30           00830         addlw       0x30
                      00831         WriteEE     WREG, H_EE, L_EE
000860 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000864 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000868 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00086C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00086E D???               M         bra     $-2
                          M 
000870 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000872 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000874 84A6               M         bsf     EECON1, WREN        ; enable write
000876 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000878 98A1               M         bcf     PIR2, EEIF
                          M 
00087A 0E55               M         movlw   0x55
00087C 6EA7               M         movwf   EECON2              ; write 55h
00087E 0EAA               M         movlw   0xaa
000880 6EA7               M         movwf   EECON2              ; write 0xaa
000882 82A6               M         bsf     EECON1, WR          ; begin write
000884 B2A6               M         btfsc   EECON1, WR
000886 D???               M         bra     $-2
                          M 
000888 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00088A 94A6               M         bcf     EECON1, WREN        ; disable writes
00088C 2A21           00832         incf        L_EE
                      00833         
00088E C02E FFE8      00834         movff       ESKA_NOCAP, WREG
000892 0F30           00835         addlw       0x30
                      00836         WriteEE     WREG, H_EE, L_EE
000894 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000898 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00089C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008A0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008A2 D???               M         bra     $-2
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0008A4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008A6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008A8 84A6               M         bsf     EECON1, WREN        ; enable write
0008AA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008AC 98A1               M         bcf     PIR2, EEIF
                          M 
0008AE 0E55               M         movlw   0x55
0008B0 6EA7               M         movwf   EECON2              ; write 55h
0008B2 0EAA               M         movlw   0xaa
0008B4 6EA7               M         movwf   EECON2              ; write 0xaa
0008B6 82A6               M         bsf     EECON1, WR          ; begin write
0008B8 B2A6               M         btfsc   EECON1, WR
0008BA D???               M         bra     $-2
                          M 
0008BC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008BE 94A6               M         bcf     EECON1, WREN        ; disable writes
0008C0 2A21           00837         incf        L_EE
                      00838         
0008C2 C02F FFE8      00839         movff       YOP, WREG
0008C6 0F30           00840         addlw       0x30
                      00841         WriteEE     WREG, H_EE, L_EE
0008C8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008CC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008D0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008D4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008D6 D???               M         bra     $-2
                          M 
0008D8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008DA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008DC 84A6               M         bsf     EECON1, WREN        ; enable write
0008DE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008E0 98A1               M         bcf     PIR2, EEIF
                          M 
0008E2 0E55               M         movlw   0x55
0008E4 6EA7               M         movwf   EECON2              ; write 55h
0008E6 0EAA               M         movlw   0xaa
0008E8 6EA7               M         movwf   EECON2              ; write 0xaa
0008EA 82A6               M         bsf     EECON1, WR          ; begin write
0008EC B2A6               M         btfsc   EECON1, WR
0008EE D???               M         bra     $-2
                          M 
0008F0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008F2 94A6               M         bcf     EECON1, WREN        ; disable writes
0008F4 2A21           00842         incf        L_EE
                      00843         
0008F6 C030 FFE8      00844         movff       YOP_NOCAP, WREG
0008FA 0F30           00845         addlw       0x30
                      00846         WriteEE     WREG, H_EE, L_EE
0008FC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000900 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000904 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000908 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00090A D???               M         bra     $-2
                          M 
00090C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00090E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000910 84A6               M         bsf     EECON1, WREN        ; enable write
000912 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000914 98A1               M         bcf     PIR2, EEIF
                          M 
000916 0E55               M         movlw   0x55
000918 6EA7               M         movwf   EECON2              ; write 55h
00091A 0EAA               M         movlw   0xaa
00091C 6EA7               M         movwf   EECON2              ; write 0xaa
00091E 82A6               M         bsf     EECON1, WR          ; begin write
000920 B2A6               M         btfsc   EECON1, WR
000922 D???               M         bra     $-2
                          M 
000924 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000926 94A6               M         bcf     EECON1, WREN        ; disable writes
000928 2A21           00847         incf        L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00848         
00092A C037 FFE8      00849         movff       STOP_CONDITION, WREG
00092E 0F30           00850         addlw       0x30
                      00851         WriteEE     WREG, H_EE, L_EE
000930 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000934 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000938 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00093C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00093E D???               M         bra     $-2
                          M 
000940 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000942 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000944 84A6               M         bsf     EECON1, WREN        ; enable write
000946 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000948 98A1               M         bcf     PIR2, EEIF
                          M 
00094A 0E55               M         movlw   0x55
00094C 6EA7               M         movwf   EECON2              ; write 55h
00094E 0EAA               M         movlw   0xaa
000950 6EA7               M         movwf   EECON2              ; write 0xaa
000952 82A6               M         bsf     EECON1, WR          ; begin write
000954 B2A6               M         btfsc   EECON1, WR
000956 D???               M         bra     $-2
                          M 
000958 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00095A 94A6               M         bcf     EECON1, WREN        ; disable writes
00095C 2A21           00852         incf        L_EE
                      00853         
00095E 0E00           00854         movlw       d'0'
000960 6E20           00855         movwf       H_EE
000962 0EA8           00856         movlw       d'168'              ; take d'168' as last
000964 6E21           00857         movwf       L_EE
000966 0E00           00858         movlw       d'0'
000968 6E23           00859         movwf       tempH_EE
00096A 0EDC           00860         movlw       d'220'              ; temp for low constant
00096C 6E24           00861         movwf       tempL_EE
                      00862         
00096E 6A16           00863         clrf        counter2
000970 6A15           00864         clrf        counter
                      00865         
000972                00866 ShiftLoop
000972 2A15           00867         incf            counter
                      00868         READEE          REG_EE, H_EE, L_EE
000974 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000978 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00097C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00097E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000980 80A6               M         bsf     EECON1, RD          ; read EEPROM
000982 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000986 0E15           00869         movlw           d'21'
000988 2621           00870         addwf           L_EE
                      00871         WriteEE         REG_EE, H_EE, L_EE
00098A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00098E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000992 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000996 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000998 D???               M         bra     $-2
                          M 
00099A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00099C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00099E 84A6               M         bsf     EECON1, WREN        ; enable write
0009A0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009A2 98A1               M         bcf     PIR2, EEIF
                          M 
0009A4 0E55               M         movlw   0x55
0009A6 6EA7               M         movwf   EECON2              ; write 55h
0009A8 0EAA               M         movlw   0xaa
0009AA 6EA7               M         movwf   EECON2              ; write 0xaa
0009AC 82A6               M         bsf     EECON1, WR          ; begin write
0009AE B2A6               M         btfsc   EECON1, WR
0009B0 D???               M         bra     $-2
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009B2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009B4 94A6               M         bcf     EECON1, WREN        ; disable writes
0009B6 0E14           00872         movlw           d'20'
0009B8 5E21           00873         subwf           L_EE
0009BA 0E15           00874         movlw           d'21'
0009BC 6215           00875         cpfseq          counter
0009BE EF?? F???      00876         goto            ShiftLoop
                      00877         
                      00878         ; Set EEPROM address to the previous 21 byte block, and reset temp address
0009C2 0E2A           00879         movlw           d'42'
0009C4 5E21           00880         subwf           L_EE
0009C6 0EDC           00881         movlw           d'220'
0009C8 6E24           00882         movwf           tempL_EE
0009CA 6A15           00883         clrf            counter
0009CC 2A16           00884         incf            counter2
0009CE 0E09           00885         movlw           d'9'
0009D0 6216           00886         cpfseq          counter2        ; skip if 9 shifts were made
0009D2 EF?? F???      00887         goto            ShiftLoop
                      00888 
0009D6 0012           00889         return
                      00890         
0009D8                00891 RTC_INIT
                      00892         ; set sda and scl to high
0009D8 9882           00893         bcf     PORTC, 4
0009DA 9682           00894         bcf     PORTC, 3
0009DC 8894           00895         bsf     TRISC, 4
0009DE 8694           00896         bsf     TRISC, 3
                      00897         
0009E0 EC?? F???      00898         call    INIT_RTC
                      00899         
                      00900         ;call   SET_TIME                ; comment this out to reset/change rtc
Warning[203]: Found opcode in column 1. (return)
0009E4 0012           00901 return
                      00902         
0009E6                00903 SAVE_TIME
                      00904         rtc_read    0x02        ; hours     ; need to call this twice idk y
0009E6 0E02               M     movlw   0x02
0009E8 6E??               M     movwf   regaddress
0009EA EC?? F???          M     call    read_rtc
0009EE C??? FFE8          M     movff   datachar, WREG
0009F2 EC?? F???          M     call    rtc_convert
                      00905         rtc_read    0x02        ; hours
0009F6 0E02               M     movlw   0x02
0009F8 6E??               M     movwf   regaddress
0009FA EC?? F???          M     call    read_rtc
0009FE C??? FFE8          M     movff   datachar, WREG
000A02 EC?? F???          M     call    rtc_convert
000A06 EC?? F???      00906         call    WriteEE_RTC
                      00907         rtc_read    0x01        ; minutes
000A0A 0E01               M     movlw   0x01
000A0C 6E??               M     movwf   regaddress
000A0E EC?? F???          M     call    read_rtc
000A12 C??? FFE8          M     movff   datachar, WREG
000A16 EC?? F???          M     call    rtc_convert
000A1A EC?? F???      00908         call    WriteEE_RTC
                      00909         rtc_read    0x06        ; years
000A1E 0E06               M     movlw   0x06
000A20 6E??               M     movwf   regaddress
000A22 EC?? F???          M     call    read_rtc
000A26 C??? FFE8          M     movff   datachar, WREG
000A2A EC?? F???          M     call    rtc_convert
000A2E EC?? F???      00910         call    WriteEE_RTC
                      00911         rtc_read    0x05        ; months
000A32 0E05               M     movlw   0x05
000A34 6E??               M     movwf   regaddress
000A36 EC?? F???          M     call    read_rtc
000A3A C??? FFE8          M     movff   datachar, WREG
000A3E EC?? F???          M     call    rtc_convert
000A42 EC?? F???      00912         call    WriteEE_RTC
                      00913         rtc_read    0x04        ; days
000A46 0E04               M     movlw   0x04
000A48 6E??               M     movwf   regaddress
000A4A EC?? F???          M     call    read_rtc
000A4E C??? FFE8          M     movff   datachar, WREG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A52 EC?? F???          M     call    rtc_convert
000A56 EC?? F???      00914         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000A5A 0012           00915 return
                      00916         
000A5C                00917 SAVE_EXE_TIME
                      00918         
Warning[202]: Argument out of range.  Least significant bits used.
000A5C 3818           00919         swapf   OP_sec, WREG    ; 100's seconds
000A5E 6E17           00920         movwf   temp
000A60 0E0F           00921         movlw   0x0f
000A62 1617           00922         andwf   temp
000A64 C017 FFE8      00923         movff   temp, WREG
000A68 0F30           00924         addlw   0x30    
                      00925         WriteEE WREG, H_EE, L_EE
000A6A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A6E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A72 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A76 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A78 D???               M         bra     $-2
                          M 
000A7A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A7C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A7E 84A6               M         bsf     EECON1, WREN        ; enable write
000A80 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A82 98A1               M         bcf     PIR2, EEIF
                          M 
000A84 0E55               M         movlw   0x55
000A86 6EA7               M         movwf   EECON2              ; write 55h
000A88 0EAA               M         movlw   0xaa
000A8A 6EA7               M         movwf   EECON2              ; write 0xaa
000A8C 82A6               M         bsf     EECON1, WR          ; begin write
000A8E B2A6               M         btfsc   EECON1, WR
000A90 D???               M         bra     $-2
                          M 
000A92 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A94 94A6               M         bcf     EECON1, WREN        ; disable writes
000A96 2A21           00926         incf    L_EE
                      00927         
000A98 C018 F017      00928         movff   OP_sec, temp    ; 10's seconds
000A9C 0E0F           00929         movlw   0x0f
000A9E 1617           00930         andwf   temp            ; Temp = lower nibble of Op_sec
000AA0 C017 FFE8      00931         movff   temp, WREG      ; W = Temp
000AA4 0F30           00932         addlw   0x30            ; Convert to ASCII
                      00933         WriteEE WREG, H_EE, L_EE
000AA6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AAA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AAE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AB2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AB4 D???               M         bra     $-2
                          M 
000AB6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AB8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000ABA 84A6               M         bsf     EECON1, WREN        ; enable write
000ABC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000ABE 98A1               M         bcf     PIR2, EEIF
                          M 
000AC0 0E55               M         movlw   0x55
000AC2 6EA7               M         movwf   EECON2              ; write 55h
000AC4 0EAA               M         movlw   0xaa
000AC6 6EA7               M         movwf   EECON2              ; write 0xaa
000AC8 82A6               M         bsf     EECON1, WR          ; begin write
000ACA B2A6               M         btfsc   EECON1, WR
000ACC D???               M         bra     $-2
                          M 
000ACE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AD0 94A6               M         bcf     EECON1, WREN        ; disable writes
000AD2 2A21           00934         incf    L_EE
                      00935         
Warning[202]: Argument out of range.  Least significant bits used.
000AD4 3819           00936         swapf   OP_INT, WREG    ;1's seconds
000AD6 6E17           00937         movwf   temp
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AD8 0E0F           00938         movlw   0x0f
000ADA 1617           00939         andwf   temp
000ADC C017 FFE8      00940         movff   temp, WREG
000AE0 0F30           00941         addlw   0x30
                      00942         WriteEE WREG, H_EE, L_EE
000AE2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AE6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AEA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AEE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AF0 D???               M         bra     $-2
                          M 
000AF2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AF4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AF6 84A6               M         bsf     EECON1, WREN        ; enable write
000AF8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000AFA 98A1               M         bcf     PIR2, EEIF
                          M 
000AFC 0E55               M         movlw   0x55
000AFE 6EA7               M         movwf   EECON2              ; write 55h
000B00 0EAA               M         movlw   0xaa
000B02 6EA7               M         movwf   EECON2              ; write 0xaa
000B04 82A6               M         bsf     EECON1, WR          ; begin write
000B06 B2A6               M         btfsc   EECON1, WR
000B08 D???               M         bra     $-2
                          M 
000B0A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B0C 94A6               M         bcf     EECON1, WREN        ; disable writes
000B0E 2A21           00943         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000B10 0012           00944 return
                      00945         
                      00946                 
000B12                00947 DISPLAY_RTC
                      00948         ; display data in this format hh/minmin/yy yy/mm/dd
                      00949         
                      00950         rtc_read    0x02            ; 0x02 from DS1307 - hours
000B12 0E02               M     movlw   0x02
000B14 6E??               M     movwf   regaddress
000B16 EC?? F???          M     call    read_rtc
000B1A C??? FFE8          M     movff   datachar, WREG
000B1E EC?? F???          M     call    rtc_convert
000B22 C??? FFE8      00951         movff   tens_digit,WREG
000B26 EC?? F???      00952         call    WR_DATA
000B2A C??? FFE8      00953         movff   ones_digit,WREG
000B2E EC?? F???      00954         call    WR_DATA
000B32 0E68           00955         movlw   "h"
000B34 EC?? F???      00956         call    WR_DATA
                      00957         
                      00958         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000B38 0E01               M     movlw   0x01
000B3A 6E??               M     movwf   regaddress
000B3C EC?? F???          M     call    read_rtc
000B40 C??? FFE8          M     movff   datachar, WREG
000B44 EC?? F???          M     call    rtc_convert
000B48 C??? FFE8      00959         movff   tens_digit,WREG
000B4C EC?? F???      00960         call    WR_DATA
000B50 C??? FFE8      00961         movff   ones_digit,WREG
000B54 EC?? F???      00962         call    WR_DATA
                      00963         
                      00964         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000B58 0E00               M     movlw   0x00
000B5A 6E??               M     movwf   regaddress
000B5C EC?? F???          M     call    read_rtc
000B60 C??? FFE8          M     movff   datachar, WREG
000B64 EC?? F???          M     call    rtc_convert
000B68 C??? FFE8      00965         movff   tens_digit,WREG
000B6C EC?? F???      00966         call    WR_DATA
000B70 C??? FFE8      00967         movff   ones_digit,WREG
000B74 EC?? F???      00968         call    WR_DATA
000B78 0E20           00969         movlw   " "
000B7A EC?? F???      00970         call    WR_DATA
                      00971         
                      00972         rtc_read    0x06            ; 0x06 from DS1307 - years
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B7E 0E06               M     movlw   0x06
000B80 6E??               M     movwf   regaddress
000B82 EC?? F???          M     call    read_rtc
000B86 C??? FFE8          M     movff   datachar, WREG
000B8A EC?? F???          M     call    rtc_convert
000B8E C??? FFE8      00973         movff   tens_digit,WREG
000B92 EC?? F???      00974         call    WR_DATA
000B96 C??? FFE8      00975         movff   ones_digit,WREG
000B9A EC?? F???      00976         call    WR_DATA
000B9E 0E2F           00977         movlw   "/"
000BA0 EC?? F???      00978         call    WR_DATA
                      00979         
                      00980         rtc_read    0x05            ; 0x05 from DS1307 - months
000BA4 0E05               M     movlw   0x05
000BA6 6E??               M     movwf   regaddress
000BA8 EC?? F???          M     call    read_rtc
000BAC C??? FFE8          M     movff   datachar, WREG
000BB0 EC?? F???          M     call    rtc_convert
000BB4 C??? FFE8      00981         movff   tens_digit,WREG
000BB8 EC?? F???      00982         call    WR_DATA
000BBC C??? FFE8      00983         movff   ones_digit,WREG
000BC0 EC?? F???      00984         call    WR_DATA
000BC4 0E2F           00985         movlw   "/"
000BC6 EC?? F???      00986         call    WR_DATA
                      00987         
                      00988         rtc_read    0x04            ; 0x04 from DS1307 - days
000BCA 0E04               M     movlw   0x04
000BCC 6E??               M     movwf   regaddress
000BCE EC?? F???          M     call    read_rtc
000BD2 C??? FFE8          M     movff   datachar, WREG
000BD6 EC?? F???          M     call    rtc_convert
000BDA C??? FFE8      00989         movff   tens_digit,WREG
000BDE EC?? F???      00990         call    WR_DATA
000BE2 C??? FFE8      00991         movff   ones_digit,WREG
000BE6 EC?? F???      00992         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000BEA 0012           00993 return
                      00994         
000BEC                00995 SET_TIME
                      00996         rtc_resetAll
                          M 
000BEC 6A??               M     clrf    databyte
000BEE 0E06               M     movlw   6
000BF0 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000BF2                    M     del_loop0
000BF2 EC?? F???          M     call    write_rtc
000BF6 2E??               M     decfsz  regaddress
000BF8 D???               M     bra     del_loop0
000BFA EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      00997         
                      00998         rtc_set 0x00,   b'10000000'
000BFE 0E00               M     movlw   0x00
000C00 6E??               M     movwf   regaddress
000C02 0E80               M     movlw   b'10000000'
000C04 6E??               M     movwf   databyte
000C06 EC?? F???          M     call    write_rtc
                      00999 
                      01000         rtc_set 0x06,   b'00010111'             ; year 17
000C0A 0E06               M     movlw   0x06
000C0C 6E??               M     movwf   regaddress
000C0E 0E17               M     movlw   b'00010111'
000C10 6E??               M     movwf   databyte
000C12 EC?? F???          M     call    write_rtc
                      01001         rtc_set 0x05,   b'00000100'             ; month 04
000C16 0E05               M     movlw   0x05
000C18 6E??               M     movwf   regaddress
000C1A 0E04               M     movlw   b'00000100'
000C1C 6E??               M     movwf   databyte
000C1E EC?? F???          M     call    write_rtc
                      01002         rtc_set 0x04,   b'00000110'             ; day of month 06
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C22 0E04               M     movlw   0x04
000C24 6E??               M     movwf   regaddress
000C26 0E06               M     movlw   b'00000110'
000C28 6E??               M     movwf   databyte
000C2A EC?? F???          M     call    write_rtc
                      01003         rtc_set 0x02,   b'00100010'             ; hours 22
000C2E 0E02               M     movlw   0x02
000C30 6E??               M     movwf   regaddress
000C32 0E22               M     movlw   b'00100010'
000C34 6E??               M     movwf   databyte
000C36 EC?? F???          M     call    write_rtc
                      01004         rtc_set 0x01,   b'00010101'             ; minutes 13
000C3A 0E01               M     movlw   0x01
000C3C 6E??               M     movwf   regaddress
000C3E 0E15               M     movlw   b'00010101'
000C40 6E??               M     movwf   databyte
000C42 EC?? F???          M     call    write_rtc
                      01005         rtc_set 0x00,   b'00000000'             ; seconds 0
000C46 0E00               M     movlw   0x00
000C48 6E??               M     movwf   regaddress
000C4A 0E00               M     movlw   b'00000000'
000C4C 6E??               M     movwf   databyte
000C4E EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000C52 0012           01006 return
                      01007         
000C54                01008 INIT_USART
                      01009         
000C54 8E94           01010         bsf     TRISC, 7        ; set RC7=USART RC
000C56 9C94           01011         bcf     TRISC, 6        ; clear RC6=USART TX
                      01012 
000C58 0E0F           01013         movlw   15              ; baud rate 9600
000C5A 6EAF           01014         movwf   SPBRG
000C5C 6AAC           01015         clrf    TXSTA
                      01016         
000C5E 6AAB           01017         clrf    RCSTA
000C60 8EAB           01018         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000C62 88AB           01019         bsf     RCSTA,CREN      ; continous receive
                      01020         
000C64 8AAC           01021         bsf     TXSTA, TXEN     ; transmit enabled
000C66 0012           01022         return
                      01023 
000C68                01024 DataUSART
000C68 0E02           01025         movlw   0x02
000C6A EC?? F???      01026         call    USART_WAIT
000C6E 0E0D           01027         movlw   0x0D
000C70 EC?? F???      01028         call    USART_WAIT
                      01029         
000C74 6A15           01030         clrf    counter         ; used to cycle through past 9 eeprom logs
000C76 6A16           01031         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01032         
000C78                01033 TRANSFER_LOGS
000C78 0E15           01034         movlw   d'21'           ; logs are 21 bits apart
000C7A 0215           01035         mulwf   counter         ; log number one starts at eeprom address 0
000C7C CFF3 F021      01036         movff   PRODL, L_EE     ; low address now points to count X 21
000C80 6A16           01037         clrf    counter2
                      01038         
000C82                01039 TRANSFER_DATA   
                      01040         READEE  WREG, H_EE, L_EE
000C82 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C86 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000C8A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C8C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C8E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C90 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000C94 EC?? F???      01041         call    USART_WAIT      ; transfer bit
000C98 2A21           01042         incf    L_EE
                      01043         
000C9A 2A16           01044         incf    counter2
000C9C 0E12           01045         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000C9E 6216           01046         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000CA0 D???           01047         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01048         
000CA2 EC?? F???      01049         call    USART_LINE      ; new line because a e s t h e t i c
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01050         
000CA6 2A15           01051         incf    counter
000CA8 0E08           01052         movlw   d'8'            ; we save up to the last 9 permanent logs
000CAA 6215           01053         cpfseq  counter
000CAC D???           01054         bra     TRANSFER_LOGS
                      01055         
000CAE EC?? F???      01056         call    LCD_L2
                      01057         Display PCComplete
  0000                    M         local   loop
000CB2 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000CB4 6EF8               M         movwf   TBLPTRU
000CB6 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000CB8 6EF7               M         movwf   TBLPTRH
000CBA 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000CBC 6EF6               M         movwf   TBLPTRL
000CBE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CC0 50F5               M         movf    TABLAT, W
000CC2                    M loop
000CC2 EC?? F???          M         call    WR_DATA         ; write to LCD
000CC6 000B               M         tblrd+*                 ; next row in table
000CC8 50F5               M         movf    TABLAT, W
000CCA E1??               M         bnz     loop
                      01058         Delay50N delayR, 0x28   
  0000                    M         local   loop
000CCC 0E28               M         movlw   0x28
000CCE 6E1A               M         movwf   delayR
                          M 
000CD0                    M loop
000CD0 EC?? F???          M         call    Delay50ms
000CD4 2E1A               M         decfsz  delayR
000CD6 EF?? F???          M         goto    loop
000CDA 0012           01059         return                  ; done transmitting data
                      01060         
000CDC                01061 USART_WAIT
000CDC 6EAD           01062         movwf   TXREG
000CDE A2AC           01063         btfss   TXSTA, 1
000CE0 EF?? F???      01064         goto    $-2
000CE4 0012           01065         return
                      01066 
000CE6                01067 USART_LINE
000CE6 0E0A           01068         movlw   0x0A
000CE8 EC?? F???      01069         call    USART_WAIT
000CEC 0E0D           01070         movlw   0x0D
000CEE EC?? F???      01071         call    USART_WAIT
000CF2 0012           01072         return
                      01073         
000CF4                01074 Delay5us
000CF4 0E78           01075         movlw   d'120'
000CF6 6E1B           01076         movwf   d5us
                      01077 
000CF8                01078 loop5us
000CF8 2E1B           01079         decfsz  d5us
000CFA EF?? F???      01080         goto    loop5us
000CFE 0000           01081         nop
000D00 0012           01082         return
                      01083 
000D02                01084 Delay200us
000D02 0EA4           01085         movlw   0xA4
000D04 6E1C           01086         movwf   d200us
                      01087 
000D06                01088 loop200us
000D06 2E1C           01089         decfsz  d200us
000D08 EF?? F???      01090         goto    loop200us
000D0C 0000           01091         nop
000D0E 0012           01092         return
                      01093 
000D10                01094 Delay50ms
000D10 0EF9           01095         movlw   0xF9
000D12 6E1D           01096         movwf   d50ms
                      01097 
000D14                01098 loop50ms
000D14 EC?? F???      01099         call    Delay200us
000D18 2E1D           01100         decfsz  d50ms
                      01101 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D1A                01102 Cycles
000D1A EF?? F???      01103         goto    loop50ms
000D1E EC?? F???      01104         call    Delay200us
000D22 0012           01105         return
                      01106 
000D24                01107 WriteEE_RTC
                      01108         WriteEE tens_digit, H_EE, L_EE
000D24 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D28 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D2C C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000D30 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D32 D???               M         bra     $-2
                          M 
000D34 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D36 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D38 84A6               M         bsf     EECON1, WREN        ; enable write
000D3A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D3C 98A1               M         bcf     PIR2, EEIF
                          M 
000D3E 0E55               M         movlw   0x55
000D40 6EA7               M         movwf   EECON2              ; write 55h
000D42 0EAA               M         movlw   0xaa
000D44 6EA7               M         movwf   EECON2              ; write 0xaa
000D46 82A6               M         bsf     EECON1, WR          ; begin write
000D48 B2A6               M         btfsc   EECON1, WR
000D4A D???               M         bra     $-2
                          M 
000D4C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D4E 94A6               M         bcf     EECON1, WREN        ; disable writes
000D50 2A21           01109         incf    L_EE
                      01110         WriteEE ones_digit, H_EE, L_EE
000D52 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D56 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D5A C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000D5E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D60 D???               M         bra     $-2
                          M 
000D62 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D64 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D66 84A6               M         bsf     EECON1, WREN        ; enable write
000D68 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D6A 98A1               M         bcf     PIR2, EEIF
                          M 
000D6C 0E55               M         movlw   0x55
000D6E 6EA7               M         movwf   EECON2              ; write 55h
000D70 0EAA               M         movlw   0xaa
000D72 6EA7               M         movwf   EECON2              ; write 0xaa
000D74 82A6               M         bsf     EECON1, WR          ; begin write
000D76 B2A6               M         btfsc   EECON1, WR
000D78 D???               M         bra     $-2
                          M 
000D7A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D7C 94A6               M         bcf     EECON1, WREN        ; disable writes
000D7E 2A21           01111         incf    L_EE
000D80 0012           01112         return
                      01113 
000D82                01114 ClearEEPROM_21
000D82 6A20           01115         clrf    H_EE
000D84 6A21           01116         clrf    L_EE
000D86 681F           01117         setf    clear_EE
000D88 6A15           01118         clrf    counter
000D8A                01119 ClearNext
                      01120         WriteEE         clear_EE, H_EE, L_EE
000D8A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D8E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D92 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000D96 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D98 D???               M         bra     $-2
                          M 
000D9A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D9C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D9E 84A6               M         bsf     EECON1, WREN        ; enable write
000DA0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DA2 98A1               M         bcf     PIR2, EEIF
                          M 
000DA4 0E55               M         movlw   0x55
000DA6 6EA7               M         movwf   EECON2              ; write 55h
000DA8 0EAA               M         movlw   0xaa
000DAA 6EA7               M         movwf   EECON2              ; write 0xaa
000DAC 82A6               M         bsf     EECON1, WR          ; begin write
000DAE B2A6               M         btfsc   EECON1, WR
000DB0 D???               M         bra     $-2
                          M 
000DB2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DB4 94A6               M         bcf     EECON1, WREN        ; disable writes
000DB6 2A15           01121         incf            counter
000DB8 2A21           01122         incf            L_EE
000DBA 0E15           01123         movlw           d'21'
000DBC 6215           01124         cpfseq          counter
000DBE EF?? F???      01125         goto            ClearNext
000DC2 6A20           01126         clrf            H_EE
000DC4 6A21           01127         clrf            L_EE
000DC6 0012           01128         return
                      01129         
000DC8                01130 READ_KEY
000DC8 A281           01131         btfss   PORTB, 1        ; check for keypad interrupt
000DCA EF?? F???      01132         goto    READ_KEY
000DCE 3881           01133         swapf   PORTB, W
000DD0 0B0F           01134         andlw   0x0F
000DD2 6E10           01135         movwf   KEY
000DD4 B281           01136         btfsc   PORTB, 1
000DD6 EF?? F???      01137         goto    $-2
000DDA 0012           01138         return
                      01139 
000DDC                01140 READ_KEY_TIME
                      01141         ; display the time
                      01142         ; call      DISPLAY_RTC 
                      01143 
000DDC A281           01144         btfss       PORTB, 1    ; keypad interrupt
000DDE EF?? F???      01145         goto        READ_KEY_TIME
000DE2 3881           01146         swapf       PORTB, 0    ; copy PORTB7:4 to W3:0
000DE4 0B0F           01147         andlw       0x0F        ; only want W3:0
000DE6 6E10           01148         movwf       KEY         ; write this value to the KEY
000DE8 B281           01149         btfsc       PORTB, 1    ; wait for release
000DEA EF?? F???      01150         goto        $-2         ; go back one instruction
000DEE 0012           01151         return
                      01152 
000DF0                01153 DisplayExeTime
                      01154         READEE  REG_EE, H_EE, L_EE
000DF0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DF4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DF8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DFA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DFC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DFE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E02 0EFF           01155         movlw   0xFF
000E04 6222           01156         cpfseq  REG_EE
000E06 EF?? F???      01157         goto    NoSkipDispExeTime
                      01158         Display NoData
  0000                    M         local   loop
000E0A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E0C 6EF8               M         movwf   TBLPTRU
000E0E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E10 6EF7               M         movwf   TBLPTRH
000E12 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E14 6EF6               M         movwf   TBLPTRL
000E16 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E18 50F5               M         movf    TABLAT, W
000E1A                    M loop
000E1A EC?? F???          M         call    WR_DATA         ; write to LCD
000E1E 000B               M         tblrd+*                 ; next row in table
000E20 50F5               M         movf    TABLAT, W
000E22 E1??               M         bnz     loop
000E24 0EFF           01159         movlw   0xFF
000E26 6022           01160         cpfslt  REG_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E28 EF?? F???      01161         goto    SkipDispExeTime
000E2C 0012           01162         return
                      01163 
000E2E                01164 NoSkipDispExeTime
                      01165         READEE  WREG, H_EE, L_EE
000E2E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E32 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E36 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E38 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E3A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E3C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E40 EC?? F???      01166         call    WR_DATA
000E44 2A21           01167         incf    L_EE
                      01168         
                      01169         READEE  WREG, H_EE, L_EE
000E46 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E4A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E4E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E50 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E52 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E54 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E58 EC?? F???      01170         call    WR_DATA
000E5C 2A21           01171         incf    L_EE
                      01172         
                      01173         READEE  WREG, H_EE, L_EE
000E5E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E62 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E66 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E68 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E6A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E6C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E70 EC?? F???      01174         call    WR_DATA
000E74 2A21           01175         incf    L_EE
                      01176 
000E76 0E73           01177         movlw   0x73            ; Write 's'
000E78 EC?? F???      01178         call    WR_DATA
000E7C EC?? F???      01179         call    LCD_L2
000E80                01180 SkipDispExeTime
000E80 0012           01181         return
                      01182 
000E82                01183 DispOpSort
                      01184         READEE  REG_EE, H_EE, L_EE
000E82 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E86 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E8A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E8C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E8E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E90 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E94 0EFF           01185         movlw   0xff
000E96 6222           01186         cpfseq  REG_EE
000E98 EF?? F???      01187         goto    NoSkipDispOpSort
                      01188         Display NoData
  0000                    M         local   loop
000E9C 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E9E 6EF8               M         movwf   TBLPTRU
000EA0 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EA2 6EF7               M         movwf   TBLPTRH
000EA4 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EA6 6EF6               M         movwf   TBLPTRL
000EA8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EAA 50F5               M         movf    TABLAT, W
000EAC                    M loop
000EAC EC?? F???          M         call    WR_DATA         ; write to LCD
000EB0 000B               M         tblrd+*                 ; next row in table
000EB2 50F5               M         movf    TABLAT, W
000EB4 E1??               M         bnz     loop
000EB6 0EFF           01189         movlw   0xff
000EB8 6022           01190         cpfslt  REG_EE
000EBA EF?? F???      01191         goto    SkipDispOpSort
                      01192 
000EBE                01193 NoSkipDispOpSort
000EBE 0E61           01194         movlw   "a"
000EC0 EC?? F???      01195         call    WR_DATA
                      01196         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01197         READEE  REG_EE, H_EE, L_EE
000EC4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EC8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000ECC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000ECE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ED0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ED2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000ED6 C022 FFE8      01198         movff   REG_EE, WREG
000EDA EC?? F???      01199         call    WR_DATA
000EDE 2A21           01200         incf    L_EE
                      01201         
000EE0 0E20           01202         movlw   " "
000EE2 EC?? F???      01203         call    WR_DATA
                      01204         
000EE6 0E62           01205         movlw   "b"
000EE8 EC?? F???      01206         call    WR_DATA
                      01207         
                      01208         READEE  REG_EE, H_EE, L_EE
000EEC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EF0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EF4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EF6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EF8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EFA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EFE C022 FFE8      01209         movff   REG_EE, WREG
000F02 EC?? F???      01210         call    WR_DATA
000F06 2A21           01211         incf    L_EE
                      01212         
000F08 0E20           01213         movlw   " "
000F0A EC?? F???      01214         call    WR_DATA
                      01215         
000F0E 0E63           01216         movlw   "c"
000F10 EC?? F???      01217         call    WR_DATA
                      01218         
                      01219         READEE  REG_EE, H_EE, L_EE
000F14 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F18 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F1C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F1E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F20 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F22 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F26 C022 FFE8      01220         movff   REG_EE, WREG
000F2A EC?? F???      01221         call    WR_DATA
000F2E 2A21           01222         incf    L_EE
                      01223         
000F30 0E20           01224         movlw   " "
000F32 EC?? F???      01225         call    WR_DATA
                      01226         
000F36 0E64           01227         movlw   "d"
000F38 EC?? F???      01228         call    WR_DATA
                      01229         
                      01230         READEE  REG_EE, H_EE, L_EE
000F3C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F40 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F44 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F46 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F48 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F4A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F4E C022 FFE8      01231         movff   REG_EE, WREG
000F52 EC?? F???      01232         call    WR_DATA
000F56 2A21           01233         incf    L_EE
                      01234 
000F58                01235 SkipDispOpSort
000F58 0012           01236         return
                      01237         
000F5A                01238 DispOpRTC
                      01239         READEE  REG_EE, H_EE, L_EE
000F5A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F5E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F62 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F64 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F66 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F68 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F6C 0EFF           01240         movlw   0xff
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F6E 6222           01241         cpfseq  REG_EE
000F70 EF?? F???      01242         goto    NoSkipDispOpRTC
                      01243         Display NoData
  0000                    M         local   loop
000F74 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F76 6EF8               M         movwf   TBLPTRU
000F78 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F7A 6EF7               M         movwf   TBLPTRH
000F7C 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F7E 6EF6               M         movwf   TBLPTRL
000F80 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F82 50F5               M         movf    TABLAT, W
000F84                    M loop
000F84 EC?? F???          M         call    WR_DATA         ; write to LCD
000F88 000B               M         tblrd+*                 ; next row in table
000F8A 50F5               M         movf    TABLAT, W
000F8C E1??               M         bnz     loop
000F8E 0EFF           01244         movlw   0xff
000F90 6022           01245         cpfslt  REG_EE
000F92 EF?? F???      01246         goto    SkipDispOpRTC
                      01247 
000F96                01248 NoSkipDispOpRTC
                      01249         READEE  REG_EE, H_EE, L_EE
000F96 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F9A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F9E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FA2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FA4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FA8 C022 FFE8      01250         movff   REG_EE, WREG
000FAC EC?? F???      01251         call    WR_DATA
000FB0 2A21           01252         incf    L_EE
                      01253         
                      01254         READEE  REG_EE, H_EE, L_EE
000FB2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FB6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FBA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FBC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FBE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FC0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FC4 C022 FFE8      01255         movff   REG_EE, WREG
000FC8 EC?? F???      01256         call    WR_DATA
000FCC 2A21           01257         incf    L_EE
                      01258 
000FCE 0E68           01259         movlw   "h"
000FD0 EC?? F???      01260         call    WR_DATA
                      01261         
000FD4 EC?? F???      01262         call    DispOpRTC_Helper
                      01263         
000FD8 0E20           01264         movlw   " "
000FDA EC?? F???      01265         call    WR_DATA
                      01266         
000FDE EC?? F???      01267         call    DispOpRTC_Helper
000FE2 0E2F           01268         movlw   "/"
000FE4 EC?? F???      01269         call    WR_DATA
                      01270 
000FE8 EC?? F???      01271         call    DispOpRTC_Helper
000FEC 0E2F           01272         movlw   "/"
000FEE EC?? F???      01273         call    WR_DATA
000FF2 EC?? F???      01274         call    DispOpRTC_Helper
000FF6                01275 SkipDispOpRTC
000FF6 0012           01276                 return
000FF8                01277 DispOpRTC_Helper
                      01278         READEE          REG_EE, H_EE, L_EE
000FF8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FFC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001000 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001002 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001004 80A6               M         bsf     EECON1, RD          ; read EEPROM
001006 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00100A C022 FFE8      01279         movff           REG_EE, WREG
00100E EC?? F???      01280         call            WR_DATA
001012 2A21           01281         incf            L_EE
                      01282         READEE          REG_EE, H_EE, L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-11-2017  8:46:04         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001014 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001018 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00101C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00101E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001020 80A6               M         bsf     EECON1, RD          ; read EEPROM
001022 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001026 C022 FFE8      01283         movff           REG_EE, WREG
00102A EC?? F???      01284         call            WR_DATA
00102E 2A21           01285         incf            L_EE
001030 0012           01286         return
Warning[205]: Found directive in column 1. (end)
                      01287 end

Errors   :     0
Warnings :    40 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

