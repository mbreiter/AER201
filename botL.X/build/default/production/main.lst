MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000096 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
0000A2 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000AE 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000B6 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000C4 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000CE 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000DE 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000E8 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000F2 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 LOAD_STANDBY_TIME
00001C 0EFF           00271         movlw   0xff
00001E 6ED7           00272         movwf   TMR0H
000020 0EFF           00273         movlw   0xff
000022 6ED6           00274         movwf   TMR0L
                      00275 
000024 0012           00276         return  
                      00277 
000026                00278 LOAD_EXE_TIME
000026 0EC3           00279         movlw   0xc3
000028 6ED7           00280         movwf   TMR0H
00002A 0E25           00281         movlw   0x25
00002C 6ED6           00282         movwf   TMR0L
                      00283         
00002E 0012           00284         return
                      00285         
000030                00286 ISR_HIGH
                      00287         saveContext
000030 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000034 6E14               M     movwf   temp_W                  ; save W
                      00288         
000036 0E00           00289         movlw   0x00
000038 6238           00290         cpfseq  inStandby
00003A EC?? F???      00291         call    Shift
                      00292         
                      00293         ;reset timer, but need to check which time increment 
00003E 0E00           00294         movlw   0x00
000040 6238           00295         cpfseq  inStandby
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000042 EC?? F???      00296         call    LOAD_STANDBY_TIME
                      00297         
000046 0EFF           00298         movlw   0xff
000048 6238           00299         cpfseq  inStandby
00004A EC?? F???      00300         call    LOAD_EXE_TIME
                      00301 
                      00302                 
                      00303         ; displaying the execution time in seconds
                      00304 ;       swapf   OP_sec, 0       ; 100's seconds
                      00305 ;       movwf   temp
                      00306 ;       movlw   0x0f
                      00307 ;       andwf   temp
                      00308 ;       movff   temp, WREG
                      00309 ;       addlw   0x30
                      00310 ;       call    WR_DATA
                      00311 ;
                      00312 ;       movff   OP_sec, temp    ; 10's seconds
                      00313 ;       movlw   0x0f
                      00314 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00315 ;       movff   temp, WREG      ; W = Temp
                      00316 ;       addlw   0x30            ; Convert to ASCII
                      00317 ;       call    WR_DATA
                      00318 ;       
                      00319 ;       swapf   OP_INT, WREG    ;1's seconds
                      00320 ;       movwf   temp
                      00321 ;       movlw   0x0f
                      00322 ;       andwf   temp
                      00323 ;       movff   temp, WREG
                      00324 ;       addlw   0x30
                      00325 ;       call    WR_DATA
                      00326 ;
                      00327 ;       movlw   0x73            ; Write 's'
                      00328 ;       call    WR_DATA
                      00329 ;       call    LCD_L2
                      00330                 
                      00331         ;timer interrupt
00004E A4F2           00332         btfss   INTCON, TMR0IF
000050 EF?? F???      00333         goto    END_ISR_HIGH
                      00334         
                      00335         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000054 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000058 0E0F               M         movlw   0x0f
00005A 1617               M         andwf   temp
00005C 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00005E 6217               M         cpfseq  temp
000060 EF?? F???          M         goto    ones
                          M         
000064 0E10               M         movlw   b'00010000'
000066 2619               M         addwf   OP_INT
000068 0EF0               M         movlw   0xf0
00006A 1619               M         andwf   OP_INT
00006C 0EA0               M         movlw   0xa0
00006E 6019               M         cpfslt  OP_INT
                          M         
000070 6A19               M         clrf    OP_INT
000072 EF?? F???          M         goto    endBCD
                          M         
000076                    M ones
000076 2A19               M         incf    OP_INT
000078 EF?? F???          M         goto    endBCD
00007C                    M endBCD
00007C 0000               M         nop
00007E 0E00           00336         movlw   d'0'
000080 6219           00337         cpfseq  OP_INT
000082 EF?? F???      00338         goto    END_ISR_HIGH
                      00339         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000086 C018 F017          M         movff   OP_sec, temp
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;process ones digit
00008A 0E0F               M         movlw   0x0f
00008C 1617               M         andwf   temp
00008E 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000090 6217               M         cpfseq  temp
000092 EF?? F???          M         goto    ones
                          M         
000096 0E10               M         movlw   b'00010000'
000098 2618               M         addwf   OP_sec
00009A 0EF0               M         movlw   0xf0
00009C 1618               M         andwf   OP_sec
00009E 0EA0               M         movlw   0xa0
0000A0 6018               M         cpfslt  OP_sec
                          M         
0000A2 6A18               M         clrf    OP_sec
0000A4 EF?? F???          M         goto    endBCD
                          M         
0000A8                    M ones
0000A8 2A18               M         incf    OP_sec
0000AA EF?? F???          M         goto    endBCD
0000AE                    M endBCD
0000AE 0000               M         nop
                      00340 
0000B0                00341 END_ISR_HIGH
0000B0 94F2           00342         bcf     INTCON, TMR0IF
                      00343         restoreContext
0000B2 3814               M     swapf   temp_W, 0               ; restore W first
0000B4 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000B8 0010           00344         retfie
                      00345 
0000BA                00346 ISR_LOW
                      00347         saveContext
0000BA CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000BE 6E14               M     movwf   temp_W                  ; save W
                      00348         ; KEYPAD INTERRUPT
0000C0 A0F0           00349         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000C2 EF?? F???      00350         goto    END_ISR_LOW
                      00351 
                      00352         ; check operation status
0000C6 0EFF           00353         movlw   0xff                    ; If in operation, skip return
0000C8 621E           00354         cpfseq  inExecution
0000CA EF?? F???      00355         goto    END_ISR_LOW
                      00356 
                      00357         ; process KEY
0000CE 3881           00358         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D0 0B0F           00359         andlw   0x0f
0000D2 6E12           00360         movwf   KEY_ISR
                      00361         
0000D4 0E0C           00362         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000D6 6212           00363         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000D8 EF?? F???      00364         goto    END_ISR_LOW
                      00365         
                      00366         ; reset program counter - emergency stop recorded. 
0000DC 9ED5           00367         bcf     T0CON, TMR0ON
0000DE EC?? F???      00368         call    SAVE_EXE_TIME
                      00369                 
                      00370         ; Clear inExecution flag to stop '*' interrupts
0000E2 6A1E           00371         clrf    inExecution
0000E4 0E01           00372         movlw   d'1'
0000E6 6E37           00373         movwf   STOP_CONDITION
0000E8 EC?? F???      00374         call    SaveData
                      00375         
0000EC 6AFF           00376         clrf    TOSU
0000EE 6AFE           00377         clrf    TOSH
0000F0 6AFD           00378         clrf    TOSL
0000F2 90F0           00379         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00380         restoreContext
0000F4 3814               M     swapf   temp_W, 0               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000FA 0010           00381         retfie
                      00382 
0000FC                00383 END_ISR_LOW
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000FC 90F0           00384         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00385         restoreContext
0000FE 3814               M     swapf   temp_W, 0               ; restore W first
000100 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000104 0010           00386         retfie
                      00387 
                      00388 ;*******************************************************************************
                      00389 ; main
                      00390 ;*******************************************************************************
000106                00391 INIT
                      00392         ; i/o
000106 0E00           00393         movlw   b'00000000'
000108 6E92           00394         movwf   TRISA
00010A 0EFF           00395         movlw   b'11111111'
00010C 6E93           00396         movwf   TRISB               ; keypad
00010E 0E00           00397         movlw   b'00000000'
000110 6E94           00398         movwf   TRISC
000112 0E00           00399         movlw   b'00000000'
000114 6E95           00400         movwf   TRISD
000116 0E00           00401         movlw   b'00000000'
000118 6E96           00402         movwf   TRISE
                      00403 
                      00404         ; clear ports
00011A 0E00           00405         movlw   b'00000000'
00011C 6E89           00406         movwf   LATA
00011E 0E00           00407         movlw   b'00000000'
000120 6E8A           00408         movwf   LATB
000122 0E00           00409         movlw   b'00000000'
000124 6E8B           00410         movwf   LATC
000126 0E00           00411         movlw   b'00000000'
000128 6E8C           00412         movwf   LATD
00012A 0E00           00413         movlw   b'00000000'
00012C 6E8D           00414         movwf   LATE
                      00415         
00012E 0E00           00416         movlw   b'00000000'
000130 6EC2           00417         movwf   ADCON0
                      00418 ;       movlw   b'11111111'
                      00419 ;       movwf   ADCON1
                      00420         
                      00421         ; initializations
000132 EC?? F???      00422         call    InitLCD
                      00423         ConfigLCD
000136 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000138 EC?? F???          M           call      WR_INS
                          M 
00013C 0E0C               M           movlw     b'00001100'    ; display on/off
00013E EC?? F???          M           call      WR_INS
000142 0E01               M           movlw     b'00000001'    ; Clear ram
000144 EC?? F???          M           call      WR_INS
                      00424         
000148 EC?? F???      00425         call    i2c_common_setup
                      00426         
00014C EC?? F???      00427         call    RTC_INIT
                      00428         ;COLOUR_INIT
000150 EC?? F???      00429         call    INIT_USART
                      00430 
                      00431         ; interrupts
000154 6AD0           00432         clrf    RCON
000156 6AF2           00433         clrf    INTCON
000158 6AF1           00434         clrf    INTCON2
00015A 6AF0           00435         clrf    INTCON3
00015C 8ED0           00436         bsf     RCON, IPEN          ; priority mode
00015E 8EF2           00437         bsf     INTCON, GIEH        ; permit global interrupts
000160 8CF2           00438         bsf     INTCON, GIEL
000162 8AF1           00439         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000164 8AF2           00440         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000166 84F2           00441         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000168 84F1           00442         bsf     INTCON2, TMR0IP     ; set to high priority
00016A 86F0           00443         bsf     INTCON3, INT1IE
00016C 9CF0           00444         bcf     INTCON3, INT1IP
                      00445         
                      00446         ; setting up timer to sychronize with 1 second clock intervals
00016E 9ED5           00447         bcf     T0CON, TMR0ON
000170 9CD5           00448         bcf     T0CON, T08BIT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000172 9AD5           00449         bcf     T0CON, T0CS
000174 98D5           00450         bcf     T0CON, T0SE
000176 96D5           00451         bcf     T0CON, PSA
000178 94D5           00452         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
00017A 82D5           00453         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
00017C 80D5           00454         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00455 
00017E 6A20           00456         clrf    H_EE
000180 6A21           00457         clrf    L_EE
000182 6A??           00458         clrf    tens_digit
000184 6A??           00459         clrf    ones_digit
                      00460         
000186 6A2C           00461         clrf    DETECTION_VAL
000188 6A2D           00462         clrf    ESKA
00018A 6A2E           00463         clrf    ESKA_NOCAP
00018C 6A2F           00464         clrf    YOP
00018E 6A30           00465         clrf    YOP_NOCAP
000190 6A31           00466         clrf    TOTAL_BOTTLES
000192 6A32           00467         clrf    COLLECTIONS_COUNT
                      00468         
000194 0EF2           00469         movlw     b'11110010'    ; Set required keypad inputs
000196 6E93           00470         movwf     TRISB
                      00471         
000198 EC?? F???      00472         call    ClrLCD
                      00473         Display Welcome
  0000                    M         local   loop
00019C 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00019E 6EF8               M         movwf   TBLPTRU
0001A0 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001A2 6EF7               M         movwf   TBLPTRH
0001A4 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001A6 6EF6               M         movwf   TBLPTRL
0001A8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001AA 50F5               M         movf    TABLAT, W
0001AC                    M loop
0001AC EC?? F???          M         call    WR_DATA         ; write to LCD
0001B0 000B               M         tblrd+*                 ; next row in table
0001B2 50F5               M         movf    TABLAT, W
0001B4 E1??               M         bnz     loop
0001B6 EC?? F???      00474         call LCD_L2
                      00475         Display Team
  0000                    M         local   loop
0001BA 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001BC 6EF8               M         movwf   TBLPTRU
0001BE 0E??               M         movlw   high Team       ; Move Table<15:8>
0001C0 6EF7               M         movwf   TBLPTRH
0001C2 0E??               M         movlw   low Team        ; Move Table<7:0>
0001C4 6EF6               M         movwf   TBLPTRL
0001C6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001C8 50F5               M         movf    TABLAT, W
0001CA                    M loop
0001CA EC?? F???          M         call    WR_DATA         ; write to LCD
0001CE 000B               M         tblrd+*                 ; next row in table
0001D0 50F5               M         movf    TABLAT, W
0001D2 E1??               M         bnz     loop
                      00476         
                      00477         Delay50N delayR, 0x28
  0000                    M         local   loop
0001D4 0E28               M         movlw   0x28
0001D6 6E1A               M         movwf   delayR
                          M 
0001D8                    M loop
0001D8 EC?? F???          M         call    Delay50ms
0001DC 2E1A               M         decfsz  delayR
0001DE EF?? F???          M         goto    loop
                      00478 
                      00479 ;*******************************************************************************
                      00480 ; standby mode
                      00481 ;*******************************************************************************
0001E2                00482 STANDBY
0001E2 0E00           00483         movlw   b'00000000'
0001E4 6E84           00484         movwf   PORTE
0001E6 0E00           00485         movlw   b'00000000'
0001E8 6E80           00486         movwf   PORTA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00487         
0001EA 6838           00488         setf    inStandby       
0001EC EC?? F???      00489         call    ClrLCD
                      00490         Display StandBy
  0000                    M         local   loop
0001F0 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F2 6EF8               M         movwf   TBLPTRU
0001F4 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001F6 6EF7               M         movwf   TBLPTRH
0001F8 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FA 6EF6               M         movwf   TBLPTRL
0001FC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001FE 50F5               M         movf    TABLAT, W
000200                    M loop
000200 EC?? F???          M         call    WR_DATA         ; write to LCD
000204 000B               M         tblrd+*                 ; next row in table
000206 50F5               M         movf    TABLAT, W
000208 E1??               M         bnz     loop
00020A EC?? F???      00491         call    LCD_L2
                      00492         Display StandbyInfo
  0000                    M         local   loop
00020E 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
000210 6EF8               M         movwf   TBLPTRU
000212 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000214 6EF7               M         movwf   TBLPTRH
000216 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
000218 6EF6               M         movwf   TBLPTRL
00021A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00021C 50F5               M         movf    TABLAT, W
00021E                    M loop
00021E EC?? F???          M         call    WR_DATA         ; write to LCD
000222 000B               M         tblrd+*                 ; next row in table
000224 50F5               M         movf    TABLAT, W
000226 E1??               M         bnz     loop
                      00493         
000228 0EFF           00494         movlw   0xff
00022A 6ED7           00495         movwf   TMR0H
00022C 0EFF           00496         movlw   0xff
00022E 6ED6           00497         movwf   TMR0L
000230 8ED5           00498         bsf     T0CON, TMR0ON       ; turning on timer
                      00499 
                      00500 
000232                00501 HOLD_STANDBY
000232 EC?? F???      00502         call    READ_KEY_TIME
                      00503 
                      00504         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000236 0E00               M         movlw   key1                ; poll for mode
000238 6210               M         cpfseq  KEY                 ; check this against key press
00023A EF?? F???          M         goto    Exit
                          M 
00023E                    M Next
00023E 6A89               M         clrf    LATA                ; clear pins before proceeding
000240 6A8A               M         clrf    LATB
000242 6A8B               M         clrf    LATC
000244 6A8C               M         clrf    LATD
000246 EF?? F???          M         goto    COLOUR_TEST
                          M 
00024A                    M Exit
00024A 0000               M         nop
                      00505         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
00024C 0E01               M         movlw   key2                ; poll for mode
00024E 6210               M         cpfseq  KEY                 ; check this against key press
000250 EF?? F???          M         goto    Exit
                          M 
000254                    M Next
000254 6A89               M         clrf    LATA                ; clear pins before proceeding
000256 6A8A               M         clrf    LATB
000258 6A8B               M         clrf    LATC
00025A 6A8C               M         clrf    LATD
00025C EF?? F???          M         goto    STEP_TEST
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000260                    M Exit
000260 0000               M         nop
                      00506         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
                          M 
000262 0E02               M         movlw   key3                ; poll for mode
000264 6210               M         cpfseq  KEY                 ; check this against key press
000266 EF?? F???          M         goto    Exit
                          M 
00026A                    M Next
00026A 6A89               M         clrf    LATA                ; clear pins before proceeding
00026C 6A8A               M         clrf    LATB
00026E 6A8B               M         clrf    LATC
000270 6A8C               M         clrf    LATD
000272 EF?? F???          M         goto    DC_TEST_CW
                          M 
000276                    M Exit
000276 0000               M         nop
                      00507         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
000278 0E04               M         movlw   key4                ; poll for mode
00027A 6210               M         cpfseq  KEY                 ; check this against key press
00027C EF?? F???          M         goto    Exit
                          M 
000280                    M Next
000280 6A89               M         clrf    LATA                ; clear pins before proceeding
000282 6A8A               M         clrf    LATB
000284 6A8B               M         clrf    LATC
000286 6A8C               M         clrf    LATD
000288 EF?? F???          M         goto    DC_TEST_CCW
                          M 
00028C                    M Exit
00028C 0000               M         nop
                      00508         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
00028E 0E03               M         movlw   keyA                ; poll for mode
000290 6210               M         cpfseq  KEY                 ; check this against key press
000292 EF?? F???          M         goto    Exit
                          M 
000296                    M Next
000296 6A89               M         clrf    LATA                ; clear pins before proceeding
000298 6A8A               M         clrf    LATB
00029A 6A8B               M         clrf    LATC
00029C 6A8C               M         clrf    LATD
00029E EF?? F???          M         goto    EXECUTION
                          M 
0002A2                    M Exit
0002A2 0000               M         nop
                      00509         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002A4 0E07               M         movlw   keyB                ; poll for mode
0002A6 6210               M         cpfseq  KEY                 ; check this against key press
0002A8 EF?? F???          M         goto    Exit
                          M 
0002AC                    M Next
0002AC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002AE 6A8A               M         clrf    LATB
0002B0 6A8B               M         clrf    LATC
0002B2 6A8C               M         clrf    LATD
0002B4 EF?? F???          M         goto    LOG
                          M 
0002B8                    M Exit
0002B8 0000               M         nop
                      00510         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002BA 0E0B               M         movlw   keyC                ; poll for mode
0002BC 6210               M         cpfseq  KEY                 ; check this against key press
0002BE EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002C2                    M Next
0002C2 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C4 6A8A               M         clrf    LATB
0002C6 6A8B               M         clrf    LATC
0002C8 6A8C               M         clrf    LATD
0002CA EF?? F???          M         goto    PERM_LOG
                          M 
0002CE                    M Exit
0002CE 0000               M         nop
                      00511         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002D0 0E0F               M         movlw   keyD                ; poll for mode
0002D2 6210               M         cpfseq  KEY                 ; check this against key press
0002D4 EF?? F???          M         goto    Exit
                          M 
0002D8                    M Next
0002D8 6A89               M         clrf    LATA                ; clear pins before proceeding
0002DA 6A8A               M         clrf    LATB
0002DC 6A8B               M         clrf    LATC
0002DE 6A8C               M         clrf    LATD
0002E0 EF?? F???          M         goto    PC_MODE
                          M 
0002E4                    M Exit
0002E4 0000               M         nop
0002E6 D???           00512         bra     HOLD_STANDBY
                      00513         
                      00514 ;*******************************************************************************
                      00515 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00516 ;*******************************************************************************
                      00517 
0002E8                00518 DC_TEST_CW
0002E8 6A38           00519         clrf    inStandby
0002EA 0E00           00520         movlw   b'00000000'
0002EC 6E84           00521         movwf   PORTE
                      00522         Delay50N    delayR, 0x0a   
  0000                    M         local   loop
0002EE 0E0A               M         movlw   0x0a
0002F0 6E1A               M         movwf   delayR
                          M 
0002F2                    M loop
0002F2 EC?? F???          M         call    Delay50ms
0002F6 2E1A               M         decfsz  delayR
0002F8 EF?? F???          M         goto    loop
0002FC                00523 DC_TEST_CW_HOLD
0002FC 0E01           00524         movlw   b'00000001'
0002FE 6E84           00525         movwf   PORTE
                      00526 
000300 EC?? F???      00527         call    READ_KEY
                      00528         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000304 0E0D               M         movlw   key0                ; poll for mode
000306 6210               M         cpfseq  KEY                 ; check this against key press
000308 EF?? F???          M         goto    Exit
                          M 
00030C                    M Next
00030C 6A89               M         clrf    LATA                ; clear pins before proceeding
00030E 6A8A               M         clrf    LATB
000310 6A8B               M         clrf    LATC
000312 6A8C               M         clrf    LATD
000314 EF?? F???          M         goto    STANDBY
                          M 
000318                    M Exit
000318 0000               M         nop
00031A D???           00529         bra     DC_TEST_CW_HOLD
                      00530         
00031C                00531 DC_TEST_CCW
00031C 6A38           00532         clrf    inStandby
00031E 0E00           00533         movlw   b'00000000'
000320 6E84           00534         movwf   PORTE
                      00535         Delay50N    delayR, 0x0a
  0000                    M         local   loop
000322 0E0A               M         movlw   0x0a
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000324 6E1A               M         movwf   delayR
                          M 
000326                    M loop
000326 EC?? F???          M         call    Delay50ms
00032A 2E1A               M         decfsz  delayR
00032C EF?? F???          M         goto    loop
000330                00536 DC_TEST_CCW_HOLD
000330 0E02           00537         movlw   b'00000010'
000332 6E84           00538         movwf   PORTE
                      00539         
000334 EC?? F???      00540         call    READ_KEY
                      00541         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000338 0E0D               M         movlw   key0                ; poll for mode
00033A 6210               M         cpfseq  KEY                 ; check this against key press
00033C EF?? F???          M         goto    Exit
                          M 
000340                    M Next
000340 6A89               M         clrf    LATA                ; clear pins before proceeding
000342 6A8A               M         clrf    LATB
000344 6A8B               M         clrf    LATC
000346 6A8C               M         clrf    LATD
000348 EF?? F???          M         goto    STANDBY
                          M 
00034C                    M Exit
00034C 0000               M         nop
00034E D???           00542         bra     DC_TEST_CCW_HOLD
                      00543                 
000350                00544 STEP_TEST
000350 6A38           00545         clrf    inStandby
000352 6A32           00546         clrf    COLLECTIONS_COUNT
                      00547         Delay50N    delayR, 0x14
  0000                    M         local   loop
000354 0E14               M         movlw   0x14
000356 6E1A               M         movwf   delayR
                          M 
000358                    M loop
000358 EC?? F???          M         call    Delay50ms
00035C 2E1A               M         decfsz  delayR
00035E EF?? F???          M         goto    loop
                      00548     
000362                00549 ROTATE_90_TEST
000362 0E23           00550         movlw   b'00100011'
000364 6E80           00551         movwf   PORTA
000366 EC?? F???      00552         call    delay5ms
                      00553         
00036A 0E26           00554         movlw   b'00100110'
00036C 6E80           00555         movwf   PORTA
00036E EC?? F???      00556         call    delay5ms
                      00557         
000372 0E2C           00558         movlw   b'00101100'
000374 6E80           00559         movwf   PORTA
000376 EC?? F???      00560         call    delay5ms
                      00561 
00037A 0E29           00562         movlw   b'00101001'
00037C 6E80           00563         movwf   PORTA
00037E EC?? F???      00564         call    delay5ms
                      00565         
000382 2A32           00566         incf    COLLECTIONS_COUNT
000384 0E78           00567         movlw   d'120'
000386 6232           00568         cpfseq  COLLECTIONS_COUNT
000388 D???           00569         bra     ROTATE_90_TEST
                      00570         
00038A D???           00571         bra STEP_TEST
                      00572 
00038C                00573 COLOUR_TEST
00038C 6A38           00574         clrf    inStandby
                      00575 
00038E                00576 LOOPING
                      00577         Delay50N delayR, 0x28
  0000                    M         local   loop
00038E 0E28               M         movlw   0x28
000390 6E1A               M         movwf   delayR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000392                    M loop
000392 EC?? F???          M         call    Delay50ms
000396 2E1A               M         decfsz  delayR
000398 EF?? F???          M         goto    loop
00039C EC?? F???      00578         call    ClrLCD
0003A0 EC?? F???      00579         call    READ_ARDUINO
0003A4 0F30           00580         addlw   0x30
0003A6 EC?? F???      00581         call    WR_DATA
0003AA D???           00582         bra LOOPING
                      00583 
                      00584 ;*******************************************************************************
                      00585 ; execution mode
                      00586 ;*******************************************************************************
                      00587         
0003AC                00588 EXECUTION
0003AC 9ED5           00589         bcf         T0CON, TMR0ON           ; turning on timer
0003AE 6A38           00590         clrf    inStandby       
0003B0 EC?? F???      00591         call        ClearEEPROM_21
                      00592         
                      00593         ; save the starting time
0003B4 EC?? F???      00594         call        SAVE_TIME
                      00595                 
                      00596         ; display
0003B8 681E           00597         setf        inExecution
0003BA EC?? F???      00598         call        ClrLCD
                      00599         Display     Exe1
  0000                    M         local   loop
0003BE 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003C0 6EF8               M         movwf   TBLPTRU
0003C2 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003C4 6EF7               M         movwf   TBLPTRH
0003C6 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003C8 6EF6               M         movwf   TBLPTRL
0003CA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003CC 50F5               M         movf    TABLAT, W
0003CE                    M loop
0003CE EC?? F???          M         call    WR_DATA         ; write to LCD
0003D2 000B               M         tblrd+*                 ; next row in table
0003D4 50F5               M         movf    TABLAT, W
0003D6 E1??               M         bnz     loop
0003D8 EC?? F???      00600         call        LCD_L2
                      00601         
0003DC 0EC3           00602         movlw   0xc3
0003DE 6ED7           00603         movwf   TMR0H
0003E0 0E25           00604         movlw   0x25
0003E2 6ED6           00605         movwf   TMR0L
                      00606         
0003E4 8ED5           00607         bsf         T0CON, TMR0ON           ; turning on timer
                      00608         
                      00609         ; initialize variables
0003E6 6A18           00610         clrf        OP_sec
0003E8 6A19           00611         clrf        OP_INT
                      00612         
0003EA 6A2D           00613         clrf        ESKA
0003EC 6A2E           00614         clrf        ESKA_NOCAP
0003EE 6A2F           00615         clrf        YOP
0003F0 6A30           00616         clrf        YOP_NOCAP
0003F2 6A31           00617         clrf        TOTAL_BOTTLES
0003F4 0E01           00618         movlw       d'1'
0003F6 6E35           00619         movwf       TRAY_CURRENT
0003F8 6A34           00620         clrf        TRAY_DELAY
                      00621         
                      00622         ; todo: make sure tray is in position one on reset, add some delay
                      00623         
0003FA EF?? F???      00624         goto        COLLECTIONS_STEP
                      00625 
0003FE                00626 COLLECTIONS_STEP
0003FE 6A32           00627         clrf        COLLECTIONS_COUNT
                      00628 
000400                00629 ROTATE_90
000400 0E23           00630         movlw   b'00100011'
000402 6E80           00631         movwf   PORTA
000404 EC?? F???      00632         call    delay5ms
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00633 
000408 0E26           00634         movlw   b'00100110'
00040A 6E80           00635         movwf   PORTA
00040C EC?? F???      00636         call    delay5ms
                      00637         
000410 0E2C           00638         movlw   b'00101100'
000412 6E80           00639         movwf   PORTA
000414 EC?? F???      00640         call    delay5ms
                      00641 
000418 0E29           00642         movlw   b'00101001'
00041A 6E80           00643         movwf   PORTA
00041C EC?? F???      00644         call    delay5ms
                      00645         
000420 2A32           00646         incf    COLLECTIONS_COUNT
000422 0E78           00647         movlw   d'120'
000424 6232           00648         cpfseq  COLLECTIONS_COUNT
000426 D???           00649         bra     ROTATE_90
                      00650         
000428 D???           00651         bra DETECTIONS
                      00652         
00042A                00653 DETECTIONS
                      00654 
                      00655 ;       movlw   d'1000'
                      00656 ;       movwf   TRAY_DELAY
                      00657         
                      00658         ; reading data from arduino 
                      00659         ; expect:   1 for eska cap
                      00660         ;           2 for eska no cap
                      00661         ;           3 for yop cap
                      00662         ;           4 for yop no cap
                      00663         ;           5 for no bottle, get outta here
00042A EC?? F???      00664         call    READ_ARDUINO
                      00665         ;movlw  d'2'                    ; testing!!!
00042E 6E2C           00666         movwf   DETECTION_VAL
                      00667         
                      00668         ; first check if there was a bottle detected, if go to COLLECTIONS_STEP
000430 0E05           00669         movlw   d'5'
000432 5C2C           00670         subwf   DETECTION_VAL, 0
000434 E0??           00671         bz      INC_YOPNOCAP
                      00672         
                      00673         ; okay we have a bottle, first increment total count then see what it is
000436 2A31           00674         incf    TOTAL_BOTTLES
                      00675         
                      00676         ; yop no cap
000438 0E04           00677         movlw   d'4'
00043A 5C2C           00678         subwf   DETECTION_VAL, 0
00043C E0??           00679         bz      INC_YOPNOCAP
                      00680         
                      00681         ; yop with cap
00043E 0E03           00682         movlw   d'3'
000440 5C2C           00683         subwf   DETECTION_VAL, 0
000442 E0??           00684         bz      INC_YOPCAP
                      00685         
                      00686         ; eska no cap
000444 0E02           00687         movlw   d'2'
000446 5C2C           00688         subwf   DETECTION_VAL, 0
000448 E0??           00689         bz      INC_ESKANOCAP
                      00690         
                      00691         ; eksa with cap
00044A 0E01           00692         movlw   d'1'
00044C 5C2C           00693         subwf   DETECTION_VAL, 0
00044E E0??           00694         bz      INC_ESKACAP
                      00695         
000450 D???           00696         bra     DETECTIONS
                      00697         
000452                00698 INC_YOPNOCAP
000452 2A30           00699         incf    YOP_NOCAP
                      00700 
                      00701         ; determine what position to rotate the tray to: brute force, but w/e
000454 0E04           00702         movlw   d'4'
000456 6E36           00703         movwf   TRAY_GOTO               ; new position will be 4
000458 5C35           00704         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00045A E0??           00705         bz      TRAY_STEP_END
                      00706         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00045C 0E03           00707         movlw   d'3'
00045E 5C35           00708         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
000460 E0??           00709         bz      TRAY_STEP_CW            
                      00710         
000462 0E02           00711         movlw   d'2'
000464 5C35           00712         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
000466 E0??           00713         bz      TRAY_STEP_CW
                      00714         
000468 0E01           00715         movlw   d'1'
00046A 5C35           00716         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
00046C E0??           00717         bz      TRAY_STEP_CW
                      00718         
00046E                00719 INC_YOPCAP
00046E 2A2F           00720         incf    YOP
                      00721         
                      00722         ; determine what position to rotate the tray to: brute force, but w/e
000470 0E03           00723         movlw   d'3'
000472 6E36           00724         movwf   TRAY_GOTO
000474 5C35           00725         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000476 E0??           00726         bz      TRAY_STEP_END
                      00727         
000478 0E04           00728         movlw   d'4'
00047A 5C35           00729         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
00047C E0??           00730         bz      TRAY_STEP_CCW   
                      00731         
00047E 0E02           00732         movlw   d'2'
000480 5C35           00733         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
000482 E0??           00734         bz      TRAY_STEP_CW
                      00735         
000484 0E01           00736         movlw   d'1'
000486 5C35           00737         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
000488 E0??           00738         bz      TRAY_STEP_CW
                      00739         
00048A                00740 INC_ESKANOCAP
00048A 2A2E           00741         incf    ESKA_NOCAP
00048C EF?? F???      00742         goto    CHECK_DONE
                      00743         
                      00744         ; determine what position to rotate the tray to: brute force, but w/e
000490 0E02           00745         movlw   d'2'
000492 6E36           00746         movwf   TRAY_GOTO
000494 5C35           00747         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000496 E0??           00748         bz      TRAY_STEP_END
                      00749         
000498 0E04           00750         movlw   d'4'
00049A 5C35           00751         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
00049C E0??           00752         bz      TRAY_STEP_CCW   
                      00753         
00049E 0E03           00754         movlw   d'3'
0004A0 5C35           00755         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
0004A2 E0??           00756         bz      TRAY_STEP_CCW
                      00757         
0004A4 0E01           00758         movlw   d'1'
0004A6 5C35           00759         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
0004A8 E0??           00760         bz      TRAY_STEP_CW
                      00761         
0004AA                00762 INC_ESKACAP
0004AA 2A2D           00763         incf    ESKA
                      00764         
                      00765         ; determine what position to rotate the tray to: brute force, but w/e
0004AC 0E01           00766         movlw   d'1'
0004AE 6E36           00767         movwf   TRAY_GOTO
0004B0 5C35           00768         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004B2 E0??           00769         bz      TRAY_STEP_END
                      00770         
0004B4 0E04           00771         movlw   d'4'
0004B6 5C35           00772         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
0004B8 E0??           00773         bz      TRAY_STEP_CCW   
                      00774         
0004BA 0E03           00775         movlw   d'3'
0004BC 5C35           00776         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
0004BE E0??           00777         bz      TRAY_STEP_CCW
                      00778         
0004C0 0E02           00779         movlw   d'2'
0004C2 5C35           00780         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004C4 E0??           00781         bz      TRAY_STEP_CCW
                      00782 
0004C6                00783 TRAY_STEP_CW
0004C6 6A33           00784         clrf    TRAY_COUNT
0004C8 0E00           00785         movlw   b'00000000'
0004CA 6E84           00786         movwf   PORTE
                      00787 
0004CC                00788 TRAY_CW_HOLD
0004CC 0E01           00789         movlw   b'00000001'
0004CE 6E84           00790         movwf   PORTE
                      00791 
0004D0 2A33           00792         incf    TRAY_COUNT
0004D2 C033 FFE8      00793         movff   TRAY_COUNT, WREG
0004D6 6234           00794         cpfseq  TRAY_DELAY
0004D8 EF?? F???      00795         goto    TRAY_CW_HOLD
                      00796         
0004DC D???           00797         bra     TRAY_STEP_END
                      00798         
0004DE                00799 TRAY_STEP_CCW
0004DE 6A33           00800         clrf    TRAY_COUNT
0004E0 0E00           00801         movlw   b'00000000'
0004E2 6E84           00802         movwf   PORTE
                      00803 
0004E4                00804 TRAY_CCW_HOLD
0004E4 0E02           00805         movlw   b'00000010'
0004E6 6E84           00806         movwf   PORTE
                      00807 
0004E8 2A33           00808         incf    TRAY_COUNT
0004EA C033 FFE8      00809         movff   TRAY_COUNT, WREG
0004EE 6234           00810         cpfseq  TRAY_DELAY
0004F0 D???           00811         bra     TRAY_CCW_HOLD
                      00812         
0004F2 D???           00813         bra     TRAY_STEP_END
                      00814         
0004F4                00815 TRAY_STEP_END
0004F4 C036 F035      00816         movff   TRAY_GOTO, TRAY_CURRENT
0004F8 0E00           00817         movlw   b'00000000'
0004FA 6E84           00818         movwf   PORTE
                      00819         
0004FC                00820 CHECK_DONE
                      00821         
                      00822         ; Challenging:  logic to figure out when the machine is done sorting 
                      00823         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00824         
                      00825         ; NUMBER: 
                      00826         ; if the total bottle count is 10, then we are done (most basic end condition)
0004FC 6A37           00827         clrf        STOP_CONDITION      ; denote regular stop, saved in eeprom as 0
0004FE 0E09           00828         movlw   d'9'
000500 5C31           00829         subwf   TOTAL_BOTTLES, 0
000502 E0??           00830         bz      EXIT_EXE
                      00831         
                      00832         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00833         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00834         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00835         ; 150s then stop.
000504 3818           00836         swapf   OP_sec, 0       ; 100's seconds
000506 6E17           00837         movwf   temp
000508 0E0F           00838         movlw   0x0f
00050A 1617           00839         andwf   temp
00050C 0E00           00840         movlw   d'0'
00050E 6417           00841         cpfsgt  temp
000510 EF?? F???      00842         goto    COLLECTIONS_STEP; if 100 second, continue to check for 150s then 120s.
                      00843 
                      00844         ; MAX
000514 0E02           00845         movlw   d'2'
000516 6E37           00846         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
000518 C018 F017      00847         movff   OP_sec, temp    ; 10's seconds
00051C 0E0F           00848         movlw   0x0f
00051E 1617           00849         andwf   temp
000520 0E05           00850         movlw   d'5'
000522 5C17           00851         subwf   temp, 0
000524 E0??           00852         bz      EXIT_EXE        ; if 150 second, terminate
                      00853         
                      00854         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00855         ; qualified run has at least 4 bottles, with 1 of each different kind
000526 0E03           00856         movlw   d'3'
000528 6431           00857         cpfsgt  TOTAL_BOTTLES
00052A EF?? F???      00858         goto    COLLECTIONS_STEP
                      00859 
00052E 0E00           00860         movlw   d'0'
000530 6430           00861         cpfsgt  YOP_NOCAP, 0
000532 EF?? F???      00862         goto    COLLECTIONS_STEP
                      00863         
000536 0E00           00864         movlw   d'0'
000538 642F           00865         cpfsgt  YOP, 0
00053A EF?? F???      00866         goto    COLLECTIONS_STEP
                      00867         
00053E 0E00           00868         movlw   d'0'
000540 642E           00869         cpfsgt  ESKA_NOCAP, 0
000542 EF?? F???      00870         goto    COLLECTIONS_STEP
                      00871         
000546 0E00           00872         movlw   d'0'
000548 642D           00873         cpfsgt  ESKA, 0
00054A EF?? F???      00874         goto    COLLECTIONS_STEP
                      00875         
                      00876         ; finally, if we get here then consider the termination optimized.
00054E 0E03           00877         movlw   d'3'
000550 6E37           00878         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
000552 EF?? F???      00879         goto    EXIT_EXE
                      00880         
000556                00881 EXIT_EXE
                      00882         ; stop timer and save the execution time to eeprom
000556 9ED5           00883         bcf         T0CON, TMR0ON
000558 EC?? F???      00884         call        SAVE_EXE_TIME
                      00885                 
                      00886         ; Clear inExecution flag to stop '*' interrupts
00055C 6A1E           00887         clrf        inExecution
                      00888         
00055E EC?? F???      00889         call        ClrLCD
                      00890         Display     SAVE
  0000                    M         local   loop
000562 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000564 6EF8               M         movwf   TBLPTRU
000566 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000568 6EF7               M         movwf   TBLPTRH
00056A 0E??               M         movlw   low SAVE        ; Move Table<7:0>
00056C 6EF6               M         movwf   TBLPTRL
00056E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000570 50F5               M         movf    TABLAT, W
000572                    M loop
000572 EC?? F???          M         call    WR_DATA         ; write to LCD
000576 000B               M         tblrd+*                 ; next row in table
000578 50F5               M         movf    TABLAT, W
00057A E1??               M         bnz     loop
00057C EC?? F???      00891         call        SaveData
000580 EF?? F???      00892         goto        LOG
                      00893 
                      00894 ;*******************************************************************************
                      00895 ; sorting statistics log mode
                      00896 ;*******************************************************************************
                      00897         
000584                00898 LOG
000584 6A38           00899         clrf    inStandby
000586 EC?? F???      00900         call    ClrLCD
                      00901         Display Log1
  0000                    M         local   loop
00058A 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00058C 6EF8               M         movwf   TBLPTRU
00058E 0E??               M         movlw   high Log1       ; Move Table<15:8>
000590 6EF7               M         movwf   TBLPTRH
000592 0E??               M         movlw   low Log1        ; Move Table<7:0>
000594 6EF6               M         movwf   TBLPTRL
000596 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000598 50F5               M         movf    TABLAT, W
00059A                    M loop
00059A EC?? F???          M         call    WR_DATA         ; write to LCD
00059E 000B               M         tblrd+*                 ; next row in table
0005A0 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005A2 E1??               M         bnz     loop
                      00902 
                      00903         ; display most recent run data
0005A4 0E0A           00904         movlw   d'10'
0005A6 6E21           00905         movwf   L_EE
0005A8 EC?? F???      00906         call    DisplayExeTime
                      00907 
0005AC EC?? F???      00908         call    LCD_L2
0005B0 0E0D           00909         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
0005B2 6E21           00910         movwf   L_EE
0005B4 EC?? F???      00911         call    DispOpSort
                      00912 
0005B8                00913 HOLD_LOG
0005B8 EC?? F???      00914         call    READ_KEY
                      00915         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0005BC 0E07               M         movlw   keyB                ; poll for mode
0005BE 6210               M         cpfseq  KEY                 ; check this against key press
0005C0 EF?? F???          M         goto    Exit
                          M 
0005C4                    M Next
0005C4 6A89               M         clrf    LATA                ; clear pins before proceeding
0005C6 6A8A               M         clrf    LATB
0005C8 6A8B               M         clrf    LATC
0005CA 6A8C               M         clrf    LATD
0005CC EF?? F???          M         goto    LOG_INFO
                          M 
0005D0                    M Exit
0005D0 0000               M         nop
                      00916         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005D2 0E0D               M         movlw   key0                ; poll for mode
0005D4 6210               M         cpfseq  KEY                 ; check this against key press
0005D6 EF?? F???          M         goto    Exit
                          M 
0005DA                    M Next
0005DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0005DC 6A8A               M         clrf    LATB
0005DE 6A8B               M         clrf    LATC
0005E0 6A8C               M         clrf    LATD
0005E2 EF?? F???          M         goto    STANDBY
                          M 
0005E6                    M Exit
0005E6 0000               M         nop
0005E8 D???           00917         bra     HOLD_LOG
                      00918 
0005EA                00919 LOG_INFO
0005EA EC?? F???      00920         call    ClrLCD
0005EE 6A21           00921         clrf    L_EE
0005F0 EC?? F???      00922         call    DispOpRTC
                      00923         
0005F4 EC?? F???      00924         call    LCD_L2
                      00925         Display LogInfo2
  0000                    M         local   loop
0005F8 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0005FA 6EF8               M         movwf   TBLPTRU
0005FC 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0005FE 6EF7               M         movwf   TBLPTRH
000600 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000602 6EF6               M         movwf   TBLPTRL
000604 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000606 50F5               M         movf    TABLAT, W
000608                    M loop
000608 EC?? F???          M         call    WR_DATA         ; write to LCD
00060C 000B               M         tblrd+*                 ; next row in table
00060E 50F5               M         movf    TABLAT, W
000610 E1??               M         bnz     loop
000612 6A20           00926         clrf    H_EE
000614 6A21           00927         clrf    L_EE
000616                00928 HOLD_LOG_INFO
000616 EC?? F???      00929         call    READ_KEY
                      00930         ChangeMode key0, LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
00061A 0E0D               M         movlw   key0                ; poll for mode
00061C 6210               M         cpfseq  KEY                 ; check this against key press
00061E EF?? F???          M         goto    Exit
                          M 
000622                    M Next
000622 6A89               M         clrf    LATA                ; clear pins before proceeding
000624 6A8A               M         clrf    LATB
000626 6A8B               M         clrf    LATC
000628 6A8C               M         clrf    LATD
00062A EF?? F???          M         goto    LOG
                          M 
00062E                    M Exit
00062E 0000               M         nop
000630 D???           00931         bra     HOLD_LOG
                      00932         
                      00933 ;*******************************************************************************
                      00934 ; permanent logs
                      00935 ;*******************************************************************************
                      00936 
000632                00937 PERM_LOG
000632 6A38           00938         clrf    inStandby
000634 EC?? F???      00939         call    ClrLCD
                      00940         Display PermLog1
  0000                    M         local   loop
000638 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00063A 6EF8               M         movwf   TBLPTRU
00063C 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00063E 6EF7               M         movwf   TBLPTRH
000640 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000642 6EF6               M         movwf   TBLPTRL
000644 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000646 50F5               M         movf    TABLAT, W
000648                    M loop
000648 EC?? F???          M         call    WR_DATA         ; write to LCD
00064C 000B               M         tblrd+*                 ; next row in table
00064E 50F5               M         movf    TABLAT, W
000650 E1??               M         bnz     loop
000652 EC?? F???      00941         call    LCD_L2
                      00942         Display PermLog2
  0000                    M         local   loop
000656 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000658 6EF8               M         movwf   TBLPTRU
00065A 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
00065C 6EF7               M         movwf   TBLPTRH
00065E 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000660 6EF6               M         movwf   TBLPTRL
000662 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000664 50F5               M         movf    TABLAT, W
000666                    M loop
000666 EC?? F???          M         call    WR_DATA         ; write to LCD
00066A 000B               M         tblrd+*                 ; next row in table
00066C 50F5               M         movf    TABLAT, W
00066E E1??               M         bnz     loop
                      00943         
000670                00944 HOLD_PERM_LOG
000670 EC?? F???      00945         call    READ_KEY
                      00946         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000674 0E0D               M         movlw   key0                ; poll for mode
000676 6210               M         cpfseq  KEY                 ; check this against key press
000678 EF?? F???          M         goto    Exit
                          M 
00067C                    M Next
00067C 6A89               M         clrf    LATA                ; clear pins before proceeding
00067E 6A8A               M         clrf    LATB
000680 6A8B               M         clrf    LATC
000682 6A8C               M         clrf    LATD
000684 EF?? F???          M         goto    STANDBY
                          M 
000688                    M Exit
000688 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00947         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00068A 0E00               M         movlw   key1                ; poll for mode
00068C 6210               M         cpfseq  KEY                 ; check this against key press
00068E EF?? F???          M         goto    Exit
                          M 
000692                    M Next
000692 6A89               M         clrf    LATA                ; clear pins before proceeding
000694 6A8A               M         clrf    LATB
000696 6A8B               M         clrf    LATC
000698 6A8C               M         clrf    LATD
00069A EF?? F???          M         goto    PLOG
                          M 
00069E                    M Exit
00069E 0000               M         nop
                      00948         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0006A0 0E01               M         movlw   key2                ; poll for mode
0006A2 6210               M         cpfseq  KEY                 ; check this against key press
0006A4 EF?? F???          M         goto    Exit
                          M 
0006A8                    M Next
0006A8 6A89               M         clrf    LATA                ; clear pins before proceeding
0006AA 6A8A               M         clrf    LATB
0006AC 6A8B               M         clrf    LATC
0006AE 6A8C               M         clrf    LATD
0006B0 EF?? F???          M         goto    PLOG
                          M 
0006B4                    M Exit
0006B4 0000               M         nop
                      00949         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0006B6 0E02               M         movlw   key3                ; poll for mode
0006B8 6210               M         cpfseq  KEY                 ; check this against key press
0006BA EF?? F???          M         goto    Exit
                          M 
0006BE                    M Next
0006BE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006C0 6A8A               M         clrf    LATB
0006C2 6A8B               M         clrf    LATC
0006C4 6A8C               M         clrf    LATD
0006C6 EF?? F???          M         goto    PLOG
                          M 
0006CA                    M Exit
0006CA 0000               M         nop
                      00950         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006CC 0E04               M         movlw   key4                ; poll for mode
0006CE 6210               M         cpfseq  KEY                 ; check this against key press
0006D0 EF?? F???          M         goto    Exit
                          M 
0006D4                    M Next
0006D4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D6 6A8A               M         clrf    LATB
0006D8 6A8B               M         clrf    LATC
0006DA 6A8C               M         clrf    LATD
0006DC EF?? F???          M         goto    PLOG
                          M 
0006E0                    M Exit
0006E0 0000               M         nop
                      00951         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0006E2 0E05               M         movlw   key5                ; poll for mode
0006E4 6210               M         cpfseq  KEY                 ; check this against key press
0006E6 EF?? F???          M         goto    Exit
                          M 
0006EA                    M Next
0006EA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006EC 6A8A               M         clrf    LATB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006EE 6A8B               M         clrf    LATC
0006F0 6A8C               M         clrf    LATD
0006F2 EF?? F???          M         goto    PLOG
                          M 
0006F6                    M Exit
0006F6 0000               M         nop
                      00952         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006F8 0E06               M         movlw   key6                ; poll for mode
0006FA 6210               M         cpfseq  KEY                 ; check this against key press
0006FC EF?? F???          M         goto    Exit
                          M 
000700                    M Next
000700 6A89               M         clrf    LATA                ; clear pins before proceeding
000702 6A8A               M         clrf    LATB
000704 6A8B               M         clrf    LATC
000706 6A8C               M         clrf    LATD
000708 EF?? F???          M         goto    PLOG
                          M 
00070C                    M Exit
00070C 0000               M         nop
                      00953         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
00070E 0E08               M         movlw   key7                ; poll for mode
000710 6210               M         cpfseq  KEY                 ; check this against key press
000712 EF?? F???          M         goto    Exit
                          M 
000716                    M Next
000716 6A89               M         clrf    LATA                ; clear pins before proceeding
000718 6A8A               M         clrf    LATB
00071A 6A8B               M         clrf    LATC
00071C 6A8C               M         clrf    LATD
00071E EF?? F???          M         goto    PLOG
                          M 
000722                    M Exit
000722 0000               M         nop
                      00954         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000724 0E09               M         movlw   key8                ; poll for mode
000726 6210               M         cpfseq  KEY                 ; check this against key press
000728 EF?? F???          M         goto    Exit
                          M 
00072C                    M Next
00072C 6A89               M         clrf    LATA                ; clear pins before proceeding
00072E 6A8A               M         clrf    LATB
000730 6A8B               M         clrf    LATC
000732 6A8C               M         clrf    LATD
000734 EF?? F???          M         goto    PLOG
                          M 
000738                    M Exit
000738 0000               M         nop
                      00955         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
00073A 0E0A               M         movlw   key9                ; poll for mode
00073C 6210               M         cpfseq  KEY                 ; check this against key press
00073E EF?? F???          M         goto    Exit
                          M 
000742                    M Next
000742 6A89               M         clrf    LATA                ; clear pins before proceeding
000744 6A8A               M         clrf    LATB
000746 6A8B               M         clrf    LATC
000748 6A8C               M         clrf    LATD
00074A EF?? F???          M         goto    PLOG
                          M 
00074E                    M Exit
00074E 0000               M         nop
000750 D???           00956         bra HOLD_PERM_LOG
                      00957         
000752                00958 PLOG
000752 EC?? F???      00959         call    ClrLCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00960         Display PermLog1
  0000                    M         local   loop
000756 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000758 6EF8               M         movwf   TBLPTRU
00075A 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00075C 6EF7               M         movwf   TBLPTRH
00075E 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000760 6EF6               M         movwf   TBLPTRL
000762 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000764 50F5               M         movf    TABLAT, W
000766                    M loop
000766 EC?? F???          M         call    WR_DATA         ; write to LCD
00076A 000B               M         tblrd+*                 ; next row in table
00076C 50F5               M         movf    TABLAT, W
00076E E1??               M         bnz     loop
                      00961         
                      00962         ; find the key press value
000770 C010 FFE8      00963         movff   KEY, WREG
000774 2AE8           00964         incf    WREG        ; W = KEY+1
000776 6E17           00965         movwf   temp
                      00966         
000778 42E8           00967         rrncf   WREG        ; division by 4
00077A 9EE8           00968         bcf     WREG, 7     ; clear last bit, overflow from rotate
00077C 42E8           00969         rrncf   WREG        
00077E 9EE8           00970         bcf     WREG, 7
000780 5E17           00971         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000782 C017 FFE8      00972         movff   temp, WREG
000786 C017 F011      00973         movff   temp, temp_KEY
00078A 0D15           00974         mullw   d'21'       ; indexed as mutliples of 21
                      00975 
00078C                00976 displayNum
00078C C011 FFE8      00977         movff   temp_KEY, WREG
000790 0F30           00978         addlw   0x30
000792 EC?? F???      00979         call    WR_DATA
000796 0E3A           00980         movlw   ":"
000798 EC?? F???      00981         call    WR_DATA
00079C 0E20           00982         movlw   " "
00079E EC?? F???      00983         call    WR_DATA
                      00984         
0007A2 CFF3 F021      00985         movff   PRODL, L_EE
0007A6 0E00           00986         movlw   d'0'
0007A8 2621           00987         addwf   L_EE
                      00988         READEE  OP_sec, H_EE, L_EE
0007AA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007AE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007B2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007B4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007B6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007B8 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0007BC 2A21           00989         incf    L_EE
                      00990         READEE  OP_INT, H_EE, L_EE
0007BE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007C2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007C6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007C8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007CA 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007CC CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0007D0 2A21           00991         incf    L_EE
0007D2 EC?? F???      00992         call    DisplayExeTime
0007D6 CFF3 F021      00993         movff   PRODL, L_EE
                      00994         
                      00995         ; reset eeprom to beginning
0007DA EC?? F???      00996         call    LCD_L2
0007DE CFF3 F021      00997         movff   PRODL, L_EE
0007E2 EC?? F???      00998         call    DispOpRTC
                      00999         
0007E6                01000 HOLD_PLOG
0007E6 EC?? F???      01001         call    READ_KEY
                      01002         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0007EA 0E03               M         movlw   keyA                ; poll for mode
0007EC 6210               M         cpfseq  KEY                 ; check this against key press
0007EE EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0007F2                    M Next
0007F2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007F4 6A8A               M         clrf    LATB
0007F6 6A8B               M         clrf    LATC
0007F8 6A8C               M         clrf    LATD
0007FA EF?? F???          M         goto    PLOG_DETAILS
                          M 
0007FE                    M Exit
0007FE 0000               M         nop
                      01003         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000800 0E0D               M         movlw   key0                ; poll for mode
000802 6210               M         cpfseq  KEY                 ; check this against key press
000804 EF?? F???          M         goto    Exit
                          M 
000808                    M Next
000808 6A89               M         clrf    LATA                ; clear pins before proceeding
00080A 6A8A               M         clrf    LATB
00080C 6A8B               M         clrf    LATC
00080E 6A8C               M         clrf    LATD
000810 EF?? F???          M         goto    PERM_LOG
                          M 
000814                    M Exit
000814 0000               M         nop
000816 D???           01004         bra HOLD_PLOG
                      01005         
000818                01006 PLOG_DETAILS
000818 EC?? F???      01007         call    ClrLCD
                      01008         
                      01009         Display Log1
  0000                    M         local   loop
00081C 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00081E 6EF8               M         movwf   TBLPTRU
000820 0E??               M         movlw   high Log1       ; Move Table<15:8>
000822 6EF7               M         movwf   TBLPTRH
000824 0E??               M         movlw   low Log1        ; Move Table<7:0>
000826 6EF6               M         movwf   TBLPTRL
000828 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00082A 50F5               M         movf    TABLAT, W
00082C                    M loop
00082C EC?? F???          M         call    WR_DATA         ; write to LCD
000830 000B               M         tblrd+*                 ; next row in table
000832 50F5               M         movf    TABLAT, W
000834 E1??               M         bnz     loop
000836 EC?? F???      01010         call    DisplayExeTime
                      01011         
00083A EC?? F???      01012         call    LCD_L2
00083E EC?? F???      01013         call    DispOpSort
                      01014         
000842                01015 HOLD_PLOG_DETAILS
000842 EC?? F???      01016         call    READ_KEY
                      01017         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000846 0E0D               M         movlw   key0                ; poll for mode
000848 6210               M         cpfseq  KEY                 ; check this against key press
00084A EF?? F???          M         goto    Exit
                          M 
00084E                    M Next
00084E 6A89               M         clrf    LATA                ; clear pins before proceeding
000850 6A8A               M         clrf    LATB
000852 6A8B               M         clrf    LATC
000854 6A8C               M         clrf    LATD
000856 EF?? F???          M         goto    PERM_LOG
                          M 
00085A                    M Exit
00085A 0000               M         nop
00085C D???           01018         bra HOLD_PLOG_DETAILS
                      01019         
                      01020 ;*******************************************************************************
                      01021 ; pc interface
                      01022 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01023 
00085E                01024 PC_MODE
00085E 6A38           01025         clrf    inStandby
000860 EC?? F???      01026         call    ClrLCD
                      01027         Display PC1
  0000                    M         local   loop
000864 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000866 6EF8               M         movwf   TBLPTRU
000868 0E??               M         movlw   high PC1        ; Move Table<15:8>
00086A 6EF7               M         movwf   TBLPTRH
00086C 0E??               M         movlw   low PC1         ; Move Table<7:0>
00086E 6EF6               M         movwf   TBLPTRL
000870 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000872 50F5               M         movf    TABLAT, W
000874                    M loop
000874 EC?? F???          M         call    WR_DATA         ; write to LCD
000878 000B               M         tblrd+*                 ; next row in table
00087A 50F5               M         movf    TABLAT, W
00087C E1??               M         bnz     loop
00087E EC?? F???      01028         call    LCD_L2
                      01029         Display PC2
  0000                    M         local   loop
000882 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000884 6EF8               M         movwf   TBLPTRU
000886 0E??               M         movlw   high PC2        ; Move Table<15:8>
000888 6EF7               M         movwf   TBLPTRH
00088A 0E??               M         movlw   low PC2         ; Move Table<7:0>
00088C 6EF6               M         movwf   TBLPTRL
00088E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000890 50F5               M         movf    TABLAT, W
000892                    M loop
000892 EC?? F???          M         call    WR_DATA         ; write to LCD
000896 000B               M         tblrd+*                 ; next row in table
000898 50F5               M         movf    TABLAT, W
00089A E1??               M         bnz     loop
00089C CFF9 F029      01030         movff   PCL, PC_PCL
0008A0 CFFA F02A      01031         movff   PCLATH, PC_PCLATH
0008A4 CFFB F02B      01032         movff   PCLATU, PC_PCLATU
                      01033         
0008A8                01034 HOLD_PC
0008A8 EC?? F???      01035         call    READ_KEY
                      01036         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008AC 0E0D               M         movlw   key0                ; poll for mode
0008AE 6210               M         cpfseq  KEY                 ; check this against key press
0008B0 EF?? F???          M         goto    Exit
                          M 
0008B4                    M Next
0008B4 6A89               M         clrf    LATA                ; clear pins before proceeding
0008B6 6A8A               M         clrf    LATB
0008B8 6A8B               M         clrf    LATC
0008BA 6A8C               M         clrf    LATD
0008BC EF?? F???          M         goto    STANDBY
                          M 
0008C0                    M Exit
0008C0 0000               M         nop
                      01037         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008C2 0E0E               M         movlw   keyH                ; poll for mode
0008C4 6210               M         cpfseq  KEY                 ; check this against key press
0008C6 EF?? F???          M         goto    Exit
                          M 
0008CA                    M Next
0008CA 6A89               M         clrf    LATA                ; clear pins before proceeding
0008CC 6A8A               M         clrf    LATB
0008CE 6A8B               M         clrf    LATC
0008D0 6A8C               M         clrf    LATD
0008D2 EF?? F???          M         goto    PC_TRANSFER
                          M 
0008D6                    M Exit
0008D6 0000               M         nop
0008D8 D???           01038         bra     HOLD_PC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01039 
0008DA                01040 PC_TRANSFER
0008DA 6828           01041         setf    transferring
0008DC EC?? F???      01042         call    ClrLCD
                      01043         Display PCTransfer
  0000                    M         local   loop
0008E0 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0008E2 6EF8               M         movwf   TBLPTRU
0008E4 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008E6 6EF7               M         movwf   TBLPTRH
0008E8 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008EA 6EF6               M         movwf   TBLPTRL
0008EC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008EE 50F5               M         movf    TABLAT, W
0008F0                    M loop
0008F0 EC?? F???          M         call    WR_DATA         ; write to LCD
0008F4 000B               M         tblrd+*                 ; next row in table
0008F6 50F5               M         movf    TABLAT, W
0008F8 E1??               M         bnz     loop
0008FA EC?? F???      01044         call    DataUSART
0008FE 6A28           01045         clrf    transferring
000900 EF?? F???      01046         goto    STANDBY
                      01047         
                      01048 ;*******************************************************************************
                      01049 ; subroutines
                      01050 ;*******************************************************************************
                      01051 
000904                01052 SaveData
000904 C02D FFE8      01053         movff       ESKA, WREG
000908 0F30           01054         addlw       0x30
                      01055         WriteEE     WREG, H_EE, L_EE
00090A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00090E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000912 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000916 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000918 D???               M         bra     $-2
                          M 
00091A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00091C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00091E 84A6               M         bsf     EECON1, WREN        ; enable write
000920 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000922 98A1               M         bcf     PIR2, EEIF
                          M 
000924 0E55               M         movlw   0x55
000926 6EA7               M         movwf   EECON2              ; write 55h
000928 0EAA               M         movlw   0xaa
00092A 6EA7               M         movwf   EECON2              ; write 0xaa
00092C 82A6               M         bsf     EECON1, WR          ; begin write
00092E B2A6               M         btfsc   EECON1, WR
000930 D???               M         bra     $-2
                          M 
000932 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000934 94A6               M         bcf     EECON1, WREN        ; disable writes
000936 2A21           01056         incf        L_EE
                      01057         
000938 C02E FFE8      01058         movff       ESKA_NOCAP, WREG
00093C 0F30           01059         addlw       0x30
                      01060         WriteEE     WREG, H_EE, L_EE
00093E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000942 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000946 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00094A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00094C D???               M         bra     $-2
                          M 
00094E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000950 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000952 84A6               M         bsf     EECON1, WREN        ; enable write
000954 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000956 98A1               M         bcf     PIR2, EEIF
                          M 
000958 0E55               M         movlw   0x55
00095A 6EA7               M         movwf   EECON2              ; write 55h
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00095C 0EAA               M         movlw   0xaa
00095E 6EA7               M         movwf   EECON2              ; write 0xaa
000960 82A6               M         bsf     EECON1, WR          ; begin write
000962 B2A6               M         btfsc   EECON1, WR
000964 D???               M         bra     $-2
                          M 
000966 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000968 94A6               M         bcf     EECON1, WREN        ; disable writes
00096A 2A21           01061         incf        L_EE
                      01062         
00096C C02F FFE8      01063         movff       YOP, WREG
000970 0F30           01064         addlw       0x30
                      01065         WriteEE     WREG, H_EE, L_EE
000972 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000976 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00097A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00097E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000980 D???               M         bra     $-2
                          M 
000982 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000984 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000986 84A6               M         bsf     EECON1, WREN        ; enable write
000988 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00098A 98A1               M         bcf     PIR2, EEIF
                          M 
00098C 0E55               M         movlw   0x55
00098E 6EA7               M         movwf   EECON2              ; write 55h
000990 0EAA               M         movlw   0xaa
000992 6EA7               M         movwf   EECON2              ; write 0xaa
000994 82A6               M         bsf     EECON1, WR          ; begin write
000996 B2A6               M         btfsc   EECON1, WR
000998 D???               M         bra     $-2
                          M 
00099A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00099C 94A6               M         bcf     EECON1, WREN        ; disable writes
00099E 2A21           01066         incf        L_EE
                      01067         
0009A0 C030 FFE8      01068         movff       YOP_NOCAP, WREG
0009A4 0F30           01069         addlw       0x30
                      01070         WriteEE     WREG, H_EE, L_EE
0009A6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009AA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009AE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009B2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009B4 D???               M         bra     $-2
                          M 
0009B6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009B8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009BA 84A6               M         bsf     EECON1, WREN        ; enable write
0009BC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009BE 98A1               M         bcf     PIR2, EEIF
                          M 
0009C0 0E55               M         movlw   0x55
0009C2 6EA7               M         movwf   EECON2              ; write 55h
0009C4 0EAA               M         movlw   0xaa
0009C6 6EA7               M         movwf   EECON2              ; write 0xaa
0009C8 82A6               M         bsf     EECON1, WR          ; begin write
0009CA B2A6               M         btfsc   EECON1, WR
0009CC D???               M         bra     $-2
                          M 
0009CE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009D0 94A6               M         bcf     EECON1, WREN        ; disable writes
0009D2 2A21           01071         incf        L_EE
                      01072         
0009D4 C037 FFE8      01073         movff       STOP_CONDITION, WREG
0009D8 0F30           01074         addlw       0x30
                      01075         WriteEE     WREG, H_EE, L_EE
0009DA C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009DE C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009E2 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009E6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009E8 D???               M         bra     $-2
                          M 
0009EA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009EC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009EE 84A6               M         bsf     EECON1, WREN        ; enable write
0009F0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009F2 98A1               M         bcf     PIR2, EEIF
                          M 
0009F4 0E55               M         movlw   0x55
0009F6 6EA7               M         movwf   EECON2              ; write 55h
0009F8 0EAA               M         movlw   0xaa
0009FA 6EA7               M         movwf   EECON2              ; write 0xaa
0009FC 82A6               M         bsf     EECON1, WR          ; begin write
0009FE B2A6               M         btfsc   EECON1, WR
000A00 D???               M         bra     $-2
                          M 
000A02 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A04 94A6               M         bcf     EECON1, WREN        ; disable writes
000A06 2A21           01076         incf        L_EE
                      01077         
000A08 0E00           01078         movlw       d'0'
000A0A 6E20           01079         movwf       H_EE
000A0C 0EA8           01080         movlw       d'168'              ; take d'168' as last
000A0E 6E21           01081         movwf       L_EE
000A10 0E00           01082         movlw       d'0'
000A12 6E23           01083         movwf       tempH_EE
000A14 0EDC           01084         movlw       d'220'              ; temp for low constant
000A16 6E24           01085         movwf       tempL_EE
                      01086         
000A18 6A16           01087         clrf        counter2
000A1A 6A15           01088         clrf        counter
                      01089         
000A1C                01090 ShiftLoop
000A1C 2A15           01091         incf            counter
                      01092         READEE          REG_EE, H_EE, L_EE
000A1E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A22 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000A26 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A28 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A2A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A2C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000A30 0E15           01093         movlw           d'21'
000A32 2621           01094         addwf           L_EE
                      01095         WriteEE         REG_EE, H_EE, L_EE
000A34 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A38 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A3C C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000A40 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A42 D???               M         bra     $-2
                          M 
000A44 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A46 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A48 84A6               M         bsf     EECON1, WREN        ; enable write
000A4A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A4C 98A1               M         bcf     PIR2, EEIF
                          M 
000A4E 0E55               M         movlw   0x55
000A50 6EA7               M         movwf   EECON2              ; write 55h
000A52 0EAA               M         movlw   0xaa
000A54 6EA7               M         movwf   EECON2              ; write 0xaa
000A56 82A6               M         bsf     EECON1, WR          ; begin write
000A58 B2A6               M         btfsc   EECON1, WR
000A5A D???               M         bra     $-2
                          M 
000A5C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A5E 94A6               M         bcf     EECON1, WREN        ; disable writes
000A60 0E14           01096         movlw           d'20'
000A62 5E21           01097         subwf           L_EE
000A64 0E15           01098         movlw           d'21'
000A66 6215           01099         cpfseq          counter
000A68 EF?? F???      01100         goto            ShiftLoop
                      01101         
                      01102         ; Set EEPROM address to the previous 21 byte block, and reset temp address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A6C 0E2A           01103         movlw           d'42'
000A6E 5E21           01104         subwf           L_EE
000A70 0EDC           01105         movlw           d'220'
000A72 6E24           01106         movwf           tempL_EE
000A74 6A15           01107         clrf            counter
000A76 2A16           01108         incf            counter2
000A78 0E09           01109         movlw           d'9'
000A7A 6216           01110         cpfseq          counter2        ; Skip if 9 shifts were made
000A7C EF?? F???      01111         goto            ShiftLoop
                      01112 
000A80 0012           01113         return
                      01114         
000A82                01115 RTC_INIT
                      01116         ; set sda and scl to high
000A82 9882           01117         bcf     PORTC, 4
000A84 9682           01118         bcf     PORTC, 3
000A86 8894           01119         bsf     TRISC, 4
000A88 8694           01120         bsf     TRISC, 3
                      01121         
000A8A EC?? F???      01122         call    INIT_RTC
                      01123         
                      01124         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A8E 0012           01125 return
                      01126         
000A90                01127 SAVE_TIME
                      01128         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A90 0E02               M     movlw   0x02
000A92 6E??               M     movwf   regaddress
000A94 EC?? F???          M     call    read_rtc
000A98 C??? FFE8          M     movff   datachar, WREG
000A9C EC?? F???          M     call    rtc_convert
                      01129         rtc_read    0x02        ; hours
000AA0 0E02               M     movlw   0x02
000AA2 6E??               M     movwf   regaddress
000AA4 EC?? F???          M     call    read_rtc
000AA8 C??? FFE8          M     movff   datachar, WREG
000AAC EC?? F???          M     call    rtc_convert
000AB0 EC?? F???      01130         call    WriteEE_RTC
                      01131         rtc_read    0x01        ; minutes
000AB4 0E01               M     movlw   0x01
000AB6 6E??               M     movwf   regaddress
000AB8 EC?? F???          M     call    read_rtc
000ABC C??? FFE8          M     movff   datachar, WREG
000AC0 EC?? F???          M     call    rtc_convert
000AC4 EC?? F???      01132         call    WriteEE_RTC
                      01133         rtc_read    0x06        ; years
000AC8 0E06               M     movlw   0x06
000ACA 6E??               M     movwf   regaddress
000ACC EC?? F???          M     call    read_rtc
000AD0 C??? FFE8          M     movff   datachar, WREG
000AD4 EC?? F???          M     call    rtc_convert
000AD8 EC?? F???      01134         call    WriteEE_RTC
                      01135         rtc_read    0x05        ; months
000ADC 0E05               M     movlw   0x05
000ADE 6E??               M     movwf   regaddress
000AE0 EC?? F???          M     call    read_rtc
000AE4 C??? FFE8          M     movff   datachar, WREG
000AE8 EC?? F???          M     call    rtc_convert
000AEC EC?? F???      01136         call    WriteEE_RTC
                      01137         rtc_read    0x04        ; days
000AF0 0E04               M     movlw   0x04
000AF2 6E??               M     movwf   regaddress
000AF4 EC?? F???          M     call    read_rtc
000AF8 C??? FFE8          M     movff   datachar, WREG
000AFC EC?? F???          M     call    rtc_convert
000B00 EC?? F???      01138         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000B04 0012           01139 return
                      01140         
000B06                01141 SAVE_EXE_TIME
                      01142         
Warning[202]: Argument out of range.  Least significant bits used.
000B06 3818           01143         swapf   OP_sec, WREG    ; 100's seconds
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B08 6E17           01144         movwf   temp
000B0A 0E0F           01145         movlw   0x0f
000B0C 1617           01146         andwf   temp
000B0E C017 FFE8      01147         movff   temp, WREG
000B12 0F30           01148         addlw   0x30    
                      01149         WriteEE WREG, H_EE, L_EE
000B14 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B18 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B1C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B20 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B22 D???               M         bra     $-2
                          M 
000B24 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B26 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B28 84A6               M         bsf     EECON1, WREN        ; enable write
000B2A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B2C 98A1               M         bcf     PIR2, EEIF
                          M 
000B2E 0E55               M         movlw   0x55
000B30 6EA7               M         movwf   EECON2              ; write 55h
000B32 0EAA               M         movlw   0xaa
000B34 6EA7               M         movwf   EECON2              ; write 0xaa
000B36 82A6               M         bsf     EECON1, WR          ; begin write
000B38 B2A6               M         btfsc   EECON1, WR
000B3A D???               M         bra     $-2
                          M 
000B3C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B3E 94A6               M         bcf     EECON1, WREN        ; disable writes
000B40 2A21           01150         incf    L_EE
                      01151         
000B42 C018 F017      01152         movff   OP_sec, temp    ; 10's seconds
000B46 0E0F           01153         movlw   0x0f
000B48 1617           01154         andwf   temp            ; Temp = lower nibble of Op_sec
000B4A C017 FFE8      01155         movff   temp, WREG      ; W = Temp
000B4E 0F30           01156         addlw   0x30            ; Convert to ASCII
                      01157         WriteEE WREG, H_EE, L_EE
000B50 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B54 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B58 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B5C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B5E D???               M         bra     $-2
                          M 
000B60 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B62 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B64 84A6               M         bsf     EECON1, WREN        ; enable write
000B66 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B68 98A1               M         bcf     PIR2, EEIF
                          M 
000B6A 0E55               M         movlw   0x55
000B6C 6EA7               M         movwf   EECON2              ; write 55h
000B6E 0EAA               M         movlw   0xaa
000B70 6EA7               M         movwf   EECON2              ; write 0xaa
000B72 82A6               M         bsf     EECON1, WR          ; begin write
000B74 B2A6               M         btfsc   EECON1, WR
000B76 D???               M         bra     $-2
                          M 
000B78 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B7A 94A6               M         bcf     EECON1, WREN        ; disable writes
000B7C 2A21           01158         incf    L_EE
                      01159         
Warning[202]: Argument out of range.  Least significant bits used.
000B7E 3819           01160         swapf   OP_INT, WREG    ;1's seconds
000B80 6E17           01161         movwf   temp
000B82 0E0F           01162         movlw   0x0f
000B84 1617           01163         andwf   temp
000B86 C017 FFE8      01164         movff   temp, WREG
000B8A 0F30           01165         addlw   0x30
                      01166         WriteEE WREG, H_EE, L_EE
000B8C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B90 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B94 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B98 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B9A D???               M         bra     $-2
                          M 
000B9C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B9E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BA0 84A6               M         bsf     EECON1, WREN        ; enable write
000BA2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BA4 98A1               M         bcf     PIR2, EEIF
                          M 
000BA6 0E55               M         movlw   0x55
000BA8 6EA7               M         movwf   EECON2              ; write 55h
000BAA 0EAA               M         movlw   0xaa
000BAC 6EA7               M         movwf   EECON2              ; write 0xaa
000BAE 82A6               M         bsf     EECON1, WR          ; begin write
000BB0 B2A6               M         btfsc   EECON1, WR
000BB2 D???               M         bra     $-2
                          M 
000BB4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BB6 94A6               M         bcf     EECON1, WREN        ; disable writes
000BB8 2A21           01167         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000BBA 0012           01168 return
                      01169         
                      01170                 
000BBC                01171 DISPLAY_RTC
                      01172         ; display data in this format hh/minmin/yy yy/mm/dd
                      01173         
                      01174         rtc_read    0x02            ; 0x02 from DS1307 - hours
000BBC 0E02               M     movlw   0x02
000BBE 6E??               M     movwf   regaddress
000BC0 EC?? F???          M     call    read_rtc
000BC4 C??? FFE8          M     movff   datachar, WREG
000BC8 EC?? F???          M     call    rtc_convert
000BCC C??? FFE8      01175         movff   tens_digit,WREG
000BD0 EC?? F???      01176         call    WR_DATA
000BD4 C??? FFE8      01177         movff   ones_digit,WREG
000BD8 EC?? F???      01178         call    WR_DATA
000BDC 0E68           01179         movlw   "h"
000BDE EC?? F???      01180         call    WR_DATA
                      01181         
                      01182         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000BE2 0E01               M     movlw   0x01
000BE4 6E??               M     movwf   regaddress
000BE6 EC?? F???          M     call    read_rtc
000BEA C??? FFE8          M     movff   datachar, WREG
000BEE EC?? F???          M     call    rtc_convert
000BF2 C??? FFE8      01183         movff   tens_digit,WREG
000BF6 EC?? F???      01184         call    WR_DATA
000BFA C??? FFE8      01185         movff   ones_digit,WREG
000BFE EC?? F???      01186         call    WR_DATA
                      01187         
                      01188         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000C02 0E00               M     movlw   0x00
000C04 6E??               M     movwf   regaddress
000C06 EC?? F???          M     call    read_rtc
000C0A C??? FFE8          M     movff   datachar, WREG
000C0E EC?? F???          M     call    rtc_convert
000C12 C??? FFE8      01189         movff   tens_digit,WREG
000C16 EC?? F???      01190         call    WR_DATA
000C1A C??? FFE8      01191         movff   ones_digit,WREG
000C1E EC?? F???      01192         call    WR_DATA
000C22 0E20           01193         movlw   " "
000C24 EC?? F???      01194         call    WR_DATA
                      01195         
                      01196         rtc_read    0x06            ; 0x06 from DS1307 - years
000C28 0E06               M     movlw   0x06
000C2A 6E??               M     movwf   regaddress
000C2C EC?? F???          M     call    read_rtc
000C30 C??? FFE8          M     movff   datachar, WREG
000C34 EC?? F???          M     call    rtc_convert
000C38 C??? FFE8      01197         movff   tens_digit,WREG
000C3C EC?? F???      01198         call    WR_DATA
000C40 C??? FFE8      01199         movff   ones_digit,WREG
000C44 EC?? F???      01200         call    WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C48 0E2F           01201         movlw   "/"
000C4A EC?? F???      01202         call    WR_DATA
                      01203         
                      01204         rtc_read    0x05            ; 0x05 from DS1307 - months
000C4E 0E05               M     movlw   0x05
000C50 6E??               M     movwf   regaddress
000C52 EC?? F???          M     call    read_rtc
000C56 C??? FFE8          M     movff   datachar, WREG
000C5A EC?? F???          M     call    rtc_convert
000C5E C??? FFE8      01205         movff   tens_digit,WREG
000C62 EC?? F???      01206         call    WR_DATA
000C66 C??? FFE8      01207         movff   ones_digit,WREG
000C6A EC?? F???      01208         call    WR_DATA
000C6E 0E2F           01209         movlw   "/"
000C70 EC?? F???      01210         call    WR_DATA
                      01211         
                      01212         rtc_read    0x04            ; 0x04 from DS1307 - days
000C74 0E04               M     movlw   0x04
000C76 6E??               M     movwf   regaddress
000C78 EC?? F???          M     call    read_rtc
000C7C C??? FFE8          M     movff   datachar, WREG
000C80 EC?? F???          M     call    rtc_convert
000C84 C??? FFE8      01213         movff   tens_digit,WREG
000C88 EC?? F???      01214         call    WR_DATA
000C8C C??? FFE8      01215         movff   ones_digit,WREG
000C90 EC?? F???      01216         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C94 0012           01217 return
                      01218         
000C96                01219 SET_TIME
                      01220         rtc_resetAll
                          M 
000C96 6A??               M     clrf    databyte
000C98 0E06               M     movlw   6
000C9A 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000C9C                    M     del_loop0
000C9C EC?? F???          M     call    write_rtc
000CA0 2E??               M     decfsz  regaddress
000CA2 D???               M     bra     del_loop0
000CA4 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01221         
                      01222         rtc_set 0x00,   b'10000000'
000CA8 0E00               M     movlw   0x00
000CAA 6E??               M     movwf   regaddress
000CAC 0E80               M     movlw   b'10000000'
000CAE 6E??               M     movwf   databyte
000CB0 EC?? F???          M     call    write_rtc
                      01223 
                      01224         rtc_set 0x06,   b'00010111'             ; Year 17
000CB4 0E06               M     movlw   0x06
000CB6 6E??               M     movwf   regaddress
000CB8 0E17               M     movlw   b'00010111'
000CBA 6E??               M     movwf   databyte
000CBC EC?? F???          M     call    write_rtc
                      01225         rtc_set 0x05,   b'00000011'             ; Month 03
000CC0 0E05               M     movlw   0x05
000CC2 6E??               M     movwf   regaddress
000CC4 0E03               M     movlw   b'00000011'
000CC6 6E??               M     movwf   databyte
000CC8 EC?? F???          M     call    write_rtc
                      01226         rtc_set 0x04,   b'00000100'             ; Date 04
000CCC 0E04               M     movlw   0x04
000CCE 6E??               M     movwf   regaddress
000CD0 0E04               M     movlw   b'00000100'
000CD2 6E??               M     movwf   databyte
000CD4 EC?? F???          M     call    write_rtc
                      01227         rtc_set 0x02,   b'00010010'             ; Hours 12
000CD8 0E02               M     movlw   0x02
000CDA 6E??               M     movwf   regaddress
000CDC 0E12               M     movlw   b'00010010'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CDE 6E??               M     movwf   databyte
000CE0 EC?? F???          M     call    write_rtc
                      01228         rtc_set 0x01,   b'01001000'             ; Minutes 27
000CE4 0E01               M     movlw   0x01
000CE6 6E??               M     movwf   regaddress
000CE8 0E48               M     movlw   b'01001000'
000CEA 6E??               M     movwf   databyte
000CEC EC?? F???          M     call    write_rtc
                      01229         rtc_set 0x00,   b'00000000'             ; Seconds 0
000CF0 0E00               M     movlw   0x00
000CF2 6E??               M     movwf   regaddress
000CF4 0E00               M     movlw   b'00000000'
000CF6 6E??               M     movwf   databyte
000CF8 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000CFC 0012           01230 return
                      01231         
000CFE                01232 INIT_USART
                      01233         
000CFE 8E94           01234         bsf     TRISC, 7        ; set RC7=USART RC
000D00 9C94           01235         bcf     TRISC, 6        ; clear RC6=USART TX
                      01236 
000D02 0E0F           01237         movlw   15              ; baud rate 9600
000D04 6EAF           01238         movwf   SPBRG
000D06 6AAC           01239         clrf    TXSTA
                      01240         
000D08 6AAB           01241         clrf    RCSTA
000D0A 8EAB           01242         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000D0C 88AB           01243         bsf     RCSTA,CREN      ; continous receive
                      01244         
000D0E 8AAC           01245         bsf     TXSTA, TXEN     ; transmit enabled
000D10 0012           01246         return
                      01247 
000D12                01248 DataUSART
000D12 0E02           01249         movlw   0x02
000D14 EC?? F???      01250         call    USART_WAIT
000D18 0E0D           01251         movlw   0x0D
000D1A EC?? F???      01252         call    USART_WAIT
                      01253         
000D1E 6A15           01254         clrf    counter         ; used to cycle through past 9 eeprom logs
000D20 6A16           01255         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01256         
000D22                01257 TRANSFER_LOGS
000D22 0E15           01258         movlw   d'21'           ; logs are 21 bits apart
000D24 0215           01259         mulwf   counter         ; log number one starts at eeprom address 0
000D26 CFF3 F021      01260         movff   PRODL, L_EE     ; low address now points to count X 21
000D2A 6A16           01261         clrf    counter2
                      01262         
000D2C                01263 TRANSFER_DATA   
                      01264         READEE  WREG, H_EE, L_EE
000D2C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D30 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D34 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D36 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D38 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D3A CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D3E EC?? F???      01265         call    USART_WAIT      ; transfer bit
000D42 2A21           01266         incf    L_EE
                      01267         
000D44 2A16           01268         incf    counter2
000D46 0E12           01269         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000D48 6216           01270         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000D4A D???           01271         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01272         
000D4C EC?? F???      01273         call    USART_LINE      ; new line because a e s t h e t i c
                      01274         
000D50 2A15           01275         incf    counter
000D52 0E08           01276         movlw   d'8'            ; we save up to the last 9 permanent logs
000D54 6215           01277         cpfseq  counter
000D56 D???           01278         bra     TRANSFER_LOGS
                      01279         
000D58 EC?? F???      01280         call    LCD_L2
                      01281         Display PCComplete
  0000                    M         local   loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D5C 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D5E 6EF8               M         movwf   TBLPTRU
000D60 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D62 6EF7               M         movwf   TBLPTRH
000D64 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D66 6EF6               M         movwf   TBLPTRL
000D68 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D6A 50F5               M         movf    TABLAT, W
000D6C                    M loop
000D6C EC?? F???          M         call    WR_DATA         ; write to LCD
000D70 000B               M         tblrd+*                 ; next row in table
000D72 50F5               M         movf    TABLAT, W
000D74 E1??               M         bnz     loop
                      01282         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D76 0E28               M         movlw   0x28
000D78 6E1A               M         movwf   delayR
                          M 
000D7A                    M loop
000D7A EC?? F???          M         call    Delay50ms
000D7E 2E1A               M         decfsz  delayR
000D80 EF?? F???          M         goto    loop
000D84 0012           01283         return                  ; done transmitting data
                      01284         
000D86                01285 USART_WAIT
000D86 6EAD           01286         movwf   TXREG
000D88 A2AC           01287         btfss   TXSTA, 1
000D8A EF?? F???      01288         goto    $-2
000D8E 0012           01289         return
                      01290 
000D90                01291 USART_LINE
000D90 0E0A           01292         movlw   0x0A
000D92 EC?? F???      01293         call    USART_WAIT
000D96 0E0D           01294         movlw   0x0D
000D98 EC?? F???      01295         call    USART_WAIT
000D9C 0012           01296         return
                      01297         
000D9E                01298 Delay5us
000D9E 0E78           01299         movlw   d'120'
000DA0 6E1B           01300         movwf   d5us
                      01301 
000DA2                01302 loop5us
000DA2 2E1B           01303         decfsz  d5us
000DA4 EF?? F???      01304         goto    loop5us
000DA8 0000           01305         nop
000DAA 0012           01306         return
                      01307 
000DAC                01308 Delay200us
000DAC 0EA4           01309         movlw   0xA4
000DAE 6E1C           01310         movwf   d200us
                      01311 
000DB0                01312 loop200us
000DB0 2E1C           01313         decfsz  d200us
000DB2 EF?? F???      01314         goto    loop200us
000DB6 0000           01315         nop
000DB8 0012           01316         return
                      01317 
000DBA                01318 Delay50ms
000DBA 0EF9           01319         movlw   0xF9
000DBC 6E1D           01320         movwf   d50ms
                      01321 
000DBE                01322 loop50ms
000DBE EC?? F???      01323         call    Delay200us
000DC2 2E1D           01324         decfsz  d50ms
                      01325 
000DC4                01326 Cycles
000DC4 EF?? F???      01327         goto    loop50ms
000DC8 EC?? F???      01328         call    Delay200us
000DCC 0012           01329         return
                      01330 
000DCE                01331 WriteEE_RTC
                      01332         WriteEE tens_digit, H_EE, L_EE
000DCE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DD2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DD6 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000DDA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DDC D???               M         bra     $-2
                          M 
000DDE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DE0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DE2 84A6               M         bsf     EECON1, WREN        ; enable write
000DE4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DE6 98A1               M         bcf     PIR2, EEIF
                          M 
000DE8 0E55               M         movlw   0x55
000DEA 6EA7               M         movwf   EECON2              ; write 55h
000DEC 0EAA               M         movlw   0xaa
000DEE 6EA7               M         movwf   EECON2              ; write 0xaa
000DF0 82A6               M         bsf     EECON1, WR          ; begin write
000DF2 B2A6               M         btfsc   EECON1, WR
000DF4 D???               M         bra     $-2
                          M 
000DF6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DF8 94A6               M         bcf     EECON1, WREN        ; disable writes
000DFA 2A21           01333         incf    L_EE
                      01334         WriteEE ones_digit, H_EE, L_EE
000DFC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E00 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E04 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000E08 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E0A D???               M         bra     $-2
                          M 
000E0C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E0E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E10 84A6               M         bsf     EECON1, WREN        ; enable write
000E12 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E14 98A1               M         bcf     PIR2, EEIF
                          M 
000E16 0E55               M         movlw   0x55
000E18 6EA7               M         movwf   EECON2              ; write 55h
000E1A 0EAA               M         movlw   0xaa
000E1C 6EA7               M         movwf   EECON2              ; write 0xaa
000E1E 82A6               M         bsf     EECON1, WR          ; begin write
000E20 B2A6               M         btfsc   EECON1, WR
000E22 D???               M         bra     $-2
                          M 
000E24 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E26 94A6               M         bcf     EECON1, WREN        ; disable writes
000E28 2A21           01335         incf    L_EE
000E2A 0012           01336         return
                      01337 
000E2C                01338 ClearEEPROM_21
000E2C 6A20           01339         clrf    H_EE
000E2E 6A21           01340         clrf    L_EE
000E30 681F           01341         setf    clear_EE
000E32 6A15           01342         clrf    counter
000E34                01343 ClearNext
                      01344         WriteEE         clear_EE, H_EE, L_EE
000E34 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E38 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E3C C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000E40 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E42 D???               M         bra     $-2
                          M 
000E44 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E46 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E48 84A6               M         bsf     EECON1, WREN        ; enable write
000E4A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E4C 98A1               M         bcf     PIR2, EEIF
                          M 
000E4E 0E55               M         movlw   0x55
000E50 6EA7               M         movwf   EECON2              ; write 55h
000E52 0EAA               M         movlw   0xaa
000E54 6EA7               M         movwf   EECON2              ; write 0xaa
000E56 82A6               M         bsf     EECON1, WR          ; begin write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E58 B2A6               M         btfsc   EECON1, WR
000E5A D???               M         bra     $-2
                          M 
000E5C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E5E 94A6               M         bcf     EECON1, WREN        ; disable writes
000E60 2A15           01345         incf            counter
000E62 2A21           01346         incf            L_EE
000E64 0E15           01347         movlw           d'21'
000E66 6215           01348         cpfseq          counter
000E68 EF?? F???      01349         goto            ClearNext
000E6C 6A20           01350         clrf            H_EE
000E6E 6A21           01351         clrf            L_EE
000E70 0012           01352         return
                      01353         
000E72                01354 READ_KEY
000E72 A281           01355         btfss   PORTB, 1        ; check for keypad interrupt
000E74 EF?? F???      01356         goto    READ_KEY
000E78 3881           01357         swapf   PORTB, W
000E7A 0B0F           01358         andlw   0x0F
000E7C 6E10           01359         movwf   KEY
000E7E B281           01360         btfsc   PORTB, 1
000E80 EF?? F???      01361         goto    $-2
000E84 0012           01362         return
                      01363 
000E86                01364 READ_KEY_TIME
000E86 EC?? F???      01365         call        LCD_L2          ; go to second line to print RTC    
                      01366         ; display the time
                      01367         ; call      DISPLAY_RTC 
                      01368 
000E8A A281           01369         btfss       PORTB, 1    ; keypad interrupt
000E8C EF?? F???      01370         goto        READ_KEY_TIME
000E90 3881           01371         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E92 0B0F           01372         andlw       0x0F        ; only want W3:0
000E94 6E10           01373         movwf       KEY         ; write this value to the KEY
000E96 B281           01374         btfsc       PORTB, 1    ; wait for release
000E98 EF?? F???      01375         goto        $-2         ; go back one instruction
000E9C 0012           01376         return
                      01377 
000E9E                01378 DisplayExeTime
                      01379         READEE  REG_EE, H_EE, L_EE
000E9E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EA2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EA6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EA8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EAA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EAC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EB0 0EFF           01380         movlw   0xFF
000EB2 6222           01381         cpfseq  REG_EE
000EB4 EF?? F???      01382         goto    NoSkipDispExeTime
                      01383         Display NoData
  0000                    M         local   loop
000EB8 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EBA 6EF8               M         movwf   TBLPTRU
000EBC 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EBE 6EF7               M         movwf   TBLPTRH
000EC0 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EC2 6EF6               M         movwf   TBLPTRL
000EC4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EC6 50F5               M         movf    TABLAT, W
000EC8                    M loop
000EC8 EC?? F???          M         call    WR_DATA         ; write to LCD
000ECC 000B               M         tblrd+*                 ; next row in table
000ECE 50F5               M         movf    TABLAT, W
000ED0 E1??               M         bnz     loop
000ED2 0EFF           01384         movlw   0xFF
000ED4 6022           01385         cpfslt  REG_EE
000ED6 EF?? F???      01386         goto    SkipDispExeTime
000EDA 0012           01387         return
                      01388 
000EDC                01389 NoSkipDispExeTime
                      01390         READEE  WREG, H_EE, L_EE
000EDC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EE0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EE4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EE6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EE8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EEA CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EEE EC?? F???      01391         call    WR_DATA
000EF2 2A21           01392         incf    L_EE
                      01393         
                      01394         READEE  WREG, H_EE, L_EE
000EF4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EF8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EFC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EFE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F00 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F02 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F06 EC?? F???      01395         call    WR_DATA
000F0A 2A21           01396         incf    L_EE
                      01397         
                      01398         READEE  WREG, H_EE, L_EE
000F0C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F10 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F14 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F16 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F18 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F1A CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F1E EC?? F???      01399         call    WR_DATA
000F22 2A21           01400         incf    L_EE
                      01401 
000F24 0E73           01402         movlw   0x73            ; Write 's'
000F26 EC?? F???      01403         call    WR_DATA
000F2A EC?? F???      01404         call    LCD_L2
000F2E                01405 SkipDispExeTime
000F2E 0012           01406         return
                      01407 
000F30                01408 DispOpSort
                      01409         READEE  REG_EE, H_EE, L_EE
000F30 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F34 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F38 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F3A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F3C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F3E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F42 0EFF           01410         movlw   0xff
000F44 6222           01411         cpfseq  REG_EE
000F46 EF?? F???      01412         goto    NoSkipDispOpSort
                      01413         Display NoData
  0000                    M         local   loop
000F4A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F4C 6EF8               M         movwf   TBLPTRU
000F4E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F50 6EF7               M         movwf   TBLPTRH
000F52 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F54 6EF6               M         movwf   TBLPTRL
000F56 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F58 50F5               M         movf    TABLAT, W
000F5A                    M loop
000F5A EC?? F???          M         call    WR_DATA         ; write to LCD
000F5E 000B               M         tblrd+*                 ; next row in table
000F60 50F5               M         movf    TABLAT, W
000F62 E1??               M         bnz     loop
000F64 0EFF           01414         movlw   0xff
000F66 6022           01415         cpfslt  REG_EE
000F68 EF?? F???      01416         goto    SkipDispOpSort
                      01417 
000F6C                01418 NoSkipDispOpSort
000F6C 0E61           01419         movlw   "a"
000F6E EC?? F???      01420         call    WR_DATA
                      01421         
                      01422         READEE  REG_EE, H_EE, L_EE
000F72 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F76 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F7A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F7C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F7E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F80 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F84 C022 FFE8      01423         movff   REG_EE, WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F88 EC?? F???      01424         call    WR_DATA
000F8C 2A21           01425         incf    L_EE
                      01426         
000F8E 0E20           01427         movlw   " "
000F90 EC?? F???      01428         call    WR_DATA
                      01429         
000F94 0E62           01430         movlw   "b"
000F96 EC?? F???      01431         call    WR_DATA
                      01432         
                      01433         READEE  REG_EE, H_EE, L_EE
000F9A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F9E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FA2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FA6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FA8 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FAC C022 FFE8      01434         movff   REG_EE, WREG
000FB0 EC?? F???      01435         call    WR_DATA
000FB4 2A21           01436         incf    L_EE
                      01437         
000FB6 0E20           01438         movlw   " "
000FB8 EC?? F???      01439         call    WR_DATA
                      01440         
000FBC 0E63           01441         movlw   "c"
000FBE EC?? F???      01442         call    WR_DATA
                      01443         
                      01444         READEE  REG_EE, H_EE, L_EE
000FC2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FC6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FCA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FCC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FCE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FD0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FD4 C022 FFE8      01445         movff   REG_EE, WREG
000FD8 EC?? F???      01446         call    WR_DATA
000FDC 2A21           01447         incf    L_EE
                      01448         
000FDE 0E20           01449         movlw   " "
000FE0 EC?? F???      01450         call    WR_DATA
                      01451         
000FE4 0E64           01452         movlw   "d"
000FE6 EC?? F???      01453         call    WR_DATA
                      01454         
                      01455         READEE  REG_EE, H_EE, L_EE
000FEA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FEE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FF2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FF4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FF6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FF8 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FFC C022 FFE8      01456         movff   REG_EE, WREG
001000 EC?? F???      01457         call    WR_DATA
001004 2A21           01458         incf    L_EE
                      01459 
001006                01460 SkipDispOpSort
001006 0012           01461         return
                      01462         
001008                01463 DispOpRTC
                      01464         READEE  REG_EE, H_EE, L_EE
001008 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00100C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001010 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001012 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001014 80A6               M         bsf     EECON1, RD          ; read EEPROM
001016 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00101A 0EFF           01465         movlw   0xff
00101C 6222           01466         cpfseq  REG_EE
00101E EF?? F???      01467         goto    NoSkipDispOpRTC
                      01468         Display NoData
  0000                    M         local   loop
001022 0E??               M         movlw   upper NoData    ; Move Table<20:16>
001024 6EF8               M         movwf   TBLPTRU
001026 0E??               M         movlw   high NoData     ; Move Table<15:8>
001028 6EF7               M         movwf   TBLPTRH
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00102A 0E??               M         movlw   low NoData      ; Move Table<7:0>
00102C 6EF6               M         movwf   TBLPTRL
00102E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
001030 50F5               M         movf    TABLAT, W
001032                    M loop
001032 EC?? F???          M         call    WR_DATA         ; write to LCD
001036 000B               M         tblrd+*                 ; next row in table
001038 50F5               M         movf    TABLAT, W
00103A E1??               M         bnz     loop
00103C 0EFF           01469         movlw   0xff
00103E 6022           01470         cpfslt  REG_EE
001040 EF?? F???      01471         goto    SkipDispOpRTC
                      01472 
001044                01473 NoSkipDispOpRTC
                      01474         READEE  REG_EE, H_EE, L_EE
001044 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001048 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00104C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00104E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001050 80A6               M         bsf     EECON1, RD          ; read EEPROM
001052 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001056 C022 FFE8      01475         movff   REG_EE, WREG
00105A EC?? F???      01476         call    WR_DATA
00105E 2A21           01477         incf    L_EE
                      01478         
                      01479         READEE  REG_EE, H_EE, L_EE
001060 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001064 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001068 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00106A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00106C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00106E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001072 C022 FFE8      01480         movff   REG_EE, WREG
001076 EC?? F???      01481         call    WR_DATA
00107A 2A21           01482         incf    L_EE
                      01483 
00107C 0E68           01484         movlw   "h"
00107E EC?? F???      01485         call    WR_DATA
                      01486         
001082 EC?? F???      01487         call    DispOpRTC_Helper
                      01488         
001086 0E20           01489         movlw   " "
001088 EC?? F???      01490         call    WR_DATA
                      01491         
00108C EC?? F???      01492         call    DispOpRTC_Helper
001090 0E2F           01493         movlw   "/"
001092 EC?? F???      01494         call    WR_DATA
                      01495 
001096 EC?? F???      01496         call    DispOpRTC_Helper
00109A 0E2F           01497         movlw   "/"
00109C EC?? F???      01498         call    WR_DATA
0010A0 EC?? F???      01499         call    DispOpRTC_Helper
0010A4                01500 SkipDispOpRTC
0010A4 0012           01501                 return
0010A6                01502 DispOpRTC_Helper
                      01503         READEE          REG_EE, H_EE, L_EE
0010A6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010AA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010AE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010B0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010B2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010B4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010B8 C022 FFE8      01504         movff           REG_EE, WREG
0010BC EC?? F???      01505         call            WR_DATA
0010C0 2A21           01506         incf            L_EE
                      01507         READEE          REG_EE, H_EE, L_EE
0010C2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010C6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010CA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010CC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010CE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010D0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010D4 C022 FFE8      01508         movff           REG_EE, WREG
0010D8 EC?? F???      01509         call            WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-6-2017  20:18:17         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010DC 2A21           01510         incf            L_EE
0010DE 0012           01511         return
Warning[205]: Found directive in column 1. (end)
                      01512 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

