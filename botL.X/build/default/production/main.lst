MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008     
                      00009     
                      00010 
                      00011 
                      00012 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00047         keyB
  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit, databyte
  0000                00100     extern WRITE_ARDUINO, READ_ARDUINO, INIT_RTC, INIT_ARDUINO
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7473 6E61 6964 00107     StandBy     db          "standing by ... ... standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7473 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 613C 733E 726F 00108     StandbyInfo db          "<a>sort <b>last log <c>perm logs <d>pc", 0
       2074 623C 6C3E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7361 2074 6F6C 
       2067 633C 703E 
       7265 206D 6F6C 
       7367 3C20 3E64 
       6370 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6974 656D 003A 00109     Log1        db          "time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6173 6576 3A64 00111     LogInfo1    db          "saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6162 6B63 3C20 00112     LogInfo2    db          "back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6570 6D72 6E61 00113     PermLog1    db          "permanent logs ", 0
       6E65 2074 6F6C 
       7367 0020 
Warning[207]: Found label after column 1. (PermLog2)
000096 6361 6563 7373 00114     PermLog2    db          "access up to 9 logs, press <1> ... <9>", 0 
       7520 2070 6F74 
       3920 6C20 676F 
       2C73 7020 6572 
       7373 3C20 3E31 
       2E20 2E2E 3C20 
       3E39 0000 
Warning[207]: Found label after column 1. (Exe1)
0000BE 6F73 7472 6E69 00115     Exe1        db          "sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000CA 6E65 2064 2A3C 00116     Exe2        db          "end <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000D2 6370 6920 746E 00117     PC1         db          "pc interface ... pc interface ... ", 0
       7265 6166 6563 
       2E20 2E2E 7020 
       2063 6E69 6574 
       6672 6361 2065 
       2E2E 202E 0000 
Warning[207]: Found label after column 1. (PC2)
0000F6 7270 7365 2073 00118     PC2         db          "press <#> to begin log transfer", 0
       233C 203E 6F74 
       6220 6765 6E69 
       6C20 676F 7420 
       6172 736E 6566 
       0072 
Warning[207]: Found label after column 1. (PCTransfer)
000116 7274 6E61 6673 00119     PCTransfer  db          "transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000126 6F63 706D 656C 00120     PCComplete  db          "complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
000130 6173 6976 676E 00121     SAVE        db          "saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
00013A 2F6E 0061      00122     NoData      db          "n/a", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 LOAD_STANDBY_TIME
00001C AED5           00271         btfss   T0CON, TMR0ON
00001E 0012           00272         return
                      00273         
000020 0EFF           00274         movlw   0xff
000022 6ED7           00275         movwf   TMR0H
000024 0EFF           00276         movlw   0xff
000026 6ED6           00277         movwf   TMR0L
                      00278 
000028 0012           00279         return  
                      00280 
00002A                00281 LOAD_EXE_TIME
00002A AED5           00282         btfss   T0CON, TMR0ON
00002C 0012           00283         return
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00284         
00002E 0EC3           00285         movlw   0xc3
000030 6ED7           00286         movwf   TMR0H
000032 0E28           00287         movlw   0x28
000034 6ED6           00288         movwf   TMR0L
                      00289         
000036 0012           00290         return
                      00291         
000038                00292 ISR_HIGH
                      00293         saveContext
000038 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00003C 6E14               M     movwf   temp_W                  ; save W
                      00294         
00003E 0E00           00295         movlw   0x00
000040 6238           00296         cpfseq  inStandby
000042 EC?? F???      00297         call    Shift
                      00298         
                      00299         ;reset timer, but need to check which time increment 
000046 0E00           00300         movlw   0x00
000048 6238           00301         cpfseq  inStandby
00004A EC?? F???      00302         call    LOAD_STANDBY_TIME
                      00303         
00004E 0EFF           00304         movlw   0xff
000050 6238           00305         cpfseq  inStandby
000052 EC?? F???      00306         call    LOAD_EXE_TIME
                      00307                 
                      00308         ;timer interrupt
000056 A4F2           00309         btfss   INTCON, TMR0IF
000058 EF?? F???      00310         goto    END_ISR_HIGH
                      00311         
                      00312         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00005C C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000060 0E0F               M         movlw   0x0f
000062 1617               M         andwf   temp
000064 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000066 6217               M         cpfseq  temp
000068 EF?? F???          M         goto    ones
                          M         
00006C 0E10               M         movlw   b'00010000'
00006E 2619               M         addwf   OP_INT
000070 0EF0               M         movlw   0xf0
000072 1619               M         andwf   OP_INT
000074 0EA0               M         movlw   0xa0
000076 6019               M         cpfslt  OP_INT
                          M         
000078 6A19               M         clrf    OP_INT
00007A EF?? F???          M         goto    endBCD
                          M         
00007E                    M ones
00007E 2A19               M         incf    OP_INT
000080 EF?? F???          M         goto    endBCD
000084                    M endBCD
000084 0000               M         nop
000086 0E00           00313         movlw   d'0'
000088 6219           00314         cpfseq  OP_INT
00008A EF?? F???      00315         goto    END_ISR_HIGH
                      00316         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
00008E C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000092 0E0F               M         movlw   0x0f
000094 1617               M         andwf   temp
000096 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000098 6217               M         cpfseq  temp
00009A EF?? F???          M         goto    ones
                          M         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00009E 0E10               M         movlw   b'00010000'
0000A0 2618               M         addwf   OP_sec
0000A2 0EF0               M         movlw   0xf0
0000A4 1618               M         andwf   OP_sec
0000A6 0EA0               M         movlw   0xa0
0000A8 6018               M         cpfslt  OP_sec
                          M         
0000AA 6A18               M         clrf    OP_sec
0000AC EF?? F???          M         goto    endBCD
                          M         
0000B0                    M ones
0000B0 2A18               M         incf    OP_sec
0000B2 EF?? F???          M         goto    endBCD
0000B6                    M endBCD
0000B6 0000               M         nop
                      00317 
0000B8                00318 END_ISR_HIGH
0000B8 94F2           00319         bcf     INTCON, TMR0IF
                      00320         restoreContext
0000BA 3814               M     swapf   temp_W, 0               ; restore W first
0000BC C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000C0 0010           00321         retfie
                      00322 
0000C2                00323 ISR_LOW
                      00324         saveContext
0000C2 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000C6 6E14               M     movwf   temp_W                  ; save W
                      00325         ; KEYPAD INTERRUPT
0000C8 A0F0           00326         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000CA EF?? F???      00327         goto    END_ISR_LOW
                      00328 
                      00329         ; check operation status
0000CE 0EFF           00330         movlw   0xff                    ; If in operation, skip return
0000D0 621E           00331         cpfseq  inExecution
0000D2 EF?? F???      00332         goto    END_ISR_LOW
                      00333 
                      00334         ; process KEY
0000D6 3881           00335         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D8 0B0F           00336         andlw   0x0f
0000DA 6E12           00337         movwf   KEY_ISR
                      00338         
0000DC 0E0C           00339         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000DE 6212           00340         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000E0 EF?? F???      00341         goto    END_ISR_LOW
                      00342         
                      00343         ; reset program counter - emergency stop recorded. 
0000E4 9ED5           00344         bcf     T0CON, TMR0ON
0000E6 EC?? F???      00345         call    SAVE_EXE_TIME
                      00346                 
                      00347         ; Clear inExecution flag to stop '*' interrupts
0000EA 6A1E           00348         clrf    inExecution
0000EC 0E01           00349         movlw   d'1'
0000EE 6E37           00350         movwf   STOP_CONDITION
                      00351 
0000F0 EC?? F???      00352         call    SaveData
                      00353         
0000F4 6AFF           00354         clrf    TOSU
0000F6 6AFE           00355         clrf    TOSH
0000F8 6AFD           00356         clrf    TOSL
0000FA 90F0           00357         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00358         restoreContext
0000FC 3814               M     swapf   temp_W, 0               ; restore W first
0000FE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000102 0010           00359         retfie
                      00360 
000104                00361 END_ISR_LOW
000104 90F0           00362         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00363         restoreContext
000106 3814               M     swapf   temp_W, 0               ; restore W first
000108 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00010C 0010           00364         retfie
                      00365 
                      00366 ;*******************************************************************************
                      00367 ; main
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00368 ;*******************************************************************************
00010E                00369 INIT
00010E 0E70           00370         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000110 6ED3           00371         movwf   OSCCON
                      00372         
                      00373         ; i/o
000112 0E00           00374         movlw   b'00000000'
000114 6E92           00375         movwf   TRISA
000116 0EFF           00376         movlw   b'11111111'
000118 6E93           00377         movwf   TRISB               ; keypad
00011A 0E00           00378         movlw   b'00000000'
00011C 6E94           00379         movwf   TRISC
00011E 0E00           00380         movlw   b'00000000'
000120 6E95           00381         movwf   TRISD
000122 0E03           00382         movlw   b'00000011'
000124 6E96           00383         movwf   TRISE
                      00384 
                      00385         ; clear ports
000126 0E00           00386         movlw   b'00000000'
000128 6E89           00387         movwf   LATA
00012A 0E00           00388         movlw   b'00000000'
00012C 6E8A           00389         movwf   LATB
00012E 0E00           00390         movlw   b'00000000'
000130 6E8B           00391         movwf   LATC
000132 0E00           00392         movlw   b'00000000'
000134 6E8C           00393         movwf   LATD
000136 0E00           00394         movlw   b'00000000'
000138 6E8D           00395         movwf   LATE
                      00396         
00013A 0E00           00397         movlw   b'00000000'
00013C 6EC2           00398         movwf   ADCON0
                      00399         
                      00400         ; initializations
00013E EC?? F???      00401         call    InitLCD
                      00402         ConfigLCD
000142 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000144 EC?? F???          M           call      WR_INS
                          M 
000148 0E0C               M           movlw     b'00001100'    ; display on/off
00014A EC?? F???          M           call      WR_INS
00014E 0E01               M           movlw     b'00000001'    ; Clear ram
000150 EC?? F???          M           call      WR_INS
                      00403         
000154 EC?? F???      00404         call    i2c_common_setup
000158 EC?? F???      00405         call    RTC_INIT
00015C EC?? F???      00406         call    INIT_ARDUINO
                      00407 
                      00408         ;COLOUR_INIT
000160 EC?? F???      00409         call    INIT_USART
                      00410 
                      00411         ; interrupts
000164 6AD0           00412         clrf    RCON
000166 6AF2           00413         clrf    INTCON
000168 6AF1           00414         clrf    INTCON2
00016A 6AF0           00415         clrf    INTCON3
00016C 8ED0           00416         bsf     RCON, IPEN          ; priority mode
00016E 8EF2           00417         bsf     INTCON, GIEH        ; permit global interrupts
000170 8CF2           00418         bsf     INTCON, GIEL
000172 8AF1           00419         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000174 8AF2           00420         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000176 84F2           00421         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000178 84F1           00422         bsf     INTCON2, TMR0IP     ; set to high priority
00017A 86F0           00423         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
00017C 9CF0           00424         bcf     INTCON3, INT1IP     ; keyboard to low priority
                      00425         
                      00426         ; setting up timer to sychronize with 1 second clock intervals
00017E 9ED5           00427         bcf     T0CON, TMR0ON
000180 9CD5           00428         bcf     T0CON, T08BIT
000182 9AD5           00429         bcf     T0CON, T0CS
000184 98D5           00430         bcf     T0CON, T0SE
000186 96D5           00431         bcf     T0CON, PSA
000188 94D5           00432         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
00018A 82D5           00433         bsf     T0CON, T0PS1
00018C 80D5           00434         bsf     T0CON, T0PS0
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00435 
00018E 6A20           00436         clrf    H_EE
000190 6A21           00437         clrf    L_EE
000192 6A??           00438         clrf    tens_digit
000194 6A??           00439         clrf    ones_digit
                      00440         
                      00441         ;ensure that the motor is indeed off
                      00442         Delay50N delayR, 0x03
  0000                    M         local   loop
000196 0E03               M         movlw   0x03
000198 6E1A               M         movwf   delayR
                          M 
00019A                    M loop
00019A EC?? F???          M         call    Delay50ms
00019E 2E1A               M         decfsz  delayR
0001A0 EF?? F???          M         goto    loop
0001A4 0E00           00443         movlw   d'0'
0001A6 CFE8 F???      00444         movff   WREG, databyte
0001AA EC?? F???      00445         call    WRITE_ARDUINO
                      00446         
0001AE 6A2C           00447         clrf    DETECTION_VAL
0001B0 6A2D           00448         clrf    ESKA
0001B2 6A2E           00449         clrf    ESKA_NOCAP
0001B4 6A2F           00450         clrf    YOP
0001B6 6A30           00451         clrf    YOP_NOCAP
0001B8 6A31           00452         clrf    TOTAL_BOTTLES
0001BA 6A32           00453         clrf    COLLECTIONS_COUNT
                      00454         
0001BC 0EF2           00455         movlw     b'11110010'    ; Set required keypad inputs
0001BE 6E93           00456         movwf     TRISB
0001C0 0E03           00457         movlw   b'00000011'
0001C2 6E96           00458         movwf   TRISE
                      00459         
0001C4 EC?? F???      00460         call    ClrLCD
                      00461         Display Welcome
  0000                    M         local   loop
0001C8 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001CA 6EF8               M         movwf   TBLPTRU
0001CC 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001CE 6EF7               M         movwf   TBLPTRH
0001D0 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001D2 6EF6               M         movwf   TBLPTRL
0001D4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D6 50F5               M         movf    TABLAT, W
0001D8                    M loop
0001D8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001DC 000B               M         tblrd+*                 ; next row in table
0001DE 50F5               M         movf    TABLAT, W
0001E0 E1??               M         bnz     loop
0001E2 EC?? F???      00462         call LCD_L2
                      00463         Display Team
  0000                    M         local   loop
0001E6 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001E8 6EF8               M         movwf   TBLPTRU
0001EA 0E??               M         movlw   high Team       ; Move Table<15:8>
0001EC 6EF7               M         movwf   TBLPTRH
0001EE 0E??               M         movlw   low Team        ; Move Table<7:0>
0001F0 6EF6               M         movwf   TBLPTRL
0001F2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001F4 50F5               M         movf    TABLAT, W
0001F6                    M loop
0001F6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001FA 000B               M         tblrd+*                 ; next row in table
0001FC 50F5               M         movf    TABLAT, W
0001FE E1??               M         bnz     loop
                      00464         
                      00465         Delay50N delayR, 0x28
  0000                    M         local   loop
000200 0E28               M         movlw   0x28
000202 6E1A               M         movwf   delayR
                          M 
000204                    M loop
000204 EC?? F???          M         call    Delay50ms
000208 2E1A               M         decfsz  delayR
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00020A EF?? F???          M         goto    loop
                      00466 
                      00467 ;*******************************************************************************
                      00468 ; standby mode
                      00469 ;*******************************************************************************
00020E                00470 STANDBY
00020E 0E00           00471         movlw   b'00000000'
000210 6E84           00472         movwf   PORTE
000212 0E00           00473         movlw   b'00000000'
000214 6E80           00474         movwf   PORTA
                      00475         
                      00476         
000216 6838           00477         setf    inStandby       
000218 EC?? F???      00478         call    ClrLCD
                      00479         Display StandBy
  0000                    M         local   loop
00021C 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
00021E 6EF8               M         movwf   TBLPTRU
000220 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000222 6EF7               M         movwf   TBLPTRH
000224 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000226 6EF6               M         movwf   TBLPTRL
000228 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00022A 50F5               M         movf    TABLAT, W
00022C                    M loop
00022C EC?? F???          M         call    WR_DATA         ; write to LCD
000230 000B               M         tblrd+*                 ; next row in table
000232 50F5               M         movf    TABLAT, W
000234 E1??               M         bnz     loop
000236 EC?? F???      00480         call    LCD_L2
                      00481         Display StandbyInfo
  0000                    M         local   loop
00023A 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
00023C 6EF8               M         movwf   TBLPTRU
00023E 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000240 6EF7               M         movwf   TBLPTRH
000242 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
000244 6EF6               M         movwf   TBLPTRL
000246 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000248 50F5               M         movf    TABLAT, W
00024A                    M loop
00024A EC?? F???          M         call    WR_DATA         ; write to LCD
00024E 000B               M         tblrd+*                 ; next row in table
000250 50F5               M         movf    TABLAT, W
000252 E1??               M         bnz     loop
                      00482         
000254 0EFF           00483         movlw   0xff
000256 6ED7           00484         movwf   TMR0H
000258 0EFF           00485         movlw   0xff
00025A 6ED6           00486         movwf   TMR0L
00025C 8ED5           00487         bsf     T0CON, TMR0ON       ; turning on timer
                      00488 
00025E                00489 HOLD_STANDBY
00025E EC?? F???      00490         call    READ_KEY_TIME
                      00491 
                      00492         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000262 0E00               M         movlw   key1                ; poll for mode
000264 6210               M         cpfseq  KEY                 ; check this against key press
000266 EF?? F???          M         goto    Exit
                          M 
00026A                    M Next
00026A 6A89               M         clrf    LATA                ; clear pins before proceeding
00026C 6A8A               M         clrf    LATB
00026E 6A8B               M         clrf    LATC
000270 6A8C               M         clrf    LATD
000272 EF?? F???          M         goto    COLOUR_TEST
                          M 
000276                    M Exit
000276 0000               M         nop
                      00493         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000278 0E03               M         movlw   keyA                ; poll for mode
00027A 6210               M         cpfseq  KEY                 ; check this against key press
00027C EF?? F???          M         goto    Exit
                          M 
000280                    M Next
000280 6A89               M         clrf    LATA                ; clear pins before proceeding
000282 6A8A               M         clrf    LATB
000284 6A8B               M         clrf    LATC
000286 6A8C               M         clrf    LATD
000288 EF?? F???          M         goto    EXECUTION
                          M 
00028C                    M Exit
00028C 0000               M         nop
                      00494         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
00028E 0E07               M         movlw   keyB                ; poll for mode
000290 6210               M         cpfseq  KEY                 ; check this against key press
000292 EF?? F???          M         goto    Exit
                          M 
000296                    M Next
000296 6A89               M         clrf    LATA                ; clear pins before proceeding
000298 6A8A               M         clrf    LATB
00029A 6A8B               M         clrf    LATC
00029C 6A8C               M         clrf    LATD
00029E EF?? F???          M         goto    LOG
                          M 
0002A2                    M Exit
0002A2 0000               M         nop
                      00495         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002A4 0E0B               M         movlw   keyC                ; poll for mode
0002A6 6210               M         cpfseq  KEY                 ; check this against key press
0002A8 EF?? F???          M         goto    Exit
                          M 
0002AC                    M Next
0002AC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002AE 6A8A               M         clrf    LATB
0002B0 6A8B               M         clrf    LATC
0002B2 6A8C               M         clrf    LATD
0002B4 EF?? F???          M         goto    PERM_LOG
                          M 
0002B8                    M Exit
0002B8 0000               M         nop
                      00496         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002BA 0E0F               M         movlw   keyD                ; poll for mode
0002BC 6210               M         cpfseq  KEY                 ; check this against key press
0002BE EF?? F???          M         goto    Exit
                          M 
0002C2                    M Next
0002C2 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C4 6A8A               M         clrf    LATB
0002C6 6A8B               M         clrf    LATC
0002C8 6A8C               M         clrf    LATD
0002CA EF?? F???          M         goto    PC_MODE
                          M 
0002CE                    M Exit
0002CE 0000               M         nop
0002D0 D???           00497         bra     HOLD_STANDBY
                      00498         
0002D2                00499 COLOUR_TEST
0002D2 EC?? F???      00500         call    ClrLCD
0002D6 6A38           00501         clrf    inStandby
0002D8 0E01           00502         movlw   b'00000001'
0002DA 6E84           00503         movwf   PORTE
                      00504 
0002DC                00505 LOOPING
                      00506         Delay50N delayR, 0x3c
  0000                    M         local   loop
0002DC 0E3C               M         movlw   0x3c
0002DE 6E1A               M         movwf   delayR
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0002E0                    M loop
0002E0 EC?? F???          M         call    Delay50ms
0002E4 2E1A               M         decfsz  delayR
0002E6 EF?? F???          M         goto    loop
0002EA EC?? F???      00507         call    READ_ARDUINO
0002EE 6E2C           00508         movwf   DETECTION_VAL
0002F0 0F30           00509         addlw   0x30
0002F2 EC?? F???      00510         call    WR_DATA
                      00511         Delay50N delayR, 0x3c
  0000                    M         local   loop
0002F6 0E3C               M         movlw   0x3c
0002F8 6E1A               M         movwf   delayR
                          M 
0002FA                    M loop
0002FA EC?? F???          M         call    Delay50ms
0002FE 2E1A               M         decfsz  delayR
000300 EF?? F???          M         goto    loop
                      00512         
000304 D???           00513         bra COLOUR_TEST
                      00514 
                      00515 ;*******************************************************************************
                      00516 ; execution mode
                      00517 ;*******************************************************************************
                      00518         
000306                00519 EXECUTION
                      00520         ;bcf    T0CON, TMR0ON       ; turning off standby timer
000306 6A38           00521         clrf    inStandby       
000308 EC?? F???      00522         call    ClearEEPROM_21
                      00523         
                      00524         ; save the starting time
00030C EC?? F???      00525         call    SAVE_TIME
                      00526                 
                      00527         ; display
000310 681E           00528         setf    inExecution
000312 EC?? F???      00529         call    ClrLCD
                      00530         Display Exe1
  0000                    M         local   loop
000316 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000318 6EF8               M         movwf   TBLPTRU
00031A 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00031C 6EF7               M         movwf   TBLPTRH
00031E 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000320 6EF6               M         movwf   TBLPTRL
000322 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000324 50F5               M         movf    TABLAT, W
000326                    M loop
000326 EC?? F???          M         call    WR_DATA         ; write to LCD
00032A 000B               M         tblrd+*                 ; next row in table
00032C 50F5               M         movf    TABLAT, W
00032E E1??               M         bnz     loop
                      00531         
000330 0EC3           00532         movlw   0xc3
000332 6ED7           00533         movwf   TMR0H
000334 0E28           00534         movlw   0x28
000336 6ED6           00535         movwf   TMR0L
                      00536         
000338 8ED5           00537         bsf     T0CON, TMR0ON       ; turning on timer
                      00538         
                      00539         ; initialize variables
00033A 6A18           00540         clrf    OP_sec
00033C 6A19           00541         clrf    OP_INT
                      00542         
00033E 6A2D           00543         clrf    ESKA
000340 6A2E           00544         clrf    ESKA_NOCAP
000342 6A2F           00545         clrf    YOP
000344 6A30           00546         clrf    YOP_NOCAP
000346 6A31           00547         clrf    TOTAL_BOTTLES
000348 0E01           00548         movlw   d'1'
00034A 6E35           00549         movwf   TRAY_CURRENT
00034C 6A34           00550         clrf    TRAY_DELAY
                      00551         
00034E 0E01           00552         movlw   d'1'
000350 CFE8 F???      00553         movff   WREG, databyte
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000354 EC?? F???      00554         call    WRITE_ARDUINO
                      00555         Delay50N delayR, 0x03
  0000                    M         local   loop
000358 0E03               M         movlw   0x03
00035A 6E1A               M         movwf   delayR
                          M 
00035C                    M loop
00035C EC?? F???          M         call    Delay50ms
000360 2E1A               M         decfsz  delayR
000362 EF?? F???          M         goto    loop
                      00556         
000366 EF?? F???      00557         goto    DETECTIONS
                      00558         
00036A                00559 CHECK_TIMEOUT
00036A 3818           00560     swapf       OP_sec, 0; 100's seconds
00036C 6E17           00561     movwf       temp
00036E 0E0F           00562     movlw       0x0f
000370 1617           00563     andwf       temp
000372 0E00           00564     movlw       d'0'
000374 5E17           00565     subwf       temp
000376 E0??           00566     bz  EXIT_EXE        ; if 100 second, continue to check for 150s then 120s.
                      00567 
000378 0012           00568     return
                      00569         
00037A                00570 DETECTIONS
                      00571     ;   movlw   d'2'
                      00572 ;       movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
                      00573 ;       movff   OP_sec, temp    ; 10's seconds
                      00574 ;       movlw   0x0f
                      00575 ;       andwf   temp
                      00576 ;       movlw   d'2'
                      00577 ;       cpfslt  temp, 0
                      00578 ;       call    CHECK_TIMEOUT   ; if 150 second, terminate
                      00579     
                      00580         ; displaying the execution time in seconds
00037A EC?? F???      00581         call    LCD_L2
00037E 3818           00582         swapf   OP_sec, 0       ; 100's seconds
000380 6E17           00583         movwf   temp
000382 0E0F           00584         movlw   0x0f
000384 1617           00585         andwf   temp
000386 C017 FFE8      00586         movff   temp, WREG
00038A 0F30           00587         addlw   0x30
00038C EC?? F???      00588         call    WR_DATA
                      00589 
000390 C018 F017      00590         movff   OP_sec, temp    ; 10's seconds
000394 0E0F           00591         movlw   0x0f
000396 1617           00592         andwf   temp            ; Temp = lower nibble of Op_sec
000398 C017 FFE8      00593         movff   temp, WREG      ; W = Temp
00039C 0F30           00594         addlw   0x30            ; Convert to ASCII
00039E EC?? F???      00595         call    WR_DATA
                      00596         
Warning[202]: Argument out of range.  Least significant bits used.
0003A2 3819           00597         swapf   OP_INT, WREG    ;1's seconds
0003A4 6E17           00598         movwf   temp
0003A6 0E0F           00599         movlw   0x0f
0003A8 1617           00600         andwf   temp
0003AA C017 FFE8      00601         movff   temp, WREG
0003AE 0F30           00602         addlw   0x30
0003B0 EC?? F???      00603         call    WR_DATA
                      00604 
0003B4 0E73           00605         movlw   0x73            ; Write 's'
0003B6 EC?? F???      00606         call    WR_DATA
                      00607         
0003BA CF80 F017      00608         movff   PORTA, temp
0003BE B817           00609         btfsc   temp, 4
0003C0 D???           00610         bra     DETECTIONS
                      00611 
0003C2 D???           00612         bra     EXIT_EXE
                      00613         
                      00614 ;       Delay50N delayR, 0x28
                      00615 ;       call    READ_ARDUINO
                      00616 ;       movwf   DETECTION_VAL
                      00617 ;       bra DETECTIONS
                      00618 ;       
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00619 ;       bra DETECTIONS
                      00620 
                      00621         ; first check if there was a bottle detected, if so go to COLLECTIONS_STEP
0003C4 0E05           00622         movlw   d'5'
0003C6 5C2C           00623         subwf   DETECTION_VAL, 0
0003C8 E0??           00624         bz      DETECTIONS
                      00625         
                      00626         ; okay we have a bottle, first increment total count then see what it is
0003CA 2A31           00627         incf    TOTAL_BOTTLES
                      00628         
                      00629         ; yop no cap
0003CC 0E04           00630         movlw   d'4'
0003CE 5C2C           00631         subwf   DETECTION_VAL, 0
0003D0 E0??           00632         bz      INC_YOPNOCAP
                      00633         
                      00634         ; yop with cap
0003D2 0E03           00635         movlw   d'3'
0003D4 5C2C           00636         subwf   DETECTION_VAL, 0
0003D6 E0??           00637         bz      INC_YOPCAP
                      00638         
                      00639         ; eska no cap
0003D8 0E02           00640         movlw   d'2'
0003DA 5C2C           00641         subwf   DETECTION_VAL, 0
0003DC E0??           00642         bz      INC_ESKANOCAP
                      00643         
                      00644         ; eksa with cap
0003DE 0E01           00645         movlw   d'1'
0003E0 5C2C           00646         subwf   DETECTION_VAL, 0
0003E2 E0??           00647         bz      INC_ESKACAP
                      00648         
                      00649         ; edge case, cant determine bottle so check if done sorting
0003E4 D???           00650         bra     DETECTIONS
                      00651         
0003E6                00652 INC_YOPNOCAP
0003E6 2A30           00653         incf    YOP_NOCAP
0003E8 D???           00654         bra     DETECTIONS
                      00655         
0003EA                00656 INC_YOPCAP
0003EA 2A2F           00657         incf    YOP
0003EC D???           00658         bra     DETECTIONS
                      00659         
0003EE                00660 INC_ESKANOCAP
0003EE 2A2E           00661         incf    ESKA_NOCAP
0003F0 D???           00662         bra     DETECTIONS
                      00663         
0003F2                00664 INC_ESKACAP
0003F2 2A2D           00665         incf    ESKA
0003F4 D???           00666         bra     DETECTIONS
                      00667         
0003F6                00668 CHECK_DONE
                      00669         ; Challenging:  logic to figure out when the machine is done sorting 
                      00670         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00671         
                      00672         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00673         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00674         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00675         ; 150s then stop.
                      00676         
                      00677         ; NUMBER: 
                      00678         ; if the total bottle count is 10, then we are done (most basic end condition)
0003F6 6A37           00679         clrf    STOP_CONDITION  ; regular stop, saved in eeprom as 0
0003F8 0E0A           00680         movlw   d'10'
0003FA 5C31           00681         subwf   TOTAL_BOTTLES, 0
0003FC E0??           00682         bz      EXIT_EXE
                      00683         
0003FE D???           00684         bra     DETECTIONS
                      00685         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00686         ; qualified run has at least 4 bottles, with 1 of each different kind
000400 0E03           00687         movlw   d'3'
000402 6431           00688         cpfsgt  TOTAL_BOTTLES
000404 EF?? F???      00689         goto    DETECTIONS
                      00690 
000408 0E00           00691         movlw   d'0'
00040A 6430           00692         cpfsgt  YOP_NOCAP, 0
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00040C EF?? F???      00693         goto    DETECTIONS
                      00694         
000410 0E00           00695         movlw   d'0'
000412 642F           00696         cpfsgt  YOP, 0
000414 EF?? F???      00697         goto    DETECTIONS
                      00698         
000418 0E00           00699         movlw   d'0'
00041A 642E           00700         cpfsgt  ESKA_NOCAP, 0
00041C EF?? F???      00701         goto    DETECTIONS
                      00702         
000420 0E00           00703         movlw   d'0'
000422 642D           00704         cpfsgt  ESKA, 0
000424 EF?? F???      00705         goto    DETECTIONS
                      00706         
                      00707         ; finally, if we get here then consider the termination optimized.
000428 0E03           00708         movlw   d'3'
00042A 6E37           00709         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
00042C EF?? F???      00710         goto    EXIT_EXE
                      00711         
000430                00712 EXIT_EXE
                      00713         ; stop timer and save the execution time to eeprom
000430 9ED5           00714         bcf     T0CON, TMR0ON
000432 EC?? F???      00715         call    SAVE_EXE_TIME
000436 EC?? F???      00716         call    ClrLCD
                      00717         Display SAVE
  0000                    M         local   loop
00043A 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
00043C 6EF8               M         movwf   TBLPTRU
00043E 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000440 6EF7               M         movwf   TBLPTRH
000442 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000444 6EF6               M         movwf   TBLPTRL
000446 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000448 50F5               M         movf    TABLAT, W
00044A                    M loop
00044A EC?? F???          M         call    WR_DATA         ; write to LCD
00044E 000B               M         tblrd+*                 ; next row in table
000450 50F5               M         movf    TABLAT, W
000452 E1??               M         bnz     loop
                      00718                 
                      00719         ; Clear inExecution flag to stop '*' interrupts
000454 6A1E           00720         clrf    inExecution
                      00721                 
                      00722         ; turn off the dc motor
000456 0E00           00723         movlw   d'0'
000458 CFE8 F???      00724         movff   WREG, databyte
00045C EC?? F???      00725         call    WRITE_ARDUINO
                      00726         
                      00727         Delay50N delayR, 0x05
  0000                    M         local   loop
000460 0E05               M         movlw   0x05
000462 6E1A               M         movwf   delayR
                          M 
000464                    M loop
000464 EC?? F???          M         call    Delay50ms
000468 2E1A               M         decfsz  delayR
00046A EF?? F???          M         goto    loop
                      00728         ; request eska
00046E 0E02           00729         movlw   d'2'
000470 CFE8 F???      00730         movff   WREG, databyte
000474 EC?? F???      00731         call    WRITE_ARDUINO
                      00732         Delay50N delayR, 0x05
  0000                    M         local   loop
000478 0E05               M         movlw   0x05
00047A 6E1A               M         movwf   delayR
                          M 
00047C                    M loop
00047C EC?? F???          M         call    Delay50ms
000480 2E1A               M         decfsz  delayR
000482 EF?? F???          M         goto    loop
                      00733         ; get eska
000486 EC?? F???      00734         call    READ_ARDUINO
00048A 6E2D           00735         movwf   ESKA
                      00736         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00737         Delay50N delayR, 0x05
  0000                    M         local   loop
00048C 0E05               M         movlw   0x05
00048E 6E1A               M         movwf   delayR
                          M 
000490                    M loop
000490 EC?? F???          M         call    Delay50ms
000494 2E1A               M         decfsz  delayR
000496 EF?? F???          M         goto    loop
                      00738         ; request eska without a cap
00049A 0E03           00739         movlw   d'3'
00049C CFE8 F???      00740         movff   WREG, databyte
0004A0 EC?? F???      00741         call    WRITE_ARDUINO
                      00742         Delay50N delayR, 0x05
  0000                    M         local   loop
0004A4 0E05               M         movlw   0x05
0004A6 6E1A               M         movwf   delayR
                          M 
0004A8                    M loop
0004A8 EC?? F???          M         call    Delay50ms
0004AC 2E1A               M         decfsz  delayR
0004AE EF?? F???          M         goto    loop
                      00743         ; get eska without a cap
0004B2 EC?? F???      00744         call    READ_ARDUINO
0004B6 6E2E           00745         movwf   ESKA_NOCAP
                      00746         
                      00747         Delay50N delayR, 0x05
  0000                    M         local   loop
0004B8 0E05               M         movlw   0x05
0004BA 6E1A               M         movwf   delayR
                          M 
0004BC                    M loop
0004BC EC?? F???          M         call    Delay50ms
0004C0 2E1A               M         decfsz  delayR
0004C2 EF?? F???          M         goto    loop
                      00748         ; request yop
0004C6 0E04           00749         movlw   d'4'
0004C8 CFE8 F???      00750         movff   WREG, databyte
0004CC EC?? F???      00751         call    WRITE_ARDUINO
                      00752         Delay50N delayR, 0x05
  0000                    M         local   loop
0004D0 0E05               M         movlw   0x05
0004D2 6E1A               M         movwf   delayR
                          M 
0004D4                    M loop
0004D4 EC?? F???          M         call    Delay50ms
0004D8 2E1A               M         decfsz  delayR
0004DA EF?? F???          M         goto    loop
                      00753         ; get yop
0004DE EC?? F???      00754         call    READ_ARDUINO
0004E2 6E2F           00755         movwf   YOP
                      00756         
                      00757         Delay50N delayR, 0x05
  0000                    M         local   loop
0004E4 0E05               M         movlw   0x05
0004E6 6E1A               M         movwf   delayR
                          M 
0004E8                    M loop
0004E8 EC?? F???          M         call    Delay50ms
0004EC 2E1A               M         decfsz  delayR
0004EE EF?? F???          M         goto    loop
                      00758         ; request eska
0004F2 0E05           00759         movlw   d'5'
0004F4 CFE8 F???      00760         movff   WREG, databyte
0004F8 EC?? F???      00761         call    WRITE_ARDUINO
                      00762         Delay50N delayR, 0x05
  0000                    M         local   loop
0004FC 0E05               M         movlw   0x05
0004FE 6E1A               M         movwf   delayR
                          M 
000500                    M loop
000500 EC?? F???          M         call    Delay50ms
000504 2E1A               M         decfsz  delayR
000506 EF?? F???          M         goto    loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00763         ; get yop without a cap
00050A EC?? F???      00764         call    READ_ARDUINO
00050E 6E30           00765         movwf   YOP_NOCAP
                      00766         
000510 EC?? F???      00767         call    SaveData
000514 EF?? F???      00768         goto    LOG
                      00769 
                      00770 ;*******************************************************************************
                      00771 ; sorting statistics log mode
                      00772 ;*******************************************************************************
                      00773         
000518                00774 LOG
000518 6A38           00775         clrf    inStandby
00051A EC?? F???      00776         call    ClrLCD
                      00777         Display Log1
  0000                    M         local   loop
00051E 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000520 6EF8               M         movwf   TBLPTRU
000522 0E??               M         movlw   high Log1       ; Move Table<15:8>
000524 6EF7               M         movwf   TBLPTRH
000526 0E??               M         movlw   low Log1        ; Move Table<7:0>
000528 6EF6               M         movwf   TBLPTRL
00052A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00052C 50F5               M         movf    TABLAT, W
00052E                    M loop
00052E EC?? F???          M         call    WR_DATA         ; write to LCD
000532 000B               M         tblrd+*                 ; next row in table
000534 50F5               M         movf    TABLAT, W
000536 E1??               M         bnz     loop
                      00778 
                      00779         ; display most recent run data
000538 0E0A           00780         movlw   d'10'
00053A 6E21           00781         movwf   L_EE
00053C EC?? F???      00782         call    DisplayExeTime
                      00783 
000540 EC?? F???      00784         call    LCD_L2
000544 0E0D           00785         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000546 6E21           00786         movwf   L_EE
000548 EC?? F???      00787         call    DispOpSort
                      00788 
00054C                00789 HOLD_LOG
00054C EC?? F???      00790         call    READ_KEY
                      00791         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000550 0E07               M         movlw   keyB                ; poll for mode
000552 6210               M         cpfseq  KEY                 ; check this against key press
000554 EF?? F???          M         goto    Exit
                          M 
000558                    M Next
000558 6A89               M         clrf    LATA                ; clear pins before proceeding
00055A 6A8A               M         clrf    LATB
00055C 6A8B               M         clrf    LATC
00055E 6A8C               M         clrf    LATD
000560 EF?? F???          M         goto    LOG_INFO
                          M 
000564                    M Exit
000564 0000               M         nop
                      00792         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000566 0E0D               M         movlw   key0                ; poll for mode
000568 6210               M         cpfseq  KEY                 ; check this against key press
00056A EF?? F???          M         goto    Exit
                          M 
00056E                    M Next
00056E 6A89               M         clrf    LATA                ; clear pins before proceeding
000570 6A8A               M         clrf    LATB
000572 6A8B               M         clrf    LATC
000574 6A8C               M         clrf    LATD
000576 EF?? F???          M         goto    STANDBY
                          M 
00057A                    M Exit
00057A 0000               M         nop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00057C D???           00793         bra     HOLD_LOG
                      00794 
00057E                00795 LOG_INFO
00057E EC?? F???      00796         call    ClrLCD
000582 6A21           00797         clrf    L_EE
000584 EC?? F???      00798         call    DispOpRTC
                      00799         
000588 EC?? F???      00800         call    LCD_L2
                      00801         Display LogInfo2
  0000                    M         local   loop
00058C 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00058E 6EF8               M         movwf   TBLPTRU
000590 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000592 6EF7               M         movwf   TBLPTRH
000594 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000596 6EF6               M         movwf   TBLPTRL
000598 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00059A 50F5               M         movf    TABLAT, W
00059C                    M loop
00059C EC?? F???          M         call    WR_DATA         ; write to LCD
0005A0 000B               M         tblrd+*                 ; next row in table
0005A2 50F5               M         movf    TABLAT, W
0005A4 E1??               M         bnz     loop
0005A6 6A20           00802         clrf    H_EE
0005A8 6A21           00803         clrf    L_EE
0005AA                00804 HOLD_LOG_INFO
0005AA EC?? F???      00805         call    READ_KEY
                      00806         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005AE 0E0D               M         movlw   key0                ; poll for mode
0005B0 6210               M         cpfseq  KEY                 ; check this against key press
0005B2 EF?? F???          M         goto    Exit
                          M 
0005B6                    M Next
0005B6 6A89               M         clrf    LATA                ; clear pins before proceeding
0005B8 6A8A               M         clrf    LATB
0005BA 6A8B               M         clrf    LATC
0005BC 6A8C               M         clrf    LATD
0005BE EF?? F???          M         goto    LOG
                          M 
0005C2                    M Exit
0005C2 0000               M         nop
0005C4 D???           00807         bra     HOLD_LOG
                      00808         
                      00809 ;*******************************************************************************
                      00810 ; permanent logs
                      00811 ;*******************************************************************************
                      00812 
0005C6                00813 PERM_LOG
0005C6 6838           00814         setf    inStandby
0005C8 EC?? F???      00815         call    ClrLCD
                      00816         Display PermLog1
  0000                    M         local   loop
0005CC 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005CE 6EF8               M         movwf   TBLPTRU
0005D0 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005D2 6EF7               M         movwf   TBLPTRH
0005D4 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005D6 6EF6               M         movwf   TBLPTRL
0005D8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005DA 50F5               M         movf    TABLAT, W
0005DC                    M loop
0005DC EC?? F???          M         call    WR_DATA         ; write to LCD
0005E0 000B               M         tblrd+*                 ; next row in table
0005E2 50F5               M         movf    TABLAT, W
0005E4 E1??               M         bnz     loop
0005E6 EC?? F???      00817         call    LCD_L2
                      00818         Display PermLog2
  0000                    M         local   loop
0005EA 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0005EC 6EF8               M         movwf   TBLPTRU
0005EE 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0005F0 6EF7               M         movwf   TBLPTRH
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005F2 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0005F4 6EF6               M         movwf   TBLPTRL
0005F6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005F8 50F5               M         movf    TABLAT, W
0005FA                    M loop
0005FA EC?? F???          M         call    WR_DATA         ; write to LCD
0005FE 000B               M         tblrd+*                 ; next row in table
000600 50F5               M         movf    TABLAT, W
000602 E1??               M         bnz     loop
                      00819         
000604                00820 HOLD_PERM_LOG
000604 EC?? F???      00821         call    READ_KEY
                      00822         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000608 0E0D               M         movlw   key0                ; poll for mode
00060A 6210               M         cpfseq  KEY                 ; check this against key press
00060C EF?? F???          M         goto    Exit
                          M 
000610                    M Next
000610 6A89               M         clrf    LATA                ; clear pins before proceeding
000612 6A8A               M         clrf    LATB
000614 6A8B               M         clrf    LATC
000616 6A8C               M         clrf    LATD
000618 EF?? F???          M         goto    STANDBY
                          M 
00061C                    M Exit
00061C 0000               M         nop
                      00823         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00061E 0E00               M         movlw   key1                ; poll for mode
000620 6210               M         cpfseq  KEY                 ; check this against key press
000622 EF?? F???          M         goto    Exit
                          M 
000626                    M Next
000626 6A89               M         clrf    LATA                ; clear pins before proceeding
000628 6A8A               M         clrf    LATB
00062A 6A8B               M         clrf    LATC
00062C 6A8C               M         clrf    LATD
00062E EF?? F???          M         goto    PLOG
                          M 
000632                    M Exit
000632 0000               M         nop
                      00824         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000634 0E01               M         movlw   key2                ; poll for mode
000636 6210               M         cpfseq  KEY                 ; check this against key press
000638 EF?? F???          M         goto    Exit
                          M 
00063C                    M Next
00063C 6A89               M         clrf    LATA                ; clear pins before proceeding
00063E 6A8A               M         clrf    LATB
000640 6A8B               M         clrf    LATC
000642 6A8C               M         clrf    LATD
000644 EF?? F???          M         goto    PLOG
                          M 
000648                    M Exit
000648 0000               M         nop
                      00825         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00064A 0E02               M         movlw   key3                ; poll for mode
00064C 6210               M         cpfseq  KEY                 ; check this against key press
00064E EF?? F???          M         goto    Exit
                          M 
000652                    M Next
000652 6A89               M         clrf    LATA                ; clear pins before proceeding
000654 6A8A               M         clrf    LATB
000656 6A8B               M         clrf    LATC
000658 6A8C               M         clrf    LATD
00065A EF?? F???          M         goto    PLOG
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00065E                    M Exit
00065E 0000               M         nop
                      00826         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000660 0E04               M         movlw   key4                ; poll for mode
000662 6210               M         cpfseq  KEY                 ; check this against key press
000664 EF?? F???          M         goto    Exit
                          M 
000668                    M Next
000668 6A89               M         clrf    LATA                ; clear pins before proceeding
00066A 6A8A               M         clrf    LATB
00066C 6A8B               M         clrf    LATC
00066E 6A8C               M         clrf    LATD
000670 EF?? F???          M         goto    PLOG
                          M 
000674                    M Exit
000674 0000               M         nop
                      00827         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000676 0E05               M         movlw   key5                ; poll for mode
000678 6210               M         cpfseq  KEY                 ; check this against key press
00067A EF?? F???          M         goto    Exit
                          M 
00067E                    M Next
00067E 6A89               M         clrf    LATA                ; clear pins before proceeding
000680 6A8A               M         clrf    LATB
000682 6A8B               M         clrf    LATC
000684 6A8C               M         clrf    LATD
000686 EF?? F???          M         goto    PLOG
                          M 
00068A                    M Exit
00068A 0000               M         nop
                      00828         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
00068C 0E06               M         movlw   key6                ; poll for mode
00068E 6210               M         cpfseq  KEY                 ; check this against key press
000690 EF?? F???          M         goto    Exit
                          M 
000694                    M Next
000694 6A89               M         clrf    LATA                ; clear pins before proceeding
000696 6A8A               M         clrf    LATB
000698 6A8B               M         clrf    LATC
00069A 6A8C               M         clrf    LATD
00069C EF?? F???          M         goto    PLOG
                          M 
0006A0                    M Exit
0006A0 0000               M         nop
                      00829         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0006A2 0E08               M         movlw   key7                ; poll for mode
0006A4 6210               M         cpfseq  KEY                 ; check this against key press
0006A6 EF?? F???          M         goto    Exit
                          M 
0006AA                    M Next
0006AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006AC 6A8A               M         clrf    LATB
0006AE 6A8B               M         clrf    LATC
0006B0 6A8C               M         clrf    LATD
0006B2 EF?? F???          M         goto    PLOG
                          M 
0006B6                    M Exit
0006B6 0000               M         nop
                      00830         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0006B8 0E09               M         movlw   key8                ; poll for mode
0006BA 6210               M         cpfseq  KEY                 ; check this against key press
0006BC EF?? F???          M         goto    Exit
                          M 
0006C0                    M Next
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006C2 6A8A               M         clrf    LATB
0006C4 6A8B               M         clrf    LATC
0006C6 6A8C               M         clrf    LATD
0006C8 EF?? F???          M         goto    PLOG
                          M 
0006CC                    M Exit
0006CC 0000               M         nop
                      00831         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0006CE 0E0A               M         movlw   key9                ; poll for mode
0006D0 6210               M         cpfseq  KEY                 ; check this against key press
0006D2 EF?? F???          M         goto    Exit
                          M 
0006D6                    M Next
0006D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D8 6A8A               M         clrf    LATB
0006DA 6A8B               M         clrf    LATC
0006DC 6A8C               M         clrf    LATD
0006DE EF?? F???          M         goto    PLOG
                          M 
0006E2                    M Exit
0006E2 0000               M         nop
0006E4 D???           00832         bra HOLD_PERM_LOG
                      00833         
0006E6                00834 PLOG
0006E6 6A38           00835         clrf    inStandby
0006E8 EC?? F???      00836         call    ClrLCD
                      00837         Display PermLog1
  0000                    M         local   loop
0006EC 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0006EE 6EF8               M         movwf   TBLPTRU
0006F0 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0006F2 6EF7               M         movwf   TBLPTRH
0006F4 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0006F6 6EF6               M         movwf   TBLPTRL
0006F8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006FA 50F5               M         movf    TABLAT, W
0006FC                    M loop
0006FC EC?? F???          M         call    WR_DATA         ; write to LCD
000700 000B               M         tblrd+*                 ; next row in table
000702 50F5               M         movf    TABLAT, W
000704 E1??               M         bnz     loop
                      00838         
                      00839         ; find the key press value
000706 C010 FFE8      00840         movff   KEY, WREG
00070A 2AE8           00841         incf    WREG        ; W = KEY+1
00070C 6E17           00842         movwf   temp
                      00843         
00070E 42E8           00844         rrncf   WREG        ; division by 4
000710 9EE8           00845         bcf     WREG, 7     ; clear last bit, overflow from rotate
000712 42E8           00846         rrncf   WREG        
000714 9EE8           00847         bcf     WREG, 7
000716 5E17           00848         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000718 C017 FFE8      00849         movff   temp, WREG
00071C C017 F011      00850         movff   temp, temp_KEY
000720 0D15           00851         mullw   d'21'       ; indexed as mutliples of 21
                      00852 
000722                00853 displayNum
000722 C011 FFE8      00854         movff   temp_KEY, WREG
000726 0F30           00855         addlw   0x30
000728 EC?? F???      00856         call    WR_DATA
00072C 0E3A           00857         movlw   ":"
00072E EC?? F???      00858         call    WR_DATA
000732 0E20           00859         movlw   " "
000734 EC?? F???      00860         call    WR_DATA
                      00861         
000738 CFF3 F021      00862         movff   PRODL, L_EE
00073C 0E00           00863         movlw   d'0'
00073E 2621           00864         addwf   L_EE
                      00865         READEE  OP_sec, H_EE, L_EE
000740 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000744 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000748 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00074A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00074C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00074E CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000752 2A21           00866         incf    L_EE
                      00867         READEE  OP_INT, H_EE, L_EE
000754 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000758 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00075C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00075E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000760 80A6               M         bsf     EECON1, RD          ; read EEPROM
000762 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000766 2A21           00868         incf    L_EE
000768 EC?? F???      00869         call    DisplayExeTime
00076C CFF3 F021      00870         movff   PRODL, L_EE
                      00871         
                      00872         ; reset eeprom to beginning
000770 EC?? F???      00873         call    LCD_L2
000774 CFF3 F021      00874         movff   PRODL, L_EE
000778 EC?? F???      00875         call    DispOpRTC
                      00876         
00077C                00877 HOLD_PLOG
00077C EC?? F???      00878         call    READ_KEY
                      00879         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
000780 0E03               M         movlw   keyA                ; poll for mode
000782 6210               M         cpfseq  KEY                 ; check this against key press
000784 EF?? F???          M         goto    Exit
                          M 
000788                    M Next
000788 6A89               M         clrf    LATA                ; clear pins before proceeding
00078A 6A8A               M         clrf    LATB
00078C 6A8B               M         clrf    LATC
00078E 6A8C               M         clrf    LATD
000790 EF?? F???          M         goto    PLOG_DETAILS
                          M 
000794                    M Exit
000794 0000               M         nop
                      00880         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000796 0E0D               M         movlw   key0                ; poll for mode
000798 6210               M         cpfseq  KEY                 ; check this against key press
00079A EF?? F???          M         goto    Exit
                          M 
00079E                    M Next
00079E 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A0 6A8A               M         clrf    LATB
0007A2 6A8B               M         clrf    LATC
0007A4 6A8C               M         clrf    LATD
0007A6 EF?? F???          M         goto    PERM_LOG
                          M 
0007AA                    M Exit
0007AA 0000               M         nop
0007AC D???           00881         bra HOLD_PLOG
                      00882         
0007AE                00883 PLOG_DETAILS
0007AE EC?? F???      00884         call    ClrLCD
                      00885         
                      00886         Display Log1
  0000                    M         local   loop
0007B2 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0007B4 6EF8               M         movwf   TBLPTRU
0007B6 0E??               M         movlw   high Log1       ; Move Table<15:8>
0007B8 6EF7               M         movwf   TBLPTRH
0007BA 0E??               M         movlw   low Log1        ; Move Table<7:0>
0007BC 6EF6               M         movwf   TBLPTRL
0007BE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007C0 50F5               M         movf    TABLAT, W
0007C2                    M loop
0007C2 EC?? F???          M         call    WR_DATA         ; write to LCD
0007C6 000B               M         tblrd+*                 ; next row in table
0007C8 50F5               M         movf    TABLAT, W
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007CA E1??               M         bnz     loop
0007CC EC?? F???      00887         call    DisplayExeTime
                      00888         
0007D0 EC?? F???      00889         call    LCD_L2
0007D4 EC?? F???      00890         call    DispOpSort
                      00891         
0007D8                00892 HOLD_PLOG_DETAILS
0007D8 EC?? F???      00893         call    READ_KEY
                      00894         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007DC 0E0D               M         movlw   key0                ; poll for mode
0007DE 6210               M         cpfseq  KEY                 ; check this against key press
0007E0 EF?? F???          M         goto    Exit
                          M 
0007E4                    M Next
0007E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0007E6 6A8A               M         clrf    LATB
0007E8 6A8B               M         clrf    LATC
0007EA 6A8C               M         clrf    LATD
0007EC EF?? F???          M         goto    PERM_LOG
                          M 
0007F0                    M Exit
0007F0 0000               M         nop
0007F2 D???           00895         bra HOLD_PLOG_DETAILS
                      00896         
                      00897 ;*******************************************************************************
                      00898 ; pc interface
                      00899 ;*******************************************************************************
                      00900 
0007F4                00901 PC_MODE
0007F4 6838           00902         setf    inStandby
0007F6 EC?? F???      00903         call    ClrLCD
                      00904         Display PC1
  0000                    M         local   loop
0007FA 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0007FC 6EF8               M         movwf   TBLPTRU
0007FE 0E??               M         movlw   high PC1        ; Move Table<15:8>
000800 6EF7               M         movwf   TBLPTRH
000802 0E??               M         movlw   low PC1         ; Move Table<7:0>
000804 6EF6               M         movwf   TBLPTRL
000806 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000808 50F5               M         movf    TABLAT, W
00080A                    M loop
00080A EC?? F???          M         call    WR_DATA         ; write to LCD
00080E 000B               M         tblrd+*                 ; next row in table
000810 50F5               M         movf    TABLAT, W
000812 E1??               M         bnz     loop
000814 EC?? F???      00905         call    LCD_L2
                      00906         Display PC2
  0000                    M         local   loop
000818 0E??               M         movlw   upper PC2       ; Move Table<20:16>
00081A 6EF8               M         movwf   TBLPTRU
00081C 0E??               M         movlw   high PC2        ; Move Table<15:8>
00081E 6EF7               M         movwf   TBLPTRH
000820 0E??               M         movlw   low PC2         ; Move Table<7:0>
000822 6EF6               M         movwf   TBLPTRL
000824 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000826 50F5               M         movf    TABLAT, W
000828                    M loop
000828 EC?? F???          M         call    WR_DATA         ; write to LCD
00082C 000B               M         tblrd+*                 ; next row in table
00082E 50F5               M         movf    TABLAT, W
000830 E1??               M         bnz     loop
000832 CFF9 F029      00907         movff   PCL, PC_PCL
000836 CFFA F02A      00908         movff   PCLATH, PC_PCLATH
00083A CFFB F02B      00909         movff   PCLATU, PC_PCLATU
                      00910         
00083E                00911 HOLD_PC
00083E EC?? F???      00912         call    READ_KEY
                      00913         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000842 0E0D               M         movlw   key0                ; poll for mode
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000844 6210               M         cpfseq  KEY                 ; check this against key press
000846 EF?? F???          M         goto    Exit
                          M 
00084A                    M Next
00084A 6A89               M         clrf    LATA                ; clear pins before proceeding
00084C 6A8A               M         clrf    LATB
00084E 6A8B               M         clrf    LATC
000850 6A8C               M         clrf    LATD
000852 EF?? F???          M         goto    STANDBY
                          M 
000856                    M Exit
000856 0000               M         nop
                      00914         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000858 0E0E               M         movlw   keyH                ; poll for mode
00085A 6210               M         cpfseq  KEY                 ; check this against key press
00085C EF?? F???          M         goto    Exit
                          M 
000860                    M Next
000860 6A89               M         clrf    LATA                ; clear pins before proceeding
000862 6A8A               M         clrf    LATB
000864 6A8B               M         clrf    LATC
000866 6A8C               M         clrf    LATD
000868 EF?? F???          M         goto    PC_TRANSFER
                          M 
00086C                    M Exit
00086C 0000               M         nop
00086E D???           00915         bra     HOLD_PC
                      00916 
000870                00917 PC_TRANSFER
000870 6A38           00918         clrf    inStandby
000872 6828           00919         setf    transferring
000874 EC?? F???      00920         call    ClrLCD
                      00921         Display PCTransfer
  0000                    M         local   loop
000878 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
00087A 6EF8               M         movwf   TBLPTRU
00087C 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
00087E 6EF7               M         movwf   TBLPTRH
000880 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000882 6EF6               M         movwf   TBLPTRL
000884 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000886 50F5               M         movf    TABLAT, W
000888                    M loop
000888 EC?? F???          M         call    WR_DATA         ; write to LCD
00088C 000B               M         tblrd+*                 ; next row in table
00088E 50F5               M         movf    TABLAT, W
000890 E1??               M         bnz     loop
000892 EC?? F???      00922         call    DataUSART
000896 6A28           00923         clrf    transferring
000898 EF?? F???      00924         goto    STANDBY
                      00925         
                      00926 ;*******************************************************************************
                      00927 ; subroutines
                      00928 ;*******************************************************************************
                      00929 
00089C                00930 SaveData
00089C C02D FFE8      00931         movff       ESKA, WREG
0008A0 0F30           00932         addlw       0x30
                      00933         WriteEE     WREG, H_EE, L_EE
0008A2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008A6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008AA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008AE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008B0 D???               M         bra     $-2
                          M 
0008B2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008B4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008B6 84A6               M         bsf     EECON1, WREN        ; enable write
0008B8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008BA 98A1               M         bcf     PIR2, EEIF
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008BC 0E55               M         movlw   0x55
0008BE 6EA7               M         movwf   EECON2              ; write 55h
0008C0 0EAA               M         movlw   0xaa
0008C2 6EA7               M         movwf   EECON2              ; write 0xaa
0008C4 82A6               M         bsf     EECON1, WR          ; begin write
0008C6 B2A6               M         btfsc   EECON1, WR
0008C8 D???               M         bra     $-2
                          M 
0008CA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008CC 94A6               M         bcf     EECON1, WREN        ; disable writes
0008CE 2A21           00934         incf        L_EE
                      00935         
0008D0 C02E FFE8      00936         movff       ESKA_NOCAP, WREG
0008D4 0F30           00937         addlw       0x30
                      00938         WriteEE     WREG, H_EE, L_EE
0008D6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008DA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008DE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008E2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008E4 D???               M         bra     $-2
                          M 
0008E6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008E8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008EA 84A6               M         bsf     EECON1, WREN        ; enable write
0008EC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008EE 98A1               M         bcf     PIR2, EEIF
                          M 
0008F0 0E55               M         movlw   0x55
0008F2 6EA7               M         movwf   EECON2              ; write 55h
0008F4 0EAA               M         movlw   0xaa
0008F6 6EA7               M         movwf   EECON2              ; write 0xaa
0008F8 82A6               M         bsf     EECON1, WR          ; begin write
0008FA B2A6               M         btfsc   EECON1, WR
0008FC D???               M         bra     $-2
                          M 
0008FE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000900 94A6               M         bcf     EECON1, WREN        ; disable writes
000902 2A21           00939         incf        L_EE
                      00940         
000904 C02F FFE8      00941         movff       YOP, WREG
000908 0F30           00942         addlw       0x30
                      00943         WriteEE     WREG, H_EE, L_EE
00090A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00090E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000912 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000916 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000918 D???               M         bra     $-2
                          M 
00091A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00091C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00091E 84A6               M         bsf     EECON1, WREN        ; enable write
000920 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000922 98A1               M         bcf     PIR2, EEIF
                          M 
000924 0E55               M         movlw   0x55
000926 6EA7               M         movwf   EECON2              ; write 55h
000928 0EAA               M         movlw   0xaa
00092A 6EA7               M         movwf   EECON2              ; write 0xaa
00092C 82A6               M         bsf     EECON1, WR          ; begin write
00092E B2A6               M         btfsc   EECON1, WR
000930 D???               M         bra     $-2
                          M 
000932 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000934 94A6               M         bcf     EECON1, WREN        ; disable writes
000936 2A21           00944         incf        L_EE
                      00945         
000938 C030 FFE8      00946         movff       YOP_NOCAP, WREG
00093C 0F30           00947         addlw       0x30
                      00948         WriteEE     WREG, H_EE, L_EE
00093E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000942 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000946 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00094A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00094C D???               M         bra     $-2
                          M 
00094E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000950 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000952 84A6               M         bsf     EECON1, WREN        ; enable write
000954 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000956 98A1               M         bcf     PIR2, EEIF
                          M 
000958 0E55               M         movlw   0x55
00095A 6EA7               M         movwf   EECON2              ; write 55h
00095C 0EAA               M         movlw   0xaa
00095E 6EA7               M         movwf   EECON2              ; write 0xaa
000960 82A6               M         bsf     EECON1, WR          ; begin write
000962 B2A6               M         btfsc   EECON1, WR
000964 D???               M         bra     $-2
                          M 
000966 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000968 94A6               M         bcf     EECON1, WREN        ; disable writes
00096A 2A21           00949         incf        L_EE
                      00950         
00096C C037 FFE8      00951         movff       STOP_CONDITION, WREG
000970 0F30           00952         addlw       0x30
                      00953         WriteEE     WREG, H_EE, L_EE
000972 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000976 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00097A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00097E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000980 D???               M         bra     $-2
                          M 
000982 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000984 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000986 84A6               M         bsf     EECON1, WREN        ; enable write
000988 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00098A 98A1               M         bcf     PIR2, EEIF
                          M 
00098C 0E55               M         movlw   0x55
00098E 6EA7               M         movwf   EECON2              ; write 55h
000990 0EAA               M         movlw   0xaa
000992 6EA7               M         movwf   EECON2              ; write 0xaa
000994 82A6               M         bsf     EECON1, WR          ; begin write
000996 B2A6               M         btfsc   EECON1, WR
000998 D???               M         bra     $-2
                          M 
00099A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00099C 94A6               M         bcf     EECON1, WREN        ; disable writes
00099E 2A21           00954         incf        L_EE
                      00955         
0009A0 0E00           00956         movlw       d'0'
0009A2 6E20           00957         movwf       H_EE
0009A4 0EA8           00958         movlw       d'168'              ; take d'168' as last
0009A6 6E21           00959         movwf       L_EE
0009A8 0E00           00960         movlw       d'0'
0009AA 6E23           00961         movwf       tempH_EE
0009AC 0EDC           00962         movlw       d'220'              ; temp for low constant
0009AE 6E24           00963         movwf       tempL_EE
                      00964         
0009B0 6A16           00965         clrf        counter2
0009B2 6A15           00966         clrf        counter
                      00967         
0009B4                00968 ShiftLoop
0009B4 2A15           00969         incf            counter
                      00970         READEE          REG_EE, H_EE, L_EE
0009B6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0009BA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0009BE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009C0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009C2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009C4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0009C8 0E15           00971         movlw           d'21'
0009CA 2621           00972         addwf           L_EE
                      00973         WriteEE         REG_EE, H_EE, L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009CC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009D0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009D4 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0009D8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009DA D???               M         bra     $-2
                          M 
0009DC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009DE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009E0 84A6               M         bsf     EECON1, WREN        ; enable write
0009E2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009E4 98A1               M         bcf     PIR2, EEIF
                          M 
0009E6 0E55               M         movlw   0x55
0009E8 6EA7               M         movwf   EECON2              ; write 55h
0009EA 0EAA               M         movlw   0xaa
0009EC 6EA7               M         movwf   EECON2              ; write 0xaa
0009EE 82A6               M         bsf     EECON1, WR          ; begin write
0009F0 B2A6               M         btfsc   EECON1, WR
0009F2 D???               M         bra     $-2
                          M 
0009F4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009F6 94A6               M         bcf     EECON1, WREN        ; disable writes
0009F8 0E14           00974         movlw           d'20'
0009FA 5E21           00975         subwf           L_EE
0009FC 0E15           00976         movlw           d'21'
0009FE 6215           00977         cpfseq          counter
000A00 EF?? F???      00978         goto            ShiftLoop
                      00979         
                      00980         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A04 0E2A           00981         movlw           d'42'
000A06 5E21           00982         subwf           L_EE
000A08 0EDC           00983         movlw           d'220'
000A0A 6E24           00984         movwf           tempL_EE
000A0C 6A15           00985         clrf            counter
000A0E 2A16           00986         incf            counter2
000A10 0E09           00987         movlw           d'9'
000A12 6216           00988         cpfseq          counter2        ; Skip if 9 shifts were made
000A14 EF?? F???      00989         goto            ShiftLoop
                      00990 
000A18 0012           00991         return
                      00992         
000A1A                00993 RTC_INIT
                      00994         ; set sda and scl to high
000A1A 9882           00995         bcf     PORTC, 4
000A1C 9682           00996         bcf     PORTC, 3
000A1E 8894           00997         bsf     TRISC, 4
000A20 8694           00998         bsf     TRISC, 3
                      00999         
000A22 EC?? F???      01000         call    INIT_RTC
                      01001         
                      01002         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A26 0012           01003 return
                      01004         
000A28                01005 SAVE_TIME
                      01006         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A28 0E02               M     movlw   0x02
000A2A 6E??               M     movwf   regaddress
000A2C EC?? F???          M     call    read_rtc
000A30 C??? FFE8          M     movff   datachar, WREG
000A34 EC?? F???          M     call    rtc_convert
                      01007         rtc_read    0x02        ; hours
000A38 0E02               M     movlw   0x02
000A3A 6E??               M     movwf   regaddress
000A3C EC?? F???          M     call    read_rtc
000A40 C??? FFE8          M     movff   datachar, WREG
000A44 EC?? F???          M     call    rtc_convert
000A48 EC?? F???      01008         call    WriteEE_RTC
                      01009         rtc_read    0x01        ; minutes
000A4C 0E01               M     movlw   0x01
000A4E 6E??               M     movwf   regaddress
000A50 EC?? F???          M     call    read_rtc
000A54 C??? FFE8          M     movff   datachar, WREG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A58 EC?? F???          M     call    rtc_convert
000A5C EC?? F???      01010         call    WriteEE_RTC
                      01011         rtc_read    0x06        ; years
000A60 0E06               M     movlw   0x06
000A62 6E??               M     movwf   regaddress
000A64 EC?? F???          M     call    read_rtc
000A68 C??? FFE8          M     movff   datachar, WREG
000A6C EC?? F???          M     call    rtc_convert
000A70 EC?? F???      01012         call    WriteEE_RTC
                      01013         rtc_read    0x05        ; months
000A74 0E05               M     movlw   0x05
000A76 6E??               M     movwf   regaddress
000A78 EC?? F???          M     call    read_rtc
000A7C C??? FFE8          M     movff   datachar, WREG
000A80 EC?? F???          M     call    rtc_convert
000A84 EC?? F???      01014         call    WriteEE_RTC
                      01015         rtc_read    0x04        ; days
000A88 0E04               M     movlw   0x04
000A8A 6E??               M     movwf   regaddress
000A8C EC?? F???          M     call    read_rtc
000A90 C??? FFE8          M     movff   datachar, WREG
000A94 EC?? F???          M     call    rtc_convert
000A98 EC?? F???      01016         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000A9C 0012           01017 return
                      01018         
000A9E                01019 SAVE_EXE_TIME
                      01020         
Warning[202]: Argument out of range.  Least significant bits used.
000A9E 3818           01021         swapf   OP_sec, WREG    ; 100's seconds
000AA0 6E17           01022         movwf   temp
000AA2 0E0F           01023         movlw   0x0f
000AA4 1617           01024         andwf   temp
000AA6 C017 FFE8      01025         movff   temp, WREG
000AAA 0F30           01026         addlw   0x30    
                      01027         WriteEE WREG, H_EE, L_EE
000AAC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AB0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AB4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AB8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000ABA D???               M         bra     $-2
                          M 
000ABC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000ABE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AC0 84A6               M         bsf     EECON1, WREN        ; enable write
000AC2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000AC4 98A1               M         bcf     PIR2, EEIF
                          M 
000AC6 0E55               M         movlw   0x55
000AC8 6EA7               M         movwf   EECON2              ; write 55h
000ACA 0EAA               M         movlw   0xaa
000ACC 6EA7               M         movwf   EECON2              ; write 0xaa
000ACE 82A6               M         bsf     EECON1, WR          ; begin write
000AD0 B2A6               M         btfsc   EECON1, WR
000AD2 D???               M         bra     $-2
                          M 
000AD4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AD6 94A6               M         bcf     EECON1, WREN        ; disable writes
000AD8 2A21           01028         incf    L_EE
                      01029         
000ADA C018 F017      01030         movff   OP_sec, temp    ; 10's seconds
000ADE 0E0F           01031         movlw   0x0f
000AE0 1617           01032         andwf   temp            ; Temp = lower nibble of Op_sec
000AE2 C017 FFE8      01033         movff   temp, WREG      ; W = Temp
000AE6 0F30           01034         addlw   0x30            ; Convert to ASCII
                      01035         WriteEE WREG, H_EE, L_EE
000AE8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AEC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AF0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AF4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AF6 D???               M         bra     $-2
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AF8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AFA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AFC 84A6               M         bsf     EECON1, WREN        ; enable write
000AFE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B00 98A1               M         bcf     PIR2, EEIF
                          M 
000B02 0E55               M         movlw   0x55
000B04 6EA7               M         movwf   EECON2              ; write 55h
000B06 0EAA               M         movlw   0xaa
000B08 6EA7               M         movwf   EECON2              ; write 0xaa
000B0A 82A6               M         bsf     EECON1, WR          ; begin write
000B0C B2A6               M         btfsc   EECON1, WR
000B0E D???               M         bra     $-2
                          M 
000B10 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B12 94A6               M         bcf     EECON1, WREN        ; disable writes
000B14 2A21           01036         incf    L_EE
                      01037         
Warning[202]: Argument out of range.  Least significant bits used.
000B16 3819           01038         swapf   OP_INT, WREG    ;1's seconds
000B18 6E17           01039         movwf   temp
000B1A 0E0F           01040         movlw   0x0f
000B1C 1617           01041         andwf   temp
000B1E C017 FFE8      01042         movff   temp, WREG
000B22 0F30           01043         addlw   0x30
                      01044         WriteEE WREG, H_EE, L_EE
000B24 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B28 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B2C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B30 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B32 D???               M         bra     $-2
                          M 
000B34 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B36 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B38 84A6               M         bsf     EECON1, WREN        ; enable write
000B3A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B3C 98A1               M         bcf     PIR2, EEIF
                          M 
000B3E 0E55               M         movlw   0x55
000B40 6EA7               M         movwf   EECON2              ; write 55h
000B42 0EAA               M         movlw   0xaa
000B44 6EA7               M         movwf   EECON2              ; write 0xaa
000B46 82A6               M         bsf     EECON1, WR          ; begin write
000B48 B2A6               M         btfsc   EECON1, WR
000B4A D???               M         bra     $-2
                          M 
000B4C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B4E 94A6               M         bcf     EECON1, WREN        ; disable writes
000B50 2A21           01045         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000B52 0012           01046 return
                      01047         
                      01048                 
000B54                01049 DISPLAY_RTC
                      01050         ; display data in this format hh/minmin/yy yy/mm/dd
                      01051         
                      01052         rtc_read    0x02            ; 0x02 from DS1307 - hours
000B54 0E02               M     movlw   0x02
000B56 6E??               M     movwf   regaddress
000B58 EC?? F???          M     call    read_rtc
000B5C C??? FFE8          M     movff   datachar, WREG
000B60 EC?? F???          M     call    rtc_convert
000B64 C??? FFE8      01053         movff   tens_digit,WREG
000B68 EC?? F???      01054         call    WR_DATA
000B6C C??? FFE8      01055         movff   ones_digit,WREG
000B70 EC?? F???      01056         call    WR_DATA
000B74 0E68           01057         movlw   "h"
000B76 EC?? F???      01058         call    WR_DATA
                      01059         
                      01060         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000B7A 0E01               M     movlw   0x01
000B7C 6E??               M     movwf   regaddress
000B7E EC?? F???          M     call    read_rtc
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B82 C??? FFE8          M     movff   datachar, WREG
000B86 EC?? F???          M     call    rtc_convert
000B8A C??? FFE8      01061         movff   tens_digit,WREG
000B8E EC?? F???      01062         call    WR_DATA
000B92 C??? FFE8      01063         movff   ones_digit,WREG
000B96 EC?? F???      01064         call    WR_DATA
                      01065         
                      01066         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000B9A 0E00               M     movlw   0x00
000B9C 6E??               M     movwf   regaddress
000B9E EC?? F???          M     call    read_rtc
000BA2 C??? FFE8          M     movff   datachar, WREG
000BA6 EC?? F???          M     call    rtc_convert
000BAA C??? FFE8      01067         movff   tens_digit,WREG
000BAE EC?? F???      01068         call    WR_DATA
000BB2 C??? FFE8      01069         movff   ones_digit,WREG
000BB6 EC?? F???      01070         call    WR_DATA
000BBA 0E20           01071         movlw   " "
000BBC EC?? F???      01072         call    WR_DATA
                      01073         
                      01074         rtc_read    0x06            ; 0x06 from DS1307 - years
000BC0 0E06               M     movlw   0x06
000BC2 6E??               M     movwf   regaddress
000BC4 EC?? F???          M     call    read_rtc
000BC8 C??? FFE8          M     movff   datachar, WREG
000BCC EC?? F???          M     call    rtc_convert
000BD0 C??? FFE8      01075         movff   tens_digit,WREG
000BD4 EC?? F???      01076         call    WR_DATA
000BD8 C??? FFE8      01077         movff   ones_digit,WREG
000BDC EC?? F???      01078         call    WR_DATA
000BE0 0E2F           01079         movlw   "/"
000BE2 EC?? F???      01080         call    WR_DATA
                      01081         
                      01082         rtc_read    0x05            ; 0x05 from DS1307 - months
000BE6 0E05               M     movlw   0x05
000BE8 6E??               M     movwf   regaddress
000BEA EC?? F???          M     call    read_rtc
000BEE C??? FFE8          M     movff   datachar, WREG
000BF2 EC?? F???          M     call    rtc_convert
000BF6 C??? FFE8      01083         movff   tens_digit,WREG
000BFA EC?? F???      01084         call    WR_DATA
000BFE C??? FFE8      01085         movff   ones_digit,WREG
000C02 EC?? F???      01086         call    WR_DATA
000C06 0E2F           01087         movlw   "/"
000C08 EC?? F???      01088         call    WR_DATA
                      01089         
                      01090         rtc_read    0x04            ; 0x04 from DS1307 - days
000C0C 0E04               M     movlw   0x04
000C0E 6E??               M     movwf   regaddress
000C10 EC?? F???          M     call    read_rtc
000C14 C??? FFE8          M     movff   datachar, WREG
000C18 EC?? F???          M     call    rtc_convert
000C1C C??? FFE8      01091         movff   tens_digit,WREG
000C20 EC?? F???      01092         call    WR_DATA
000C24 C??? FFE8      01093         movff   ones_digit,WREG
000C28 EC?? F???      01094         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C2C 0012           01095 return
                      01096         
000C2E                01097 SET_TIME
                      01098         rtc_resetAll
                          M 
000C2E 6A??               M     clrf    databyte
000C30 0E06               M     movlw   6
000C32 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000C34                    M     del_loop0
000C34 EC?? F???          M     call    write_rtc
000C38 2E??               M     decfsz  regaddress
000C3A D???               M     bra     del_loop0
000C3C EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01099         
                      01100         rtc_set 0x00,   b'10000000'
000C40 0E00               M     movlw   0x00
000C42 6E??               M     movwf   regaddress
000C44 0E80               M     movlw   b'10000000'
000C46 6E??               M     movwf   databyte
000C48 EC?? F???          M     call    write_rtc
                      01101 
                      01102         rtc_set 0x06,   b'00010111'             ; year 17
000C4C 0E06               M     movlw   0x06
000C4E 6E??               M     movwf   regaddress
000C50 0E17               M     movlw   b'00010111'
000C52 6E??               M     movwf   databyte
000C54 EC?? F???          M     call    write_rtc
                      01103         rtc_set 0x05,   b'00000100'             ; month 04
000C58 0E05               M     movlw   0x05
000C5A 6E??               M     movwf   regaddress
000C5C 0E04               M     movlw   b'00000100'
000C5E 6E??               M     movwf   databyte
000C60 EC?? F???          M     call    write_rtc
                      01104         rtc_set 0x04,   b'00000110'             ; day of month 06
000C64 0E04               M     movlw   0x04
000C66 6E??               M     movwf   regaddress
000C68 0E06               M     movlw   b'00000110'
000C6A 6E??               M     movwf   databyte
000C6C EC?? F???          M     call    write_rtc
                      01105         rtc_set 0x02,   b'00100010'             ; hours 22
000C70 0E02               M     movlw   0x02
000C72 6E??               M     movwf   regaddress
000C74 0E22               M     movlw   b'00100010'
000C76 6E??               M     movwf   databyte
000C78 EC?? F???          M     call    write_rtc
                      01106         rtc_set 0x01,   b'00010101'             ; minutes 13
000C7C 0E01               M     movlw   0x01
000C7E 6E??               M     movwf   regaddress
000C80 0E15               M     movlw   b'00010101'
000C82 6E??               M     movwf   databyte
000C84 EC?? F???          M     call    write_rtc
                      01107         rtc_set 0x00,   b'00000000'             ; seconds 0
000C88 0E00               M     movlw   0x00
000C8A 6E??               M     movwf   regaddress
000C8C 0E00               M     movlw   b'00000000'
000C8E 6E??               M     movwf   databyte
000C90 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000C94 0012           01108 return
                      01109         
000C96                01110 INIT_USART
                      01111         
000C96 8E94           01112         bsf     TRISC, 7        ; set RC7=USART RC
000C98 9C94           01113         bcf     TRISC, 6        ; clear RC6=USART TX
                      01114 
000C9A 0E0F           01115         movlw   15              ; baud rate 9600
000C9C 6EAF           01116         movwf   SPBRG
000C9E 6AAC           01117         clrf    TXSTA
                      01118         
000CA0 6AAB           01119         clrf    RCSTA
000CA2 8EAB           01120         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000CA4 88AB           01121         bsf     RCSTA,CREN      ; continous receive
                      01122         
000CA6 8AAC           01123         bsf     TXSTA, TXEN     ; transmit enabled
000CA8 0012           01124         return
                      01125 
000CAA                01126 DataUSART
000CAA 0E02           01127         movlw   0x02
000CAC EC?? F???      01128         call    USART_WAIT
000CB0 0E0D           01129         movlw   0x0D
000CB2 EC?? F???      01130         call    USART_WAIT
                      01131         
000CB6 6A15           01132         clrf    counter         ; used to cycle through past 9 eeprom logs
000CB8 6A16           01133         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01134         
000CBA                01135 TRANSFER_LOGS
000CBA 0E15           01136         movlw   d'21'           ; logs are 21 bits apart
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CBC 0215           01137         mulwf   counter         ; log number one starts at eeprom address 0
000CBE CFF3 F021      01138         movff   PRODL, L_EE     ; low address now points to count X 21
000CC2 6A16           01139         clrf    counter2
                      01140         
000CC4                01141 TRANSFER_DATA   
                      01142         READEE  WREG, H_EE, L_EE
000CC4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CC8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000CCC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CCE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CD0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CD2 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CD6 EC?? F???      01143         call    USART_WAIT      ; transfer bit
000CDA 2A21           01144         incf    L_EE
                      01145         
000CDC 2A16           01146         incf    counter2
000CDE 0E12           01147         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000CE0 6216           01148         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000CE2 D???           01149         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01150         
000CE4 EC?? F???      01151         call    USART_LINE      ; new line because a e s t h e t i c
                      01152         
000CE8 2A15           01153         incf    counter
000CEA 0E08           01154         movlw   d'8'            ; we save up to the last 9 permanent logs
000CEC 6215           01155         cpfseq  counter
000CEE D???           01156         bra     TRANSFER_LOGS
                      01157         
000CF0 EC?? F???      01158         call    LCD_L2
                      01159         Display PCComplete
  0000                    M         local   loop
000CF4 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000CF6 6EF8               M         movwf   TBLPTRU
000CF8 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000CFA 6EF7               M         movwf   TBLPTRH
000CFC 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000CFE 6EF6               M         movwf   TBLPTRL
000D00 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D02 50F5               M         movf    TABLAT, W
000D04                    M loop
000D04 EC?? F???          M         call    WR_DATA         ; write to LCD
000D08 000B               M         tblrd+*                 ; next row in table
000D0A 50F5               M         movf    TABLAT, W
000D0C E1??               M         bnz     loop
                      01160         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D0E 0E28               M         movlw   0x28
000D10 6E1A               M         movwf   delayR
                          M 
000D12                    M loop
000D12 EC?? F???          M         call    Delay50ms
000D16 2E1A               M         decfsz  delayR
000D18 EF?? F???          M         goto    loop
000D1C 0012           01161         return                  ; done transmitting data
                      01162         
000D1E                01163 USART_WAIT
000D1E 6EAD           01164         movwf   TXREG
000D20 A2AC           01165         btfss   TXSTA, 1
000D22 EF?? F???      01166         goto    $-2
000D26 0012           01167         return
                      01168 
000D28                01169 USART_LINE
000D28 0E0A           01170         movlw   0x0A
000D2A EC?? F???      01171         call    USART_WAIT
000D2E 0E0D           01172         movlw   0x0D
000D30 EC?? F???      01173         call    USART_WAIT
000D34 0012           01174         return
                      01175         
000D36                01176 Delay5us
000D36 0E78           01177         movlw   d'120'
000D38 6E1B           01178         movwf   d5us
                      01179 
000D3A                01180 loop5us
000D3A 2E1B           01181         decfsz  d5us
000D3C EF?? F???      01182         goto    loop5us
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D40 0000           01183         nop
000D42 0012           01184         return
                      01185 
000D44                01186 Delay200us
000D44 0EA4           01187         movlw   0xA4
000D46 6E1C           01188         movwf   d200us
                      01189 
000D48                01190 loop200us
000D48 2E1C           01191         decfsz  d200us
000D4A EF?? F???      01192         goto    loop200us
000D4E 0000           01193         nop
000D50 0012           01194         return
                      01195 
000D52                01196 Delay50ms
000D52 0EF9           01197         movlw   0xF9
000D54 6E1D           01198         movwf   d50ms
                      01199 
000D56                01200 loop50ms
000D56 EC?? F???      01201         call    Delay200us
000D5A 2E1D           01202         decfsz  d50ms
                      01203 
000D5C                01204 Cycles
000D5C EF?? F???      01205         goto    loop50ms
000D60 EC?? F???      01206         call    Delay200us
000D64 0012           01207         return
                      01208 
000D66                01209 WriteEE_RTC
                      01210         WriteEE tens_digit, H_EE, L_EE
000D66 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D6A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D6E C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000D72 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D74 D???               M         bra     $-2
                          M 
000D76 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D78 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D7A 84A6               M         bsf     EECON1, WREN        ; enable write
000D7C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D7E 98A1               M         bcf     PIR2, EEIF
                          M 
000D80 0E55               M         movlw   0x55
000D82 6EA7               M         movwf   EECON2              ; write 55h
000D84 0EAA               M         movlw   0xaa
000D86 6EA7               M         movwf   EECON2              ; write 0xaa
000D88 82A6               M         bsf     EECON1, WR          ; begin write
000D8A B2A6               M         btfsc   EECON1, WR
000D8C D???               M         bra     $-2
                          M 
000D8E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D90 94A6               M         bcf     EECON1, WREN        ; disable writes
000D92 2A21           01211         incf    L_EE
                      01212         WriteEE ones_digit, H_EE, L_EE
000D94 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D98 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D9C C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000DA0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DA2 D???               M         bra     $-2
                          M 
000DA4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DA6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DA8 84A6               M         bsf     EECON1, WREN        ; enable write
000DAA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DAC 98A1               M         bcf     PIR2, EEIF
                          M 
000DAE 0E55               M         movlw   0x55
000DB0 6EA7               M         movwf   EECON2              ; write 55h
000DB2 0EAA               M         movlw   0xaa
000DB4 6EA7               M         movwf   EECON2              ; write 0xaa
000DB6 82A6               M         bsf     EECON1, WR          ; begin write
000DB8 B2A6               M         btfsc   EECON1, WR
000DBA D???               M         bra     $-2
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DBC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DBE 94A6               M         bcf     EECON1, WREN        ; disable writes
000DC0 2A21           01213         incf    L_EE
000DC2 0012           01214         return
                      01215 
000DC4                01216 ClearEEPROM_21
000DC4 6A20           01217         clrf    H_EE
000DC6 6A21           01218         clrf    L_EE
000DC8 681F           01219         setf    clear_EE
000DCA 6A15           01220         clrf    counter
000DCC                01221 ClearNext
                      01222         WriteEE         clear_EE, H_EE, L_EE
000DCC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DD0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DD4 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000DD8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DDA D???               M         bra     $-2
                          M 
000DDC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DDE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DE0 84A6               M         bsf     EECON1, WREN        ; enable write
000DE2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DE4 98A1               M         bcf     PIR2, EEIF
                          M 
000DE6 0E55               M         movlw   0x55
000DE8 6EA7               M         movwf   EECON2              ; write 55h
000DEA 0EAA               M         movlw   0xaa
000DEC 6EA7               M         movwf   EECON2              ; write 0xaa
000DEE 82A6               M         bsf     EECON1, WR          ; begin write
000DF0 B2A6               M         btfsc   EECON1, WR
000DF2 D???               M         bra     $-2
                          M 
000DF4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DF6 94A6               M         bcf     EECON1, WREN        ; disable writes
000DF8 2A15           01223         incf            counter
000DFA 2A21           01224         incf            L_EE
000DFC 0E15           01225         movlw           d'21'
000DFE 6215           01226         cpfseq          counter
000E00 EF?? F???      01227         goto            ClearNext
000E04 6A20           01228         clrf            H_EE
000E06 6A21           01229         clrf            L_EE
000E08 0012           01230         return
                      01231         
000E0A                01232 READ_KEY
000E0A A281           01233         btfss   PORTB, 1        ; check for keypad interrupt
000E0C EF?? F???      01234         goto    READ_KEY
000E10 3881           01235         swapf   PORTB, W
000E12 0B0F           01236         andlw   0x0F
000E14 6E10           01237         movwf   KEY
000E16 B281           01238         btfsc   PORTB, 1
000E18 EF?? F???      01239         goto    $-2
000E1C 0012           01240         return
                      01241 
000E1E                01242 READ_KEY_TIME
                      01243         ; display the time
                      01244         ; call      DISPLAY_RTC 
                      01245 
000E1E A281           01246         btfss       PORTB, 1    ; keypad interrupt
000E20 EF?? F???      01247         goto        READ_KEY_TIME
000E24 3881           01248         swapf       PORTB, 0    ; copy PORTB7:4 to W3:0
000E26 0B0F           01249         andlw       0x0F        ; only want W3:0
000E28 6E10           01250         movwf       KEY         ; write this value to the KEY
000E2A B281           01251         btfsc       PORTB, 1    ; wait for release
000E2C EF?? F???      01252         goto        $-2         ; go back one instruction
000E30 0012           01253         return
                      01254 
000E32                01255 DisplayExeTime
                      01256         READEE  REG_EE, H_EE, L_EE
000E32 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E36 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E3A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E3C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E3E 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E40 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E44 0EFF           01257         movlw   0xFF
000E46 6222           01258         cpfseq  REG_EE
000E48 EF?? F???      01259         goto    NoSkipDispExeTime
                      01260         Display NoData
  0000                    M         local   loop
000E4C 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E4E 6EF8               M         movwf   TBLPTRU
000E50 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E52 6EF7               M         movwf   TBLPTRH
000E54 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E56 6EF6               M         movwf   TBLPTRL
000E58 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E5A 50F5               M         movf    TABLAT, W
000E5C                    M loop
000E5C EC?? F???          M         call    WR_DATA         ; write to LCD
000E60 000B               M         tblrd+*                 ; next row in table
000E62 50F5               M         movf    TABLAT, W
000E64 E1??               M         bnz     loop
000E66 0EFF           01261         movlw   0xFF
000E68 6022           01262         cpfslt  REG_EE
000E6A EF?? F???      01263         goto    SkipDispExeTime
000E6E 0012           01264         return
                      01265 
000E70                01266 NoSkipDispExeTime
                      01267         READEE  WREG, H_EE, L_EE
000E70 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E74 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E78 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E7A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E7C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E7E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E82 EC?? F???      01268         call    WR_DATA
000E86 2A21           01269         incf    L_EE
                      01270         
                      01271         READEE  WREG, H_EE, L_EE
000E88 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E8C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E90 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E92 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E94 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E96 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E9A EC?? F???      01272         call    WR_DATA
000E9E 2A21           01273         incf    L_EE
                      01274         
                      01275         READEE  WREG, H_EE, L_EE
000EA0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EA4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EA8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EAA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EAC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EAE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EB2 EC?? F???      01276         call    WR_DATA
000EB6 2A21           01277         incf    L_EE
                      01278 
000EB8 0E73           01279         movlw   0x73            ; Write 's'
000EBA EC?? F???      01280         call    WR_DATA
000EBE EC?? F???      01281         call    LCD_L2
000EC2                01282 SkipDispExeTime
000EC2 0012           01283         return
                      01284 
000EC4                01285 DispOpSort
                      01286         READEE  REG_EE, H_EE, L_EE
000EC4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EC8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000ECC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000ECE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ED0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ED2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000ED6 0EFF           01287         movlw   0xff
000ED8 6222           01288         cpfseq  REG_EE
000EDA EF?? F???      01289         goto    NoSkipDispOpSort
                      01290         Display NoData
  0000                    M         local   loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EDE 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EE0 6EF8               M         movwf   TBLPTRU
000EE2 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EE4 6EF7               M         movwf   TBLPTRH
000EE6 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EE8 6EF6               M         movwf   TBLPTRL
000EEA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EEC 50F5               M         movf    TABLAT, W
000EEE                    M loop
000EEE EC?? F???          M         call    WR_DATA         ; write to LCD
000EF2 000B               M         tblrd+*                 ; next row in table
000EF4 50F5               M         movf    TABLAT, W
000EF6 E1??               M         bnz     loop
000EF8 0EFF           01291         movlw   0xff
000EFA 6022           01292         cpfslt  REG_EE
000EFC EF?? F???      01293         goto    SkipDispOpSort
                      01294 
000F00                01295 NoSkipDispOpSort
000F00 0E61           01296         movlw   "a"
000F02 EC?? F???      01297         call    WR_DATA
                      01298         
                      01299         READEE  REG_EE, H_EE, L_EE
000F06 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F0A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F0E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F10 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F12 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F14 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F18 C022 FFE8      01300         movff   REG_EE, WREG
000F1C EC?? F???      01301         call    WR_DATA
000F20 2A21           01302         incf    L_EE
                      01303         
000F22 0E20           01304         movlw   " "
000F24 EC?? F???      01305         call    WR_DATA
                      01306         
000F28 0E62           01307         movlw   "b"
000F2A EC?? F???      01308         call    WR_DATA
                      01309         
                      01310         READEE  REG_EE, H_EE, L_EE
000F2E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F32 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F36 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F38 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F3A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F3C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F40 C022 FFE8      01311         movff   REG_EE, WREG
000F44 EC?? F???      01312         call    WR_DATA
000F48 2A21           01313         incf    L_EE
                      01314         
000F4A 0E20           01315         movlw   " "
000F4C EC?? F???      01316         call    WR_DATA
                      01317         
000F50 0E63           01318         movlw   "c"
000F52 EC?? F???      01319         call    WR_DATA
                      01320         
                      01321         READEE  REG_EE, H_EE, L_EE
000F56 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F5A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F5E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F60 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F62 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F64 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F68 C022 FFE8      01322         movff   REG_EE, WREG
000F6C EC?? F???      01323         call    WR_DATA
000F70 2A21           01324         incf    L_EE
                      01325         
000F72 0E20           01326         movlw   " "
000F74 EC?? F???      01327         call    WR_DATA
                      01328         
000F78 0E64           01329         movlw   "d"
000F7A EC?? F???      01330         call    WR_DATA
                      01331         
                      01332         READEE  REG_EE, H_EE, L_EE
000F7E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F82 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F86 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F88 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F8A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F8C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F90 C022 FFE8      01333         movff   REG_EE, WREG
000F94 EC?? F???      01334         call    WR_DATA
000F98 2A21           01335         incf    L_EE
                      01336 
000F9A                01337 SkipDispOpSort
000F9A 0012           01338         return
                      01339         
000F9C                01340 DispOpRTC
                      01341         READEE  REG_EE, H_EE, L_EE
000F9C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FA0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FA4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FA8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FAA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FAE 0EFF           01342         movlw   0xff
000FB0 6222           01343         cpfseq  REG_EE
000FB2 EF?? F???      01344         goto    NoSkipDispOpRTC
                      01345         Display NoData
  0000                    M         local   loop
000FB6 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000FB8 6EF8               M         movwf   TBLPTRU
000FBA 0E??               M         movlw   high NoData     ; Move Table<15:8>
000FBC 6EF7               M         movwf   TBLPTRH
000FBE 0E??               M         movlw   low NoData      ; Move Table<7:0>
000FC0 6EF6               M         movwf   TBLPTRL
000FC2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000FC4 50F5               M         movf    TABLAT, W
000FC6                    M loop
000FC6 EC?? F???          M         call    WR_DATA         ; write to LCD
000FCA 000B               M         tblrd+*                 ; next row in table
000FCC 50F5               M         movf    TABLAT, W
000FCE E1??               M         bnz     loop
000FD0 0EFF           01346         movlw   0xff
000FD2 6022           01347         cpfslt  REG_EE
000FD4 EF?? F???      01348         goto    SkipDispOpRTC
                      01349 
000FD8                01350 NoSkipDispOpRTC
                      01351         READEE  REG_EE, H_EE, L_EE
000FD8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FDC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FE0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FE2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FE4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FE6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FEA C022 FFE8      01352         movff   REG_EE, WREG
000FEE EC?? F???      01353         call    WR_DATA
000FF2 2A21           01354         incf    L_EE
                      01355         
                      01356         READEE  REG_EE, H_EE, L_EE
000FF4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FF8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FFC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FFE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001000 80A6               M         bsf     EECON1, RD          ; read EEPROM
001002 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001006 C022 FFE8      01357         movff   REG_EE, WREG
00100A EC?? F???      01358         call    WR_DATA
00100E 2A21           01359         incf    L_EE
                      01360 
001010 0E68           01361         movlw   "h"
001012 EC?? F???      01362         call    WR_DATA
                      01363         
001016 EC?? F???      01364         call    DispOpRTC_Helper
                      01365         
00101A 0E20           01366         movlw   " "
00101C EC?? F???      01367         call    WR_DATA
                      01368         
001020 EC?? F???      01369         call    DispOpRTC_Helper
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-7-2017  19:08:39         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001024 0E2F           01370         movlw   "/"
001026 EC?? F???      01371         call    WR_DATA
                      01372 
00102A EC?? F???      01373         call    DispOpRTC_Helper
00102E 0E2F           01374         movlw   "/"
001030 EC?? F???      01375         call    WR_DATA
001034 EC?? F???      01376         call    DispOpRTC_Helper
001038                01377 SkipDispOpRTC
001038 0012           01378                 return
00103A                01379 DispOpRTC_Helper
                      01380         READEE          REG_EE, H_EE, L_EE
00103A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00103E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001042 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001044 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001046 80A6               M         bsf     EECON1, RD          ; read EEPROM
001048 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00104C C022 FFE8      01381         movff           REG_EE, WREG
001050 EC?? F???      01382         call            WR_DATA
001054 2A21           01383         incf            L_EE
                      01384         READEE          REG_EE, H_EE, L_EE
001056 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00105A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00105E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001060 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001062 80A6               M         bsf     EECON1, RD          ; read EEPROM
001064 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001068 C022 FFE8      01385         movff           REG_EE, WREG
00106C EC?? F???      01386         call            WR_DATA
001070 2A21           01387         incf            L_EE
001072 0012           01388         return
Warning[205]: Found directive in column 1. (end)
                      01389 end

Errors   :     0
Warnings :    40 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

