MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008     
                      00009     
                      00010 
                      00011 
                      00012 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00047         keyB
  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit, databyte
  0000                00100     extern WRITE_ARDUINO, READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7473 6E61 6964 00107     StandBy     db          "standing by ... ... standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7473 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 613C 733E 726F 00108     StandbyInfo db          "<a>sort <b>last log <c>perm logs <d>pc", 0
       2074 623C 6C3E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7361 2074 6F6C 
       2067 633C 703E 
       7265 206D 6F6C 
       7367 3C20 3E64 
       6370 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6974 656D 003A 00109     Log1        db          "time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6173 6576 3A64 00111     LogInfo1    db          "saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6162 6B63 3C20 00112     LogInfo2    db          "back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6570 6D72 6E61 00113     PermLog1    db          "permanent logs ", 0
       6E65 2074 6F6C 
       7367 0020 
Warning[207]: Found label after column 1. (PermLog2)
000096 6361 6563 7373 00114     PermLog2    db          "access up to 9 logs, press <1> ... <9>", 0 
       7520 2070 6F74 
       3920 6C20 676F 
       2C73 7020 6572 
       7373 3C20 3E31 
       2E20 2E2E 3C20 
       3E39 0000 
Warning[207]: Found label after column 1. (Exe1)
0000BE 6F73 7472 6E69 00115     Exe1        db          "sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000CA 6E65 2064 2A3C 00116     Exe2        db          "end <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000D2 6370 6920 746E 00117     PC1         db          "pc interface ... pc interface ... ", 0
       7265 6166 6563 
       2E20 2E2E 7020 
       2063 6E69 6574 
       6672 6361 2065 
       2E2E 202E 0000 
Warning[207]: Found label after column 1. (PC2)
0000F6 7270 7365 2073 00118     PC2         db          "press <#> to begin log transfer", 0
       233C 203E 6F74 
       6220 6765 6E69 
       6C20 676F 7420 
       6172 736E 6566 
       0072 
Warning[207]: Found label after column 1. (PCTransfer)
000116 7274 6E61 6673 00119     PCTransfer  db          "transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000126 6F63 706D 656C 00120     PCComplete  db          "complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
000130 6173 6976 676E 00121     SAVE        db          "saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
00013A 2F6E 0061      00122     NoData      db          "n/a", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 EMERGENCY_STOP
                      00271         ; first check if we're currently sorting - else, no need to restart
00001C 0EFF           00272         movlw   0xff                ; if in operation, skip return
00001E 621E           00273         cpfseq  inExecution
000020 EF?? F???      00274         goto    END_ISR_HIGH
                      00275         
                      00276         ; reset program counter - emergency stop recorded. 
000024 9ED5           00277         bcf     T0CON, TMR0ON
000026 EC?? F???      00278         call    SAVE_EXE_TIME
                      00279         
                      00280         ; reset emergency stop interrupt bit
00002A 92F2           00281         bcf     INTCON, INT0IF
                      00282                 
                      00283         ; clear inExecution flag
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00002C 6A1E           00284         clrf    inExecution
00002E 0E01           00285         movlw   d'1'
000030 6E37           00286         movwf   STOP_CONDITION
000032 EC?? F???      00287         call    SaveData
                      00288         
000036 0E00           00289         movlw   d'0'
000038 CFE8 F???      00290         movff   WREG, databyte
00003C EC?? F???      00291         call    WRITE_ARDUINO
                      00292         
000040 6AFF           00293         clrf    TOSU
000042 6AFE           00294         clrf    TOSH
000044 6AFD           00295         clrf    TOSL
000046 90F0           00296         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00297         restoreContext
000048 3814               M     swapf   temp_W, 0               ; restore W first
00004A C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00004E 0010           00298         retfie
                      00299 
000050                00300 LOAD_STANDBY_TIME
000050 0EFF           00301         movlw   0xff
000052 6ED7           00302         movwf   TMR0H
000054 0EFF           00303         movlw   0xff
000056 6ED6           00304         movwf   TMR0L
                      00305 
000058 0012           00306         return  
                      00307 
00005A                00308 LOAD_EXE_TIME
00005A 0EC3           00309         movlw   0xc3
00005C 6ED7           00310         movwf   TMR0H
00005E 0E27           00311         movlw   0x27
000060 6ED6           00312         movwf   TMR0L
                      00313         
000062 0012           00314         return
                      00315         
000064                00316 ISR_HIGH
                      00317         saveContext
000064 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000068 6E14               M     movwf   temp_W                  ; save W
                      00318         
00006A B2F2           00319         btfsc   INTCON, INT0IF
00006C EC?? F???      00320         call    EMERGENCY_STOP
                      00321         
000070 0E00           00322         movlw   0x00
000072 6238           00323         cpfseq  inStandby
000074 EC?? F???      00324         call    Shift
                      00325         
                      00326         ;reset timer, but need to check which time increment 
000078 0E00           00327         movlw   0x00
00007A 6238           00328         cpfseq  inStandby
00007C EC?? F???      00329         call    LOAD_STANDBY_TIME
                      00330         
000080 0EFF           00331         movlw   0xff
000082 6238           00332         cpfseq  inStandby
000084 EC?? F???      00333         call    LOAD_EXE_TIME
                      00334                 
                      00335         ;timer interrupt
000088 A4F2           00336         btfss   INTCON, TMR0IF
00008A EF?? F???      00337         goto    END_ISR_HIGH
                      00338         
                      00339         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00008E C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000092 0E0F               M         movlw   0x0f
000094 1617               M         andwf   temp
000096 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000098 6217               M         cpfseq  temp
00009A EF?? F???          M         goto    ones
                          M         
00009E 0E10               M         movlw   b'00010000'
0000A0 2619               M         addwf   OP_INT
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000A2 0EF0               M         movlw   0xf0
0000A4 1619               M         andwf   OP_INT
0000A6 0EA0               M         movlw   0xa0
0000A8 6019               M         cpfslt  OP_INT
                          M         
0000AA 6A19               M         clrf    OP_INT
0000AC EF?? F???          M         goto    endBCD
                          M         
0000B0                    M ones
0000B0 2A19               M         incf    OP_INT
0000B2 EF?? F???          M         goto    endBCD
0000B6                    M endBCD
0000B6 0000               M         nop
0000B8 0E00           00340         movlw   d'0'
0000BA 6219           00341         cpfseq  OP_INT
0000BC EF?? F???      00342         goto    END_ISR_HIGH
                      00343         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000C0 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000C4 0E0F               M         movlw   0x0f
0000C6 1617               M         andwf   temp
0000C8 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000CA 6217               M         cpfseq  temp
0000CC EF?? F???          M         goto    ones
                          M         
0000D0 0E10               M         movlw   b'00010000'
0000D2 2618               M         addwf   OP_sec
0000D4 0EF0               M         movlw   0xf0
0000D6 1618               M         andwf   OP_sec
0000D8 0EA0               M         movlw   0xa0
0000DA 6018               M         cpfslt  OP_sec
                          M         
0000DC 6A18               M         clrf    OP_sec
0000DE EF?? F???          M         goto    endBCD
                          M         
0000E2                    M ones
0000E2 2A18               M         incf    OP_sec
0000E4 EF?? F???          M         goto    endBCD
0000E8                    M endBCD
0000E8 0000               M         nop
                      00344 
0000EA                00345 END_ISR_HIGH
0000EA 94F2           00346         bcf     INTCON, TMR0IF
                      00347         restoreContext
0000EC 3814               M     swapf   temp_W, 0               ; restore W first
0000EE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000F2 0010           00348         retfie
                      00349 
0000F4                00350 ISR_LOW
                      00351         saveContext
0000F4 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000F8 6E14               M     movwf   temp_W                  ; save W
                      00352         ; KEYPAD INTERRUPT
0000FA A0F0           00353         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000FC EF?? F???      00354         goto    END_ISR_LOW
                      00355 
                      00356         ; check operation status
000100 0EFF           00357         movlw   0xff                    ; If in operation, skip return
000102 621E           00358         cpfseq  inExecution
000104 EF?? F???      00359         goto    END_ISR_LOW
                      00360 
                      00361         ; process KEY
000108 3881           00362         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
00010A 0B0F           00363         andlw   0x0f
00010C 6E12           00364         movwf   KEY_ISR
                      00365         
00010E 0E0C           00366         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
000110 6212           00367         cpfseq  KEY_ISR                 ; If key was '*', skip return
000112 EF?? F???      00368         goto    END_ISR_LOW
                      00369         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00370         ; reset program counter - emergency stop recorded. 
000116 9ED5           00371         bcf     T0CON, TMR0ON
000118 EC?? F???      00372         call    SAVE_EXE_TIME
                      00373                 
                      00374         ; Clear inExecution flag to stop '*' interrupts
00011C 6A1E           00375         clrf    inExecution
00011E 0E01           00376         movlw   d'1'
000120 6E37           00377         movwf   STOP_CONDITION
                      00378         
                      00379         ; turn off the motor
000122 0E00           00380         movlw   d'0'
000124 CFE8 F???      00381         movff   WREG, databyte
000128 EC?? F???      00382         call    WRITE_ARDUINO
                      00383         
00012C EC?? F???      00384         call    SaveData
                      00385         
000130 6AFF           00386         clrf    TOSU
000132 6AFE           00387         clrf    TOSH
000134 6AFD           00388         clrf    TOSL
000136 90F0           00389         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00390         restoreContext
000138 3814               M     swapf   temp_W, 0               ; restore W first
00013A C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00013E 0010           00391         retfie
                      00392 
000140                00393 END_ISR_LOW
000140 90F0           00394         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00395         restoreContext
000142 3814               M     swapf   temp_W, 0               ; restore W first
000144 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000148 0010           00396         retfie
                      00397 
                      00398 ;*******************************************************************************
                      00399 ; main
                      00400 ;*******************************************************************************
00014A                00401 INIT
00014A 0E70           00402         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
00014C 6ED3           00403         movwf   OSCCON
                      00404         
                      00405         ; i/o
00014E 0E00           00406         movlw   b'00000000'
000150 6E92           00407         movwf   TRISA
000152 0EFF           00408         movlw   b'11111111'
000154 6E93           00409         movwf   TRISB               ; keypad
000156 0E00           00410         movlw   b'00000000'
000158 6E94           00411         movwf   TRISC
00015A 0E00           00412         movlw   b'00000000'
00015C 6E95           00413         movwf   TRISD
00015E 0E00           00414         movlw   b'00000000'
000160 6E96           00415         movwf   TRISE
                      00416 
                      00417         ; clear ports
000162 0E00           00418         movlw   b'00000000'
000164 6E89           00419         movwf   LATA
000166 0E00           00420         movlw   b'00000000'
000168 6E8A           00421         movwf   LATB
00016A 0E00           00422         movlw   b'00000000'
00016C 6E8B           00423         movwf   LATC
00016E 0E00           00424         movlw   b'00000000'
000170 6E8C           00425         movwf   LATD
000172 0E00           00426         movlw   b'00000000'
000174 6E8D           00427         movwf   LATE
                      00428         
000176 0E00           00429         movlw   b'00000000'
000178 6EC2           00430         movwf   ADCON0
                      00431 ;       movlw   b'11111111'
                      00432 ;       movwf   ADCON1
                      00433         
                      00434         ; setting up pwm
                      00435 ;       clrf    CM1CONO         ; disable comparators
                      00436 ;       clrf    CM2CONO
                      00437 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00438 ;       movwf   CCP2CON
                      00439 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00440 ;       movwf   CCPR2L
                      00441 ;       
                      00442 ;       bcf     PIR1, TMR2IF
                      00443 ;       bcf     T2CON, T2CKPS1
                      00444 ;       bsf     T2CON, TMR2ON
                      00445         
                      00446         ; initializations
00017A EC?? F???      00447         call    InitLCD
                      00448         ConfigLCD
00017E 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000180 EC?? F???          M           call      WR_INS
                          M 
000184 0E0C               M           movlw     b'00001100'    ; display on/off
000186 EC?? F???          M           call      WR_INS
00018A 0E01               M           movlw     b'00000001'    ; Clear ram
00018C EC?? F???          M           call      WR_INS
                      00449         
000190 EC?? F???      00450         call    i2c_common_setup
                      00451         
000194 EC?? F???      00452         call    RTC_INIT
                      00453         ;COLOUR_INIT
000198 EC?? F???      00454         call    INIT_USART
                      00455 
                      00456         ; interrupts
00019C 6AD0           00457         clrf    RCON
00019E 6AF2           00458         clrf    INTCON
0001A0 6AF1           00459         clrf    INTCON2
0001A2 6AF0           00460         clrf    INTCON3
0001A4 8ED0           00461         bsf     RCON, IPEN          ; priority mode
0001A6 8EF2           00462         bsf     INTCON, GIEH        ; permit global interrupts
0001A8 8CF2           00463         bsf     INTCON, GIEL
0001AA 8AF1           00464         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
0001AC 8AF2           00465         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
0001AE 84F2           00466         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
0001B0 84F1           00467         bsf     INTCON2, TMR0IP     ; set to high priority
0001B2 86F0           00468         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
0001B4 9CF0           00469         bcf     INTCON3, INT1IP     ; keyboard to low priority
0001B6 88F2           00470         bsf     INTCON, INT0IE      ; enable high interrupts on rb0 for emergency stop
0001B8 92F2           00471         bcf     INTCON, INT0IF      ; clear emergency stop interrupt
                      00472         
                      00473         ; setting up timer to sychronize with 1 second clock intervals
0001BA 9ED5           00474         bcf     T0CON, TMR0ON
0001BC 9CD5           00475         bcf     T0CON, T08BIT
0001BE 9AD5           00476         bcf     T0CON, T0CS
0001C0 98D5           00477         bcf     T0CON, T0SE
0001C2 96D5           00478         bcf     T0CON, PSA
0001C4 94D5           00479         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
0001C6 82D5           00480         bsf     T0CON, T0PS1
0001C8 80D5           00481         bsf     T0CON, T0PS0
                      00482 
0001CA 6A20           00483         clrf    H_EE
0001CC 6A21           00484         clrf    L_EE
0001CE 6A??           00485         clrf    tens_digit
0001D0 6A??           00486         clrf    ones_digit
                      00487         
                      00488         ;ensure that the motor is indeed off
0001D2 0E00           00489         movlw   d'0'
0001D4 CFE8 F???      00490         movff   WREG, databyte
0001D8 EC?? F???      00491         call    WRITE_ARDUINO
                      00492         
0001DC 6A2C           00493         clrf    DETECTION_VAL
0001DE 6A2D           00494         clrf    ESKA
0001E0 6A2E           00495         clrf    ESKA_NOCAP
0001E2 6A2F           00496         clrf    YOP
0001E4 6A30           00497         clrf    YOP_NOCAP
0001E6 6A31           00498         clrf    TOTAL_BOTTLES
0001E8 6A32           00499         clrf    COLLECTIONS_COUNT
                      00500         
0001EA 0EF2           00501         movlw     b'11110010'    ; Set required keypad inputs
0001EC 6E93           00502         movwf     TRISB
                      00503         
0001EE EC?? F???      00504         call    ClrLCD
                      00505         Display Welcome
  0000                    M         local   loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F2 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001F4 6EF8               M         movwf   TBLPTRU
0001F6 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001F8 6EF7               M         movwf   TBLPTRH
0001FA 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001FC 6EF6               M         movwf   TBLPTRL
0001FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000200 50F5               M         movf    TABLAT, W
000202                    M loop
000202 EC?? F???          M         call    WR_DATA         ; write to LCD
000206 000B               M         tblrd+*                 ; next row in table
000208 50F5               M         movf    TABLAT, W
00020A E1??               M         bnz     loop
00020C EC?? F???      00506         call LCD_L2
                      00507         Display Team
  0000                    M         local   loop
000210 0E??               M         movlw   upper Team      ; Move Table<20:16>
000212 6EF8               M         movwf   TBLPTRU
000214 0E??               M         movlw   high Team       ; Move Table<15:8>
000216 6EF7               M         movwf   TBLPTRH
000218 0E??               M         movlw   low Team        ; Move Table<7:0>
00021A 6EF6               M         movwf   TBLPTRL
00021C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00021E 50F5               M         movf    TABLAT, W
000220                    M loop
000220 EC?? F???          M         call    WR_DATA         ; write to LCD
000224 000B               M         tblrd+*                 ; next row in table
000226 50F5               M         movf    TABLAT, W
000228 E1??               M         bnz     loop
                      00508         
                      00509         Delay50N delayR, 0x28
  0000                    M         local   loop
00022A 0E28               M         movlw   0x28
00022C 6E1A               M         movwf   delayR
                          M 
00022E                    M loop
00022E EC?? F???          M         call    Delay50ms
000232 2E1A               M         decfsz  delayR
000234 EF?? F???          M         goto    loop
                      00510 
                      00511 ;*******************************************************************************
                      00512 ; standby mode
                      00513 ;*******************************************************************************
000238                00514 STANDBY
000238 0E00           00515         movlw   b'00000000'
00023A 6E84           00516         movwf   PORTE
00023C 0E00           00517         movlw   b'00000000'
00023E 6E80           00518         movwf   PORTA
                      00519         
                      00520         
000240 6838           00521         setf    inStandby       
000242 EC?? F???      00522         call    ClrLCD
                      00523         Display StandBy
  0000                    M         local   loop
000246 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000248 6EF8               M         movwf   TBLPTRU
00024A 0E??               M         movlw   high StandBy    ; Move Table<15:8>
00024C 6EF7               M         movwf   TBLPTRH
00024E 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000250 6EF6               M         movwf   TBLPTRL
000252 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000254 50F5               M         movf    TABLAT, W
000256                    M loop
000256 EC?? F???          M         call    WR_DATA         ; write to LCD
00025A 000B               M         tblrd+*                 ; next row in table
00025C 50F5               M         movf    TABLAT, W
00025E E1??               M         bnz     loop
000260 EC?? F???      00524         call    LCD_L2
                      00525         Display StandbyInfo
  0000                    M         local   loop
000264 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
000266 6EF8               M         movwf   TBLPTRU
000268 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
00026A 6EF7               M         movwf   TBLPTRH
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00026C 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
00026E 6EF6               M         movwf   TBLPTRL
000270 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000272 50F5               M         movf    TABLAT, W
000274                    M loop
000274 EC?? F???          M         call    WR_DATA         ; write to LCD
000278 000B               M         tblrd+*                 ; next row in table
00027A 50F5               M         movf    TABLAT, W
00027C E1??               M         bnz     loop
                      00526         
00027E 0EFF           00527         movlw   0xff
000280 6ED7           00528         movwf   TMR0H
000282 0EFF           00529         movlw   0xff
000284 6ED6           00530         movwf   TMR0L
000286 8ED5           00531         bsf     T0CON, TMR0ON       ; turning on timer
                      00532 
                      00533 
000288                00534 HOLD_STANDBY
000288 EC?? F???      00535         call    READ_KEY_TIME
                      00536 
                      00537         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
00028C 0E00               M         movlw   key1                ; poll for mode
00028E 6210               M         cpfseq  KEY                 ; check this against key press
000290 EF?? F???          M         goto    Exit
                          M 
000294                    M Next
000294 6A89               M         clrf    LATA                ; clear pins before proceeding
000296 6A8A               M         clrf    LATB
000298 6A8B               M         clrf    LATC
00029A 6A8C               M         clrf    LATD
00029C EF?? F???          M         goto    COLOUR_TEST
                          M 
0002A0                    M Exit
0002A0 0000               M         nop
                      00538         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
0002A2 0E01               M         movlw   key2                ; poll for mode
0002A4 6210               M         cpfseq  KEY                 ; check this against key press
0002A6 EF?? F???          M         goto    Exit
                          M 
0002AA                    M Next
0002AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0002AC 6A8A               M         clrf    LATB
0002AE 6A8B               M         clrf    LATC
0002B0 6A8C               M         clrf    LATD
0002B2 EF?? F???          M         goto    STEP_TEST
                          M 
0002B6                    M Exit
0002B6 0000               M         nop
                      00539         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0002B8 0E03               M         movlw   keyA                ; poll for mode
0002BA 6210               M         cpfseq  KEY                 ; check this against key press
0002BC EF?? F???          M         goto    Exit
                          M 
0002C0                    M Next
0002C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C2 6A8A               M         clrf    LATB
0002C4 6A8B               M         clrf    LATC
0002C6 6A8C               M         clrf    LATD
0002C8 EF?? F???          M         goto    EXECUTION
                          M 
0002CC                    M Exit
0002CC 0000               M         nop
                      00540         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002CE 0E07               M         movlw   keyB                ; poll for mode
0002D0 6210               M         cpfseq  KEY                 ; check this against key press
0002D2 EF?? F???          M         goto    Exit
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0002D6                    M Next
0002D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0002D8 6A8A               M         clrf    LATB
0002DA 6A8B               M         clrf    LATC
0002DC 6A8C               M         clrf    LATD
0002DE EF?? F???          M         goto    LOG
                          M 
0002E2                    M Exit
0002E2 0000               M         nop
                      00541         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002E4 0E0B               M         movlw   keyC                ; poll for mode
0002E6 6210               M         cpfseq  KEY                 ; check this against key press
0002E8 EF?? F???          M         goto    Exit
                          M 
0002EC                    M Next
0002EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002EE 6A8A               M         clrf    LATB
0002F0 6A8B               M         clrf    LATC
0002F2 6A8C               M         clrf    LATD
0002F4 EF?? F???          M         goto    PERM_LOG
                          M 
0002F8                    M Exit
0002F8 0000               M         nop
                      00542         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002FA 0E0F               M         movlw   keyD                ; poll for mode
0002FC 6210               M         cpfseq  KEY                 ; check this against key press
0002FE EF?? F???          M         goto    Exit
                          M 
000302                    M Next
000302 6A89               M         clrf    LATA                ; clear pins before proceeding
000304 6A8A               M         clrf    LATB
000306 6A8B               M         clrf    LATC
000308 6A8C               M         clrf    LATD
00030A EF?? F???          M         goto    PC_MODE
                          M 
00030E                    M Exit
00030E 0000               M         nop
000310 D???           00543         bra     HOLD_STANDBY
                      00544         
                      00545 ;*******************************************************************************
                      00546 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00547 ;*******************************************************************************
                      00548         
000312                00549 STEP_TEST
000312 6A38           00550         clrf    inStandby
000314 6A32           00551         clrf    COLLECTIONS_COUNT
                      00552         Delay50N    delayR, 0x14
  0000                    M         local   loop
000316 0E14               M         movlw   0x14
000318 6E1A               M         movwf   delayR
                          M 
00031A                    M loop
00031A EC?? F???          M         call    Delay50ms
00031E 2E1A               M         decfsz  delayR
000320 EF?? F???          M         goto    loop
                      00553     
000324                00554 ROTATE_90_TEST                      ; actually 45, but dont care to change label
000324 0E23           00555         movlw   b'00100011'
000326 6E80           00556         movwf   PORTA
000328 EC?? F???      00557         call    delay5ms
00032C EC?? F???      00558         call    delay5ms
000330 EC?? F???      00559         call    delay5ms
000334 EC?? F???      00560         call    delay5ms
000338 EC?? F???      00561         call    delay5ms
00033C EC?? F???      00562         call    delay5ms
000340 EC?? F???      00563         call    delay5ms
000344 EC?? F???      00564         call    delay5ms
                      00565 ;       incf    COLLECTIONS_COUNT
                      00566 ;       
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00567 ;       movlw   d'15'
                      00568 ;       subwf   COLLECTIONS_COUNT, 0
                      00569 ;       bz      STEP_TEST
                      00570 
000348 0E26           00571         movlw   b'00100110'
00034A 6E80           00572         movwf   PORTA
00034C EC?? F???      00573         call    delay5ms
000350 EC?? F???      00574         call    delay5ms
000354 EC?? F???      00575         call    delay5ms
000358 EC?? F???      00576         call    delay5ms
00035C EC?? F???      00577         call    delay5ms
000360 EC?? F???      00578         call    delay5ms
000364 EC?? F???      00579         call    delay5ms
000368 EC?? F???      00580         call    delay5ms
                      00581 ;       incf    COLLECTIONS_COUNT
                      00582         
00036C 0E2C           00583         movlw   b'00101100'
00036E 6E80           00584         movwf   PORTA
000370 EC?? F???      00585         call    delay5ms
000374 EC?? F???      00586         call    delay5ms
000378 EC?? F???      00587         call    delay5ms
00037C EC?? F???      00588         call    delay5ms
000380 EC?? F???      00589         call    delay5ms
000384 EC?? F???      00590         call    delay5ms
000388 EC?? F???      00591         call    delay5ms
00038C EC?? F???      00592         call    delay5ms
                      00593 ;       incf    COLLECTIONS_COUNT
                      00594 
000390 0E29           00595         movlw   b'00101001'
000392 6E80           00596         movwf   PORTA
000394 EC?? F???      00597         call    delay5ms
000398 EC?? F???      00598         call    delay5ms
00039C EC?? F???      00599         call    delay5ms
0003A0 EC?? F???      00600         call    delay5ms
0003A4 EC?? F???      00601         call    delay5ms
0003A8 EC?? F???      00602         call    delay5ms
0003AC EC?? F???      00603         call    delay5ms
0003B0 EC?? F???      00604         call    delay5ms        
0003B4 2A32           00605         incf    COLLECTIONS_COUNT
                      00606         
0003B6 0E02           00607         movlw   d'2'                        ; 7 ~ 45 degrees
0003B8 6232           00608         cpfseq  COLLECTIONS_COUNT
0003BA D???           00609         bra     ROTATE_90_TEST
                      00610         
0003BC D???           00611         bra     STEP_TEST
                      00612 
0003BE                00613 COLOUR_TEST
0003BE EC?? F???      00614         call    ClrLCD
0003C2 6A38           00615         clrf    inStandby
0003C4 0E01           00616         movlw   b'00000001'
0003C6 6E84           00617         movwf   PORTE
                      00618 
0003C8                00619 LOOPING
                      00620         Delay50N delayR, 0x3c
  0000                    M         local   loop
0003C8 0E3C               M         movlw   0x3c
0003CA 6E1A               M         movwf   delayR
                          M 
0003CC                    M loop
0003CC EC?? F???          M         call    Delay50ms
0003D0 2E1A               M         decfsz  delayR
0003D2 EF?? F???          M         goto    loop
0003D6 EC?? F???      00621         call    READ_ARDUINO
0003DA 6E2C           00622         movwf   DETECTION_VAL
0003DC 0F30           00623         addlw   0x30
0003DE EC?? F???      00624         call    WR_DATA
                      00625         Delay50N delayR, 0x3c
  0000                    M         local   loop
0003E2 0E3C               M         movlw   0x3c
0003E4 6E1A               M         movwf   delayR
                          M 
0003E6                    M loop
0003E6 EC?? F???          M         call    Delay50ms
0003EA 2E1A               M         decfsz  delayR
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003EC EF?? F???          M         goto    loop
                      00626         
0003F0 D???           00627         bra COLOUR_TEST
                      00628 
                      00629 ;*******************************************************************************
                      00630 ; execution mode
                      00631 ;*******************************************************************************
                      00632         
0003F2                00633 EXECUTION
0003F2 9ED5           00634         bcf     T0CON, TMR0ON       ; turning on timer
0003F4 6A38           00635         clrf    inStandby       
0003F6 EC?? F???      00636         call    ClearEEPROM_21
                      00637         
                      00638         ; save the starting time
0003FA EC?? F???      00639         call        SAVE_TIME
                      00640                 
                      00641         ; display
0003FE 681E           00642         setf    inExecution
000400 EC?? F???      00643         call    ClrLCD
                      00644         Display Exe1
  0000                    M         local   loop
000404 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000406 6EF8               M         movwf   TBLPTRU
000408 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00040A 6EF7               M         movwf   TBLPTRH
00040C 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00040E 6EF6               M         movwf   TBLPTRL
000410 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000412 50F5               M         movf    TABLAT, W
000414                    M loop
000414 EC?? F???          M         call    WR_DATA         ; write to LCD
000418 000B               M         tblrd+*                 ; next row in table
00041A 50F5               M         movf    TABLAT, W
00041C E1??               M         bnz     loop
00041E EC?? F???      00645         call    LCD_L2
                      00646         
000422 0EC3           00647         movlw   0xc3
000424 6ED7           00648         movwf   TMR0H
000426 0E27           00649         movlw   0x27
000428 6ED6           00650         movwf   TMR0L
                      00651         
00042A 8ED5           00652         bsf     T0CON, TMR0ON       ; turning on timer
                      00653         
                      00654         ; initialize variables
00042C 6A18           00655         clrf    OP_sec
00042E 6A19           00656         clrf    OP_INT
                      00657         
000430 6A2D           00658         clrf    ESKA
000432 6A2E           00659         clrf    ESKA_NOCAP
000434 6A2F           00660         clrf    YOP
000436 6A30           00661         clrf    YOP_NOCAP
000438 6A31           00662         clrf    TOTAL_BOTTLES
00043A 0E01           00663         movlw   d'1'
00043C 6E35           00664         movwf   TRAY_CURRENT
00043E 6A34           00665         clrf    TRAY_DELAY
                      00666         
000440 0E01           00667         movlw   d'1'
000442 CFE8 F???      00668         movff   WREG, databyte
000446 EC?? F???      00669         call    WRITE_ARDUINO
                      00670         
                      00671         ; todo: make sure tray is in position one on reset, add some delay
                      00672         
00044A EF?? F???      00673         goto        DETECTIONS
                      00674         
00044E                00675 CHECK_TIMEOUT
00044E 3818           00676     swapf       OP_sec, 0; 100's seconds
000450 6E17           00677     movwf       temp
000452 0E0F           00678     movlw       0x0f
000454 1617           00679     andwf       temp
000456 0E01           00680     movlw       d'1'
000458 5E17           00681     subwf       temp
00045A E0??           00682     bz  EXIT_EXE        ; if 100 second, continue to check for 150s then 120s.
                      00683 
00045C 0012           00684     return
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00685         
00045E                00686 DETECTIONS
                      00687         ; reading data from arduino 
                      00688         ; expect:   1 for eska cap
                      00689         ;           2 for eska no cap
                      00690         ;           3 for yop cap
                      00691         ;           4 for yop no cap
                      00692         ;           5 for no bottle, get outta here
                      00693         
00045E 0E02           00694         movlw   d'2'
000460 6E37           00695         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
000462 C018 F017      00696         movff   OP_sec, temp    ; 10's seconds
000466 0E0F           00697         movlw   0x0f
000468 1617           00698         andwf   temp
00046A 0E05           00699         movlw   d'5'
00046C 6017           00700         cpfslt  temp, 0
00046E EC?? F???      00701         call    CHECK_TIMEOUT   ; if 150 second, terminate
                      00702         
000472 6A37           00703         clrf    STOP_CONDITION  ; regular stop, saved in eeprom as 0
000474 0E0A           00704         movlw   d'10'
000476 5C31           00705         subwf   TOTAL_BOTTLES, 0
000478 E0??           00706         bz      EXIT_EXE
                      00707         
                      00708         Delay50N delayR, 0x0a   ; originally 3c
  0000                    M         local   loop
00047A 0E0A               M         movlw   0x0a
00047C 6E1A               M         movwf   delayR
                          M 
00047E                    M loop
00047E EC?? F???          M         call    Delay50ms
000482 2E1A               M         decfsz  delayR
000484 EF?? F???          M         goto    loop
000488 EC?? F???      00709         call    READ_ARDUINO
00048C 6E2C           00710         movwf   DETECTION_VAL
                      00711         
                      00712         ; first check if there was a bottle detected, if so go to COLLECTIONS_STEP
00048E 0E05           00713         movlw   d'5'
000490 5C2C           00714         subwf   DETECTION_VAL, 0
000492 E0??           00715         bz      DETECTIONS
                      00716         
                      00717         ; okay we have a bottle, first increment total count then see what it is
000494 2A31           00718         incf    TOTAL_BOTTLES
                      00719         
                      00720         ; yop no cap
000496 0E04           00721         movlw   d'4'
000498 5C2C           00722         subwf   DETECTION_VAL, 0
00049A E0??           00723         bz      INC_YOPNOCAP
                      00724         
                      00725         ; yop with cap
00049C 0E03           00726         movlw   d'3'
00049E 5C2C           00727         subwf   DETECTION_VAL, 0
0004A0 E0??           00728         bz      INC_YOPCAP
                      00729         
                      00730         ; eska no cap
0004A2 0E02           00731         movlw   d'2'
0004A4 5C2C           00732         subwf   DETECTION_VAL, 0
0004A6 E0??           00733         bz      INC_ESKANOCAP
                      00734         
                      00735         ; eksa with cap
0004A8 0E01           00736         movlw   d'1'
0004AA 5C2C           00737         subwf   DETECTION_VAL, 0
0004AC E0??           00738         bz      INC_ESKACAP
                      00739         
                      00740         ; edge case, cant determine bottle so check if done sorting
0004AE D???           00741         bra     DETECTIONS
                      00742         
0004B0                00743 INC_YOPNOCAP
0004B0 2A30           00744         incf    YOP_NOCAP
0004B2 D???           00745         bra     CHECK_DONE
                      00746         
0004B4                00747 INC_YOPCAP
0004B4 2A2F           00748         incf    YOP
0004B6 D???           00749         bra     CHECK_DONE
                      00750         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004B8                00751 INC_ESKANOCAP
0004B8 2A2E           00752         incf    ESKA_NOCAP
0004BA D???           00753         bra     CHECK_DONE
                      00754         
0004BC                00755 INC_ESKACAP
0004BC 2A2D           00756         incf    ESKA
0004BE D???           00757         bra     CHECK_DONE
                      00758         
0004C0                00759 CHECK_DONE
                      00760         ; Challenging:  logic to figure out when the machine is done sorting 
                      00761         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00762         
                      00763         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00764         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00765         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00766         ; 150s then stop.
                      00767         
                      00768         ; NUMBER: 
                      00769         ; if the total bottle count is 10, then we are done (most basic end condition)
0004C0 6A37           00770         clrf    STOP_CONDITION  ; regular stop, saved in eeprom as 0
0004C2 0E0A           00771         movlw   d'10'
0004C4 5C31           00772         subwf   TOTAL_BOTTLES, 0
0004C6 E0??           00773         bz      EXIT_EXE
                      00774         
0004C8 D???           00775         bra     DETECTIONS
                      00776         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00777         ; qualified run has at least 4 bottles, with 1 of each different kind
0004CA 0E03           00778         movlw   d'3'
0004CC 6431           00779         cpfsgt  TOTAL_BOTTLES
0004CE EF?? F???      00780         goto    DETECTIONS
                      00781 
0004D2 0E00           00782         movlw   d'0'
0004D4 6430           00783         cpfsgt  YOP_NOCAP, 0
0004D6 EF?? F???      00784         goto    DETECTIONS
                      00785         
0004DA 0E00           00786         movlw   d'0'
0004DC 642F           00787         cpfsgt  YOP, 0
0004DE EF?? F???      00788         goto    DETECTIONS
                      00789         
0004E2 0E00           00790         movlw   d'0'
0004E4 642E           00791         cpfsgt  ESKA_NOCAP, 0
0004E6 EF?? F???      00792         goto    DETECTIONS
                      00793         
0004EA 0E00           00794         movlw   d'0'
0004EC 642D           00795         cpfsgt  ESKA, 0
0004EE EF?? F???      00796         goto    DETECTIONS
                      00797         
                      00798         ; finally, if we get here then consider the termination optimized.
0004F2 0E03           00799         movlw   d'3'
0004F4 6E37           00800         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
0004F6 EF?? F???      00801         goto    EXIT_EXE
                      00802         
0004FA                00803 EXIT_EXE
                      00804         ; stop timer and save the execution time to eeprom
0004FA 9ED5           00805         bcf         T0CON, TMR0ON
0004FC EC?? F???      00806         call        SAVE_EXE_TIME
                      00807                 
                      00808         ; Clear inExecution flag to stop '*' interrupts
000500 6A1E           00809         clrf        inExecution
                      00810                 
                      00811         ; turn off the dc motor
000502 0E00           00812         movlw   d'0'
000504 CFE8 F???      00813         movff   WREG, databyte
000508 EC?? F???      00814         call    WRITE_ARDUINO
                      00815         
00050C EC?? F???      00816         call        ClrLCD
                      00817         Display     SAVE
  0000                    M         local   loop
000510 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000512 6EF8               M         movwf   TBLPTRU
000514 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000516 6EF7               M         movwf   TBLPTRH
000518 0E??               M         movlw   low SAVE        ; Move Table<7:0>
00051A 6EF6               M         movwf   TBLPTRL
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00051C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00051E 50F5               M         movf    TABLAT, W
000520                    M loop
000520 EC?? F???          M         call    WR_DATA         ; write to LCD
000524 000B               M         tblrd+*                 ; next row in table
000526 50F5               M         movf    TABLAT, W
000528 E1??               M         bnz     loop
00052A EC?? F???      00818         call        SaveData
00052E EF?? F???      00819         goto        LOG
                      00820 
                      00821 ;*******************************************************************************
                      00822 ; sorting statistics log mode
                      00823 ;*******************************************************************************
                      00824         
000532                00825 LOG
000532 6A38           00826         clrf    inStandby
000534 EC?? F???      00827         call    ClrLCD
                      00828         Display Log1
  0000                    M         local   loop
000538 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00053A 6EF8               M         movwf   TBLPTRU
00053C 0E??               M         movlw   high Log1       ; Move Table<15:8>
00053E 6EF7               M         movwf   TBLPTRH
000540 0E??               M         movlw   low Log1        ; Move Table<7:0>
000542 6EF6               M         movwf   TBLPTRL
000544 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000546 50F5               M         movf    TABLAT, W
000548                    M loop
000548 EC?? F???          M         call    WR_DATA         ; write to LCD
00054C 000B               M         tblrd+*                 ; next row in table
00054E 50F5               M         movf    TABLAT, W
000550 E1??               M         bnz     loop
                      00829 
                      00830         ; display most recent run data
000552 0E0A           00831         movlw   d'10'
000554 6E21           00832         movwf   L_EE
000556 EC?? F???      00833         call    DisplayExeTime
                      00834 
00055A EC?? F???      00835         call    LCD_L2
00055E 0E0D           00836         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000560 6E21           00837         movwf   L_EE
000562 EC?? F???      00838         call    DispOpSort
                      00839 
000566                00840 HOLD_LOG
000566 EC?? F???      00841         call    READ_KEY
                      00842         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
00056A 0E07               M         movlw   keyB                ; poll for mode
00056C 6210               M         cpfseq  KEY                 ; check this against key press
00056E EF?? F???          M         goto    Exit
                          M 
000572                    M Next
000572 6A89               M         clrf    LATA                ; clear pins before proceeding
000574 6A8A               M         clrf    LATB
000576 6A8B               M         clrf    LATC
000578 6A8C               M         clrf    LATD
00057A EF?? F???          M         goto    LOG_INFO
                          M 
00057E                    M Exit
00057E 0000               M         nop
                      00843         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000580 0E0D               M         movlw   key0                ; poll for mode
000582 6210               M         cpfseq  KEY                 ; check this against key press
000584 EF?? F???          M         goto    Exit
                          M 
000588                    M Next
000588 6A89               M         clrf    LATA                ; clear pins before proceeding
00058A 6A8A               M         clrf    LATB
00058C 6A8B               M         clrf    LATC
00058E 6A8C               M         clrf    LATD
000590 EF?? F???          M         goto    STANDBY
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000594                    M Exit
000594 0000               M         nop
000596 D???           00844         bra     HOLD_LOG
                      00845 
000598                00846 LOG_INFO
000598 EC?? F???      00847         call    ClrLCD
00059C 6A21           00848         clrf    L_EE
00059E EC?? F???      00849         call    DispOpRTC
                      00850         
0005A2 EC?? F???      00851         call    LCD_L2
                      00852         Display LogInfo2
  0000                    M         local   loop
0005A6 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0005A8 6EF8               M         movwf   TBLPTRU
0005AA 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0005AC 6EF7               M         movwf   TBLPTRH
0005AE 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0005B0 6EF6               M         movwf   TBLPTRL
0005B2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005B4 50F5               M         movf    TABLAT, W
0005B6                    M loop
0005B6 EC?? F???          M         call    WR_DATA         ; write to LCD
0005BA 000B               M         tblrd+*                 ; next row in table
0005BC 50F5               M         movf    TABLAT, W
0005BE E1??               M         bnz     loop
0005C0 6A20           00853         clrf    H_EE
0005C2 6A21           00854         clrf    L_EE
0005C4                00855 HOLD_LOG_INFO
0005C4 EC?? F???      00856         call    READ_KEY
                      00857         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005C8 0E0D               M         movlw   key0                ; poll for mode
0005CA 6210               M         cpfseq  KEY                 ; check this against key press
0005CC EF?? F???          M         goto    Exit
                          M 
0005D0                    M Next
0005D0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005D2 6A8A               M         clrf    LATB
0005D4 6A8B               M         clrf    LATC
0005D6 6A8C               M         clrf    LATD
0005D8 EF?? F???          M         goto    LOG
                          M 
0005DC                    M Exit
0005DC 0000               M         nop
0005DE D???           00858         bra     HOLD_LOG
                      00859         
                      00860 ;*******************************************************************************
                      00861 ; permanent logs
                      00862 ;*******************************************************************************
                      00863 
0005E0                00864 PERM_LOG
0005E0 6838           00865         setf    inStandby
0005E2 EC?? F???      00866         call    ClrLCD
                      00867         Display PermLog1
  0000                    M         local   loop
0005E6 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005E8 6EF8               M         movwf   TBLPTRU
0005EA 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005EC 6EF7               M         movwf   TBLPTRH
0005EE 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005F0 6EF6               M         movwf   TBLPTRL
0005F2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005F4 50F5               M         movf    TABLAT, W
0005F6                    M loop
0005F6 EC?? F???          M         call    WR_DATA         ; write to LCD
0005FA 000B               M         tblrd+*                 ; next row in table
0005FC 50F5               M         movf    TABLAT, W
0005FE E1??               M         bnz     loop
000600 EC?? F???      00868         call    LCD_L2
                      00869         Display PermLog2
  0000                    M         local   loop
000604 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000606 6EF8               M         movwf   TBLPTRU
000608 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
00060A 6EF7               M         movwf   TBLPTRH
00060C 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
00060E 6EF6               M         movwf   TBLPTRL
000610 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000612 50F5               M         movf    TABLAT, W
000614                    M loop
000614 EC?? F???          M         call    WR_DATA         ; write to LCD
000618 000B               M         tblrd+*                 ; next row in table
00061A 50F5               M         movf    TABLAT, W
00061C E1??               M         bnz     loop
                      00870         
00061E                00871 HOLD_PERM_LOG
00061E EC?? F???      00872         call    READ_KEY
                      00873         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000622 0E0D               M         movlw   key0                ; poll for mode
000624 6210               M         cpfseq  KEY                 ; check this against key press
000626 EF?? F???          M         goto    Exit
                          M 
00062A                    M Next
00062A 6A89               M         clrf    LATA                ; clear pins before proceeding
00062C 6A8A               M         clrf    LATB
00062E 6A8B               M         clrf    LATC
000630 6A8C               M         clrf    LATD
000632 EF?? F???          M         goto    STANDBY
                          M 
000636                    M Exit
000636 0000               M         nop
                      00874         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000638 0E00               M         movlw   key1                ; poll for mode
00063A 6210               M         cpfseq  KEY                 ; check this against key press
00063C EF?? F???          M         goto    Exit
                          M 
000640                    M Next
000640 6A89               M         clrf    LATA                ; clear pins before proceeding
000642 6A8A               M         clrf    LATB
000644 6A8B               M         clrf    LATC
000646 6A8C               M         clrf    LATD
000648 EF?? F???          M         goto    PLOG
                          M 
00064C                    M Exit
00064C 0000               M         nop
                      00875         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00064E 0E01               M         movlw   key2                ; poll for mode
000650 6210               M         cpfseq  KEY                 ; check this against key press
000652 EF?? F???          M         goto    Exit
                          M 
000656                    M Next
000656 6A89               M         clrf    LATA                ; clear pins before proceeding
000658 6A8A               M         clrf    LATB
00065A 6A8B               M         clrf    LATC
00065C 6A8C               M         clrf    LATD
00065E EF?? F???          M         goto    PLOG
                          M 
000662                    M Exit
000662 0000               M         nop
                      00876         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000664 0E02               M         movlw   key3                ; poll for mode
000666 6210               M         cpfseq  KEY                 ; check this against key press
000668 EF?? F???          M         goto    Exit
                          M 
00066C                    M Next
00066C 6A89               M         clrf    LATA                ; clear pins before proceeding
00066E 6A8A               M         clrf    LATB
000670 6A8B               M         clrf    LATC
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000672 6A8C               M         clrf    LATD
000674 EF?? F???          M         goto    PLOG
                          M 
000678                    M Exit
000678 0000               M         nop
                      00877         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
00067A 0E04               M         movlw   key4                ; poll for mode
00067C 6210               M         cpfseq  KEY                 ; check this against key press
00067E EF?? F???          M         goto    Exit
                          M 
000682                    M Next
000682 6A89               M         clrf    LATA                ; clear pins before proceeding
000684 6A8A               M         clrf    LATB
000686 6A8B               M         clrf    LATC
000688 6A8C               M         clrf    LATD
00068A EF?? F???          M         goto    PLOG
                          M 
00068E                    M Exit
00068E 0000               M         nop
                      00878         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000690 0E05               M         movlw   key5                ; poll for mode
000692 6210               M         cpfseq  KEY                 ; check this against key press
000694 EF?? F???          M         goto    Exit
                          M 
000698                    M Next
000698 6A89               M         clrf    LATA                ; clear pins before proceeding
00069A 6A8A               M         clrf    LATB
00069C 6A8B               M         clrf    LATC
00069E 6A8C               M         clrf    LATD
0006A0 EF?? F???          M         goto    PLOG
                          M 
0006A4                    M Exit
0006A4 0000               M         nop
                      00879         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006A6 0E06               M         movlw   key6                ; poll for mode
0006A8 6210               M         cpfseq  KEY                 ; check this against key press
0006AA EF?? F???          M         goto    Exit
                          M 
0006AE                    M Next
0006AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006B0 6A8A               M         clrf    LATB
0006B2 6A8B               M         clrf    LATC
0006B4 6A8C               M         clrf    LATD
0006B6 EF?? F???          M         goto    PLOG
                          M 
0006BA                    M Exit
0006BA 0000               M         nop
                      00880         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0006BC 0E08               M         movlw   key7                ; poll for mode
0006BE 6210               M         cpfseq  KEY                 ; check this against key press
0006C0 EF?? F???          M         goto    Exit
                          M 
0006C4                    M Next
0006C4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006C6 6A8A               M         clrf    LATB
0006C8 6A8B               M         clrf    LATC
0006CA 6A8C               M         clrf    LATD
0006CC EF?? F???          M         goto    PLOG
                          M 
0006D0                    M Exit
0006D0 0000               M         nop
                      00881         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0006D2 0E09               M         movlw   key8                ; poll for mode
0006D4 6210               M         cpfseq  KEY                 ; check this against key press
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006D6 EF?? F???          M         goto    Exit
                          M 
0006DA                    M Next
0006DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006DC 6A8A               M         clrf    LATB
0006DE 6A8B               M         clrf    LATC
0006E0 6A8C               M         clrf    LATD
0006E2 EF?? F???          M         goto    PLOG
                          M 
0006E6                    M Exit
0006E6 0000               M         nop
                      00882         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0006E8 0E0A               M         movlw   key9                ; poll for mode
0006EA 6210               M         cpfseq  KEY                 ; check this against key press
0006EC EF?? F???          M         goto    Exit
                          M 
0006F0                    M Next
0006F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F2 6A8A               M         clrf    LATB
0006F4 6A8B               M         clrf    LATC
0006F6 6A8C               M         clrf    LATD
0006F8 EF?? F???          M         goto    PLOG
                          M 
0006FC                    M Exit
0006FC 0000               M         nop
0006FE D???           00883         bra HOLD_PERM_LOG
                      00884         
000700                00885 PLOG
000700 6A38           00886         clrf    inStandby
000702 EC?? F???      00887         call    ClrLCD
                      00888         Display PermLog1
  0000                    M         local   loop
000706 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000708 6EF8               M         movwf   TBLPTRU
00070A 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00070C 6EF7               M         movwf   TBLPTRH
00070E 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000710 6EF6               M         movwf   TBLPTRL
000712 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000714 50F5               M         movf    TABLAT, W
000716                    M loop
000716 EC?? F???          M         call    WR_DATA         ; write to LCD
00071A 000B               M         tblrd+*                 ; next row in table
00071C 50F5               M         movf    TABLAT, W
00071E E1??               M         bnz     loop
                      00889         
                      00890         ; find the key press value
000720 C010 FFE8      00891         movff   KEY, WREG
000724 2AE8           00892         incf    WREG        ; W = KEY+1
000726 6E17           00893         movwf   temp
                      00894         
000728 42E8           00895         rrncf   WREG        ; division by 4
00072A 9EE8           00896         bcf     WREG, 7     ; clear last bit, overflow from rotate
00072C 42E8           00897         rrncf   WREG        
00072E 9EE8           00898         bcf     WREG, 7
000730 5E17           00899         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000732 C017 FFE8      00900         movff   temp, WREG
000736 C017 F011      00901         movff   temp, temp_KEY
00073A 0D15           00902         mullw   d'21'       ; indexed as mutliples of 21
                      00903 
00073C                00904 displayNum
00073C C011 FFE8      00905         movff   temp_KEY, WREG
000740 0F30           00906         addlw   0x30
000742 EC?? F???      00907         call    WR_DATA
000746 0E3A           00908         movlw   ":"
000748 EC?? F???      00909         call    WR_DATA
00074C 0E20           00910         movlw   " "
00074E EC?? F???      00911         call    WR_DATA
                      00912         
000752 CFF3 F021      00913         movff   PRODL, L_EE
000756 0E00           00914         movlw   d'0'
000758 2621           00915         addwf   L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00916         READEE  OP_sec, H_EE, L_EE
00075A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00075E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000762 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000764 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000766 80A6               M         bsf     EECON1, RD          ; read EEPROM
000768 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
00076C 2A21           00917         incf    L_EE
                      00918         READEE  OP_INT, H_EE, L_EE
00076E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000772 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000776 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000778 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00077A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00077C CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000780 2A21           00919         incf    L_EE
000782 EC?? F???      00920         call    DisplayExeTime
000786 CFF3 F021      00921         movff   PRODL, L_EE
                      00922         
                      00923         ; reset eeprom to beginning
00078A EC?? F???      00924         call    LCD_L2
00078E CFF3 F021      00925         movff   PRODL, L_EE
000792 EC?? F???      00926         call    DispOpRTC
                      00927         
000796                00928 HOLD_PLOG
000796 EC?? F???      00929         call    READ_KEY
                      00930         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
00079A 0E03               M         movlw   keyA                ; poll for mode
00079C 6210               M         cpfseq  KEY                 ; check this against key press
00079E EF?? F???          M         goto    Exit
                          M 
0007A2                    M Next
0007A2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A4 6A8A               M         clrf    LATB
0007A6 6A8B               M         clrf    LATC
0007A8 6A8C               M         clrf    LATD
0007AA EF?? F???          M         goto    PLOG_DETAILS
                          M 
0007AE                    M Exit
0007AE 0000               M         nop
                      00931         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007B0 0E0D               M         movlw   key0                ; poll for mode
0007B2 6210               M         cpfseq  KEY                 ; check this against key press
0007B4 EF?? F???          M         goto    Exit
                          M 
0007B8                    M Next
0007B8 6A89               M         clrf    LATA                ; clear pins before proceeding
0007BA 6A8A               M         clrf    LATB
0007BC 6A8B               M         clrf    LATC
0007BE 6A8C               M         clrf    LATD
0007C0 EF?? F???          M         goto    PERM_LOG
                          M 
0007C4                    M Exit
0007C4 0000               M         nop
0007C6 D???           00932         bra HOLD_PLOG
                      00933         
0007C8                00934 PLOG_DETAILS
0007C8 EC?? F???      00935         call    ClrLCD
                      00936         
                      00937         Display Log1
  0000                    M         local   loop
0007CC 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0007CE 6EF8               M         movwf   TBLPTRU
0007D0 0E??               M         movlw   high Log1       ; Move Table<15:8>
0007D2 6EF7               M         movwf   TBLPTRH
0007D4 0E??               M         movlw   low Log1        ; Move Table<7:0>
0007D6 6EF6               M         movwf   TBLPTRL
0007D8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007DA 50F5               M         movf    TABLAT, W
0007DC                    M loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007DC EC?? F???          M         call    WR_DATA         ; write to LCD
0007E0 000B               M         tblrd+*                 ; next row in table
0007E2 50F5               M         movf    TABLAT, W
0007E4 E1??               M         bnz     loop
0007E6 EC?? F???      00938         call    DisplayExeTime
                      00939         
0007EA EC?? F???      00940         call    LCD_L2
0007EE EC?? F???      00941         call    DispOpSort
                      00942         
0007F2                00943 HOLD_PLOG_DETAILS
0007F2 EC?? F???      00944         call    READ_KEY
                      00945         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007F6 0E0D               M         movlw   key0                ; poll for mode
0007F8 6210               M         cpfseq  KEY                 ; check this against key press
0007FA EF?? F???          M         goto    Exit
                          M 
0007FE                    M Next
0007FE 6A89               M         clrf    LATA                ; clear pins before proceeding
000800 6A8A               M         clrf    LATB
000802 6A8B               M         clrf    LATC
000804 6A8C               M         clrf    LATD
000806 EF?? F???          M         goto    PERM_LOG
                          M 
00080A                    M Exit
00080A 0000               M         nop
00080C D???           00946         bra HOLD_PLOG_DETAILS
                      00947         
                      00948 ;*******************************************************************************
                      00949 ; pc interface
                      00950 ;*******************************************************************************
                      00951 
00080E                00952 PC_MODE
00080E 6838           00953         setf    inStandby
000810 EC?? F???      00954         call    ClrLCD
                      00955         Display PC1
  0000                    M         local   loop
000814 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000816 6EF8               M         movwf   TBLPTRU
000818 0E??               M         movlw   high PC1        ; Move Table<15:8>
00081A 6EF7               M         movwf   TBLPTRH
00081C 0E??               M         movlw   low PC1         ; Move Table<7:0>
00081E 6EF6               M         movwf   TBLPTRL
000820 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000822 50F5               M         movf    TABLAT, W
000824                    M loop
000824 EC?? F???          M         call    WR_DATA         ; write to LCD
000828 000B               M         tblrd+*                 ; next row in table
00082A 50F5               M         movf    TABLAT, W
00082C E1??               M         bnz     loop
00082E EC?? F???      00956         call    LCD_L2
                      00957         Display PC2
  0000                    M         local   loop
000832 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000834 6EF8               M         movwf   TBLPTRU
000836 0E??               M         movlw   high PC2        ; Move Table<15:8>
000838 6EF7               M         movwf   TBLPTRH
00083A 0E??               M         movlw   low PC2         ; Move Table<7:0>
00083C 6EF6               M         movwf   TBLPTRL
00083E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000840 50F5               M         movf    TABLAT, W
000842                    M loop
000842 EC?? F???          M         call    WR_DATA         ; write to LCD
000846 000B               M         tblrd+*                 ; next row in table
000848 50F5               M         movf    TABLAT, W
00084A E1??               M         bnz     loop
00084C CFF9 F029      00958         movff   PCL, PC_PCL
000850 CFFA F02A      00959         movff   PCLATH, PC_PCLATH
000854 CFFB F02B      00960         movff   PCLATU, PC_PCLATU
                      00961         
000858                00962 HOLD_PC
000858 EC?? F???      00963         call    READ_KEY
                      00964         ChangeMode  key0, STANDBY
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
00085C 0E0D               M         movlw   key0                ; poll for mode
00085E 6210               M         cpfseq  KEY                 ; check this against key press
000860 EF?? F???          M         goto    Exit
                          M 
000864                    M Next
000864 6A89               M         clrf    LATA                ; clear pins before proceeding
000866 6A8A               M         clrf    LATB
000868 6A8B               M         clrf    LATC
00086A 6A8C               M         clrf    LATD
00086C EF?? F???          M         goto    STANDBY
                          M 
000870                    M Exit
000870 0000               M         nop
                      00965         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000872 0E0E               M         movlw   keyH                ; poll for mode
000874 6210               M         cpfseq  KEY                 ; check this against key press
000876 EF?? F???          M         goto    Exit
                          M 
00087A                    M Next
00087A 6A89               M         clrf    LATA                ; clear pins before proceeding
00087C 6A8A               M         clrf    LATB
00087E 6A8B               M         clrf    LATC
000880 6A8C               M         clrf    LATD
000882 EF?? F???          M         goto    PC_TRANSFER
                          M 
000886                    M Exit
000886 0000               M         nop
000888 D???           00966         bra     HOLD_PC
                      00967 
00088A                00968 PC_TRANSFER
00088A 6A38           00969         clrf    inStandby
00088C 6828           00970         setf    transferring
00088E EC?? F???      00971         call    ClrLCD
                      00972         Display PCTransfer
  0000                    M         local   loop
000892 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000894 6EF8               M         movwf   TBLPTRU
000896 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000898 6EF7               M         movwf   TBLPTRH
00089A 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
00089C 6EF6               M         movwf   TBLPTRL
00089E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008A0 50F5               M         movf    TABLAT, W
0008A2                    M loop
0008A2 EC?? F???          M         call    WR_DATA         ; write to LCD
0008A6 000B               M         tblrd+*                 ; next row in table
0008A8 50F5               M         movf    TABLAT, W
0008AA E1??               M         bnz     loop
0008AC EC?? F???      00973         call    DataUSART
0008B0 6A28           00974         clrf    transferring
0008B2 EF?? F???      00975         goto    STANDBY
                      00976         
                      00977 ;*******************************************************************************
                      00978 ; subroutines
                      00979 ;*******************************************************************************
                      00980 
0008B6                00981 SaveData
0008B6 C02D FFE8      00982         movff       ESKA, WREG
0008BA 0F30           00983         addlw       0x30
                      00984         WriteEE     WREG, H_EE, L_EE
0008BC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008C0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008C4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008C8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008CA D???               M         bra     $-2
                          M 
0008CC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008CE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008D0 84A6               M         bsf     EECON1, WREN        ; enable write
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008D2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008D4 98A1               M         bcf     PIR2, EEIF
                          M 
0008D6 0E55               M         movlw   0x55
0008D8 6EA7               M         movwf   EECON2              ; write 55h
0008DA 0EAA               M         movlw   0xaa
0008DC 6EA7               M         movwf   EECON2              ; write 0xaa
0008DE 82A6               M         bsf     EECON1, WR          ; begin write
0008E0 B2A6               M         btfsc   EECON1, WR
0008E2 D???               M         bra     $-2
                          M 
0008E4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008E6 94A6               M         bcf     EECON1, WREN        ; disable writes
0008E8 2A21           00985         incf        L_EE
                      00986         
0008EA C02E FFE8      00987         movff       ESKA_NOCAP, WREG
0008EE 0F30           00988         addlw       0x30
                      00989         WriteEE     WREG, H_EE, L_EE
0008F0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008F4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008F8 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008FC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008FE D???               M         bra     $-2
                          M 
000900 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000902 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000904 84A6               M         bsf     EECON1, WREN        ; enable write
000906 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000908 98A1               M         bcf     PIR2, EEIF
                          M 
00090A 0E55               M         movlw   0x55
00090C 6EA7               M         movwf   EECON2              ; write 55h
00090E 0EAA               M         movlw   0xaa
000910 6EA7               M         movwf   EECON2              ; write 0xaa
000912 82A6               M         bsf     EECON1, WR          ; begin write
000914 B2A6               M         btfsc   EECON1, WR
000916 D???               M         bra     $-2
                          M 
000918 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00091A 94A6               M         bcf     EECON1, WREN        ; disable writes
00091C 2A21           00990         incf        L_EE
                      00991         
00091E C02F FFE8      00992         movff       YOP, WREG
000922 0F30           00993         addlw       0x30
                      00994         WriteEE     WREG, H_EE, L_EE
000924 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000928 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00092C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000930 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000932 D???               M         bra     $-2
                          M 
000934 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000936 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000938 84A6               M         bsf     EECON1, WREN        ; enable write
00093A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00093C 98A1               M         bcf     PIR2, EEIF
                          M 
00093E 0E55               M         movlw   0x55
000940 6EA7               M         movwf   EECON2              ; write 55h
000942 0EAA               M         movlw   0xaa
000944 6EA7               M         movwf   EECON2              ; write 0xaa
000946 82A6               M         bsf     EECON1, WR          ; begin write
000948 B2A6               M         btfsc   EECON1, WR
00094A D???               M         bra     $-2
                          M 
00094C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00094E 94A6               M         bcf     EECON1, WREN        ; disable writes
000950 2A21           00995         incf        L_EE
                      00996         
000952 C030 FFE8      00997         movff       YOP_NOCAP, WREG
000956 0F30           00998         addlw       0x30
                      00999         WriteEE     WREG, H_EE, L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000958 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00095C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000960 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000964 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000966 D???               M         bra     $-2
                          M 
000968 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00096A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00096C 84A6               M         bsf     EECON1, WREN        ; enable write
00096E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000970 98A1               M         bcf     PIR2, EEIF
                          M 
000972 0E55               M         movlw   0x55
000974 6EA7               M         movwf   EECON2              ; write 55h
000976 0EAA               M         movlw   0xaa
000978 6EA7               M         movwf   EECON2              ; write 0xaa
00097A 82A6               M         bsf     EECON1, WR          ; begin write
00097C B2A6               M         btfsc   EECON1, WR
00097E D???               M         bra     $-2
                          M 
000980 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000982 94A6               M         bcf     EECON1, WREN        ; disable writes
000984 2A21           01000         incf        L_EE
                      01001         
000986 C037 FFE8      01002         movff       STOP_CONDITION, WREG
00098A 0F30           01003         addlw       0x30
                      01004         WriteEE     WREG, H_EE, L_EE
00098C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000990 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000994 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000998 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00099A D???               M         bra     $-2
                          M 
00099C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00099E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009A0 84A6               M         bsf     EECON1, WREN        ; enable write
0009A2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009A4 98A1               M         bcf     PIR2, EEIF
                          M 
0009A6 0E55               M         movlw   0x55
0009A8 6EA7               M         movwf   EECON2              ; write 55h
0009AA 0EAA               M         movlw   0xaa
0009AC 6EA7               M         movwf   EECON2              ; write 0xaa
0009AE 82A6               M         bsf     EECON1, WR          ; begin write
0009B0 B2A6               M         btfsc   EECON1, WR
0009B2 D???               M         bra     $-2
                          M 
0009B4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009B6 94A6               M         bcf     EECON1, WREN        ; disable writes
0009B8 2A21           01005         incf        L_EE
                      01006         
0009BA 0E00           01007         movlw       d'0'
0009BC 6E20           01008         movwf       H_EE
0009BE 0EA8           01009         movlw       d'168'              ; take d'168' as last
0009C0 6E21           01010         movwf       L_EE
0009C2 0E00           01011         movlw       d'0'
0009C4 6E23           01012         movwf       tempH_EE
0009C6 0EDC           01013         movlw       d'220'              ; temp for low constant
0009C8 6E24           01014         movwf       tempL_EE
                      01015         
0009CA 6A16           01016         clrf        counter2
0009CC 6A15           01017         clrf        counter
                      01018         
0009CE                01019 ShiftLoop
0009CE 2A15           01020         incf            counter
                      01021         READEE          REG_EE, H_EE, L_EE
0009D0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0009D4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0009D8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0009DA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0009DC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0009DE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009E2 0E15           01022         movlw           d'21'
0009E4 2621           01023         addwf           L_EE
                      01024         WriteEE         REG_EE, H_EE, L_EE
0009E6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009EA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009EE C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0009F2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009F4 D???               M         bra     $-2
                          M 
0009F6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009F8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009FA 84A6               M         bsf     EECON1, WREN        ; enable write
0009FC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009FE 98A1               M         bcf     PIR2, EEIF
                          M 
000A00 0E55               M         movlw   0x55
000A02 6EA7               M         movwf   EECON2              ; write 55h
000A04 0EAA               M         movlw   0xaa
000A06 6EA7               M         movwf   EECON2              ; write 0xaa
000A08 82A6               M         bsf     EECON1, WR          ; begin write
000A0A B2A6               M         btfsc   EECON1, WR
000A0C D???               M         bra     $-2
                          M 
000A0E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A10 94A6               M         bcf     EECON1, WREN        ; disable writes
000A12 0E14           01025         movlw           d'20'
000A14 5E21           01026         subwf           L_EE
000A16 0E15           01027         movlw           d'21'
000A18 6215           01028         cpfseq          counter
000A1A EF?? F???      01029         goto            ShiftLoop
                      01030         
                      01031         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A1E 0E2A           01032         movlw           d'42'
000A20 5E21           01033         subwf           L_EE
000A22 0EDC           01034         movlw           d'220'
000A24 6E24           01035         movwf           tempL_EE
000A26 6A15           01036         clrf            counter
000A28 2A16           01037         incf            counter2
000A2A 0E09           01038         movlw           d'9'
000A2C 6216           01039         cpfseq          counter2        ; Skip if 9 shifts were made
000A2E EF?? F???      01040         goto            ShiftLoop
                      01041 
000A32 0012           01042         return
                      01043         
000A34                01044 RTC_INIT
                      01045         ; set sda and scl to high
000A34 9882           01046         bcf     PORTC, 4
000A36 9682           01047         bcf     PORTC, 3
000A38 8894           01048         bsf     TRISC, 4
000A3A 8694           01049         bsf     TRISC, 3
                      01050         
000A3C EC?? F???      01051         call    INIT_RTC
                      01052         
                      01053         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A40 0012           01054 return
                      01055         
000A42                01056 SAVE_TIME
                      01057         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A42 0E02               M     movlw   0x02
000A44 6E??               M     movwf   regaddress
000A46 EC?? F???          M     call    read_rtc
000A4A C??? FFE8          M     movff   datachar, WREG
000A4E EC?? F???          M     call    rtc_convert
                      01058         rtc_read    0x02        ; hours
000A52 0E02               M     movlw   0x02
000A54 6E??               M     movwf   regaddress
000A56 EC?? F???          M     call    read_rtc
000A5A C??? FFE8          M     movff   datachar, WREG
000A5E EC?? F???          M     call    rtc_convert
000A62 EC?? F???      01059         call    WriteEE_RTC
                      01060         rtc_read    0x01        ; minutes
000A66 0E01               M     movlw   0x01
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A68 6E??               M     movwf   regaddress
000A6A EC?? F???          M     call    read_rtc
000A6E C??? FFE8          M     movff   datachar, WREG
000A72 EC?? F???          M     call    rtc_convert
000A76 EC?? F???      01061         call    WriteEE_RTC
                      01062         rtc_read    0x06        ; years
000A7A 0E06               M     movlw   0x06
000A7C 6E??               M     movwf   regaddress
000A7E EC?? F???          M     call    read_rtc
000A82 C??? FFE8          M     movff   datachar, WREG
000A86 EC?? F???          M     call    rtc_convert
000A8A EC?? F???      01063         call    WriteEE_RTC
                      01064         rtc_read    0x05        ; months
000A8E 0E05               M     movlw   0x05
000A90 6E??               M     movwf   regaddress
000A92 EC?? F???          M     call    read_rtc
000A96 C??? FFE8          M     movff   datachar, WREG
000A9A EC?? F???          M     call    rtc_convert
000A9E EC?? F???      01065         call    WriteEE_RTC
                      01066         rtc_read    0x04        ; days
000AA2 0E04               M     movlw   0x04
000AA4 6E??               M     movwf   regaddress
000AA6 EC?? F???          M     call    read_rtc
000AAA C??? FFE8          M     movff   datachar, WREG
000AAE EC?? F???          M     call    rtc_convert
000AB2 EC?? F???      01067         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000AB6 0012           01068 return
                      01069         
000AB8                01070 SAVE_EXE_TIME
                      01071         
Warning[202]: Argument out of range.  Least significant bits used.
000AB8 3818           01072         swapf   OP_sec, WREG    ; 100's seconds
000ABA 6E17           01073         movwf   temp
000ABC 0E0F           01074         movlw   0x0f
000ABE 1617           01075         andwf   temp
000AC0 C017 FFE8      01076         movff   temp, WREG
000AC4 0F30           01077         addlw   0x30    
                      01078         WriteEE WREG, H_EE, L_EE
000AC6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000ACA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000ACE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000AD2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AD4 D???               M         bra     $-2
                          M 
000AD6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AD8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000ADA 84A6               M         bsf     EECON1, WREN        ; enable write
000ADC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000ADE 98A1               M         bcf     PIR2, EEIF
                          M 
000AE0 0E55               M         movlw   0x55
000AE2 6EA7               M         movwf   EECON2              ; write 55h
000AE4 0EAA               M         movlw   0xaa
000AE6 6EA7               M         movwf   EECON2              ; write 0xaa
000AE8 82A6               M         bsf     EECON1, WR          ; begin write
000AEA B2A6               M         btfsc   EECON1, WR
000AEC D???               M         bra     $-2
                          M 
000AEE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AF0 94A6               M         bcf     EECON1, WREN        ; disable writes
000AF2 2A21           01079         incf    L_EE
                      01080         
000AF4 C018 F017      01081         movff   OP_sec, temp    ; 10's seconds
000AF8 0E0F           01082         movlw   0x0f
000AFA 1617           01083         andwf   temp            ; Temp = lower nibble of Op_sec
000AFC C017 FFE8      01084         movff   temp, WREG      ; W = Temp
000B00 0F30           01085         addlw   0x30            ; Convert to ASCII
                      01086         WriteEE WREG, H_EE, L_EE
000B02 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B06 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B0A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B0E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B10 D???               M         bra     $-2
                          M 
000B12 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B14 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B16 84A6               M         bsf     EECON1, WREN        ; enable write
000B18 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B1A 98A1               M         bcf     PIR2, EEIF
                          M 
000B1C 0E55               M         movlw   0x55
000B1E 6EA7               M         movwf   EECON2              ; write 55h
000B20 0EAA               M         movlw   0xaa
000B22 6EA7               M         movwf   EECON2              ; write 0xaa
000B24 82A6               M         bsf     EECON1, WR          ; begin write
000B26 B2A6               M         btfsc   EECON1, WR
000B28 D???               M         bra     $-2
                          M 
000B2A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B2C 94A6               M         bcf     EECON1, WREN        ; disable writes
000B2E 2A21           01087         incf    L_EE
                      01088         
Warning[202]: Argument out of range.  Least significant bits used.
000B30 3819           01089         swapf   OP_INT, WREG    ;1's seconds
000B32 6E17           01090         movwf   temp
000B34 0E0F           01091         movlw   0x0f
000B36 1617           01092         andwf   temp
000B38 C017 FFE8      01093         movff   temp, WREG
000B3C 0F30           01094         addlw   0x30
                      01095         WriteEE WREG, H_EE, L_EE
000B3E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B42 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B46 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B4A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B4C D???               M         bra     $-2
                          M 
000B4E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B50 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B52 84A6               M         bsf     EECON1, WREN        ; enable write
000B54 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B56 98A1               M         bcf     PIR2, EEIF
                          M 
000B58 0E55               M         movlw   0x55
000B5A 6EA7               M         movwf   EECON2              ; write 55h
000B5C 0EAA               M         movlw   0xaa
000B5E 6EA7               M         movwf   EECON2              ; write 0xaa
000B60 82A6               M         bsf     EECON1, WR          ; begin write
000B62 B2A6               M         btfsc   EECON1, WR
000B64 D???               M         bra     $-2
                          M 
000B66 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B68 94A6               M         bcf     EECON1, WREN        ; disable writes
000B6A 2A21           01096         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000B6C 0012           01097 return
                      01098         
                      01099                 
000B6E                01100 DISPLAY_RTC
                      01101         ; display data in this format hh/minmin/yy yy/mm/dd
                      01102         
                      01103         rtc_read    0x02            ; 0x02 from DS1307 - hours
000B6E 0E02               M     movlw   0x02
000B70 6E??               M     movwf   regaddress
000B72 EC?? F???          M     call    read_rtc
000B76 C??? FFE8          M     movff   datachar, WREG
000B7A EC?? F???          M     call    rtc_convert
000B7E C??? FFE8      01104         movff   tens_digit,WREG
000B82 EC?? F???      01105         call    WR_DATA
000B86 C??? FFE8      01106         movff   ones_digit,WREG
000B8A EC?? F???      01107         call    WR_DATA
000B8E 0E68           01108         movlw   "h"
000B90 EC?? F???      01109         call    WR_DATA
                      01110         
                      01111         rtc_read    0x01            ; 0x01 from DS1307 - minutes
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B94 0E01               M     movlw   0x01
000B96 6E??               M     movwf   regaddress
000B98 EC?? F???          M     call    read_rtc
000B9C C??? FFE8          M     movff   datachar, WREG
000BA0 EC?? F???          M     call    rtc_convert
000BA4 C??? FFE8      01112         movff   tens_digit,WREG
000BA8 EC?? F???      01113         call    WR_DATA
000BAC C??? FFE8      01114         movff   ones_digit,WREG
000BB0 EC?? F???      01115         call    WR_DATA
                      01116         
                      01117         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000BB4 0E00               M     movlw   0x00
000BB6 6E??               M     movwf   regaddress
000BB8 EC?? F???          M     call    read_rtc
000BBC C??? FFE8          M     movff   datachar, WREG
000BC0 EC?? F???          M     call    rtc_convert
000BC4 C??? FFE8      01118         movff   tens_digit,WREG
000BC8 EC?? F???      01119         call    WR_DATA
000BCC C??? FFE8      01120         movff   ones_digit,WREG
000BD0 EC?? F???      01121         call    WR_DATA
000BD4 0E20           01122         movlw   " "
000BD6 EC?? F???      01123         call    WR_DATA
                      01124         
                      01125         rtc_read    0x06            ; 0x06 from DS1307 - years
000BDA 0E06               M     movlw   0x06
000BDC 6E??               M     movwf   regaddress
000BDE EC?? F???          M     call    read_rtc
000BE2 C??? FFE8          M     movff   datachar, WREG
000BE6 EC?? F???          M     call    rtc_convert
000BEA C??? FFE8      01126         movff   tens_digit,WREG
000BEE EC?? F???      01127         call    WR_DATA
000BF2 C??? FFE8      01128         movff   ones_digit,WREG
000BF6 EC?? F???      01129         call    WR_DATA
000BFA 0E2F           01130         movlw   "/"
000BFC EC?? F???      01131         call    WR_DATA
                      01132         
                      01133         rtc_read    0x05            ; 0x05 from DS1307 - months
000C00 0E05               M     movlw   0x05
000C02 6E??               M     movwf   regaddress
000C04 EC?? F???          M     call    read_rtc
000C08 C??? FFE8          M     movff   datachar, WREG
000C0C EC?? F???          M     call    rtc_convert
000C10 C??? FFE8      01134         movff   tens_digit,WREG
000C14 EC?? F???      01135         call    WR_DATA
000C18 C??? FFE8      01136         movff   ones_digit,WREG
000C1C EC?? F???      01137         call    WR_DATA
000C20 0E2F           01138         movlw   "/"
000C22 EC?? F???      01139         call    WR_DATA
                      01140         
                      01141         rtc_read    0x04            ; 0x04 from DS1307 - days
000C26 0E04               M     movlw   0x04
000C28 6E??               M     movwf   regaddress
000C2A EC?? F???          M     call    read_rtc
000C2E C??? FFE8          M     movff   datachar, WREG
000C32 EC?? F???          M     call    rtc_convert
000C36 C??? FFE8      01142         movff   tens_digit,WREG
000C3A EC?? F???      01143         call    WR_DATA
000C3E C??? FFE8      01144         movff   ones_digit,WREG
000C42 EC?? F???      01145         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C46 0012           01146 return
                      01147         
000C48                01148 SET_TIME
                      01149         rtc_resetAll
                          M 
000C48 6A??               M     clrf    databyte
000C4A 0E06               M     movlw   6
000C4C 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000C4E                    M     del_loop0
000C4E EC?? F???          M     call    write_rtc
000C52 2E??               M     decfsz  regaddress
000C54 D???               M     bra     del_loop0
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C56 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01150         
                      01151         rtc_set 0x00,   b'10000000'
000C5A 0E00               M     movlw   0x00
000C5C 6E??               M     movwf   regaddress
000C5E 0E80               M     movlw   b'10000000'
000C60 6E??               M     movwf   databyte
000C62 EC?? F???          M     call    write_rtc
                      01152 
                      01153         rtc_set 0x06,   b'00010111'             ; Year 17
000C66 0E06               M     movlw   0x06
000C68 6E??               M     movwf   regaddress
000C6A 0E17               M     movlw   b'00010111'
000C6C 6E??               M     movwf   databyte
000C6E EC?? F???          M     call    write_rtc
                      01154         rtc_set 0x05,   b'00000011'             ; Month 03
000C72 0E05               M     movlw   0x05
000C74 6E??               M     movwf   regaddress
000C76 0E03               M     movlw   b'00000011'
000C78 6E??               M     movwf   databyte
000C7A EC?? F???          M     call    write_rtc
                      01155         rtc_set 0x04,   b'00000100'             ; Date 04
000C7E 0E04               M     movlw   0x04
000C80 6E??               M     movwf   regaddress
000C82 0E04               M     movlw   b'00000100'
000C84 6E??               M     movwf   databyte
000C86 EC?? F???          M     call    write_rtc
                      01156         rtc_set 0x02,   b'00010010'             ; Hours 12
000C8A 0E02               M     movlw   0x02
000C8C 6E??               M     movwf   regaddress
000C8E 0E12               M     movlw   b'00010010'
000C90 6E??               M     movwf   databyte
000C92 EC?? F???          M     call    write_rtc
                      01157         rtc_set 0x01,   b'01001000'             ; Minutes 27
000C96 0E01               M     movlw   0x01
000C98 6E??               M     movwf   regaddress
000C9A 0E48               M     movlw   b'01001000'
000C9C 6E??               M     movwf   databyte
000C9E EC?? F???          M     call    write_rtc
                      01158         rtc_set 0x00,   b'00000000'             ; Seconds 0
000CA2 0E00               M     movlw   0x00
000CA4 6E??               M     movwf   regaddress
000CA6 0E00               M     movlw   b'00000000'
000CA8 6E??               M     movwf   databyte
000CAA EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000CAE 0012           01159 return
                      01160         
000CB0                01161 INIT_USART
                      01162         
000CB0 8E94           01163         bsf     TRISC, 7        ; set RC7=USART RC
000CB2 9C94           01164         bcf     TRISC, 6        ; clear RC6=USART TX
                      01165 
000CB4 0E0F           01166         movlw   15              ; baud rate 9600
000CB6 6EAF           01167         movwf   SPBRG
000CB8 6AAC           01168         clrf    TXSTA
                      01169         
000CBA 6AAB           01170         clrf    RCSTA
000CBC 8EAB           01171         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000CBE 88AB           01172         bsf     RCSTA,CREN      ; continous receive
                      01173         
000CC0 8AAC           01174         bsf     TXSTA, TXEN     ; transmit enabled
000CC2 0012           01175         return
                      01176 
000CC4                01177 DataUSART
000CC4 0E02           01178         movlw   0x02
000CC6 EC?? F???      01179         call    USART_WAIT
000CCA 0E0D           01180         movlw   0x0D
000CCC EC?? F???      01181         call    USART_WAIT
                      01182         
000CD0 6A15           01183         clrf    counter         ; used to cycle through past 9 eeprom logs
000CD2 6A16           01184         clrf    counter2        ; used to transmit all 18 bits of saved data
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01185         
000CD4                01186 TRANSFER_LOGS
000CD4 0E15           01187         movlw   d'21'           ; logs are 21 bits apart
000CD6 0215           01188         mulwf   counter         ; log number one starts at eeprom address 0
000CD8 CFF3 F021      01189         movff   PRODL, L_EE     ; low address now points to count X 21
000CDC 6A16           01190         clrf    counter2
                      01191         
000CDE                01192 TRANSFER_DATA   
                      01193         READEE  WREG, H_EE, L_EE
000CDE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CE2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000CE6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CE8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CEA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CEC CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CF0 EC?? F???      01194         call    USART_WAIT      ; transfer bit
000CF4 2A21           01195         incf    L_EE
                      01196         
000CF6 2A16           01197         incf    counter2
000CF8 0E12           01198         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000CFA 6216           01199         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000CFC D???           01200         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01201         
000CFE EC?? F???      01202         call    USART_LINE      ; new line because a e s t h e t i c
                      01203         
000D02 2A15           01204         incf    counter
000D04 0E08           01205         movlw   d'8'            ; we save up to the last 9 permanent logs
000D06 6215           01206         cpfseq  counter
000D08 D???           01207         bra     TRANSFER_LOGS
                      01208         
000D0A EC?? F???      01209         call    LCD_L2
                      01210         Display PCComplete
  0000                    M         local   loop
000D0E 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D10 6EF8               M         movwf   TBLPTRU
000D12 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D14 6EF7               M         movwf   TBLPTRH
000D16 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D18 6EF6               M         movwf   TBLPTRL
000D1A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D1C 50F5               M         movf    TABLAT, W
000D1E                    M loop
000D1E EC?? F???          M         call    WR_DATA         ; write to LCD
000D22 000B               M         tblrd+*                 ; next row in table
000D24 50F5               M         movf    TABLAT, W
000D26 E1??               M         bnz     loop
                      01211         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D28 0E28               M         movlw   0x28
000D2A 6E1A               M         movwf   delayR
                          M 
000D2C                    M loop
000D2C EC?? F???          M         call    Delay50ms
000D30 2E1A               M         decfsz  delayR
000D32 EF?? F???          M         goto    loop
000D36 0012           01212         return                  ; done transmitting data
                      01213         
000D38                01214 USART_WAIT
000D38 6EAD           01215         movwf   TXREG
000D3A A2AC           01216         btfss   TXSTA, 1
000D3C EF?? F???      01217         goto    $-2
000D40 0012           01218         return
                      01219 
000D42                01220 USART_LINE
000D42 0E0A           01221         movlw   0x0A
000D44 EC?? F???      01222         call    USART_WAIT
000D48 0E0D           01223         movlw   0x0D
000D4A EC?? F???      01224         call    USART_WAIT
000D4E 0012           01225         return
                      01226         
000D50                01227 Delay5us
000D50 0E78           01228         movlw   d'120'
000D52 6E1B           01229         movwf   d5us
                      01230 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D54                01231 loop5us
000D54 2E1B           01232         decfsz  d5us
000D56 EF?? F???      01233         goto    loop5us
000D5A 0000           01234         nop
000D5C 0012           01235         return
                      01236 
000D5E                01237 Delay200us
000D5E 0EA4           01238         movlw   0xA4
000D60 6E1C           01239         movwf   d200us
                      01240 
000D62                01241 loop200us
000D62 2E1C           01242         decfsz  d200us
000D64 EF?? F???      01243         goto    loop200us
000D68 0000           01244         nop
000D6A 0012           01245         return
                      01246 
000D6C                01247 Delay50ms
000D6C 0EF9           01248         movlw   0xF9
000D6E 6E1D           01249         movwf   d50ms
                      01250 
000D70                01251 loop50ms
000D70 EC?? F???      01252         call    Delay200us
000D74 2E1D           01253         decfsz  d50ms
                      01254 
000D76                01255 Cycles
000D76 EF?? F???      01256         goto    loop50ms
000D7A EC?? F???      01257         call    Delay200us
000D7E 0012           01258         return
                      01259 
000D80                01260 WriteEE_RTC
                      01261         WriteEE tens_digit, H_EE, L_EE
000D80 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D84 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D88 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000D8C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D8E D???               M         bra     $-2
                          M 
000D90 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D92 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D94 84A6               M         bsf     EECON1, WREN        ; enable write
000D96 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D98 98A1               M         bcf     PIR2, EEIF
                          M 
000D9A 0E55               M         movlw   0x55
000D9C 6EA7               M         movwf   EECON2              ; write 55h
000D9E 0EAA               M         movlw   0xaa
000DA0 6EA7               M         movwf   EECON2              ; write 0xaa
000DA2 82A6               M         bsf     EECON1, WR          ; begin write
000DA4 B2A6               M         btfsc   EECON1, WR
000DA6 D???               M         bra     $-2
                          M 
000DA8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DAA 94A6               M         bcf     EECON1, WREN        ; disable writes
000DAC 2A21           01262         incf    L_EE
                      01263         WriteEE ones_digit, H_EE, L_EE
000DAE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DB2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DB6 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000DBA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DBC D???               M         bra     $-2
                          M 
000DBE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DC0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DC2 84A6               M         bsf     EECON1, WREN        ; enable write
000DC4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DC6 98A1               M         bcf     PIR2, EEIF
                          M 
000DC8 0E55               M         movlw   0x55
000DCA 6EA7               M         movwf   EECON2              ; write 55h
000DCC 0EAA               M         movlw   0xaa
000DCE 6EA7               M         movwf   EECON2              ; write 0xaa
000DD0 82A6               M         bsf     EECON1, WR          ; begin write
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DD2 B2A6               M         btfsc   EECON1, WR
000DD4 D???               M         bra     $-2
                          M 
000DD6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DD8 94A6               M         bcf     EECON1, WREN        ; disable writes
000DDA 2A21           01264         incf    L_EE
000DDC 0012           01265         return
                      01266 
000DDE                01267 ClearEEPROM_21
000DDE 6A20           01268         clrf    H_EE
000DE0 6A21           01269         clrf    L_EE
000DE2 681F           01270         setf    clear_EE
000DE4 6A15           01271         clrf    counter
000DE6                01272 ClearNext
                      01273         WriteEE         clear_EE, H_EE, L_EE
000DE6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DEA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DEE C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000DF2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DF4 D???               M         bra     $-2
                          M 
000DF6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DF8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DFA 84A6               M         bsf     EECON1, WREN        ; enable write
000DFC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DFE 98A1               M         bcf     PIR2, EEIF
                          M 
000E00 0E55               M         movlw   0x55
000E02 6EA7               M         movwf   EECON2              ; write 55h
000E04 0EAA               M         movlw   0xaa
000E06 6EA7               M         movwf   EECON2              ; write 0xaa
000E08 82A6               M         bsf     EECON1, WR          ; begin write
000E0A B2A6               M         btfsc   EECON1, WR
000E0C D???               M         bra     $-2
                          M 
000E0E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E10 94A6               M         bcf     EECON1, WREN        ; disable writes
000E12 2A15           01274         incf            counter
000E14 2A21           01275         incf            L_EE
000E16 0E15           01276         movlw           d'21'
000E18 6215           01277         cpfseq          counter
000E1A EF?? F???      01278         goto            ClearNext
000E1E 6A20           01279         clrf            H_EE
000E20 6A21           01280         clrf            L_EE
000E22 0012           01281         return
                      01282         
000E24                01283 READ_KEY
000E24 A281           01284         btfss   PORTB, 1        ; check for keypad interrupt
000E26 EF?? F???      01285         goto    READ_KEY
000E2A 3881           01286         swapf   PORTB, W
000E2C 0B0F           01287         andlw   0x0F
000E2E 6E10           01288         movwf   KEY
000E30 B281           01289         btfsc   PORTB, 1
000E32 EF?? F???      01290         goto    $-2
000E36 0012           01291         return
                      01292 
000E38                01293 READ_KEY_TIME
000E38 EC?? F???      01294         call        LCD_L2          ; go to second line to print RTC    
                      01295         ; display the time
                      01296         ; call      DISPLAY_RTC 
                      01297 
000E3C A281           01298         btfss       PORTB, 1    ; keypad interrupt
000E3E EF?? F???      01299         goto        READ_KEY_TIME
000E42 3881           01300         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E44 0B0F           01301         andlw       0x0F        ; only want W3:0
000E46 6E10           01302         movwf       KEY         ; write this value to the KEY
000E48 B281           01303         btfsc       PORTB, 1    ; wait for release
000E4A EF?? F???      01304         goto        $-2         ; go back one instruction
000E4E 0012           01305         return
                      01306 
000E50                01307 DisplayExeTime
                      01308         READEE  REG_EE, H_EE, L_EE
000E50 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E54 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E58 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E5A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E5C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E5E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E62 0EFF           01309         movlw   0xFF
000E64 6222           01310         cpfseq  REG_EE
000E66 EF?? F???      01311         goto    NoSkipDispExeTime
                      01312         Display NoData
  0000                    M         local   loop
000E6A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E6C 6EF8               M         movwf   TBLPTRU
000E6E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E70 6EF7               M         movwf   TBLPTRH
000E72 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E74 6EF6               M         movwf   TBLPTRL
000E76 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E78 50F5               M         movf    TABLAT, W
000E7A                    M loop
000E7A EC?? F???          M         call    WR_DATA         ; write to LCD
000E7E 000B               M         tblrd+*                 ; next row in table
000E80 50F5               M         movf    TABLAT, W
000E82 E1??               M         bnz     loop
000E84 0EFF           01313         movlw   0xFF
000E86 6022           01314         cpfslt  REG_EE
000E88 EF?? F???      01315         goto    SkipDispExeTime
000E8C 0012           01316         return
                      01317 
000E8E                01318 NoSkipDispExeTime
                      01319         READEE  WREG, H_EE, L_EE
000E8E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E92 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E96 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E98 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E9A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E9C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EA0 EC?? F???      01320         call    WR_DATA
000EA4 2A21           01321         incf    L_EE
                      01322         
                      01323         READEE  WREG, H_EE, L_EE
000EA6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EAA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EAE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EB0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EB2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EB4 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EB8 EC?? F???      01324         call    WR_DATA
000EBC 2A21           01325         incf    L_EE
                      01326         
                      01327         READEE  WREG, H_EE, L_EE
000EBE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EC2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EC6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EC8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ECA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ECC CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000ED0 EC?? F???      01328         call    WR_DATA
000ED4 2A21           01329         incf    L_EE
                      01330 
000ED6 0E73           01331         movlw   0x73            ; Write 's'
000ED8 EC?? F???      01332         call    WR_DATA
000EDC EC?? F???      01333         call    LCD_L2
000EE0                01334 SkipDispExeTime
000EE0 0012           01335         return
                      01336 
000EE2                01337 DispOpSort
                      01338         READEE  REG_EE, H_EE, L_EE
000EE2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EE6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EEA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EEC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EEE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EF0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EF4 0EFF           01339         movlw   0xff
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EF6 6222           01340         cpfseq  REG_EE
000EF8 EF?? F???      01341         goto    NoSkipDispOpSort
                      01342         Display NoData
  0000                    M         local   loop
000EFC 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EFE 6EF8               M         movwf   TBLPTRU
000F00 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F02 6EF7               M         movwf   TBLPTRH
000F04 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F06 6EF6               M         movwf   TBLPTRL
000F08 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F0A 50F5               M         movf    TABLAT, W
000F0C                    M loop
000F0C EC?? F???          M         call    WR_DATA         ; write to LCD
000F10 000B               M         tblrd+*                 ; next row in table
000F12 50F5               M         movf    TABLAT, W
000F14 E1??               M         bnz     loop
000F16 0EFF           01343         movlw   0xff
000F18 6022           01344         cpfslt  REG_EE
000F1A EF?? F???      01345         goto    SkipDispOpSort
                      01346 
000F1E                01347 NoSkipDispOpSort
000F1E 0E61           01348         movlw   "a"
000F20 EC?? F???      01349         call    WR_DATA
                      01350         
                      01351         READEE  REG_EE, H_EE, L_EE
000F24 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F28 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F2C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F2E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F30 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F32 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F36 C022 FFE8      01352         movff   REG_EE, WREG
000F3A EC?? F???      01353         call    WR_DATA
000F3E 2A21           01354         incf    L_EE
                      01355         
000F40 0E20           01356         movlw   " "
000F42 EC?? F???      01357         call    WR_DATA
                      01358         
000F46 0E62           01359         movlw   "b"
000F48 EC?? F???      01360         call    WR_DATA
                      01361         
                      01362         READEE  REG_EE, H_EE, L_EE
000F4C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F50 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F54 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F56 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F58 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F5A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F5E C022 FFE8      01363         movff   REG_EE, WREG
000F62 EC?? F???      01364         call    WR_DATA
000F66 2A21           01365         incf    L_EE
                      01366         
000F68 0E20           01367         movlw   " "
000F6A EC?? F???      01368         call    WR_DATA
                      01369         
000F6E 0E63           01370         movlw   "c"
000F70 EC?? F???      01371         call    WR_DATA
                      01372         
                      01373         READEE  REG_EE, H_EE, L_EE
000F74 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F78 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F7C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F7E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F80 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F82 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F86 C022 FFE8      01374         movff   REG_EE, WREG
000F8A EC?? F???      01375         call    WR_DATA
000F8E 2A21           01376         incf    L_EE
                      01377         
000F90 0E20           01378         movlw   " "
000F92 EC?? F???      01379         call    WR_DATA
                      01380         
000F96 0E64           01381         movlw   "d"
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F98 EC?? F???      01382         call    WR_DATA
                      01383         
                      01384         READEE  REG_EE, H_EE, L_EE
000F9C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FA0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FA4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FA8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FAA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FAE C022 FFE8      01385         movff   REG_EE, WREG
000FB2 EC?? F???      01386         call    WR_DATA
000FB6 2A21           01387         incf    L_EE
                      01388 
000FB8                01389 SkipDispOpSort
000FB8 0012           01390         return
                      01391         
000FBA                01392 DispOpRTC
                      01393         READEE  REG_EE, H_EE, L_EE
000FBA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FBE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FC2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FC4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FC6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FC8 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FCC 0EFF           01394         movlw   0xff
000FCE 6222           01395         cpfseq  REG_EE
000FD0 EF?? F???      01396         goto    NoSkipDispOpRTC
                      01397         Display NoData
  0000                    M         local   loop
000FD4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000FD6 6EF8               M         movwf   TBLPTRU
000FD8 0E??               M         movlw   high NoData     ; Move Table<15:8>
000FDA 6EF7               M         movwf   TBLPTRH
000FDC 0E??               M         movlw   low NoData      ; Move Table<7:0>
000FDE 6EF6               M         movwf   TBLPTRL
000FE0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000FE2 50F5               M         movf    TABLAT, W
000FE4                    M loop
000FE4 EC?? F???          M         call    WR_DATA         ; write to LCD
000FE8 000B               M         tblrd+*                 ; next row in table
000FEA 50F5               M         movf    TABLAT, W
000FEC E1??               M         bnz     loop
000FEE 0EFF           01398         movlw   0xff
000FF0 6022           01399         cpfslt  REG_EE
000FF2 EF?? F???      01400         goto    SkipDispOpRTC
                      01401 
000FF6                01402 NoSkipDispOpRTC
                      01403         READEE  REG_EE, H_EE, L_EE
000FF6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FFA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FFE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001000 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001002 80A6               M         bsf     EECON1, RD          ; read EEPROM
001004 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001008 C022 FFE8      01404         movff   REG_EE, WREG
00100C EC?? F???      01405         call    WR_DATA
001010 2A21           01406         incf    L_EE
                      01407         
                      01408         READEE  REG_EE, H_EE, L_EE
001012 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001016 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00101A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00101C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00101E 80A6               M         bsf     EECON1, RD          ; read EEPROM
001020 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001024 C022 FFE8      01409         movff   REG_EE, WREG
001028 EC?? F???      01410         call    WR_DATA
00102C 2A21           01411         incf    L_EE
                      01412 
00102E 0E68           01413         movlw   "h"
001030 EC?? F???      01414         call    WR_DATA
                      01415         
001034 EC?? F???      01416         call    DispOpRTC_Helper
                      01417         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-5-2017  16:06:39         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001038 0E20           01418         movlw   " "
00103A EC?? F???      01419         call    WR_DATA
                      01420         
00103E EC?? F???      01421         call    DispOpRTC_Helper
001042 0E2F           01422         movlw   "/"
001044 EC?? F???      01423         call    WR_DATA
                      01424 
001048 EC?? F???      01425         call    DispOpRTC_Helper
00104C 0E2F           01426         movlw   "/"
00104E EC?? F???      01427         call    WR_DATA
001052 EC?? F???      01428         call    DispOpRTC_Helper
001056                01429 SkipDispOpRTC
001056 0012           01430                 return
001058                01431 DispOpRTC_Helper
                      01432         READEE          REG_EE, H_EE, L_EE
001058 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00105C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001060 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001062 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001064 80A6               M         bsf     EECON1, RD          ; read EEPROM
001066 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00106A C022 FFE8      01433         movff           REG_EE, WREG
00106E EC?? F???      01434         call            WR_DATA
001072 2A21           01435         incf            L_EE
                      01436         READEE          REG_EE, H_EE, L_EE
001074 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001078 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00107C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00107E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001080 80A6               M         bsf     EECON1, RD          ; read EEPROM
001082 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001086 C022 FFE8      01437         movff           REG_EE, WREG
00108A EC?? F???      01438         call            WR_DATA
00108E 2A21           01439         incf            L_EE
001090 0012           01440         return
Warning[205]: Found directive in column 1. (end)
                      01441 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

