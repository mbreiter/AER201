MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         temp_ISR
  0000001B            00067         delayR
  0000001C            00068         d5us
  0000001D            00069         d200us
  0000001E            00070         d50ms
  0000001F            00071         inExecution
  00000020            00072         clear_EE
  00000021            00073         H_EE    
  00000022            00074         L_EE    
  00000023            00075         REG_EE  
  00000024            00076         tempH_EE
  00000025            00077         tempL_EE
  00000026            00078         tempL_EEC
  00000027            00079         MAX_EE   
  00000028            00080         READ_EE
  00000029            00081         last_log
  0000002A            00082         startHt
  0000002B            00083         startHo
  0000002C            00084         startMt
  0000002D            00085         startMo
  0000002E            00086         endHt
  0000002F            00087         endHo
  00000030            00088         endMt
  00000031            00089         endMo
  00000032            00090         LED_Count
  00000033            00091         SkipCount
  00000034            00092         exe_sec
  00000035            00093         exe_int
  00000036            00094         timer_H
  00000037            00095         timer_L
  00000038            00096         convert_buffer
  00000039            00097         transferring
  0000003A            00098         PC_PCL
  0000003B            00099         PC_PCLATH
  0000003C            00100         PC_PCLATU
  0000003D            00101         TIMCNT
  0000003E            00102         CPCNT
  0000003F            00103         TDATA
  00000040            00104         DETECTION_VAL
  00000041            00105         ESKA
  00000042            00106         ESKA_CAP
  00000043            00107         YOP
  00000044            00108         YOP_CAP
  00000045            00109         CLEAR:2
  00000047            00110         RED:2
  00000049            00111         GREEN:2
  0000004B            00112         BLUE:2
  0000004D            00113         temp_colour:2
                      00114     endc
                      00115     
  0000                00116     extern tens_digit, ones_digit
  0000                00117     extern READ_ARDUINO, INIT_RTC
                      00118     
                      00119 ;*******************************************************************************
                      00120 ; tables
                      00121 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00122     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00123     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00124     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00125     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00126     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00127     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00128     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00129     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00130     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00131     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00132     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00133     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00134     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00135     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000096 6F43 706D 656C 00136     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (Stopped)
0000A0 7453 706F 6570 00137     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Exe_Time)
0000A8 6954 656D 203A 00138     Exe_Time    db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000B0 6153 6976 676E 00139     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000BA 6153 6566 7974 00140     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000CA 2F4E 0041      00141     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000CE 6954 656D 6120 00142     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00143         
                      00144 ;*******************************************************************************
                      00145 ; macros
                      00146 ;*******************************************************************************
                      00147 
                      00148 TransferTable macro table
                      00149         local loop
                      00150         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00151         movlw   upper table
                      00152         movwf   TBLPTRU
                      00153         movlw   high table
                      00154         movwf   TBLPTRH
                      00155         movlw   low table
                      00156         movwf   TBLPTRL
                      00157         tblrd*
                      00158         movff   TABLAT, WREG
                      00159 loop
                      00160         call    USART_WAIT
                      00161         tblrd+*
                      00162         movff   TABLAT, WREG
                      00163         bnz     loop
                      00164         endm
                      00165         
                      00166 ConfigLCD   macro
                      00167           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00168           call      WR_INS
                      00169 
                      00170           movlw     b'00001100'    ; display on/off
                      00171           call      WR_INS
                      00172           movlw     b'00000001'    ; Clear ram
                      00173           call      WR_INS
                      00174           endm
                      00175         
                      00176 movMSB  macro   port
                      00177         andlw   0xF0
                      00178         iorwf   port, f
                      00179         iorlw   0x0F
                      00180         andwf   port, f
                      00181         endm
                      00182 
                      00183 Delay50N macro count, N
                      00184         local   loop
                      00185         movlw   N
                      00186         movwf   count
                      00187 
                      00188 loop
                      00189         call    Delay50ms
                      00190         decfsz  count
                      00191         goto    loop
                      00192         endm
                      00193 
                      00194 Display macro   Message
                      00195         local   loop
                      00196         movlw   upper Message   ; Move Table<20:16>
                      00197         movwf   TBLPTRU
                      00198         movlw   high Message    ; Move Table<15:8>
                      00199         movwf   TBLPTRH
                      00200         movlw   low Message     ; Move Table<7:0>
                      00201         movwf   TBLPTRL
                      00202         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00203         movf    TABLAT, W
                      00204 loop
                      00205         call    WR_DATA         ; write to LCD
                      00206         tblrd+*                 ; next row in table
                      00207         movf    TABLAT, W
                      00208         bnz     loop
                      00209         endm
                      00210 
                      00211 DisplayLog  macro   addrH, addrL
                      00212             local   Again, Finish
                      00213             
                      00214             clrf    SkipCount
                      00215             clrf    MAX_EE
                      00216 
                      00217             ; Check if there is No Data first
                      00218             READEE      REG_EE, addrH, addrL
                      00219             movlw       0xFF
                      00220             cpfseq      REG_EE
                      00221             goto        Again
                      00222             Display     NoData
                      00223             goto        Finish
                      00224 Again
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00225             ; Put a space every 3 Writes
                      00226             movlw       d'3'
                      00227             cpfslt      SkipCount
                      00228             cpfslt      MAX_EE
                      00229             goto        Finish
                      00230 
                      00231             ; read EEPROM
                      00232             READEE      REG_EE, addrH, addrL
                      00233             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00234             goto        Finish
                      00235 Finish
                      00236             endm
                      00237             
                      00238 ;TransferLog macro   addrH, addrL
                      00239         
                      00240 
                      00241 incf_BCD    macro   BCD
                      00242         local ones, endBCD
                      00243         movff   BCD, temp
                      00244         
                      00245         ;process ones digit
                      00246         movlw   0x0f
                      00247         andwf   temp
                      00248         movlw   d'9'
                      00249         
                      00250         ;skip if ones digit is 9
                      00251         cpfseq  temp
                      00252         goto    ones
                      00253         
                      00254         movlw   b'00010000'
                      00255         addwf   BCD
                      00256         movlw   0xf0
                      00257         andwf   BCD
                      00258         movlw   0xa0
                      00259         cpfslt  BCD
                      00260         
                      00261         clrf    BCD
                      00262         goto    endBCD
                      00263         
                      00264 ones
                      00265         incf    BCD
                      00266         goto    endBCD
                      00267 endBCD
                      00268         nop
                      00269         endm
                      00270         
                      00271 SUB16   macro   x, y        ; does not modify x nor y
                      00272         local   RESULTS
                      00273         movff   y+1, WREG   ; move high y into working register
                      00274         subwf   x+1, 0      ; do subtraction xH - yH => w
                      00275         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00276         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                      00277         
                      00278         movff   y+0, WREG
                      00279         subwf   x+0, 0  
                      00280 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00281         endm
                      00282 
                      00283 WriteRTC    macro
                      00284         movff   tens_digit, WREG
                      00285         call    WR_DATA
                      00286         movff   ones_digit, WREG
                      00287         call    WR_DATA
                      00288         endm
                      00289 
                      00290 WriteEE macro   word, addH, addL
                      00291         movff   addH, EEADRH        ; High address
                      00292         movff   addL, EEADR         ; Low address
                      00293         movff   word, EEDATA        ; set word
                      00294 
                      00295         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00296         bra     $-2
                      00297 
                      00298         bcf     EECON1, EEPGD       ; Point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00299         bcf     EECON1, CFGS        ; Access EEPROM
                      00300         bsf     EECON1, WREN        ; enable write
                      00301         bcf     INTCON, GIE         ; disable interrupts during write
                      00302         bcf     PIR2, EEIF
                      00303 
                      00304         movlw   0x55
                      00305         movwf   EECON2              ; write 55h
                      00306         movlw   0xaa
                      00307         movwf   EECON2              ; write 0xaa
                      00308         bsf     EECON1, WR          ; begin write
                      00309         btfsc   EECON1, WR
                      00310         bra     $-2
                      00311 
                      00312         bsf     INTCON, GIE         ; enable interrupts after write
                      00313         bcf     EECON1, WREN        ; disable writes
                      00314         endm
                      00315 
                      00316 READEE  macro   file, addH, addL
                      00317         movff   addH, EEADRH        ; read to high
                      00318         movff   addL, EEADR         ; read to low
                      00319         bcf     EECON1, EEPGD       ; point to data memory
                      00320         bcf     EECON1, CFGS        ; access to EEPROM
                      00321         bsf     EECON1, RD          ; read EEPROM
                      00322         movff   EEDATA, file        ; put data into file
                      00323         endm
                      00324 
                      00325 ChangeMode  macro   ModeId, NextMode
                      00326         local Next, Exit
                      00327 
                      00328         movlw   ModeId              ; poll for mode
                      00329         cpfseq  KEY                 ; check this against key press
                      00330         goto    Exit
                      00331 
                      00332 Next
                      00333         clrf    LATA                ; clear pins before proceeding
                      00334         clrf    LATB
                      00335         clrf    LATC
                      00336         clrf    LATD
                      00337         goto    NextMode
                      00338 
                      00339 Exit
                      00340         nop
                      00341         endm
                      00342 
                      00343 saveContext macro
                      00344     movff   STATUS, temp_S          ; save STATUS first
                      00345     movwf   temp_W                  ; save W
                      00346     endm
                      00347 
                      00348 restoreContext macro
                      00349     swapf   temp_W, 0               ; restore W first
                      00350     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00351     endm
                      00352 ;*******************************************************************************
                      00353 ; reset vector and isrs
                      00354 ;*******************************************************************************
                      00355         ORG     0x000               ; processor reset vector
000000 EF?? F???      00356         goto    INIT                ; go to beginning of program
                      00357 
                      00358         ORG     0x008
000008 EF?? F???      00359         goto    ISR_HIGH
                      00360 
                      00361         ORG     0x018
000018 EF?? F???      00362         goto    ISR_LOW
                      00363 
00001C                00364 ISR_HIGH
                      00365         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00366         
                      00367         ; displaying the execution time in seconds
Warning[202]: Argument out of range.  Least significant bits used.
000022 3818           00368         swapf   OP_sec, WREG    ; 100's seconds
000024 6E17           00369         movwf   temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000026 0E0F           00370         movlw   0x0F
000028 1617           00371         andwf   temp
00002A C017 FFE8      00372         movff   temp, WREG
00002E 0F30           00373         addlw   0x30
000030 EC?? F???      00374         call    WR_DATA
                      00375 
000034 C018 F017      00376         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00377         movlw   0x0F
00003A 1617           00378         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C017 FFE8      00379         movff   temp, WREG      ; W = Temp
000040 0F30           00380         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00381         call    WR_DATA
                      00382         
Warning[202]: Argument out of range.  Least significant bits used.
000046 3819           00383         swapf   OP_INT, WREG    ;1's seconds
000048 6E17           00384         movwf   temp
00004A 0E0F           00385         movlw   0x0f
00004C 1617           00386         andwf   temp
00004E C017 FFE8      00387         movff   temp, WREG
000052 0F30           00388         addlw   0x30
000054 EC?? F???      00389         call    WR_DATA
                      00390 
000058 0E73           00391         movlw   0x73            ; Write 's'
00005A EC?? F???      00392         call    WR_DATA
00005E EC?? F???      00393         call    LCD_L2
                      00394 
                      00395         ;reset timer 
000062 0EC6           00396         movlw   0xc6
000064 6ED7           00397         movwf   TMR0H
000066 0E3E           00398         movlw   0x3e
000068 6ED6           00399         movwf   TMR0L
                      00400                 
                      00401         ;timer interrupt
00006A A4F2           00402         btfss   INTCON, TMR0IF
00006C EF?? F???      00403         goto    END_ISR_HIGH
                      00404         
                      00405         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1617               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6217               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 2619               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 1619               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 6019               M         cpfslt  OP_INT
                          M         
00008C 6A19               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A19               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00406         movlw   d'0'
00009C 6219           00407         cpfseq  OP_INT
00009E EF?? F???      00408         goto    END_ISR_HIGH
                      00409         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1617               M         andwf   temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6217               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2618               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1618               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6018               M         cpfslt  OP_sec
                          M         
0000BE 6A18               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
                          M         
0000C4                    M ones
0000C4 2A18               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
0000CA 0000               M         nop
                      00410 
0000CC                00411 END_ISR_HIGH
0000CC 94F2           00412         bcf     INTCON, TMR0IF
                      00413         restoreContext
0000CE 3814               M     swapf   temp_W, 0               ; restore W first
0000D0 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00414         retfie
                      00415 
0000D6                00416 ISR_LOW
                      00417         saveContext
0000D6 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E14               M     movwf   temp_W                  ; save W
                      00418         ; KEYPAD INTERRUPT
0000DC A0F0           00419         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00420         goto            END_ISR_LOW
                      00421 
                      00422         ;Check operation status
                      00423 ;       movlw           0xff                                    ; If in operation, skip return
                      00424 ;       cpfseq          InExecution
                      00425 ;       goto            END_ISR_LOW
                      00426 
                      00427         ; Process KEY
0000E2 3881           00428         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00429         andlw           0x0f
0000E6 6E12           00430         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00431 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00432 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000E8 EF?? F???      00433         goto            END_ISR_LOW
                      00434 
                      00435         ; Reset program counter
0000EC 6AFF           00436         clrf            TOSU
0000EE 6AFE           00437         clrf            TOSH
0000F0 6AFD           00438         clrf            TOSL
                      00439 
0000F2                00440 END_ISR_LOW
0000F2 90F0           00441         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00442         restoreContext
0000F4 3814               M     swapf   temp_W, 0               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000FA 0010           00443         retfie
                      00444 
                      00445 ;*******************************************************************************
                      00446 ; main
                      00447 ;*******************************************************************************
0000FC                00448 INIT
                      00449         ; i/o
0000FC 0E00           00450         movlw   b'00000000'
0000FE 6E92           00451         movwf   TRISA
000100 0EFF           00452         movlw   b'11111111'
000102 6E93           00453         movwf   TRISB               ; keypad
000104 0E00           00454         movlw   b'00000000'
000106 6E94           00455         movwf   TRISC
000108 0E00           00456         movlw   b'00000000'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00010A 6E95           00457         movwf   TRISD
00010C 0E00           00458         movlw   b'00000000'
00010E 6E96           00459         movwf   TRISE
                      00460 
                      00461         ; clear ports
000110 0E00           00462         movlw   b'00000000'
000112 6E89           00463         movwf   LATA
000114 0E00           00464         movlw   b'00000000'
000116 6E8A           00465         movwf   LATB
000118 0E00           00466         movlw   b'00000000'
00011A 6E8B           00467         movwf   LATC
00011C 0E00           00468         movlw   b'00000000'
00011E 6E8C           00469         movwf   LATD
000120 0E00           00470         movlw   b'00000000'
000122 6E8D           00471         movwf   LATE
                      00472         
000124 0E00           00473         movlw   b'00000000'
000126 6EC2           00474         movwf   ADCON0
000128 0EFF           00475         movlw   b'11111111'
00012A 6EC1           00476         movwf   ADCON1
                      00477         
                      00478         ; initializations
00012C EC?? F???      00479         call    InitLCD
                      00480         ConfigLCD
000130 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000132 EC?? F???          M           call      WR_INS
                          M 
000136 0E0C               M           movlw     b'00001100'    ; display on/off
000138 EC?? F???          M           call      WR_INS
00013C 0E01               M           movlw     b'00000001'    ; Clear ram
00013E EC?? F???          M           call      WR_INS
                      00481         
000142 EC?? F???      00482         call    i2c_common_setup
                      00483         
000146 EC?? F???      00484         call    RTC_INIT
00014A EC?? F???      00485         call    ARDUINO_INIT
                      00486         ;COLOUR_INIT
00014E EC?? F???      00487         call    INIT_USART
                      00488 
                      00489         ; interrupts
000152 6AD0           00490         clrf    RCON
000154 6AF2           00491         clrf    INTCON
000156 6AF1           00492         clrf    INTCON2
000158 6AF0           00493         clrf    INTCON3
00015A 8ED0           00494         bsf     RCON, IPEN          ; priority mode
00015C 8EF2           00495         bsf     INTCON, GIEH        ; permit global interrupts
00015E 8CF2           00496         bsf     INTCON, GIEL
000160 8AF1           00497         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000162 8AF2           00498         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000164 84F2           00499         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000166 84F1           00500         bsf     INTCON2, TMR0IP     ; set to high priority
000168 86F0           00501         bsf     INTCON3, INT1IE
00016A 9CF0           00502         bcf     INTCON3, INT1IP
                      00503         
                      00504         ; setting up timer to sychronize with 1 second clock intervals
00016C 9ED5           00505         bcf     T0CON, TMR0ON
00016E 9CD5           00506         bcf     T0CON, T08BIT
000170 9AD5           00507         bcf     T0CON, T0CS
000172 98D5           00508         bcf     T0CON, T0SE
000174 96D5           00509         bcf     T0CON, PSA
000176 94D5           00510         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
000178 82D5           00511         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
00017A 80D5           00512         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00513 
00017C 6A21           00514         clrf    H_EE
00017E 6A22           00515         clrf    L_EE
000180 6A??           00516         clrf    tens_digit
000182 6A??           00517         clrf    ones_digit
000184 6A40           00518         clrf    DETECTION_VAL
000186 6A41           00519         clrf    ESKA
000188 6A42           00520         clrf    ESKA_CAP
00018A 6A43           00521         clrf    YOP
00018C 6A44           00522         clrf    YOP_CAP
00018E 6A45           00523         clrf    CLEAR+0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000190 6A46           00524         clrf    CLEAR+1 
000192 6A47           00525         clrf    RED+0
000194 6A48           00526         clrf    RED+1
000196 6A49           00527         clrf    GREEN+0
000198 6A4A           00528         clrf    GREEN+1
00019A 6A4B           00529         clrf    BLUE+0
00019C 6A4C           00530         clrf    BLUE+1
                      00531         
00019E 0EF2           00532         movlw     b'11110010'    ; Set required keypad inputs
0001A0 6E93           00533         movwf     TRISB
                      00534         
0001A2 EC?? F???      00535         call    ClrLCD
                      00536         Display Welcome
  0000                    M         local   loop
0001A6 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001A8 6EF8               M         movwf   TBLPTRU
0001AA 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001AC 6EF7               M         movwf   TBLPTRH
0001AE 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001B0 6EF6               M         movwf   TBLPTRL
0001B2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001B4 50F5               M         movf    TABLAT, W
0001B6                    M loop
0001B6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001BA 000B               M         tblrd+*                 ; next row in table
0001BC 50F5               M         movf    TABLAT, W
0001BE E1??               M         bnz     loop
0001C0 EC?? F???      00537         call LCD_L2
                      00538         Display Team
  0000                    M         local   loop
0001C4 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001C6 6EF8               M         movwf   TBLPTRU
0001C8 0E??               M         movlw   high Team       ; Move Table<15:8>
0001CA 6EF7               M         movwf   TBLPTRH
0001CC 0E??               M         movlw   low Team        ; Move Table<7:0>
0001CE 6EF6               M         movwf   TBLPTRL
0001D0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D2 50F5               M         movf    TABLAT, W
0001D4                    M loop
0001D4 EC?? F???          M         call    WR_DATA         ; write to LCD
0001D8 000B               M         tblrd+*                 ; next row in table
0001DA 50F5               M         movf    TABLAT, W
0001DC E1??               M         bnz     loop
                      00539         
                      00540         Delay50N delayR, 0x28
  0000                    M         local   loop
0001DE 0E28               M         movlw   0x28
0001E0 6E1B               M         movwf   delayR
                          M 
0001E2                    M loop
0001E2 EC?? F???          M         call    Delay50ms
0001E6 2E1B               M         decfsz  delayR
0001E8 EF?? F???          M         goto    loop
                      00541 
                      00542 ;*******************************************************************************
                      00543 ; standby mode
                      00544 ;*******************************************************************************
0001EC                00545 STANDBY
0001EC EC?? F???      00546         call    ClrLCD
                      00547         Display StandBy
  0000                    M         local   loop
0001F0 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001F2 6EF8               M         movwf   TBLPTRU
0001F4 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001F6 6EF7               M         movwf   TBLPTRH
0001F8 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001FA 6EF6               M         movwf   TBLPTRL
0001FC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001FE 50F5               M         movf    TABLAT, W
000200                    M loop
000200 EC?? F???          M         call    WR_DATA         ; write to LCD
000204 000B               M         tblrd+*                 ; next row in table
000206 50F5               M         movf    TABLAT, W
000208 E1??               M         bnz     loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00548 
00020A                00549 HOLD_STANDBY
00020A EC?? F???      00550         call    READ_KEY_TIME
                      00551         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
00020E 0E00               M         movlw   key1                ; poll for mode
000210 6210               M         cpfseq  KEY                 ; check this against key press
000212 EF?? F???          M         goto    Exit
                          M 
000216                    M Next
000216 6A89               M         clrf    LATA                ; clear pins before proceeding
000218 6A8A               M         clrf    LATB
00021A 6A8B               M         clrf    LATC
00021C 6A8C               M         clrf    LATD
00021E EF?? F???          M         goto    COLOUR_TEST
                          M 
000222                    M Exit
000222 0000               M         nop
                      00552         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000224 0E01               M         movlw   key2                ; poll for mode
000226 6210               M         cpfseq  KEY                 ; check this against key press
000228 EF?? F???          M         goto    Exit
                          M 
00022C                    M Next
00022C 6A89               M         clrf    LATA                ; clear pins before proceeding
00022E 6A8A               M         clrf    LATB
000230 6A8B               M         clrf    LATC
000232 6A8C               M         clrf    LATD
000234 EF?? F???          M         goto    STEP_TEST
                          M 
000238                    M Exit
000238 0000               M         nop
                      00553         ChangeMode  key3, IR_TEST
  0000                    M         local Next, Exit
                          M 
00023A 0E02               M         movlw   key3                ; poll for mode
00023C 6210               M         cpfseq  KEY                 ; check this against key press
00023E EF?? F???          M         goto    Exit
                          M 
000242                    M Next
000242 6A89               M         clrf    LATA                ; clear pins before proceeding
000244 6A8A               M         clrf    LATB
000246 6A8B               M         clrf    LATC
000248 6A8C               M         clrf    LATD
00024A EF?? F???          M         goto    IR_TEST
                          M 
00024E                    M Exit
00024E 0000               M         nop
                      00554         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000250 0E03               M         movlw   keyA                ; poll for mode
000252 6210               M         cpfseq  KEY                 ; check this against key press
000254 EF?? F???          M         goto    Exit
                          M 
000258                    M Next
000258 6A89               M         clrf    LATA                ; clear pins before proceeding
00025A 6A8A               M         clrf    LATB
00025C 6A8B               M         clrf    LATC
00025E 6A8C               M         clrf    LATD
000260 EF?? F???          M         goto    EXECUTION
                          M 
000264                    M Exit
000264 0000               M         nop
                      00555         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
000266 0E07               M         movlw   keyB                ; poll for mode
000268 6210               M         cpfseq  KEY                 ; check this against key press
00026A EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00026E                    M Next
00026E 6A89               M         clrf    LATA                ; clear pins before proceeding
000270 6A8A               M         clrf    LATB
000272 6A8B               M         clrf    LATC
000274 6A8C               M         clrf    LATD
000276 EF?? F???          M         goto    LOG
                          M 
00027A                    M Exit
00027A 0000               M         nop
                      00556         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
00027C 0E0B               M         movlw   keyC                ; poll for mode
00027E 6210               M         cpfseq  KEY                 ; check this against key press
000280 EF?? F???          M         goto    Exit
                          M 
000284                    M Next
000284 6A89               M         clrf    LATA                ; clear pins before proceeding
000286 6A8A               M         clrf    LATB
000288 6A8B               M         clrf    LATC
00028A 6A8C               M         clrf    LATD
00028C EF?? F???          M         goto    PERM_LOG
                          M 
000290                    M Exit
000290 0000               M         nop
                      00557         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000292 0E0F               M         movlw   keyD                ; poll for mode
000294 6210               M         cpfseq  KEY                 ; check this against key press
000296 EF?? F???          M         goto    Exit
                          M 
00029A                    M Next
00029A 6A89               M         clrf    LATA                ; clear pins before proceeding
00029C 6A8A               M         clrf    LATB
00029E 6A8B               M         clrf    LATC
0002A0 6A8C               M         clrf    LATD
0002A2 EF?? F???          M         goto    PC_MODE
                          M 
0002A6                    M Exit
0002A6 0000               M         nop
0002A8 D???           00558         bra     HOLD_STANDBY
                      00559 
                      00560 ;*******************************************************************************
                      00561 ; execution mode
                      00562 ;*******************************************************************************
                      00563 
0002AA                00564 IR_TEST
0002AA 0E63           00565         movlw   'c'
0002AC B080           00566         btfsc   PORTA, 0
0002AE 0E6E           00567         movlw   'n'
0002B0 EC?? F???      00568         call    WR_DATA
                      00569         Delay50N delayR, 0x14
  0000                    M         local   loop
0002B4 0E14               M         movlw   0x14
0002B6 6E1B               M         movwf   delayR
                          M 
0002B8                    M loop
0002B8 EC?? F???          M         call    Delay50ms
0002BC 2E1B               M         decfsz  delayR
0002BE EF?? F???          M         goto    loop
0002C2 EC?? F???      00570         call    ClrLCD
                      00571         Delay50N delayR, 0x14
  0000                    M         local   loop
0002C6 0E14               M         movlw   0x14
0002C8 6E1B               M         movwf   delayR
                          M 
0002CA                    M loop
0002CA EC?? F???          M         call    Delay50ms
0002CE 2E1B               M         decfsz  delayR
0002D0 EF?? F???          M         goto    loop
Warning[203]: Found opcode in column 1. (bra)
0002D4 D???           00572 bra IR_TEST
                      00573         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002D6                00574 STEP_TEST
0002D6 0E03           00575         movlw   b'00000011'
0002D8 6E83           00576         movwf   PORTD
0002DA EC?? F???      00577         call    delay5ms
                      00578         
0002DE 0E06           00579         movlw   b'00000110'
0002E0 6E83           00580         movwf   PORTD
0002E2 EC?? F???      00581         call    delay5ms
                      00582         
0002E6 0E0C           00583         movlw   b'00001100'
0002E8 6E83           00584         movwf   PORTD
0002EA EC?? F???      00585         call    delay5ms
                      00586 
0002EE 0E09           00587         movlw   b'00001001'
0002F0 6E83           00588         movwf   PORTD
0002F2 EC?? F???      00589         call    delay5ms
                      00590 
0002F6 D???           00591         bra STEP_TEST
                      00592         
0002F8                00593 CHECK_CLEAR
                      00594         SUB16   CLEAR, RED                  ; check first against red
  0000                    M         local   RESULTS
0002F8 C048 FFE8          M         movff   RED+1, WREG ; move high y into working register
0002FC 5C46               M         subwf   CLEAR+1, 0  ; do subtraction xH - yH => w
0002FE A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
000300 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
000304 C047 FFE8          M         movff   RED+0, WREG
000308 5C45               M         subwf   CLEAR+0, 0 
00030A                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00030A A0D8           00595         btfss   STATUS, C
00030C 0012           00596         return                              ; RED > CLEAR
                      00597         
                      00598         SUB16   CLEAR, GREEN                ; check against green
  0000                    M         local   RESULTS
00030E C04A FFE8          M         movff   GREEN+1, WREG ; move high y into working register
000312 5C46               M         subwf   CLEAR+1, 0  ; do subtraction xH - yH => w
000314 A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
000316 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
00031A C049 FFE8          M         movff   GREEN+0, WREG
00031E 5C45               M         subwf   CLEAR+0, 0 
000320                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000320 A0D8           00599         btfss   STATUS, C
000322 0012           00600         return                              ; GREEN > CLEAR
                      00601         
                      00602         SUB16   CLEAR, BLUE                 ; check against blue
  0000                    M         local   RESULTS
000324 C04C FFE8          M         movff   BLUE+1, WREG ; move high y into working register
000328 5C46               M         subwf   CLEAR+1, 0  ; do subtraction xH - yH => w
00032A A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
00032C EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
000330 C04B FFE8          M         movff   BLUE+0, WREG
000334 5C45               M         subwf   CLEAR+0, 0 
000336                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000336 A0D8           00603         btfss   STATUS, C
000338 0012           00604         return                              ; BLUE > CLEAR
                      00605         
00033A 0E63           00606         movlw   'c'                         ; CLEAR > everything else
00033C EC?? F???      00607         call    WR_DATA
000340 D???           00608         bra     LOOPING
000342                00609 CHECK_RED
                      00610         SUB16   RED, CLEAR                  ; check first against clear
  0000                    M         local   RESULTS
000342 C046 FFE8          M         movff   CLEAR+1, WREG ; move high y into working register
000346 5C48               M         subwf   RED+1, 0    ; do subtraction xH - yH => w
000348 A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
00034A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
00034E C045 FFE8          M         movff   CLEAR+0, WREG
000352 5C47               M         subwf   RED+0, 0 
000354                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000354 A0D8           00611         btfss   STATUS, C
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000356 0012           00612         return                              ; CLEAR > RED
                      00613         
                      00614         SUB16   RED, GREEN                  ; check against green
  0000                    M         local   RESULTS
000358 C04A FFE8          M         movff   GREEN+1, WREG ; move high y into working register
00035C 5C48               M         subwf   RED+1, 0    ; do subtraction xH - yH => w
00035E A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
000360 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
000364 C049 FFE8          M         movff   GREEN+0, WREG
000368 5C47               M         subwf   RED+0, 0 
00036A                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00036A A0D8           00615         btfss   STATUS, C
00036C 0012           00616         return                              ; GREEN > RED
                      00617         
                      00618         SUB16   RED, BLUE                   ; check against blue
  0000                    M         local   RESULTS
00036E C04C FFE8          M         movff   BLUE+1, WREG ; move high y into working register
000372 5C48               M         subwf   RED+1, 0    ; do subtraction xH - yH => w
000374 A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
000376 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
00037A C04B FFE8          M         movff   BLUE+0, WREG
00037E 5C47               M         subwf   RED+0, 0 
000380                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000380 A0D8           00619         btfss   STATUS, C
000382 0012           00620         return                              ; BLUE > RED
                      00621         
000384 0E72           00622         movlw   'r'                         ; RED > everything else
000386 EC?? F???      00623         call    WR_DATA
00038A D???           00624         bra     LOOPING
00038C                00625 CHECK_GREEN
                      00626         SUB16   GREEN, CLEAR                ; check first against clear
  0000                    M         local   RESULTS
00038C C046 FFE8          M         movff   CLEAR+1, WREG ; move high y into working register
000390 5C4A               M         subwf   GREEN+1, 0  ; do subtraction xH - yH => w
000392 A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
000394 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
000398 C045 FFE8          M         movff   CLEAR+0, WREG
00039C 5C49               M         subwf   GREEN+0, 0 
00039E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00039E A0D8           00627         btfss   STATUS, C
0003A0 0012           00628         return                              ; CLEAR > GREEN
                      00629         
                      00630         SUB16   GREEN, RED                  ; check against red
  0000                    M         local   RESULTS
0003A2 C048 FFE8          M         movff   RED+1, WREG ; move high y into working register
0003A6 5C4A               M         subwf   GREEN+1, 0  ; do subtraction xH - yH => w
0003A8 A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
0003AA EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
0003AE C047 FFE8          M         movff   RED+0, WREG
0003B2 5C49               M         subwf   GREEN+0, 0 
0003B4                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0003B4 A0D8           00631         btfss   STATUS, C
0003B6 0012           00632         return                              ; RED > GREEN
                      00633         
                      00634         SUB16   GREEN, BLUE                 ; check against blue
  0000                    M         local   RESULTS
0003B8 C04C FFE8          M         movff   BLUE+1, WREG ; move high y into working register
0003BC 5C4A               M         subwf   GREEN+1, 0  ; do subtraction xH - yH => w
0003BE A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
0003C0 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
0003C4 C04B FFE8          M         movff   BLUE+0, WREG
0003C8 5C49               M         subwf   GREEN+0, 0 
0003CA                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0003CA A0D8           00635         btfss   STATUS, C
0003CC 0012           00636         return                              ; BLUE > GREEN
                      00637         
0003CE 0E67           00638         movlw   'g'                         ; GREEN > everything else
0003D0 EC?? F???      00639         call    WR_DATA
0003D4 D???           00640         bra     LOOPING
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003D6                00641 CHECK_BLUE
                      00642         SUB16   BLUE, CLEAR                 ; check first against clear
  0000                    M         local   RESULTS
0003D6 C046 FFE8          M         movff   CLEAR+1, WREG ; move high y into working register
0003DA 5C4C               M         subwf   BLUE+1, 0   ; do subtraction xH - yH => w
0003DC A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
0003DE EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
0003E2 C045 FFE8          M         movff   CLEAR+0, WREG
0003E6 5C4B               M         subwf   BLUE+0, 0 
0003E8                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0003E8 A0D8           00643         btfss   STATUS, C
0003EA 0012           00644         return                              ; CLEAR > BLUE
                      00645         
                      00646         SUB16   BLUE, RED                   ; check against red
  0000                    M         local   RESULTS
0003EC C048 FFE8          M         movff   RED+1, WREG ; move high y into working register
0003F0 5C4C               M         subwf   BLUE+1, 0   ; do subtraction xH - yH => w
0003F2 A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
0003F4 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
0003F8 C047 FFE8          M         movff   RED+0, WREG
0003FC 5C4B               M         subwf   BLUE+0, 0 
0003FE                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0003FE A0D8           00647         btfss   STATUS, C
000400 0012           00648         return                              ; RED > BLUE
                      00649 
                      00650         SUB16   BLUE, GREEN                 ; check against green
  0000                    M         local   RESULTS
000402 C04A FFE8          M         movff   GREEN+1, WREG ; move high y into working register
000406 5C4C               M         subwf   BLUE+1, 0   ; do subtraction xH - yH => w
000408 A4D8               M         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
00040A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                          M         
00040E C049 FFE8          M         movff   GREEN+0, WREG
000412 5C4B               M         subwf   BLUE+0, 0 
000414                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000414 A0D8           00651         btfss   STATUS, C
000416 0012           00652         return                              ; GREEN > CLEAR
                      00653         
000418 0E62           00654         movlw   'b'                         ; BLUE > everything else
00041A EC?? F???      00655         call    WR_DATA
00041E 0012           00656         return
                      00657         
000420                00658 COLOUR_TEST
                      00659 
000420                00660 LOOPING
                      00661         Delay50N delayR, 0x28
  0000                    M         local   loop
000420 0E28               M         movlw   0x28
000422 6E1B               M         movwf   delayR
                          M 
000424                    M loop
000424 EC?? F???          M         call    Delay50ms
000428 2E1B               M         decfsz  delayR
00042A EF?? F???          M         goto    loop
00042E EC?? F???      00662         call    ClrLCD
000432 0E77           00663         movlw   'w'
000434 EC?? F???      00664         call    WR_DATA
                      00665         Delay50N delayR, 0x28
  0000                    M         local   loop
000438 0E28               M         movlw   0x28
00043A 6E1B               M         movwf   delayR
                          M 
00043C                    M loop
00043C EC?? F???          M         call    Delay50ms
000440 2E1B               M         decfsz  delayR
000442 EF?? F???          M         goto    loop
000446 EC?? F???      00666         call    ClrLCD
                      00667         
00044A 0E72           00668         movlw   'r'
                      00669         
00044C EC?? F???      00670         call    READ_ARDUINO
000450 EC?? F???      00671         call    WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00672         
                      00673 ;       COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
                      00674 ;       Delay50N delayR, 0x02
                      00675         
                      00676 ;       movlw   0x01            ;testing
                      00677 ;       movwf   CLEAR+1
                      00678 ;       movlw   0x06
                      00679 ;       movwf   GREEN+0
                      00680 ;       movlw   0x03
                      00681 ;       movwf   RED+0
                      00682 ;       movlw   0x01
                      00683 ;       movwf   BLUE+0
                      00684         
                      00685 ;       movlw   d'0'
                      00686 ;       cpfseq  RED+0
                      00687 ;       movlw   'w'
                      00688 ;       call    WR_DATA
                      00689 
                      00690         ;call   CHECK_CLEAR
                      00691 ;       call    CHECK_RED
                      00692 ;       call    CHECK_GREEN
                      00693 ;       call    CHECK_BLUE
000454 D???           00694         bra LOOPING
                      00695         
000456                00696 EXECUTION
000456 EC?? F???      00697         call        ClearEEPROM_21
                      00698         ; save the starting time
00045A EC?? F???      00699         call        SAVE_TIME
                      00700                 
                      00701         ; display
00045E 681F           00702         setf        inExecution
000460 EC?? F???      00703         call        ClrLCD
                      00704         Display     Exe1
  0000                    M         local   loop
000464 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000466 6EF8               M         movwf   TBLPTRU
000468 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00046A 6EF7               M         movwf   TBLPTRH
00046C 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00046E 6EF6               M         movwf   TBLPTRL
000470 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000472 50F5               M         movf    TABLAT, W
000474                    M loop
000474 EC?? F???          M         call    WR_DATA         ; write to LCD
000478 000B               M         tblrd+*                 ; next row in table
00047A 50F5               M         movf    TABLAT, W
00047C E1??               M         bnz     loop
00047E EC?? F???      00705         call        LCD_L2
000482 0EC5           00706         movlw       0xc5                    ; setting up timer
000484 6ED7           00707         movwf       TMR0H
000486 0E44           00708         movlw       0x44    
000488 6ED6           00709         movwf       TMR0L
                      00710         
00048A 8ED5           00711         bsf         T0CON, TMR0ON           ; turning on timer
                      00712         ; initialize variables
00048C 6A18           00713         clrf        OP_sec
00048E 6A19           00714         clrf        OP_INT
                      00715         
000490 6A41           00716         clrf        ESKA
000492 6A42           00717         clrf        ESKA_CAP
000494 6A43           00718         clrf        YOP
000496 6A44           00719         clrf        YOP_CAP
                      00720         
000498 6A45           00721         clrf        CLEAR
00049A 6A46           00722         clrf        CLEAR+1     
00049C 6A47           00723         clrf        RED
00049E 6A48           00724         clrf        RED+1
0004A0 6A49           00725         clrf        GREEN
0004A2 6A4A           00726         clrf        GREEN+1
0004A4 6A4B           00727         clrf        BLUE
0004A6 6A4C           00728         clrf        BLUE+1
                      00729         
                      00730 ;COLLECTIONS_STEP
                      00731 ;       
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00732 ;TERM_CHECK
                      00733 ;       
                      00734 ;BOTTLE_CHECK
                      00735 ;
                      00736 ;COLOUR_ONE
                      00737 ;
                      00738 ;COLOUR_TWO
                      00739 ;       
                      00740 ;BRAINS
                      00741 ;       
                      00742 ;TRAY_STEP
                      00743 ;       
                      00744 
0004A8                00745 HOLD_EXE
0004A8 EC?? F???      00746         call        READ_KEY
                      00747         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
0004AC 0E0C               M         movlw   keyS                ; poll for mode
0004AE 6210               M         cpfseq  KEY                 ; check this against key press
0004B0 EF?? F???          M         goto    Exit
                          M 
0004B4                    M Next
0004B4 6A89               M         clrf    LATA                ; clear pins before proceeding
0004B6 6A8A               M         clrf    LATB
0004B8 6A8B               M         clrf    LATC
0004BA 6A8C               M         clrf    LATD
0004BC EF?? F???          M         goto    EXIT_EXE
                          M 
0004C0                    M Exit
0004C0 0000               M         nop
0004C2 D???           00748         bra         HOLD_EXE
                      00749         
0004C4                00750 EXIT_EXE
                      00751         ; stop timer and save the execution time to eeprom
0004C4 9ED5           00752         bcf         T0CON, TMR0ON
0004C6 EC?? F???      00753         call        SAVE_EXE_TIME
                      00754                 
                      00755         ; Clear inExecution flag to stop '*' interrupts
0004CA 6A1F           00756         clrf        inExecution
                      00757         
0004CC C041 FFE8      00758         movff       ESKA, WREG
0004D0 0F30           00759         addlw       0x30
                      00760         WriteEE     WREG, H_EE, L_EE
0004D2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004D6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004DA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004DE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004E0 D???               M         bra     $-2
                          M 
0004E2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004E4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004E6 84A6               M         bsf     EECON1, WREN        ; enable write
0004E8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004EA 98A1               M         bcf     PIR2, EEIF
                          M 
0004EC 0E55               M         movlw   0x55
0004EE 6EA7               M         movwf   EECON2              ; write 55h
0004F0 0EAA               M         movlw   0xaa
0004F2 6EA7               M         movwf   EECON2              ; write 0xaa
0004F4 82A6               M         bsf     EECON1, WR          ; begin write
0004F6 B2A6               M         btfsc   EECON1, WR
0004F8 D???               M         bra     $-2
                          M 
0004FA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004FC 94A6               M         bcf     EECON1, WREN        ; disable writes
0004FE 2A22           00761         incf        L_EE
                      00762         
000500 C042 FFE8      00763         movff       ESKA_CAP, WREG
000504 0F30           00764         addlw       0x30
                      00765         WriteEE     WREG, H_EE, L_EE
000506 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00050A C022 FFA9          M         movff   L_EE, EEADR         ; Low address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00050E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000512 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000514 D???               M         bra     $-2
                          M 
000516 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000518 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00051A 84A6               M         bsf     EECON1, WREN        ; enable write
00051C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00051E 98A1               M         bcf     PIR2, EEIF
                          M 
000520 0E55               M         movlw   0x55
000522 6EA7               M         movwf   EECON2              ; write 55h
000524 0EAA               M         movlw   0xaa
000526 6EA7               M         movwf   EECON2              ; write 0xaa
000528 82A6               M         bsf     EECON1, WR          ; begin write
00052A B2A6               M         btfsc   EECON1, WR
00052C D???               M         bra     $-2
                          M 
00052E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000530 94A6               M         bcf     EECON1, WREN        ; disable writes
000532 2A22           00766         incf        L_EE
                      00767         
000534 C043 FFE8      00768         movff       YOP, WREG
000538 0F30           00769         addlw       0x30
                      00770         WriteEE     WREG, H_EE, L_EE
00053A C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00053E C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000542 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000546 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000548 D???               M         bra     $-2
                          M 
00054A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00054C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00054E 84A6               M         bsf     EECON1, WREN        ; enable write
000550 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000552 98A1               M         bcf     PIR2, EEIF
                          M 
000554 0E55               M         movlw   0x55
000556 6EA7               M         movwf   EECON2              ; write 55h
000558 0EAA               M         movlw   0xaa
00055A 6EA7               M         movwf   EECON2              ; write 0xaa
00055C 82A6               M         bsf     EECON1, WR          ; begin write
00055E B2A6               M         btfsc   EECON1, WR
000560 D???               M         bra     $-2
                          M 
000562 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000564 94A6               M         bcf     EECON1, WREN        ; disable writes
000566 2A22           00771         incf        L_EE
                      00772         
000568 C044 FFE8      00773         movff       YOP_CAP, WREG
00056C 0F30           00774         addlw       0x30
                      00775         WriteEE     WREG, H_EE, L_EE
00056E C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000572 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000576 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00057A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00057C D???               M         bra     $-2
                          M 
00057E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000580 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000582 84A6               M         bsf     EECON1, WREN        ; enable write
000584 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000586 98A1               M         bcf     PIR2, EEIF
                          M 
000588 0E55               M         movlw   0x55
00058A 6EA7               M         movwf   EECON2              ; write 55h
00058C 0EAA               M         movlw   0xaa
00058E 6EA7               M         movwf   EECON2              ; write 0xaa
000590 82A6               M         bsf     EECON1, WR          ; begin write
000592 B2A6               M         btfsc   EECON1, WR
000594 D???               M         bra     $-2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000596 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000598 94A6               M         bcf     EECON1, WREN        ; disable writes
00059A 2A22           00776         incf        L_EE
                      00777         
00059C EF?? F???      00778         goto        SaveData
                      00779 
0005A0                00780 SaveData
0005A0 EC?? F???      00781         call        ClrLCD
                      00782         Display     SAVE
  0000                    M         local   loop
0005A4 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0005A6 6EF8               M         movwf   TBLPTRU
0005A8 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0005AA 6EF7               M         movwf   TBLPTRH
0005AC 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0005AE 6EF6               M         movwf   TBLPTRL
0005B0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005B2 50F5               M         movf    TABLAT, W
0005B4                    M loop
0005B4 EC?? F???          M         call    WR_DATA         ; write to LCD
0005B8 000B               M         tblrd+*                 ; next row in table
0005BA 50F5               M         movf    TABLAT, W
0005BC E1??               M         bnz     loop
                      00783 
0005BE 0E00           00784         movlw       d'0'
0005C0 6E21           00785         movwf       H_EE
0005C2 0EA8           00786         movlw       d'168'              ; take d'168' as last
0005C4 6E22           00787         movwf       L_EE
0005C6 0E00           00788         movlw       d'0'
0005C8 6E24           00789         movwf       tempH_EE
0005CA 0EDC           00790         movlw       d'220'              ; temp for low constant
0005CC 6E25           00791         movwf       tempL_EE
                      00792         
0005CE 6A16           00793         clrf        counter2
0005D0 6A15           00794         clrf        counter
                      00795         
0005D2                00796 ShiftLoop
0005D2 2A15           00797         incf            counter
                      00798         READEE          REG_EE, H_EE, L_EE
0005D4 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005D8 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005DC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005DE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005E0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005E2 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0005E6 0E15           00799         movlw           d'21'
0005E8 2622           00800         addwf           L_EE
                      00801         WriteEE         REG_EE, H_EE, L_EE
0005EA C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0005EE C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0005F2 C023 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0005F6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0005F8 D???               M         bra     $-2
                          M 
0005FA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0005FC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0005FE 84A6               M         bsf     EECON1, WREN        ; enable write
000600 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000602 98A1               M         bcf     PIR2, EEIF
                          M 
000604 0E55               M         movlw   0x55
000606 6EA7               M         movwf   EECON2              ; write 55h
000608 0EAA               M         movlw   0xaa
00060A 6EA7               M         movwf   EECON2              ; write 0xaa
00060C 82A6               M         bsf     EECON1, WR          ; begin write
00060E B2A6               M         btfsc   EECON1, WR
000610 D???               M         bra     $-2
                          M 
000612 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000614 94A6               M         bcf     EECON1, WREN        ; disable writes
000616 0E14           00802         movlw           d'20'
000618 5E22           00803         subwf           L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00061A 0E15           00804         movlw           d'21'
00061C 6215           00805         cpfseq          counter
00061E EF?? F???      00806         goto            ShiftLoop
                      00807         
                      00808         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000622 0E2A           00809         movlw           d'42'
000624 5E22           00810         subwf           L_EE
000626 0EDC           00811         movlw           d'220'
000628 6E25           00812         movwf           tempL_EE
00062A 6A15           00813         clrf            counter
00062C 2A16           00814         incf            counter2
00062E 0E09           00815         movlw           d'9'
000630 6216           00816         cpfseq          counter2        ; Skip if 9 shifts were made
000632 EF?? F???      00817         goto            ShiftLoop
                      00818 
000636 EF?? F???      00819         goto            LOG
                      00820 
                      00821 ;*******************************************************************************
                      00822 ; sorting statistics log mode
                      00823 ;*******************************************************************************
                      00824         
00063A                00825 LOG
00063A EC?? F???      00826         call    ClrLCD
                      00827         Display Log1
  0000                    M         local   loop
00063E 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000640 6EF8               M         movwf   TBLPTRU
000642 0E??               M         movlw   high Log1       ; Move Table<15:8>
000644 6EF7               M         movwf   TBLPTRH
000646 0E??               M         movlw   low Log1        ; Move Table<7:0>
000648 6EF6               M         movwf   TBLPTRL
00064A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00064C 50F5               M         movf    TABLAT, W
00064E                    M loop
00064E EC?? F???          M         call    WR_DATA         ; write to LCD
000652 000B               M         tblrd+*                 ; next row in table
000654 50F5               M         movf    TABLAT, W
000656 E1??               M         bnz     loop
                      00828 
                      00829         ; display most recent run data
000658 0E0A           00830         movlw   d'10'
00065A 6E22           00831         movwf   L_EE
                      00832 ;       READEE  OP_sec, H_EE, L_EE
                      00833 ;       incf    L_EE
                      00834 ;       READEE  OP_INT, H_EE, L_EE
                      00835 ;       incf    L_EE
00065C EC?? F???      00836         call    DisplayExeTime
                      00837 
000660 EC?? F???      00838         call    LCD_L2
000664 6A22           00839         clrf    L_EE
000666 EC?? F???      00840         call    DispOpRTC
                      00841 
00066A                00842 HOLD_LOG
00066A EC?? F???      00843         call    READ_KEY
                      00844         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
00066E 0E07               M         movlw   keyB                ; poll for mode
000670 6210               M         cpfseq  KEY                 ; check this against key press
000672 EF?? F???          M         goto    Exit
                          M 
000676                    M Next
000676 6A89               M         clrf    LATA                ; clear pins before proceeding
000678 6A8A               M         clrf    LATB
00067A 6A8B               M         clrf    LATC
00067C 6A8C               M         clrf    LATD
00067E EF?? F???          M         goto    LOG_INFO
                          M 
000682                    M Exit
000682 0000               M         nop
                      00845         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000684 0E0D               M         movlw   key0                ; poll for mode
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000686 6210               M         cpfseq  KEY                 ; check this against key press
000688 EF?? F???          M         goto    Exit
                          M 
00068C                    M Next
00068C 6A89               M         clrf    LATA                ; clear pins before proceeding
00068E 6A8A               M         clrf    LATB
000690 6A8B               M         clrf    LATC
000692 6A8C               M         clrf    LATD
000694 EF?? F???          M         goto    STANDBY
                          M 
000698                    M Exit
000698 0000               M         nop
00069A D???           00846         bra     HOLD_LOG
                      00847 
00069C                00848 LOG_INFO
00069C EC?? F???      00849         call    ClrLCD
                      00850         Display LogInfo1
  0000                    M         local   loop
0006A0 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
0006A2 6EF8               M         movwf   TBLPTRU
0006A4 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
0006A6 6EF7               M         movwf   TBLPTRH
0006A8 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
0006AA 6EF6               M         movwf   TBLPTRL
0006AC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006AE 50F5               M         movf    TABLAT, W
0006B0                    M loop
0006B0 EC?? F???          M         call    WR_DATA         ; write to LCD
0006B4 000B               M         tblrd+*                 ; next row in table
0006B6 50F5               M         movf    TABLAT, W
0006B8 E1??               M         bnz     loop
0006BA EC?? F???      00851         call    LCD_L2
                      00852         Display LogInfo2
  0000                    M         local   loop
0006BE 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0006C0 6EF8               M         movwf   TBLPTRU
0006C2 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0006C4 6EF7               M         movwf   TBLPTRH
0006C6 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0006C8 6EF6               M         movwf   TBLPTRL
0006CA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006CC 50F5               M         movf    TABLAT, W
0006CE                    M loop
0006CE EC?? F???          M         call    WR_DATA         ; write to LCD
0006D2 000B               M         tblrd+*                 ; next row in table
0006D4 50F5               M         movf    TABLAT, W
0006D6 E1??               M         bnz     loop
0006D8 6A21           00853         clrf    H_EE
0006DA 6A22           00854         clrf    L_EE
                      00855         ;DisplayLog  H_EE, L_EE
0006DC                00856 HOLD_LOG_INFO
0006DC EC?? F???      00857         call    READ_KEY
                      00858         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0006E0 0E0D               M         movlw   key0                ; poll for mode
0006E2 6210               M         cpfseq  KEY                 ; check this against key press
0006E4 EF?? F???          M         goto    Exit
                          M 
0006E8                    M Next
0006E8 6A89               M         clrf    LATA                ; clear pins before proceeding
0006EA 6A8A               M         clrf    LATB
0006EC 6A8B               M         clrf    LATC
0006EE 6A8C               M         clrf    LATD
0006F0 EF?? F???          M         goto    LOG
                          M 
0006F4                    M Exit
0006F4 0000               M         nop
0006F6 D???           00859         bra     HOLD_LOG
                      00860         
                      00861 ;*******************************************************************************
                      00862 ; permanent logs
                      00863 ;*******************************************************************************
                      00864 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006F8                00865 PERM_LOG
0006F8 EC?? F???      00866         call    ClrLCD
                      00867         Display PermLog1
  0000                    M         local   loop
0006FC 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0006FE 6EF8               M         movwf   TBLPTRU
000700 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000702 6EF7               M         movwf   TBLPTRH
000704 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000706 6EF6               M         movwf   TBLPTRL
000708 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00070A 50F5               M         movf    TABLAT, W
00070C                    M loop
00070C EC?? F???          M         call    WR_DATA         ; write to LCD
000710 000B               M         tblrd+*                 ; next row in table
000712 50F5               M         movf    TABLAT, W
000714 E1??               M         bnz     loop
000716 EC?? F???      00868         call    LCD_L2
                      00869         Display PermLog2
  0000                    M         local   loop
00071A 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00071C 6EF8               M         movwf   TBLPTRU
00071E 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000720 6EF7               M         movwf   TBLPTRH
000722 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000724 6EF6               M         movwf   TBLPTRL
000726 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000728 50F5               M         movf    TABLAT, W
00072A                    M loop
00072A EC?? F???          M         call    WR_DATA         ; write to LCD
00072E 000B               M         tblrd+*                 ; next row in table
000730 50F5               M         movf    TABLAT, W
000732 E1??               M         bnz     loop
                      00870         
000734                00871 HOLD_PERM_LOG
000734 EC?? F???      00872         call    READ_KEY
                      00873         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000738 0E0D               M         movlw   key0                ; poll for mode
00073A 6210               M         cpfseq  KEY                 ; check this against key press
00073C EF?? F???          M         goto    Exit
                          M 
000740                    M Next
000740 6A89               M         clrf    LATA                ; clear pins before proceeding
000742 6A8A               M         clrf    LATB
000744 6A8B               M         clrf    LATC
000746 6A8C               M         clrf    LATD
000748 EF?? F???          M         goto    STANDBY
                          M 
00074C                    M Exit
00074C 0000               M         nop
                      00874         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00074E 0E00               M         movlw   key1                ; poll for mode
000750 6210               M         cpfseq  KEY                 ; check this against key press
000752 EF?? F???          M         goto    Exit
                          M 
000756                    M Next
000756 6A89               M         clrf    LATA                ; clear pins before proceeding
000758 6A8A               M         clrf    LATB
00075A 6A8B               M         clrf    LATC
00075C 6A8C               M         clrf    LATD
00075E EF?? F???          M         goto    PLOG
                          M 
000762                    M Exit
000762 0000               M         nop
                      00875         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000764 0E01               M         movlw   key2                ; poll for mode
000766 6210               M         cpfseq  KEY                 ; check this against key press
000768 EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00076C                    M Next
00076C 6A89               M         clrf    LATA                ; clear pins before proceeding
00076E 6A8A               M         clrf    LATB
000770 6A8B               M         clrf    LATC
000772 6A8C               M         clrf    LATD
000774 EF?? F???          M         goto    PLOG
                          M 
000778                    M Exit
000778 0000               M         nop
                      00876         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00077A 0E02               M         movlw   key3                ; poll for mode
00077C 6210               M         cpfseq  KEY                 ; check this against key press
00077E EF?? F???          M         goto    Exit
                          M 
000782                    M Next
000782 6A89               M         clrf    LATA                ; clear pins before proceeding
000784 6A8A               M         clrf    LATB
000786 6A8B               M         clrf    LATC
000788 6A8C               M         clrf    LATD
00078A EF?? F???          M         goto    PLOG
                          M 
00078E                    M Exit
00078E 0000               M         nop
                      00877         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000790 0E04               M         movlw   key4                ; poll for mode
000792 6210               M         cpfseq  KEY                 ; check this against key press
000794 EF?? F???          M         goto    Exit
                          M 
000798                    M Next
000798 6A89               M         clrf    LATA                ; clear pins before proceeding
00079A 6A8A               M         clrf    LATB
00079C 6A8B               M         clrf    LATC
00079E 6A8C               M         clrf    LATD
0007A0 EF?? F???          M         goto    PLOG
                          M 
0007A4                    M Exit
0007A4 0000               M         nop
                      00878         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0007A6 0E05               M         movlw   key5                ; poll for mode
0007A8 6210               M         cpfseq  KEY                 ; check this against key press
0007AA EF?? F???          M         goto    Exit
                          M 
0007AE                    M Next
0007AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0007B0 6A8A               M         clrf    LATB
0007B2 6A8B               M         clrf    LATC
0007B4 6A8C               M         clrf    LATD
0007B6 EF?? F???          M         goto    PLOG
                          M 
0007BA                    M Exit
0007BA 0000               M         nop
                      00879         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0007BC 0E06               M         movlw   key6                ; poll for mode
0007BE 6210               M         cpfseq  KEY                 ; check this against key press
0007C0 EF?? F???          M         goto    Exit
                          M 
0007C4                    M Next
0007C4 6A89               M         clrf    LATA                ; clear pins before proceeding
0007C6 6A8A               M         clrf    LATB
0007C8 6A8B               M         clrf    LATC
0007CA 6A8C               M         clrf    LATD
0007CC EF?? F???          M         goto    PLOG
                          M 
0007D0                    M Exit
0007D0 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00880         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0007D2 0E08               M         movlw   key7                ; poll for mode
0007D4 6210               M         cpfseq  KEY                 ; check this against key press
0007D6 EF?? F???          M         goto    Exit
                          M 
0007DA                    M Next
0007DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0007DC 6A8A               M         clrf    LATB
0007DE 6A8B               M         clrf    LATC
0007E0 6A8C               M         clrf    LATD
0007E2 EF?? F???          M         goto    PLOG
                          M 
0007E6                    M Exit
0007E6 0000               M         nop
                      00881         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0007E8 0E09               M         movlw   key8                ; poll for mode
0007EA 6210               M         cpfseq  KEY                 ; check this against key press
0007EC EF?? F???          M         goto    Exit
                          M 
0007F0                    M Next
0007F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0007F2 6A8A               M         clrf    LATB
0007F4 6A8B               M         clrf    LATC
0007F6 6A8C               M         clrf    LATD
0007F8 EF?? F???          M         goto    PLOG
                          M 
0007FC                    M Exit
0007FC 0000               M         nop
                      00882         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0007FE 0E0A               M         movlw   key9                ; poll for mode
000800 6210               M         cpfseq  KEY                 ; check this against key press
000802 EF?? F???          M         goto    Exit
                          M 
000806                    M Next
000806 6A89               M         clrf    LATA                ; clear pins before proceeding
000808 6A8A               M         clrf    LATB
00080A 6A8B               M         clrf    LATC
00080C 6A8C               M         clrf    LATD
00080E EF?? F???          M         goto    PLOG
                          M 
000812                    M Exit
000812 0000               M         nop
000814 D???           00883         bra HOLD_PERM_LOG
                      00884         
000816                00885 PLOG
000816 EC?? F???      00886         call    ClrLCD
                      00887         Display PermLog1
  0000                    M         local   loop
00081A 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00081C 6EF8               M         movwf   TBLPTRU
00081E 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000820 6EF7               M         movwf   TBLPTRH
000822 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000824 6EF6               M         movwf   TBLPTRL
000826 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000828 50F5               M         movf    TABLAT, W
00082A                    M loop
00082A EC?? F???          M         call    WR_DATA         ; write to LCD
00082E 000B               M         tblrd+*                 ; next row in table
000830 50F5               M         movf    TABLAT, W
000832 E1??               M         bnz     loop
                      00888         
                      00889         ; find the key press value
000834 C010 FFE8      00890         movff   KEY, WREG
000838 2AE8           00891         incf    WREG        ; W = KEY+1
00083A 6E17           00892         movwf   temp
                      00893         
00083C 42E8           00894         rrncf   WREG        ; division by 4
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00083E 9EE8           00895         bcf     WREG, 7     ; clear last bit, overflow from rotate
000840 42E8           00896         rrncf   WREG        
000842 9EE8           00897         bcf     WREG, 7
000844 5E17           00898         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000846 C017 FFE8      00899         movff   temp, WREG
00084A C017 F011      00900         movff   temp, temp_KEY
00084E 0D15           00901         mullw   d'21'       ; indexed as mutliples of 21
                      00902 
000850                00903 displayNum
000850 C011 FFE8      00904         movff   temp_KEY, WREG
000854 0F30           00905         addlw   0x30
000856 EC?? F???      00906         call    WR_DATA
00085A 0E3A           00907         movlw   ":"
00085C EC?? F???      00908         call    WR_DATA
000860 0E20           00909         movlw   " "
000862 EC?? F???      00910         call    WR_DATA
                      00911         
000866 CFF3 F022      00912         movff   PRODL, L_EE
00086A 0E00           00913         movlw   d'0'
00086C 2622           00914         addwf   L_EE
                      00915         READEE  OP_sec, H_EE, L_EE
00086E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000872 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000876 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000878 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00087A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00087C CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000880 2A22           00916         incf    L_EE
                      00917         READEE  OP_INT, H_EE, L_EE
000882 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000886 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00088A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00088C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00088E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000890 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000894 2A22           00918         incf    L_EE
000896 EC?? F???      00919         call    DisplayExeTime
00089A CFF3 F022      00920         movff   PRODL, L_EE
                      00921         
                      00922         ; reset eeprom to beginning
00089E EC?? F???      00923         call    LCD_L2
0008A2 CFF3 F022      00924         movff   PRODL, L_EE
0008A6 EC?? F???      00925         call    DispOpRTC
                      00926         
0008AA                00927 HOLD_PLOG
0008AA EC?? F???      00928         call    READ_KEY
                      00929         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0008AE 0E0D               M         movlw   key0                ; poll for mode
0008B0 6210               M         cpfseq  KEY                 ; check this against key press
0008B2 EF?? F???          M         goto    Exit
                          M 
0008B6                    M Next
0008B6 6A89               M         clrf    LATA                ; clear pins before proceeding
0008B8 6A8A               M         clrf    LATB
0008BA 6A8B               M         clrf    LATC
0008BC 6A8C               M         clrf    LATD
0008BE EF?? F???          M         goto    PERM_LOG
                          M 
0008C2                    M Exit
0008C2 0000               M         nop
0008C4 D???           00930         bra HOLD_PLOG
                      00931         
                      00932 ;*******************************************************************************
                      00933 ; pc interface
                      00934 ;*******************************************************************************
                      00935 
0008C6                00936 PC_MODE
0008C6 EC?? F???      00937         call    ClrLCD
                      00938         Display PC1
  0000                    M         local   loop
0008CA 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0008CC 6EF8               M         movwf   TBLPTRU
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008CE 0E??               M         movlw   high PC1        ; Move Table<15:8>
0008D0 6EF7               M         movwf   TBLPTRH
0008D2 0E??               M         movlw   low PC1         ; Move Table<7:0>
0008D4 6EF6               M         movwf   TBLPTRL
0008D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008D8 50F5               M         movf    TABLAT, W
0008DA                    M loop
0008DA EC?? F???          M         call    WR_DATA         ; write to LCD
0008DE 000B               M         tblrd+*                 ; next row in table
0008E0 50F5               M         movf    TABLAT, W
0008E2 E1??               M         bnz     loop
0008E4 EC?? F???      00939         call    LCD_L2
                      00940         Display PC2
  0000                    M         local   loop
0008E8 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0008EA 6EF8               M         movwf   TBLPTRU
0008EC 0E??               M         movlw   high PC2        ; Move Table<15:8>
0008EE 6EF7               M         movwf   TBLPTRH
0008F0 0E??               M         movlw   low PC2         ; Move Table<7:0>
0008F2 6EF6               M         movwf   TBLPTRL
0008F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008F6 50F5               M         movf    TABLAT, W
0008F8                    M loop
0008F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0008FC 000B               M         tblrd+*                 ; next row in table
0008FE 50F5               M         movf    TABLAT, W
000900 E1??               M         bnz     loop
000902 CFF9 F03A      00941         movff   PCL, PC_PCL
000906 CFFA F03B      00942         movff   PCLATH, PC_PCLATH
00090A CFFB F03C      00943         movff   PCLATU, PC_PCLATU
                      00944         
00090E                00945 HOLD_PC
00090E EC?? F???      00946         call    READ_KEY
                      00947         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000912 0E0D               M         movlw   key0                ; poll for mode
000914 6210               M         cpfseq  KEY                 ; check this against key press
000916 EF?? F???          M         goto    Exit
                          M 
00091A                    M Next
00091A 6A89               M         clrf    LATA                ; clear pins before proceeding
00091C 6A8A               M         clrf    LATB
00091E 6A8B               M         clrf    LATC
000920 6A8C               M         clrf    LATD
000922 EF?? F???          M         goto    STANDBY
                          M 
000926                    M Exit
000926 0000               M         nop
                      00948         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000928 0E0E               M         movlw   keyH                ; poll for mode
00092A 6210               M         cpfseq  KEY                 ; check this against key press
00092C EF?? F???          M         goto    Exit
                          M 
000930                    M Next
000930 6A89               M         clrf    LATA                ; clear pins before proceeding
000932 6A8A               M         clrf    LATB
000934 6A8B               M         clrf    LATC
000936 6A8C               M         clrf    LATD
000938 EF?? F???          M         goto    PC_TRANSFER
                          M 
00093C                    M Exit
00093C 0000               M         nop
00093E D???           00949         bra     HOLD_PC
                      00950 
000940                00951 PC_TRANSFER
000940 6839           00952         setf    transferring
000942 EC?? F???      00953         call    ClrLCD
                      00954         Display PCTransfer
  0000                    M         local   loop
000946 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000948 6EF8               M         movwf   TBLPTRU
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00094A 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
00094C 6EF7               M         movwf   TBLPTRH
00094E 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000950 6EF6               M         movwf   TBLPTRL
000952 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000954 50F5               M         movf    TABLAT, W
000956                    M loop
000956 EC?? F???          M         call    WR_DATA         ; write to LCD
00095A 000B               M         tblrd+*                 ; next row in table
00095C 50F5               M         movf    TABLAT, W
00095E E1??               M         bnz     loop
000960 EC?? F???      00955         call    DataUSART
000964 6A39           00956         clrf    transferring
000966 D???           00957         bra     STANDBY
                      00958         
                      00959 ;*******************************************************************************
                      00960 ; subroutines
                      00961 ;*******************************************************************************
                      00962 
000968                00963 ARDUINO_INIT
Warning[203]: Found opcode in column 1. (return)
000968 0012           00964 return
                      00965         
00096A                00966 RTC_INIT
                      00967         ; set sda and scl to high
00096A 9882           00968         bcf     PORTC, 4
00096C 9682           00969         bcf     PORTC, 3
00096E 8894           00970         bsf     TRISC, 4
000970 8694           00971         bsf     TRISC, 3
                      00972         
000972 EC?? F???      00973         call    INIT_RTC
                      00974         
                      00975         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000976 0012           00976 return
                      00977         
000978                00978 SAVE_TIME   
                      00979         rtc_read    0x02        ; hours
000978 0E02               M     movlw   0x02
00097A 6E??               M     movwf   regaddress
00097C EC?? F???          M     call    read_rtc
000980 C??? FFE8          M     movff   datachar, WREG
000984 EC?? F???          M     call    rtc_convert
000988 EC?? F???      00980         call    WriteEE_RTC
                      00981         rtc_read    0x01        ; minutes
00098C 0E01               M     movlw   0x01
00098E 6E??               M     movwf   regaddress
000990 EC?? F???          M     call    read_rtc
000994 C??? FFE8          M     movff   datachar, WREG
000998 EC?? F???          M     call    rtc_convert
00099C EC?? F???      00982         call    WriteEE_RTC
                      00983         rtc_read    0x06        ; years
0009A0 0E06               M     movlw   0x06
0009A2 6E??               M     movwf   regaddress
0009A4 EC?? F???          M     call    read_rtc
0009A8 C??? FFE8          M     movff   datachar, WREG
0009AC EC?? F???          M     call    rtc_convert
0009B0 EC?? F???      00984         call    WriteEE_RTC
                      00985         rtc_read    0x05        ; months
0009B4 0E05               M     movlw   0x05
0009B6 6E??               M     movwf   regaddress
0009B8 EC?? F???          M     call    read_rtc
0009BC C??? FFE8          M     movff   datachar, WREG
0009C0 EC?? F???          M     call    rtc_convert
0009C4 EC?? F???      00986         call    WriteEE_RTC
                      00987         rtc_read    0x04        ; days
0009C8 0E04               M     movlw   0x04
0009CA 6E??               M     movwf   regaddress
0009CC EC?? F???          M     call    read_rtc
0009D0 C??? FFE8          M     movff   datachar, WREG
0009D4 EC?? F???          M     call    rtc_convert
0009D8 EC?? F???      00988         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0009DC 0012           00989 return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00990         
0009DE                00991 SAVE_EXE_TIME
                      00992         
Warning[202]: Argument out of range.  Least significant bits used.
0009DE 3818           00993         swapf   OP_sec, WREG    ; 100's seconds
0009E0 6E17           00994         movwf   temp
0009E2 0E0F           00995         movlw   0x0F
0009E4 1617           00996         andwf   temp
0009E6 C017 FFE8      00997         movff   temp, WREG
0009EA 0F30           00998         addlw   0x30    
                      00999         WriteEE WREG, H_EE, L_EE
0009EC C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0009F0 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0009F4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009F8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009FA D???               M         bra     $-2
                          M 
0009FC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009FE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A00 84A6               M         bsf     EECON1, WREN        ; enable write
000A02 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A04 98A1               M         bcf     PIR2, EEIF
                          M 
000A06 0E55               M         movlw   0x55
000A08 6EA7               M         movwf   EECON2              ; write 55h
000A0A 0EAA               M         movlw   0xaa
000A0C 6EA7               M         movwf   EECON2              ; write 0xaa
000A0E 82A6               M         bsf     EECON1, WR          ; begin write
000A10 B2A6               M         btfsc   EECON1, WR
000A12 D???               M         bra     $-2
                          M 
000A14 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A16 94A6               M         bcf     EECON1, WREN        ; disable writes
000A18 2A22           01000         incf    L_EE
                      01001         
000A1A C018 F017      01002         movff   OP_sec, temp    ; 10's seconds
000A1E 0E0F           01003         movlw   0x0F
000A20 1617           01004         andwf   temp            ; Temp = lower nibble of Op_sec
000A22 C017 FFE8      01005         movff   temp, WREG      ; W = Temp
000A26 0F30           01006         addlw   0x30            ; Convert to ASCII
                      01007         WriteEE WREG, H_EE, L_EE
000A28 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000A2C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000A30 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A34 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A36 D???               M         bra     $-2
                          M 
000A38 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A3A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A3C 84A6               M         bsf     EECON1, WREN        ; enable write
000A3E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A40 98A1               M         bcf     PIR2, EEIF
                          M 
000A42 0E55               M         movlw   0x55
000A44 6EA7               M         movwf   EECON2              ; write 55h
000A46 0EAA               M         movlw   0xaa
000A48 6EA7               M         movwf   EECON2              ; write 0xaa
000A4A 82A6               M         bsf     EECON1, WR          ; begin write
000A4C B2A6               M         btfsc   EECON1, WR
000A4E D???               M         bra     $-2
                          M 
000A50 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A52 94A6               M         bcf     EECON1, WREN        ; disable writes
000A54 2A22           01008         incf    L_EE
                      01009         
Warning[202]: Argument out of range.  Least significant bits used.
000A56 3819           01010         swapf   OP_INT, WREG    ;1's seconds
000A58 6E17           01011         movwf   temp
000A5A 0E0F           01012         movlw   0x0f
000A5C 1617           01013         andwf   temp
000A5E C017 FFE8      01014         movff   temp, WREG
000A62 0F30           01015         addlw   0x30
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01016         WriteEE WREG, H_EE, L_EE
000A64 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000A68 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000A6C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A70 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A72 D???               M         bra     $-2
                          M 
000A74 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A76 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A78 84A6               M         bsf     EECON1, WREN        ; enable write
000A7A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A7C 98A1               M         bcf     PIR2, EEIF
                          M 
000A7E 0E55               M         movlw   0x55
000A80 6EA7               M         movwf   EECON2              ; write 55h
000A82 0EAA               M         movlw   0xaa
000A84 6EA7               M         movwf   EECON2              ; write 0xaa
000A86 82A6               M         bsf     EECON1, WR          ; begin write
000A88 B2A6               M         btfsc   EECON1, WR
000A8A D???               M         bra     $-2
                          M 
000A8C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A8E 94A6               M         bcf     EECON1, WREN        ; disable writes
000A90 2A22           01017         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000A92 0012           01018 return
                      01019         
                      01020                 
000A94                01021 DISPLAY_RTC
                      01022         ; display data in this format hh/minmin/yy yy/mm/dd
                      01023         rtc_read    0x02            ; 0x02 from DS1307 - hours
000A94 0E02               M     movlw   0x02
000A96 6E??               M     movwf   regaddress
000A98 EC?? F???          M     call    read_rtc
000A9C C??? FFE8          M     movff   datachar, WREG
000AA0 EC?? F???          M     call    rtc_convert
000AA4 C??? FFE8      01024         movff   tens_digit,WREG
000AA8 EC?? F???      01025         call    WR_DATA
000AAC C??? FFE8      01026         movff   ones_digit,WREG
000AB0 EC?? F???      01027         call    WR_DATA
000AB4 0E68           01028         movlw   "h"
000AB6 EC?? F???      01029         call    WR_DATA
                      01030         
                      01031         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000ABA 0E01               M     movlw   0x01
000ABC 6E??               M     movwf   regaddress
000ABE EC?? F???          M     call    read_rtc
000AC2 C??? FFE8          M     movff   datachar, WREG
000AC6 EC?? F???          M     call    rtc_convert
000ACA C??? FFE8      01032         movff   tens_digit,WREG
000ACE EC?? F???      01033         call    WR_DATA
000AD2 C??? FFE8      01034         movff   ones_digit,WREG
000AD6 EC?? F???      01035         call    WR_DATA
                      01036         
                      01037         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000ADA 0E00               M     movlw   0x00
000ADC 6E??               M     movwf   regaddress
000ADE EC?? F???          M     call    read_rtc
000AE2 C??? FFE8          M     movff   datachar, WREG
000AE6 EC?? F???          M     call    rtc_convert
000AEA C??? FFE8      01038         movff   tens_digit,WREG
000AEE EC?? F???      01039         call    WR_DATA
000AF2 C??? FFE8      01040         movff   ones_digit,WREG
000AF6 EC?? F???      01041         call    WR_DATA
000AFA 0E20           01042         movlw   " "
000AFC EC?? F???      01043         call    WR_DATA
                      01044         
                      01045         rtc_read    0x06            ; 0x06 from DS1307 - years
000B00 0E06               M     movlw   0x06
000B02 6E??               M     movwf   regaddress
000B04 EC?? F???          M     call    read_rtc
000B08 C??? FFE8          M     movff   datachar, WREG
000B0C EC?? F???          M     call    rtc_convert
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B10 C??? FFE8      01046         movff   tens_digit,WREG
000B14 EC?? F???      01047         call    WR_DATA
000B18 C??? FFE8      01048         movff   ones_digit,WREG
000B1C EC?? F???      01049         call    WR_DATA
000B20 0E2F           01050         movlw   "/"
000B22 EC?? F???      01051         call    WR_DATA
                      01052         
                      01053         rtc_read    0x05            ; 0x05 from DS1307 - months
000B26 0E05               M     movlw   0x05
000B28 6E??               M     movwf   regaddress
000B2A EC?? F???          M     call    read_rtc
000B2E C??? FFE8          M     movff   datachar, WREG
000B32 EC?? F???          M     call    rtc_convert
000B36 C??? FFE8      01054         movff   tens_digit,WREG
000B3A EC?? F???      01055         call    WR_DATA
000B3E C??? FFE8      01056         movff   ones_digit,WREG
000B42 EC?? F???      01057         call    WR_DATA
000B46 0E2F           01058         movlw   "/"
000B48 EC?? F???      01059         call    WR_DATA
                      01060         
                      01061         rtc_read    0x04            ; 0x04 from DS1307 - days
000B4C 0E04               M     movlw   0x04
000B4E 6E??               M     movwf   regaddress
000B50 EC?? F???          M     call    read_rtc
000B54 C??? FFE8          M     movff   datachar, WREG
000B58 EC?? F???          M     call    rtc_convert
000B5C C??? FFE8      01062         movff   tens_digit,WREG
000B60 EC?? F???      01063         call    WR_DATA
000B64 C??? FFE8      01064         movff   ones_digit,WREG
000B68 EC?? F???      01065         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000B6C 0012           01066 return
                      01067         
000B6E                01068 SET_TIME
                      01069         rtc_resetAll
                          M 
000B6E 6A??               M     clrf    databyte
000B70 0E06               M     movlw   6
000B72 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000B74                    M     del_loop0
000B74 EC?? F???          M     call    write_rtc
000B78 2E??               M     decfsz  regaddress
000B7A D???               M     bra     del_loop0
000B7C EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01070         
                      01071         rtc_set 0x00,   b'10000000'
000B80 0E00               M     movlw   0x00
000B82 6E??               M     movwf   regaddress
000B84 0E80               M     movlw   b'10000000'
000B86 6E??               M     movwf   databyte
000B88 EC?? F???          M     call    write_rtc
                      01072 
                      01073         rtc_set 0x06,   b'00010111'             ; Year 17
000B8C 0E06               M     movlw   0x06
000B8E 6E??               M     movwf   regaddress
000B90 0E17               M     movlw   b'00010111'
000B92 6E??               M     movwf   databyte
000B94 EC?? F???          M     call    write_rtc
                      01074         rtc_set 0x05,   b'00000010'             ; Month 2
000B98 0E05               M     movlw   0x05
000B9A 6E??               M     movwf   regaddress
000B9C 0E02               M     movlw   b'00000010'
000B9E 6E??               M     movwf   databyte
000BA0 EC?? F???          M     call    write_rtc
                      01075         rtc_set 0x04,   b'00100101'             ; Date 25
000BA4 0E04               M     movlw   0x04
000BA6 6E??               M     movwf   regaddress
000BA8 0E25               M     movlw   b'00100101'
000BAA 6E??               M     movwf   databyte
000BAC EC?? F???          M     call    write_rtc
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01076         rtc_set 0x02,   b'00100010'             ; Hours 
000BB0 0E02               M     movlw   0x02
000BB2 6E??               M     movwf   regaddress
000BB4 0E22               M     movlw   b'00100010'
000BB6 6E??               M     movwf   databyte
000BB8 EC?? F???          M     call    write_rtc
                      01077         rtc_set 0x01,   b'00100101'             ; Minutes 25
000BBC 0E01               M     movlw   0x01
000BBE 6E??               M     movwf   regaddress
000BC0 0E25               M     movlw   b'00100101'
000BC2 6E??               M     movwf   databyte
000BC4 EC?? F???          M     call    write_rtc
                      01078         rtc_set 0x00,   b'00000000'             ; Seconds 0
000BC8 0E00               M     movlw   0x00
000BCA 6E??               M     movwf   regaddress
000BCC 0E00               M     movlw   b'00000000'
000BCE 6E??               M     movwf   databyte
000BD0 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000BD4 0012           01079 return
                      01080         
000BD6                01081 INIT_USART
                      01082         
000BD6 8E94           01083         bsf     TRISC, 7        ; set RC7=USART RC
000BD8 9C94           01084         bcf     TRISC, 6        ; clear RC6=USART TX
                      01085 
000BDA 0E0F           01086         movlw   15              ; baud rate 9600
000BDC 6EAF           01087         movwf   SPBRG
000BDE 6AAC           01088         clrf    TXSTA
                      01089         
000BE0 6AAB           01090         clrf    RCSTA
000BE2 8EAB           01091         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000BE4 88AB           01092         bsf     RCSTA,CREN      ; continous receive
                      01093         
000BE6 8AAC           01094         bsf     TXSTA, TXEN     ; transmit enabled
000BE8 0012           01095         return
                      01096 
000BEA                01097 DataUSART
000BEA 0E02           01098         movlw   0x02
000BEC EC?? F???      01099         call    USART_WAIT
000BF0 0E0D           01100         movlw   0x0D
000BF2 EC?? F???      01101         call    USART_WAIT
                      01102         
000BF6 6A15           01103         clrf    counter         ; used to cycle through past 9 eeprom logs
000BF8 6A16           01104         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01105         
000BFA                01106 TRANSFER_LOGS
000BFA 0E15           01107         movlw   d'21'           ; logs are 21 bits apart
000BFC 0215           01108         mulwf   counter         ; log number one starts at eeprom address 0
000BFE CFF3 F022      01109         movff   PRODL, L_EE     ; low address now points to count X 21
000C02 6A16           01110         clrf    counter2
                      01111         
000C04                01112 TRANSFER_DATA   
                      01113         READEE  WREG, H_EE, L_EE
000C04 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C08 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C0C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C0E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C10 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C12 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000C16 EC?? F???      01114         call    USART_WAIT      ; transfer bit
000C1A 2A22           01115         incf    L_EE
                      01116         
000C1C 2A16           01117         incf    counter2
000C1E 0E12           01118         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000C20 6216           01119         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000C22 D???           01120         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01121         
000C24 EC?? F???      01122         call    USART_LINE      ; new line because a e s t h e t i c
                      01123         
000C28 2A15           01124         incf    counter
000C2A 0E08           01125         movlw   d'8'            ; we save up to the last 9 permanent logs
000C2C 6215           01126         cpfseq  counter
000C2E D???           01127         bra     TRANSFER_LOGS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01128         
000C30 EC?? F???      01129         call    LCD_L2
                      01130         Display PCComplete
  0000                    M         local   loop
000C34 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000C36 6EF8               M         movwf   TBLPTRU
000C38 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000C3A 6EF7               M         movwf   TBLPTRH
000C3C 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000C3E 6EF6               M         movwf   TBLPTRL
000C40 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C42 50F5               M         movf    TABLAT, W
000C44                    M loop
000C44 EC?? F???          M         call    WR_DATA         ; write to LCD
000C48 000B               M         tblrd+*                 ; next row in table
000C4A 50F5               M         movf    TABLAT, W
000C4C E1??               M         bnz     loop
                      01131         Delay50N delayR, 0x28   
  0000                    M         local   loop
000C4E 0E28               M         movlw   0x28
000C50 6E1B               M         movwf   delayR
                          M 
000C52                    M loop
000C52 EC?? F???          M         call    Delay50ms
000C56 2E1B               M         decfsz  delayR
000C58 EF?? F???          M         goto    loop
000C5C 0012           01132         return                  ; done transmitting data
                      01133         
000C5E                01134 USART_WAIT
000C5E 6EAD           01135         movwf   TXREG
000C60 A2AC           01136         btfss   TXSTA,1
000C62 EF?? F???      01137         goto    $-2
000C66 0012           01138         return
                      01139 
000C68                01140 USART_LINE
000C68 0E0A           01141         movlw   0x0A
000C6A EC?? F???      01142         call    USART_WAIT
000C6E 0E0D           01143         movlw   0x0D
000C70 EC?? F???      01144         call    USART_WAIT
000C74 0012           01145         return
                      01146         
000C76                01147 Delay5us
000C76 0E78           01148         movlw   d'120'
000C78 6E1C           01149         movwf   d5us
                      01150 
000C7A                01151 loop5us
000C7A 2E1C           01152         decfsz  d5us
000C7C EF?? F???      01153         goto    loop5us
000C80 0000           01154         nop
000C82 0012           01155         return
                      01156 
000C84                01157 Delay200us
000C84 0EA4           01158         movlw   0xA4
000C86 6E1D           01159         movwf   d200us
                      01160 
000C88                01161 loop200us
000C88 2E1D           01162         decfsz  d200us
000C8A EF?? F???      01163         goto    loop200us
000C8E 0000           01164         nop
000C90 0012           01165         return
                      01166 
000C92                01167 Delay50ms
000C92 0EF9           01168         movlw   0xF9
000C94 6E1E           01169         movwf   d50ms
                      01170 
000C96                01171 loop50ms
000C96 EC?? F???      01172         call    Delay200us
000C9A 2E1E           01173         decfsz  d50ms
                      01174 
000C9C                01175 Cycles
000C9C EF?? F???      01176         goto    loop50ms
000CA0 EC?? F???      01177         call    Delay200us
000CA4 0012           01178         return
                      01179 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CA6                01180 WriteEE_RTC
                      01181         WriteEE tens_digit, H_EE, L_EE
000CA6 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000CAA C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000CAE C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000CB2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000CB4 D???               M         bra     $-2
                          M 
000CB6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CB8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CBA 84A6               M         bsf     EECON1, WREN        ; enable write
000CBC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CBE 98A1               M         bcf     PIR2, EEIF
                          M 
000CC0 0E55               M         movlw   0x55
000CC2 6EA7               M         movwf   EECON2              ; write 55h
000CC4 0EAA               M         movlw   0xaa
000CC6 6EA7               M         movwf   EECON2              ; write 0xaa
000CC8 82A6               M         bsf     EECON1, WR          ; begin write
000CCA B2A6               M         btfsc   EECON1, WR
000CCC D???               M         bra     $-2
                          M 
000CCE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CD0 94A6               M         bcf     EECON1, WREN        ; disable writes
000CD2 2A22           01182         incf    L_EE
                      01183         WriteEE ones_digit, H_EE, L_EE
000CD4 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000CD8 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000CDC C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000CE0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000CE2 D???               M         bra     $-2
                          M 
000CE4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CE6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CE8 84A6               M         bsf     EECON1, WREN        ; enable write
000CEA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CEC 98A1               M         bcf     PIR2, EEIF
                          M 
000CEE 0E55               M         movlw   0x55
000CF0 6EA7               M         movwf   EECON2              ; write 55h
000CF2 0EAA               M         movlw   0xaa
000CF4 6EA7               M         movwf   EECON2              ; write 0xaa
000CF6 82A6               M         bsf     EECON1, WR          ; begin write
000CF8 B2A6               M         btfsc   EECON1, WR
000CFA D???               M         bra     $-2
                          M 
000CFC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CFE 94A6               M         bcf     EECON1, WREN        ; disable writes
000D00 2A22           01184         incf    L_EE
000D02 0012           01185         return
                      01186 
000D04                01187 ClearEEPROM_21
000D04 6A21           01188         clrf    H_EE
000D06 6A22           01189         clrf    L_EE
000D08 6820           01190         setf    clear_EE
000D0A 6A15           01191         clrf    counter
000D0C                01192 ClearNext
                      01193         WriteEE         clear_EE, H_EE, L_EE
000D0C C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000D10 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000D14 C020 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000D18 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D1A D???               M         bra     $-2
                          M 
000D1C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D1E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D20 84A6               M         bsf     EECON1, WREN        ; enable write
000D22 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D24 98A1               M         bcf     PIR2, EEIF
                          M 
000D26 0E55               M         movlw   0x55
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D28 6EA7               M         movwf   EECON2              ; write 55h
000D2A 0EAA               M         movlw   0xaa
000D2C 6EA7               M         movwf   EECON2              ; write 0xaa
000D2E 82A6               M         bsf     EECON1, WR          ; begin write
000D30 B2A6               M         btfsc   EECON1, WR
000D32 D???               M         bra     $-2
                          M 
000D34 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D36 94A6               M         bcf     EECON1, WREN        ; disable writes
000D38 2A15           01194         incf            counter
000D3A 2A22           01195         incf            L_EE
000D3C 0E15           01196         movlw           d'21'
000D3E 6215           01197         cpfseq          counter
000D40 EF?? F???      01198         goto            ClearNext
000D44 6A21           01199         clrf            H_EE
000D46 6A22           01200         clrf            L_EE
000D48 0012           01201         return
                      01202         
000D4A                01203 READ_KEY
000D4A A281           01204         btfss   PORTB, 1        ; check for keypad interrupt
000D4C EF?? F???      01205         goto    READ_KEY
000D50 3881           01206         swapf   PORTB, W
000D52 0B0F           01207         andlw   0x0F
000D54 6E10           01208         movwf   KEY
000D56 B281           01209         btfsc   PORTB, 1
000D58 EF?? F???      01210         goto    $-2
000D5C 0012           01211         return
                      01212 
000D5E                01213 READ_KEY_TIME
000D5E EC?? F???      01214         call        LCD_L2          ; go to second line to print RTC
                      01215 
                      01216         ; display the time
000D62 EC?? F???      01217         call    DISPLAY_RTC
                      01218 
000D66 A281           01219         btfss       PORTB, 1    ; keypad interrupt
000D68 EF?? F???      01220         goto        READ_KEY_TIME
000D6C 3881           01221         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000D6E 0B0F           01222         andlw       0x0F        ; only want W3:0
000D70 6E10           01223         movwf       KEY         ; write this value to the KEY
000D72 B281           01224         btfsc       PORTB, 1    ; wait for release
000D74 EF?? F???      01225         goto        $-2         ; go back one instruction
000D78 0012           01226         return
                      01227 
000D7A                01228 DisplayExeTime
                      01229         READEE  REG_EE, H_EE, L_EE
000D7A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D7E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D82 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D84 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D86 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D88 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D8C 0EFF           01230         movlw   0xFF
000D8E 6223           01231         cpfseq  REG_EE
000D90 EF?? F???      01232         goto    NoSkipDispExeTime
                      01233         Display NoData
  0000                    M         local   loop
000D94 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D96 6EF8               M         movwf   TBLPTRU
000D98 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D9A 6EF7               M         movwf   TBLPTRH
000D9C 0E??               M         movlw   low NoData      ; Move Table<7:0>
000D9E 6EF6               M         movwf   TBLPTRL
000DA0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000DA2 50F5               M         movf    TABLAT, W
000DA4                    M loop
000DA4 EC?? F???          M         call    WR_DATA         ; write to LCD
000DA8 000B               M         tblrd+*                 ; next row in table
000DAA 50F5               M         movf    TABLAT, W
000DAC E1??               M         bnz     loop
000DAE 0EFF           01234         movlw   0xFF
000DB0 6023           01235         cpfslt  REG_EE
000DB2 EF?? F???      01236         goto    SkipDispExeTime
000DB6 0012           01237         return
                      01238 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DB8                01239 NoSkipDispExeTime
                      01240         READEE  WREG, H_EE, L_EE
000DB8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DBC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DC0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DC2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DC4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DC6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DCA EC?? F???      01241         call    WR_DATA
000DCE 2A22           01242         incf    L_EE
                      01243         
                      01244         READEE  WREG, H_EE, L_EE
000DD0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DD4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DD8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DDA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DDC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DDE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DE2 EC?? F???      01245         call    WR_DATA
000DE6 2A22           01246         incf    L_EE
                      01247         
                      01248         READEE  WREG, H_EE, L_EE
000DE8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DEC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DF0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DF2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DF4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DF6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DFA EC?? F???      01249         call    WR_DATA
000DFE 2A22           01250         incf    L_EE
                      01251 
000E00 0E73           01252         movlw   0x73            ; Write 's'
000E02 EC?? F???      01253         call    WR_DATA
000E06 EC?? F???      01254         call    LCD_L2
000E0A                01255 SkipDispExeTime
000E0A 0012           01256         return
                      01257 
000E0C                01258 DispOpRTC
                      01259         READEE  REG_EE, H_EE, L_EE
000E0C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E10 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000E14 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E16 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E18 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E1A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000E1E 0EFF           01260         movlw   0xff
000E20 6223           01261         cpfseq  REG_EE
000E22 EF?? F???      01262         goto    NoSkipDispOpRTC
                      01263         Display NoData
  0000                    M         local   loop
000E26 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E28 6EF8               M         movwf   TBLPTRU
000E2A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E2C 6EF7               M         movwf   TBLPTRH
000E2E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E30 6EF6               M         movwf   TBLPTRL
000E32 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E34 50F5               M         movf    TABLAT, W
000E36                    M loop
000E36 EC?? F???          M         call    WR_DATA         ; write to LCD
000E3A 000B               M         tblrd+*                 ; next row in table
000E3C 50F5               M         movf    TABLAT, W
000E3E E1??               M         bnz     loop
000E40 0EFF           01264         movlw   0xff
000E42 6023           01265         cpfslt  REG_EE
000E44 EF?? F???      01266         goto    SkipDispOpRTC
                      01267 
000E48                01268 NoSkipDispOpRTC
                      01269         READEE  REG_EE, H_EE, L_EE
000E48 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E4C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000E50 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E52 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E54 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-26-2017  8:55:48         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E56 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000E5A C023 FFE8      01270         movff   REG_EE, WREG
000E5E EC?? F???      01271         call    WR_DATA
000E62 2A22           01272         incf    L_EE
                      01273         
                      01274         READEE  REG_EE, H_EE, L_EE
000E64 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E68 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000E6C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E6E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E70 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E72 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000E76 C023 FFE8      01275         movff   REG_EE, WREG
000E7A EC?? F???      01276         call    WR_DATA
000E7E 2A22           01277         incf    L_EE
                      01278 
000E80 0E68           01279         movlw   "h"
000E82 EC?? F???      01280         call    WR_DATA
                      01281         
000E86 EC?? F???      01282         call    DispOpRTC_Helper
                      01283         
000E8A 0E20           01284         movlw   " "
000E8C EC?? F???      01285         call    WR_DATA
                      01286         
000E90 EC?? F???      01287         call    DispOpRTC_Helper
000E94 0E2F           01288         movlw   "/"
000E96 EC?? F???      01289         call    WR_DATA
                      01290 
000E9A EC?? F???      01291         call    DispOpRTC_Helper
000E9E 0E2F           01292         movlw   "/"
000EA0 EC?? F???      01293         call    WR_DATA
000EA4 EC?? F???      01294         call    DispOpRTC_Helper
000EA8                01295 SkipDispOpRTC
000EA8 0012           01296                 return
000EAA                01297 DispOpRTC_Helper
                      01298         READEE          REG_EE, H_EE, L_EE
000EAA C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EAE C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000EB2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EB4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EB6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EB8 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000EBC C023 FFE8      01299         movff           REG_EE, WREG
000EC0 EC?? F???      01300         call            WR_DATA
000EC4 2A22           01301         incf            L_EE
                      01302         READEE          REG_EE, H_EE, L_EE
000EC6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000ECA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000ECE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000ED0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000ED2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000ED4 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000ED8 C023 FFE8      01303         movff           REG_EE, WREG
000EDC EC?? F???      01304         call            WR_DATA
000EE0 2A22           01305         incf            L_EE
000EE2 0012           01306         return
Warning[205]: Found directive in column 1. (end)
                      01307 end

Errors   :     0
Warnings :    46 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

