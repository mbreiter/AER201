MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
                      00001 ;External labels
Warning[205]: Found directive in column 1. (extern)
  0000                00002 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00003 
                      00004 ;; RTC MACROS
                      00005 ;;
                      00006 ;; Sebastian K, commit 110219-2205
                      00007 ;; forked off PIC16 sample code
                      00008 ;; for PIC18F4620
                      00009 ;; relocatable labels, declared in another file
                      00010 
Warning[205]: Found directive in column 1. (variable)
  0000                00011 variable _loopknt=0
                      00012 
                      00013 rtc_resetAll macro
                      00014 ;input: none
                      00015 ;output: none
                      00016 ;desc: Resets all the time keeping registers on the RTC to zero
                      00017 
                      00018 clrf databyte
                      00019 movlw 6
                      00020 movwf regaddress ;start at 6 and go down, and set all to 0
                      00021 
                      00022 del_loop#v(_loopknt)
                      00023 call write_rtc
                      00024 decfsz regaddress
                      00025 bra del_loop#v(_loopknt)
                      00026 call write_rtc ;sets registers 0-6 to zero
                      00027 _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00028 endm
                      00029 
                      00030 rtc_set macro addliteral,datliteral
                      00031 ;input: addliteral: value of address
                      00032 ; datliteral: value of data
                      00033 ;output: none
                      00034 ;desc: loads the data in datliteral into the
                      00035 ; address specified by addliteral in the RTC
                      00036 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037 movlw addliteral
                      00038 movwf regaddress
                      00039 movlw datliteral
                      00040 movwf databyte
Warning[205]: Found directive in column 1. (endm)
                      00041 endm
                      00042 
                      00043 rtc_read macro addliteral
                      00044 ;input: addliteral
                      00045 ;output: datachar, tens_digit, ones_digit
                      00046 ;desc: From the selected register in the RTC, read the data
                      00047 ; and load it into 0x75. 0x75 is also converted into
                      00048 ; ASCII characters and the tens digit is placed into
                      00049 ; 0x77 and the ones digit is placed in 0x78
                      00050 movlw addliteral
                      00051 movwf regaddress
                      00052 call read_rtc
                      00053 movf datachar,w
                      00054 call rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00055 endm
                      00018 #include <colour.inc>
  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, d200us_C, d50ms_C, data_colourH
                            , data_colourL
                      00002 
                      00003 
                      00004 ;    #define TCS34725_ADDRESS          (0x29)
                      00005 ;
                      00006 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00007 ;
                      00008 ;    #define TCS34725_ENABLE           (0x00)
                      00009 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00010 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00011 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00012 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00013 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00014 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00015 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00016 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00017 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00018 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00019 ;    #define TCS34725_AILTH            (0x05)
                      00020 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00021 ;    #define TCS34725_AIHTH            (0x07)
                      00022 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00023 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00024 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00025 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00028 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00039 ;    #define TCS34725_CONFIG           (0x0D)
                      00040 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00041 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00042 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00043 ;    #define TCS34725_STATUS           (0x13)
                      00044 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00045 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00046 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00047 ;    #define TCS34725_CDATAH           (0x15)
                      00048 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00049 ;    #define TCS34725_RDATAH           (0x17)
                      00050 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00051 ;    #define TCS34725_GDATAH           (0x19)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00052 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00053 ;    #define TCS34725_BDATAH           (0x1B)
                      00054 
                      00055 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00056     COLOUR_INIT macro
                      00057         COLOUR_WRITE    0xa1, 0x10 
                      00058         COLOUR_WRITE    0xad, 0x00 
                      00059         COLOUR_WRITE    0xaf, 0x00 
                      00060         COLOUR_WRITE    0xa0, 0x03 ; Enable
                      00061 
                      00062     endm
                      00063     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00064     COLOUR_READ  macro  address
                      00065         movlw   address
                      00066         movwf   regaddress
                      00067         call    READ_COLOUR_I2C
                      00068     endm
                      00069     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00070     COLOUR_WRITE macro address, datliteral
                      00071         movlw   address
                      00072         movwf   regaddress
                      00073         movlw   datliteral
                      00074         movwf   databyte
                      00075         call    WRITE_COLOUR_I2C
                      00076     endm
                      00077     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00078     COLOUR_GET_DATA macro clear, red, green, blue, temp_col
                      00079         COLOUR_READ 0x14                ; read clear colour
                      00080         
                      00081 ;       movlw   0x08
                      00082 ;       movwf   temp_col
                      00083 ;       movlw   data_colourH
                      00084 ;       ROTATE  temp_col
                      00085 ;       iorwf   data_colourL
                      00086         movwf   clear
                      00087         
                      00088         COLOUR_READ 0x16                ; read red colour
                      00089         
                      00090 ;       movlw   0x08
                      00091 ;       movwf   temp_col
                      00092 ;       movlw   data_colourH
                      00093 ;       ROTATE  temp_col
                      00094 ;       iorwf   data_colourL
                      00095         movwf   red
                      00096         
                      00097         COLOUR_READ 0x18                ; read green colour
                      00098 ;       
                      00099 ;       movlw   0x08
                      00100 ;       movwf   temp_col
                      00101 ;       movlw   data_colourH
                      00102 ;       ROTATE  temp_col
                      00103 ;       iorwf   data_colourL
                      00104         movwf   green
                      00105         
                      00106         COLOUR_READ 0x1a                ; read blue colour
                      00107 ;       
                      00108 ;       movlw   0x08
                      00109 ;       movwf   temp_col
                      00110 ;       movlw   data_colourH
                      00111 ;       ROTATE  temp_col
                      00112 ;       iorwf   data_colourL
                      00113         movwf   blue
                      00114 
                      00115     endm
                      00116     
Warning[207]: Found label after column 1. (ROTATE)
                      00117     ROTATE  macro count
                      00118         rlncf   WREG
                      00119         decfsz  count
                      00120         bra     ROTATE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00121     endm
                      00122     
                      00123 ;Delay200us macro
                      00124 ;       local loop200us
                      00125 ;       movlw   0xA4
                      00126 ;       movwf   d200us_C
                      00127 ;
                      00128 ;loop200us
                      00129 ;       decfsz  d200us
                      00130 ;       goto    loop200us
                      00131 ;       nop
                      00132 ;       endm
                      00133 ;       
                      00134 ;
                      00135 ;Delay50ms macro
                      00136 ;       local loop50ms
                      00137 ;       movlw   0xF9
                      00138 ;       movwf   d50ms_C
                      00139 ;
                      00140 ;loop50ms
                      00141 ;       Delay200us
                      00142 ;       decfsz  d50ms_C
                      00143 ;       endm
                      00144 ;;    
                      00145     
                      00019 
                      00020     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00021     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00022     CONFIG WDT = OFF, WDTPS = 32768
                      00023     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00024     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00025     CONFIG DEBUG = OFF
                      00026     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00027     CONFIG CPB = OFF, CPD = OFF
                      00028     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00029     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00030     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00031     CONFIG EBTRB = OFF
                      00032 
                      00033 ;*******************************************************************************
                      00034 ; variable and constants
                      00035 ;*******************************************************************************
                      00036     CODE
                      00037             
                      00038     cblock 0x00
  00000000            00039         key1
  00000001            00040         key2
  00000002            00041         key3
  00000003            00042         keyA
  00000004            00043         key4
  00000005            00044         key5
  00000006            00045         key6
  00000007            00046         keyB
  00000008            00047         key7
  00000009            00048         key8
  0000000A            00049         key9
  0000000B            00050         keyC
  0000000C            00051         keyS
  0000000D            00052         key0
  0000000E            00053         keyH
  0000000F            00054         keyD
  00000010            00055         KEY
  00000011            00056         temp_KEY
  00000012            00057         KEY_ISR
  00000013            00058         temp_S  
  00000014            00059         temp_W
  00000015            00060         counter
  00000016            00061         counter2
  00000017            00062         temp
  00000018            00063         OP_sec
  00000019            00064         OP_INT
  0000001A            00065         temp_ISR
  0000001B            00066         delayR
  0000001C            00067         d5us
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001D            00068         d200us
  0000001E            00069         d50ms
  0000001F            00070         inExecution
  00000020            00071         clear_EE
  00000021            00072         H_EE    
  00000022            00073         L_EE    
  00000023            00074         REG_EE  
  00000024            00075         tempH_EE
  00000025            00076         tempL_EE
  00000026            00077         tempL_EEC
  00000027            00078         MAX_EE   
  00000028            00079         READ_EE
  00000029            00080         last_log
  0000002A            00081         startHt
  0000002B            00082         startHo
  0000002C            00083         startMt
  0000002D            00084         startMo
  0000002E            00085         endHt
  0000002F            00086         endHo
  00000030            00087         endMt
  00000031            00088         endMo
  00000032            00089         LED_Count
  00000033            00090         SkipCount
  00000034            00091         exe_sec
  00000035            00092         exe_int
  00000036            00093         timer_H
  00000037            00094         timer_L
  00000038            00095         convert_buffer
  00000039            00096         transferring
  0000003A            00097         PC_PCL
  0000003B            00098         PC_PCLATH
  0000003C            00099         PC_PCLATU
  0000003D            00100         TIMCNT
  0000003E            00101         CPCNT
  0000003F            00102         TDATA
  00000040            00103         CLEAR
  00000041            00104         RED
  00000042            00105         GREEN
  00000043            00106         BLUE
                      00107     endc
                      00108     
                      00109 ;*******************************************************************************
                      00110 ; tables
                      00111 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00112     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00113     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00114     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00115     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00116     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00117     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00118     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00119     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00120     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00121     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00122     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00123     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00124     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00125     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00126     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00127     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00128     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00129     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00130     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00131     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00132         
                      00133 ;*******************************************************************************
                      00134 ; macros
                      00135 ;*******************************************************************************
                      00136 
                      00137 TransferTable macro table
                      00138         local loop
                      00139         
                      00140         movlw   upper table
                      00141         movwf   TBLPTRU
                      00142         movlw   high table
                      00143         movwf   TBLPTRH
                      00144         movlw   low table
                      00145         movwf   TBLPTRL
                      00146         tblrd*
                      00147         movf    TABLAT, W
                      00148 loop
                      00149         call    USART_WAIT
                      00150         tblrd+*
                      00151         movf    TABLAT, W
                      00152         bnz     loop
                      00153         endm
                      00154         
                      00155 ConfigLCD   macro
                      00156           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00157           call      WR_INS
                      00158 
                      00159           movlw     b'00001100'    ; display on/off
                      00160           call      WR_INS
                      00161          ; movlw     B'00000110'    ; Entry mode
                      00162          ; call      WR_INS
                      00163           movlw     b'00000001'    ; Clear ram
                      00164           call      WR_INS
                      00165           endm
                      00166         
                      00167 movMSB  macro   port
                      00168         andlw   0xF0
                      00169         iorwf   port, f
                      00170         iorlw   0x0F
                      00171         andwf   port, f
                      00172         endm
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00173 
                      00174 Delay50N macro count, N
                      00175         local   loop
                      00176         movlw   N
                      00177         movwf   count
                      00178 
                      00179 loop
                      00180         call    Delay50ms
                      00181         decfsz  count
                      00182         goto    loop
                      00183         endm
                      00184 
                      00185 Display macro   Message
                      00186         local   loop
                      00187         movlw   upper Message   ; Move Table<20:16>
                      00188         movwf   TBLPTRU
                      00189         movlw   high Message    ; Move Table<15:8>
                      00190         movwf   TBLPTRH
                      00191         movlw   low Message     ; Move Table<7:0>
                      00192         movwf   TBLPTRL
                      00193         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00194         movf    TABLAT, W
                      00195 loop
                      00196         call    WR_DATA         ; write to LCD
                      00197         tblrd+*                 ; next row in table
                      00198         movf    TABLAT, W
                      00199         bnz     loop
                      00200         endm
                      00201 
                      00202 DisplayLog  macro   addrH, addrL
                      00203             local   Again, Finish
                      00204             
                      00205             clrf    SkipCount
                      00206             clrf    MAX_EE
                      00207 
                      00208             ; Check if there is No Data first
                      00209             READEE      REG_EE, addrH, addrL
                      00210             movlw       0xFF
                      00211             cpfseq      REG_EE
                      00212             goto        Again
                      00213             Display     NoData
                      00214             goto        Finish
                      00215 Again
                      00216             ; Put a space every 3 Writes
                      00217             movlw       d'3'
                      00218             cpfslt      SkipCount
                      00219             cpfslt      MAX_EE
                      00220             goto        Finish
                      00221 
                      00222             ; read EEPROM
                      00223             READEE      REG_EE, addrH, addrL
                      00224             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00225             goto        Finish
                      00226 Finish
                      00227             endm
                      00228             
                      00229 ;TransferLog macro   addrH, addrL
                      00230         
                      00231 
                      00232 incf_BCD    macro   BCD
                      00233         local ones, endBCD
                      00234         movff   BCD, temp
                      00235         
                      00236         ;process ones digit
                      00237         movlw   0x0F
                      00238         andwf   temp
                      00239         movlw   d'9'
                      00240         
                      00241         ;skip if ones digit is 9
                      00242         cpfseq  temp
                      00243         goto    ones
                      00244         
                      00245         movlw   b'00010000'
                      00246         addwf   BCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00247         movlw   0x0F
                      00248         andwf   BCD
                      00249         movlw   0xA0
                      00250         cpfslt  BCD
                      00251         
                      00252         clrf    BCD
                      00253         goto    endBCD
                      00254         
                      00255 ones
                      00256         incf    BCD
                      00257         goto    endBCD
                      00258 endBCD
                      00259         nop
                      00260         endm
                      00261 
                      00262 WriteRTC    macro
                      00263         movf    tens_digit, W
                      00264         call    WR_DATA
                      00265         movf    ones_digit, W
                      00266         call    WR_DATA
                      00267         endm
                      00268 
                      00269 WriteEE macro   word, addH, addL
                      00270         movff   addH, EEADRH    ; High address
                      00271         movff   addL, EEADRH    ; Low address
                      00272         movff   word, EEDATA    ; set word
                      00273 
                      00274         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00275         bra     $-2
                      00276 
                      00277         bcf     EECON1, EEPGD   ; Point to data memory
                      00278         bcf     EECON1, CFGS    ; Access EEPROM
                      00279         bsf     EECON1, WREN    ; enable write
                      00280         bcf     EECON1, GIE         ; disable interrupts during write
                      00281         bcf     PIR2, EEIF
                      00282 
                      00283         movlw   0x55
                      00284         movwf   EECON2      ; write 55h
                      00285         movlw   0xAA
                      00286         movwf   EECON2      ; write 0xAA
                      00287         bsf     EECON1, WR          ; begin write
                      00288         btfsc   EECON1, WR
                      00289         bra     $-2
                      00290 
                      00291         bsf     EECON1, GIE         ; enable interrupts after write
                      00292         bcf     EECON1, WREN        ; disable writes
                      00293         endm
                      00294 
                      00295 READEE  macro   file, addH, addL
                      00296         movff   addH, EEADRH        ; read to high
                      00297         movff   addL, EEADR         ; read to low
                      00298         bcf     EECON1, EEPGD       ; point to data memory
                      00299         bcf     EECON1, CFGS        ; access to EEPROM
                      00300         bsf     EECON1, RD          ; read EEPROM
                      00301         movff   EEDATA, file        ; put data into file
                      00302         endm
                      00303 
                      00304 ChangeMode  macro   ModeId, NextMode
                      00305         local Next, Exit
                      00306 
                      00307         movlw   ModeId              ; poll for mode
                      00308         cpfseq  KEY                 ; check this against key press
                      00309         goto    Exit
                      00310 
                      00311 Next
                      00312         clrf    LATA                ; clear pins before proceeding
                      00313         clrf    LATB
                      00314         clrf    LATC
                      00315         clrf    LATD
                      00316         goto    NextMode
                      00317 
                      00318 Exit
                      00319         nop
                      00320         endm
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00321 
                      00322 saveContext macro
                      00323     movff   STATUS, temp_S          ; save STATUS first
                      00324     movwf   temp_W                  ; save W
                      00325     endm
                      00326 
                      00327 restoreContext macro
                      00328     swapf   temp_W, W               ; restore W first
                      00329     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00330     endm
                      00331 ;*******************************************************************************
                      00332 ; reset vector and isrs
                      00333 ;*******************************************************************************
                      00334         ORG     0x000               ; processor reset vector
000000 EF?? F???      00335         goto    INIT                ; go to beginning of program
                      00336 
                      00337         ORG     0x008
000008 EF?? F???      00338         goto    ISR_HIGH
                      00339 
                      00340         ORG     0x018
000018 EF?? F???      00341         goto    ISR_LOW
                      00342 
00001C                00343 ISR_HIGH
                      00344         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00345 
                      00346         ;reset timer
000022 0E0B           00347         movlw   0xb
000024 6ED7           00348         movwf   TMR0H
000026 0EDC           00349         movlw   0xdc
000028 6ED6           00350         movwf   TMR0L
                      00351         
                      00352         ;call   DISPLAY_RTC
                      00353         
                      00354         ;timer interrupt
00002A A4F2           00355         btfss   INTCON, TMR0IF
00002C EF?? F???      00356         goto    END_ISR_HIGH
                      00357         
                      00358         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0F
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0E0F               M         movlw   0x0F
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xA0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00359         movlw   d'0'
00005C 6219           00360         cpfseq  OP_INT
00005E EF?? F???      00361         goto    END_ISR_HIGH
                      00362         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;process ones digit
000066 0E0F               M         movlw   0x0F
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0E0F               M         movlw   0x0F
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xA0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00363 
00008C                00364 END_ISR_HIGH
00008C 94F2           00365         bcf     INTCON, TMR0IF
                      00366         restoreContext
00008E 3814               M     swapf   temp_W, W               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00367         retfie
                      00368 
000096                00369 ISR_LOW
                      00370         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00371         ; KEYPAD INTERRUPT
00009C A0F0           00372         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00373         goto            END_ISR_LOW
                      00374 
                      00375         ;Check operation status
                      00376 ;       movlw           0xFF                                    ; If in operation, skip return
                      00377 ;       cpfseq          InExecution
                      00378 ;       goto            END_ISR_LOW
                      00379 
                      00380         ; Process KEY
0000A2 3881           00381         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00382         andlw           0x0F
0000A6 6E12           00383         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00384 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00385 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00386         goto            END_ISR_LOW
                      00387 
                      00388         ; Reset program counter
0000AC 6AFF           00389         clrf            TOSU
0000AE 6AFE           00390         clrf            TOSH
0000B0 6AFD           00391         clrf            TOSL
                      00392 
0000B2                00393 END_ISR_LOW
0000B2 90F0           00394         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00395         restoreContext
0000B4 3814               M     swapf   temp_W, W               ; restore W first
0000B6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00396         
0000BA 6E14           00397         movwf   temp_W              ; save current W
0000BC CFD8 F013      00398         movff   STATUS, temp_S      ; save status
                      00399 
                      00400         ; ISR_Low routines
0000C0 C013 FFD8      00401         movff   temp_S, STATUS      ; retreive status
0000C4 3A14           00402         swapf   temp_W, f
0000C6 3814           00403         swapf   temp_W, w           ; restore W
0000C8 0010           00404         retfie
                      00405 
                      00406 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00407 ; main
                      00408 ;*******************************************************************************
0000CA                00409 INIT
                      00410         ; i/o
0000CA 0EFF           00411         movlw   b'11111111'
0000CC 6E92           00412         movwf   TRISA
0000CE 0EFF           00413         movlw   b'11111111'
0000D0 6E93           00414         movwf   TRISB               ; keypad
0000D2 0E00           00415         movlw   b'00000000'
0000D4 6E94           00416         movwf   TRISC
0000D6 0E00           00417         movlw   b'00000000'
0000D8 6E95           00418         movwf   TRISD
0000DA 0E07           00419         movlw   b'00000111'
0000DC 6E96           00420         movwf   TRISE
                      00421 
                      00422         ; analog/digital pins
0000DE 0E0F           00423         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00424         movwf   ADCON1
                      00425 
                      00426         ; clear ports
0000E2 6A89           00427         clrf    LATA
0000E4 6A8A           00428         clrf    LATB
                      00429 ;       bcf     TRISC, SCL
                      00430 ;       bcf     TRISC, SDA
0000E6 6A8B           00431         clrf    LATC
0000E8 6A8C           00432         clrf    LATD
0000EA 6A8D           00433         clrf    LATE
                      00434         
0000EC 0E00           00435         movlw   b'00000000'
0000EE 6EC2           00436         movwf   ADCON0
0000F0 0EFF           00437         movlw   b'11111111'
0000F2 6EC1           00438         movwf   ADCON1
                      00439         
                      00440         ; initializations
                      00441         
0000F4 EC?? F???      00442         call    InitLCD
                      00443         ConfigLCD
0000F8 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
0000FA EC?? F???          M           call      WR_INS
                          M 
0000FE 0E0C               M           movlw     b'00001100'    ; display on/off
000100 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000104 0E01               M           movlw     b'00000001'    ; Clear ram
000106 EC?? F???          M           call      WR_INS
                      00444         
00010A EC?? F???      00445         call    RTC_INIT
00010E EC?? F???      00446         call    Delay50ms
                      00447         
                      00448         COLOUR_INIT
                          M         COLOUR_WRITE    0xa1, 0x10 
000112 0EA1               M         movlw   0xa1
000114 6E??               M         movwf   regaddress
000116 0E10               M         movlw   0x10
000118 6E??               M         movwf   databyte
00011A EC?? F???          M         call    WRITE_COLOUR_I2C
                          M         COLOUR_WRITE    0xad, 0x00 
00011E 0EAD               M         movlw   0xad
000120 6E??               M         movwf   regaddress
000122 0E00               M         movlw   0x00
000124 6E??               M         movwf   databyte
000126 EC?? F???          M         call    WRITE_COLOUR_I2C
                          M         COLOUR_WRITE    0xaf, 0x00 
00012A 0EAF               M         movlw   0xaf
00012C 6E??               M         movwf   regaddress
00012E 0E00               M         movlw   0x00
000130 6E??               M         movwf   databyte
000132 EC?? F???          M         call    WRITE_COLOUR_I2C
                          M         COLOUR_WRITE    0xa0, 0x03 ; Enable
000136 0EA0               M         movlw   0xa0
000138 6E??               M         movwf   regaddress
00013A 0E03               M         movlw   0x03
00013C 6E??               M         movwf   databyte
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00013E EC?? F???          M         call    WRITE_COLOUR_I2C
                          M 
000142 EC?? F???      00449         call    INIT_USART
                      00450 
                      00451         ; interrupts
000146 6AD0           00452         clrf    RCON
000148 6AF2           00453         clrf    INTCON
00014A 6AF1           00454         clrf    INTCON2
00014C 6AF0           00455         clrf    INTCON3
00014E 8ED0           00456         bsf     RCON, IPEN          ; priority mode
000150 8EF2           00457         bsf     INTCON, GIEH        ; permit global interrupts
000152 8CF2           00458         bsf     INTCON, GIEL
000154 8AF1           00459         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000156 8AF2           00460         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000158 84F2           00461         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00015A 84F1           00462         bsf     INTCON2, TMR0IP     ; set to high priority
00015C 86F0           00463         bsf     INTCON3, INT1IE
00015E 9CF0           00464         bcf     INTCON3, INT1IP
                      00465         
                      00466         ; setting up timer to sychronize with 1 second clock intervals
000160 9CD5           00467         bcf     T0CON, T08BIT
000162 9AD5           00468         bcf     T0CON, T0CS
000164 96D5           00469         bcf     T0CON, PSA
000166 84D5           00470         bsf     T0CON, T0PS2
000168 92D5           00471         bcf     T0CON, T0PS1
00016A 90D5           00472         bcf     T0CON, T0PS0
                      00473 
00016C 6A21           00474         clrf    H_EE
00016E 6A22           00475         clrf    L_EE
000170 6A??           00476         clrf    tens_digit
000172 6A??           00477         clrf    ones_digit
000174 6A40           00478         clrf    CLEAR
000176 6A42           00479         clrf    GREEN
000178 6A41           00480         clrf    RED
00017A 6A43           00481         clrf    BLUE
                      00482         
00017C 0EF2           00483         movlw     b'11110010'    ; Set required keypad inputs
00017E 6E93           00484         movwf     TRISB
                      00485         
                      00486         Display Welcome
  0000                    M         local   loop
000180 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
000182 6EF8               M         movwf   TBLPTRU
000184 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000186 6EF7               M         movwf   TBLPTRH
000188 0E??               M         movlw   low Welcome     ; Move Table<7:0>
00018A 6EF6               M         movwf   TBLPTRL
00018C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00018E 50F5               M         movf    TABLAT, W
000190                    M loop
000190 EC?? F???          M         call    WR_DATA         ; write to LCD
000194 000B               M         tblrd+*                 ; next row in table
000196 50F5               M         movf    TABLAT, W
000198 E1??               M         bnz     loop
00019A EC?? F???      00487         call LCD_L2
                      00488         Display Team
  0000                    M         local   loop
00019E 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001A0 6EF8               M         movwf   TBLPTRU
0001A2 0E??               M         movlw   high Team       ; Move Table<15:8>
0001A4 6EF7               M         movwf   TBLPTRH
0001A6 0E??               M         movlw   low Team        ; Move Table<7:0>
0001A8 6EF6               M         movwf   TBLPTRL
0001AA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001AC 50F5               M         movf    TABLAT, W
0001AE                    M loop
0001AE EC?? F???          M         call    WR_DATA         ; write to LCD
0001B2 000B               M         tblrd+*                 ; next row in table
0001B4 50F5               M         movf    TABLAT, W
0001B6 E1??               M         bnz     loop
                      00489         Delay50N delayR, 0x14
  0000                    M         local   loop
0001B8 0E14               M         movlw   0x14
0001BA 6E1B               M         movwf   delayR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0001BC                    M loop
0001BC EC?? F???          M         call    Delay50ms
0001C0 2E1B               M         decfsz  delayR
0001C2 EF?? F???          M         goto    loop
                      00490 
                      00491 ;*******************************************************************************
                      00492 ; standby mode
                      00493 ;*******************************************************************************
0001C6                00494 STANDBY
0001C6 EC?? F???      00495         call    ClrLCD
                      00496         Display StandBy
  0000                    M         local   loop
0001CA 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001CC 6EF8               M         movwf   TBLPTRU
0001CE 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001D0 6EF7               M         movwf   TBLPTRH
0001D2 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001D4 6EF6               M         movwf   TBLPTRL
0001D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D8 50F5               M         movf    TABLAT, W
0001DA                    M loop
0001DA EC?? F???          M         call    WR_DATA         ; write to LCD
0001DE 000B               M         tblrd+*                 ; next row in table
0001E0 50F5               M         movf    TABLAT, W
0001E2 E1??               M         bnz     loop
                      00497 
0001E4                00498 HOLD_STANDBY
0001E4 EC?? F???      00499         call    READ_KEY_TIME
                      00500         ChangeMode key5, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
0001E8 0E05               M         movlw   key5                ; poll for mode
0001EA 6210               M         cpfseq  KEY                 ; check this against key press
0001EC EF?? F???          M         goto    Exit
                          M 
0001F0                    M Next
0001F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0001F2 6A8A               M         clrf    LATB
0001F4 6A8B               M         clrf    LATC
0001F6 6A8C               M         clrf    LATD
0001F8 EF?? F???          M         goto    COLOUR_TEST
                          M 
0001FC                    M Exit
0001FC 0000               M         nop
                      00501         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0001FE 0E03               M         movlw   keyA                ; poll for mode
000200 6210               M         cpfseq  KEY                 ; check this against key press
000202 EF?? F???          M         goto    Exit
                          M 
000206                    M Next
000206 6A89               M         clrf    LATA                ; clear pins before proceeding
000208 6A8A               M         clrf    LATB
00020A 6A8B               M         clrf    LATC
00020C 6A8C               M         clrf    LATD
00020E EF?? F???          M         goto    EXECUTION
                          M 
000212                    M Exit
000212 0000               M         nop
                      00502         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
000214 0E07               M         movlw   keyB                ; poll for mode
000216 6210               M         cpfseq  KEY                 ; check this against key press
000218 EF?? F???          M         goto    Exit
                          M 
00021C                    M Next
00021C 6A89               M         clrf    LATA                ; clear pins before proceeding
00021E 6A8A               M         clrf    LATB
000220 6A8B               M         clrf    LATC
000222 6A8C               M         clrf    LATD
000224 EF?? F???          M         goto    LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000228                    M Exit
000228 0000               M         nop
                      00503         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
00022A 0E0B               M         movlw   keyC                ; poll for mode
00022C 6210               M         cpfseq  KEY                 ; check this against key press
00022E EF?? F???          M         goto    Exit
                          M 
000232                    M Next
000232 6A89               M         clrf    LATA                ; clear pins before proceeding
000234 6A8A               M         clrf    LATB
000236 6A8B               M         clrf    LATC
000238 6A8C               M         clrf    LATD
00023A EF?? F???          M         goto    PERM_LOG
                          M 
00023E                    M Exit
00023E 0000               M         nop
                      00504         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000240 0E0F               M         movlw   keyD                ; poll for mode
000242 6210               M         cpfseq  KEY                 ; check this against key press
000244 EF?? F???          M         goto    Exit
                          M 
000248                    M Next
000248 6A89               M         clrf    LATA                ; clear pins before proceeding
00024A 6A8A               M         clrf    LATB
00024C 6A8B               M         clrf    LATC
00024E 6A8C               M         clrf    LATD
000250 EF?? F???          M         goto    PC_MODE
                          M 
000254                    M Exit
000254 0000               M         nop
000256 D???           00505         bra     HOLD_STANDBY
                      00506 
                      00507 ;*******************************************************************************
                      00508 ; execution mode
                      00509 ;*******************************************************************************
                      00510         
000258                00511 COLOUR_TEST
000258 EC?? F???      00512         call    ClrLCD
00025C 6A40           00513         clrf    CLEAR
00025E D???           00514         bra LOOPIN
000260                00515 CLEAR_DISP
000260 EC?? F???      00516         call    ClrLCD
000264 0E63           00517         movlw   'c'
000266 EC?? F???      00518         call    WR_DATA
                      00519         Delay50N delayR, 0x03
  0000                    M         local   loop
00026A 0E03               M         movlw   0x03
00026C 6E1B               M         movwf   delayR
                          M 
00026E                    M loop
00026E EC?? F???          M         call    Delay50ms
000272 2E1B               M         decfsz  delayR
000274 EF?? F???          M         goto    loop
000278 D???           00520         bra LOOPIN
                      00521 
00027A                00522 RED_DISP
00027A EC?? F???      00523         call    ClrLCD
00027E 0E72           00524         movlw   'r'
000280 EC?? F???      00525         call    WR_DATA
                      00526         Delay50N delayR, 0x03
  0000                    M         local   loop
000284 0E03               M         movlw   0x03
000286 6E1B               M         movwf   delayR
                          M 
000288                    M loop
000288 EC?? F???          M         call    Delay50ms
00028C 2E1B               M         decfsz  delayR
00028E EF?? F???          M         goto    loop
                      00527 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000292                00528 LOOPIN
                      00529         COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE, temp
                          M         COLOUR_READ 0x14                ; read clear colour
000292 0E14               M         movlw   0x14
000294 6E??               M         movwf   regaddress
000296 EC?? F???          M         call    READ_COLOUR_I2C
                          M         
                          M ;       movlw   0x08
                          M ;       movwf   temp_col
                          M ;       movlw   data_colourH
                          M ;       ROTATE  temp_col
                          M ;       iorwf   data_colourL
00029A 6E40               M         movwf   CLEAR
                          M         
                          M         COLOUR_READ 0x16                ; read red colour
00029C 0E16               M         movlw   0x16
00029E 6E??               M         movwf   regaddress
0002A0 EC?? F???          M         call    READ_COLOUR_I2C
                          M         
                          M ;       movlw   0x08
                          M ;       movwf   temp_col
                          M ;       movlw   data_colourH
                          M ;       ROTATE  temp_col
                          M ;       iorwf   data_colourL
0002A4 6E41               M         movwf   RED
                          M         
                          M         COLOUR_READ 0x18                ; read green colour
0002A6 0E18               M         movlw   0x18
0002A8 6E??               M         movwf   regaddress
0002AA EC?? F???          M         call    READ_COLOUR_I2C
                          M ;       
                          M ;       movlw   0x08
                          M ;       movwf   temp_col
                          M ;       movlw   data_colourH
                          M ;       ROTATE  temp_col
                          M ;       iorwf   data_colourL
0002AE 6E42               M         movwf   GREEN
                          M         
                          M         COLOUR_READ 0x1a                ; read blue colour
0002B0 0E1A               M         movlw   0x1a
0002B2 6E??               M         movwf   regaddress
0002B4 EC?? F???          M         call    READ_COLOUR_I2C
                          M ;       
                          M ;       movlw   0x08
                          M ;       movwf   temp_col
                          M ;       movlw   data_colourH
                          M ;       ROTATE  temp_col
                          M ;       iorwf   data_colourL
0002B8 6E43               M         movwf   BLUE
                          M 
                      00530         Delay50N delayR, 0x03
  0000                    M         local   loop
0002BA 0E03               M         movlw   0x03
0002BC 6E1B               M         movwf   delayR
                          M 
0002BE                    M loop
0002BE EC?? F???          M         call    Delay50ms
0002C2 2E1B               M         decfsz  delayR
0002C4 EF?? F???          M         goto    loop
                      00531         
0002C8 0E40           00532         movlw   CLEAR
0002CA 6442           00533         cpfsgt  GREEN
0002CC D???           00534         bra     CLEAR_DISP
0002CE D???           00535         bra     RED_DISP
0002D0 D???           00536         bra     LOOPIN
                      00537         
0002D2                00538 EXECUTION
                      00539         ; save the starting time
0002D2 EC?? F???      00540         call        SAVE_TIME
                      00541                 
                      00542         ; display
0002D6 681F           00543         setf        inExecution
0002D8 EC?? F???      00544         call        ClrLCD
                      00545         Display     Exe1
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
0002DC 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0002DE 6EF8               M         movwf   TBLPTRU
0002E0 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0002E2 6EF7               M         movwf   TBLPTRH
0002E4 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0002E6 6EF6               M         movwf   TBLPTRL
0002E8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002EA 50F5               M         movf    TABLAT, W
0002EC                    M loop
0002EC EC?? F???          M         call    WR_DATA         ; write to LCD
0002F0 000B               M         tblrd+*                 ; next row in table
0002F2 50F5               M         movf    TABLAT, W
0002F4 E1??               M         bnz     loop
0002F6 EC?? F???      00546         call        LCD_L2
                      00547         Display     Exe2
  0000                    M         local   loop
0002FA 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
0002FC 6EF8               M         movwf   TBLPTRU
0002FE 0E??               M         movlw   high Exe2       ; Move Table<15:8>
000300 6EF7               M         movwf   TBLPTRH
000302 0E??               M         movlw   low Exe2        ; Move Table<7:0>
000304 6EF6               M         movwf   TBLPTRL
000306 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000308 50F5               M         movf    TABLAT, W
00030A                    M loop
00030A EC?? F???          M         call    WR_DATA         ; write to LCD
00030E 000B               M         tblrd+*                 ; next row in table
000310 50F5               M         movf    TABLAT, W
000312 E1??               M         bnz     loop
                      00548         
                      00549         ; start timer
                      00550         
000314 0E0B           00551         movlw   0xb
000316 6ED7           00552         movwf   TMR0H
000318 0EDC           00553         movlw   0xdc
00031A 6ED6           00554         movwf   TMR0L
                      00555         
00031C 8ED5           00556         bsf         T0CON, TMR0ON                       ; Turn on timer
00031E EC?? F???      00557         call        ClearEEPROM_21
                      00558         
                      00559         ; initialize variables
000322 6A18           00560         clrf        OP_sec
000324 6A19           00561         clrf        OP_INT
                      00562 
000326                00563 HOLD_EXE
000326 EC?? F???      00564         call        READ_KEY
                      00565         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
00032A 0E0C               M         movlw   keyS                ; poll for mode
00032C 6210               M         cpfseq  KEY                 ; check this against key press
00032E EF?? F???          M         goto    Exit
                          M 
000332                    M Next
000332 6A89               M         clrf    LATA                ; clear pins before proceeding
000334 6A8A               M         clrf    LATB
000336 6A8B               M         clrf    LATC
000338 6A8C               M         clrf    LATD
00033A EF?? F???          M         goto    EXIT_EXE
                          M 
00033E                    M Exit
00033E 0000               M         nop
000340 D???           00566         bra         HOLD_EXE
                      00567         
000342                00568 EXIT_EXE
                      00569         WriteEE     OP_sec, H_EE, L_EE
000342 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000346 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00034A C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
00034E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000350 D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000352 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000354 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000356 84A6               M         bsf     EECON1, WREN    ; enable write
000358 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00035A 98A1               M         bcf     PIR2, EEIF
                          M 
00035C 0E55               M         movlw   0x55
00035E 6EA7               M         movwf   EECON2      ; write 55h
000360 0EAA               M         movlw   0xAA
000362 6EA7               M         movwf   EECON2      ; write 0xAA
000364 82A6               M         bsf     EECON1, WR          ; begin write
000366 B2A6               M         btfsc   EECON1, WR
000368 D???               M         bra     $-2
                          M 
00036A 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00036C 94A6               M         bcf     EECON1, WREN        ; disable writes
00036E 2A22           00570         incf        L_EE
                      00571         WriteEE     OP_INT, H_EE, L_EE
000370 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000374 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000378 C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
00037C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00037E D???               M         bra     $-2
                          M 
000380 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000382 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000384 84A6               M         bsf     EECON1, WREN    ; enable write
000386 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000388 98A1               M         bcf     PIR2, EEIF
                          M 
00038A 0E55               M         movlw   0x55
00038C 6EA7               M         movwf   EECON2      ; write 55h
00038E 0EAA               M         movlw   0xAA
000390 6EA7               M         movwf   EECON2      ; write 0xAA
000392 82A6               M         bsf     EECON1, WR          ; begin write
000394 B2A6               M         btfsc   EECON1, WR
000396 D???               M         bra     $-2
                          M 
000398 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00039A 94A6               M         bcf     EECON1, WREN        ; disable writes
00039C 2A22           00572         incf        L_EE
                      00573         
00039E EC?? F???      00574         call        SAVE_TIME
                      00575         
                      00576         ; Clear inExecution flag to stop '*' interrupts
0003A2 6A1F           00577         clrf        inExecution
0003A4 EF?? F???      00578         goto        SaveData
                      00579 
0003A8                00580 SaveData
0003A8 EC?? F???      00581         call        ClrLCD
                      00582         Display     SAVE
  0000                    M         local   loop
0003AC 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0003AE 6EF8               M         movwf   TBLPTRU
0003B0 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0003B2 6EF7               M         movwf   TBLPTRH
0003B4 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0003B6 6EF6               M         movwf   TBLPTRL
0003B8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003BA 50F5               M         movf    TABLAT, W
0003BC                    M loop
0003BC EC?? F???          M         call    WR_DATA         ; write to LCD
0003C0 000B               M         tblrd+*                 ; next row in table
0003C2 50F5               M         movf    TABLAT, W
0003C4 E1??               M         bnz     loop
                      00583 
0003C6 0E00           00584         movlw       d'0'
0003C8 6E21           00585         movwf       H_EE
0003CA 0EA8           00586         movlw       d'168'              ; take d'168' as last
0003CC 6E22           00587         movwf       L_EE
0003CE 0E00           00588         movlw       d'0'
0003D0 6E24           00589         movwf       tempH_EE
0003D2 0EDC           00590         movlw       d'220'              ; temp for low constant
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003D4 6E25           00591         movwf       tempL_EE
                      00592         
0003D6 6A16           00593         clrf        counter2
0003D8 6A15           00594         clrf        counter
                      00595 
0003DA                00596 ShiftLoop
0003DA 2A15           00597         incf            counter
                      00598         READEE          REG_EE, H_EE, L_EE
0003DC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0003E0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0003E4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0003E6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0003E8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0003EA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0003EE 0E15           00599         movlw           d'21'
0003F0 2622           00600         addwf           L_EE
                      00601         WriteEE         REG_EE, H_EE, L_EE
0003F2 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0003F6 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0003FA C023 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
0003FE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000400 D???               M         bra     $-2
                          M 
000402 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000404 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000406 84A6               M         bsf     EECON1, WREN    ; enable write
000408 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00040A 98A1               M         bcf     PIR2, EEIF
                          M 
00040C 0E55               M         movlw   0x55
00040E 6EA7               M         movwf   EECON2      ; write 55h
000410 0EAA               M         movlw   0xAA
000412 6EA7               M         movwf   EECON2      ; write 0xAA
000414 82A6               M         bsf     EECON1, WR          ; begin write
000416 B2A6               M         btfsc   EECON1, WR
000418 D???               M         bra     $-2
                          M 
00041A 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00041C 94A6               M         bcf     EECON1, WREN        ; disable writes
00041E 0E14           00602         movlw           d'20'
000420 5E22           00603         subwf           L_EE
000422 0E15           00604         movlw           d'21'
000424 6215           00605         cpfseq          counter
000426 EF?? F???      00606         goto            ShiftLoop
                      00607         
                      00608         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
00042A 0E2A           00609         movlw           d'42'
00042C 5E22           00610         subwf           L_EE
00042E 0EDC           00611         movlw           d'220'
000430 6E25           00612         movwf           tempL_EE
000432 6A15           00613         clrf            counter
000434 2A16           00614         incf            counter2
000436 0E09           00615         movlw           d'9'
000438 6216           00616         cpfseq          counter2        ; Skip if 9 shifts were made
00043A EF?? F???      00617         goto            ShiftLoop
                      00618         
                      00619         ; Finish Saving Data
                      00620         ; Stop Timer and goto logs
00043E 9ED5           00621         bcf             T0CON, TMR0ON
000440 0E09           00622         movlw           d'9'
000442 6E22           00623         movwf           L_EE
                      00624         WriteEE         OP_sec, H_EE, L_EE
000444 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000448 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00044C C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000450 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000452 D???               M         bra     $-2
                          M 
000454 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000456 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000458 84A6               M         bsf     EECON1, WREN    ; enable write
00045A 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00045C 98A1               M         bcf     PIR2, EEIF
                          M 
00045E 0E55               M         movlw   0x55
000460 6EA7               M         movwf   EECON2      ; write 55h
000462 0EAA               M         movlw   0xAA
000464 6EA7               M         movwf   EECON2      ; write 0xAA
000466 82A6               M         bsf     EECON1, WR          ; begin write
000468 B2A6               M         btfsc   EECON1, WR
00046A D???               M         bra     $-2
                          M 
00046C 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00046E 94A6               M         bcf     EECON1, WREN        ; disable writes
000470 2A22           00625         incf            L_EE
                      00626         WriteEE         OP_INT, H_EE, L_EE
000472 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000476 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00047A C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
00047E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000480 D???               M         bra     $-2
                          M 
000482 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000484 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000486 84A6               M         bsf     EECON1, WREN    ; enable write
000488 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00048A 98A1               M         bcf     PIR2, EEIF
                          M 
00048C 0E55               M         movlw   0x55
00048E 6EA7               M         movwf   EECON2      ; write 55h
000490 0EAA               M         movlw   0xAA
000492 6EA7               M         movwf   EECON2      ; write 0xAA
000494 82A6               M         bsf     EECON1, WR          ; begin write
000496 B2A6               M         btfsc   EECON1, WR
000498 D???               M         bra     $-2
                          M 
00049A 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
00049C 94A6               M         bcf     EECON1, WREN        ; disable writes
00049E 2A22           00627         incf            L_EE
0004A0 EF?? F???      00628         goto            LOG
                      00629 
                      00630 ;*******************************************************************************
                      00631 ; sorting statistics log mode
                      00632 ;*******************************************************************************
                      00633         
0004A4                00634 LOG
0004A4 EC?? F???      00635         call    ClrLCD
                      00636         Display Log1
  0000                    M         local   loop
0004A8 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0004AA 6EF8               M         movwf   TBLPTRU
0004AC 0E??               M         movlw   high Log1       ; Move Table<15:8>
0004AE 6EF7               M         movwf   TBLPTRH
0004B0 0E??               M         movlw   low Log1        ; Move Table<7:0>
0004B2 6EF6               M         movwf   TBLPTRL
0004B4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004B6 50F5               M         movf    TABLAT, W
0004B8                    M loop
0004B8 EC?? F???          M         call    WR_DATA         ; write to LCD
0004BC 000B               M         tblrd+*                 ; next row in table
0004BE 50F5               M         movf    TABLAT, W
0004C0 E1??               M         bnz     loop
                      00637 
                      00638         ; display most recent run data
0004C2 0E09           00639         movlw   d'9'
0004C4 6E22           00640         movwf   L_EE
                      00641         READEE  OP_sec, H_EE, L_EE
0004C6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004CA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0004CE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004D0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004D2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004D4 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0004D8 2A22           00642         incf    L_EE
                      00643         READEE  OP_INT, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004DA C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004DE C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0004E2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004E4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004E6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0004E8 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0004EC 2A22           00644         incf    L_EE
0004EE EC?? F???      00645         call    DisplayTime
                      00646 
0004F2 EC?? F???      00647         call    LCD_L2
0004F6 6A22           00648         clrf    L_EE
0004F8 EC?? F???      00649         call    DispOpRTC
                      00650 
0004FC                00651 HOLD_LOG
0004FC EC?? F???      00652         call    READ_KEY
                      00653         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000500 0E07               M         movlw   keyB                ; poll for mode
000502 6210               M         cpfseq  KEY                 ; check this against key press
000504 EF?? F???          M         goto    Exit
                          M 
000508                    M Next
000508 6A89               M         clrf    LATA                ; clear pins before proceeding
00050A 6A8A               M         clrf    LATB
00050C 6A8B               M         clrf    LATC
00050E 6A8C               M         clrf    LATD
000510 EF?? F???          M         goto    LOG_INFO
                          M 
000514                    M Exit
000514 0000               M         nop
                      00654         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000516 0E0D               M         movlw   key0                ; poll for mode
000518 6210               M         cpfseq  KEY                 ; check this against key press
00051A EF?? F???          M         goto    Exit
                          M 
00051E                    M Next
00051E 6A89               M         clrf    LATA                ; clear pins before proceeding
000520 6A8A               M         clrf    LATB
000522 6A8B               M         clrf    LATC
000524 6A8C               M         clrf    LATD
000526 EF?? F???          M         goto    STANDBY
                          M 
00052A                    M Exit
00052A 0000               M         nop
00052C D???           00655         bra     HOLD_LOG
                      00656 
00052E                00657 LOG_INFO
00052E EC?? F???      00658         call    ClrLCD
                      00659         Display LogInfo1
  0000                    M         local   loop
000532 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
000534 6EF8               M         movwf   TBLPTRU
000536 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000538 6EF7               M         movwf   TBLPTRH
00053A 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
00053C 6EF6               M         movwf   TBLPTRL
00053E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000540 50F5               M         movf    TABLAT, W
000542                    M loop
000542 EC?? F???          M         call    WR_DATA         ; write to LCD
000546 000B               M         tblrd+*                 ; next row in table
000548 50F5               M         movf    TABLAT, W
00054A E1??               M         bnz     loop
00054C EC?? F???      00660         call    LCD_L2
                      00661         Display LogInfo2
  0000                    M         local   loop
000550 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000552 6EF8               M         movwf   TBLPTRU
000554 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000556 6EF7               M         movwf   TBLPTRH
000558 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00055A 6EF6               M         movwf   TBLPTRL
00055C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00055E 50F5               M         movf    TABLAT, W
000560                    M loop
000560 EC?? F???          M         call    WR_DATA         ; write to LCD
000564 000B               M         tblrd+*                 ; next row in table
000566 50F5               M         movf    TABLAT, W
000568 E1??               M         bnz     loop
00056A 6A21           00662         clrf    H_EE
00056C 6A22           00663         clrf    L_EE
                      00664         DisplayLog  H_EE, L_EE
  0000                    M             local   Again, Finish
                          M             
00056E 6A33               M             clrf    SkipCount
000570 6A27               M             clrf    MAX_EE
                          M 
                          M             ; Check if there is No Data first
                          M             READEE      REG_EE, H_EE,  L_EE
000572 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000576 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00057A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00057C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00057E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000580 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000584 0EFF               M             movlw       0xFF
000586 6223               M             cpfseq      REG_EE
000588 EF?? F???          M             goto        Again
                          M             Display     NoData
  0000                    M         local   loop
00058C 0E??               M         movlw   upper NoData    ; Move Table<20:16>
00058E 6EF8               M         movwf   TBLPTRU
000590 0E??               M         movlw   high NoData     ; Move Table<15:8>
000592 6EF7               M         movwf   TBLPTRH
000594 0E??               M         movlw   low NoData      ; Move Table<7:0>
000596 6EF6               M         movwf   TBLPTRL
000598 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00059A 50F5               M         movf    TABLAT, W
00059C                    M loop
00059C EC?? F???          M         call    WR_DATA         ; write to LCD
0005A0 000B               M         tblrd+*                 ; next row in table
0005A2 50F5               M         movf    TABLAT, W
0005A4 E1??               M         bnz     loop
0005A6 EF?? F???          M             goto        Finish
0005AA                    M Again
                          M             ; Put a space every 3 Writes
0005AA 0E03               M             movlw       d'3'
0005AC 6033               M             cpfslt      SkipCount
0005AE 6027               M             cpfslt      MAX_EE
0005B0 EF?? F???          M             goto        Finish
                          M 
                          M             ; read EEPROM
                          M             READEE      REG_EE, H_EE,  L_EE
0005B4 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005B8 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005BC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005BE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005C0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005C2 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0005C6 BE23               M             btfsc       REG_EE, 7       ; if bit 7 set then done
0005C8 EF?? F???          M             goto        Finish
0005CC                    M Finish
0005CC                00665 HOLD_LOG_INFO
0005CC EC?? F???      00666         call    READ_KEY
                      00667         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0005D0 0E0D               M         movlw   key0                ; poll for mode
0005D2 6210               M         cpfseq  KEY                 ; check this against key press
0005D4 EF?? F???          M         goto    Exit
                          M 
0005D8                    M Next
0005D8 6A89               M         clrf    LATA                ; clear pins before proceeding
0005DA 6A8A               M         clrf    LATB
0005DC 6A8B               M         clrf    LATC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005DE 6A8C               M         clrf    LATD
0005E0 EF?? F???          M         goto    LOG
                          M 
0005E4                    M Exit
0005E4 0000               M         nop
0005E6 D???           00668         bra     HOLD_LOG
                      00669         
                      00670 ;*******************************************************************************
                      00671 ; permanent logs
                      00672 ;*******************************************************************************
                      00673 
0005E8                00674 PERM_LOG
0005E8 EC?? F???      00675         call    ClrLCD
                      00676         Display PermLog1
  0000                    M         local   loop
0005EC 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005EE 6EF8               M         movwf   TBLPTRU
0005F0 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005F2 6EF7               M         movwf   TBLPTRH
0005F4 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005F6 6EF6               M         movwf   TBLPTRL
0005F8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005FA 50F5               M         movf    TABLAT, W
0005FC                    M loop
0005FC EC?? F???          M         call    WR_DATA         ; write to LCD
000600 000B               M         tblrd+*                 ; next row in table
000602 50F5               M         movf    TABLAT, W
000604 E1??               M         bnz     loop
000606 EC?? F???      00677         call    LCD_L2
                      00678         Display PermLog2
  0000                    M         local   loop
00060A 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
00060C 6EF8               M         movwf   TBLPTRU
00060E 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000610 6EF7               M         movwf   TBLPTRH
000612 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
000614 6EF6               M         movwf   TBLPTRL
000616 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000618 50F5               M         movf    TABLAT, W
00061A                    M loop
00061A EC?? F???          M         call    WR_DATA         ; write to LCD
00061E 000B               M         tblrd+*                 ; next row in table
000620 50F5               M         movf    TABLAT, W
000622 E1??               M         bnz     loop
                      00679         
000624                00680 HOLD_PERM_LOG
000624 EC?? F???      00681         call    READ_KEY
                      00682         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000628 0E0D               M         movlw   key0                ; poll for mode
00062A 6210               M         cpfseq  KEY                 ; check this against key press
00062C EF?? F???          M         goto    Exit
                          M 
000630                    M Next
000630 6A89               M         clrf    LATA                ; clear pins before proceeding
000632 6A8A               M         clrf    LATB
000634 6A8B               M         clrf    LATC
000636 6A8C               M         clrf    LATD
000638 EF?? F???          M         goto    STANDBY
                          M 
00063C                    M Exit
00063C 0000               M         nop
                      00683         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00063E 0E00               M         movlw   key1                ; poll for mode
000640 6210               M         cpfseq  KEY                 ; check this against key press
000642 EF?? F???          M         goto    Exit
                          M 
000646                    M Next
000646 6A89               M         clrf    LATA                ; clear pins before proceeding
000648 6A8A               M         clrf    LATB
00064A 6A8B               M         clrf    LATC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00064C 6A8C               M         clrf    LATD
00064E EF?? F???          M         goto    PLOG
                          M 
000652                    M Exit
000652 0000               M         nop
                      00684         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000654 0E01               M         movlw   key2                ; poll for mode
000656 6210               M         cpfseq  KEY                 ; check this against key press
000658 EF?? F???          M         goto    Exit
                          M 
00065C                    M Next
00065C 6A89               M         clrf    LATA                ; clear pins before proceeding
00065E 6A8A               M         clrf    LATB
000660 6A8B               M         clrf    LATC
000662 6A8C               M         clrf    LATD
000664 EF?? F???          M         goto    PLOG
                          M 
000668                    M Exit
000668 0000               M         nop
                      00685         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00066A 0E02               M         movlw   key3                ; poll for mode
00066C 6210               M         cpfseq  KEY                 ; check this against key press
00066E EF?? F???          M         goto    Exit
                          M 
000672                    M Next
000672 6A89               M         clrf    LATA                ; clear pins before proceeding
000674 6A8A               M         clrf    LATB
000676 6A8B               M         clrf    LATC
000678 6A8C               M         clrf    LATD
00067A EF?? F???          M         goto    PLOG
                          M 
00067E                    M Exit
00067E 0000               M         nop
                      00686         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000680 0E04               M         movlw   key4                ; poll for mode
000682 6210               M         cpfseq  KEY                 ; check this against key press
000684 EF?? F???          M         goto    Exit
                          M 
000688                    M Next
000688 6A89               M         clrf    LATA                ; clear pins before proceeding
00068A 6A8A               M         clrf    LATB
00068C 6A8B               M         clrf    LATC
00068E 6A8C               M         clrf    LATD
000690 EF?? F???          M         goto    PLOG
                          M 
000694                    M Exit
000694 0000               M         nop
                      00687         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000696 0E05               M         movlw   key5                ; poll for mode
000698 6210               M         cpfseq  KEY                 ; check this against key press
00069A EF?? F???          M         goto    Exit
                          M 
00069E                    M Next
00069E 6A89               M         clrf    LATA                ; clear pins before proceeding
0006A0 6A8A               M         clrf    LATB
0006A2 6A8B               M         clrf    LATC
0006A4 6A8C               M         clrf    LATD
0006A6 EF?? F???          M         goto    PLOG
                          M 
0006AA                    M Exit
0006AA 0000               M         nop
                      00688         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006AC 0E06               M         movlw   key6                ; poll for mode
0006AE 6210               M         cpfseq  KEY                 ; check this against key press
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006B0 EF?? F???          M         goto    Exit
                          M 
0006B4                    M Next
0006B4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006B6 6A8A               M         clrf    LATB
0006B8 6A8B               M         clrf    LATC
0006BA 6A8C               M         clrf    LATD
0006BC EF?? F???          M         goto    PLOG
                          M 
0006C0                    M Exit
0006C0 0000               M         nop
                      00689         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0006C2 0E08               M         movlw   key7                ; poll for mode
0006C4 6210               M         cpfseq  KEY                 ; check this against key press
0006C6 EF?? F???          M         goto    Exit
                          M 
0006CA                    M Next
0006CA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006CC 6A8A               M         clrf    LATB
0006CE 6A8B               M         clrf    LATC
0006D0 6A8C               M         clrf    LATD
0006D2 EF?? F???          M         goto    PLOG
                          M 
0006D6                    M Exit
0006D6 0000               M         nop
                      00690         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0006D8 0E09               M         movlw   key8                ; poll for mode
0006DA 6210               M         cpfseq  KEY                 ; check this against key press
0006DC EF?? F???          M         goto    Exit
                          M 
0006E0                    M Next
0006E0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E2 6A8A               M         clrf    LATB
0006E4 6A8B               M         clrf    LATC
0006E6 6A8C               M         clrf    LATD
0006E8 EF?? F???          M         goto    PLOG
                          M 
0006EC                    M Exit
0006EC 0000               M         nop
                      00691         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0006EE 0E0A               M         movlw   key9                ; poll for mode
0006F0 6210               M         cpfseq  KEY                 ; check this against key press
0006F2 EF?? F???          M         goto    Exit
                          M 
0006F6                    M Next
0006F6 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F8 6A8A               M         clrf    LATB
0006FA 6A8B               M         clrf    LATC
0006FC 6A8C               M         clrf    LATD
0006FE EF?? F???          M         goto    PLOG
                          M 
000702                    M Exit
000702 0000               M         nop
000704 D???           00692         bra HOLD_PERM_LOG
                      00693         
000706                00694 PLOG
000706 EC?? F???      00695         call    ClrLCD
                      00696         Display PermLog1
  0000                    M         local   loop
00070A 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00070C 6EF8               M         movwf   TBLPTRU
00070E 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000710 6EF7               M         movwf   TBLPTRH
000712 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000714 6EF6               M         movwf   TBLPTRL
000716 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000718 50F5               M         movf    TABLAT, W
00071A                    M loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00071A EC?? F???          M         call    WR_DATA         ; write to LCD
00071E 000B               M         tblrd+*                 ; next row in table
000720 50F5               M         movf    TABLAT, W
000722 E1??               M         bnz     loop
                      00697         
                      00698         ; find the key press value
000724 C010 FFE8      00699         movff   KEY, WREG
000728 2AE8           00700         incf    WREG        ; W = KEY+1
00072A 6E17           00701         movwf   temp
                      00702         
00072C 42E8           00703         rrncf   WREG        ; division by 4
00072E 9EE8           00704         bcf     WREG, 7     ; clear last bit, overflow from rotate
000730 42E8           00705         rrncf   WREG        
000732 9EE8           00706         bcf     WREG, 7
000734 5E17           00707         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000736 C017 FFE8      00708         movff   temp, WREG
00073A C017 F011      00709         movff   temp, temp_KEY
00073E 0D15           00710         mullw   d'21'       ; indexed as mutliples of 21
                      00711 
000740                00712 displayNum
000740 C011 FFE8      00713         movff   temp_KEY, WREG
000744 0F30           00714         addlw   0x30
000746 EC?? F???      00715         call    WR_DATA
00074A 0E3A           00716         movlw   ":"
00074C EC?? F???      00717         call    WR_DATA
000750 0E20           00718         movlw   " "
000752 EC?? F???      00719         call    WR_DATA
                      00720         
000756 CFF3 F022      00721         movff   PRODL, L_EE
00075A 0E00           00722         movlw   d'0'
00075C 2622           00723         addwf   L_EE
                      00724         READEE  OP_sec, H_EE, L_EE
00075E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000762 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000766 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000768 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00076A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00076C CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000770 2A22           00725         incf    L_EE
                      00726         READEE  OP_INT, H_EE, L_EE
000772 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000776 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00077A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00077C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00077E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000780 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000784 2A22           00727         incf    L_EE
000786 EC?? F???      00728         call    DisplayTime
00078A CFF3 F022      00729         movff   PRODL, L_EE
                      00730         
                      00731         ; reset eeprom to beginning
00078E EC?? F???      00732         call    LCD_L2
000792 CFF3 F022      00733         movff   PRODL, L_EE
000796 EC?? F???      00734         call    DispOpRTC
                      00735         
00079A                00736 HOLD_PLOG
00079A EC?? F???      00737         call    READ_KEY
                      00738         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00079E 0E0D               M         movlw   key0                ; poll for mode
0007A0 6210               M         cpfseq  KEY                 ; check this against key press
0007A2 EF?? F???          M         goto    Exit
                          M 
0007A6                    M Next
0007A6 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A8 6A8A               M         clrf    LATB
0007AA 6A8B               M         clrf    LATC
0007AC 6A8C               M         clrf    LATD
0007AE EF?? F???          M         goto    PERM_LOG
                          M 
0007B2                    M Exit
0007B2 0000               M         nop
0007B4 D???           00739         bra HOLD_PERM_LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00740         
                      00741 ;*******************************************************************************
                      00742 ; pc interface
                      00743 ;*******************************************************************************
                      00744 
0007B6                00745 PC_MODE
0007B6 EC?? F???      00746         call    ClrLCD
                      00747         Display PC1
  0000                    M         local   loop
0007BA 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0007BC 6EF8               M         movwf   TBLPTRU
0007BE 0E??               M         movlw   high PC1        ; Move Table<15:8>
0007C0 6EF7               M         movwf   TBLPTRH
0007C2 0E??               M         movlw   low PC1         ; Move Table<7:0>
0007C4 6EF6               M         movwf   TBLPTRL
0007C6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007C8 50F5               M         movf    TABLAT, W
0007CA                    M loop
0007CA EC?? F???          M         call    WR_DATA         ; write to LCD
0007CE 000B               M         tblrd+*                 ; next row in table
0007D0 50F5               M         movf    TABLAT, W
0007D2 E1??               M         bnz     loop
0007D4 EC?? F???      00748         call    LCD_L2
                      00749         Display PC2
  0000                    M         local   loop
0007D8 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0007DA 6EF8               M         movwf   TBLPTRU
0007DC 0E??               M         movlw   high PC2        ; Move Table<15:8>
0007DE 6EF7               M         movwf   TBLPTRH
0007E0 0E??               M         movlw   low PC2         ; Move Table<7:0>
0007E2 6EF6               M         movwf   TBLPTRL
0007E4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007E6 50F5               M         movf    TABLAT, W
0007E8                    M loop
0007E8 EC?? F???          M         call    WR_DATA         ; write to LCD
0007EC 000B               M         tblrd+*                 ; next row in table
0007EE 50F5               M         movf    TABLAT, W
0007F0 E1??               M         bnz     loop
0007F2 CFF9 F03A      00750         movff   PCL, PC_PCL
0007F6 CFFA F03B      00751         movff   PCLATH, PC_PCLATH
0007FA CFFB F03C      00752         movff   PCLATU, PC_PCLATU
                      00753         
0007FE                00754 HOLD_PC
0007FE EC?? F???      00755         call    READ_KEY
                      00756         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000802 0E0D               M         movlw   key0                ; poll for mode
000804 6210               M         cpfseq  KEY                 ; check this against key press
000806 EF?? F???          M         goto    Exit
                          M 
00080A                    M Next
00080A 6A89               M         clrf    LATA                ; clear pins before proceeding
00080C 6A8A               M         clrf    LATB
00080E 6A8B               M         clrf    LATC
000810 6A8C               M         clrf    LATD
000812 EF?? F???          M         goto    STANDBY
                          M 
000816                    M Exit
000816 0000               M         nop
                      00757         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000818 0E0E               M         movlw   keyH                ; poll for mode
00081A 6210               M         cpfseq  KEY                 ; check this against key press
00081C EF?? F???          M         goto    Exit
                          M 
000820                    M Next
000820 6A89               M         clrf    LATA                ; clear pins before proceeding
000822 6A8A               M         clrf    LATB
000824 6A8B               M         clrf    LATC
000826 6A8C               M         clrf    LATD
000828 EF?? F???          M         goto    PC_TRANSFER
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00082C                    M Exit
00082C 0000               M         nop
00082E D???           00758         bra     HOLD_PC
                      00759 
000830                00760 PC_TRANSFER
000830 6839           00761         setf    transferring
000832 EC?? F???      00762         call    ClrLCD
                      00763         Display PCTransfer
  0000                    M         local   loop
000836 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000838 6EF8               M         movwf   TBLPTRU
00083A 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
00083C 6EF7               M         movwf   TBLPTRH
00083E 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000840 6EF6               M         movwf   TBLPTRL
000842 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000844 50F5               M         movf    TABLAT, W
000846                    M loop
000846 EC?? F???          M         call    WR_DATA         ; write to LCD
00084A 000B               M         tblrd+*                 ; next row in table
00084C 50F5               M         movf    TABLAT, W
00084E E1??               M         bnz     loop
                      00764         ;call   DataUSART
000850 6A39           00765         clrf    transferring
000852 D???           00766         bra     HOLD_PC
                      00767         
                      00768 ;*******************************************************************************
                      00769 ; subroutines
                      00770 ;*******************************************************************************
                      00771 
000854                00772 RTC_INIT
                      00773         ; set sda and scl to high-z
000854 9882           00774         bcf     PORTC, 4
000856 9682           00775         bcf     PORTC, 3
000858 8894           00776         bsf     TRISC, 4
00085A 8694           00777         bsf     TRISC, 3
                      00778 
00085C EC?? F???      00779         call    i2c_common_setup
                      00780         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000860 0012           00781 return
                      00782         
000862                00783 SAVE_TIME   
                      00784         rtc_read    0x02        ; hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000862 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
000864 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000866 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00086A 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00086C EC?? F???          M call rtc_convert
000870 EC?? F???      00785         call    WriteEE_RTC
                      00786         rtc_read    0x01        ; minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000874 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
000876 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000878 EC?? F???          M call read_rtc
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (movf)
00087C 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
00087E EC?? F???          M call rtc_convert
000882 EC?? F???      00787         call    WriteEE_RTC
                      00788         rtc_read    0x06        ; years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000886 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
000888 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00088A EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
00088E 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000890 EC?? F???          M call rtc_convert
000894 EC?? F???      00789         call    WriteEE_RTC
                      00790         rtc_read    0x05        ; months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
000898 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
00089A 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
00089C EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0008A0 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0008A2 EC?? F???          M call rtc_convert
0008A6 EC?? F???      00791         call    WriteEE_RTC
                      00792         rtc_read    0x04        ; days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0008AA 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
0008AC 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0008AE EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0008B2 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0008B4 EC?? F???          M call rtc_convert
0008B8 EC?? F???      00793         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0008BC 0012           00794 return
                      00795                 
0008BE                00796 DISPLAY_RTC
                      00797         
                      00798         ; display data in this format hh/minmin/yy yy/mm/dd
                      00799         rtc_read    0x02            ; 0x02 from DS1307 - hours
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0008BE 0E02               M movlw 0x02
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (movwf)
0008C0 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0008C2 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0008C6 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0008C8 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0008CC 5000           00800         movf    tens_digit,WREG
0008CE EC?? F???      00801         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0008D2 5000           00802         movf    ones_digit,WREG
0008D4 EC?? F???      00803         call    WR_DATA
0008D8 0E68           00804         movlw   "h"
0008DA EC?? F???      00805         call    WR_DATA
                      00806         
                      00807         rtc_read    0x01            ; 0x01 from DS1307 - minutes
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0008DE 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
0008E0 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
0008E2 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
0008E6 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
0008E8 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0008EC 5000           00808         movf    tens_digit,WREG
0008EE EC?? F???      00809         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0008F2 5000           00810         movf    ones_digit,WREG
0008F4 EC?? F???      00811         call    WR_DATA
0008F8 0E20           00812         movlw   " "
0008FA EC?? F???      00813         call    WR_DATA
                      00814         
                      00815         rtc_read    0x06            ; 0x06 from DS1307 - years
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
0008FE 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
000900 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000902 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000906 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000908 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
00090C 5000           00816         movf    tens_digit,WREG
00090E EC?? F???      00817         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000912 5000           00818         movf    ones_digit,WREG
000914 EC?? F???      00819         call    WR_DATA
000918 0E2F           00820         movlw   "/"
00091A EC?? F???      00821         call    WR_DATA
                      00822         
                      00823         rtc_read    0x05            ; 0x06 from DS1307 - months
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
00091E 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
000920 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000922 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000926 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000928 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
00092C 5000           00824         movf    tens_digit,WREG
00092E EC?? F???      00825         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000932 5000           00826         movf    ones_digit,WREG
000934 EC?? F???      00827         call    WR_DATA
000938 0E2F           00828         movlw   "/"
00093A EC?? F???      00829         call    WR_DATA
                      00830         
                      00831         rtc_read    0x04            ; 0x06 from DS1307 - days
                          M ;input: addliteral
                          M ;output: datachar, tens_digit, ones_digit
                          M ;desc: From the selected register in the RTC, read the data
                          M ; and load it into 0x75. 0x75 is also converted into
                          M ; ASCII characters and the tens digit is placed into
                          M ; 0x77 and the ones digit is placed in 0x78
Warning[203]: Found opcode in column 1. (movlw)
00093E 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
000940 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (call)
000942 EC?? F???          M call read_rtc
Warning[203]: Found opcode in column 1. (movf)
000946 50??               M movf datachar,w
Warning[203]: Found opcode in column 1. (call)
000948 EC?? F???          M call rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
00094C 5000           00832         movf    tens_digit,WREG
00094E EC?? F???      00833         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000952 5000           00834         movf    ones_digit,WREG
000954 EC?? F???      00835         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000958 0012           00836 return
                      00837         
00095A                00838 SET_TIME
                      00839         rtc_resetAll
                          M ;input: none
                          M ;output: none
                          M ;desc: Resets all the time keeping registers on the RTC to zero
                          M 
Warning[203]: Found opcode in column 1. (clrf)
00095A 6A??               M clrf databyte
Warning[203]: Found opcode in column 1. (movlw)
00095C 0E06               M movlw 6
Warning[203]: Found opcode in column 1. (movwf)
00095E 6E??               M movwf regaddress ;start at 6 and go down, and set all to 0
                          M 
000960                    M del_loop0
Warning[203]: Found opcode in column 1. (call)
000960 EC?? F???          M call write_rtc
Warning[203]: Found opcode in column 1. (decfsz)
000964 2E??               M decfsz regaddress
Warning[203]: Found opcode in column 1. (bra)
000966 D???               M bra del_loop0
Warning[203]: Found opcode in column 1. (call)
000968 EC?? F???          M call write_rtc ;sets registers 0-6 to zero
  00000001                M _loopknt set _loopknt+1
                      00840         
                      00841         rtc_set 0x00,   b'10000000'
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00096C 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
00096E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000970 0E80               M movlw b'10000000'
Warning[203]: Found opcode in column 1. (movwf)
000972 6E??               M movwf databyte
                      00842 
                      00843         rtc_set 0x06,   b'00010111'             ; Year 17
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000974 0E06               M movlw 0x06
Warning[203]: Found opcode in column 1. (movwf)
000976 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000978 0E17               M movlw b'00010111'
Warning[203]: Found opcode in column 1. (movwf)
00097A 6E??               M movwf databyte
                      00844         rtc_set 0x05,   b'00000010'             ; Month 2
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00097C 0E05               M movlw 0x05
Warning[203]: Found opcode in column 1. (movwf)
00097E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000980 0E02               M movlw b'00000010'
Warning[203]: Found opcode in column 1. (movwf)
000982 6E??               M movwf databyte
                      00845         rtc_set 0x04,   b'00010010'             ; Date 12
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000984 0E04               M movlw 0x04
Warning[203]: Found opcode in column 1. (movwf)
000986 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000988 0E12               M movlw b'00010010'
Warning[203]: Found opcode in column 1. (movwf)
00098A 6E??               M movwf databyte
                      00846         rtc_set 0x02,   b'00010011'             ; Hours 13
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00098C 0E02               M movlw 0x02
Warning[203]: Found opcode in column 1. (movwf)
00098E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000990 0E13               M movlw b'00010011'
Warning[203]: Found opcode in column 1. (movwf)
000992 6E??               M movwf databyte
                      00847         rtc_set 0x01,   b'01000111'             ; Minutes 45
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
000994 0E01               M movlw 0x01
Warning[203]: Found opcode in column 1. (movwf)
000996 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
000998 0E47               M movlw b'01000111'
Warning[203]: Found opcode in column 1. (movwf)
00099A 6E??               M movwf databyte
                      00848         rtc_set 0x00,   b'00000000'             ; Seconds 0
                          M ;input: addliteral: value of address
                          M ; datliteral: value of data
                          M ;output: none
                          M ;desc: loads the data in datliteral into the
                          M ; address specified by addliteral in the RTC
                          M 
Warning[203]: Found opcode in column 1. (movlw)
00099C 0E00               M movlw 0x00
Warning[203]: Found opcode in column 1. (movwf)
00099E 6E??               M movwf regaddress
Warning[203]: Found opcode in column 1. (movlw)
0009A0 0E00               M movlw b'00000000'
Warning[203]: Found opcode in column 1. (movwf)
0009A2 6E??               M movwf databyte
Warning[203]: Found opcode in column 1. (return)
0009A4 0012           00849 return
                      00850         
0009A6                00851 INIT_USART
0009A6 0E0F           00852         movlw   15      ; baud rate 9600
0009A8 6EAF           00853         movwf   SPBRG
0009AA 6AAC           00854         clrf    TXSTA
                      00855         
0009AC 6AAB           00856         clrf    RCSTA
0009AE 8EAB           00857         bsf     RCSTA,SPEN      ; asynchronous serial port enable
0009B0 88AB           00858         bsf     RCSTA,CREN      ; continous receive
                      00859         
0009B2 8AAC           00860         bsf     TXSTA, TXEN     ; transmit enabled
0009B4 0012           00861         return
                      00862 
                      00863 ;DataUSART
                      00864 ;       
                      00865 ;       movlw   0x02
                      00866 ;       call    USART_WAIT
                      00867 ;       movlw   0x0D
                      00868 ;       call    USART_WAIT
                      00869 ;       
                      00870 ;       movlw   d'21'       ; start of permanent logs
                      00871 ;       movff   w, L_EE
                      00872 ;       TransferTable   PCLog1
                      00873 ;       
                      00874 ;       ; display time here
                      00875 ;;      rtc_read        0x02
                      00876 ;;              movf        tens_digit, W
                      00877 ;;        andlw       b'00000001'
                      00878 ;;        addlw       0x30
                      00879 ;;        call        TransmitWaitUSART
                      00880 ;;        movf        ones_digit, W
                      00881 ;;        call        TransmitWaitUSART
                      00882 ;;              movlw           ":"
                      00883 ;;              call            TransmitWaitUSART
                      00884 ;;              ; Dispay minutes
                      00885 ;;              rtc_read        0x01
                      00886 ;;              call        SendRTC_USART
                      00887 ;;              ; Dispay AM/PM
                      00888 ;;              rtc_read        0x02
                      00889 ;;        movlw       "P"
                      00890 ;;        btfss       tens_digit, 1
                      00891 ;;        movlw       "A"
                      00892 ;;        call        TransmitWaitUSART
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00893 ;;        movlw       "M"
                      00894 ;;        call        TransmitWaitUSART
                      00895 ;;              movlw           " "
                      00896 ;;        call        TransmitWaitUSART
                      00897 ;;              ; Display month
                      00898 ;;              rtc_read        0x05
                      00899 ;;              call        SendRTC_USART
                      00900 ;;              movlw           0x2F            ; ASCII '/'
                      00901 ;;              call            TransmitWaitUSART
                      00902 ;;              ; Display day
                      00903 ;;              rtc_read        0x04
                      00904 ;;              call        SendRTC_USART
                      00905 ;;              movlw           0x2F            ; ASCII '/'
                      00906 ;;              call            TransmitWaitUSART
                      00907 ;;              ; Display year
                      00908 ;;              rtc_read        0x06
                      00909 ;;              call        SendRTC_USART
                      00910 ;       
                      00911 ;       call    USART_LINE
                      00912 ;       call    USART_LINE
                      00913 ;       
                      00914 ;       clrf    counter
                      00915 ;       incf    counter
                      00916 ;
                      00917 ;USART_TRANSFER
                      00918 ;       movlw   d'21'
                      00919 ;       mulwf   counter
                      00920 ;       movff   PRODL, L_EE
                      00921 ;       movlw   d'9'
                      00922 ;       addwf   L_EE
                      00923 ;       READEE  OP_sec, H_EE, L_EE
                      00924 ;       incf    L_EE
                      00925 ;       READEE  OP_INT, H_EE, L_EE
                      00926 ;       incf    L_EE
                      00927 ;       ; call  TransferTime
                      00928 ;       
                      00929 ;       ; send rtc
                      00930 ;       movlw   0x09
                      00931 ;       call    USART_WAIT
                      00932 ;       movff   PRODL, L_EE
                      00933 ;       ;call   TransferRTC
                      00934 ;       call    USART_LINE
                      00935 ;       
                      00936 ;       
                      00937 ;       
                      00938 ;       
                      00939 ;USART_WAIT
                      00940 ;       movwf   TXREG
                      00941 ;       btfss   TXSTA,1
                      00942 ;       goto    $-2
                      00943 ;       return
                      00944 ;
                      00945 ;USART_LINE
                      00946 ;       movlw   0x0A
                      00947 ;       call    USART_WAIT
                      00948 ;       movlw   0x0D
                      00949 ;       call    USART_WAIT
                      00950 ;       return
                      00951         
                      00952         
0009B6                00953 Delay5us
0009B6 0E78           00954         movlw   d'120'
0009B8 6E1C           00955         movwf   d5us
                      00956 
0009BA                00957 loop5us
0009BA 2E1C           00958         decfsz  d5us
0009BC EF?? F???      00959         goto    loop5us
0009C0 0000           00960         nop
0009C2 0012           00961         return
                      00962 
0009C4                00963 Delay200us
0009C4 0EA4           00964         movlw   0xA4
0009C6 6E1D           00965         movwf   d200us
                      00966 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009C8                00967 loop200us
0009C8 2E1D           00968         decfsz  d200us
0009CA EF?? F???      00969         goto    loop200us
0009CE 0000           00970         nop
0009D0 0012           00971         return
                      00972 
0009D2                00973 Delay50ms
0009D2 0EF9           00974         movlw   0xF9
0009D4 6E1E           00975         movwf   d50ms
                      00976 
0009D6                00977 loop50ms
0009D6 EC?? F???      00978         call    Delay200us
0009DA 2E1E           00979         decfsz  d50ms
                      00980 
0009DC                00981 Cycles
0009DC EF?? F???      00982         goto    loop50ms
0009E0 EC?? F???      00983         call    Delay200us
0009E4 0012           00984         return
                      00985 
0009E6                00986 WriteEE_RTC
                      00987         WriteEE tens_digit, H_EE, L_EE
0009E6 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
0009EA C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
0009EE C??? FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
0009F2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009F4 D???               M         bra     $-2
                          M 
0009F6 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
0009F8 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
0009FA 84A6               M         bsf     EECON1, WREN    ; enable write
0009FC 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0009FE 98A1               M         bcf     PIR2, EEIF
                          M 
000A00 0E55               M         movlw   0x55
000A02 6EA7               M         movwf   EECON2      ; write 55h
000A04 0EAA               M         movlw   0xAA
000A06 6EA7               M         movwf   EECON2      ; write 0xAA
000A08 82A6               M         bsf     EECON1, WR          ; begin write
000A0A B2A6               M         btfsc   EECON1, WR
000A0C D???               M         bra     $-2
                          M 
000A0E 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000A10 94A6               M         bcf     EECON1, WREN        ; disable writes
000A12 2A22           00988         incf    L_EE
                      00989         WriteEE ones_digit, H_EE, L_EE
000A14 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000A18 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000A1C C??? FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
000A20 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A22 D???               M         bra     $-2
                          M 
000A24 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000A26 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000A28 84A6               M         bsf     EECON1, WREN    ; enable write
000A2A 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000A2C 98A1               M         bcf     PIR2, EEIF
                          M 
000A2E 0E55               M         movlw   0x55
000A30 6EA7               M         movwf   EECON2      ; write 55h
000A32 0EAA               M         movlw   0xAA
000A34 6EA7               M         movwf   EECON2      ; write 0xAA
000A36 82A6               M         bsf     EECON1, WR          ; begin write
000A38 B2A6               M         btfsc   EECON1, WR
000A3A D???               M         bra     $-2
                          M 
000A3C 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000A3E 94A6               M         bcf     EECON1, WREN        ; disable writes
000A40 2A22           00990         incf    L_EE
000A42 0012           00991         return
                      00992 
000A44                00993 ClearEEPROM_21
000A44 6A21           00994         clrf    H_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A46 6A22           00995         clrf    L_EE
000A48 6820           00996         setf    clear_EE
000A4A 6A15           00997         clrf    counter
000A4C                00998 ClearNext
                      00999         WriteEE         clear_EE, H_EE, L_EE
000A4C C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000A50 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000A54 C020 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
000A58 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A5A D???               M         bra     $-2
                          M 
000A5C 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000A5E 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000A60 84A6               M         bsf     EECON1, WREN    ; enable write
000A62 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000A64 98A1               M         bcf     PIR2, EEIF
                          M 
000A66 0E55               M         movlw   0x55
000A68 6EA7               M         movwf   EECON2      ; write 55h
000A6A 0EAA               M         movlw   0xAA
000A6C 6EA7               M         movwf   EECON2      ; write 0xAA
000A6E 82A6               M         bsf     EECON1, WR          ; begin write
000A70 B2A6               M         btfsc   EECON1, WR
000A72 D???               M         bra     $-2
                          M 
000A74 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000A76 94A6               M         bcf     EECON1, WREN        ; disable writes
000A78 2A15           01000         incf            counter
000A7A 2A22           01001         incf            L_EE
000A7C 0E15           01002         movlw           d'21'
000A7E 6215           01003         cpfseq          counter
000A80 EF?? F???      01004         goto            ClearNext
000A84 6A21           01005         clrf            H_EE            ; reset EEPROMaddr
000A86 6A22           01006         clrf            L_EE
000A88 0012           01007         return
                      01008         
000A8A                01009 READ_KEY
000A8A A281           01010         btfss   PORTB, 1        ; check for keypad interrupt
000A8C EF?? F???      01011         goto    READ_KEY
000A90 3881           01012         swapf   PORTB, W
000A92 0B0F           01013         andlw   0x0F
000A94 6E10           01014         movwf   KEY
000A96 B281           01015         btfsc   PORTB, 1
000A98 EF?? F???      01016         goto    $-2
000A9C 0012           01017         return
                      01018 
000A9E                01019 READ_KEY_TIME
000A9E EC?? F???      01020         call        LCD_L2          ; go to second line to print RTC
                      01021 
                      01022         ; display the time
000AA2 EC?? F???      01023         call    DISPLAY_RTC
                      01024 
000AA6 A281           01025         btfss       PORTB, 1    ; keypad interrupt
000AA8 EF?? F???      01026         goto        READ_KEY_TIME
000AAC 3881           01027         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000AAE 0B0F           01028         andlw       0x0F        ; only want W3:0
000AB0 6E10           01029         movwf       KEY         ; write this value to the KEY
000AB2 B281           01030         btfsc       PORTB, 1    ; wait for release
000AB4 EF?? F???      01031         goto        $-2         ; go back one instruction
000AB8 0012           01032         return
                      01033 
000ABA                01034 DisplayTime
                      01035         READEE  REG_EE, H_EE, L_EE
000ABA C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000ABE C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000AC2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000AC4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000AC6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000AC8 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000ACC 0EFF           01036         movlw   0xFF
000ACE 6223           01037         cpfseq  REG_EE
000AD0 EF?? F???      01038         goto    NoSkipDispOpTime
                      01039         Display NoData
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
000AD4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000AD6 6EF8               M         movwf   TBLPTRU
000AD8 0E??               M         movlw   high NoData     ; Move Table<15:8>
000ADA 6EF7               M         movwf   TBLPTRH
000ADC 0E??               M         movlw   low NoData      ; Move Table<7:0>
000ADE 6EF6               M         movwf   TBLPTRL
000AE0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000AE2 50F5               M         movf    TABLAT, W
000AE4                    M loop
000AE4 EC?? F???          M         call    WR_DATA         ; write to LCD
000AE8 000B               M         tblrd+*                 ; next row in table
000AEA 50F5               M         movf    TABLAT, W
000AEC E1??               M         bnz     loop
000AEE 0EFF           01040         movlw   0xFF
000AF0 6023           01041         cpfslt  REG_EE
000AF2 EF?? F???      01042         goto    SkipDispOpTime
000AF6 0012           01043         return
                      01044 
000AF8                01045 NoSkipDispOpTime
000AF8 0E21           01046         movlw   b'00100001'
000AFA 6E18           01047         movwf   OP_sec
000AFC 3818           01048         swapf   OP_sec, W
000AFE 6E17           01049         movwf   temp
000B00 0E0F           01050         movlw   0x0F
000B02 1617           01051         andwf   temp
000B04 C017 FFE8      01052         movff   temp, WREG
000B08 0F30           01053         addlw   0x30
000B0A EC?? F???      01054         call    WR_DATA
                      01055 
000B0E C018 F017      01056         movff   OP_sec, temp    ; 1's seconds
000B12 0E0F           01057         movlw   0x0F
000B14 1617           01058         andwf   temp            ; Temp = lower nibble of Op_sec
000B16 C017 FFE8      01059         movff   temp, WREG      ; W = Temp
000B1A 0F30           01060         addlw   0x30            ; Convert to ASCII
000B1C EC?? F???      01061         call    WR_DATA
                      01062 
000B20 0E73           01063         movlw   0x73            ; Write 's'
000B22 EC?? F???      01064         call    WR_DATA
000B26 EC?? F???      01065         call    LCD_L2
000B2A                01066 SkipDispOpTime
000B2A 0012           01067         return
                      01068 
000B2C                01069 DispOpRTC
000B2C 0E0B           01070         movlw   d'11'
000B2E 2622           01071         addwf   L_EE
                      01072 
                      01073         READEE  REG_EE, H_EE, L_EE
000B30 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000B34 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000B38 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000B3A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000B3C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000B3E CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000B42 0EFF           01074         movlw   0xFF
000B44 6223           01075         cpfseq  REG_EE
000B46 EF?? F???      01076         goto    NoSkipDispOpRTC
                      01077         Display NoData
  0000                    M         local   loop
000B4A 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000B4C 6EF8               M         movwf   TBLPTRU
000B4E 0E??               M         movlw   high NoData     ; Move Table<15:8>
000B50 6EF7               M         movwf   TBLPTRH
000B52 0E??               M         movlw   low NoData      ; Move Table<7:0>
000B54 6EF6               M         movwf   TBLPTRL
000B56 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000B58 50F5               M         movf    TABLAT, W
000B5A                    M loop
000B5A EC?? F???          M         call    WR_DATA         ; write to LCD
000B5E 000B               M         tblrd+*                 ; next row in table
000B60 50F5               M         movf    TABLAT, W
000B62 E1??               M         bnz     loop
000B64 0EFF           01078         movlw   0xFF
000B66 6023           01079         cpfslt  REG_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-17-2017  17:32:31         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B68 EF?? F???      01080         goto    SkipDispOpRTC
                      01081 
000B6C                01082 NoSkipDispOpRTC
                      01083         READEE  REG_EE, H_EE, L_EE
000B6C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000B70 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000B74 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000B76 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000B78 80A6               M         bsf     EECON1, RD          ; read EEPROM
000B7A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000B7E C023 FFE8      01084         movff   REG_EE, WREG
000B82 0BF1           01085         andlw   b'11110001'
000B84 EC?? F???      01086         call    WR_DATA
                      01087         
000B88 2A22           01088         incf    L_EE
                      01089         READEE  REG_EE, H_EE, L_EE
000B8A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000B8E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000B92 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000B94 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000B96 80A6               M         bsf     EECON1, RD          ; read EEPROM
000B98 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000B9C C023 FFE8      01090         movff   REG_EE, WREG
000BA0 EC?? F???      01091         call    WR_DATA
000BA4 2A22           01092         incf    L_EE
                      01093 
000BA6 0E68           01094         movlw           "h"
000BA8 EC?? F???      01095         call            WR_DATA
000BAC EC?? F???      01096         call DispOpRTC_Helper
000BB0 0E20           01097         movlw           " "
000BB2 EC?? F???      01098         call            WR_DATA
000BB6 EC?? F???      01099         call DispOpRTC_Helper
000BBA 0E2F           01100         movlw           "/"
000BBC EC?? F???      01101         call            WR_DATA
000BC0 EC?? F???      01102         call DispOpRTC_Helper
000BC4 0E2F           01103         movlw           "/"
000BC6 EC?? F???      01104         call            WR_DATA
000BCA EC?? F???      01105         call DispOpRTC_Helper
000BCE                01106 SkipDispOpRTC
000BCE 0012           01107                 return
000BD0                01108 DispOpRTC_Helper
                      01109         READEE          REG_EE, H_EE, L_EE
000BD0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000BD4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000BD8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000BDA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000BDC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000BDE CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000BE2 C023 FFE8      01110         movff           REG_EE, WREG
000BE6 EC?? F???      01111         call            WR_DATA
000BEA 2A22           01112         incf            L_EE
                      01113         READEE          REG_EE, H_EE, L_EE
000BEC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000BF0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000BF4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000BF6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000BF8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000BFA CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000BFE C023 FFE8      01114         movff           REG_EE, WREG
000C02 EC?? F???      01115         call            WR_DATA
000C06 2A22           01116         incf            L_EE
000C08 0012           01117         return
Warning[205]: Found directive in column 1. (end)
                      01118 end

Errors   :     0
Warnings :   131 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

