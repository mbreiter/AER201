MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: aer201
                      00008 ;    Description: botL - an attempt at a pastic bottle sorting machine (does it 
                      00009 ;                        have to work in order for me to call it a machine?)    
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (LogInfo1)
000066 6153 6576 3A64 00110     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00006E 6142 6B63 3C20 00111     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000078 6550 6D72 6E61 00112     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000088 313C 203E 2E2E 00113     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
000094 6F53 7472 6E69 00114     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000A0 4E45 2044 2A3C 00115     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000A8 4350 4920 746E 00116     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000B6 6542 6967 206E 00117     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000C0 7254 6E61 6673 00118     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000D0 6F43 706D 656C 00119     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000DA 6153 6976 676E 00120     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000E4 2F4E 0041      00121     NoData      db          "N/A", 0
                      00122         
                      00123 ;*******************************************************************************
                      00124 ; macros
                      00125 ;*******************************************************************************
                      00126         
                      00127 ConfigLCD   macro
                      00128           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00129           call      WR_INS
                      00130 
                      00131           movlw     b'00001100'    ; display on/off
                      00132           call      WR_INS
                      00133           movlw     b'00000001'    ; Clear ram
                      00134           call      WR_INS
                      00135           endm
                      00136 
                      00137 Delay50Nf macro count, N
                      00138         local   loop
                      00139         movff   N, count
                      00140 
                      00141 loop
                      00142         call    Delay50ms
                      00143         decfsz  count
                      00144         goto    loop
                      00145         endm
                      00146 
                      00147 Delay50N macro count, N
                      00148         local   loop
                      00149         movlw   N
                      00150         movwf   count
                      00151 
                      00152 loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00153         call    Delay50ms
                      00154         decfsz  count
                      00155         goto    loop
                      00156         endm
                      00157 
                      00158 Display macro   Message
                      00159         local   loop
                      00160         movlw   upper Message   ; move table<20:16>
                      00161         movwf   TBLPTRU
                      00162         movlw   high Message    ; move table<15:8>
                      00163         movwf   TBLPTRH
                      00164         movlw   low Message     ; move table<7:0>
                      00165         movwf   TBLPTRL
                      00166         tblrd*                  ; read byte from TBLPTRL to TABLAT
                      00167         movf    TABLAT, W
                      00168 loop
                      00169         call    WR_DATA         ; write to LCD
                      00170         tblrd+*                 ; next row in table
                      00171         movf    TABLAT, W
                      00172         bnz     loop
                      00173         endm    
                      00174 
                      00175 incf_BCD    macro   BCD
                      00176         local ones, endBCD
                      00177         movff   BCD, temp
                      00178         
                      00179         ;process ones digit
                      00180         movlw   0x0f
                      00181         andwf   temp
                      00182         movlw   d'9'
                      00183         
                      00184         ;skip if ones digit is 9
                      00185         cpfseq  temp
                      00186         goto    ones
                      00187         
                      00188         movlw   b'00010000'
                      00189         addwf   BCD
                      00190         movlw   0xf0
                      00191         andwf   BCD
                      00192         movlw   0xa0
                      00193         cpfslt  BCD
                      00194         
                      00195         clrf    BCD
                      00196         goto    endBCD
                      00197         
                      00198 ones
                      00199         incf    BCD
                      00200         goto    endBCD
                      00201 endBCD
                      00202         nop
                      00203         endm
                      00204 
                      00205 WriteEE macro   word, addH, addL
                      00206         movff   addH, EEADRH        ; High address
                      00207         movff   addL, EEADR         ; Low address
                      00208         movff   word, EEDATA        ; set word
                      00209 
                      00210         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00211         bra     $-2
                      00212 
                      00213         bcf     EECON1, EEPGD       ; Point to data memory
                      00214         bcf     EECON1, CFGS        ; Access EEPROM
                      00215         bsf     EECON1, WREN        ; enable write
                      00216         bcf     INTCON, GIE         ; disable interrupts during write
                      00217         bcf     PIR2, EEIF
                      00218 
                      00219         movlw   0x55
                      00220         movwf   EECON2              ; write 55h
                      00221         movlw   0xaa
                      00222         movwf   EECON2              ; write 0xaa
                      00223         bsf     EECON1, WR          ; begin write
                      00224         btfsc   EECON1, WR
                      00225         bra     $-2
                      00226 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00227         bsf     INTCON, GIE         ; enable interrupts after write
                      00228         bcf     EECON1, WREN        ; disable writes
                      00229         endm
                      00230 
                      00231 READEE  macro   file, addH, addL
                      00232         movff   addH, EEADRH        ; read to high
                      00233         movff   addL, EEADR         ; read to low
                      00234         bcf     EECON1, EEPGD       ; point to data memory
                      00235         bcf     EECON1, CFGS        ; access to EEPROM
                      00236         bsf     EECON1, RD          ; read EEPROM
                      00237         movff   EEDATA, file        ; put data into file
                      00238         endm
                      00239 
                      00240 ChangeMode  macro   ModeId, NextMode
                      00241         local Next, Exit
                      00242 
                      00243         movlw   ModeId              ; poll for mode
                      00244         cpfseq  KEY                 ; check this against key press
                      00245         goto    Exit
                      00246 
                      00247 Next
                      00248         clrf    LATA                ; clear pins before proceeding
                      00249         clrf    LATB
                      00250         clrf    LATC
                      00251         clrf    LATD
                      00252         goto    NextMode
                      00253 
                      00254 Exit
                      00255         nop
                      00256         endm
                      00257 
                      00258 saveContext macro
                      00259     movff   STATUS, temp_S          ; save STATUS first
                      00260     movwf   temp_W                  ; save W
                      00261     endm
                      00262 
                      00263 restoreContext macro
                      00264     swapf   temp_W, 0               ; restore W first
                      00265     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00266     endm
                      00267     
                      00268 ;*******************************************************************************
                      00269 ; reset vector and isrs
                      00270 ;*******************************************************************************
                      00271         ORG     0x000               ; processor reset vector
000000 EF?? F???      00272         goto    INIT                ; go to beginning of program
                      00273 
                      00274         ORG     0x008
000008 EF?? F???      00275         goto    ISR_HIGH
                      00276 
                      00277         ORG     0x018
000018 EF?? F???      00278         goto    ISR_LOW
                      00279 
00001C                00280 LOAD_STANDBY_TIME
00001C 0EFF           00281         movlw   0xff
00001E 6ED7           00282         movwf   TMR0H
000020 0EFF           00283         movlw   0xff
000022 6ED6           00284         movwf   TMR0L
                      00285 
000024 0012           00286         return  
                      00287 
000026                00288 LOAD_EXE_TIME
000026 0EC3           00289         movlw   0xc3
000028 6ED7           00290         movwf   TMR0H
00002A 0E25           00291         movlw   0x25
00002C 6ED6           00292         movwf   TMR0L
                      00293         
00002E 0012           00294         return
                      00295 
000030                00296 EMERGENCY_STOP
                      00297         ; first check if we're currently sorting - else, no need to restart
000030 0EFF           00298         movlw   0xff                ; if in operation, skip return
000032 621E           00299         cpfseq  inExecution
000034 EF?? F???      00300         goto    END_ISR_HIGH
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00301         
                      00302         ; reset program counter - emergency stop recorded. 
000038 9ED5           00303         bcf     T0CON, TMR0ON
00003A EC?? F???      00304         call    SAVE_EXE_TIME
                      00305         
                      00306         ; reset emergency stop interrupt bit
00003E 92F2           00307         bcf     INTCON, INT0IF
                      00308                 
                      00309         ; clear inExecution flag
000040 6A1E           00310         clrf    inExecution
000042 0E01           00311         movlw   d'1'
000044 6E37           00312         movwf   STOP_CONDITION
000046 EC?? F???      00313         call    SaveData
                      00314         
00004A 6AFF           00315         clrf    TOSU
00004C 6AFE           00316         clrf    TOSH
00004E 6AFD           00317         clrf    TOSL
000050 90F0           00318         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00319         restoreContext
000052 3814               M     swapf   temp_W, 0               ; restore W first
000054 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000058 0010           00320         retfie
                      00321 
00005A                00322 ISR_HIGH
                      00323         saveContext
00005A CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00005E 6E14               M     movwf   temp_W                  ; save W
                      00324         
                      00325 ;       btfsc   INTCON, INT0IF
                      00326 ;       call    EMERGENCY_STOP
                      00327         
000060 0E00           00328         movlw   0x00
000062 6238           00329         cpfseq  inStandby
000064 EC?? F???      00330         call    Shift
                      00331         
                      00332         ;reset timer, but need to check which time increment 
000068 0E00           00333         movlw   0x00
00006A 6238           00334         cpfseq  inStandby
00006C EC?? F???      00335         call    LOAD_STANDBY_TIME
                      00336         
000070 0EFF           00337         movlw   0xff
000072 6238           00338         cpfseq  inStandby
000074 EC?? F???      00339         call    LOAD_EXE_TIME
                      00340                 
                      00341         ;timer interrupt
000078 A4F2           00342         btfss   INTCON, TMR0IF
00007A EF?? F???      00343         goto    END_ISR_HIGH
                      00344         
                      00345         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00007E C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000082 0E0F               M         movlw   0x0f
000084 1617               M         andwf   temp
000086 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000088 6217               M         cpfseq  temp
00008A EF?? F???          M         goto    ones
                          M         
00008E 0E10               M         movlw   b'00010000'
000090 2619               M         addwf   OP_INT
000092 0EF0               M         movlw   0xf0
000094 1619               M         andwf   OP_INT
000096 0EA0               M         movlw   0xa0
000098 6019               M         cpfslt  OP_INT
                          M         
00009A 6A19               M         clrf    OP_INT
00009C EF?? F???          M         goto    endBCD
                          M         
0000A0                    M ones
0000A0 2A19               M         incf    OP_INT
0000A2 EF?? F???          M         goto    endBCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000A6                    M endBCD
0000A6 0000               M         nop
0000A8 0E00           00346         movlw   d'0'
0000AA 6219           00347         cpfseq  OP_INT
0000AC EF?? F???      00348         goto    END_ISR_HIGH
                      00349         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000B0 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000B4 0E0F               M         movlw   0x0f
0000B6 1617               M         andwf   temp
0000B8 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000BA 6217               M         cpfseq  temp
0000BC EF?? F???          M         goto    ones
                          M         
0000C0 0E10               M         movlw   b'00010000'
0000C2 2618               M         addwf   OP_sec
0000C4 0EF0               M         movlw   0xf0
0000C6 1618               M         andwf   OP_sec
0000C8 0EA0               M         movlw   0xa0
0000CA 6018               M         cpfslt  OP_sec
                          M         
0000CC 6A18               M         clrf    OP_sec
0000CE EF?? F???          M         goto    endBCD
                          M         
0000D2                    M ones
0000D2 2A18               M         incf    OP_sec
0000D4 EF?? F???          M         goto    endBCD
0000D8                    M endBCD
0000D8 0000               M         nop
                      00350 
0000DA                00351 END_ISR_HIGH
0000DA 94F2           00352         bcf     INTCON, TMR0IF
                      00353         restoreContext
0000DC 3814               M     swapf   temp_W, 0               ; restore W first
0000DE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000E2 0010           00354         retfie
                      00355 
0000E4                00356 ISR_LOW
                      00357         saveContext
0000E4 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000E8 6E14               M     movwf   temp_W                  ; save W
                      00358         
                      00359         ; KEYPAD INTERRUPT
0000EA A0F0           00360         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000EC EF?? F???      00361         goto    END_ISR_LOW
                      00362 
                      00363         ; check operation status
0000F0 0EFF           00364         movlw   0xff                    ; If in operation, skip return
0000F2 621E           00365         cpfseq  inExecution
0000F4 EF?? F???      00366         goto    END_ISR_LOW
                      00367 
                      00368         ; process KEY
0000F8 3881           00369         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000FA 0B0F           00370         andlw   0x0f
0000FC 6E12           00371         movwf   KEY_ISR
                      00372         
0000FE 0E0C           00373         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
000100 6212           00374         cpfseq  KEY_ISR                 ; If key was '*', skip return
000102 EF?? F???      00375         goto    END_ISR_LOW
                      00376         
                      00377         ; reset program counter - emergency stop recorded. 
000106 9ED5           00378         bcf     T0CON, TMR0ON
000108 EC?? F???      00379         call    SAVE_EXE_TIME
                      00380                 
                      00381         ; Clear inExecution flag to stop '*' interrupts
00010C 6A1E           00382         clrf    inExecution
00010E 0E01           00383         movlw   d'1'
000110 6E37           00384         movwf   STOP_CONDITION
000112 EC?? F???      00385         call    SaveData
                      00386         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000116 6AFF           00387         clrf    TOSU
000118 6AFE           00388         clrf    TOSH
00011A 6AFD           00389         clrf    TOSL
00011C 90F0           00390         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00391 
00011E                00392 END_ISR_LOW
00011E 90F0           00393         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00394         restoreContext
000120 3814               M     swapf   temp_W, 0               ; restore W first
000122 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000126 0010           00395         retfie
                      00396 
                      00397 ;*******************************************************************************
                      00398 ; main
                      00399 ;*******************************************************************************
000128                00400 INIT
000128 0E70           00401         movlw   b'01110000'     ; set internal oscillator frequency to 8MHz
00012A 6ED3           00402         movwf   OSCCON
                      00403         
                      00404         ; i/o
00012C 0E00           00405         movlw   b'00000000'
00012E 6E92           00406         movwf   TRISA
000130 0EFF           00407         movlw   b'11111111'
000132 6E93           00408         movwf   TRISB
000134 0E00           00409         movlw   b'00000000'
000136 6E94           00410         movwf   TRISC
000138 0E00           00411         movlw   b'00000000'
00013A 6E95           00412         movwf   TRISD
00013C 0E00           00413         movlw   b'00000000'
00013E 6E96           00414         movwf   TRISE
                      00415 
                      00416         ; clear ports
000140 0E00           00417         movlw   b'00000000'
000142 6E89           00418         movwf   LATA
000144 0E00           00419         movlw   b'00000000'
000146 6E8A           00420         movwf   LATB
000148 0E00           00421         movlw   b'00000000'
00014A 6E8B           00422         movwf   LATC
00014C 0E00           00423         movlw   b'00000000'
00014E 6E8C           00424         movwf   LATD
000150 0E00           00425         movlw   b'00000000'
000152 6E8D           00426         movwf   LATE
                      00427         
000154 0E00           00428         movlw   b'00000000'
000156 6EC2           00429         movwf   ADCON0
                      00430 ;       movlw   b'11111111'
                      00431 ;       movwf   ADCON1
                      00432         
                      00433         ; setting up pwm
                      00434 ;       clrf    CM1CONO         ; disable comparators
                      00435 ;       clrf    CM2CONO
                      00436 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00437 ;       movwf   CCP2CON
                      00438 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
                      00439 ;       movwf   CCPR2L
                      00440 ;       
                      00441 ;       bcf     PIR1, TMR2IF
                      00442 ;       bcf     T2CON, T2CKPS1
                      00443 ;       bsf     T2CON, TMR2ON
                      00444         
                      00445         ; initializations
000158 EC?? F???      00446         call    InitLCD
                      00447         ConfigLCD
00015C 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00015E EC?? F???          M           call      WR_INS
                          M 
000162 0E0C               M           movlw     b'00001100'    ; display on/off
000164 EC?? F???          M           call      WR_INS
000168 0E01               M           movlw     b'00000001'    ; Clear ram
00016A EC?? F???          M           call      WR_INS
00016E EC?? F???      00448         call    i2c_common_setup
000172 EC?? F???      00449         call    RTC_INIT
000176 EC?? F???      00450         call    INIT_USART
                      00451 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00452         ; interrupts
00017A 6AD0           00453         clrf    RCON
00017C 6AF2           00454         clrf    INTCON
00017E 6AF1           00455         clrf    INTCON2
000180 6AF0           00456         clrf    INTCON3
                      00457         
000182 8ED0           00458         bsf     RCON, IPEN          ; allow priority mode
000184 8EF2           00459         bsf     INTCON, GIEH        ; permit global interrupts, set high and low
000186 8CF2           00460         bsf     INTCON, GIEL
                      00461         
000188 8AF1           00462         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
00018A 8AF2           00463         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
00018C 84F2           00464         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00018E 84F1           00465         bsf     INTCON2, TMR0IP     ; set to high priority
000190 86F0           00466         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
000192 9CF0           00467         bcf     INTCON3, INT1IP     ; keyboard to low priority
000194 88F2           00468         bsf     INTCON, INT0IE      ; enable high interrupts on rb0 for emergency stop
000196 92F2           00469         bcf     INTCON, INT0IF      ; clear emergency stop interrupt
                      00470         
                      00471         ; setting up timer to sychronize with 1 second clock intervals
000198 9ED5           00472         bcf     T0CON, TMR0ON
00019A 9CD5           00473         bcf     T0CON, T08BIT
00019C 9AD5           00474         bcf     T0CON, T0CS
00019E 98D5           00475         bcf     T0CON, T0SE
0001A0 96D5           00476         bcf     T0CON, PSA
0001A2 94D5           00477         bcf     T0CON, T0PS2        ; set prescaling to 1:16
0001A4 82D5           00478         bsf     T0CON, T0PS1
0001A6 80D5           00479         bsf     T0CON, T0PS0
                      00480 
0001A8 6A20           00481         clrf    H_EE
0001AA 6A21           00482         clrf    L_EE
0001AC 6A??           00483         clrf    tens_digit
0001AE 6A??           00484         clrf    ones_digit
                      00485         
0001B0 6A2C           00486         clrf    DETECTION_VAL
0001B2 6A2D           00487         clrf    ESKA
0001B4 6A2E           00488         clrf    ESKA_NOCAP
0001B6 6A2F           00489         clrf    YOP
0001B8 6A30           00490         clrf    YOP_NOCAP
0001BA 6A31           00491         clrf    TOTAL_BOTTLES
0001BC 6A32           00492         clrf    COLLECTIONS_COUNT
                      00493         
0001BE 0EF3           00494         movlw     b'11110011'    ; set required keypad inputs
0001C0 6E93           00495         movwf     TRISB
                      00496         
0001C2 EC?? F???      00497         call    ClrLCD
                      00498         Display Welcome
  0000                    M         local   loop
0001C6 0E??               M         movlw   upper Welcome   ; move table<20:16>
0001C8 6EF8               M         movwf   TBLPTRU
0001CA 0E??               M         movlw   high Welcome    ; move table<15:8>
0001CC 6EF7               M         movwf   TBLPTRH
0001CE 0E??               M         movlw   low Welcome     ; move table<7:0>
0001D0 6EF6               M         movwf   TBLPTRL
0001D2 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
0001D4 50F5               M         movf    TABLAT, W
0001D6                    M loop
0001D6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001DA 000B               M         tblrd+*                 ; next row in table
0001DC 50F5               M         movf    TABLAT, W
0001DE E1??               M         bnz     loop
0001E0 EC?? F???      00499         call LCD_L2
                      00500         Display Team
  0000                    M         local   loop
0001E4 0E??               M         movlw   upper Team      ; move table<20:16>
0001E6 6EF8               M         movwf   TBLPTRU
0001E8 0E??               M         movlw   high Team       ; move table<15:8>
0001EA 6EF7               M         movwf   TBLPTRH
0001EC 0E??               M         movlw   low Team        ; move table<7:0>
0001EE 6EF6               M         movwf   TBLPTRL
0001F0 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
0001F2 50F5               M         movf    TABLAT, W
0001F4                    M loop
0001F4 EC?? F???          M         call    WR_DATA         ; write to LCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F8 000B               M         tblrd+*                 ; next row in table
0001FA 50F5               M         movf    TABLAT, W
0001FC E1??               M         bnz     loop
                      00501         
                      00502         Delay50N delayR, 0x28
  0000                    M         local   loop
0001FE 0E28               M         movlw   0x28
000200 6E1A               M         movwf   delayR
                          M 
000202                    M loop
000202 EC?? F???          M         call    Delay50ms
000206 2E1A               M         decfsz  delayR
000208 EF?? F???          M         goto    loop
                      00503 
                      00504 ;*******************************************************************************
                      00505 ; standby mode
                      00506 ;*******************************************************************************
00020C                00507 STANDBY
                      00508         ; ensure that stepper motor is demagnetized and dc motor is off.
00020C 0E00           00509         movlw   b'00000000'
00020E 6E84           00510         movwf   PORTE
000210 0E00           00511         movlw   b'00000000'
000212 6E80           00512         movwf   PORTA
                      00513         
000214 6838           00514         setf    inStandby       
000216 EC?? F???      00515         call    ClrLCD
                      00516         Display StandBy
  0000                    M         local   loop
00021A 0E??               M         movlw   upper StandBy   ; move table<20:16>
00021C 6EF8               M         movwf   TBLPTRU
00021E 0E??               M         movlw   high StandBy    ; move table<15:8>
000220 6EF7               M         movwf   TBLPTRH
000222 0E??               M         movlw   low StandBy     ; move table<7:0>
000224 6EF6               M         movwf   TBLPTRL
000226 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000228 50F5               M         movf    TABLAT, W
00022A                    M loop
00022A EC?? F???          M         call    WR_DATA         ; write to LCD
00022E 000B               M         tblrd+*                 ; next row in table
000230 50F5               M         movf    TABLAT, W
000232 E1??               M         bnz     loop
000234 EC?? F???      00517         call    LCD_L2
                      00518         Display StandbyInfo
  0000                    M         local   loop
000238 0E??               M         movlw   upper StandbyInfo ; move table<20:16>
00023A 6EF8               M         movwf   TBLPTRU
00023C 0E??               M         movlw   high StandbyInfo ; move table<15:8>
00023E 6EF7               M         movwf   TBLPTRH
000240 0E??               M         movlw   low StandbyInfo ; move table<7:0>
000242 6EF6               M         movwf   TBLPTRL
000244 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000246 50F5               M         movf    TABLAT, W
000248                    M loop
000248 EC?? F???          M         call    WR_DATA         ; write to LCD
00024C 000B               M         tblrd+*                 ; next row in table
00024E 50F5               M         movf    TABLAT, W
000250 E1??               M         bnz     loop
                      00519         
000252 0EFF           00520         movlw   0xff
000254 6ED7           00521         movwf   TMR0H
000256 0EFF           00522         movlw   0xff
000258 6ED6           00523         movwf   TMR0L
00025A 8ED5           00524         bsf     T0CON, TMR0ON       ; turning on timer for scrolling lcd
                      00525 
                      00526 
00025C                00527 HOLD_STANDBY
00025C EC?? F???      00528         call    READ_KEY
                      00529 
                      00530         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000260 0E00               M         movlw   key1                ; poll for mode
000262 6210               M         cpfseq  KEY                 ; check this against key press
000264 EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000268                    M Next
000268 6A89               M         clrf    LATA                ; clear pins before proceeding
00026A 6A8A               M         clrf    LATB
00026C 6A8B               M         clrf    LATC
00026E 6A8C               M         clrf    LATD
000270 EF?? F???          M         goto    COLOUR_TEST
                          M 
000274                    M Exit
000274 0000               M         nop
                      00531         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000276 0E01               M         movlw   key2                ; poll for mode
000278 6210               M         cpfseq  KEY                 ; check this against key press
00027A EF?? F???          M         goto    Exit
                          M 
00027E                    M Next
00027E 6A89               M         clrf    LATA                ; clear pins before proceeding
000280 6A8A               M         clrf    LATB
000282 6A8B               M         clrf    LATC
000284 6A8C               M         clrf    LATD
000286 EF?? F???          M         goto    STEP_TEST
                          M 
00028A                    M Exit
00028A 0000               M         nop
                      00532         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
                          M 
00028C 0E02               M         movlw   key3                ; poll for mode
00028E 6210               M         cpfseq  KEY                 ; check this against key press
000290 EF?? F???          M         goto    Exit
                          M 
000294                    M Next
000294 6A89               M         clrf    LATA                ; clear pins before proceeding
000296 6A8A               M         clrf    LATB
000298 6A8B               M         clrf    LATC
00029A 6A8C               M         clrf    LATD
00029C EF?? F???          M         goto    DC_TEST_CW
                          M 
0002A0                    M Exit
0002A0 0000               M         nop
                      00533         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
0002A2 0E04               M         movlw   key4                ; poll for mode
0002A4 6210               M         cpfseq  KEY                 ; check this against key press
0002A6 EF?? F???          M         goto    Exit
                          M 
0002AA                    M Next
0002AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0002AC 6A8A               M         clrf    LATB
0002AE 6A8B               M         clrf    LATC
0002B0 6A8C               M         clrf    LATD
0002B2 EF?? F???          M         goto    DC_TEST_CCW
                          M 
0002B6                    M Exit
0002B6 0000               M         nop
                      00534         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0002B8 0E03               M         movlw   keyA                ; poll for mode
0002BA 6210               M         cpfseq  KEY                 ; check this against key press
0002BC EF?? F???          M         goto    Exit
                          M 
0002C0                    M Next
0002C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C2 6A8A               M         clrf    LATB
0002C4 6A8B               M         clrf    LATC
0002C6 6A8C               M         clrf    LATD
0002C8 EF?? F???          M         goto    EXECUTION
                          M 
0002CC                    M Exit
0002CC 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00535         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002CE 0E07               M         movlw   keyB                ; poll for mode
0002D0 6210               M         cpfseq  KEY                 ; check this against key press
0002D2 EF?? F???          M         goto    Exit
                          M 
0002D6                    M Next
0002D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0002D8 6A8A               M         clrf    LATB
0002DA 6A8B               M         clrf    LATC
0002DC 6A8C               M         clrf    LATD
0002DE EF?? F???          M         goto    LOG
                          M 
0002E2                    M Exit
0002E2 0000               M         nop
                      00536         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002E4 0E0B               M         movlw   keyC                ; poll for mode
0002E6 6210               M         cpfseq  KEY                 ; check this against key press
0002E8 EF?? F???          M         goto    Exit
                          M 
0002EC                    M Next
0002EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002EE 6A8A               M         clrf    LATB
0002F0 6A8B               M         clrf    LATC
0002F2 6A8C               M         clrf    LATD
0002F4 EF?? F???          M         goto    PERM_LOG
                          M 
0002F8                    M Exit
0002F8 0000               M         nop
                      00537         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002FA 0E0F               M         movlw   keyD                ; poll for mode
0002FC 6210               M         cpfseq  KEY                 ; check this against key press
0002FE EF?? F???          M         goto    Exit
                          M 
000302                    M Next
000302 6A89               M         clrf    LATA                ; clear pins before proceeding
000304 6A8A               M         clrf    LATB
000306 6A8B               M         clrf    LATC
000308 6A8C               M         clrf    LATD
00030A EF?? F???          M         goto    PC_MODE
                          M 
00030E                    M Exit
00030E 0000               M         nop
000310 D???           00538         bra     HOLD_STANDBY
                      00539         
                      00540 ;*******************************************************************************
                      00541 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00542 ;*******************************************************************************
                      00543 
000312                00544 DC_TEST_CW
000312 6A38           00545         clrf    inStandby
000314 0E00           00546         movlw   b'00000000'
000316 6E84           00547         movwf   PORTE
                      00548         Delay50N    delayR, 0x0a   
  0000                    M         local   loop
000318 0E0A               M         movlw   0x0a
00031A 6E1A               M         movwf   delayR
                          M 
00031C                    M loop
00031C EC?? F???          M         call    Delay50ms
000320 2E1A               M         decfsz  delayR
000322 EF?? F???          M         goto    loop
000326                00549 DC_TEST_CW_HOLD
000326 0E01           00550         movlw   b'00000001'
000328 6E84           00551         movwf   PORTE
                      00552 
00032A EC?? F???      00553         call    READ_KEY
                      00554         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00032E 0E0D               M         movlw   key0                ; poll for mode
000330 6210               M         cpfseq  KEY                 ; check this against key press
000332 EF?? F???          M         goto    Exit
                          M 
000336                    M Next
000336 6A89               M         clrf    LATA                ; clear pins before proceeding
000338 6A8A               M         clrf    LATB
00033A 6A8B               M         clrf    LATC
00033C 6A8C               M         clrf    LATD
00033E EF?? F???          M         goto    STANDBY
                          M 
000342                    M Exit
000342 0000               M         nop
000344 D???           00555         bra     DC_TEST_CW_HOLD
                      00556         
000346                00557 DC_TEST_CCW
000346 6A38           00558         clrf    inStandby
000348 0E00           00559         movlw   b'00000000'
00034A 6E84           00560         movwf   PORTE
                      00561         Delay50N    delayR, 0x0a
  0000                    M         local   loop
00034C 0E0A               M         movlw   0x0a
00034E 6E1A               M         movwf   delayR
                          M 
000350                    M loop
000350 EC?? F???          M         call    Delay50ms
000354 2E1A               M         decfsz  delayR
000356 EF?? F???          M         goto    loop
00035A                00562 DC_TEST_CCW_HOLD
00035A 0E02           00563         movlw   b'00000010'
00035C 6E84           00564         movwf   PORTE
                      00565         
00035E EC?? F???      00566         call    READ_KEY
                      00567         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000362 0E0D               M         movlw   key0                ; poll for mode
000364 6210               M         cpfseq  KEY                 ; check this against key press
000366 EF?? F???          M         goto    Exit
                          M 
00036A                    M Next
00036A 6A89               M         clrf    LATA                ; clear pins before proceeding
00036C 6A8A               M         clrf    LATB
00036E 6A8B               M         clrf    LATC
000370 6A8C               M         clrf    LATD
000372 EF?? F???          M         goto    STANDBY
                          M 
000376                    M Exit
000376 0000               M         nop
000378 D???           00568         bra     DC_TEST_CCW_HOLD
                      00569                 
00037A                00570 STEP_TEST
00037A 6A38           00571         clrf    inStandby
00037C 6A32           00572         clrf    COLLECTIONS_COUNT
                      00573         Delay50N    delayR, 0x14
  0000                    M         local   loop
00037E 0E14               M         movlw   0x14
000380 6E1A               M         movwf   delayR
                          M 
000382                    M loop
000382 EC?? F???          M         call    Delay50ms
000386 2E1A               M         decfsz  delayR
000388 EF?? F???          M         goto    loop
                      00574     
00038C                00575 ROTATE_90_TEST                      ; actually 45, but dont care to change label
00038C 0E23           00576         movlw   b'00100011'
00038E 6E80           00577         movwf   PORTA
000390 EC?? F???      00578         call    delay5ms
                      00579         
000394 0E26           00580         movlw   b'00100110'
000396 6E80           00581         movwf   PORTA
000398 EC?? F???      00582         call    delay5ms
                      00583         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00039C 0E2C           00584         movlw   b'00101100'
00039E 6E80           00585         movwf   PORTA
0003A0 EC?? F???      00586         call    delay5ms
                      00587 
0003A4 0E29           00588         movlw   b'00101001'
0003A6 6E80           00589         movwf   PORTA
0003A8 EC?? F???      00590         call    delay5ms
                      00591         
0003AC 2A32           00592         incf    COLLECTIONS_COUNT
0003AE 0E08           00593         movlw   d'8'                ; supposed to be 45 degrees...
0003B0 6232           00594         cpfseq  COLLECTIONS_COUNT
0003B2 D???           00595         bra     ROTATE_90_TEST
                      00596         
0003B4 D???           00597         bra STEP_TEST
                      00598 
0003B6                00599 COLOUR_TEST
0003B6 6A38           00600         clrf    inStandby
                      00601 
0003B8                00602 LOOPING
                      00603         Delay50N delayR, 0x28
  0000                    M         local   loop
0003B8 0E28               M         movlw   0x28
0003BA 6E1A               M         movwf   delayR
                          M 
0003BC                    M loop
0003BC EC?? F???          M         call    Delay50ms
0003C0 2E1A               M         decfsz  delayR
0003C2 EF?? F???          M         goto    loop
0003C6 EC?? F???      00604         call    ClrLCD
0003CA EC?? F???      00605         call    READ_ARDUINO
0003CE 0F30           00606         addlw   0x30
0003D0 EC?? F???      00607         call    WR_DATA
0003D4 D???           00608         bra LOOPING
                      00609 
                      00610 ;*******************************************************************************
                      00611 ; execution mode
                      00612 ;*******************************************************************************
                      00613         
0003D6                00614 EXECUTION
0003D6 9ED5           00615         bcf         T0CON, TMR0ON           ; turning on timer
0003D8 6A38           00616         clrf    inStandby       
0003DA EC?? F???      00617         call        ClearEEPROM_21
                      00618         
                      00619         ; save the starting time
0003DE EC?? F???      00620         call        SAVE_TIME
                      00621                 
                      00622         ; display
0003E2 681E           00623         setf        inExecution
0003E4 EC?? F???      00624         call        ClrLCD
                      00625         Display     Exe1
  0000                    M         local   loop
0003E8 0E??               M         movlw   upper Exe1      ; move table<20:16>
0003EA 6EF8               M         movwf   TBLPTRU
0003EC 0E??               M         movlw   high Exe1       ; move table<15:8>
0003EE 6EF7               M         movwf   TBLPTRH
0003F0 0E??               M         movlw   low Exe1        ; move table<7:0>
0003F2 6EF6               M         movwf   TBLPTRL
0003F4 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
0003F6 50F5               M         movf    TABLAT, W
0003F8                    M loop
0003F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0003FC 000B               M         tblrd+*                 ; next row in table
0003FE 50F5               M         movf    TABLAT, W
000400 E1??               M         bnz     loop
000402 EC?? F???      00626         call        LCD_L2
                      00627         
000406 0EC3           00628         movlw   0xc3
000408 6ED7           00629         movwf   TMR0H
00040A 0E25           00630         movlw   0x25
00040C 6ED6           00631         movwf   TMR0L
                      00632         
00040E 8ED5           00633         bsf         T0CON, TMR0ON           ; turning on timer
                      00634         
                      00635         ; initialize variables
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000410 6A18           00636         clrf        OP_sec
000412 6A19           00637         clrf        OP_INT
000414 6A2D           00638         clrf        ESKA
000416 6A2E           00639         clrf        ESKA_NOCAP
000418 6A2F           00640         clrf        YOP
00041A 6A30           00641         clrf        YOP_NOCAP
00041C 6A31           00642         clrf        TOTAL_BOTTLES
00041E 0E01           00643         movlw       d'1'
000420 6E35           00644         movwf       TRAY_CURRENT
000422 6A34           00645         clrf        TRAY_DELAY
                      00646         
                      00647         ; todo: make sure tray is in position one on reset, add some delay
                      00648         ;       perhaps only do this at the end... 
                      00649         ;       ya okay, but what about emergency stop?
                      00650         
000424 EF?? F???      00651         goto        COLLECTIONS_STEP
                      00652 
000428                00653 COLLECTIONS_STEP
000428 6A32           00654         clrf        COLLECTIONS_COUNT
                      00655 
00042A                00656 ROTATE_90
00042A 0E23           00657         movlw   b'00100011'
00042C 6E80           00658         movwf   PORTA
00042E EC?? F???      00659         call    delay5ms
                      00660 
000432 0E26           00661         movlw   b'00100110'
000434 6E80           00662         movwf   PORTA
000436 EC?? F???      00663         call    delay5ms
                      00664         
00043A 0E2C           00665         movlw   b'00101100'
00043C 6E80           00666         movwf   PORTA
00043E EC?? F???      00667         call    delay5ms
                      00668 
000442 0E29           00669         movlw   b'00101001'
000444 6E80           00670         movwf   PORTA
000446 EC?? F???      00671         call    delay5ms
                      00672         
00044A 2A32           00673         incf    COLLECTIONS_COUNT
00044C 0E78           00674         movlw   d'120'
00044E 6232           00675         cpfseq  COLLECTIONS_COUNT
000450 D???           00676         bra     ROTATE_90
                      00677         
000452 D???           00678         bra DETECTIONS
                      00679         
000454                00680 DETECTIONS
                      00681 
                      00682 ;       movlw   d'1000'
                      00683 ;       movwf   TRAY_DELAY
                      00684         
                      00685         ; reading data from arduino 
                      00686         ; expect:   1 for eska cap
                      00687         ;           2 for eska no cap
                      00688         ;           3 for yop cap
                      00689         ;           4 for yop no cap
                      00690         ;           5 for no bottle, get outta here
000454 EC?? F???      00691         call    READ_ARDUINO
                      00692         ;movlw  d'2'                    ; testing!!!
000458 6E2C           00693         movwf   DETECTION_VAL
                      00694         
                      00695         ; first check if there was a bottle detected, if go to COLLECTIONS_STEP
00045A 0E05           00696         movlw   d'5'
00045C 5C2C           00697         subwf   DETECTION_VAL, 0
00045E E0??           00698         bz      INC_YOPNOCAP
                      00699         
                      00700         ; okay we have a bottle, first increment total count then see what it is
000460 2A31           00701         incf    TOTAL_BOTTLES
                      00702         
                      00703         ; yop no cap
000462 0E04           00704         movlw   d'4'
000464 5C2C           00705         subwf   DETECTION_VAL, 0
000466 E0??           00706         bz      INC_YOPNOCAP
                      00707         
                      00708         ; yop with cap
000468 0E03           00709         movlw   d'3'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00046A 5C2C           00710         subwf   DETECTION_VAL, 0
00046C E0??           00711         bz      INC_YOPCAP
                      00712         
                      00713         ; eska no cap
00046E 0E02           00714         movlw   d'2'
000470 5C2C           00715         subwf   DETECTION_VAL, 0
000472 E0??           00716         bz      INC_ESKANOCAP
                      00717         
                      00718         ; eksa with cap
000474 0E01           00719         movlw   d'1'
000476 5C2C           00720         subwf   DETECTION_VAL, 0
000478 E0??           00721         bz      INC_ESKACAP
                      00722         
00047A D???           00723         bra     DETECTIONS
                      00724         
00047C                00725 INC_YOPNOCAP
00047C 2A30           00726         incf    YOP_NOCAP
                      00727 
                      00728         ; determine what position to rotate the tray to: brute force, but w/e
00047E 0E04           00729         movlw   d'4'
000480 6E36           00730         movwf   TRAY_GOTO               ; new position will be 4
000482 5C35           00731         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000484 E0??           00732         bz      TRAY_STEP_END
                      00733 
000486 0E0A           00734         movlw   0x0a
000488 CFE8 F033      00735         movff   WREG, TRAY_COUNT
00048C 0E03           00736         movlw   d'3'
00048E 5C35           00737         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
000490 E0??           00738         bz      TRAY_STEP_CW            
                      00739 
000492 0E14           00740         movlw   0x14
000494 CFE8 F033      00741         movff   WREG, TRAY_COUNT
000498 0E02           00742         movlw   d'2'
00049A 5C35           00743         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
00049C E0??           00744         bz      TRAY_STEP_CW
                      00745 
00049E 0E1E           00746         movlw   0x1e
0004A0 CFE8 F033      00747         movff   WREG, TRAY_COUNT
0004A4 0E01           00748         movlw   d'1'
0004A6 5C35           00749         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
0004A8 E0??           00750         bz      TRAY_STEP_CW
                      00751         
0004AA                00752 INC_YOPCAP
0004AA 2A2F           00753         incf    YOP
                      00754         
                      00755         ; determine what position to rotate the tray to: brute force, but w/e
0004AC 0E03           00756         movlw   d'3'
0004AE 6E36           00757         movwf   TRAY_GOTO
0004B0 5C35           00758         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004B2 E0??           00759         bz      TRAY_STEP_END
                      00760         
0004B4 0E0A           00761         movlw   0x0a
0004B6 CFE8 F033      00762         movff   WREG, TRAY_COUNT
0004BA 0E04           00763         movlw   d'4'
0004BC 5C35           00764         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
0004BE E0??           00765         bz      TRAY_STEP_CCW   
                      00766 
0004C0 0E0A           00767         movlw   0x0a
0004C2 CFE8 F033      00768         movff   WREG, TRAY_COUNT
0004C6 0E02           00769         movlw   d'2'
0004C8 5C35           00770         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
0004CA E0??           00771         bz      TRAY_STEP_CW
                      00772         
0004CC 0E14           00773         movlw   0x14
0004CE CFE8 F033      00774         movff   WREG, TRAY_COUNT
0004D2 0E01           00775         movlw   d'1'
0004D4 5C35           00776         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
0004D6 E0??           00777         bz      TRAY_STEP_CW
                      00778         
0004D8                00779 INC_ESKANOCAP
0004D8 2A2E           00780         incf    ESKA_NOCAP
                      00781         
                      00782         ; determine what position to rotate the tray to: brute force, but w/e
0004DA 0E02           00783         movlw   d'2'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004DC 6E36           00784         movwf   TRAY_GOTO
0004DE 5C35           00785         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004E0 E0??           00786         bz      TRAY_STEP_END
                      00787 
0004E2 0E14           00788         movlw   0x14
0004E4 CFE8 F033      00789         movff   WREG, TRAY_COUNT
0004E8 0E04           00790         movlw   d'4'
0004EA 5C35           00791         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
0004EC E0??           00792         bz      TRAY_STEP_CCW   
                      00793 
0004EE 0E0A           00794         movlw   0x0a
0004F0 CFE8 F033      00795         movff   WREG, TRAY_COUNT
0004F4 0E03           00796         movlw   d'3'
0004F6 5C35           00797         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
0004F8 E0??           00798         bz      TRAY_STEP_CCW
                      00799         
0004FA 0E0A           00800         movlw   0x0a
0004FC CFE8 F033      00801         movff   WREG, TRAY_COUNT
000500 0E01           00802         movlw   d'1'
000502 5C35           00803         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
000504 E0??           00804         bz      TRAY_STEP_CW
                      00805         
000506                00806 INC_ESKACAP
000506 2A2D           00807         incf    ESKA
                      00808         
                      00809         ; determine what position to rotate the tray to: brute force, but w/e
000508 0E01           00810         movlw   d'1'
00050A 6E36           00811         movwf   TRAY_GOTO
00050C 5C35           00812         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00050E E0??           00813         bz      TRAY_STEP_END
                      00814         
000510 0E1E           00815         movlw   0x1e
000512 CFE8 F033      00816         movff   WREG, TRAY_COUNT
000516 0E04           00817         movlw   d'4'
000518 5C35           00818         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
00051A E0??           00819         bz      TRAY_STEP_CCW
                      00820         
00051C 0E14           00821         movlw   0x14
00051E CFE8 F033      00822         movff   WREG, TRAY_COUNT
000522 0E03           00823         movlw   d'3'
000524 5C35           00824         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
000526 E0??           00825         bz      TRAY_STEP_CCW
                      00826 
000528 0E0A           00827         movlw   0x0a
00052A CFE8 F033      00828         movff   WREG, TRAY_COUNT        
00052E 0E02           00829         movlw   d'2'
000530 5C35           00830         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
000532 E0??           00831         bz      TRAY_STEP_CCW
                      00832 
000534                00833 TRAY_STEP_CW
000534 0E00           00834         movlw   b'00000000'
000536 6E84           00835         movwf   PORTE
                      00836 
000538                00837 TRAY_CW_HOLD
000538 0E01           00838         movlw   b'00000001'
00053A 6E84           00839         movwf   PORTE
                      00840 
                      00841         Delay50Nf    delayR, TRAY_COUNT
  0000                    M         local   loop
00053C C033 F01A          M         movff   TRAY_COUNT, delayR
                          M 
000540                    M loop
000540 EC?? F???          M         call    Delay50ms
000544 2E1A               M         decfsz  delayR
000546 EF?? F???          M         goto    loop
00054A D???           00842         bra     TRAY_STEP_END
                      00843         
00054C                00844 TRAY_STEP_CCW
00054C 0E00           00845         movlw   b'00000000'
00054E 6E84           00846         movwf   PORTE
                      00847         
000550                00848 TRAY_CCW_HOLD
000550 0E02           00849         movlw   b'00000010'
000552 6E84           00850         movwf   PORTE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00851 
                      00852         Delay50Nf    delayR, TRAY_COUNT
  0000                    M         local   loop
000554 C033 F01A          M         movff   TRAY_COUNT, delayR
                          M 
000558                    M loop
000558 EC?? F???          M         call    Delay50ms
00055C 2E1A               M         decfsz  delayR
00055E EF?? F???          M         goto    loop
000562 D???           00853         bra     TRAY_STEP_END
                      00854         
000564                00855 TRAY_STEP_END
000564 C036 F035      00856         movff   TRAY_GOTO, TRAY_CURRENT
000568 0E00           00857         movlw   b'00000000'
00056A 6E84           00858         movwf   PORTE
                      00859         
00056C 0E00           00860         movlw   0x00
00056E 621E           00861         cpfseq  inExecution
000570 EF?? F???      00862         goto    EXIT_EXE_SAVE
                      00863         
000574                00864 CHECK_DONE
                      00865         
                      00866         ; Challenging:  logic to figure out when the machine is done sorting 
                      00867         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00868         
                      00869         ; NUMBER: 
                      00870         ; if the total bottle count is 10, then we are done (most basic end condition)
000574 6A37           00871         clrf    STOP_CONDITION  ; denote regular stop, saved in eeprom as 0
000576 0E09           00872         movlw   d'9'
000578 5C31           00873         subwf   TOTAL_BOTTLES, 0
00057A E0??           00874         bz      EXIT_EXE
                      00875         
                      00876         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00877         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00878         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00879         ; 150s then stop.
00057C 3818           00880         swapf   OP_sec, 0       ; 100's seconds
00057E 6E17           00881         movwf   temp
000580 0E0F           00882         movlw   0x0f
000582 1617           00883         andwf   temp
000584 0E00           00884         movlw   d'0'
000586 6417           00885         cpfsgt  temp
000588 EF?? F???      00886         goto    COLLECTIONS_STEP; if 100 second, continue to check for 150s then 120s.
                      00887 
                      00888         ; MAX
00058C 0E02           00889         movlw   d'2'
00058E 6E37           00890         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
000590 C018 F017      00891         movff   OP_sec, temp    ; 10's seconds
000594 0E0F           00892         movlw   0x0f
000596 1617           00893         andwf   temp
000598 0E05           00894         movlw   d'5'
00059A 5C17           00895         subwf   temp, 0
00059C E0??           00896         bz      EXIT_EXE        ; if 150 second, terminate
                      00897         
                      00898         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00899         ; qualified run has at least 4 bottles, with 1 of each different kind
00059E 0E03           00900         movlw   d'3'
0005A0 6431           00901         cpfsgt  TOTAL_BOTTLES
0005A2 EF?? F???      00902         goto    COLLECTIONS_STEP
                      00903 
0005A6 0E00           00904         movlw   d'0'
0005A8 6430           00905         cpfsgt  YOP_NOCAP, 0
0005AA EF?? F???      00906         goto    COLLECTIONS_STEP
                      00907         
0005AE 0E00           00908         movlw   d'0'
0005B0 642F           00909         cpfsgt  YOP, 0
0005B2 EF?? F???      00910         goto    COLLECTIONS_STEP
                      00911         
0005B6 0E00           00912         movlw   d'0'
0005B8 642E           00913         cpfsgt  ESKA_NOCAP, 0
0005BA EF?? F???      00914         goto    COLLECTIONS_STEP
                      00915         
0005BE 0E00           00916         movlw   d'0'
0005C0 642D           00917         cpfsgt  ESKA, 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005C2 EF?? F???      00918         goto    COLLECTIONS_STEP
                      00919         
                      00920         ; finally, if we get here then consider the termination optimized.
0005C6 0E03           00921         movlw   d'3'
0005C8 6E37           00922         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
0005CA EF?? F???      00923         goto    EXIT_EXE
                      00924         
0005CE                00925 EXIT_EXE        
                      00926         ; stop timer and save the execution time to eeprom
0005CE 9ED5           00927         bcf     T0CON, TMR0ON
0005D0 EC?? F???      00928         call    SAVE_EXE_TIME
                      00929         
                      00930         ; clear inExecution flag to stop '*' interrupts
0005D4 6A1E           00931         clrf    inExecution
                      00932         
                      00933         ; get the tray ready for next the next run
0005D6 0E1E           00934         movlw   0x1e
0005D8 CFE8 F033      00935         movff   WREG, TRAY_COUNT
0005DC 0E04           00936         movlw   d'4'
0005DE 5C35           00937         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spot over CCW
0005E0 E0??           00938         bz      TRAY_STEP_CCW           
                      00939         
0005E2 0E14           00940         movlw   0x14
0005E4 CFE8 F033      00941         movff   WREG, TRAY_COUNT
0005E8 0E03           00942         movlw   d'3'
0005EA 5C35           00943         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CCW
0005EC E0??           00944         bz      TRAY_STEP_CCW
                      00945         
0005EE 0E0A           00946         movlw   0x0a
0005F0 CFE8 F033      00947         movff   WREG, TRAY_COUNT
0005F4 0E02           00948         movlw   d'2'
0005F6 5C35           00949         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
0005F8 E0??           00950         bz      TRAY_STEP_CCW
                      00951 
0005FA                00952 EXIT_EXE_SAVE
0005FA EC?? F???      00953         call        ClrLCD
                      00954         Display     SAVE
  0000                    M         local   loop
0005FE 0E??               M         movlw   upper SAVE      ; move table<20:16>
000600 6EF8               M         movwf   TBLPTRU
000602 0E??               M         movlw   high SAVE       ; move table<15:8>
000604 6EF7               M         movwf   TBLPTRH
000606 0E??               M         movlw   low SAVE        ; move table<7:0>
000608 6EF6               M         movwf   TBLPTRL
00060A 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
00060C 50F5               M         movf    TABLAT, W
00060E                    M loop
00060E EC?? F???          M         call    WR_DATA         ; write to LCD
000612 000B               M         tblrd+*                 ; next row in table
000614 50F5               M         movf    TABLAT, W
000616 E1??               M         bnz     loop
000618 EC?? F???      00955         call        SaveData
00061C EF?? F???      00956         goto        LOG
                      00957 
                      00958 ;*******************************************************************************
                      00959 ; sorting statistics log mode
                      00960 ;*******************************************************************************
                      00961         
000620                00962 LOG
000620 6A38           00963         clrf    inStandby
000622 EC?? F???      00964         call    ClrLCD
                      00965         Display Log1
  0000                    M         local   loop
000626 0E??               M         movlw   upper Log1      ; move table<20:16>
000628 6EF8               M         movwf   TBLPTRU
00062A 0E??               M         movlw   high Log1       ; move table<15:8>
00062C 6EF7               M         movwf   TBLPTRH
00062E 0E??               M         movlw   low Log1        ; move table<7:0>
000630 6EF6               M         movwf   TBLPTRL
000632 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000634 50F5               M         movf    TABLAT, W
000636                    M loop
000636 EC?? F???          M         call    WR_DATA         ; write to LCD
00063A 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00063C 50F5               M         movf    TABLAT, W
00063E E1??               M         bnz     loop
                      00966 
                      00967         ; display most recent run data
000640 0E0A           00968         movlw   d'10'
000642 6E21           00969         movwf   L_EE
000644 EC?? F???      00970         call    DisplayExeTime
                      00971 
000648 EC?? F???      00972         call    LCD_L2
00064C 0E0D           00973         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
00064E 6E21           00974         movwf   L_EE
000650 EC?? F???      00975         call    DispOpSort
                      00976 
000654                00977 HOLD_LOG
000654 EC?? F???      00978         call    READ_KEY
                      00979         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000658 0E07               M         movlw   keyB                ; poll for mode
00065A 6210               M         cpfseq  KEY                 ; check this against key press
00065C EF?? F???          M         goto    Exit
                          M 
000660                    M Next
000660 6A89               M         clrf    LATA                ; clear pins before proceeding
000662 6A8A               M         clrf    LATB
000664 6A8B               M         clrf    LATC
000666 6A8C               M         clrf    LATD
000668 EF?? F???          M         goto    LOG_INFO
                          M 
00066C                    M Exit
00066C 0000               M         nop
                      00980         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00066E 0E0D               M         movlw   key0                ; poll for mode
000670 6210               M         cpfseq  KEY                 ; check this against key press
000672 EF?? F???          M         goto    Exit
                          M 
000676                    M Next
000676 6A89               M         clrf    LATA                ; clear pins before proceeding
000678 6A8A               M         clrf    LATB
00067A 6A8B               M         clrf    LATC
00067C 6A8C               M         clrf    LATD
00067E EF?? F???          M         goto    STANDBY
                          M 
000682                    M Exit
000682 0000               M         nop
000684 D???           00981         bra     HOLD_LOG
                      00982 
000686                00983 LOG_INFO
000686 EC?? F???      00984         call    ClrLCD
00068A 6A21           00985         clrf    L_EE
00068C EC?? F???      00986         call    DispOpRTC
                      00987         
000690 EC?? F???      00988         call    LCD_L2
                      00989         Display LogInfo2
  0000                    M         local   loop
000694 0E??               M         movlw   upper LogInfo2  ; move table<20:16>
000696 6EF8               M         movwf   TBLPTRU
000698 0E??               M         movlw   high LogInfo2   ; move table<15:8>
00069A 6EF7               M         movwf   TBLPTRH
00069C 0E??               M         movlw   low LogInfo2    ; move table<7:0>
00069E 6EF6               M         movwf   TBLPTRL
0006A0 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
0006A2 50F5               M         movf    TABLAT, W
0006A4                    M loop
0006A4 EC?? F???          M         call    WR_DATA         ; write to LCD
0006A8 000B               M         tblrd+*                 ; next row in table
0006AA 50F5               M         movf    TABLAT, W
0006AC E1??               M         bnz     loop
0006AE 6A20           00990         clrf    H_EE
0006B0 6A21           00991         clrf    L_EE
0006B2                00992 HOLD_LOG_INFO
0006B2 EC?? F???      00993         call    READ_KEY
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00994         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0006B6 0E0D               M         movlw   key0                ; poll for mode
0006B8 6210               M         cpfseq  KEY                 ; check this against key press
0006BA EF?? F???          M         goto    Exit
                          M 
0006BE                    M Next
0006BE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006C0 6A8A               M         clrf    LATB
0006C2 6A8B               M         clrf    LATC
0006C4 6A8C               M         clrf    LATD
0006C6 EF?? F???          M         goto    LOG
                          M 
0006CA                    M Exit
0006CA 0000               M         nop
0006CC D???           00995         bra     HOLD_LOG
                      00996         
                      00997 ;*******************************************************************************
                      00998 ; permanent logs
                      00999 ;*******************************************************************************
                      01000 
0006CE                01001 PERM_LOG
0006CE 6A38           01002         clrf    inStandby
0006D0 EC?? F???      01003         call    ClrLCD
                      01004         Display PermLog1
  0000                    M         local   loop
0006D4 0E??               M         movlw   upper PermLog1  ; move table<20:16>
0006D6 6EF8               M         movwf   TBLPTRU
0006D8 0E??               M         movlw   high PermLog1   ; move table<15:8>
0006DA 6EF7               M         movwf   TBLPTRH
0006DC 0E??               M         movlw   low PermLog1    ; move table<7:0>
0006DE 6EF6               M         movwf   TBLPTRL
0006E0 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
0006E2 50F5               M         movf    TABLAT, W
0006E4                    M loop
0006E4 EC?? F???          M         call    WR_DATA         ; write to LCD
0006E8 000B               M         tblrd+*                 ; next row in table
0006EA 50F5               M         movf    TABLAT, W
0006EC E1??               M         bnz     loop
0006EE EC?? F???      01005         call    LCD_L2
                      01006         Display PermLog2
  0000                    M         local   loop
0006F2 0E??               M         movlw   upper PermLog2  ; move table<20:16>
0006F4 6EF8               M         movwf   TBLPTRU
0006F6 0E??               M         movlw   high PermLog2   ; move table<15:8>
0006F8 6EF7               M         movwf   TBLPTRH
0006FA 0E??               M         movlw   low PermLog2    ; move table<7:0>
0006FC 6EF6               M         movwf   TBLPTRL
0006FE 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000700 50F5               M         movf    TABLAT, W
000702                    M loop
000702 EC?? F???          M         call    WR_DATA         ; write to LCD
000706 000B               M         tblrd+*                 ; next row in table
000708 50F5               M         movf    TABLAT, W
00070A E1??               M         bnz     loop
                      01007         
00070C                01008 HOLD_PERM_LOG
00070C EC?? F???      01009         call    READ_KEY
                      01010         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000710 0E0D               M         movlw   key0                ; poll for mode
000712 6210               M         cpfseq  KEY                 ; check this against key press
000714 EF?? F???          M         goto    Exit
                          M 
000718                    M Next
000718 6A89               M         clrf    LATA                ; clear pins before proceeding
00071A 6A8A               M         clrf    LATB
00071C 6A8B               M         clrf    LATC
00071E 6A8C               M         clrf    LATD
000720 EF?? F???          M         goto    STANDBY
                          M 
000724                    M Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000724 0000               M         nop
                      01011         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000726 0E00               M         movlw   key1                ; poll for mode
000728 6210               M         cpfseq  KEY                 ; check this against key press
00072A EF?? F???          M         goto    Exit
                          M 
00072E                    M Next
00072E 6A89               M         clrf    LATA                ; clear pins before proceeding
000730 6A8A               M         clrf    LATB
000732 6A8B               M         clrf    LATC
000734 6A8C               M         clrf    LATD
000736 EF?? F???          M         goto    PLOG
                          M 
00073A                    M Exit
00073A 0000               M         nop
                      01012         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00073C 0E01               M         movlw   key2                ; poll for mode
00073E 6210               M         cpfseq  KEY                 ; check this against key press
000740 EF?? F???          M         goto    Exit
                          M 
000744                    M Next
000744 6A89               M         clrf    LATA                ; clear pins before proceeding
000746 6A8A               M         clrf    LATB
000748 6A8B               M         clrf    LATC
00074A 6A8C               M         clrf    LATD
00074C EF?? F???          M         goto    PLOG
                          M 
000750                    M Exit
000750 0000               M         nop
                      01013         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000752 0E02               M         movlw   key3                ; poll for mode
000754 6210               M         cpfseq  KEY                 ; check this against key press
000756 EF?? F???          M         goto    Exit
                          M 
00075A                    M Next
00075A 6A89               M         clrf    LATA                ; clear pins before proceeding
00075C 6A8A               M         clrf    LATB
00075E 6A8B               M         clrf    LATC
000760 6A8C               M         clrf    LATD
000762 EF?? F???          M         goto    PLOG
                          M 
000766                    M Exit
000766 0000               M         nop
                      01014         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000768 0E04               M         movlw   key4                ; poll for mode
00076A 6210               M         cpfseq  KEY                 ; check this against key press
00076C EF?? F???          M         goto    Exit
                          M 
000770                    M Next
000770 6A89               M         clrf    LATA                ; clear pins before proceeding
000772 6A8A               M         clrf    LATB
000774 6A8B               M         clrf    LATC
000776 6A8C               M         clrf    LATD
000778 EF?? F???          M         goto    PLOG
                          M 
00077C                    M Exit
00077C 0000               M         nop
                      01015         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
00077E 0E05               M         movlw   key5                ; poll for mode
000780 6210               M         cpfseq  KEY                 ; check this against key press
000782 EF?? F???          M         goto    Exit
                          M 
000786                    M Next
000786 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000788 6A8A               M         clrf    LATB
00078A 6A8B               M         clrf    LATC
00078C 6A8C               M         clrf    LATD
00078E EF?? F???          M         goto    PLOG
                          M 
000792                    M Exit
000792 0000               M         nop
                      01016         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000794 0E06               M         movlw   key6                ; poll for mode
000796 6210               M         cpfseq  KEY                 ; check this against key press
000798 EF?? F???          M         goto    Exit
                          M 
00079C                    M Next
00079C 6A89               M         clrf    LATA                ; clear pins before proceeding
00079E 6A8A               M         clrf    LATB
0007A0 6A8B               M         clrf    LATC
0007A2 6A8C               M         clrf    LATD
0007A4 EF?? F???          M         goto    PLOG
                          M 
0007A8                    M Exit
0007A8 0000               M         nop
                      01017         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0007AA 0E08               M         movlw   key7                ; poll for mode
0007AC 6210               M         cpfseq  KEY                 ; check this against key press
0007AE EF?? F???          M         goto    Exit
                          M 
0007B2                    M Next
0007B2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007B4 6A8A               M         clrf    LATB
0007B6 6A8B               M         clrf    LATC
0007B8 6A8C               M         clrf    LATD
0007BA EF?? F???          M         goto    PLOG
                          M 
0007BE                    M Exit
0007BE 0000               M         nop
                      01018         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0007C0 0E09               M         movlw   key8                ; poll for mode
0007C2 6210               M         cpfseq  KEY                 ; check this against key press
0007C4 EF?? F???          M         goto    Exit
                          M 
0007C8                    M Next
0007C8 6A89               M         clrf    LATA                ; clear pins before proceeding
0007CA 6A8A               M         clrf    LATB
0007CC 6A8B               M         clrf    LATC
0007CE 6A8C               M         clrf    LATD
0007D0 EF?? F???          M         goto    PLOG
                          M 
0007D4                    M Exit
0007D4 0000               M         nop
                      01019         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0007D6 0E0A               M         movlw   key9                ; poll for mode
0007D8 6210               M         cpfseq  KEY                 ; check this against key press
0007DA EF?? F???          M         goto    Exit
                          M 
0007DE                    M Next
0007DE 6A89               M         clrf    LATA                ; clear pins before proceeding
0007E0 6A8A               M         clrf    LATB
0007E2 6A8B               M         clrf    LATC
0007E4 6A8C               M         clrf    LATD
0007E6 EF?? F???          M         goto    PLOG
                          M 
0007EA                    M Exit
0007EA 0000               M         nop
0007EC D???           01020         bra HOLD_PERM_LOG
                      01021         
0007EE                01022 PLOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007EE EC?? F???      01023         call    ClrLCD
                      01024         Display PermLog1
  0000                    M         local   loop
0007F2 0E??               M         movlw   upper PermLog1  ; move table<20:16>
0007F4 6EF8               M         movwf   TBLPTRU
0007F6 0E??               M         movlw   high PermLog1   ; move table<15:8>
0007F8 6EF7               M         movwf   TBLPTRH
0007FA 0E??               M         movlw   low PermLog1    ; move table<7:0>
0007FC 6EF6               M         movwf   TBLPTRL
0007FE 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000800 50F5               M         movf    TABLAT, W
000802                    M loop
000802 EC?? F???          M         call    WR_DATA         ; write to LCD
000806 000B               M         tblrd+*                 ; next row in table
000808 50F5               M         movf    TABLAT, W
00080A E1??               M         bnz     loop
                      01025         
                      01026         ; find the key press value
00080C C010 FFE8      01027         movff   KEY, WREG
000810 2AE8           01028         incf    WREG        ; W = KEY+1
000812 6E17           01029         movwf   temp
                      01030         
000814 42E8           01031         rrncf   WREG        ; division by 4
000816 9EE8           01032         bcf     WREG, 7     ; clear last bit, overflow from rotate
000818 42E8           01033         rrncf   WREG        
00081A 9EE8           01034         bcf     WREG, 7
00081C 5E17           01035         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00081E C017 FFE8      01036         movff   temp, WREG
000822 C017 F011      01037         movff   temp, temp_KEY
000826 0D15           01038         mullw   d'21'       ; indexed as mutliples of 21
                      01039 
000828                01040 displayNum
000828 C011 FFE8      01041         movff   temp_KEY, WREG
00082C 0F30           01042         addlw   0x30
00082E EC?? F???      01043         call    WR_DATA
000832 0E3A           01044         movlw   ":"
000834 EC?? F???      01045         call    WR_DATA
000838 0E20           01046         movlw   " "
00083A EC?? F???      01047         call    WR_DATA
                      01048         
00083E CFF3 F021      01049         movff   PRODL, L_EE
000842 0E00           01050         movlw   d'0'
000844 2621           01051         addwf   L_EE
                      01052         READEE  OP_sec, H_EE, L_EE
000846 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00084A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00084E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000850 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000852 80A6               M         bsf     EECON1, RD          ; read EEPROM
000854 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000858 2A21           01053         incf    L_EE
                      01054         READEE  OP_INT, H_EE, L_EE
00085A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00085E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000862 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000864 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000866 80A6               M         bsf     EECON1, RD          ; read EEPROM
000868 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00086C 2A21           01055         incf    L_EE
00086E EC?? F???      01056         call    DisplayExeTime
000872 CFF3 F021      01057         movff   PRODL, L_EE
                      01058         
                      01059         ; reset eeprom to beginning
000876 EC?? F???      01060         call    LCD_L2
00087A CFF3 F021      01061         movff   PRODL, L_EE
00087E EC?? F???      01062         call    DispOpRTC
                      01063         
000882                01064 HOLD_PLOG
000882 EC?? F???      01065         call    READ_KEY
                      01066         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
000886 0E03               M         movlw   keyA                ; poll for mode
000888 6210               M         cpfseq  KEY                 ; check this against key press
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00088A EF?? F???          M         goto    Exit
                          M 
00088E                    M Next
00088E 6A89               M         clrf    LATA                ; clear pins before proceeding
000890 6A8A               M         clrf    LATB
000892 6A8B               M         clrf    LATC
000894 6A8C               M         clrf    LATD
000896 EF?? F???          M         goto    PLOG_DETAILS
                          M 
00089A                    M Exit
00089A 0000               M         nop
                      01067         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00089C 0E0D               M         movlw   key0                ; poll for mode
00089E 6210               M         cpfseq  KEY                 ; check this against key press
0008A0 EF?? F???          M         goto    Exit
                          M 
0008A4                    M Next
0008A4 6A89               M         clrf    LATA                ; clear pins before proceeding
0008A6 6A8A               M         clrf    LATB
0008A8 6A8B               M         clrf    LATC
0008AA 6A8C               M         clrf    LATD
0008AC EF?? F???          M         goto    PERM_LOG
                          M 
0008B0                    M Exit
0008B0 0000               M         nop
0008B2 D???           01068         bra HOLD_PLOG
                      01069         
0008B4                01070 PLOG_DETAILS
0008B4 EC?? F???      01071         call    ClrLCD
                      01072         
                      01073         Display Log1
  0000                    M         local   loop
0008B8 0E??               M         movlw   upper Log1      ; move table<20:16>
0008BA 6EF8               M         movwf   TBLPTRU
0008BC 0E??               M         movlw   high Log1       ; move table<15:8>
0008BE 6EF7               M         movwf   TBLPTRH
0008C0 0E??               M         movlw   low Log1        ; move table<7:0>
0008C2 6EF6               M         movwf   TBLPTRL
0008C4 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
0008C6 50F5               M         movf    TABLAT, W
0008C8                    M loop
0008C8 EC?? F???          M         call    WR_DATA         ; write to LCD
0008CC 000B               M         tblrd+*                 ; next row in table
0008CE 50F5               M         movf    TABLAT, W
0008D0 E1??               M         bnz     loop
0008D2 EC?? F???      01074         call    DisplayExeTime
                      01075         
0008D6 EC?? F???      01076         call    LCD_L2
0008DA EC?? F???      01077         call    DispOpSort
                      01078         
0008DE                01079 HOLD_PLOG_DETAILS
0008DE EC?? F???      01080         call    READ_KEY
                      01081         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0008E2 0E0D               M         movlw   key0                ; poll for mode
0008E4 6210               M         cpfseq  KEY                 ; check this against key press
0008E6 EF?? F???          M         goto    Exit
                          M 
0008EA                    M Next
0008EA 6A89               M         clrf    LATA                ; clear pins before proceeding
0008EC 6A8A               M         clrf    LATB
0008EE 6A8B               M         clrf    LATC
0008F0 6A8C               M         clrf    LATD
0008F2 EF?? F???          M         goto    PERM_LOG
                          M 
0008F6                    M Exit
0008F6 0000               M         nop
0008F8 D???           01082         bra HOLD_PLOG_DETAILS
                      01083         
                      01084 ;*******************************************************************************
                      01085 ; pc interface
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01086 ;*******************************************************************************
                      01087 
0008FA                01088 PC_MODE
0008FA 6A38           01089         clrf    inStandby
0008FC EC?? F???      01090         call    ClrLCD
                      01091         Display PC1
  0000                    M         local   loop
000900 0E??               M         movlw   upper PC1       ; move table<20:16>
000902 6EF8               M         movwf   TBLPTRU
000904 0E??               M         movlw   high PC1        ; move table<15:8>
000906 6EF7               M         movwf   TBLPTRH
000908 0E??               M         movlw   low PC1         ; move table<7:0>
00090A 6EF6               M         movwf   TBLPTRL
00090C 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
00090E 50F5               M         movf    TABLAT, W
000910                    M loop
000910 EC?? F???          M         call    WR_DATA         ; write to LCD
000914 000B               M         tblrd+*                 ; next row in table
000916 50F5               M         movf    TABLAT, W
000918 E1??               M         bnz     loop
00091A EC?? F???      01092         call    LCD_L2
                      01093         Display PC2
  0000                    M         local   loop
00091E 0E??               M         movlw   upper PC2       ; move table<20:16>
000920 6EF8               M         movwf   TBLPTRU
000922 0E??               M         movlw   high PC2        ; move table<15:8>
000924 6EF7               M         movwf   TBLPTRH
000926 0E??               M         movlw   low PC2         ; move table<7:0>
000928 6EF6               M         movwf   TBLPTRL
00092A 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
00092C 50F5               M         movf    TABLAT, W
00092E                    M loop
00092E EC?? F???          M         call    WR_DATA         ; write to LCD
000932 000B               M         tblrd+*                 ; next row in table
000934 50F5               M         movf    TABLAT, W
000936 E1??               M         bnz     loop
000938 CFF9 F029      01094         movff   PCL, PC_PCL
00093C CFFA F02A      01095         movff   PCLATH, PC_PCLATH
000940 CFFB F02B      01096         movff   PCLATU, PC_PCLATU
                      01097         
000944                01098 HOLD_PC
000944 EC?? F???      01099         call    READ_KEY
                      01100         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000948 0E0D               M         movlw   key0                ; poll for mode
00094A 6210               M         cpfseq  KEY                 ; check this against key press
00094C EF?? F???          M         goto    Exit
                          M 
000950                    M Next
000950 6A89               M         clrf    LATA                ; clear pins before proceeding
000952 6A8A               M         clrf    LATB
000954 6A8B               M         clrf    LATC
000956 6A8C               M         clrf    LATD
000958 EF?? F???          M         goto    STANDBY
                          M 
00095C                    M Exit
00095C 0000               M         nop
                      01101         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
00095E 0E0E               M         movlw   keyH                ; poll for mode
000960 6210               M         cpfseq  KEY                 ; check this against key press
000962 EF?? F???          M         goto    Exit
                          M 
000966                    M Next
000966 6A89               M         clrf    LATA                ; clear pins before proceeding
000968 6A8A               M         clrf    LATB
00096A 6A8B               M         clrf    LATC
00096C 6A8C               M         clrf    LATD
00096E EF?? F???          M         goto    PC_TRANSFER
                          M 
000972                    M Exit
000972 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000974 D???           01102         bra     HOLD_PC
                      01103 
000976                01104 PC_TRANSFER
000976 6828           01105         setf    transferring
000978 EC?? F???      01106         call    ClrLCD
                      01107         Display PCTransfer
  0000                    M         local   loop
00097C 0E??               M         movlw   upper PCTransfer ; move table<20:16>
00097E 6EF8               M         movwf   TBLPTRU
000980 0E??               M         movlw   high PCTransfer ; move table<15:8>
000982 6EF7               M         movwf   TBLPTRH
000984 0E??               M         movlw   low PCTransfer  ; move table<7:0>
000986 6EF6               M         movwf   TBLPTRL
000988 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
00098A 50F5               M         movf    TABLAT, W
00098C                    M loop
00098C EC?? F???          M         call    WR_DATA         ; write to LCD
000990 000B               M         tblrd+*                 ; next row in table
000992 50F5               M         movf    TABLAT, W
000994 E1??               M         bnz     loop
000996 EC?? F???      01108         call    DataUSART
00099A 6A28           01109         clrf    transferring
00099C EF?? F???      01110         goto    STANDBY
                      01111         
                      01112 ;*******************************************************************************
                      01113 ; subroutines
                      01114 ;*******************************************************************************
                      01115 
0009A0                01116 SaveData
0009A0 C02D FFE8      01117         movff       ESKA, WREG
0009A4 0F30           01118         addlw       0x30
                      01119         WriteEE     WREG, H_EE, L_EE
0009A6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009AA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009AE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009B2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009B4 D???               M         bra     $-2
                          M 
0009B6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009B8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009BA 84A6               M         bsf     EECON1, WREN        ; enable write
0009BC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009BE 98A1               M         bcf     PIR2, EEIF
                          M 
0009C0 0E55               M         movlw   0x55
0009C2 6EA7               M         movwf   EECON2              ; write 55h
0009C4 0EAA               M         movlw   0xaa
0009C6 6EA7               M         movwf   EECON2              ; write 0xaa
0009C8 82A6               M         bsf     EECON1, WR          ; begin write
0009CA B2A6               M         btfsc   EECON1, WR
0009CC D???               M         bra     $-2
                          M 
0009CE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009D0 94A6               M         bcf     EECON1, WREN        ; disable writes
0009D2 2A21           01120         incf        L_EE
                      01121         
0009D4 C02E FFE8      01122         movff       ESKA_NOCAP, WREG
0009D8 0F30           01123         addlw       0x30
                      01124         WriteEE     WREG, H_EE, L_EE
0009DA C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009DE C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009E2 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009E6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009E8 D???               M         bra     $-2
                          M 
0009EA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009EC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009EE 84A6               M         bsf     EECON1, WREN        ; enable write
0009F0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009F2 98A1               M         bcf     PIR2, EEIF
                          M 
0009F4 0E55               M         movlw   0x55
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009F6 6EA7               M         movwf   EECON2              ; write 55h
0009F8 0EAA               M         movlw   0xaa
0009FA 6EA7               M         movwf   EECON2              ; write 0xaa
0009FC 82A6               M         bsf     EECON1, WR          ; begin write
0009FE B2A6               M         btfsc   EECON1, WR
000A00 D???               M         bra     $-2
                          M 
000A02 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A04 94A6               M         bcf     EECON1, WREN        ; disable writes
000A06 2A21           01125         incf        L_EE
                      01126         
000A08 C02F FFE8      01127         movff       YOP, WREG
000A0C 0F30           01128         addlw       0x30
                      01129         WriteEE     WREG, H_EE, L_EE
000A0E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A12 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A16 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A1A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A1C D???               M         bra     $-2
                          M 
000A1E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A20 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A22 84A6               M         bsf     EECON1, WREN        ; enable write
000A24 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A26 98A1               M         bcf     PIR2, EEIF
                          M 
000A28 0E55               M         movlw   0x55
000A2A 6EA7               M         movwf   EECON2              ; write 55h
000A2C 0EAA               M         movlw   0xaa
000A2E 6EA7               M         movwf   EECON2              ; write 0xaa
000A30 82A6               M         bsf     EECON1, WR          ; begin write
000A32 B2A6               M         btfsc   EECON1, WR
000A34 D???               M         bra     $-2
                          M 
000A36 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A38 94A6               M         bcf     EECON1, WREN        ; disable writes
000A3A 2A21           01130         incf        L_EE
                      01131         
000A3C C030 FFE8      01132         movff       YOP_NOCAP, WREG
000A40 0F30           01133         addlw       0x30
                      01134         WriteEE     WREG, H_EE, L_EE
000A42 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A46 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A4A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A4E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A50 D???               M         bra     $-2
                          M 
000A52 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A54 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A56 84A6               M         bsf     EECON1, WREN        ; enable write
000A58 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A5A 98A1               M         bcf     PIR2, EEIF
                          M 
000A5C 0E55               M         movlw   0x55
000A5E 6EA7               M         movwf   EECON2              ; write 55h
000A60 0EAA               M         movlw   0xaa
000A62 6EA7               M         movwf   EECON2              ; write 0xaa
000A64 82A6               M         bsf     EECON1, WR          ; begin write
000A66 B2A6               M         btfsc   EECON1, WR
000A68 D???               M         bra     $-2
                          M 
000A6A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A6C 94A6               M         bcf     EECON1, WREN        ; disable writes
000A6E 2A21           01135         incf        L_EE
                      01136         
000A70 C037 FFE8      01137         movff       STOP_CONDITION, WREG
000A74 0F30           01138         addlw       0x30
                      01139         WriteEE     WREG, H_EE, L_EE
000A76 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A7A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A7E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A82 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A84 D???               M         bra     $-2
                          M 
000A86 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A88 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A8A 84A6               M         bsf     EECON1, WREN        ; enable write
000A8C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A8E 98A1               M         bcf     PIR2, EEIF
                          M 
000A90 0E55               M         movlw   0x55
000A92 6EA7               M         movwf   EECON2              ; write 55h
000A94 0EAA               M         movlw   0xaa
000A96 6EA7               M         movwf   EECON2              ; write 0xaa
000A98 82A6               M         bsf     EECON1, WR          ; begin write
000A9A B2A6               M         btfsc   EECON1, WR
000A9C D???               M         bra     $-2
                          M 
000A9E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AA0 94A6               M         bcf     EECON1, WREN        ; disable writes
000AA2 2A21           01140         incf        L_EE
                      01141         
000AA4 0E00           01142         movlw       d'0'
000AA6 6E20           01143         movwf       H_EE
000AA8 0EA8           01144         movlw       d'168'              ; take d'168' as last
000AAA 6E21           01145         movwf       L_EE
000AAC 0E00           01146         movlw       d'0'
000AAE 6E23           01147         movwf       tempH_EE
000AB0 0EDC           01148         movlw       d'220'              ; temp for low constant
000AB2 6E24           01149         movwf       tempL_EE
                      01150         
000AB4 6A16           01151         clrf        counter2
000AB6 6A15           01152         clrf        counter
                      01153         
000AB8                01154 ShiftLoop
000AB8 2A15           01155         incf            counter
                      01156         READEE          REG_EE, H_EE, L_EE
000ABA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000ABE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000AC2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000AC4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000AC6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000AC8 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000ACC 0E15           01157         movlw           d'21'
000ACE 2621           01158         addwf           L_EE
                      01159         WriteEE         REG_EE, H_EE, L_EE
000AD0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AD4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AD8 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000ADC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000ADE D???               M         bra     $-2
                          M 
000AE0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AE2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AE4 84A6               M         bsf     EECON1, WREN        ; enable write
000AE6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000AE8 98A1               M         bcf     PIR2, EEIF
                          M 
000AEA 0E55               M         movlw   0x55
000AEC 6EA7               M         movwf   EECON2              ; write 55h
000AEE 0EAA               M         movlw   0xaa
000AF0 6EA7               M         movwf   EECON2              ; write 0xaa
000AF2 82A6               M         bsf     EECON1, WR          ; begin write
000AF4 B2A6               M         btfsc   EECON1, WR
000AF6 D???               M         bra     $-2
                          M 
000AF8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AFA 94A6               M         bcf     EECON1, WREN        ; disable writes
000AFC 0E14           01160         movlw           d'20'
000AFE 5E21           01161         subwf           L_EE
000B00 0E15           01162         movlw           d'21'
000B02 6215           01163         cpfseq          counter
000B04 EF?? F???      01164         goto            ShiftLoop
                      01165         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01166         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000B08 0E2A           01167         movlw           d'42'
000B0A 5E21           01168         subwf           L_EE
000B0C 0EDC           01169         movlw           d'220'
000B0E 6E24           01170         movwf           tempL_EE
000B10 6A15           01171         clrf            counter
000B12 2A16           01172         incf            counter2
000B14 0E09           01173         movlw           d'9'
000B16 6216           01174         cpfseq          counter2        ; Skip if 9 shifts were made
000B18 EF?? F???      01175         goto            ShiftLoop
                      01176 
000B1C 0012           01177         return
                      01178         
000B1E                01179 RTC_INIT
                      01180         ; set sda and scl to high
000B1E 9882           01181         bcf     PORTC, 4
000B20 9682           01182         bcf     PORTC, 3
000B22 8894           01183         bsf     TRISC, 4
000B24 8694           01184         bsf     TRISC, 3
                      01185         
000B26 EC?? F???      01186         call    INIT_RTC
                      01187         
                      01188         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000B2A 0012           01189 return
                      01190         
000B2C                01191 SAVE_TIME
                      01192         rtc_read    0x02        ; hours     ; need to call this twice idk y
000B2C 0E02               M     movlw   0x02
000B2E 6E??               M     movwf   regaddress
000B30 EC?? F???          M     call    read_rtc
000B34 C??? FFE8          M     movff   datachar, WREG
000B38 EC?? F???          M     call    rtc_convert
                      01193         rtc_read    0x02        ; hours
000B3C 0E02               M     movlw   0x02
000B3E 6E??               M     movwf   regaddress
000B40 EC?? F???          M     call    read_rtc
000B44 C??? FFE8          M     movff   datachar, WREG
000B48 EC?? F???          M     call    rtc_convert
000B4C EC?? F???      01194         call    WriteEE_RTC
                      01195         rtc_read    0x01        ; minutes
000B50 0E01               M     movlw   0x01
000B52 6E??               M     movwf   regaddress
000B54 EC?? F???          M     call    read_rtc
000B58 C??? FFE8          M     movff   datachar, WREG
000B5C EC?? F???          M     call    rtc_convert
000B60 EC?? F???      01196         call    WriteEE_RTC
                      01197         rtc_read    0x06        ; years
000B64 0E06               M     movlw   0x06
000B66 6E??               M     movwf   regaddress
000B68 EC?? F???          M     call    read_rtc
000B6C C??? FFE8          M     movff   datachar, WREG
000B70 EC?? F???          M     call    rtc_convert
000B74 EC?? F???      01198         call    WriteEE_RTC
                      01199         rtc_read    0x05        ; months
000B78 0E05               M     movlw   0x05
000B7A 6E??               M     movwf   regaddress
000B7C EC?? F???          M     call    read_rtc
000B80 C??? FFE8          M     movff   datachar, WREG
000B84 EC?? F???          M     call    rtc_convert
000B88 EC?? F???      01200         call    WriteEE_RTC
                      01201         rtc_read    0x04        ; days
000B8C 0E04               M     movlw   0x04
000B8E 6E??               M     movwf   regaddress
000B90 EC?? F???          M     call    read_rtc
000B94 C??? FFE8          M     movff   datachar, WREG
000B98 EC?? F???          M     call    rtc_convert
000B9C EC?? F???      01202         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000BA0 0012           01203 return
                      01204         
000BA2                01205 SAVE_EXE_TIME
                      01206         
Warning[202]: Argument out of range.  Least significant bits used.
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BA2 3818           01207         swapf   OP_sec, WREG    ; 100's seconds
000BA4 6E17           01208         movwf   temp
000BA6 0E0F           01209         movlw   0x0f
000BA8 1617           01210         andwf   temp
000BAA C017 FFE8      01211         movff   temp, WREG
000BAE 0F30           01212         addlw   0x30    
                      01213         WriteEE WREG, H_EE, L_EE
000BB0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000BB4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000BB8 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000BBC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BBE D???               M         bra     $-2
                          M 
000BC0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BC2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BC4 84A6               M         bsf     EECON1, WREN        ; enable write
000BC6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BC8 98A1               M         bcf     PIR2, EEIF
                          M 
000BCA 0E55               M         movlw   0x55
000BCC 6EA7               M         movwf   EECON2              ; write 55h
000BCE 0EAA               M         movlw   0xaa
000BD0 6EA7               M         movwf   EECON2              ; write 0xaa
000BD2 82A6               M         bsf     EECON1, WR          ; begin write
000BD4 B2A6               M         btfsc   EECON1, WR
000BD6 D???               M         bra     $-2
                          M 
000BD8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BDA 94A6               M         bcf     EECON1, WREN        ; disable writes
000BDC 2A21           01214         incf    L_EE
                      01215         
000BDE C018 F017      01216         movff   OP_sec, temp    ; 10's seconds
000BE2 0E0F           01217         movlw   0x0f
000BE4 1617           01218         andwf   temp            ; Temp = lower nibble of Op_sec
000BE6 C017 FFE8      01219         movff   temp, WREG      ; W = Temp
000BEA 0F30           01220         addlw   0x30            ; Convert to ASCII
                      01221         WriteEE WREG, H_EE, L_EE
000BEC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000BF0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000BF4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000BF8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BFA D???               M         bra     $-2
                          M 
000BFC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BFE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C00 84A6               M         bsf     EECON1, WREN        ; enable write
000C02 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C04 98A1               M         bcf     PIR2, EEIF
                          M 
000C06 0E55               M         movlw   0x55
000C08 6EA7               M         movwf   EECON2              ; write 55h
000C0A 0EAA               M         movlw   0xaa
000C0C 6EA7               M         movwf   EECON2              ; write 0xaa
000C0E 82A6               M         bsf     EECON1, WR          ; begin write
000C10 B2A6               M         btfsc   EECON1, WR
000C12 D???               M         bra     $-2
                          M 
000C14 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C16 94A6               M         bcf     EECON1, WREN        ; disable writes
000C18 2A21           01222         incf    L_EE
                      01223         
Warning[202]: Argument out of range.  Least significant bits used.
000C1A 3819           01224         swapf   OP_INT, WREG    ;1's seconds
000C1C 6E17           01225         movwf   temp
000C1E 0E0F           01226         movlw   0x0f
000C20 1617           01227         andwf   temp
000C22 C017 FFE8      01228         movff   temp, WREG
000C26 0F30           01229         addlw   0x30
                      01230         WriteEE WREG, H_EE, L_EE
000C28 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000C2C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000C30 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000C34 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C36 D???               M         bra     $-2
                          M 
000C38 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C3A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C3C 84A6               M         bsf     EECON1, WREN        ; enable write
000C3E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C40 98A1               M         bcf     PIR2, EEIF
                          M 
000C42 0E55               M         movlw   0x55
000C44 6EA7               M         movwf   EECON2              ; write 55h
000C46 0EAA               M         movlw   0xaa
000C48 6EA7               M         movwf   EECON2              ; write 0xaa
000C4A 82A6               M         bsf     EECON1, WR          ; begin write
000C4C B2A6               M         btfsc   EECON1, WR
000C4E D???               M         bra     $-2
                          M 
000C50 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C52 94A6               M         bcf     EECON1, WREN        ; disable writes
000C54 2A21           01231         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000C56 0012           01232 return
                      01233         
                      01234                 
000C58                01235 DISPLAY_RTC
                      01236         ; display data in this format hh/minmin/yy yy/mm/dd
                      01237         
                      01238         rtc_read    0x02            ; 0x02 from DS1307 - hours
000C58 0E02               M     movlw   0x02
000C5A 6E??               M     movwf   regaddress
000C5C EC?? F???          M     call    read_rtc
000C60 C??? FFE8          M     movff   datachar, WREG
000C64 EC?? F???          M     call    rtc_convert
000C68 C??? FFE8      01239         movff   tens_digit,WREG
000C6C EC?? F???      01240         call    WR_DATA
000C70 C??? FFE8      01241         movff   ones_digit,WREG
000C74 EC?? F???      01242         call    WR_DATA
000C78 0E68           01243         movlw   "h"
000C7A EC?? F???      01244         call    WR_DATA
                      01245         
                      01246         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000C7E 0E01               M     movlw   0x01
000C80 6E??               M     movwf   regaddress
000C82 EC?? F???          M     call    read_rtc
000C86 C??? FFE8          M     movff   datachar, WREG
000C8A EC?? F???          M     call    rtc_convert
000C8E C??? FFE8      01247         movff   tens_digit,WREG
000C92 EC?? F???      01248         call    WR_DATA
000C96 C??? FFE8      01249         movff   ones_digit,WREG
000C9A EC?? F???      01250         call    WR_DATA
                      01251         
                      01252         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000C9E 0E00               M     movlw   0x00
000CA0 6E??               M     movwf   regaddress
000CA2 EC?? F???          M     call    read_rtc
000CA6 C??? FFE8          M     movff   datachar, WREG
000CAA EC?? F???          M     call    rtc_convert
000CAE C??? FFE8      01253         movff   tens_digit,WREG
000CB2 EC?? F???      01254         call    WR_DATA
000CB6 C??? FFE8      01255         movff   ones_digit,WREG
000CBA EC?? F???      01256         call    WR_DATA
000CBE 0E20           01257         movlw   " "
000CC0 EC?? F???      01258         call    WR_DATA
                      01259         
                      01260         rtc_read    0x06            ; 0x06 from DS1307 - years
000CC4 0E06               M     movlw   0x06
000CC6 6E??               M     movwf   regaddress
000CC8 EC?? F???          M     call    read_rtc
000CCC C??? FFE8          M     movff   datachar, WREG
000CD0 EC?? F???          M     call    rtc_convert
000CD4 C??? FFE8      01261         movff   tens_digit,WREG
000CD8 EC?? F???      01262         call    WR_DATA
000CDC C??? FFE8      01263         movff   ones_digit,WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CE0 EC?? F???      01264         call    WR_DATA
000CE4 0E2F           01265         movlw   "/"
000CE6 EC?? F???      01266         call    WR_DATA
                      01267         
                      01268         rtc_read    0x05            ; 0x05 from DS1307 - months
000CEA 0E05               M     movlw   0x05
000CEC 6E??               M     movwf   regaddress
000CEE EC?? F???          M     call    read_rtc
000CF2 C??? FFE8          M     movff   datachar, WREG
000CF6 EC?? F???          M     call    rtc_convert
000CFA C??? FFE8      01269         movff   tens_digit,WREG
000CFE EC?? F???      01270         call    WR_DATA
000D02 C??? FFE8      01271         movff   ones_digit,WREG
000D06 EC?? F???      01272         call    WR_DATA
000D0A 0E2F           01273         movlw   "/"
000D0C EC?? F???      01274         call    WR_DATA
                      01275         
                      01276         rtc_read    0x04            ; 0x04 from DS1307 - days
000D10 0E04               M     movlw   0x04
000D12 6E??               M     movwf   regaddress
000D14 EC?? F???          M     call    read_rtc
000D18 C??? FFE8          M     movff   datachar, WREG
000D1C EC?? F???          M     call    rtc_convert
000D20 C??? FFE8      01277         movff   tens_digit,WREG
000D24 EC?? F???      01278         call    WR_DATA
000D28 C??? FFE8      01279         movff   ones_digit,WREG
000D2C EC?? F???      01280         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000D30 0012           01281 return
                      01282         
000D32                01283 SET_TIME
                      01284         rtc_resetAll
                          M 
000D32 6A??               M     clrf    databyte
000D34 0E06               M     movlw   6
000D36 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000D38                    M     del_loop0
000D38 EC?? F???          M     call    write_rtc
000D3C 2E??               M     decfsz  regaddress
000D3E D???               M     bra     del_loop0
000D40 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01285         
                      01286         rtc_set 0x00,   b'10000000'
000D44 0E00               M     movlw   0x00
000D46 6E??               M     movwf   regaddress
000D48 0E80               M     movlw   b'10000000'
000D4A 6E??               M     movwf   databyte
000D4C EC?? F???          M     call    write_rtc
                      01287 
                      01288         rtc_set 0x06,   b'00010111'             ; Year 17
000D50 0E06               M     movlw   0x06
000D52 6E??               M     movwf   regaddress
000D54 0E17               M     movlw   b'00010111'
000D56 6E??               M     movwf   databyte
000D58 EC?? F???          M     call    write_rtc
                      01289         rtc_set 0x05,   b'00000011'             ; Month 03
000D5C 0E05               M     movlw   0x05
000D5E 6E??               M     movwf   regaddress
000D60 0E03               M     movlw   b'00000011'
000D62 6E??               M     movwf   databyte
000D64 EC?? F???          M     call    write_rtc
                      01290         rtc_set 0x04,   b'00000100'             ; Date 04
000D68 0E04               M     movlw   0x04
000D6A 6E??               M     movwf   regaddress
000D6C 0E04               M     movlw   b'00000100'
000D6E 6E??               M     movwf   databyte
000D70 EC?? F???          M     call    write_rtc
                      01291         rtc_set 0x02,   b'00010010'             ; Hours 12
000D74 0E02               M     movlw   0x02
000D76 6E??               M     movwf   regaddress
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D78 0E12               M     movlw   b'00010010'
000D7A 6E??               M     movwf   databyte
000D7C EC?? F???          M     call    write_rtc
                      01292         rtc_set 0x01,   b'01001000'             ; Minutes 27
000D80 0E01               M     movlw   0x01
000D82 6E??               M     movwf   regaddress
000D84 0E48               M     movlw   b'01001000'
000D86 6E??               M     movwf   databyte
000D88 EC?? F???          M     call    write_rtc
                      01293         rtc_set 0x00,   b'00000000'             ; Seconds 0
000D8C 0E00               M     movlw   0x00
000D8E 6E??               M     movwf   regaddress
000D90 0E00               M     movlw   b'00000000'
000D92 6E??               M     movwf   databyte
000D94 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000D98 0012           01294 return
                      01295         
000D9A                01296 INIT_USART
                      01297         
000D9A 8E94           01298         bsf     TRISC, 7        ; set RC7=USART RC
000D9C 9C94           01299         bcf     TRISC, 6        ; clear RC6=USART TX
                      01300 
000D9E 0E0F           01301         movlw   15              ; baud rate 9600
000DA0 6EAF           01302         movwf   SPBRG
000DA2 6AAC           01303         clrf    TXSTA
                      01304         
000DA4 6AAB           01305         clrf    RCSTA
000DA6 8EAB           01306         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000DA8 88AB           01307         bsf     RCSTA,CREN      ; continous receive
                      01308         
000DAA 8AAC           01309         bsf     TXSTA, TXEN     ; transmit enabled
000DAC 0012           01310         return
                      01311 
000DAE                01312 DataUSART
000DAE 0E02           01313         movlw   0x02
000DB0 EC?? F???      01314         call    USART_WAIT
000DB4 0E0D           01315         movlw   0x0D
000DB6 EC?? F???      01316         call    USART_WAIT
                      01317         
000DBA 6A15           01318         clrf    counter         ; used to cycle through past 9 eeprom logs
000DBC 6A16           01319         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01320         
000DBE                01321 TRANSFER_LOGS
000DBE 0E15           01322         movlw   d'21'           ; logs are 21 bits apart
000DC0 0215           01323         mulwf   counter         ; log number one starts at eeprom address 0
000DC2 CFF3 F021      01324         movff   PRODL, L_EE     ; low address now points to count X 21
000DC6 6A16           01325         clrf    counter2
                      01326         
000DC8                01327 TRANSFER_DATA   
                      01328         READEE  WREG, H_EE, L_EE
000DC8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DCC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DD0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DD2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DD4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DD6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DDA EC?? F???      01329         call    USART_WAIT      ; transfer bit
000DDE 2A21           01330         incf    L_EE
                      01331         
000DE0 2A16           01332         incf    counter2
000DE2 0E12           01333         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000DE4 6216           01334         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000DE6 D???           01335         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01336         
000DE8 EC?? F???      01337         call    USART_LINE      ; new line because a e s t h e t i c
                      01338         
000DEC 2A15           01339         incf    counter
000DEE 0E08           01340         movlw   d'8'            ; we save up to the last 9 permanent logs
000DF0 6215           01341         cpfseq  counter
000DF2 D???           01342         bra     TRANSFER_LOGS
                      01343         
000DF4 EC?? F???      01344         call    LCD_L2
                      01345         Display PCComplete
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
000DF8 0E??               M         movlw   upper PCComplete ; move table<20:16>
000DFA 6EF8               M         movwf   TBLPTRU
000DFC 0E??               M         movlw   high PCComplete ; move table<15:8>
000DFE 6EF7               M         movwf   TBLPTRH
000E00 0E??               M         movlw   low PCComplete  ; move table<7:0>
000E02 6EF6               M         movwf   TBLPTRL
000E04 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000E06 50F5               M         movf    TABLAT, W
000E08                    M loop
000E08 EC?? F???          M         call    WR_DATA         ; write to LCD
000E0C 000B               M         tblrd+*                 ; next row in table
000E0E 50F5               M         movf    TABLAT, W
000E10 E1??               M         bnz     loop
                      01346         Delay50N delayR, 0x28   
  0000                    M         local   loop
000E12 0E28               M         movlw   0x28
000E14 6E1A               M         movwf   delayR
                          M 
000E16                    M loop
000E16 EC?? F???          M         call    Delay50ms
000E1A 2E1A               M         decfsz  delayR
000E1C EF?? F???          M         goto    loop
000E20 0012           01347         return                  ; done transmitting data
                      01348         
000E22                01349 USART_WAIT
000E22 6EAD           01350         movwf   TXREG
000E24 A2AC           01351         btfss   TXSTA, 1
000E26 EF?? F???      01352         goto    $-2
000E2A 0012           01353         return
                      01354 
000E2C                01355 USART_LINE
000E2C 0E0A           01356         movlw   0x0A
000E2E EC?? F???      01357         call    USART_WAIT
000E32 0E0D           01358         movlw   0x0D
000E34 EC?? F???      01359         call    USART_WAIT
000E38 0012           01360         return
                      01361         
000E3A                01362 Delay5us
000E3A 0E78           01363         movlw   d'120'
000E3C 6E1B           01364         movwf   d5us
                      01365 
000E3E                01366 loop5us
000E3E 2E1B           01367         decfsz  d5us
000E40 EF?? F???      01368         goto    loop5us
000E44 0000           01369         nop
000E46 0012           01370         return
                      01371 
000E48                01372 Delay200us
000E48 0EA4           01373         movlw   0xA4
000E4A 6E1C           01374         movwf   d200us
                      01375 
000E4C                01376 loop200us
000E4C 2E1C           01377         decfsz  d200us
000E4E EF?? F???      01378         goto    loop200us
000E52 0000           01379         nop
000E54 0012           01380         return
                      01381 
000E56                01382 Delay50ms
000E56 0EF9           01383         movlw   0xF9
000E58 6E1D           01384         movwf   d50ms
                      01385 
000E5A                01386 loop50ms
000E5A EC?? F???      01387         call    Delay200us
000E5E 2E1D           01388         decfsz  d50ms
                      01389 
000E60                01390 Cycles
000E60 EF?? F???      01391         goto    loop50ms
000E64 EC?? F???      01392         call    Delay200us
000E68 0012           01393         return
                      01394 
000E6A                01395 WriteEE_RTC
                      01396         WriteEE tens_digit, H_EE, L_EE
000E6A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E6E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E72 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000E76 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E78 D???               M         bra     $-2
                          M 
000E7A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E7C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E7E 84A6               M         bsf     EECON1, WREN        ; enable write
000E80 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E82 98A1               M         bcf     PIR2, EEIF
                          M 
000E84 0E55               M         movlw   0x55
000E86 6EA7               M         movwf   EECON2              ; write 55h
000E88 0EAA               M         movlw   0xaa
000E8A 6EA7               M         movwf   EECON2              ; write 0xaa
000E8C 82A6               M         bsf     EECON1, WR          ; begin write
000E8E B2A6               M         btfsc   EECON1, WR
000E90 D???               M         bra     $-2
                          M 
000E92 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E94 94A6               M         bcf     EECON1, WREN        ; disable writes
000E96 2A21           01397         incf    L_EE
                      01398         WriteEE ones_digit, H_EE, L_EE
000E98 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E9C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000EA0 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000EA4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000EA6 D???               M         bra     $-2
                          M 
000EA8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000EAA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000EAC 84A6               M         bsf     EECON1, WREN        ; enable write
000EAE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000EB0 98A1               M         bcf     PIR2, EEIF
                          M 
000EB2 0E55               M         movlw   0x55
000EB4 6EA7               M         movwf   EECON2              ; write 55h
000EB6 0EAA               M         movlw   0xaa
000EB8 6EA7               M         movwf   EECON2              ; write 0xaa
000EBA 82A6               M         bsf     EECON1, WR          ; begin write
000EBC B2A6               M         btfsc   EECON1, WR
000EBE D???               M         bra     $-2
                          M 
000EC0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000EC2 94A6               M         bcf     EECON1, WREN        ; disable writes
000EC4 2A21           01399         incf    L_EE
000EC6 0012           01400         return
                      01401 
000EC8                01402 ClearEEPROM_21
000EC8 6A20           01403         clrf    H_EE
000ECA 6A21           01404         clrf    L_EE
000ECC 681F           01405         setf    clear_EE
000ECE 6A15           01406         clrf    counter
000ED0                01407 ClearNext
                      01408         WriteEE         clear_EE, H_EE, L_EE
000ED0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000ED4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000ED8 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000EDC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000EDE D???               M         bra     $-2
                          M 
000EE0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000EE2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000EE4 84A6               M         bsf     EECON1, WREN        ; enable write
000EE6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000EE8 98A1               M         bcf     PIR2, EEIF
                          M 
000EEA 0E55               M         movlw   0x55
000EEC 6EA7               M         movwf   EECON2              ; write 55h
000EEE 0EAA               M         movlw   0xaa
000EF0 6EA7               M         movwf   EECON2              ; write 0xaa
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EF2 82A6               M         bsf     EECON1, WR          ; begin write
000EF4 B2A6               M         btfsc   EECON1, WR
000EF6 D???               M         bra     $-2
                          M 
000EF8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000EFA 94A6               M         bcf     EECON1, WREN        ; disable writes
000EFC 2A15           01409         incf            counter
000EFE 2A21           01410         incf            L_EE
000F00 0E15           01411         movlw           d'21'
000F02 6215           01412         cpfseq          counter
000F04 EF?? F???      01413         goto            ClearNext
000F08 6A20           01414         clrf            H_EE
000F0A 6A21           01415         clrf            L_EE
000F0C 0012           01416         return
                      01417         
000F0E                01418 READ_KEY
000F0E A281           01419         btfss   PORTB, 1        ; check for keypad interrupt
000F10 EF?? F???      01420         goto    READ_KEY
000F14 3881           01421         swapf   PORTB, W
000F16 0B0F           01422         andlw   0x0f
000F18 6E10           01423         movwf   KEY
000F1A B281           01424         btfsc   PORTB, 1
000F1C EF?? F???      01425         goto    $-2
000F20 0012           01426         return
                      01427 
000F22                01428 DisplayExeTime
                      01429         READEE  REG_EE, H_EE, L_EE
000F22 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F26 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F2A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F2C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F2E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F30 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F34 0EFF           01430         movlw   0xFF
000F36 6222           01431         cpfseq  REG_EE
000F38 EF?? F???      01432         goto    NoSkipDispExeTime
                      01433         Display NoData
  0000                    M         local   loop
000F3C 0E??               M         movlw   upper NoData    ; move table<20:16>
000F3E 6EF8               M         movwf   TBLPTRU
000F40 0E??               M         movlw   high NoData     ; move table<15:8>
000F42 6EF7               M         movwf   TBLPTRH
000F44 0E??               M         movlw   low NoData      ; move table<7:0>
000F46 6EF6               M         movwf   TBLPTRL
000F48 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000F4A 50F5               M         movf    TABLAT, W
000F4C                    M loop
000F4C EC?? F???          M         call    WR_DATA         ; write to LCD
000F50 000B               M         tblrd+*                 ; next row in table
000F52 50F5               M         movf    TABLAT, W
000F54 E1??               M         bnz     loop
000F56 0EFF           01434         movlw   0xFF
000F58 6022           01435         cpfslt  REG_EE
000F5A EF?? F???      01436         goto    SkipDispExeTime
000F5E 0012           01437         return
                      01438 
000F60                01439 NoSkipDispExeTime
                      01440         READEE  WREG, H_EE, L_EE
000F60 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F64 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F68 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F6A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F6C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F6E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F72 EC?? F???      01441         call    WR_DATA
000F76 2A21           01442         incf    L_EE
                      01443         
                      01444         READEE  WREG, H_EE, L_EE
000F78 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F7C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F80 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F82 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F84 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F86 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F8A EC?? F???      01445         call    WR_DATA
000F8E 2A21           01446         incf    L_EE
                      01447         
                      01448         READEE  WREG, H_EE, L_EE
000F90 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F94 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F98 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F9A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F9C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F9E CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000FA2 EC?? F???      01449         call    WR_DATA
000FA6 2A21           01450         incf    L_EE
                      01451 
000FA8 0E73           01452         movlw   0x73
000FAA EC?? F???      01453         call    WR_DATA
000FAE EC?? F???      01454         call    LCD_L2
000FB2                01455 SkipDispExeTime
000FB2 0012           01456         return
                      01457 
000FB4                01458 DispOpSort
                      01459         READEE  REG_EE, H_EE, L_EE
000FB4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FB8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FBC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FBE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FC0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FC2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FC6 0EFF           01460         movlw   0xff
000FC8 6222           01461         cpfseq  REG_EE
000FCA EF?? F???      01462         goto    NoSkipDispOpSort
                      01463         Display NoData
  0000                    M         local   loop
000FCE 0E??               M         movlw   upper NoData    ; move table<20:16>
000FD0 6EF8               M         movwf   TBLPTRU
000FD2 0E??               M         movlw   high NoData     ; move table<15:8>
000FD4 6EF7               M         movwf   TBLPTRH
000FD6 0E??               M         movlw   low NoData      ; move table<7:0>
000FD8 6EF6               M         movwf   TBLPTRL
000FDA 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
000FDC 50F5               M         movf    TABLAT, W
000FDE                    M loop
000FDE EC?? F???          M         call    WR_DATA         ; write to LCD
000FE2 000B               M         tblrd+*                 ; next row in table
000FE4 50F5               M         movf    TABLAT, W
000FE6 E1??               M         bnz     loop
000FE8 0EFF           01464         movlw   0xff
000FEA 6022           01465         cpfslt  REG_EE
000FEC EF?? F???      01466         goto    SkipDispOpSort
                      01467 
000FF0                01468 NoSkipDispOpSort
000FF0 0E61           01469         movlw   "a"
000FF2 EC?? F???      01470         call    WR_DATA
                      01471         
                      01472         READEE  REG_EE, H_EE, L_EE
000FF6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FFA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FFE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001000 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001002 80A6               M         bsf     EECON1, RD          ; read EEPROM
001004 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001008 C022 FFE8      01473         movff   REG_EE, WREG
00100C EC?? F???      01474         call    WR_DATA
001010 2A21           01475         incf    L_EE
                      01476         
001012 0E20           01477         movlw   " "
001014 EC?? F???      01478         call    WR_DATA
                      01479         
001018 0E62           01480         movlw   "b"
00101A EC?? F???      01481         call    WR_DATA
                      01482         
                      01483         READEE  REG_EE, H_EE, L_EE
00101E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001022 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001026 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001028 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00102A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00102C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001030 C022 FFE8      01484         movff   REG_EE, WREG
001034 EC?? F???      01485         call    WR_DATA
001038 2A21           01486         incf    L_EE
                      01487         
00103A 0E20           01488         movlw   " "
00103C EC?? F???      01489         call    WR_DATA
                      01490         
001040 0E63           01491         movlw   "c"
001042 EC?? F???      01492         call    WR_DATA
                      01493         
                      01494         READEE  REG_EE, H_EE, L_EE
001046 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00104A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00104E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001050 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001052 80A6               M         bsf     EECON1, RD          ; read EEPROM
001054 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001058 C022 FFE8      01495         movff   REG_EE, WREG
00105C EC?? F???      01496         call    WR_DATA
001060 2A21           01497         incf    L_EE
                      01498         
001062 0E20           01499         movlw   " "
001064 EC?? F???      01500         call    WR_DATA
                      01501         
001068 0E64           01502         movlw   "d"
00106A EC?? F???      01503         call    WR_DATA
                      01504         
                      01505         READEE  REG_EE, H_EE, L_EE
00106E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001072 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001076 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001078 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00107A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00107C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001080 C022 FFE8      01506         movff   REG_EE, WREG
001084 EC?? F???      01507         call    WR_DATA
001088 2A21           01508         incf    L_EE
                      01509 
00108A                01510 SkipDispOpSort
00108A 0012           01511         return
                      01512         
00108C                01513 DispOpRTC
                      01514         READEE  REG_EE, H_EE, L_EE
00108C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001090 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001094 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001096 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001098 80A6               M         bsf     EECON1, RD          ; read EEPROM
00109A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00109E 0EFF           01515         movlw   0xff
0010A0 6222           01516         cpfseq  REG_EE
0010A2 EF?? F???      01517         goto    NoSkipDispOpRTC
                      01518         Display NoData
  0000                    M         local   loop
0010A6 0E??               M         movlw   upper NoData    ; move table<20:16>
0010A8 6EF8               M         movwf   TBLPTRU
0010AA 0E??               M         movlw   high NoData     ; move table<15:8>
0010AC 6EF7               M         movwf   TBLPTRH
0010AE 0E??               M         movlw   low NoData      ; move table<7:0>
0010B0 6EF6               M         movwf   TBLPTRL
0010B2 0008               M         tblrd*                  ; read byte from TBLPTRL to TABLAT
0010B4 50F5               M         movf    TABLAT, W
0010B6                    M loop
0010B6 EC?? F???          M         call    WR_DATA         ; write to LCD
0010BA 000B               M         tblrd+*                 ; next row in table
0010BC 50F5               M         movf    TABLAT, W
0010BE E1??               M         bnz     loop
0010C0 0EFF           01519         movlw   0xff
0010C2 6022           01520         cpfslt  REG_EE
0010C4 EF?? F???      01521         goto    SkipDispOpRTC
                      01522 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:43:43         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010C8                01523 NoSkipDispOpRTC
                      01524         READEE  REG_EE, H_EE, L_EE
0010C8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010CC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010D0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010D2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010D4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010D6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010DA C022 FFE8      01525         movff   REG_EE, WREG
0010DE EC?? F???      01526         call    WR_DATA
0010E2 2A21           01527         incf    L_EE
                      01528         
                      01529         READEE  REG_EE, H_EE, L_EE
0010E4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010E8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010EC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010EE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010F0 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010F2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010F6 C022 FFE8      01530         movff   REG_EE, WREG
0010FA EC?? F???      01531         call    WR_DATA
0010FE 2A21           01532         incf    L_EE
                      01533 
001100 0E68           01534         movlw   "h"
001102 EC?? F???      01535         call    WR_DATA
                      01536         
001106 EC?? F???      01537         call    DispOpRTC_Helper
                      01538         
00110A 0E20           01539         movlw   " "
00110C EC?? F???      01540         call    WR_DATA
                      01541         
001110 EC?? F???      01542         call    DispOpRTC_Helper
001114 0E2F           01543         movlw   "/"
001116 EC?? F???      01544         call    WR_DATA
                      01545 
00111A EC?? F???      01546         call    DispOpRTC_Helper
00111E 0E2F           01547         movlw   "/"
001120 EC?? F???      01548         call    WR_DATA
001124 EC?? F???      01549         call    DispOpRTC_Helper
001128                01550 SkipDispOpRTC
001128 0012           01551                 return
00112A                01552 DispOpRTC_Helper
                      01553         READEE          REG_EE, H_EE, L_EE
00112A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00112E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001132 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001134 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001136 80A6               M         bsf     EECON1, RD          ; read EEPROM
001138 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00113C C022 FFE8      01554         movff           REG_EE, WREG
001140 EC?? F???      01555         call            WR_DATA
001144 2A21           01556         incf            L_EE
                      01557         READEE          REG_EE, H_EE, L_EE
001146 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00114A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00114E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001150 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001152 80A6               M         bsf     EECON1, RD          ; read EEPROM
001154 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001158 C022 FFE8      01558         movff           REG_EE, WREG
00115C EC?? F???      01559         call            WR_DATA
001160 2A21           01560         incf            L_EE
001162 0012           01561         return
Warning[205]: Found directive in column 1. (end)
                      01562 end

Errors   :     0
Warnings :    38 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

