MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
                      00096     endc
                      00097     
  0000                00098     extern tens_digit, ones_digit
  0000                00099     extern READ_ARDUINO, INIT_RTC
                      00100     
                      00101 ;*******************************************************************************
                      00102 ; tables
                      00103 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00104     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00105     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00106     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00107     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00108     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00109     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00110     LogInfo2    db          "Back <0>", 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00111     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00112     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00113     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00114     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00115     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00116     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00117     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
000096 6F43 706D 656C 00118     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000A0 6153 6976 676E 00119     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000AA 2F4E 0041      00120     NoData      db          "N/A", 0
                      00121         
                      00122 ;*******************************************************************************
                      00123 ; macros
                      00124 ;*******************************************************************************
                      00125 
                      00126 TransferTable macro table
                      00127         local loop
                      00128         
                      00129         movlw   upper table
                      00130         movwf   TBLPTRU
                      00131         movlw   high table
                      00132         movwf   TBLPTRH
                      00133         movlw   low table
                      00134         movwf   TBLPTRL
                      00135         tblrd*
                      00136         movff   TABLAT, WREG
                      00137 loop
                      00138         call    USART_WAIT
                      00139         tblrd+*
                      00140         movff   TABLAT, WREG
                      00141         bnz     loop
                      00142         endm
                      00143         
                      00144 ConfigLCD   macro
                      00145           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00146           call      WR_INS
                      00147 
                      00148           movlw     b'00001100'    ; display on/off
                      00149           call      WR_INS
                      00150           movlw     b'00000001'    ; Clear ram
                      00151           call      WR_INS
                      00152           endm
                      00153         
                      00154 movMSB  macro   port
                      00155         andlw   0xF0
                      00156         iorwf   port, f
                      00157         iorlw   0x0F
                      00158         andwf   port, f
                      00159         endm
                      00160 
                      00161 Delay50N macro count, N
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00162         local   loop
                      00163         movlw   N
                      00164         movwf   count
                      00165 
                      00166 loop
                      00167         call    Delay50ms
                      00168         decfsz  count
                      00169         goto    loop
                      00170         endm
                      00171 
                      00172 Display macro   Message
                      00173         local   loop
                      00174         movlw   upper Message   ; Move Table<20:16>
                      00175         movwf   TBLPTRU
                      00176         movlw   high Message    ; Move Table<15:8>
                      00177         movwf   TBLPTRH
                      00178         movlw   low Message     ; Move Table<7:0>
                      00179         movwf   TBLPTRL
                      00180         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00181         movf    TABLAT, W
                      00182 loop
                      00183         call    WR_DATA         ; write to LCD
                      00184         tblrd+*                 ; next row in table
                      00185         movf    TABLAT, W
                      00186         bnz     loop
                      00187         endm
                      00188 
                      00189 DisplayLog  macro   addrH, addrL
                      00190             local   Again, Finish
                      00191             
                      00192             clrf    SkipCount
                      00193             clrf    MAX_EE
                      00194 
                      00195             ; Check if there is No Data first
                      00196             READEE      REG_EE, addrH, addrL
                      00197             movlw       0xFF
                      00198             cpfseq      REG_EE
                      00199             goto        Again
                      00200             Display     NoData
                      00201             goto        Finish
                      00202 Again
                      00203             ; Put a space every 3 Writes
                      00204             movlw       d'3'
                      00205             cpfslt      SkipCount
                      00206             cpfslt      MAX_EE
                      00207             goto        Finish
                      00208 
                      00209             ; read EEPROM
                      00210             READEE      REG_EE, addrH, addrL
                      00211             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00212             goto        Finish
                      00213 Finish
                      00214             endm        
                      00215 
                      00216 incf_BCD    macro   BCD
                      00217         local ones, endBCD
                      00218         movff   BCD, temp
                      00219         
                      00220         ;process ones digit
                      00221         movlw   0x0f
                      00222         andwf   temp
                      00223         movlw   d'9'
                      00224         
                      00225         ;skip if ones digit is 9
                      00226         cpfseq  temp
                      00227         goto    ones
                      00228         
                      00229         movlw   b'00010000'
                      00230         addwf   BCD
                      00231         movlw   0xf0
                      00232         andwf   BCD
                      00233         movlw   0xa0
                      00234         cpfslt  BCD
                      00235         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00236         clrf    BCD
                      00237         goto    endBCD
                      00238         
                      00239 ones
                      00240         incf    BCD
                      00241         goto    endBCD
                      00242 endBCD
                      00243         nop
                      00244         endm
                      00245         
                      00246 SUB16   macro   x, y        ; does not modify x nor y
                      00247         local   RESULTS
                      00248         movff   y+1, WREG   ; move high y into working register
                      00249         subwf   x+1, 0      ; do subtraction xH - yH => w
                      00250         btfss   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00251         goto    RESULTS     ; if it is, need to check lower bytes (so skip this)
                      00252         
                      00253         movff   y+0, WREG
                      00254         subwf   x+0, 0  
                      00255 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00256         endm
                      00257 
                      00258 WriteRTC    macro
                      00259         movff   tens_digit, WREG
                      00260         call    WR_DATA
                      00261         movff   ones_digit, WREG
                      00262         call    WR_DATA
                      00263         endm
                      00264 
                      00265 WriteEE macro   word, addH, addL
                      00266         movff   addH, EEADRH        ; High address
                      00267         movff   addL, EEADR         ; Low address
                      00268         movff   word, EEDATA        ; set word
                      00269 
                      00270         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00271         bra     $-2
                      00272 
                      00273         bcf     EECON1, EEPGD       ; Point to data memory
                      00274         bcf     EECON1, CFGS        ; Access EEPROM
                      00275         bsf     EECON1, WREN        ; enable write
                      00276         bcf     INTCON, GIE         ; disable interrupts during write
                      00277         bcf     PIR2, EEIF
                      00278 
                      00279         movlw   0x55
                      00280         movwf   EECON2              ; write 55h
                      00281         movlw   0xaa
                      00282         movwf   EECON2              ; write 0xaa
                      00283         bsf     EECON1, WR          ; begin write
                      00284         btfsc   EECON1, WR
                      00285         bra     $-2
                      00286 
                      00287         bsf     INTCON, GIE         ; enable interrupts after write
                      00288         bcf     EECON1, WREN        ; disable writes
                      00289         endm
                      00290 
                      00291 READEE  macro   file, addH, addL
                      00292         movff   addH, EEADRH        ; read to high
                      00293         movff   addL, EEADR         ; read to low
                      00294         bcf     EECON1, EEPGD       ; point to data memory
                      00295         bcf     EECON1, CFGS        ; access to EEPROM
                      00296         bsf     EECON1, RD          ; read EEPROM
                      00297         movff   EEDATA, file        ; put data into file
                      00298         endm
                      00299 
                      00300 ChangeMode  macro   ModeId, NextMode
                      00301         local Next, Exit
                      00302 
                      00303         movlw   ModeId              ; poll for mode
                      00304         cpfseq  KEY                 ; check this against key press
                      00305         goto    Exit
                      00306 
                      00307 Next
                      00308         clrf    LATA                ; clear pins before proceeding
                      00309         clrf    LATB
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00310         clrf    LATC
                      00311         clrf    LATD
                      00312         goto    NextMode
                      00313 
                      00314 Exit
                      00315         nop
                      00316         endm
                      00317 
                      00318 saveContext macro
                      00319     movff   STATUS, temp_S          ; save STATUS first
                      00320     movwf   temp_W                  ; save W
                      00321     endm
                      00322 
                      00323 restoreContext macro
                      00324     swapf   temp_W, 0               ; restore W first
                      00325     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00326     endm
                      00327 ;*******************************************************************************
                      00328 ; reset vector and isrs
                      00329 ;*******************************************************************************
                      00330         ORG     0x000               ; processor reset vector
000000 EF?? F???      00331         goto    INIT                ; go to beginning of program
                      00332 
                      00333         ORG     0x008
000008 EF?? F???      00334         goto    ISR_HIGH
                      00335 
                      00336         ORG     0x018
000018 EF?? F???      00337         goto    ISR_LOW
                      00338 
00001C                00339 ISR_HIGH
                      00340         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00341         
                      00342         ; displaying the execution time in seconds
                      00343 ;       swapf   OP_sec, 0       ; 100's seconds
                      00344 ;       movwf   temp
                      00345 ;       movlw   0x0f
                      00346 ;       andwf   temp
                      00347 ;       movff   temp, WREG
                      00348 ;       addlw   0x30
                      00349 ;       call    WR_DATA
                      00350 ;
                      00351 ;       movff   OP_sec, temp    ; 10's seconds
                      00352 ;       movlw   0x0f
                      00353 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00354 ;       movff   temp, WREG      ; W = Temp
                      00355 ;       addlw   0x30            ; Convert to ASCII
                      00356 ;       call    WR_DATA
                      00357 ;       
                      00358 ;       swapf   OP_INT, WREG    ;1's seconds
                      00359 ;       movwf   temp
                      00360 ;       movlw   0x0f
                      00361 ;       andwf   temp
                      00362 ;       movff   temp, WREG
                      00363 ;       addlw   0x30
                      00364 ;       call    WR_DATA
                      00365 ;
                      00366 ;       movlw   0x73            ; Write 's'
                      00367 ;       call    WR_DATA
                      00368 ;       call    LCD_L2
                      00369 
                      00370         ;reset timer 
000022 0EC6           00371         movlw   0xc6
000024 6ED7           00372         movwf   TMR0H
000026 0E3E           00373         movlw   0x3e
000028 6ED6           00374         movwf   TMR0L
                      00375                 
                      00376         ;timer interrupt
00002A A4F2           00377         btfss   INTCON, TMR0IF
00002C EF?? F???      00378         goto    END_ISR_HIGH
                      00379         
                      00380         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0f
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0EF0               M         movlw   0xf0
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xa0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00381         movlw   d'0'
00005C 6219           00382         cpfseq  OP_INT
00005E EF?? F???      00383         goto    END_ISR_HIGH
                      00384         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0f
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0EF0               M         movlw   0xf0
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xa0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00385 
00008C                00386 END_ISR_HIGH
00008C 94F2           00387         bcf     INTCON, TMR0IF
                      00388         restoreContext
00008E 3814               M     swapf   temp_W, 0               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00389         retfie
                      00390 
000096                00391 ISR_LOW
                      00392         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00393         ; KEYPAD INTERRUPT
00009C A0F0           00394         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
00009E EF?? F???      00395         goto    END_ISR_LOW
                      00396 
                      00397         ; check operation status
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000A2 0EFF           00398         movlw   0xff                    ; If in operation, skip return
0000A4 621E           00399         cpfseq  inExecution
0000A6 EF?? F???      00400         goto    END_ISR_LOW
                      00401 
                      00402         ; process KEY
0000AA 3881           00403         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000AC 0B0F           00404         andlw   0x0f
0000AE 6E12           00405         movwf   KEY_ISR
                      00406         
0000B0 0E0C           00407         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000B2 6212           00408         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000B4 EF?? F???      00409         goto    END_ISR_LOW
                      00410         
                      00411         ; reset program counter - emergency stop recorded. 
0000B8 9ED5           00412         bcf     T0CON, TMR0ON
0000BA EC?? F???      00413         call    SAVE_EXE_TIME
                      00414                 
                      00415         ; Clear inExecution flag to stop '*' interrupts
0000BE 6A1E           00416         clrf    inExecution
0000C0 0E01           00417         movlw   d'1'
0000C2 6E37           00418         movwf   STOP_CONDITION
0000C4 EC?? F???      00419         call    SaveData
                      00420         
0000C8 6AFF           00421         clrf    TOSU
0000CA 6AFE           00422         clrf    TOSH
0000CC 6AFD           00423         clrf    TOSL
0000CE 90F0           00424         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00425         restoreContext
0000D0 3814               M     swapf   temp_W, 0               ; restore W first
0000D2 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D6 0010           00426         retfie
                      00427 
0000D8                00428 END_ISR_LOW
0000D8 90F0           00429         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00430         restoreContext
0000DA 3814               M     swapf   temp_W, 0               ; restore W first
0000DC C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000E0 0010           00431         retfie
                      00432 
                      00433 ;*******************************************************************************
                      00434 ; main
                      00435 ;*******************************************************************************
0000E2                00436 INIT
                      00437         ; i/o
0000E2 0E00           00438         movlw   b'00000000'
0000E4 6E92           00439         movwf   TRISA
0000E6 0EFF           00440         movlw   b'11111111'
0000E8 6E93           00441         movwf   TRISB               ; keypad
0000EA 0E00           00442         movlw   b'00000000'
0000EC 6E94           00443         movwf   TRISC
0000EE 0E00           00444         movlw   b'00000000'
0000F0 6E95           00445         movwf   TRISD
0000F2 0E00           00446         movlw   b'00000000'
0000F4 6E96           00447         movwf   TRISE
                      00448 
                      00449         ; clear ports
0000F6 0E00           00450         movlw   b'00000000'
0000F8 6E89           00451         movwf   LATA
0000FA 0E00           00452         movlw   b'00000000'
0000FC 6E8A           00453         movwf   LATB
0000FE 0E00           00454         movlw   b'00000000'
000100 6E8B           00455         movwf   LATC
000102 0E00           00456         movlw   b'00000000'
000104 6E8C           00457         movwf   LATD
000106 0E00           00458         movlw   b'00000000'
000108 6E8D           00459         movwf   LATE
                      00460         
00010A 0E00           00461         movlw   b'00000000'
00010C 6EC2           00462         movwf   ADCON0
                      00463 ;       movlw   b'11111111'
                      00464 ;       movwf   ADCON1
                      00465         
                      00466         ; initializations
00010E EC?? F???      00467         call    InitLCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00468         ConfigLCD
000112 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000114 EC?? F???          M           call      WR_INS
                          M 
000118 0E0C               M           movlw     b'00001100'    ; display on/off
00011A EC?? F???          M           call      WR_INS
00011E 0E01               M           movlw     b'00000001'    ; Clear ram
000120 EC?? F???          M           call      WR_INS
                      00469         
000124 EC?? F???      00470         call    i2c_common_setup
                      00471         
000128 EC?? F???      00472         call    RTC_INIT
                      00473         ;COLOUR_INIT
00012C EC?? F???      00474         call    INIT_USART
                      00475 
                      00476         ; interrupts
000130 6AD0           00477         clrf    RCON
000132 6AF2           00478         clrf    INTCON
000134 6AF1           00479         clrf    INTCON2
000136 6AF0           00480         clrf    INTCON3
000138 8ED0           00481         bsf     RCON, IPEN          ; priority mode
00013A 8EF2           00482         bsf     INTCON, GIEH        ; permit global interrupts
00013C 8CF2           00483         bsf     INTCON, GIEL
00013E 8AF1           00484         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000140 8AF2           00485         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000142 84F2           00486         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000144 84F1           00487         bsf     INTCON2, TMR0IP     ; set to high priority
000146 86F0           00488         bsf     INTCON3, INT1IE
000148 9CF0           00489         bcf     INTCON3, INT1IP
                      00490         
                      00491         ; setting up timer to sychronize with 1 second clock intervals
00014A 9ED5           00492         bcf     T0CON, TMR0ON
00014C 9CD5           00493         bcf     T0CON, T08BIT
00014E 9AD5           00494         bcf     T0CON, T0CS
000150 98D5           00495         bcf     T0CON, T0SE
000152 96D5           00496         bcf     T0CON, PSA
000154 94D5           00497         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
000156 82D5           00498         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
000158 80D5           00499         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00500 
00015A 6A20           00501         clrf    H_EE
00015C 6A21           00502         clrf    L_EE
00015E 6A??           00503         clrf    tens_digit
000160 6A??           00504         clrf    ones_digit
                      00505         
000162 6A2C           00506         clrf    DETECTION_VAL
000164 6A2D           00507         clrf    ESKA
000166 6A2E           00508         clrf    ESKA_NOCAP
000168 6A2F           00509         clrf    YOP
00016A 6A30           00510         clrf    YOP_NOCAP
00016C 6A31           00511         clrf    TOTAL_BOTTLES
00016E 6A32           00512         clrf    COLLECTIONS_COUNT
                      00513         
000170 0EF2           00514         movlw     b'11110010'    ; Set required keypad inputs
000172 6E93           00515         movwf     TRISB
                      00516         
000174 EC?? F???      00517         call    ClrLCD
                      00518         Display Welcome
  0000                    M         local   loop
000178 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00017A 6EF8               M         movwf   TBLPTRU
00017C 0E??               M         movlw   high Welcome    ; Move Table<15:8>
00017E 6EF7               M         movwf   TBLPTRH
000180 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000182 6EF6               M         movwf   TBLPTRL
000184 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000186 50F5               M         movf    TABLAT, W
000188                    M loop
000188 EC?? F???          M         call    WR_DATA         ; write to LCD
00018C 000B               M         tblrd+*                 ; next row in table
00018E 50F5               M         movf    TABLAT, W
000190 E1??               M         bnz     loop
000192 EC?? F???      00519         call LCD_L2
                      00520         Display Team
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
000196 0E??               M         movlw   upper Team      ; Move Table<20:16>
000198 6EF8               M         movwf   TBLPTRU
00019A 0E??               M         movlw   high Team       ; Move Table<15:8>
00019C 6EF7               M         movwf   TBLPTRH
00019E 0E??               M         movlw   low Team        ; Move Table<7:0>
0001A0 6EF6               M         movwf   TBLPTRL
0001A2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001A4 50F5               M         movf    TABLAT, W
0001A6                    M loop
0001A6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001AA 000B               M         tblrd+*                 ; next row in table
0001AC 50F5               M         movf    TABLAT, W
0001AE E1??               M         bnz     loop
                      00521         
                      00522         Delay50N delayR, 0x28
  0000                    M         local   loop
0001B0 0E28               M         movlw   0x28
0001B2 6E1A               M         movwf   delayR
                          M 
0001B4                    M loop
0001B4 EC?? F???          M         call    Delay50ms
0001B8 2E1A               M         decfsz  delayR
0001BA EF?? F???          M         goto    loop
                      00523 
                      00524 ;*******************************************************************************
                      00525 ; standby mode
                      00526 ;*******************************************************************************
0001BE                00527 STANDBY
0001BE 0E00           00528         movlw   b'00000000'
0001C0 6E84           00529         movwf   PORTE
0001C2 0E00           00530         movlw   b'00000000'
0001C4 6E80           00531         movwf   PORTA
                      00532         
0001C6 EC?? F???      00533         call    ClrLCD
                      00534         Display StandBy
  0000                    M         local   loop
0001CA 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001CC 6EF8               M         movwf   TBLPTRU
0001CE 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001D0 6EF7               M         movwf   TBLPTRH
0001D2 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001D4 6EF6               M         movwf   TBLPTRL
0001D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D8 50F5               M         movf    TABLAT, W
0001DA                    M loop
0001DA EC?? F???          M         call    WR_DATA         ; write to LCD
0001DE 000B               M         tblrd+*                 ; next row in table
0001E0 50F5               M         movf    TABLAT, W
0001E2 E1??               M         bnz     loop
                      00535 
0001E4                00536 HOLD_STANDBY
0001E4 EC?? F???      00537         call    READ_KEY_TIME
                      00538         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
0001E8 0E00               M         movlw   key1                ; poll for mode
0001EA 6210               M         cpfseq  KEY                 ; check this against key press
0001EC EF?? F???          M         goto    Exit
                          M 
0001F0                    M Next
0001F0 6A89               M         clrf    LATA                ; clear pins before proceeding
0001F2 6A8A               M         clrf    LATB
0001F4 6A8B               M         clrf    LATC
0001F6 6A8C               M         clrf    LATD
0001F8 EF?? F???          M         goto    COLOUR_TEST
                          M 
0001FC                    M Exit
0001FC 0000               M         nop
                      00539         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
0001FE 0E01               M         movlw   key2                ; poll for mode
000200 6210               M         cpfseq  KEY                 ; check this against key press
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000202 EF?? F???          M         goto    Exit
                          M 
000206                    M Next
000206 6A89               M         clrf    LATA                ; clear pins before proceeding
000208 6A8A               M         clrf    LATB
00020A 6A8B               M         clrf    LATC
00020C 6A8C               M         clrf    LATD
00020E EF?? F???          M         goto    STEP_TEST
                          M 
000212                    M Exit
000212 0000               M         nop
                      00540         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
                          M 
000214 0E02               M         movlw   key3                ; poll for mode
000216 6210               M         cpfseq  KEY                 ; check this against key press
000218 EF?? F???          M         goto    Exit
                          M 
00021C                    M Next
00021C 6A89               M         clrf    LATA                ; clear pins before proceeding
00021E 6A8A               M         clrf    LATB
000220 6A8B               M         clrf    LATC
000222 6A8C               M         clrf    LATD
000224 EF?? F???          M         goto    DC_TEST_CW
                          M 
000228                    M Exit
000228 0000               M         nop
                      00541         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
00022A 0E04               M         movlw   key4                ; poll for mode
00022C 6210               M         cpfseq  KEY                 ; check this against key press
00022E EF?? F???          M         goto    Exit
                          M 
000232                    M Next
000232 6A89               M         clrf    LATA                ; clear pins before proceeding
000234 6A8A               M         clrf    LATB
000236 6A8B               M         clrf    LATC
000238 6A8C               M         clrf    LATD
00023A EF?? F???          M         goto    DC_TEST_CCW
                          M 
00023E                    M Exit
00023E 0000               M         nop
                      00542         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000240 0E03               M         movlw   keyA                ; poll for mode
000242 6210               M         cpfseq  KEY                 ; check this against key press
000244 EF?? F???          M         goto    Exit
                          M 
000248                    M Next
000248 6A89               M         clrf    LATA                ; clear pins before proceeding
00024A 6A8A               M         clrf    LATB
00024C 6A8B               M         clrf    LATC
00024E 6A8C               M         clrf    LATD
000250 EF?? F???          M         goto    EXECUTION
                          M 
000254                    M Exit
000254 0000               M         nop
                      00543         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
000256 0E07               M         movlw   keyB                ; poll for mode
000258 6210               M         cpfseq  KEY                 ; check this against key press
00025A EF?? F???          M         goto    Exit
                          M 
00025E                    M Next
00025E 6A89               M         clrf    LATA                ; clear pins before proceeding
000260 6A8A               M         clrf    LATB
000262 6A8B               M         clrf    LATC
000264 6A8C               M         clrf    LATD
000266 EF?? F???          M         goto    LOG
                          M 
00026A                    M Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00026A 0000               M         nop
                      00544         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
00026C 0E0B               M         movlw   keyC                ; poll for mode
00026E 6210               M         cpfseq  KEY                 ; check this against key press
000270 EF?? F???          M         goto    Exit
                          M 
000274                    M Next
000274 6A89               M         clrf    LATA                ; clear pins before proceeding
000276 6A8A               M         clrf    LATB
000278 6A8B               M         clrf    LATC
00027A 6A8C               M         clrf    LATD
00027C EF?? F???          M         goto    PERM_LOG
                          M 
000280                    M Exit
000280 0000               M         nop
                      00545         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000282 0E0F               M         movlw   keyD                ; poll for mode
000284 6210               M         cpfseq  KEY                 ; check this against key press
000286 EF?? F???          M         goto    Exit
                          M 
00028A                    M Next
00028A 6A89               M         clrf    LATA                ; clear pins before proceeding
00028C 6A8A               M         clrf    LATB
00028E 6A8B               M         clrf    LATC
000290 6A8C               M         clrf    LATD
000292 EF?? F???          M         goto    PC_MODE
                          M 
000296                    M Exit
000296 0000               M         nop
000298 D???           00546         bra     HOLD_STANDBY
                      00547         
                      00548 ;*******************************************************************************
                      00549 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00550 ;*******************************************************************************
                      00551 
00029A                00552 DC_TEST_CW
00029A 0E00           00553         movlw   b'00000000'
00029C 6E84           00554         movwf   PORTE
                      00555         Delay50N    delayR, 0x0a   
  0000                    M         local   loop
00029E 0E0A               M         movlw   0x0a
0002A0 6E1A               M         movwf   delayR
                          M 
0002A2                    M loop
0002A2 EC?? F???          M         call    Delay50ms
0002A6 2E1A               M         decfsz  delayR
0002A8 EF?? F???          M         goto    loop
0002AC                00556 DC_TEST_CW_HOLD
0002AC 0E01           00557         movlw   b'00000001'
0002AE 6E84           00558         movwf   PORTE
                      00559 
0002B0 EC?? F???      00560         call    READ_KEY
                      00561         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0002B4 0E0D               M         movlw   key0                ; poll for mode
0002B6 6210               M         cpfseq  KEY                 ; check this against key press
0002B8 EF?? F???          M         goto    Exit
                          M 
0002BC                    M Next
0002BC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002BE 6A8A               M         clrf    LATB
0002C0 6A8B               M         clrf    LATC
0002C2 6A8C               M         clrf    LATD
0002C4 EF?? F???          M         goto    STANDBY
                          M 
0002C8                    M Exit
0002C8 0000               M         nop
0002CA D???           00562         bra     DC_TEST_CW_HOLD
                      00563         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002CC                00564 DC_TEST_CCW
0002CC 0E00           00565         movlw   b'00000000'
0002CE 6E84           00566         movwf   PORTE
                      00567         Delay50N    delayR, 0x0a
  0000                    M         local   loop
0002D0 0E0A               M         movlw   0x0a
0002D2 6E1A               M         movwf   delayR
                          M 
0002D4                    M loop
0002D4 EC?? F???          M         call    Delay50ms
0002D8 2E1A               M         decfsz  delayR
0002DA EF?? F???          M         goto    loop
0002DE                00568 DC_TEST_CCW_HOLD
0002DE 0E02           00569         movlw   b'00000010'
0002E0 6E84           00570         movwf   PORTE
                      00571         
0002E2 EC?? F???      00572         call    READ_KEY
                      00573         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0002E6 0E0D               M         movlw   key0                ; poll for mode
0002E8 6210               M         cpfseq  KEY                 ; check this against key press
0002EA EF?? F???          M         goto    Exit
                          M 
0002EE                    M Next
0002EE 6A89               M         clrf    LATA                ; clear pins before proceeding
0002F0 6A8A               M         clrf    LATB
0002F2 6A8B               M         clrf    LATC
0002F4 6A8C               M         clrf    LATD
0002F6 EF?? F???          M         goto    STANDBY
                          M 
0002FA                    M Exit
0002FA 0000               M         nop
0002FC D???           00574         bra     DC_TEST_CCW_HOLD
                      00575                 
0002FE                00576 STEP_TEST
0002FE 6A32           00577         clrf    COLLECTIONS_COUNT
                      00578         Delay50N    delayR, 0x14
  0000                    M         local   loop
000300 0E14               M         movlw   0x14
000302 6E1A               M         movwf   delayR
                          M 
000304                    M loop
000304 EC?? F???          M         call    Delay50ms
000308 2E1A               M         decfsz  delayR
00030A EF?? F???          M         goto    loop
                      00579     
00030E                00580 ROTATE_90_TEST
00030E 0E23           00581         movlw   b'00100011'
000310 6E80           00582         movwf   PORTA
000312 EC?? F???      00583         call    delay5ms
                      00584         
000316 0E26           00585         movlw   b'00100110'
000318 6E80           00586         movwf   PORTA
00031A EC?? F???      00587         call    delay5ms
                      00588         
00031E 0E2C           00589         movlw   b'00101100'
000320 6E80           00590         movwf   PORTA
000322 EC?? F???      00591         call    delay5ms
                      00592 
000326 0E29           00593         movlw   b'00101001'
000328 6E80           00594         movwf   PORTA
00032A EC?? F???      00595         call    delay5ms
                      00596         
00032E 2A32           00597         incf    COLLECTIONS_COUNT
000330 0E78           00598         movlw   d'120'
000332 6232           00599         cpfseq  COLLECTIONS_COUNT
000334 D???           00600         bra     ROTATE_90_TEST
                      00601         
000336 D???           00602         bra STEP_TEST
                      00603 
000338                00604 COLOUR_TEST
                      00605 
000338                00606 LOOPING
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00607         Delay50N delayR, 0x28
  0000                    M         local   loop
000338 0E28               M         movlw   0x28
00033A 6E1A               M         movwf   delayR
                          M 
00033C                    M loop
00033C EC?? F???          M         call    Delay50ms
000340 2E1A               M         decfsz  delayR
000342 EF?? F???          M         goto    loop
000346 EC?? F???      00608         call    ClrLCD
00034A EC?? F???      00609         call    READ_ARDUINO
00034E 0F30           00610         addlw   0x30
000350 EC?? F???      00611         call    WR_DATA
000354 D???           00612         bra LOOPING
                      00613 
                      00614 ;*******************************************************************************
                      00615 ; execution mode
                      00616 ;*******************************************************************************
                      00617         
000356                00618 EXECUTION
000356 EC?? F???      00619         call        ClearEEPROM_21
                      00620         
                      00621         ; save the starting time
00035A EC?? F???      00622         call        SAVE_TIME
                      00623                 
                      00624         ; display
00035E 681E           00625         setf        inExecution
000360 EC?? F???      00626         call        ClrLCD
                      00627         Display     Exe1
  0000                    M         local   loop
000364 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000366 6EF8               M         movwf   TBLPTRU
000368 0E??               M         movlw   high Exe1       ; Move Table<15:8>
00036A 6EF7               M         movwf   TBLPTRH
00036C 0E??               M         movlw   low Exe1        ; Move Table<7:0>
00036E 6EF6               M         movwf   TBLPTRL
000370 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000372 50F5               M         movf    TABLAT, W
000374                    M loop
000374 EC?? F???          M         call    WR_DATA         ; write to LCD
000378 000B               M         tblrd+*                 ; next row in table
00037A 50F5               M         movf    TABLAT, W
00037C E1??               M         bnz     loop
00037E EC?? F???      00628         call        LCD_L2
                      00629         
000382 0EC5           00630         movlw       0xc5                    ; setting up timer
000384 6ED7           00631         movwf       TMR0H
000386 0E44           00632         movlw       0x44    
000388 6ED6           00633         movwf       TMR0L
                      00634         
00038A 8ED5           00635         bsf         T0CON, TMR0ON           ; turning on timer
                      00636         
                      00637         ; initialize variables
00038C 6A18           00638         clrf        OP_sec
00038E 6A19           00639         clrf        OP_INT
                      00640         
000390 6A2D           00641         clrf        ESKA
000392 6A2E           00642         clrf        ESKA_NOCAP
000394 6A2F           00643         clrf        YOP
000396 6A30           00644         clrf        YOP_NOCAP
000398 6A31           00645         clrf        TOTAL_BOTTLES
00039A 0E01           00646         movlw       d'1'
00039C 6E35           00647         movwf       TRAY_CURRENT
00039E 6A34           00648         clrf        TRAY_DELAY
                      00649         
                      00650         ; todo: make sure tray is in position one on reset, add some delay
                      00651         
0003A0 EF?? F???      00652         goto        COLLECTIONS_STEP
                      00653 
0003A4                00654 COLLECTIONS_STEP
0003A4 6A32           00655         clrf        COLLECTIONS_COUNT
                      00656 
0003A6                00657 ROTATE_90
0003A6 0E23           00658         movlw   b'00100011'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003A8 6E80           00659         movwf   PORTA
0003AA EC?? F???      00660         call    delay5ms
                      00661 
0003AE 0E26           00662         movlw   b'00100110'
0003B0 6E80           00663         movwf   PORTA
0003B2 EC?? F???      00664         call    delay5ms
                      00665         
0003B6 0E2C           00666         movlw   b'00101100'
0003B8 6E80           00667         movwf   PORTA
0003BA EC?? F???      00668         call    delay5ms
                      00669 
0003BE 0E29           00670         movlw   b'00101001'
0003C0 6E80           00671         movwf   PORTA
0003C2 EC?? F???      00672         call    delay5ms
                      00673         
0003C6 2A32           00674         incf    COLLECTIONS_COUNT
0003C8 0E78           00675         movlw   d'120'
0003CA 6232           00676         cpfseq  COLLECTIONS_COUNT
0003CC D???           00677         bra     ROTATE_90
                      00678         
0003CE D???           00679         bra DETECTIONS
                      00680         
0003D0                00681 DETECTIONS
                      00682         ; first up, lets give the 0.5 seconds to process its data
                      00683         ;Delay50N delayR, 0x0a
                      00684 ;       movlw   d'1000'
                      00685 ;       movwf   TRAY_DELAY
                      00686         
                      00687         ; reading data from arduino - expect: 1 for eska cap, 2 for eska no cap
                      00688         ;                                     3 for yop cap, 4 for yop no cap
                      00689         ;                                     5 for no bottle, get outta here
                      00690         ;call   READ_ARDUINO
                      00691         
0003D0 0E02           00692         movlw   d'2'                    ; testing!!!
0003D2 6E2C           00693         movwf   DETECTION_VAL
                      00694         
                      00695         ; now for handling the comparisions
0003D4 0E05           00696         movlw   d'5'
0003D6 602C           00697         cpfslt  DETECTION_VAL           ; If DETECTION_VAL = 5, make another collections step
0003D8 EF?? F???      00698         goto    COLLECTIONS_STEP
                      00699         
                      00700         ; okay we have a bottle, increment toal and see what it is
0003DC 2A31           00701         incf    TOTAL_BOTTLES
                      00702 
0003DE 0E04           00703         movlw   d'4'
0003E0 5C2C           00704         subwf   DETECTION_VAL, 0
0003E2 E0??           00705         bz      INC_YOPNOCAP
                      00706         
0003E4 0E03           00707         movlw   d'3'
0003E6 5C2C           00708         subwf   DETECTION_VAL, 0
0003E8 E0??           00709         bz      INC_YOPCAP
                      00710         
0003EA 0E02           00711         movlw   d'2'
0003EC 5C2C           00712         subwf   DETECTION_VAL, 0
0003EE E0??           00713         bz      INC_ESKANOCAP
                      00714         
0003F0 0E01           00715         movlw   d'1'
0003F2 5C2C           00716         subwf   DETECTION_VAL, 0
0003F4 E0??           00717         bz      INC_ESKACAP
                      00718         
                      00719         ;make some kind of fail safe here.
                      00720         
0003F6                00721 INC_YOPNOCAP
0003F6 2A30           00722         incf    YOP_NOCAP
                      00723 
                      00724         ; determine what position to rotate the tray to: brute force, but w/e
0003F8 0E04           00725         movlw   d'4'
0003FA 6E36           00726         movwf   TRAY_GOTO
0003FC 5C35           00727         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0003FE E0??           00728         bz      TRAY_STEP_END
                      00729         
000400 0E03           00730         movlw   d'3'
000402 5C35           00731         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
000404 E0??           00732         bz      TRAY_STEP_CW            
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00733         
000406 0E02           00734         movlw   d'2'
000408 5C35           00735         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
00040A E0??           00736         bz      TRAY_STEP_CW
                      00737         
00040C 0E01           00738         movlw   d'1'
00040E 5C35           00739         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
000410 E0??           00740         bz      TRAY_STEP_CW
                      00741         
000412                00742 INC_YOPCAP
000412 2A2F           00743         incf    YOP
                      00744         
                      00745         ; determine what position to rotate the tray to: brute force, but w/e
000414 0E03           00746         movlw   d'3'
000416 6E36           00747         movwf   TRAY_GOTO
000418 5C35           00748         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00041A E0??           00749         bz      TRAY_STEP_END
                      00750         
00041C 0E04           00751         movlw   d'4'
00041E 5C35           00752         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
000420 E0??           00753         bz      TRAY_STEP_CCW   
                      00754         
000422 0E02           00755         movlw   d'2'
000424 5C35           00756         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
000426 E0??           00757         bz      TRAY_STEP_CW
                      00758         
000428 0E01           00759         movlw   d'1'
00042A 5C35           00760         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
00042C E0??           00761         bz      TRAY_STEP_CW
                      00762         
00042E                00763 INC_ESKANOCAP
00042E 2A2E           00764         incf    ESKA_NOCAP
000430 EF?? F???      00765         goto    CHECK_DONE
                      00766         
                      00767         ; determine what position to rotate the tray to: brute force, but w/e
000434 0E02           00768         movlw   d'2'
000436 6E36           00769         movwf   TRAY_GOTO
000438 5C35           00770         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
00043A E0??           00771         bz      TRAY_STEP_END
                      00772         
00043C 0E04           00773         movlw   d'4'
00043E 5C35           00774         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
000440 E0??           00775         bz      TRAY_STEP_CCW   
                      00776         
000442 0E03           00777         movlw   d'3'
000444 5C35           00778         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
000446 E0??           00779         bz      TRAY_STEP_CCW
                      00780         
000448 0E01           00781         movlw   d'1'
00044A 5C35           00782         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
00044C E0??           00783         bz      TRAY_STEP_CW
                      00784         
00044E                00785 INC_ESKACAP
00044E 2A2D           00786         incf    ESKA
                      00787         
                      00788         ; determine what position to rotate the tray to: brute force, but w/e
000450 0E01           00789         movlw   d'1'
000452 6E36           00790         movwf   TRAY_GOTO
000454 5C35           00791         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000456 E0??           00792         bz      TRAY_STEP_END
                      00793         
000458 0E04           00794         movlw   d'4'
00045A 5C35           00795         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
00045C E0??           00796         bz      TRAY_STEP_CCW   
                      00797         
00045E 0E03           00798         movlw   d'3'
000460 5C35           00799         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
000462 E0??           00800         bz      TRAY_STEP_CCW
                      00801         
000464 0E02           00802         movlw   d'2'
000466 5C35           00803         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
000468 E0??           00804         bz      TRAY_STEP_CCW
                      00805 
00046A                00806 TRAY_STEP_CW
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00046A 6A33           00807         clrf    TRAY_COUNT
00046C 0E00           00808         movlw   b'00000000'
00046E 6E84           00809         movwf   PORTE
                      00810 
000470                00811 TRAY_CW_HOLD
000470 0E01           00812         movlw   b'00000001'
000472 6E84           00813         movwf   PORTE
                      00814 
000474 2A33           00815         incf    TRAY_COUNT
000476 C033 FFE8      00816         movff   TRAY_COUNT, WREG
00047A 6234           00817         cpfseq  TRAY_DELAY
00047C EF?? F???      00818         goto    TRAY_CW_HOLD
                      00819         
000480 D???           00820         bra     TRAY_STEP_END
                      00821         
000482                00822 TRAY_STEP_CCW
000482 6A33           00823         clrf    TRAY_COUNT
000484 0E00           00824         movlw   b'00000000'
000486 6E84           00825         movwf   PORTE
                      00826 
000488                00827 TRAY_CCW_HOLD
000488 0E02           00828         movlw   b'00000010'
00048A 6E84           00829         movwf   PORTE
                      00830 
00048C 2A33           00831         incf    TRAY_COUNT
00048E C033 FFE8      00832         movff   TRAY_COUNT, WREG
000492 6234           00833         cpfseq  TRAY_DELAY
000494 D???           00834         bra     TRAY_CCW_HOLD
                      00835         
000496 D???           00836         bra     TRAY_STEP_END
                      00837         
000498                00838 TRAY_STEP_END
000498 C036 F035      00839         movff   TRAY_GOTO, TRAY_CURRENT
00049C 0E00           00840         movlw   b'00000000'
00049E 6E84           00841         movwf   PORTE
                      00842         
0004A0                00843 CHECK_DONE
0004A0 0E09           00844         movlw   d'9'
0004A2 6231           00845         cpfseq  TOTAL_BOTTLES
0004A4 EF?? F???      00846         goto    COLLECTIONS_STEP
                      00847         
0004A8 EF?? F???      00848         goto    EXIT_EXE
                      00849         
0004AC                00850 EXIT_EXE
                      00851         ; stop timer and save the execution time to eeprom
0004AC 9ED5           00852         bcf         T0CON, TMR0ON
0004AE EC?? F???      00853         call        SAVE_EXE_TIME
                      00854                 
                      00855         ; Clear inExecution flag to stop '*' interrupts
0004B2 6A1E           00856         clrf        inExecution
0004B4 6A37           00857         clrf        STOP_CONDITION      ; regular stop, saved in eeprom as 0
                      00858         
0004B6 EC?? F???      00859                 call        ClrLCD
                      00860         Display     SAVE
  0000                    M         local   loop
0004BA 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0004BC 6EF8               M         movwf   TBLPTRU
0004BE 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0004C0 6EF7               M         movwf   TBLPTRH
0004C2 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0004C4 6EF6               M         movwf   TBLPTRL
0004C6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004C8 50F5               M         movf    TABLAT, W
0004CA                    M loop
0004CA EC?? F???          M         call    WR_DATA         ; write to LCD
0004CE 000B               M         tblrd+*                 ; next row in table
0004D0 50F5               M         movf    TABLAT, W
0004D2 E1??               M         bnz     loop
0004D4 EC?? F???      00861         call        SaveData
0004D8 EF?? F???      00862         goto        LOG
                      00863 
                      00864 ;*******************************************************************************
                      00865 ; sorting statistics log mode
                      00866 ;*******************************************************************************
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00867         
0004DC                00868 LOG
0004DC EC?? F???      00869         call    ClrLCD
                      00870         Display Log1
  0000                    M         local   loop
0004E0 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0004E2 6EF8               M         movwf   TBLPTRU
0004E4 0E??               M         movlw   high Log1       ; Move Table<15:8>
0004E6 6EF7               M         movwf   TBLPTRH
0004E8 0E??               M         movlw   low Log1        ; Move Table<7:0>
0004EA 6EF6               M         movwf   TBLPTRL
0004EC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004EE 50F5               M         movf    TABLAT, W
0004F0                    M loop
0004F0 EC?? F???          M         call    WR_DATA         ; write to LCD
0004F4 000B               M         tblrd+*                 ; next row in table
0004F6 50F5               M         movf    TABLAT, W
0004F8 E1??               M         bnz     loop
                      00871 
                      00872         ; display most recent run data
0004FA 0E0A           00873         movlw   d'10'
0004FC 6E21           00874         movwf   L_EE
0004FE EC?? F???      00875         call    DisplayExeTime
                      00876 
000502 EC?? F???      00877         call    LCD_L2
000506 0E0D           00878         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000508 6E21           00879         movwf   L_EE
00050A EC?? F???      00880         call    DispOpSort
                      00881 
00050E                00882 HOLD_LOG
00050E EC?? F???      00883         call    READ_KEY
                      00884         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000512 0E07               M         movlw   keyB                ; poll for mode
000514 6210               M         cpfseq  KEY                 ; check this against key press
000516 EF?? F???          M         goto    Exit
                          M 
00051A                    M Next
00051A 6A89               M         clrf    LATA                ; clear pins before proceeding
00051C 6A8A               M         clrf    LATB
00051E 6A8B               M         clrf    LATC
000520 6A8C               M         clrf    LATD
000522 EF?? F???          M         goto    LOG_INFO
                          M 
000526                    M Exit
000526 0000               M         nop
                      00885         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000528 0E0D               M         movlw   key0                ; poll for mode
00052A 6210               M         cpfseq  KEY                 ; check this against key press
00052C EF?? F???          M         goto    Exit
                          M 
000530                    M Next
000530 6A89               M         clrf    LATA                ; clear pins before proceeding
000532 6A8A               M         clrf    LATB
000534 6A8B               M         clrf    LATC
000536 6A8C               M         clrf    LATD
000538 EF?? F???          M         goto    STANDBY
                          M 
00053C                    M Exit
00053C 0000               M         nop
00053E D???           00886         bra     HOLD_LOG
                      00887 
000540                00888 LOG_INFO
000540 EC?? F???      00889         call    ClrLCD
000544 6A21           00890         clrf    L_EE
000546 EC?? F???      00891         call    DispOpRTC
                      00892         
00054A EC?? F???      00893         call    LCD_L2
                      00894         Display LogInfo2
  0000                    M         local   loop
00054E 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000550 6EF8               M         movwf   TBLPTRU
000552 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000554 6EF7               M         movwf   TBLPTRH
000556 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000558 6EF6               M         movwf   TBLPTRL
00055A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00055C 50F5               M         movf    TABLAT, W
00055E                    M loop
00055E EC?? F???          M         call    WR_DATA         ; write to LCD
000562 000B               M         tblrd+*                 ; next row in table
000564 50F5               M         movf    TABLAT, W
000566 E1??               M         bnz     loop
000568 6A20           00895         clrf    H_EE
00056A 6A21           00896         clrf    L_EE
                      00897         ;DisplayLog  H_EE, L_EE
00056C                00898 HOLD_LOG_INFO
00056C EC?? F???      00899         call    READ_KEY
                      00900         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000570 0E0D               M         movlw   key0                ; poll for mode
000572 6210               M         cpfseq  KEY                 ; check this against key press
000574 EF?? F???          M         goto    Exit
                          M 
000578                    M Next
000578 6A89               M         clrf    LATA                ; clear pins before proceeding
00057A 6A8A               M         clrf    LATB
00057C 6A8B               M         clrf    LATC
00057E 6A8C               M         clrf    LATD
000580 EF?? F???          M         goto    LOG
                          M 
000584                    M Exit
000584 0000               M         nop
000586 D???           00901         bra     HOLD_LOG
                      00902         
                      00903 ;*******************************************************************************
                      00904 ; permanent logs
                      00905 ;*******************************************************************************
                      00906 
000588                00907 PERM_LOG
000588 EC?? F???      00908         call    ClrLCD
                      00909         Display PermLog1
  0000                    M         local   loop
00058C 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
00058E 6EF8               M         movwf   TBLPTRU
000590 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000592 6EF7               M         movwf   TBLPTRH
000594 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
000596 6EF6               M         movwf   TBLPTRL
000598 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00059A 50F5               M         movf    TABLAT, W
00059C                    M loop
00059C EC?? F???          M         call    WR_DATA         ; write to LCD
0005A0 000B               M         tblrd+*                 ; next row in table
0005A2 50F5               M         movf    TABLAT, W
0005A4 E1??               M         bnz     loop
0005A6 EC?? F???      00910         call    LCD_L2
                      00911         Display PermLog2
  0000                    M         local   loop
0005AA 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0005AC 6EF8               M         movwf   TBLPTRU
0005AE 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0005B0 6EF7               M         movwf   TBLPTRH
0005B2 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0005B4 6EF6               M         movwf   TBLPTRL
0005B6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005B8 50F5               M         movf    TABLAT, W
0005BA                    M loop
0005BA EC?? F???          M         call    WR_DATA         ; write to LCD
0005BE 000B               M         tblrd+*                 ; next row in table
0005C0 50F5               M         movf    TABLAT, W
0005C2 E1??               M         bnz     loop
                      00912         
0005C4                00913 HOLD_PERM_LOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005C4 EC?? F???      00914         call    READ_KEY
                      00915         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005C8 0E0D               M         movlw   key0                ; poll for mode
0005CA 6210               M         cpfseq  KEY                 ; check this against key press
0005CC EF?? F???          M         goto    Exit
                          M 
0005D0                    M Next
0005D0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005D2 6A8A               M         clrf    LATB
0005D4 6A8B               M         clrf    LATC
0005D6 6A8C               M         clrf    LATD
0005D8 EF?? F???          M         goto    STANDBY
                          M 
0005DC                    M Exit
0005DC 0000               M         nop
                      00916         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
0005DE 0E00               M         movlw   key1                ; poll for mode
0005E0 6210               M         cpfseq  KEY                 ; check this against key press
0005E2 EF?? F???          M         goto    Exit
                          M 
0005E6                    M Next
0005E6 6A89               M         clrf    LATA                ; clear pins before proceeding
0005E8 6A8A               M         clrf    LATB
0005EA 6A8B               M         clrf    LATC
0005EC 6A8C               M         clrf    LATD
0005EE EF?? F???          M         goto    PLOG
                          M 
0005F2                    M Exit
0005F2 0000               M         nop
                      00917         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
0005F4 0E01               M         movlw   key2                ; poll for mode
0005F6 6210               M         cpfseq  KEY                 ; check this against key press
0005F8 EF?? F???          M         goto    Exit
                          M 
0005FC                    M Next
0005FC 6A89               M         clrf    LATA                ; clear pins before proceeding
0005FE 6A8A               M         clrf    LATB
000600 6A8B               M         clrf    LATC
000602 6A8C               M         clrf    LATD
000604 EF?? F???          M         goto    PLOG
                          M 
000608                    M Exit
000608 0000               M         nop
                      00918         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
00060A 0E02               M         movlw   key3                ; poll for mode
00060C 6210               M         cpfseq  KEY                 ; check this against key press
00060E EF?? F???          M         goto    Exit
                          M 
000612                    M Next
000612 6A89               M         clrf    LATA                ; clear pins before proceeding
000614 6A8A               M         clrf    LATB
000616 6A8B               M         clrf    LATC
000618 6A8C               M         clrf    LATD
00061A EF?? F???          M         goto    PLOG
                          M 
00061E                    M Exit
00061E 0000               M         nop
                      00919         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000620 0E04               M         movlw   key4                ; poll for mode
000622 6210               M         cpfseq  KEY                 ; check this against key press
000624 EF?? F???          M         goto    Exit
                          M 
000628                    M Next
000628 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00062A 6A8A               M         clrf    LATB
00062C 6A8B               M         clrf    LATC
00062E 6A8C               M         clrf    LATD
000630 EF?? F???          M         goto    PLOG
                          M 
000634                    M Exit
000634 0000               M         nop
                      00920         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000636 0E05               M         movlw   key5                ; poll for mode
000638 6210               M         cpfseq  KEY                 ; check this against key press
00063A EF?? F???          M         goto    Exit
                          M 
00063E                    M Next
00063E 6A89               M         clrf    LATA                ; clear pins before proceeding
000640 6A8A               M         clrf    LATB
000642 6A8B               M         clrf    LATC
000644 6A8C               M         clrf    LATD
000646 EF?? F???          M         goto    PLOG
                          M 
00064A                    M Exit
00064A 0000               M         nop
                      00921         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
00064C 0E06               M         movlw   key6                ; poll for mode
00064E 6210               M         cpfseq  KEY                 ; check this against key press
000650 EF?? F???          M         goto    Exit
                          M 
000654                    M Next
000654 6A89               M         clrf    LATA                ; clear pins before proceeding
000656 6A8A               M         clrf    LATB
000658 6A8B               M         clrf    LATC
00065A 6A8C               M         clrf    LATD
00065C EF?? F???          M         goto    PLOG
                          M 
000660                    M Exit
000660 0000               M         nop
                      00922         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000662 0E08               M         movlw   key7                ; poll for mode
000664 6210               M         cpfseq  KEY                 ; check this against key press
000666 EF?? F???          M         goto    Exit
                          M 
00066A                    M Next
00066A 6A89               M         clrf    LATA                ; clear pins before proceeding
00066C 6A8A               M         clrf    LATB
00066E 6A8B               M         clrf    LATC
000670 6A8C               M         clrf    LATD
000672 EF?? F???          M         goto    PLOG
                          M 
000676                    M Exit
000676 0000               M         nop
                      00923         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000678 0E09               M         movlw   key8                ; poll for mode
00067A 6210               M         cpfseq  KEY                 ; check this against key press
00067C EF?? F???          M         goto    Exit
                          M 
000680                    M Next
000680 6A89               M         clrf    LATA                ; clear pins before proceeding
000682 6A8A               M         clrf    LATB
000684 6A8B               M         clrf    LATC
000686 6A8C               M         clrf    LATD
000688 EF?? F???          M         goto    PLOG
                          M 
00068C                    M Exit
00068C 0000               M         nop
                      00924         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00068E 0E0A               M         movlw   key9                ; poll for mode
000690 6210               M         cpfseq  KEY                 ; check this against key press
000692 EF?? F???          M         goto    Exit
                          M 
000696                    M Next
000696 6A89               M         clrf    LATA                ; clear pins before proceeding
000698 6A8A               M         clrf    LATB
00069A 6A8B               M         clrf    LATC
00069C 6A8C               M         clrf    LATD
00069E EF?? F???          M         goto    PLOG
                          M 
0006A2                    M Exit
0006A2 0000               M         nop
0006A4 D???           00925         bra HOLD_PERM_LOG
                      00926         
0006A6                00927 PLOG
0006A6 EC?? F???      00928         call    ClrLCD
                      00929         Display PermLog1
  0000                    M         local   loop
0006AA 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0006AC 6EF8               M         movwf   TBLPTRU
0006AE 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0006B0 6EF7               M         movwf   TBLPTRH
0006B2 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0006B4 6EF6               M         movwf   TBLPTRL
0006B6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006B8 50F5               M         movf    TABLAT, W
0006BA                    M loop
0006BA EC?? F???          M         call    WR_DATA         ; write to LCD
0006BE 000B               M         tblrd+*                 ; next row in table
0006C0 50F5               M         movf    TABLAT, W
0006C2 E1??               M         bnz     loop
                      00930         
                      00931         ; find the key press value
0006C4 C010 FFE8      00932         movff   KEY, WREG
0006C8 2AE8           00933         incf    WREG        ; W = KEY+1
0006CA 6E17           00934         movwf   temp
                      00935         
0006CC 42E8           00936         rrncf   WREG        ; division by 4
0006CE 9EE8           00937         bcf     WREG, 7     ; clear last bit, overflow from rotate
0006D0 42E8           00938         rrncf   WREG        
0006D2 9EE8           00939         bcf     WREG, 7
0006D4 5E17           00940         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0006D6 C017 FFE8      00941         movff   temp, WREG
0006DA C017 F011      00942         movff   temp, temp_KEY
0006DE 0D15           00943         mullw   d'21'       ; indexed as mutliples of 21
                      00944 
0006E0                00945 displayNum
0006E0 C011 FFE8      00946         movff   temp_KEY, WREG
0006E4 0F30           00947         addlw   0x30
0006E6 EC?? F???      00948         call    WR_DATA
0006EA 0E3A           00949         movlw   ":"
0006EC EC?? F???      00950         call    WR_DATA
0006F0 0E20           00951         movlw   " "
0006F2 EC?? F???      00952         call    WR_DATA
                      00953         
0006F6 CFF3 F021      00954         movff   PRODL, L_EE
0006FA 0E00           00955         movlw   d'0'
0006FC 2621           00956         addwf   L_EE
                      00957         READEE  OP_sec, H_EE, L_EE
0006FE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000702 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000706 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000708 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00070A 80A6               M         bsf     EECON1, RD          ; read EEPROM
00070C CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000710 2A21           00958         incf    L_EE
                      00959         READEE  OP_INT, H_EE, L_EE
000712 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000716 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00071A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00071C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00071E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000720 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000724 2A21           00960         incf    L_EE
000726 EC?? F???      00961         call    DisplayExeTime
00072A CFF3 F021      00962         movff   PRODL, L_EE
                      00963         
                      00964         ; reset eeprom to beginning
00072E EC?? F???      00965         call    LCD_L2
000732 CFF3 F021      00966         movff   PRODL, L_EE
000736 EC?? F???      00967         call    DispOpRTC
                      00968         
00073A                00969 HOLD_PLOG
00073A EC?? F???      00970         call    READ_KEY
                      00971         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
00073E 0E03               M         movlw   keyA                ; poll for mode
000740 6210               M         cpfseq  KEY                 ; check this against key press
000742 EF?? F???          M         goto    Exit
                          M 
000746                    M Next
000746 6A89               M         clrf    LATA                ; clear pins before proceeding
000748 6A8A               M         clrf    LATB
00074A 6A8B               M         clrf    LATC
00074C 6A8C               M         clrf    LATD
00074E EF?? F???          M         goto    PLOG_DETAILS
                          M 
000752                    M Exit
000752 0000               M         nop
                      00972         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000754 0E0D               M         movlw   key0                ; poll for mode
000756 6210               M         cpfseq  KEY                 ; check this against key press
000758 EF?? F???          M         goto    Exit
                          M 
00075C                    M Next
00075C 6A89               M         clrf    LATA                ; clear pins before proceeding
00075E 6A8A               M         clrf    LATB
000760 6A8B               M         clrf    LATC
000762 6A8C               M         clrf    LATD
000764 EF?? F???          M         goto    PERM_LOG
                          M 
000768                    M Exit
000768 0000               M         nop
00076A D???           00973         bra HOLD_PLOG
                      00974         
00076C                00975 PLOG_DETAILS
00076C EC?? F???      00976         call    ClrLCD
                      00977         
                      00978         Display Log1
  0000                    M         local   loop
000770 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000772 6EF8               M         movwf   TBLPTRU
000774 0E??               M         movlw   high Log1       ; Move Table<15:8>
000776 6EF7               M         movwf   TBLPTRH
000778 0E??               M         movlw   low Log1        ; Move Table<7:0>
00077A 6EF6               M         movwf   TBLPTRL
00077C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00077E 50F5               M         movf    TABLAT, W
000780                    M loop
000780 EC?? F???          M         call    WR_DATA         ; write to LCD
000784 000B               M         tblrd+*                 ; next row in table
000786 50F5               M         movf    TABLAT, W
000788 E1??               M         bnz     loop
00078A EC?? F???      00979         call    DisplayExeTime
                      00980         
00078E EC?? F???      00981         call    LCD_L2
000792 EC?? F???      00982         call    DispOpSort
                      00983         
000796                00984 HOLD_PLOG_DETAILS
000796 EC?? F???      00985         call    READ_KEY
                      00986         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00079A 0E0D               M         movlw   key0                ; poll for mode
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00079C 6210               M         cpfseq  KEY                 ; check this against key press
00079E EF?? F???          M         goto    Exit
                          M 
0007A2                    M Next
0007A2 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A4 6A8A               M         clrf    LATB
0007A6 6A8B               M         clrf    LATC
0007A8 6A8C               M         clrf    LATD
0007AA EF?? F???          M         goto    PERM_LOG
                          M 
0007AE                    M Exit
0007AE 0000               M         nop
0007B0 D???           00987         bra HOLD_PLOG_DETAILS
                      00988         
                      00989 ;*******************************************************************************
                      00990 ; pc interface
                      00991 ;*******************************************************************************
                      00992 
0007B2                00993 PC_MODE
0007B2 EC?? F???      00994         call    ClrLCD
                      00995         Display PC1
  0000                    M         local   loop
0007B6 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0007B8 6EF8               M         movwf   TBLPTRU
0007BA 0E??               M         movlw   high PC1        ; Move Table<15:8>
0007BC 6EF7               M         movwf   TBLPTRH
0007BE 0E??               M         movlw   low PC1         ; Move Table<7:0>
0007C0 6EF6               M         movwf   TBLPTRL
0007C2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007C4 50F5               M         movf    TABLAT, W
0007C6                    M loop
0007C6 EC?? F???          M         call    WR_DATA         ; write to LCD
0007CA 000B               M         tblrd+*                 ; next row in table
0007CC 50F5               M         movf    TABLAT, W
0007CE E1??               M         bnz     loop
0007D0 EC?? F???      00996         call    LCD_L2
                      00997         Display PC2
  0000                    M         local   loop
0007D4 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0007D6 6EF8               M         movwf   TBLPTRU
0007D8 0E??               M         movlw   high PC2        ; Move Table<15:8>
0007DA 6EF7               M         movwf   TBLPTRH
0007DC 0E??               M         movlw   low PC2         ; Move Table<7:0>
0007DE 6EF6               M         movwf   TBLPTRL
0007E0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007E2 50F5               M         movf    TABLAT, W
0007E4                    M loop
0007E4 EC?? F???          M         call    WR_DATA         ; write to LCD
0007E8 000B               M         tblrd+*                 ; next row in table
0007EA 50F5               M         movf    TABLAT, W
0007EC E1??               M         bnz     loop
0007EE CFF9 F029      00998         movff   PCL, PC_PCL
0007F2 CFFA F02A      00999         movff   PCLATH, PC_PCLATH
0007F6 CFFB F02B      01000         movff   PCLATU, PC_PCLATU
                      01001         
0007FA                01002 HOLD_PC
0007FA EC?? F???      01003         call    READ_KEY
                      01004         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0007FE 0E0D               M         movlw   key0                ; poll for mode
000800 6210               M         cpfseq  KEY                 ; check this against key press
000802 EF?? F???          M         goto    Exit
                          M 
000806                    M Next
000806 6A89               M         clrf    LATA                ; clear pins before proceeding
000808 6A8A               M         clrf    LATB
00080A 6A8B               M         clrf    LATC
00080C 6A8C               M         clrf    LATD
00080E EF?? F???          M         goto    STANDBY
                          M 
000812                    M Exit
000812 0000               M         nop
                      01005         ChangeMode  keyH, PC_TRANSFER
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
000814 0E0E               M         movlw   keyH                ; poll for mode
000816 6210               M         cpfseq  KEY                 ; check this against key press
000818 EF?? F???          M         goto    Exit
                          M 
00081C                    M Next
00081C 6A89               M         clrf    LATA                ; clear pins before proceeding
00081E 6A8A               M         clrf    LATB
000820 6A8B               M         clrf    LATC
000822 6A8C               M         clrf    LATD
000824 EF?? F???          M         goto    PC_TRANSFER
                          M 
000828                    M Exit
000828 0000               M         nop
00082A D???           01006         bra     HOLD_PC
                      01007 
00082C                01008 PC_TRANSFER
00082C 6828           01009         setf    transferring
00082E EC?? F???      01010         call    ClrLCD
                      01011         Display PCTransfer
  0000                    M         local   loop
000832 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000834 6EF8               M         movwf   TBLPTRU
000836 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000838 6EF7               M         movwf   TBLPTRH
00083A 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
00083C 6EF6               M         movwf   TBLPTRL
00083E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000840 50F5               M         movf    TABLAT, W
000842                    M loop
000842 EC?? F???          M         call    WR_DATA         ; write to LCD
000846 000B               M         tblrd+*                 ; next row in table
000848 50F5               M         movf    TABLAT, W
00084A E1??               M         bnz     loop
00084C EC?? F???      01012         call    DataUSART
000850 6A28           01013         clrf    transferring
000852 EF?? F???      01014         goto    STANDBY
                      01015         
                      01016 ;*******************************************************************************
                      01017 ; subroutines
                      01018 ;*******************************************************************************
                      01019 
000856                01020 SaveData
000856 C02D FFE8      01021         movff       ESKA, WREG
00085A 0F30           01022         addlw       0x30
                      01023         WriteEE     WREG, H_EE, L_EE
00085C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000860 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000864 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000868 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00086A D???               M         bra     $-2
                          M 
00086C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00086E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000870 84A6               M         bsf     EECON1, WREN        ; enable write
000872 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000874 98A1               M         bcf     PIR2, EEIF
                          M 
000876 0E55               M         movlw   0x55
000878 6EA7               M         movwf   EECON2              ; write 55h
00087A 0EAA               M         movlw   0xaa
00087C 6EA7               M         movwf   EECON2              ; write 0xaa
00087E 82A6               M         bsf     EECON1, WR          ; begin write
000880 B2A6               M         btfsc   EECON1, WR
000882 D???               M         bra     $-2
                          M 
000884 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000886 94A6               M         bcf     EECON1, WREN        ; disable writes
000888 2A21           01024         incf        L_EE
                      01025         
00088A C02E FFE8      01026         movff       ESKA_NOCAP, WREG
00088E 0F30           01027         addlw       0x30
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01028         WriteEE     WREG, H_EE, L_EE
000890 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000894 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000898 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00089C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00089E D???               M         bra     $-2
                          M 
0008A0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008A2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008A4 84A6               M         bsf     EECON1, WREN        ; enable write
0008A6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008A8 98A1               M         bcf     PIR2, EEIF
                          M 
0008AA 0E55               M         movlw   0x55
0008AC 6EA7               M         movwf   EECON2              ; write 55h
0008AE 0EAA               M         movlw   0xaa
0008B0 6EA7               M         movwf   EECON2              ; write 0xaa
0008B2 82A6               M         bsf     EECON1, WR          ; begin write
0008B4 B2A6               M         btfsc   EECON1, WR
0008B6 D???               M         bra     $-2
                          M 
0008B8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008BA 94A6               M         bcf     EECON1, WREN        ; disable writes
0008BC 2A21           01029         incf        L_EE
                      01030         
0008BE C02F FFE8      01031         movff       YOP, WREG
0008C2 0F30           01032         addlw       0x30
                      01033         WriteEE     WREG, H_EE, L_EE
0008C4 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008C8 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008CC CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0008D0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008D2 D???               M         bra     $-2
                          M 
0008D4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008D6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008D8 84A6               M         bsf     EECON1, WREN        ; enable write
0008DA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008DC 98A1               M         bcf     PIR2, EEIF
                          M 
0008DE 0E55               M         movlw   0x55
0008E0 6EA7               M         movwf   EECON2              ; write 55h
0008E2 0EAA               M         movlw   0xaa
0008E4 6EA7               M         movwf   EECON2              ; write 0xaa
0008E6 82A6               M         bsf     EECON1, WR          ; begin write
0008E8 B2A6               M         btfsc   EECON1, WR
0008EA D???               M         bra     $-2
                          M 
0008EC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008EE 94A6               M         bcf     EECON1, WREN        ; disable writes
0008F0 2A21           01034         incf        L_EE
                      01035         
0008F2 C030 FFE8      01036         movff       YOP_NOCAP, WREG
0008F6 0F30           01037         addlw       0x30
                      01038         WriteEE     WREG, H_EE, L_EE
0008F8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008FC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000900 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000904 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000906 D???               M         bra     $-2
                          M 
000908 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00090A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00090C 84A6               M         bsf     EECON1, WREN        ; enable write
00090E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000910 98A1               M         bcf     PIR2, EEIF
                          M 
000912 0E55               M         movlw   0x55
000914 6EA7               M         movwf   EECON2              ; write 55h
000916 0EAA               M         movlw   0xaa
000918 6EA7               M         movwf   EECON2              ; write 0xaa
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00091A 82A6               M         bsf     EECON1, WR          ; begin write
00091C B2A6               M         btfsc   EECON1, WR
00091E D???               M         bra     $-2
                          M 
000920 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000922 94A6               M         bcf     EECON1, WREN        ; disable writes
000924 2A21           01039         incf        L_EE
                      01040         
000926 C037 FFE8      01041         movff       STOP_CONDITION, WREG
00092A 0F30           01042         addlw       0x30
                      01043         WriteEE     WREG, H_EE, L_EE
00092C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000930 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000934 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000938 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00093A D???               M         bra     $-2
                          M 
00093C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00093E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000940 84A6               M         bsf     EECON1, WREN        ; enable write
000942 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000944 98A1               M         bcf     PIR2, EEIF
                          M 
000946 0E55               M         movlw   0x55
000948 6EA7               M         movwf   EECON2              ; write 55h
00094A 0EAA               M         movlw   0xaa
00094C 6EA7               M         movwf   EECON2              ; write 0xaa
00094E 82A6               M         bsf     EECON1, WR          ; begin write
000950 B2A6               M         btfsc   EECON1, WR
000952 D???               M         bra     $-2
                          M 
000954 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000956 94A6               M         bcf     EECON1, WREN        ; disable writes
000958 2A21           01044         incf        L_EE
                      01045         
00095A 0E00           01046         movlw       d'0'
00095C 6E20           01047         movwf       H_EE
00095E 0EA8           01048         movlw       d'168'              ; take d'168' as last
000960 6E21           01049         movwf       L_EE
000962 0E00           01050         movlw       d'0'
000964 6E23           01051         movwf       tempH_EE
000966 0EDC           01052         movlw       d'220'              ; temp for low constant
000968 6E24           01053         movwf       tempL_EE
                      01054         
00096A 6A16           01055         clrf        counter2
00096C 6A15           01056         clrf        counter
                      01057         
00096E                01058 ShiftLoop
00096E 2A15           01059         incf            counter
                      01060         READEE          REG_EE, H_EE, L_EE
000970 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000974 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000978 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00097A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00097C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00097E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000982 0E15           01061         movlw           d'21'
000984 2621           01062         addwf           L_EE
                      01063         WriteEE         REG_EE, H_EE, L_EE
000986 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00098A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00098E C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000992 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000994 D???               M         bra     $-2
                          M 
000996 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000998 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00099A 84A6               M         bsf     EECON1, WREN        ; enable write
00099C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00099E 98A1               M         bcf     PIR2, EEIF
                          M 
0009A0 0E55               M         movlw   0x55
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009A2 6EA7               M         movwf   EECON2              ; write 55h
0009A4 0EAA               M         movlw   0xaa
0009A6 6EA7               M         movwf   EECON2              ; write 0xaa
0009A8 82A6               M         bsf     EECON1, WR          ; begin write
0009AA B2A6               M         btfsc   EECON1, WR
0009AC D???               M         bra     $-2
                          M 
0009AE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009B0 94A6               M         bcf     EECON1, WREN        ; disable writes
0009B2 0E14           01064         movlw           d'20'
0009B4 5E21           01065         subwf           L_EE
0009B6 0E15           01066         movlw           d'21'
0009B8 6215           01067         cpfseq          counter
0009BA EF?? F???      01068         goto            ShiftLoop
                      01069         
                      01070         ; Set EEPROM address to the previous 21 byte block, and reset temp address
0009BE 0E2A           01071         movlw           d'42'
0009C0 5E21           01072         subwf           L_EE
0009C2 0EDC           01073         movlw           d'220'
0009C4 6E24           01074         movwf           tempL_EE
0009C6 6A15           01075         clrf            counter
0009C8 2A16           01076         incf            counter2
0009CA 0E09           01077         movlw           d'9'
0009CC 6216           01078         cpfseq          counter2        ; Skip if 9 shifts were made
0009CE EF?? F???      01079         goto            ShiftLoop
                      01080 
0009D2 0012           01081         return
                      01082         
0009D4                01083 RTC_INIT
                      01084         ; set sda and scl to high
0009D4 9882           01085         bcf     PORTC, 4
0009D6 9682           01086         bcf     PORTC, 3
0009D8 8894           01087         bsf     TRISC, 4
0009DA 8694           01088         bsf     TRISC, 3
                      01089         
0009DC EC?? F???      01090         call    INIT_RTC
                      01091         
                      01092         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
0009E0 0012           01093 return
                      01094         
0009E2                01095 SAVE_TIME   
                      01096         rtc_read    0x02        ; hours
0009E2 0E02               M     movlw   0x02
0009E4 6E??               M     movwf   regaddress
0009E6 EC?? F???          M     call    read_rtc
0009EA C??? FFE8          M     movff   datachar, WREG
0009EE EC?? F???          M     call    rtc_convert
0009F2 EC?? F???      01097         call    WriteEE_RTC
                      01098         rtc_read    0x01        ; minutes
0009F6 0E01               M     movlw   0x01
0009F8 6E??               M     movwf   regaddress
0009FA EC?? F???          M     call    read_rtc
0009FE C??? FFE8          M     movff   datachar, WREG
000A02 EC?? F???          M     call    rtc_convert
000A06 EC?? F???      01099         call    WriteEE_RTC
                      01100         rtc_read    0x06        ; years
000A0A 0E06               M     movlw   0x06
000A0C 6E??               M     movwf   regaddress
000A0E EC?? F???          M     call    read_rtc
000A12 C??? FFE8          M     movff   datachar, WREG
000A16 EC?? F???          M     call    rtc_convert
000A1A EC?? F???      01101         call    WriteEE_RTC
                      01102         rtc_read    0x05        ; months
000A1E 0E05               M     movlw   0x05
000A20 6E??               M     movwf   regaddress
000A22 EC?? F???          M     call    read_rtc
000A26 C??? FFE8          M     movff   datachar, WREG
000A2A EC?? F???          M     call    rtc_convert
000A2E EC?? F???      01103         call    WriteEE_RTC
                      01104         rtc_read    0x04        ; days
000A32 0E04               M     movlw   0x04
000A34 6E??               M     movwf   regaddress
000A36 EC?? F???          M     call    read_rtc
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A3A C??? FFE8          M     movff   datachar, WREG
000A3E EC?? F???          M     call    rtc_convert
000A42 EC?? F???      01105         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000A46 0012           01106 return
                      01107         
000A48                01108 SAVE_EXE_TIME
                      01109         
Warning[202]: Argument out of range.  Least significant bits used.
000A48 3818           01110         swapf   OP_sec, WREG    ; 100's seconds
000A4A 6E17           01111         movwf   temp
000A4C 0E0F           01112         movlw   0x0F
000A4E 1617           01113         andwf   temp
000A50 C017 FFE8      01114         movff   temp, WREG
000A54 0F30           01115         addlw   0x30    
                      01116         WriteEE WREG, H_EE, L_EE
000A56 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A5A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A5E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A62 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A64 D???               M         bra     $-2
                          M 
000A66 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A68 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A6A 84A6               M         bsf     EECON1, WREN        ; enable write
000A6C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A6E 98A1               M         bcf     PIR2, EEIF
                          M 
000A70 0E55               M         movlw   0x55
000A72 6EA7               M         movwf   EECON2              ; write 55h
000A74 0EAA               M         movlw   0xaa
000A76 6EA7               M         movwf   EECON2              ; write 0xaa
000A78 82A6               M         bsf     EECON1, WR          ; begin write
000A7A B2A6               M         btfsc   EECON1, WR
000A7C D???               M         bra     $-2
                          M 
000A7E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A80 94A6               M         bcf     EECON1, WREN        ; disable writes
000A82 2A21           01117         incf    L_EE
                      01118         
000A84 C018 F017      01119         movff   OP_sec, temp    ; 10's seconds
000A88 0E0F           01120         movlw   0x0F
000A8A 1617           01121         andwf   temp            ; Temp = lower nibble of Op_sec
000A8C C017 FFE8      01122         movff   temp, WREG      ; W = Temp
000A90 0F30           01123         addlw   0x30            ; Convert to ASCII
                      01124         WriteEE WREG, H_EE, L_EE
000A92 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A96 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A9A CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A9E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000AA0 D???               M         bra     $-2
                          M 
000AA2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AA4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AA6 84A6               M         bsf     EECON1, WREN        ; enable write
000AA8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000AAA 98A1               M         bcf     PIR2, EEIF
                          M 
000AAC 0E55               M         movlw   0x55
000AAE 6EA7               M         movwf   EECON2              ; write 55h
000AB0 0EAA               M         movlw   0xaa
000AB2 6EA7               M         movwf   EECON2              ; write 0xaa
000AB4 82A6               M         bsf     EECON1, WR          ; begin write
000AB6 B2A6               M         btfsc   EECON1, WR
000AB8 D???               M         bra     $-2
                          M 
000ABA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000ABC 94A6               M         bcf     EECON1, WREN        ; disable writes
000ABE 2A21           01125         incf    L_EE
                      01126         
Warning[202]: Argument out of range.  Least significant bits used.
000AC0 3819           01127         swapf   OP_INT, WREG    ;1's seconds
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AC2 6E17           01128         movwf   temp
000AC4 0E0F           01129         movlw   0x0f
000AC6 1617           01130         andwf   temp
000AC8 C017 FFE8      01131         movff   temp, WREG
000ACC 0F30           01132         addlw   0x30
                      01133         WriteEE WREG, H_EE, L_EE
000ACE C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000AD2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000AD6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000ADA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000ADC D???               M         bra     $-2
                          M 
000ADE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000AE0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000AE2 84A6               M         bsf     EECON1, WREN        ; enable write
000AE4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000AE6 98A1               M         bcf     PIR2, EEIF
                          M 
000AE8 0E55               M         movlw   0x55
000AEA 6EA7               M         movwf   EECON2              ; write 55h
000AEC 0EAA               M         movlw   0xaa
000AEE 6EA7               M         movwf   EECON2              ; write 0xaa
000AF0 82A6               M         bsf     EECON1, WR          ; begin write
000AF2 B2A6               M         btfsc   EECON1, WR
000AF4 D???               M         bra     $-2
                          M 
000AF6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AF8 94A6               M         bcf     EECON1, WREN        ; disable writes
000AFA 2A21           01134         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000AFC 0012           01135 return
                      01136         
                      01137                 
000AFE                01138 DISPLAY_RTC
                      01139         ; display data in this format hh/minmin/yy yy/mm/dd
                      01140         
                      01141         rtc_read    0x02            ; 0x02 from DS1307 - hours
000AFE 0E02               M     movlw   0x02
000B00 6E??               M     movwf   regaddress
000B02 EC?? F???          M     call    read_rtc
000B06 C??? FFE8          M     movff   datachar, WREG
000B0A EC?? F???          M     call    rtc_convert
000B0E C??? FFE8      01142         movff   tens_digit,WREG
000B12 EC?? F???      01143         call    WR_DATA
000B16 C??? FFE8      01144         movff   ones_digit,WREG
000B1A EC?? F???      01145         call    WR_DATA
000B1E 0E68           01146         movlw   "h"
000B20 EC?? F???      01147         call    WR_DATA
                      01148         
                      01149         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000B24 0E01               M     movlw   0x01
000B26 6E??               M     movwf   regaddress
000B28 EC?? F???          M     call    read_rtc
000B2C C??? FFE8          M     movff   datachar, WREG
000B30 EC?? F???          M     call    rtc_convert
000B34 C??? FFE8      01150         movff   tens_digit,WREG
000B38 EC?? F???      01151         call    WR_DATA
000B3C C??? FFE8      01152         movff   ones_digit,WREG
000B40 EC?? F???      01153         call    WR_DATA
                      01154         
                      01155         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000B44 0E00               M     movlw   0x00
000B46 6E??               M     movwf   regaddress
000B48 EC?? F???          M     call    read_rtc
000B4C C??? FFE8          M     movff   datachar, WREG
000B50 EC?? F???          M     call    rtc_convert
000B54 C??? FFE8      01156         movff   tens_digit,WREG
000B58 EC?? F???      01157         call    WR_DATA
000B5C C??? FFE8      01158         movff   ones_digit,WREG
000B60 EC?? F???      01159         call    WR_DATA
000B64 0E20           01160         movlw   " "
000B66 EC?? F???      01161         call    WR_DATA
                      01162         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01163         rtc_read    0x06            ; 0x06 from DS1307 - years
000B6A 0E06               M     movlw   0x06
000B6C 6E??               M     movwf   regaddress
000B6E EC?? F???          M     call    read_rtc
000B72 C??? FFE8          M     movff   datachar, WREG
000B76 EC?? F???          M     call    rtc_convert
000B7A C??? FFE8      01164         movff   tens_digit,WREG
000B7E EC?? F???      01165         call    WR_DATA
000B82 C??? FFE8      01166         movff   ones_digit,WREG
000B86 EC?? F???      01167         call    WR_DATA
000B8A 0E2F           01168         movlw   "/"
000B8C EC?? F???      01169         call    WR_DATA
                      01170         
                      01171         rtc_read    0x05            ; 0x05 from DS1307 - months
000B90 0E05               M     movlw   0x05
000B92 6E??               M     movwf   regaddress
000B94 EC?? F???          M     call    read_rtc
000B98 C??? FFE8          M     movff   datachar, WREG
000B9C EC?? F???          M     call    rtc_convert
000BA0 C??? FFE8      01172         movff   tens_digit,WREG
000BA4 EC?? F???      01173         call    WR_DATA
000BA8 C??? FFE8      01174         movff   ones_digit,WREG
000BAC EC?? F???      01175         call    WR_DATA
000BB0 0E2F           01176         movlw   "/"
000BB2 EC?? F???      01177         call    WR_DATA
                      01178         
                      01179         rtc_read    0x04            ; 0x04 from DS1307 - days
000BB6 0E04               M     movlw   0x04
000BB8 6E??               M     movwf   regaddress
000BBA EC?? F???          M     call    read_rtc
000BBE C??? FFE8          M     movff   datachar, WREG
000BC2 EC?? F???          M     call    rtc_convert
000BC6 C??? FFE8      01180         movff   tens_digit,WREG
000BCA EC?? F???      01181         call    WR_DATA
000BCE C??? FFE8      01182         movff   ones_digit,WREG
000BD2 EC?? F???      01183         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000BD6 0012           01184 return
                      01185         
000BD8                01186 SET_TIME
                      01187         rtc_resetAll
                          M 
000BD8 6A??               M     clrf    databyte
000BDA 0E06               M     movlw   6
000BDC 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000BDE                    M     del_loop0
000BDE EC?? F???          M     call    write_rtc
000BE2 2E??               M     decfsz  regaddress
000BE4 D???               M     bra     del_loop0
000BE6 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01188         
                      01189         rtc_set 0x00,   b'10000000'
000BEA 0E00               M     movlw   0x00
000BEC 6E??               M     movwf   regaddress
000BEE 0E80               M     movlw   b'10000000'
000BF0 6E??               M     movwf   databyte
000BF2 EC?? F???          M     call    write_rtc
                      01190 
                      01191         rtc_set 0x06,   b'00010111'             ; Year 17
000BF6 0E06               M     movlw   0x06
000BF8 6E??               M     movwf   regaddress
000BFA 0E17               M     movlw   b'00010111'
000BFC 6E??               M     movwf   databyte
000BFE EC?? F???          M     call    write_rtc
                      01192         rtc_set 0x05,   b'00000011'             ; Month 03
000C02 0E05               M     movlw   0x05
000C04 6E??               M     movwf   regaddress
000C06 0E03               M     movlw   b'00000011'
000C08 6E??               M     movwf   databyte
000C0A EC?? F???          M     call    write_rtc
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01193         rtc_set 0x04,   b'00000011'             ; Date 03
000C0E 0E04               M     movlw   0x04
000C10 6E??               M     movwf   regaddress
000C12 0E03               M     movlw   b'00000011'
000C14 6E??               M     movwf   databyte
000C16 EC?? F???          M     call    write_rtc
                      01194         rtc_set 0x02,   b'00100000'             ; Hours 20
000C1A 0E02               M     movlw   0x02
000C1C 6E??               M     movwf   regaddress
000C1E 0E20               M     movlw   b'00100000'
000C20 6E??               M     movwf   databyte
000C22 EC?? F???          M     call    write_rtc
                      01195         rtc_set 0x01,   b'00100111'             ; Minutes 27
000C26 0E01               M     movlw   0x01
000C28 6E??               M     movwf   regaddress
000C2A 0E27               M     movlw   b'00100111'
000C2C 6E??               M     movwf   databyte
000C2E EC?? F???          M     call    write_rtc
                      01196         rtc_set 0x00,   b'00000000'             ; Seconds 0
000C32 0E00               M     movlw   0x00
000C34 6E??               M     movwf   regaddress
000C36 0E00               M     movlw   b'00000000'
000C38 6E??               M     movwf   databyte
000C3A EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000C3E 0012           01197 return
                      01198         
000C40                01199 INIT_USART
                      01200         
000C40 8E94           01201         bsf     TRISC, 7        ; set RC7=USART RC
000C42 9C94           01202         bcf     TRISC, 6        ; clear RC6=USART TX
                      01203 
000C44 0E0F           01204         movlw   15              ; baud rate 9600
000C46 6EAF           01205         movwf   SPBRG
000C48 6AAC           01206         clrf    TXSTA
                      01207         
000C4A 6AAB           01208         clrf    RCSTA
000C4C 8EAB           01209         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000C4E 88AB           01210         bsf     RCSTA,CREN      ; continous receive
                      01211         
000C50 8AAC           01212         bsf     TXSTA, TXEN     ; transmit enabled
000C52 0012           01213         return
                      01214 
000C54                01215 DataUSART
000C54 0E02           01216         movlw   0x02
000C56 EC?? F???      01217         call    USART_WAIT
000C5A 0E0D           01218         movlw   0x0D
000C5C EC?? F???      01219         call    USART_WAIT
                      01220         
000C60 6A15           01221         clrf    counter         ; used to cycle through past 9 eeprom logs
000C62 6A16           01222         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01223         
000C64                01224 TRANSFER_LOGS
000C64 0E15           01225         movlw   d'21'           ; logs are 21 bits apart
000C66 0215           01226         mulwf   counter         ; log number one starts at eeprom address 0
000C68 CFF3 F021      01227         movff   PRODL, L_EE     ; low address now points to count X 21
000C6C 6A16           01228         clrf    counter2
                      01229         
000C6E                01230 TRANSFER_DATA   
                      01231         READEE  WREG, H_EE, L_EE
000C6E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C72 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000C76 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C78 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C7A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C7C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000C80 EC?? F???      01232         call    USART_WAIT      ; transfer bit
000C84 2A21           01233         incf    L_EE
                      01234         
000C86 2A16           01235         incf    counter2
000C88 0E12           01236         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000C8A 6216           01237         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000C8C D???           01238         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01239         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C8E EC?? F???      01240         call    USART_LINE      ; new line because a e s t h e t i c
                      01241         
000C92 2A15           01242         incf    counter
000C94 0E08           01243         movlw   d'8'            ; we save up to the last 9 permanent logs
000C96 6215           01244         cpfseq  counter
000C98 D???           01245         bra     TRANSFER_LOGS
                      01246         
000C9A EC?? F???      01247         call    LCD_L2
                      01248         Display PCComplete
  0000                    M         local   loop
000C9E 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000CA0 6EF8               M         movwf   TBLPTRU
000CA2 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000CA4 6EF7               M         movwf   TBLPTRH
000CA6 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000CA8 6EF6               M         movwf   TBLPTRL
000CAA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CAC 50F5               M         movf    TABLAT, W
000CAE                    M loop
000CAE EC?? F???          M         call    WR_DATA         ; write to LCD
000CB2 000B               M         tblrd+*                 ; next row in table
000CB4 50F5               M         movf    TABLAT, W
000CB6 E1??               M         bnz     loop
                      01249         Delay50N delayR, 0x28   
  0000                    M         local   loop
000CB8 0E28               M         movlw   0x28
000CBA 6E1A               M         movwf   delayR
                          M 
000CBC                    M loop
000CBC EC?? F???          M         call    Delay50ms
000CC0 2E1A               M         decfsz  delayR
000CC2 EF?? F???          M         goto    loop
000CC6 0012           01250         return                  ; done transmitting data
                      01251         
000CC8                01252 USART_WAIT
000CC8 6EAD           01253         movwf   TXREG
000CCA A2AC           01254         btfss   TXSTA, 1
000CCC EF?? F???      01255         goto    $-2
000CD0 0012           01256         return
                      01257 
000CD2                01258 USART_LINE
000CD2 0E0A           01259         movlw   0x0A
000CD4 EC?? F???      01260         call    USART_WAIT
000CD8 0E0D           01261         movlw   0x0D
000CDA EC?? F???      01262         call    USART_WAIT
000CDE 0012           01263         return
                      01264         
000CE0                01265 Delay5us
000CE0 0E78           01266         movlw   d'120'
000CE2 6E1B           01267         movwf   d5us
                      01268 
000CE4                01269 loop5us
000CE4 2E1B           01270         decfsz  d5us
000CE6 EF?? F???      01271         goto    loop5us
000CEA 0000           01272         nop
000CEC 0012           01273         return
                      01274 
000CEE                01275 Delay200us
000CEE 0EA4           01276         movlw   0xA4
000CF0 6E1C           01277         movwf   d200us
                      01278 
000CF2                01279 loop200us
000CF2 2E1C           01280         decfsz  d200us
000CF4 EF?? F???      01281         goto    loop200us
000CF8 0000           01282         nop
000CFA 0012           01283         return
                      01284 
000CFC                01285 Delay50ms
000CFC 0EF9           01286         movlw   0xF9
000CFE 6E1D           01287         movwf   d50ms
                      01288 
000D00                01289 loop50ms
000D00 EC?? F???      01290         call    Delay200us
000D04 2E1D           01291         decfsz  d50ms
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01292 
000D06                01293 Cycles
000D06 EF?? F???      01294         goto    loop50ms
000D0A EC?? F???      01295         call    Delay200us
000D0E 0012           01296         return
                      01297 
000D10                01298 WriteEE_RTC
                      01299         WriteEE tens_digit, H_EE, L_EE
000D10 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D14 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D18 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000D1C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D1E D???               M         bra     $-2
                          M 
000D20 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D22 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D24 84A6               M         bsf     EECON1, WREN        ; enable write
000D26 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D28 98A1               M         bcf     PIR2, EEIF
                          M 
000D2A 0E55               M         movlw   0x55
000D2C 6EA7               M         movwf   EECON2              ; write 55h
000D2E 0EAA               M         movlw   0xaa
000D30 6EA7               M         movwf   EECON2              ; write 0xaa
000D32 82A6               M         bsf     EECON1, WR          ; begin write
000D34 B2A6               M         btfsc   EECON1, WR
000D36 D???               M         bra     $-2
                          M 
000D38 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D3A 94A6               M         bcf     EECON1, WREN        ; disable writes
000D3C 2A21           01300         incf    L_EE
                      01301         WriteEE ones_digit, H_EE, L_EE
000D3E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D42 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D46 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000D4A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D4C D???               M         bra     $-2
                          M 
000D4E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000D50 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D52 84A6               M         bsf     EECON1, WREN        ; enable write
000D54 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D56 98A1               M         bcf     PIR2, EEIF
                          M 
000D58 0E55               M         movlw   0x55
000D5A 6EA7               M         movwf   EECON2              ; write 55h
000D5C 0EAA               M         movlw   0xaa
000D5E 6EA7               M         movwf   EECON2              ; write 0xaa
000D60 82A6               M         bsf     EECON1, WR          ; begin write
000D62 B2A6               M         btfsc   EECON1, WR
000D64 D???               M         bra     $-2
                          M 
000D66 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000D68 94A6               M         bcf     EECON1, WREN        ; disable writes
000D6A 2A21           01302         incf    L_EE
000D6C 0012           01303         return
                      01304 
000D6E                01305 ClearEEPROM_21
000D6E 6A20           01306         clrf    H_EE
000D70 6A21           01307         clrf    L_EE
000D72 681F           01308         setf    clear_EE
000D74 6A15           01309         clrf    counter
000D76                01310 ClearNext
                      01311         WriteEE         clear_EE, H_EE, L_EE
000D76 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000D7A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000D7E C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000D82 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000D84 D???               M         bra     $-2
                          M 
000D86 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D88 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000D8A 84A6               M         bsf     EECON1, WREN        ; enable write
000D8C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000D8E 98A1               M         bcf     PIR2, EEIF
                          M 
000D90 0E55               M         movlw   0x55
000D92 6EA7               M         movwf   EECON2              ; write 55h
000D94 0EAA               M         movlw   0xaa
000D96 6EA7               M         movwf   EECON2              ; write 0xaa
000D98 82A6               M         bsf     EECON1, WR          ; begin write
000D9A B2A6               M         btfsc   EECON1, WR
000D9C D???               M         bra     $-2
                          M 
000D9E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DA0 94A6               M         bcf     EECON1, WREN        ; disable writes
000DA2 2A15           01312         incf            counter
000DA4 2A21           01313         incf            L_EE
000DA6 0E15           01314         movlw           d'21'
000DA8 6215           01315         cpfseq          counter
000DAA EF?? F???      01316         goto            ClearNext
000DAE 6A20           01317         clrf            H_EE
000DB0 6A21           01318         clrf            L_EE
000DB2 0012           01319         return
                      01320         
000DB4                01321 READ_KEY
000DB4 A281           01322         btfss   PORTB, 1        ; check for keypad interrupt
000DB6 EF?? F???      01323         goto    READ_KEY
000DBA 3881           01324         swapf   PORTB, W
000DBC 0B0F           01325         andlw   0x0F
000DBE 6E10           01326         movwf   KEY
000DC0 B281           01327         btfsc   PORTB, 1
000DC2 EF?? F???      01328         goto    $-2
000DC6 0012           01329         return
                      01330 
000DC8                01331 READ_KEY_TIME
000DC8 EC?? F???      01332         call        LCD_L2          ; go to second line to print RTC
                      01333 
                      01334         ; display the time
000DCC EC?? F???      01335         call    DISPLAY_RTC
                      01336 
000DD0 A281           01337         btfss       PORTB, 1    ; keypad interrupt
000DD2 EF?? F???      01338         goto        READ_KEY_TIME
000DD6 3881           01339         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000DD8 0B0F           01340         andlw       0x0F        ; only want W3:0
000DDA 6E10           01341         movwf       KEY         ; write this value to the KEY
000DDC B281           01342         btfsc       PORTB, 1    ; wait for release
000DDE EF?? F???      01343         goto        $-2         ; go back one instruction
000DE2 0012           01344         return
                      01345 
000DE4                01346 DisplayExeTime
                      01347         READEE  REG_EE, H_EE, L_EE
000DE4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DE8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DEC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DEE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DF0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DF2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000DF6 0EFF           01348         movlw   0xFF
000DF8 6222           01349         cpfseq  REG_EE
000DFA EF?? F???      01350         goto    NoSkipDispExeTime
                      01351         Display NoData
  0000                    M         local   loop
000DFE 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E00 6EF8               M         movwf   TBLPTRU
000E02 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E04 6EF7               M         movwf   TBLPTRH
000E06 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E08 6EF6               M         movwf   TBLPTRL
000E0A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E0C 50F5               M         movf    TABLAT, W
000E0E                    M loop
000E0E EC?? F???          M         call    WR_DATA         ; write to LCD
000E12 000B               M         tblrd+*                 ; next row in table
000E14 50F5               M         movf    TABLAT, W
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E16 E1??               M         bnz     loop
000E18 0EFF           01352         movlw   0xFF
000E1A 6022           01353         cpfslt  REG_EE
000E1C EF?? F???      01354         goto    SkipDispExeTime
000E20 0012           01355         return
                      01356 
000E22                01357 NoSkipDispExeTime
                      01358         READEE  WREG, H_EE, L_EE
000E22 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E26 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E2A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E2C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E2E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E30 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E34 EC?? F???      01359         call    WR_DATA
000E38 2A21           01360         incf    L_EE
                      01361         
                      01362         READEE  WREG, H_EE, L_EE
000E3A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E3E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E42 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E44 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E46 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E48 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E4C EC?? F???      01363         call    WR_DATA
000E50 2A21           01364         incf    L_EE
                      01365         
                      01366         READEE  WREG, H_EE, L_EE
000E52 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E56 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E5A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E5C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E5E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E60 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000E64 EC?? F???      01367         call    WR_DATA
000E68 2A21           01368         incf    L_EE
                      01369 
000E6A 0E73           01370         movlw   0x73            ; Write 's'
000E6C EC?? F???      01371         call    WR_DATA
000E70 EC?? F???      01372         call    LCD_L2
000E74                01373 SkipDispExeTime
000E74 0012           01374         return
                      01375 
000E76                01376 DispOpSort
                      01377         READEE  REG_EE, H_EE, L_EE
000E76 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E7A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E7E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E80 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E82 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E84 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E88 0EFF           01378         movlw   0xff
000E8A 6222           01379         cpfseq  REG_EE
000E8C EF?? F???      01380         goto    NoSkipDispOpSort
                      01381         Display NoData
  0000                    M         local   loop
000E90 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000E92 6EF8               M         movwf   TBLPTRU
000E94 0E??               M         movlw   high NoData     ; Move Table<15:8>
000E96 6EF7               M         movwf   TBLPTRH
000E98 0E??               M         movlw   low NoData      ; Move Table<7:0>
000E9A 6EF6               M         movwf   TBLPTRL
000E9C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000E9E 50F5               M         movf    TABLAT, W
000EA0                    M loop
000EA0 EC?? F???          M         call    WR_DATA         ; write to LCD
000EA4 000B               M         tblrd+*                 ; next row in table
000EA6 50F5               M         movf    TABLAT, W
000EA8 E1??               M         bnz     loop
000EAA 0EFF           01382         movlw   0xff
000EAC 6022           01383         cpfslt  REG_EE
000EAE EF?? F???      01384         goto    SkipDispOpSort
                      01385 
000EB2                01386 NoSkipDispOpSort
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EB2 0E61           01387         movlw   "a"
000EB4 EC?? F???      01388         call    WR_DATA
                      01389         
                      01390         READEE  REG_EE, H_EE, L_EE
000EB8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EBC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EC0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EC2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EC4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EC6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000ECA C022 FFE8      01391         movff   REG_EE, WREG
000ECE EC?? F???      01392         call    WR_DATA
000ED2 2A21           01393         incf    L_EE
                      01394         
000ED4 0E20           01395         movlw   " "
000ED6 EC?? F???      01396         call    WR_DATA
                      01397         
000EDA 0E62           01398         movlw   "b"
000EDC EC?? F???      01399         call    WR_DATA
                      01400         
                      01401         READEE  REG_EE, H_EE, L_EE
000EE0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EE4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EE8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EEA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EEC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EEE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EF2 C022 FFE8      01402         movff   REG_EE, WREG
000EF6 EC?? F???      01403         call    WR_DATA
000EFA 2A21           01404         incf    L_EE
                      01405         
000EFC 0E20           01406         movlw   " "
000EFE EC?? F???      01407         call    WR_DATA
                      01408         
000F02 0E63           01409         movlw   "c"
000F04 EC?? F???      01410         call    WR_DATA
                      01411         
                      01412         READEE  REG_EE, H_EE, L_EE
000F08 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F0C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F10 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F12 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F14 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F16 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F1A C022 FFE8      01413         movff   REG_EE, WREG
000F1E EC?? F???      01414         call    WR_DATA
000F22 2A21           01415         incf    L_EE
                      01416         
000F24 0E20           01417         movlw   " "
000F26 EC?? F???      01418         call    WR_DATA
                      01419         
000F2A 0E64           01420         movlw   "d"
000F2C EC?? F???      01421         call    WR_DATA
                      01422         
                      01423         READEE  REG_EE, H_EE, L_EE
000F30 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F34 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F38 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F3A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F3C 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F3E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F42 C022 FFE8      01424         movff   REG_EE, WREG
000F46 EC?? F???      01425         call    WR_DATA
000F4A 2A21           01426         incf    L_EE
                      01427 
000F4C                01428 SkipDispOpSort
000F4C 0012           01429         return
                      01430         
000F4E                01431 DispOpRTC
                      01432         READEE  REG_EE, H_EE, L_EE
000F4E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F52 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F56 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F58 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F5A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F5C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F60 0EFF           01433         movlw   0xff
000F62 6222           01434         cpfseq  REG_EE
000F64 EF?? F???      01435         goto    NoSkipDispOpRTC
                      01436         Display NoData
  0000                    M         local   loop
000F68 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F6A 6EF8               M         movwf   TBLPTRU
000F6C 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F6E 6EF7               M         movwf   TBLPTRH
000F70 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F72 6EF6               M         movwf   TBLPTRL
000F74 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F76 50F5               M         movf    TABLAT, W
000F78                    M loop
000F78 EC?? F???          M         call    WR_DATA         ; write to LCD
000F7C 000B               M         tblrd+*                 ; next row in table
000F7E 50F5               M         movf    TABLAT, W
000F80 E1??               M         bnz     loop
000F82 0EFF           01437         movlw   0xff
000F84 6022           01438         cpfslt  REG_EE
000F86 EF?? F???      01439         goto    SkipDispOpRTC
                      01440 
000F8A                01441 NoSkipDispOpRTC
                      01442         READEE  REG_EE, H_EE, L_EE
000F8A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F8E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F92 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F94 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F96 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F98 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F9C C022 FFE8      01443         movff   REG_EE, WREG
000FA0 EC?? F???      01444         call    WR_DATA
000FA4 2A21           01445         incf    L_EE
                      01446         
                      01447         READEE  REG_EE, H_EE, L_EE
000FA6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FAA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FAE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FB0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FB2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FB4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FB8 C022 FFE8      01448         movff   REG_EE, WREG
000FBC EC?? F???      01449         call    WR_DATA
000FC0 2A21           01450         incf    L_EE
                      01451 
000FC2 0E68           01452         movlw   "h"
000FC4 EC?? F???      01453         call    WR_DATA
                      01454         
000FC8 EC?? F???      01455         call    DispOpRTC_Helper
                      01456         
000FCC 0E20           01457         movlw   " "
000FCE EC?? F???      01458         call    WR_DATA
                      01459         
000FD2 EC?? F???      01460         call    DispOpRTC_Helper
000FD6 0E2F           01461         movlw   "/"
000FD8 EC?? F???      01462         call    WR_DATA
                      01463 
000FDC EC?? F???      01464         call    DispOpRTC_Helper
000FE0 0E2F           01465         movlw   "/"
000FE2 EC?? F???      01466         call    WR_DATA
000FE6 EC?? F???      01467         call    DispOpRTC_Helper
000FEA                01468 SkipDispOpRTC
000FEA 0012           01469                 return
000FEC                01470 DispOpRTC_Helper
                      01471         READEE          REG_EE, H_EE, L_EE
000FEC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FF0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FF4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FF6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FF8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FFA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FFE C022 FFE8      01472         movff           REG_EE, WREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-3-2017  23:29:22         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001002 EC?? F???      01473         call            WR_DATA
001006 2A21           01474         incf            L_EE
                      01475         READEE          REG_EE, H_EE, L_EE
001008 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00100C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001010 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001012 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001014 80A6               M         bsf     EECON1, RD          ; read EEPROM
001016 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00101A C022 FFE8      01476         movff           REG_EE, WREG
00101E EC?? F???      01477         call            WR_DATA
001022 2A21           01478         incf            L_EE
001024 0012           01479         return
Warning[205]: Found directive in column 1. (end)
                      01480 end

Errors   :     0
Warnings :    38 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

