MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (LogInfo1)
000066 6153 6576 3A64 00110     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00006E 6142 6B63 3C20 00111     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000078 6550 6D72 6E61 00112     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000088 313C 203E 2E2E 00113     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
000094 6F53 7472 6E69 00114     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000A0 4E45 2044 2A3C 00115     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000A8 4350 4920 746E 00116     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000B6 6542 6967 206E 00117     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000C0 7254 6E61 6673 00118     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000D0 6F43 706D 656C 00119     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000DA 6153 6976 676E 00120     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000E4 2F4E 0041      00121     NoData      db          "N/A", 0
                      00122         
                      00123 ;*******************************************************************************
                      00124 ; macros
                      00125 ;*******************************************************************************
                      00126         
                      00127 ConfigLCD   macro
                      00128           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00129           call      WR_INS
                      00130 
                      00131           movlw     b'00001100'    ; display on/off
                      00132           call      WR_INS
                      00133           movlw     b'00000001'    ; Clear ram
                      00134           call      WR_INS
                      00135           endm
                      00136 
                      00137 Delay50Nf macro count, N
                      00138         local   loop
                      00139         movff   N, count
                      00140 
                      00141 loop
                      00142         call    Delay50ms
                      00143         decfsz  count
                      00144         goto    loop
                      00145         endm
                      00146 
                      00147 Delay50N macro count, N
                      00148         local   loop
                      00149         movlw   N
                      00150         movwf   count
                      00151 
                      00152 loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00153         call    Delay50ms
                      00154         decfsz  count
                      00155         goto    loop
                      00156         endm
                      00157 
                      00158 Display macro   Message
                      00159         local   loop
                      00160         movlw   upper Message   ; Move Table<20:16>
                      00161         movwf   TBLPTRU
                      00162         movlw   high Message    ; Move Table<15:8>
                      00163         movwf   TBLPTRH
                      00164         movlw   low Message     ; Move Table<7:0>
                      00165         movwf   TBLPTRL
                      00166         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00167         movf    TABLAT, W
                      00168 loop
                      00169         call    WR_DATA         ; write to LCD
                      00170         tblrd+*                 ; next row in table
                      00171         movf    TABLAT, W
                      00172         bnz     loop
                      00173         endm    
                      00174 
                      00175 incf_BCD    macro   BCD
                      00176         local ones, endBCD
                      00177         movff   BCD, temp
                      00178         
                      00179         ;process ones digit
                      00180         movlw   0x0f
                      00181         andwf   temp
                      00182         movlw   d'9'
                      00183         
                      00184         ;skip if ones digit is 9
                      00185         cpfseq  temp
                      00186         goto    ones
                      00187         
                      00188         movlw   b'00010000'
                      00189         addwf   BCD
                      00190         movlw   0xf0
                      00191         andwf   BCD
                      00192         movlw   0xa0
                      00193         cpfslt  BCD
                      00194         
                      00195         clrf    BCD
                      00196         goto    endBCD
                      00197         
                      00198 ones
                      00199         incf    BCD
                      00200         goto    endBCD
                      00201 endBCD
                      00202         nop
                      00203         endm
                      00204 
                      00205 WriteEE macro   word, addH, addL
                      00206         movff   addH, EEADRH        ; High address
                      00207         movff   addL, EEADR         ; Low address
                      00208         movff   word, EEDATA        ; set word
                      00209 
                      00210         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00211         bra     $-2
                      00212 
                      00213         bcf     EECON1, EEPGD       ; Point to data memory
                      00214         bcf     EECON1, CFGS        ; Access EEPROM
                      00215         bsf     EECON1, WREN        ; enable write
                      00216         bcf     INTCON, GIE         ; disable interrupts during write
                      00217         bcf     PIR2, EEIF
                      00218 
                      00219         movlw   0x55
                      00220         movwf   EECON2              ; write 55h
                      00221         movlw   0xaa
                      00222         movwf   EECON2              ; write 0xaa
                      00223         bsf     EECON1, WR          ; begin write
                      00224         btfsc   EECON1, WR
                      00225         bra     $-2
                      00226 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00227         bsf     INTCON, GIE         ; enable interrupts after write
                      00228         bcf     EECON1, WREN        ; disable writes
                      00229         endm
                      00230 
                      00231 READEE  macro   file, addH, addL
                      00232         movff   addH, EEADRH        ; read to high
                      00233         movff   addL, EEADR         ; read to low
                      00234         bcf     EECON1, EEPGD       ; point to data memory
                      00235         bcf     EECON1, CFGS        ; access to EEPROM
                      00236         bsf     EECON1, RD          ; read EEPROM
                      00237         movff   EEDATA, file        ; put data into file
                      00238         endm
                      00239 
                      00240 ChangeMode  macro   ModeId, NextMode
                      00241         local Next, Exit
                      00242 
                      00243         movlw   ModeId              ; poll for mode
                      00244         cpfseq  KEY                 ; check this against key press
                      00245         goto    Exit
                      00246 
                      00247 Next
                      00248         clrf    LATA                ; clear pins before proceeding
                      00249         clrf    LATB
                      00250         clrf    LATC
                      00251         clrf    LATD
                      00252         goto    NextMode
                      00253 
                      00254 Exit
                      00255         nop
                      00256         endm
                      00257 
                      00258 saveContext macro
                      00259     movff   STATUS, temp_S          ; save STATUS first
                      00260     movwf   temp_W                  ; save W
                      00261     endm
                      00262 
                      00263 restoreContext macro
                      00264     swapf   temp_W, 0               ; restore W first
                      00265     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00266     endm
                      00267     
                      00268 ;*******************************************************************************
                      00269 ; reset vector and isrs
                      00270 ;*******************************************************************************
                      00271         ORG     0x000               ; processor reset vector
000000 EF?? F???      00272         goto    INIT                ; go to beginning of program
                      00273 
                      00274         ORG     0x008
000008 EF?? F???      00275         goto    ISR_HIGH
                      00276 
                      00277         ORG     0x018
000018 EF?? F???      00278         goto    ISR_LOW
                      00279 
00001C                00280 LOAD_STANDBY_TIME
00001C 0EFF           00281         movlw   0xff
00001E 6ED7           00282         movwf   TMR0H
000020 0EFF           00283         movlw   0xff
000022 6ED6           00284         movwf   TMR0L
                      00285 
000024 0012           00286         return  
                      00287 
000026                00288 LOAD_EXE_TIME
000026 0EC3           00289         movlw   0xc3
000028 6ED7           00290         movwf   TMR0H
00002A 0E25           00291         movlw   0x25
00002C 6ED6           00292         movwf   TMR0L
                      00293         
00002E 0012           00294         return
                      00295 
000030                00296 EMERGENCY_STOP
                      00297         ; first check if we're currently sorting - else, no need to restart
000030 0EFF           00298         movlw   0xff                ; if in operation, skip return
000032 621E           00299         cpfseq  inExecution
000034 EF?? F???      00300         goto    END_ISR_HIGH
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00301         
                      00302         ; reset program counter - emergency stop recorded. 
000038 9ED5           00303         bcf     T0CON, TMR0ON
00003A EC?? F???      00304         call    SAVE_EXE_TIME
                      00305         
                      00306         ; reset emergency stop interrupt bit
00003E 92F2           00307         bcf     INTCON, INT0IF
                      00308                 
                      00309         ; clear inExecution flag
000040 6A1E           00310         clrf    inExecution
000042 0E01           00311         movlw   d'1'
000044 6E37           00312         movwf   STOP_CONDITION
000046 EC?? F???      00313         call    SaveData
                      00314         
00004A 6AFF           00315         clrf    TOSU
00004C 6AFE           00316         clrf    TOSH
00004E 6AFD           00317         clrf    TOSL
000050 90F0           00318         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00319         restoreContext
000052 3814               M     swapf   temp_W, 0               ; restore W first
000054 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000058 0010           00320         retfie
                      00321 
00005A                00322 ISR_HIGH
                      00323         saveContext
00005A CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00005E 6E14               M     movwf   temp_W                  ; save W
                      00324         
                      00325 ;       btfsc   INTCON, INT0IF
                      00326 ;       call    EMERGENCY_STOP
                      00327         
000060 0E00           00328         movlw   0x00
000062 6238           00329         cpfseq  inStandby
000064 EC?? F???      00330         call    Shift
                      00331         
                      00332         ;reset timer, but need to check which time increment 
000068 0E00           00333         movlw   0x00
00006A 6238           00334         cpfseq  inStandby
00006C EC?? F???      00335         call    LOAD_STANDBY_TIME
                      00336         
000070 0EFF           00337         movlw   0xff
000072 6238           00338         cpfseq  inStandby
000074 EC?? F???      00339         call    LOAD_EXE_TIME
                      00340                 
                      00341         ;timer interrupt
000078 A4F2           00342         btfss   INTCON, TMR0IF
00007A EF?? F???      00343         goto    END_ISR_HIGH
                      00344         
                      00345         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00007E C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000082 0E0F               M         movlw   0x0f
000084 1617               M         andwf   temp
000086 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000088 6217               M         cpfseq  temp
00008A EF?? F???          M         goto    ones
                          M         
00008E 0E10               M         movlw   b'00010000'
000090 2619               M         addwf   OP_INT
000092 0EF0               M         movlw   0xf0
000094 1619               M         andwf   OP_INT
000096 0EA0               M         movlw   0xa0
000098 6019               M         cpfslt  OP_INT
                          M         
00009A 6A19               M         clrf    OP_INT
00009C EF?? F???          M         goto    endBCD
                          M         
0000A0                    M ones
0000A0 2A19               M         incf    OP_INT
0000A2 EF?? F???          M         goto    endBCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000A6                    M endBCD
0000A6 0000               M         nop
0000A8 0E00           00346         movlw   d'0'
0000AA 6219           00347         cpfseq  OP_INT
0000AC EF?? F???      00348         goto    END_ISR_HIGH
                      00349         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000B0 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000B4 0E0F               M         movlw   0x0f
0000B6 1617               M         andwf   temp
0000B8 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000BA 6217               M         cpfseq  temp
0000BC EF?? F???          M         goto    ones
                          M         
0000C0 0E10               M         movlw   b'00010000'
0000C2 2618               M         addwf   OP_sec
0000C4 0EF0               M         movlw   0xf0
0000C6 1618               M         andwf   OP_sec
0000C8 0EA0               M         movlw   0xa0
0000CA 6018               M         cpfslt  OP_sec
                          M         
0000CC 6A18               M         clrf    OP_sec
0000CE EF?? F???          M         goto    endBCD
                          M         
0000D2                    M ones
0000D2 2A18               M         incf    OP_sec
0000D4 EF?? F???          M         goto    endBCD
0000D8                    M endBCD
0000D8 0000               M         nop
                      00350 
0000DA                00351 END_ISR_HIGH
0000DA 94F2           00352         bcf     INTCON, TMR0IF
                      00353         restoreContext
0000DC 3814               M     swapf   temp_W, 0               ; restore W first
0000DE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000E2 0010           00354         retfie
                      00355 
0000E4                00356 ISR_LOW
                      00357         saveContext
0000E4 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000E8 6E14               M     movwf   temp_W                  ; save W
                      00358         
                      00359         ; KEYPAD INTERRUPT
0000EA A0F0           00360         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000EC EF?? F???      00361         goto    END_ISR_LOW
                      00362 
                      00363         ; check operation status
0000F0 0EFF           00364         movlw   0xff                    ; If in operation, skip return
0000F2 621E           00365         cpfseq  inExecution
0000F4 EF?? F???      00366         goto    END_ISR_LOW
                      00367 
                      00368         ; process KEY
0000F8 3881           00369         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000FA 0B0F           00370         andlw   0x0f
0000FC 6E12           00371         movwf   KEY_ISR
                      00372         
0000FE 0E0C           00373         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
000100 6212           00374         cpfseq  KEY_ISR                 ; If key was '*', skip return
000102 EF?? F???      00375         goto    END_ISR_LOW
                      00376         
                      00377         ; reset program counter - emergency stop recorded. 
000106 9ED5           00378         bcf     T0CON, TMR0ON
000108 EC?? F???      00379         call    SAVE_EXE_TIME
                      00380                 
                      00381         ; Clear inExecution flag to stop '*' interrupts
00010C 6A1E           00382         clrf    inExecution
00010E 0E01           00383         movlw   d'1'
000110 6E37           00384         movwf   STOP_CONDITION
000112 EC?? F???      00385         call    SaveData
                      00386         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000116 6AFF           00387         clrf    TOSU
000118 6AFE           00388         clrf    TOSH
00011A 6AFD           00389         clrf    TOSL
00011C 90F0           00390         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00391 
00011E                00392 END_ISR_LOW
00011E 90F0           00393         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00394         restoreContext
000120 3814               M     swapf   temp_W, 0               ; restore W first
000122 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000126 0010           00395         retfie
                      00396 
                      00397 ;*******************************************************************************
                      00398 ; main
                      00399 ;*******************************************************************************
000128                00400 INIT
000128 0E70           00401         movlw   b'01110000'     ; set internal oscillator frequency to 8MHz
00012A 6ED3           00402         movwf   OSCCON
                      00403         
                      00404         ; i/o
00012C 0E00           00405         movlw   b'00000000'
00012E 6E92           00406         movwf   TRISA
000130 0EFF           00407         movlw   b'11111111'
000132 6E93           00408         movwf   TRISB
000134 0E00           00409         movlw   b'00000000'
000136 6E94           00410         movwf   TRISC
000138 0E00           00411         movlw   b'00000000'
00013A 6E95           00412         movwf   TRISD
00013C 0E00           00413         movlw   b'00000000'
00013E 6E96           00414         movwf   TRISE
                      00415 
                      00416         ; clear ports
000140 0E00           00417         movlw   b'00000000'
000142 6E89           00418         movwf   LATA
000144 0E00           00419         movlw   b'00000000'
000146 6E8A           00420         movwf   LATB
000148 0E00           00421         movlw   b'00000000'
00014A 6E8B           00422         movwf   LATC
00014C 0E00           00423         movlw   b'00000000'
00014E 6E8C           00424         movwf   LATD
000150 0E00           00425         movlw   b'00000000'
000152 6E8D           00426         movwf   LATE
                      00427         
000154 0E00           00428         movlw   b'00000000'
000156 6EC2           00429         movwf   ADCON0
                      00430 ;       movlw   b'11111111'
                      00431 ;       movwf   ADCON1
                      00432         
                      00433         ; setting up pwm
                      00434 ;       clrf    CM1CONO         ; disable comparators
                      00435 ;       clrf    CM2CONO
                      00436 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00437 ;       movwf   CCP2CON
                      00438 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
                      00439 ;       movwf   CCPR2L
                      00440 ;       
                      00441 ;       bcf     PIR1, TMR2IF
                      00442 ;       bcf     T2CON, T2CKPS1
                      00443 ;       bsf     T2CON, TMR2ON
                      00444         
                      00445         ; initializations
000158 EC?? F???      00446         call    InitLCD
                      00447         ConfigLCD
00015C 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00015E EC?? F???          M           call      WR_INS
                          M 
000162 0E0C               M           movlw     b'00001100'    ; display on/off
000164 EC?? F???          M           call      WR_INS
000168 0E01               M           movlw     b'00000001'    ; Clear ram
00016A EC?? F???          M           call      WR_INS
00016E EC?? F???      00448         call    i2c_common_setup
000172 EC?? F???      00449         call    RTC_INIT
000176 EC?? F???      00450         call    INIT_USART
                      00451 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00452         ; interrupts
00017A 6AD0           00453         clrf    RCON
00017C 6AF2           00454         clrf    INTCON
00017E 6AF1           00455         clrf    INTCON2
000180 6AF0           00456         clrf    INTCON3
                      00457         
000182 8ED0           00458         bsf     RCON, IPEN          ; allow priority mode
000184 8EF2           00459         bsf     INTCON, GIEH        ; permit global interrupts, set high and low
000186 8CF2           00460         bsf     INTCON, GIEL
                      00461         
000188 8AF1           00462         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
00018A 8AF2           00463         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
00018C 84F2           00464         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00018E 84F1           00465         bsf     INTCON2, TMR0IP     ; set to high priority
000190 86F0           00466         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
000192 9CF0           00467         bcf     INTCON3, INT1IP     ; keyboard to low priority
000194 88F2           00468         bsf     INTCON, INT0IE      ; enable high interrupts on rb0 for emergency stop
000196 92F2           00469         bcf     INTCON, INT0IF      ; clear emergency stop interrupt
                      00470         
                      00471         ; setting up timer to sychronize with 1 second clock intervals
000198 9ED5           00472         bcf     T0CON, TMR0ON
00019A 9CD5           00473         bcf     T0CON, T08BIT
00019C 9AD5           00474         bcf     T0CON, T0CS
00019E 98D5           00475         bcf     T0CON, T0SE
0001A0 96D5           00476         bcf     T0CON, PSA
0001A2 94D5           00477         bcf     T0CON, T0PS2        ; set prescaling to 1:16
0001A4 82D5           00478         bsf     T0CON, T0PS1
0001A6 80D5           00479         bsf     T0CON, T0PS0
                      00480 
0001A8 6A20           00481         clrf    H_EE
0001AA 6A21           00482         clrf    L_EE
0001AC 6A??           00483         clrf    tens_digit
0001AE 6A??           00484         clrf    ones_digit
                      00485         
0001B0 6A2C           00486         clrf    DETECTION_VAL
0001B2 6A2D           00487         clrf    ESKA
0001B4 6A2E           00488         clrf    ESKA_NOCAP
0001B6 6A2F           00489         clrf    YOP
0001B8 6A30           00490         clrf    YOP_NOCAP
0001BA 6A31           00491         clrf    TOTAL_BOTTLES
0001BC 6A32           00492         clrf    COLLECTIONS_COUNT
                      00493         
0001BE 0EF3           00494         movlw     b'11110011'    ; set required keypad inputs
0001C0 6E93           00495         movwf     TRISB
                      00496         
0001C2 EC?? F???      00497         call    ClrLCD
                      00498         Display Welcome
  0000                    M         local   loop
0001C6 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001C8 6EF8               M         movwf   TBLPTRU
0001CA 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001CC 6EF7               M         movwf   TBLPTRH
0001CE 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001D0 6EF6               M         movwf   TBLPTRL
0001D2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D4 50F5               M         movf    TABLAT, W
0001D6                    M loop
0001D6 EC?? F???          M         call    WR_DATA         ; write to LCD
0001DA 000B               M         tblrd+*                 ; next row in table
0001DC 50F5               M         movf    TABLAT, W
0001DE E1??               M         bnz     loop
0001E0 EC?? F???      00499         call LCD_L2
                      00500         Display Team
  0000                    M         local   loop
0001E4 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001E6 6EF8               M         movwf   TBLPTRU
0001E8 0E??               M         movlw   high Team       ; Move Table<15:8>
0001EA 6EF7               M         movwf   TBLPTRH
0001EC 0E??               M         movlw   low Team        ; Move Table<7:0>
0001EE 6EF6               M         movwf   TBLPTRL
0001F0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001F2 50F5               M         movf    TABLAT, W
0001F4                    M loop
0001F4 EC?? F???          M         call    WR_DATA         ; write to LCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F8 000B               M         tblrd+*                 ; next row in table
0001FA 50F5               M         movf    TABLAT, W
0001FC E1??               M         bnz     loop
                      00501         
                      00502         Delay50N delayR, 0x28
  0000                    M         local   loop
0001FE 0E28               M         movlw   0x28
000200 6E1A               M         movwf   delayR
                          M 
000202                    M loop
000202 EC?? F???          M         call    Delay50ms
000206 2E1A               M         decfsz  delayR
000208 EF?? F???          M         goto    loop
                      00503 
                      00504 ;*******************************************************************************
                      00505 ; standby mode
                      00506 ;*******************************************************************************
00020C                00507 STANDBY
                      00508         ; ensure that stepper motor is demagnetized and dc motor is off.
00020C 0E00           00509         movlw   b'00000000'
00020E 6E84           00510         movwf   PORTE
000210 0E00           00511         movlw   b'00000000'
000212 6E80           00512         movwf   PORTA
                      00513         
000214 6838           00514         setf    inStandby       
000216 EC?? F???      00515         call    ClrLCD
                      00516         Display StandBy
  0000                    M         local   loop
00021A 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
00021C 6EF8               M         movwf   TBLPTRU
00021E 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000220 6EF7               M         movwf   TBLPTRH
000222 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000224 6EF6               M         movwf   TBLPTRL
000226 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000228 50F5               M         movf    TABLAT, W
00022A                    M loop
00022A EC?? F???          M         call    WR_DATA         ; write to LCD
00022E 000B               M         tblrd+*                 ; next row in table
000230 50F5               M         movf    TABLAT, W
000232 E1??               M         bnz     loop
000234 EC?? F???      00517         call    LCD_L2
                      00518         Display StandbyInfo
  0000                    M         local   loop
000238 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
00023A 6EF8               M         movwf   TBLPTRU
00023C 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
00023E 6EF7               M         movwf   TBLPTRH
000240 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
000242 6EF6               M         movwf   TBLPTRL
000244 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000246 50F5               M         movf    TABLAT, W
000248                    M loop
000248 EC?? F???          M         call    WR_DATA         ; write to LCD
00024C 000B               M         tblrd+*                 ; next row in table
00024E 50F5               M         movf    TABLAT, W
000250 E1??               M         bnz     loop
                      00519         
000252 0EFF           00520         movlw   0xff
000254 6ED7           00521         movwf   TMR0H
000256 0EFF           00522         movlw   0xff
000258 6ED6           00523         movwf   TMR0L
00025A 8ED5           00524         bsf     T0CON, TMR0ON       ; turning on timer for scrolling lcd
                      00525 
                      00526 
00025C                00527 HOLD_STANDBY
00025C EC?? F???      00528         call    READ_KEY
                      00529 
                      00530         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000260 0E00               M         movlw   key1                ; poll for mode
000262 6210               M         cpfseq  KEY                 ; check this against key press
000264 EF?? F???          M         goto    Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000268                    M Next
000268 6A89               M         clrf    LATA                ; clear pins before proceeding
00026A 6A8A               M         clrf    LATB
00026C 6A8B               M         clrf    LATC
00026E 6A8C               M         clrf    LATD
000270 EF?? F???          M         goto    COLOUR_TEST
                          M 
000274                    M Exit
000274 0000               M         nop
                      00531         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
000276 0E01               M         movlw   key2                ; poll for mode
000278 6210               M         cpfseq  KEY                 ; check this against key press
00027A EF?? F???          M         goto    Exit
                          M 
00027E                    M Next
00027E 6A89               M         clrf    LATA                ; clear pins before proceeding
000280 6A8A               M         clrf    LATB
000282 6A8B               M         clrf    LATC
000284 6A8C               M         clrf    LATD
000286 EF?? F???          M         goto    STEP_TEST
                          M 
00028A                    M Exit
00028A 0000               M         nop
                      00532         ChangeMode  key3, DC_TEST_CW
  0000                    M         local Next, Exit
                          M 
00028C 0E02               M         movlw   key3                ; poll for mode
00028E 6210               M         cpfseq  KEY                 ; check this against key press
000290 EF?? F???          M         goto    Exit
                          M 
000294                    M Next
000294 6A89               M         clrf    LATA                ; clear pins before proceeding
000296 6A8A               M         clrf    LATB
000298 6A8B               M         clrf    LATC
00029A 6A8C               M         clrf    LATD
00029C EF?? F???          M         goto    DC_TEST_CW
                          M 
0002A0                    M Exit
0002A0 0000               M         nop
                      00533         ChangeMode  key4, DC_TEST_CCW
  0000                    M         local Next, Exit
                          M 
0002A2 0E04               M         movlw   key4                ; poll for mode
0002A4 6210               M         cpfseq  KEY                 ; check this against key press
0002A6 EF?? F???          M         goto    Exit
                          M 
0002AA                    M Next
0002AA 6A89               M         clrf    LATA                ; clear pins before proceeding
0002AC 6A8A               M         clrf    LATB
0002AE 6A8B               M         clrf    LATC
0002B0 6A8C               M         clrf    LATD
0002B2 EF?? F???          M         goto    DC_TEST_CCW
                          M 
0002B6                    M Exit
0002B6 0000               M         nop
                      00534         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0002B8 0E03               M         movlw   keyA                ; poll for mode
0002BA 6210               M         cpfseq  KEY                 ; check this against key press
0002BC EF?? F???          M         goto    Exit
                          M 
0002C0                    M Next
0002C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C2 6A8A               M         clrf    LATB
0002C4 6A8B               M         clrf    LATC
0002C6 6A8C               M         clrf    LATD
0002C8 EF?? F???          M         goto    EXECUTION
                          M 
0002CC                    M Exit
0002CC 0000               M         nop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00535         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002CE 0E07               M         movlw   keyB                ; poll for mode
0002D0 6210               M         cpfseq  KEY                 ; check this against key press
0002D2 EF?? F???          M         goto    Exit
                          M 
0002D6                    M Next
0002D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0002D8 6A8A               M         clrf    LATB
0002DA 6A8B               M         clrf    LATC
0002DC 6A8C               M         clrf    LATD
0002DE EF?? F???          M         goto    LOG
                          M 
0002E2                    M Exit
0002E2 0000               M         nop
                      00536         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002E4 0E0B               M         movlw   keyC                ; poll for mode
0002E6 6210               M         cpfseq  KEY                 ; check this against key press
0002E8 EF?? F???          M         goto    Exit
                          M 
0002EC                    M Next
0002EC 6A89               M         clrf    LATA                ; clear pins before proceeding
0002EE 6A8A               M         clrf    LATB
0002F0 6A8B               M         clrf    LATC
0002F2 6A8C               M         clrf    LATD
0002F4 EF?? F???          M         goto    PERM_LOG
                          M 
0002F8                    M Exit
0002F8 0000               M         nop
                      00537         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002FA 0E0F               M         movlw   keyD                ; poll for mode
0002FC 6210               M         cpfseq  KEY                 ; check this against key press
0002FE EF?? F???          M         goto    Exit
                          M 
000302                    M Next
000302 6A89               M         clrf    LATA                ; clear pins before proceeding
000304 6A8A               M         clrf    LATB
000306 6A8B               M         clrf    LATC
000308 6A8C               M         clrf    LATD
00030A EF?? F???          M         goto    PC_MODE
                          M 
00030E                    M Exit
00030E 0000               M         nop
000310 D???           00538         bra     HOLD_STANDBY
                      00539         
                      00540 ;*******************************************************************************
                      00541 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00542 ;*******************************************************************************
                      00543 
000312                00544 DC_TEST_CW
000312 6A38           00545         clrf    inStandby
000314 0E00           00546         movlw   b'00000000'
000316 6E84           00547         movwf   PORTE
                      00548         Delay50N    delayR, 0x0a   
  0000                    M         local   loop
000318 0E0A               M         movlw   0x0a
00031A 6E1A               M         movwf   delayR
                          M 
00031C                    M loop
00031C EC?? F???          M         call    Delay50ms
000320 2E1A               M         decfsz  delayR
000322 EF?? F???          M         goto    loop
000326                00549 DC_TEST_CW_HOLD
000326 0E01           00550         movlw   b'00000001'
000328 6E84           00551         movwf   PORTE
                      00552 
00032A EC?? F???      00553         call    READ_KEY
                      00554         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00032E 0E0D               M         movlw   key0                ; poll for mode
000330 6210               M         cpfseq  KEY                 ; check this against key press
000332 EF?? F???          M         goto    Exit
                          M 
000336                    M Next
000336 6A89               M         clrf    LATA                ; clear pins before proceeding
000338 6A8A               M         clrf    LATB
00033A 6A8B               M         clrf    LATC
00033C 6A8C               M         clrf    LATD
00033E EF?? F???          M         goto    STANDBY
                          M 
000342                    M Exit
000342 0000               M         nop
000344 D???           00555         bra     DC_TEST_CW_HOLD
                      00556         
000346                00557 DC_TEST_CCW
000346 6A38           00558         clrf    inStandby
000348 0E00           00559         movlw   b'00000000'
00034A 6E84           00560         movwf   PORTE
                      00561         Delay50N    delayR, 0x0a
  0000                    M         local   loop
00034C 0E0A               M         movlw   0x0a
00034E 6E1A               M         movwf   delayR
                          M 
000350                    M loop
000350 EC?? F???          M         call    Delay50ms
000354 2E1A               M         decfsz  delayR
000356 EF?? F???          M         goto    loop
00035A                00562 DC_TEST_CCW_HOLD
00035A 0E02           00563         movlw   b'00000010'
00035C 6E84           00564         movwf   PORTE
                      00565         
00035E EC?? F???      00566         call    READ_KEY
                      00567         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000362 0E0D               M         movlw   key0                ; poll for mode
000364 6210               M         cpfseq  KEY                 ; check this against key press
000366 EF?? F???          M         goto    Exit
                          M 
00036A                    M Next
00036A 6A89               M         clrf    LATA                ; clear pins before proceeding
00036C 6A8A               M         clrf    LATB
00036E 6A8B               M         clrf    LATC
000370 6A8C               M         clrf    LATD
000372 EF?? F???          M         goto    STANDBY
                          M 
000376                    M Exit
000376 0000               M         nop
000378 D???           00568         bra     DC_TEST_CCW_HOLD
                      00569                 
00037A                00570 STEP_TEST
00037A 6A38           00571         clrf    inStandby
00037C 6A32           00572         clrf    COLLECTIONS_COUNT
                      00573         Delay50N    delayR, 0x14
  0000                    M         local   loop
00037E 0E14               M         movlw   0x14
000380 6E1A               M         movwf   delayR
                          M 
000382                    M loop
000382 EC?? F???          M         call    Delay50ms
000386 2E1A               M         decfsz  delayR
000388 EF?? F???          M         goto    loop
                      00574     
00038C                00575 ROTATE_90_TEST
00038C 0E23           00576         movlw   b'00100011'
00038E 6E80           00577         movwf   PORTA
000390 EC?? F???      00578         call    delay5ms
                      00579         
000394 0E26           00580         movlw   b'00100110'
000396 6E80           00581         movwf   PORTA
000398 EC?? F???      00582         call    delay5ms
                      00583         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00039C 0E2C           00584         movlw   b'00101100'
00039E 6E80           00585         movwf   PORTA
0003A0 EC?? F???      00586         call    delay5ms
                      00587 
0003A4 0E29           00588         movlw   b'00101001'
0003A6 6E80           00589         movwf   PORTA
0003A8 EC?? F???      00590         call    delay5ms
                      00591         
0003AC 2A32           00592         incf    COLLECTIONS_COUNT
0003AE 0E78           00593         movlw   d'120'
0003B0 6232           00594         cpfseq  COLLECTIONS_COUNT
0003B2 D???           00595         bra     ROTATE_90_TEST
                      00596         
0003B4 D???           00597         bra STEP_TEST
                      00598 
0003B6                00599 COLOUR_TEST
0003B6 6A38           00600         clrf    inStandby
                      00601 
0003B8                00602 LOOPING
                      00603         Delay50N delayR, 0x28
  0000                    M         local   loop
0003B8 0E28               M         movlw   0x28
0003BA 6E1A               M         movwf   delayR
                          M 
0003BC                    M loop
0003BC EC?? F???          M         call    Delay50ms
0003C0 2E1A               M         decfsz  delayR
0003C2 EF?? F???          M         goto    loop
0003C6 EC?? F???      00604         call    ClrLCD
0003CA EC?? F???      00605         call    READ_ARDUINO
0003CE 0F30           00606         addlw   0x30
0003D0 EC?? F???      00607         call    WR_DATA
0003D4 D???           00608         bra LOOPING
                      00609 
                      00610 ;*******************************************************************************
                      00611 ; execution mode
                      00612 ;*******************************************************************************
                      00613         
0003D6                00614 EXECUTION
0003D6 9ED5           00615         bcf         T0CON, TMR0ON           ; turning on timer
0003D8 6A38           00616         clrf    inStandby       
0003DA EC?? F???      00617         call        ClearEEPROM_21
                      00618         
                      00619         ; save the starting time
0003DE EC?? F???      00620         call        SAVE_TIME
                      00621                 
                      00622         ; display
0003E2 681E           00623         setf        inExecution
0003E4 EC?? F???      00624         call        ClrLCD
                      00625         Display     Exe1
  0000                    M         local   loop
0003E8 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003EA 6EF8               M         movwf   TBLPTRU
0003EC 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003EE 6EF7               M         movwf   TBLPTRH
0003F0 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003F2 6EF6               M         movwf   TBLPTRL
0003F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003F6 50F5               M         movf    TABLAT, W
0003F8                    M loop
0003F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0003FC 000B               M         tblrd+*                 ; next row in table
0003FE 50F5               M         movf    TABLAT, W
000400 E1??               M         bnz     loop
000402 EC?? F???      00626         call        LCD_L2
                      00627         
000406 0EC3           00628         movlw   0xc3
000408 6ED7           00629         movwf   TMR0H
00040A 0E25           00630         movlw   0x25
00040C 6ED6           00631         movwf   TMR0L
                      00632         
00040E 8ED5           00633         bsf         T0CON, TMR0ON           ; turning on timer
                      00634         
                      00635         ; initialize variables
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000410 6A18           00636         clrf        OP_sec
000412 6A19           00637         clrf        OP_INT
                      00638         
000414 6A2D           00639         clrf        ESKA
000416 6A2E           00640         clrf        ESKA_NOCAP
000418 6A2F           00641         clrf        YOP
00041A 6A30           00642         clrf        YOP_NOCAP
00041C 6A31           00643         clrf        TOTAL_BOTTLES
00041E 0E01           00644         movlw       d'1'
000420 6E35           00645         movwf       TRAY_CURRENT
000422 6A34           00646         clrf        TRAY_DELAY
                      00647         
                      00648         ; todo: make sure tray is in position one on reset, add some delay
                      00649         
                      00650         
000424 EF?? F???      00651         goto        COLLECTIONS_STEP
                      00652 
000428                00653 COLLECTIONS_STEP
000428 6A32           00654         clrf        COLLECTIONS_COUNT
                      00655 
00042A                00656 ROTATE_90
00042A 0E23           00657         movlw   b'00100011'
00042C 6E80           00658         movwf   PORTA
00042E EC?? F???      00659         call    delay5ms
                      00660 
000432 0E26           00661         movlw   b'00100110'
000434 6E80           00662         movwf   PORTA
000436 EC?? F???      00663         call    delay5ms
                      00664         
00043A 0E2C           00665         movlw   b'00101100'
00043C 6E80           00666         movwf   PORTA
00043E EC?? F???      00667         call    delay5ms
                      00668 
000442 0E29           00669         movlw   b'00101001'
000444 6E80           00670         movwf   PORTA
000446 EC?? F???      00671         call    delay5ms
                      00672         
00044A 2A32           00673         incf    COLLECTIONS_COUNT
00044C 0E78           00674         movlw   d'120'
00044E 6232           00675         cpfseq  COLLECTIONS_COUNT
000450 D???           00676         bra     ROTATE_90
                      00677         
000452 D???           00678         bra DETECTIONS
                      00679         
000454                00680 DETECTIONS
                      00681 
                      00682 ;       movlw   d'1000'
                      00683 ;       movwf   TRAY_DELAY
                      00684         
                      00685         ; reading data from arduino 
                      00686         ; expect:   1 for eska cap
                      00687         ;           2 for eska no cap
                      00688         ;           3 for yop cap
                      00689         ;           4 for yop no cap
                      00690         ;           5 for no bottle, get outta here
000454 EC?? F???      00691         call    READ_ARDUINO
                      00692         ;movlw  d'2'                    ; testing!!!
000458 6E2C           00693         movwf   DETECTION_VAL
                      00694         
                      00695         ; first check if there was a bottle detected, if go to COLLECTIONS_STEP
00045A 0E05           00696         movlw   d'5'
00045C 5C2C           00697         subwf   DETECTION_VAL, 0
00045E E0??           00698         bz      INC_YOPNOCAP
                      00699         
                      00700         ; okay we have a bottle, first increment total count then see what it is
000460 2A31           00701         incf    TOTAL_BOTTLES
                      00702         
                      00703         ; yop no cap
000462 0E04           00704         movlw   d'4'
000464 5C2C           00705         subwf   DETECTION_VAL, 0
000466 E0??           00706         bz      INC_YOPNOCAP
                      00707         
                      00708         ; yop with cap
000468 0E03           00709         movlw   d'3'
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00046A 5C2C           00710         subwf   DETECTION_VAL, 0
00046C E0??           00711         bz      INC_YOPCAP
                      00712         
                      00713         ; eska no cap
00046E 0E02           00714         movlw   d'2'
000470 5C2C           00715         subwf   DETECTION_VAL, 0
000472 E0??           00716         bz      INC_ESKANOCAP
                      00717         
                      00718         ; eksa with cap
000474 0E01           00719         movlw   d'1'
000476 5C2C           00720         subwf   DETECTION_VAL, 0
000478 E0??           00721         bz      INC_ESKACAP
                      00722         
00047A D???           00723         bra     DETECTIONS
                      00724         
00047C                00725 INC_YOPNOCAP
00047C 2A30           00726         incf    YOP_NOCAP
                      00727 
                      00728         ; determine what position to rotate the tray to: brute force, but w/e
00047E 0E04           00729         movlw   d'4'
000480 6E36           00730         movwf   TRAY_GOTO               ; new position will be 4
000482 5C35           00731         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
000484 E0??           00732         bz      TRAY_STEP_END
                      00733         
000486 0E03           00734         movlw   d'3'
000488 5C35           00735         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CW
00048A E0??           00736         bz      TRAY_STEP_CW            
                      00737         
00048C 0E02           00738         movlw   d'2'
00048E 5C35           00739         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 2 spots over CW
000490 E0??           00740         bz      TRAY_STEP_CW
                      00741         
000492 0E01           00742         movlw   d'1'
000494 5C35           00743         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 3 spots over CW
000496 E0??           00744         bz      TRAY_STEP_CW
                      00745         
000498                00746 INC_YOPCAP
000498 2A2F           00747         incf    YOP
                      00748         
                      00749         ; determine what position to rotate the tray to: brute force, but w/e
00049A 0E03           00750         movlw   d'3'
00049C 6E36           00751         movwf   TRAY_GOTO
00049E 5C35           00752         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004A0 E0??           00753         bz      TRAY_STEP_END
                      00754         
0004A2 0E04           00755         movlw   d'4'
0004A4 5C35           00756         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 1 spot over CCW
0004A6 E0??           00757         bz      TRAY_STEP_CCW   
                      00758         
0004A8 0E02           00759         movlw   d'2'
0004AA 5C35           00760         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CW
0004AC E0??           00761         bz      TRAY_STEP_CW
                      00762         
0004AE 0E01           00763         movlw   d'1'
0004B0 5C35           00764         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CW
0004B2 E0??           00765         bz      TRAY_STEP_CW
                      00766         
0004B4                00767 INC_ESKANOCAP
0004B4 2A2E           00768         incf    ESKA_NOCAP
                      00769         
                      00770         ; determine what position to rotate the tray to: brute force, but w/e
0004B6 0E02           00771         movlw   d'2'
0004B8 6E36           00772         movwf   TRAY_GOTO
0004BA 5C35           00773         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004BC E0??           00774         bz      TRAY_STEP_END
                      00775         
0004BE 0E04           00776         movlw   d'4'
0004C0 5C35           00777         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 2 spots over CCW
0004C2 E0??           00778         bz      TRAY_STEP_CCW   
                      00779         
0004C4 0E03           00780         movlw   d'3'
0004C6 5C35           00781         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 1 spot over CCW
0004C8 E0??           00782         bz      TRAY_STEP_CCW
                      00783         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004CA 0E01           00784         movlw   d'1'
0004CC 5C35           00785         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 1 spot over CW
0004CE E0??           00786         bz      TRAY_STEP_CW
                      00787         
0004D0                00788 INC_ESKACAP
0004D0 2A2D           00789         incf    ESKA
                      00790         
                      00791         ; determine what position to rotate the tray to: brute force, but w/e
0004D2 0E01           00792         movlw   d'1'
0004D4 6E36           00793         movwf   TRAY_GOTO
0004D6 5C35           00794         subwf   TRAY_CURRENT, 0         ; if tray is where we need it, advance right away
0004D8 E0??           00795         bz      TRAY_STEP_END
                      00796         
0004DA 0E04           00797         movlw   d'4'
0004DC 5C35           00798         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spots over CCW
0004DE E0??           00799         bz      TRAY_STEP_CCW   
                      00800         
0004E0 0E03           00801         movlw   d'3'
0004E2 5C35           00802         subwf   TRAY_CURRENT, 0         ; if in positon 3, rotate 2 spots over CCW
0004E4 E0??           00803         bz      TRAY_STEP_CCW
                      00804         
0004E6 0E02           00805         movlw   d'2'
0004E8 5C35           00806         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
0004EA E0??           00807         bz      TRAY_STEP_CCW
                      00808 
0004EC                00809 TRAY_STEP_CW
0004EC 6A33           00810         clrf    TRAY_COUNT
0004EE 0E00           00811         movlw   b'00000000'
0004F0 6E84           00812         movwf   PORTE
                      00813 
0004F2                00814 TRAY_CW_HOLD
0004F2 0E01           00815         movlw   b'00000001'
0004F4 6E84           00816         movwf   PORTE
                      00817 
                      00818         Delay50Nf    delayR, TRAY_COUNT
  0000                    M         local   loop
0004F6 C033 F01A          M         movff   TRAY_COUNT, delayR
                          M 
0004FA                    M loop
0004FA EC?? F???          M         call    Delay50ms
0004FE 2E1A               M         decfsz  delayR
000500 EF?? F???          M         goto    loop
                      00819         
000504 D???           00820         bra     TRAY_STEP_END
                      00821         
000506                00822 TRAY_STEP_CCW
000506 6A33           00823         clrf    TRAY_COUNT
000508 0E00           00824         movlw   b'00000000'
00050A 6E84           00825         movwf   PORTE
                      00826         
00050C                00827 TRAY_CCW_HOLD
00050C 0E02           00828         movlw   b'00000010'
00050E 6E84           00829         movwf   PORTE
                      00830 
                      00831 ;       incf    TRAY_COUNT
                      00832 ;       movff   TRAY_COUNT, WREG
                      00833 ;       cpfseq  TRAY_DELAY
                      00834 ;       bra     TRAY_CCW_HOLD
                      00835         Delay50N    delayR, 0x24
  0000                    M         local   loop
000510 0E24               M         movlw   0x24
000512 6E1A               M         movwf   delayR
                          M 
000514                    M loop
000514 EC?? F???          M         call    Delay50ms
000518 2E1A               M         decfsz  delayR
00051A EF?? F???          M         goto    loop
                      00836 
00051E D???           00837         bra     TRAY_STEP_END
                      00838         
000520                00839 TRAY_STEP_END
000520 C036 F035      00840         movff   TRAY_GOTO, TRAY_CURRENT
000524 0E00           00841         movlw   b'00000000'
000526 6E84           00842         movwf   PORTE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00843         
000528 0E00           00844         movlw   0x00
00052A 621E           00845         cpfseq  inExecution
00052C EF?? F???      00846         goto    EXIT_EXE_SAVE
                      00847         
000530                00848 CHECK_DONE
                      00849         
                      00850         ; Challenging:  logic to figure out when the machine is done sorting 
                      00851         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00852         
                      00853         ; NUMBER: 
                      00854         ; if the total bottle count is 10, then we are done (most basic end condition)
000530 6A37           00855         clrf    STOP_CONDITION  ; denote regular stop, saved in eeprom as 0
000532 0E09           00856         movlw   d'9'
000534 5C31           00857         subwf   TOTAL_BOTTLES, 0
000536 E0??           00858         bz      EXIT_EXE
                      00859         
                      00860         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00861         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00862         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00863         ; 150s then stop.
000538 3818           00864         swapf   OP_sec, 0       ; 100's seconds
00053A 6E17           00865         movwf   temp
00053C 0E0F           00866         movlw   0x0f
00053E 1617           00867         andwf   temp
000540 0E00           00868         movlw   d'0'
000542 6417           00869         cpfsgt  temp
000544 EF?? F???      00870         goto    COLLECTIONS_STEP; if 100 second, continue to check for 150s then 120s.
                      00871 
                      00872         ; MAX
000548 0E02           00873         movlw   d'2'
00054A 6E37           00874         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
00054C C018 F017      00875         movff   OP_sec, temp    ; 10's seconds
000550 0E0F           00876         movlw   0x0f
000552 1617           00877         andwf   temp
000554 0E05           00878         movlw   d'5'
000556 5C17           00879         subwf   temp, 0
000558 E0??           00880         bz      EXIT_EXE        ; if 150 second, terminate
                      00881         
                      00882         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00883         ; qualified run has at least 4 bottles, with 1 of each different kind
00055A 0E03           00884         movlw   d'3'
00055C 6431           00885         cpfsgt  TOTAL_BOTTLES
00055E EF?? F???      00886         goto    COLLECTIONS_STEP
                      00887 
000562 0E00           00888         movlw   d'0'
000564 6430           00889         cpfsgt  YOP_NOCAP, 0
000566 EF?? F???      00890         goto    COLLECTIONS_STEP
                      00891         
00056A 0E00           00892         movlw   d'0'
00056C 642F           00893         cpfsgt  YOP, 0
00056E EF?? F???      00894         goto    COLLECTIONS_STEP
                      00895         
000572 0E00           00896         movlw   d'0'
000574 642E           00897         cpfsgt  ESKA_NOCAP, 0
000576 EF?? F???      00898         goto    COLLECTIONS_STEP
                      00899         
00057A 0E00           00900         movlw   d'0'
00057C 642D           00901         cpfsgt  ESKA, 0
00057E EF?? F???      00902         goto    COLLECTIONS_STEP
                      00903         
                      00904         ; finally, if we get here then consider the termination optimized.
000582 0E03           00905         movlw   d'3'
000584 6E37           00906         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
000586 EF?? F???      00907         goto    EXIT_EXE
                      00908         
00058A                00909 EXIT_EXE        
                      00910         ; stop timer and save the execution time to eeprom
00058A 9ED5           00911         bcf     T0CON, TMR0ON
00058C EC?? F???      00912         call    SAVE_EXE_TIME
                      00913         
                      00914         ; clear inExecution flag to stop '*' interrupts
000590 6A1E           00915         clrf    inExecution
                      00916         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00917         ; get the tray ready for next the next run
                      00918         
000592 0E1E           00919         movlw   0x1e
000594 0E33           00920         movlw   TRAY_COUNT
000596 0E04           00921         movlw   d'4'
000598 5C35           00922         subwf   TRAY_CURRENT, 0         ; if in positon 4, rotate 3 spot over CCW
00059A E0??           00923         bz      TRAY_STEP_CCW           
                      00924         
00059C 0E03           00925         movlw   d'3'
00059E 5C35           00926         subwf   TRAY_CURRENT, 0         ; if in positon 1, rotate 2 spots over CCW
0005A0 E0??           00927         bz      TRAY_STEP_CCW
                      00928         
0005A2 0E02           00929         movlw   d'2'
0005A4 5C35           00930         subwf   TRAY_CURRENT, 0         ; if in positon 2, rotate 1 spot over CCW
0005A6 E0??           00931         bz      TRAY_STEP_CCW
                      00932 
0005A8                00933 EXIT_EXE_SAVE
0005A8 EC?? F???      00934         call        ClrLCD
                      00935         Display     SAVE
  0000                    M         local   loop
0005AC 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0005AE 6EF8               M         movwf   TBLPTRU
0005B0 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0005B2 6EF7               M         movwf   TBLPTRH
0005B4 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0005B6 6EF6               M         movwf   TBLPTRL
0005B8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005BA 50F5               M         movf    TABLAT, W
0005BC                    M loop
0005BC EC?? F???          M         call    WR_DATA         ; write to LCD
0005C0 000B               M         tblrd+*                 ; next row in table
0005C2 50F5               M         movf    TABLAT, W
0005C4 E1??               M         bnz     loop
0005C6 EC?? F???      00936         call        SaveData
0005CA EF?? F???      00937         goto        LOG
                      00938 
                      00939 ;*******************************************************************************
                      00940 ; sorting statistics log mode
                      00941 ;*******************************************************************************
                      00942         
0005CE                00943 LOG
0005CE 6A38           00944         clrf    inStandby
0005D0 EC?? F???      00945         call    ClrLCD
                      00946         Display Log1
  0000                    M         local   loop
0005D4 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0005D6 6EF8               M         movwf   TBLPTRU
0005D8 0E??               M         movlw   high Log1       ; Move Table<15:8>
0005DA 6EF7               M         movwf   TBLPTRH
0005DC 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005DE 6EF6               M         movwf   TBLPTRL
0005E0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005E2 50F5               M         movf    TABLAT, W
0005E4                    M loop
0005E4 EC?? F???          M         call    WR_DATA         ; write to LCD
0005E8 000B               M         tblrd+*                 ; next row in table
0005EA 50F5               M         movf    TABLAT, W
0005EC E1??               M         bnz     loop
                      00947 
                      00948         ; display most recent run data
0005EE 0E0A           00949         movlw   d'10'
0005F0 6E21           00950         movwf   L_EE
0005F2 EC?? F???      00951         call    DisplayExeTime
                      00952 
0005F6 EC?? F???      00953         call    LCD_L2
0005FA 0E0D           00954         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
0005FC 6E21           00955         movwf   L_EE
0005FE EC?? F???      00956         call    DispOpSort
                      00957 
000602                00958 HOLD_LOG
000602 EC?? F???      00959         call    READ_KEY
                      00960         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000606 0E07               M         movlw   keyB                ; poll for mode
000608 6210               M         cpfseq  KEY                 ; check this against key press
00060A EF?? F???          M         goto    Exit
                          M 
00060E                    M Next
00060E 6A89               M         clrf    LATA                ; clear pins before proceeding
000610 6A8A               M         clrf    LATB
000612 6A8B               M         clrf    LATC
000614 6A8C               M         clrf    LATD
000616 EF?? F???          M         goto    LOG_INFO
                          M 
00061A                    M Exit
00061A 0000               M         nop
                      00961         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00061C 0E0D               M         movlw   key0                ; poll for mode
00061E 6210               M         cpfseq  KEY                 ; check this against key press
000620 EF?? F???          M         goto    Exit
                          M 
000624                    M Next
000624 6A89               M         clrf    LATA                ; clear pins before proceeding
000626 6A8A               M         clrf    LATB
000628 6A8B               M         clrf    LATC
00062A 6A8C               M         clrf    LATD
00062C EF?? F???          M         goto    STANDBY
                          M 
000630                    M Exit
000630 0000               M         nop
000632 D???           00962         bra     HOLD_LOG
                      00963 
000634                00964 LOG_INFO
000634 EC?? F???      00965         call    ClrLCD
000638 6A21           00966         clrf    L_EE
00063A EC?? F???      00967         call    DispOpRTC
                      00968         
00063E EC?? F???      00969         call    LCD_L2
                      00970         Display LogInfo2
  0000                    M         local   loop
000642 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000644 6EF8               M         movwf   TBLPTRU
000646 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
000648 6EF7               M         movwf   TBLPTRH
00064A 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
00064C 6EF6               M         movwf   TBLPTRL
00064E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000650 50F5               M         movf    TABLAT, W
000652                    M loop
000652 EC?? F???          M         call    WR_DATA         ; write to LCD
000656 000B               M         tblrd+*                 ; next row in table
000658 50F5               M         movf    TABLAT, W
00065A E1??               M         bnz     loop
00065C 6A20           00971         clrf    H_EE
00065E 6A21           00972         clrf    L_EE
000660                00973 HOLD_LOG_INFO
000660 EC?? F???      00974         call    READ_KEY
                      00975         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
000664 0E0D               M         movlw   key0                ; poll for mode
000666 6210               M         cpfseq  KEY                 ; check this against key press
000668 EF?? F???          M         goto    Exit
                          M 
00066C                    M Next
00066C 6A89               M         clrf    LATA                ; clear pins before proceeding
00066E 6A8A               M         clrf    LATB
000670 6A8B               M         clrf    LATC
000672 6A8C               M         clrf    LATD
000674 EF?? F???          M         goto    LOG
                          M 
000678                    M Exit
000678 0000               M         nop
00067A D???           00976         bra     HOLD_LOG
                      00977         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00978 ;*******************************************************************************
                      00979 ; permanent logs
                      00980 ;*******************************************************************************
                      00981 
00067C                00982 PERM_LOG
00067C 6A38           00983         clrf    inStandby
00067E EC?? F???      00984         call    ClrLCD
                      00985         Display PermLog1
  0000                    M         local   loop
000682 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000684 6EF8               M         movwf   TBLPTRU
000686 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000688 6EF7               M         movwf   TBLPTRH
00068A 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00068C 6EF6               M         movwf   TBLPTRL
00068E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000690 50F5               M         movf    TABLAT, W
000692                    M loop
000692 EC?? F???          M         call    WR_DATA         ; write to LCD
000696 000B               M         tblrd+*                 ; next row in table
000698 50F5               M         movf    TABLAT, W
00069A E1??               M         bnz     loop
00069C EC?? F???      00986         call    LCD_L2
                      00987         Display PermLog2
  0000                    M         local   loop
0006A0 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0006A2 6EF8               M         movwf   TBLPTRU
0006A4 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0006A6 6EF7               M         movwf   TBLPTRH
0006A8 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0006AA 6EF6               M         movwf   TBLPTRL
0006AC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006AE 50F5               M         movf    TABLAT, W
0006B0                    M loop
0006B0 EC?? F???          M         call    WR_DATA         ; write to LCD
0006B4 000B               M         tblrd+*                 ; next row in table
0006B6 50F5               M         movf    TABLAT, W
0006B8 E1??               M         bnz     loop
                      00988         
0006BA                00989 HOLD_PERM_LOG
0006BA EC?? F???      00990         call    READ_KEY
                      00991         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0006BE 0E0D               M         movlw   key0                ; poll for mode
0006C0 6210               M         cpfseq  KEY                 ; check this against key press
0006C2 EF?? F???          M         goto    Exit
                          M 
0006C6                    M Next
0006C6 6A89               M         clrf    LATA                ; clear pins before proceeding
0006C8 6A8A               M         clrf    LATB
0006CA 6A8B               M         clrf    LATC
0006CC 6A8C               M         clrf    LATD
0006CE EF?? F???          M         goto    STANDBY
                          M 
0006D2                    M Exit
0006D2 0000               M         nop
                      00992         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
0006D4 0E00               M         movlw   key1                ; poll for mode
0006D6 6210               M         cpfseq  KEY                 ; check this against key press
0006D8 EF?? F???          M         goto    Exit
                          M 
0006DC                    M Next
0006DC 6A89               M         clrf    LATA                ; clear pins before proceeding
0006DE 6A8A               M         clrf    LATB
0006E0 6A8B               M         clrf    LATC
0006E2 6A8C               M         clrf    LATD
0006E4 EF?? F???          M         goto    PLOG
                          M 
0006E8                    M Exit
0006E8 0000               M         nop
                      00993         ChangeMode  key2, PLOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
0006EA 0E01               M         movlw   key2                ; poll for mode
0006EC 6210               M         cpfseq  KEY                 ; check this against key press
0006EE EF?? F???          M         goto    Exit
                          M 
0006F2                    M Next
0006F2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F4 6A8A               M         clrf    LATB
0006F6 6A8B               M         clrf    LATC
0006F8 6A8C               M         clrf    LATD
0006FA EF?? F???          M         goto    PLOG
                          M 
0006FE                    M Exit
0006FE 0000               M         nop
                      00994         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000700 0E02               M         movlw   key3                ; poll for mode
000702 6210               M         cpfseq  KEY                 ; check this against key press
000704 EF?? F???          M         goto    Exit
                          M 
000708                    M Next
000708 6A89               M         clrf    LATA                ; clear pins before proceeding
00070A 6A8A               M         clrf    LATB
00070C 6A8B               M         clrf    LATC
00070E 6A8C               M         clrf    LATD
000710 EF?? F???          M         goto    PLOG
                          M 
000714                    M Exit
000714 0000               M         nop
                      00995         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000716 0E04               M         movlw   key4                ; poll for mode
000718 6210               M         cpfseq  KEY                 ; check this against key press
00071A EF?? F???          M         goto    Exit
                          M 
00071E                    M Next
00071E 6A89               M         clrf    LATA                ; clear pins before proceeding
000720 6A8A               M         clrf    LATB
000722 6A8B               M         clrf    LATC
000724 6A8C               M         clrf    LATD
000726 EF?? F???          M         goto    PLOG
                          M 
00072A                    M Exit
00072A 0000               M         nop
                      00996         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
00072C 0E05               M         movlw   key5                ; poll for mode
00072E 6210               M         cpfseq  KEY                 ; check this against key press
000730 EF?? F???          M         goto    Exit
                          M 
000734                    M Next
000734 6A89               M         clrf    LATA                ; clear pins before proceeding
000736 6A8A               M         clrf    LATB
000738 6A8B               M         clrf    LATC
00073A 6A8C               M         clrf    LATD
00073C EF?? F???          M         goto    PLOG
                          M 
000740                    M Exit
000740 0000               M         nop
                      00997         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000742 0E06               M         movlw   key6                ; poll for mode
000744 6210               M         cpfseq  KEY                 ; check this against key press
000746 EF?? F???          M         goto    Exit
                          M 
00074A                    M Next
00074A 6A89               M         clrf    LATA                ; clear pins before proceeding
00074C 6A8A               M         clrf    LATB
00074E 6A8B               M         clrf    LATC
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000750 6A8C               M         clrf    LATD
000752 EF?? F???          M         goto    PLOG
                          M 
000756                    M Exit
000756 0000               M         nop
                      00998         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
000758 0E08               M         movlw   key7                ; poll for mode
00075A 6210               M         cpfseq  KEY                 ; check this against key press
00075C EF?? F???          M         goto    Exit
                          M 
000760                    M Next
000760 6A89               M         clrf    LATA                ; clear pins before proceeding
000762 6A8A               M         clrf    LATB
000764 6A8B               M         clrf    LATC
000766 6A8C               M         clrf    LATD
000768 EF?? F???          M         goto    PLOG
                          M 
00076C                    M Exit
00076C 0000               M         nop
                      00999         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
00076E 0E09               M         movlw   key8                ; poll for mode
000770 6210               M         cpfseq  KEY                 ; check this against key press
000772 EF?? F???          M         goto    Exit
                          M 
000776                    M Next
000776 6A89               M         clrf    LATA                ; clear pins before proceeding
000778 6A8A               M         clrf    LATB
00077A 6A8B               M         clrf    LATC
00077C 6A8C               M         clrf    LATD
00077E EF?? F???          M         goto    PLOG
                          M 
000782                    M Exit
000782 0000               M         nop
                      01000         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000784 0E0A               M         movlw   key9                ; poll for mode
000786 6210               M         cpfseq  KEY                 ; check this against key press
000788 EF?? F???          M         goto    Exit
                          M 
00078C                    M Next
00078C 6A89               M         clrf    LATA                ; clear pins before proceeding
00078E 6A8A               M         clrf    LATB
000790 6A8B               M         clrf    LATC
000792 6A8C               M         clrf    LATD
000794 EF?? F???          M         goto    PLOG
                          M 
000798                    M Exit
000798 0000               M         nop
00079A D???           01001         bra HOLD_PERM_LOG
                      01002         
00079C                01003 PLOG
00079C EC?? F???      01004         call    ClrLCD
                      01005         Display PermLog1
  0000                    M         local   loop
0007A0 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0007A2 6EF8               M         movwf   TBLPTRU
0007A4 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0007A6 6EF7               M         movwf   TBLPTRH
0007A8 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0007AA 6EF6               M         movwf   TBLPTRL
0007AC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007AE 50F5               M         movf    TABLAT, W
0007B0                    M loop
0007B0 EC?? F???          M         call    WR_DATA         ; write to LCD
0007B4 000B               M         tblrd+*                 ; next row in table
0007B6 50F5               M         movf    TABLAT, W
0007B8 E1??               M         bnz     loop
                      01006         
                      01007         ; find the key press value
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007BA C010 FFE8      01008         movff   KEY, WREG
0007BE 2AE8           01009         incf    WREG        ; W = KEY+1
0007C0 6E17           01010         movwf   temp
                      01011         
0007C2 42E8           01012         rrncf   WREG        ; division by 4
0007C4 9EE8           01013         bcf     WREG, 7     ; clear last bit, overflow from rotate
0007C6 42E8           01014         rrncf   WREG        
0007C8 9EE8           01015         bcf     WREG, 7
0007CA 5E17           01016         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
0007CC C017 FFE8      01017         movff   temp, WREG
0007D0 C017 F011      01018         movff   temp, temp_KEY
0007D4 0D15           01019         mullw   d'21'       ; indexed as mutliples of 21
                      01020 
0007D6                01021 displayNum
0007D6 C011 FFE8      01022         movff   temp_KEY, WREG
0007DA 0F30           01023         addlw   0x30
0007DC EC?? F???      01024         call    WR_DATA
0007E0 0E3A           01025         movlw   ":"
0007E2 EC?? F???      01026         call    WR_DATA
0007E6 0E20           01027         movlw   " "
0007E8 EC?? F???      01028         call    WR_DATA
                      01029         
0007EC CFF3 F021      01030         movff   PRODL, L_EE
0007F0 0E00           01031         movlw   d'0'
0007F2 2621           01032         addwf   L_EE
                      01033         READEE  OP_sec, H_EE, L_EE
0007F4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007F8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007FC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007FE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000800 80A6               M         bsf     EECON1, RD          ; read EEPROM
000802 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000806 2A21           01034         incf    L_EE
                      01035         READEE  OP_INT, H_EE, L_EE
000808 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00080C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000810 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000812 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000814 80A6               M         bsf     EECON1, RD          ; read EEPROM
000816 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00081A 2A21           01036         incf    L_EE
00081C EC?? F???      01037         call    DisplayExeTime
000820 CFF3 F021      01038         movff   PRODL, L_EE
                      01039         
                      01040         ; reset eeprom to beginning
000824 EC?? F???      01041         call    LCD_L2
000828 CFF3 F021      01042         movff   PRODL, L_EE
00082C EC?? F???      01043         call    DispOpRTC
                      01044         
000830                01045 HOLD_PLOG
000830 EC?? F???      01046         call    READ_KEY
                      01047         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
000834 0E03               M         movlw   keyA                ; poll for mode
000836 6210               M         cpfseq  KEY                 ; check this against key press
000838 EF?? F???          M         goto    Exit
                          M 
00083C                    M Next
00083C 6A89               M         clrf    LATA                ; clear pins before proceeding
00083E 6A8A               M         clrf    LATB
000840 6A8B               M         clrf    LATC
000842 6A8C               M         clrf    LATD
000844 EF?? F???          M         goto    PLOG_DETAILS
                          M 
000848                    M Exit
000848 0000               M         nop
                      01048         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
00084A 0E0D               M         movlw   key0                ; poll for mode
00084C 6210               M         cpfseq  KEY                 ; check this against key press
00084E EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000852                    M Next
000852 6A89               M         clrf    LATA                ; clear pins before proceeding
000854 6A8A               M         clrf    LATB
000856 6A8B               M         clrf    LATC
000858 6A8C               M         clrf    LATD
00085A EF?? F???          M         goto    PERM_LOG
                          M 
00085E                    M Exit
00085E 0000               M         nop
000860 D???           01049         bra HOLD_PLOG
                      01050         
000862                01051 PLOG_DETAILS
000862 EC?? F???      01052         call    ClrLCD
                      01053         
                      01054         Display Log1
  0000                    M         local   loop
000866 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000868 6EF8               M         movwf   TBLPTRU
00086A 0E??               M         movlw   high Log1       ; Move Table<15:8>
00086C 6EF7               M         movwf   TBLPTRH
00086E 0E??               M         movlw   low Log1        ; Move Table<7:0>
000870 6EF6               M         movwf   TBLPTRL
000872 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000874 50F5               M         movf    TABLAT, W
000876                    M loop
000876 EC?? F???          M         call    WR_DATA         ; write to LCD
00087A 000B               M         tblrd+*                 ; next row in table
00087C 50F5               M         movf    TABLAT, W
00087E E1??               M         bnz     loop
000880 EC?? F???      01055         call    DisplayExeTime
                      01056         
000884 EC?? F???      01057         call    LCD_L2
000888 EC?? F???      01058         call    DispOpSort
                      01059         
00088C                01060 HOLD_PLOG_DETAILS
00088C EC?? F???      01061         call    READ_KEY
                      01062         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000890 0E0D               M         movlw   key0                ; poll for mode
000892 6210               M         cpfseq  KEY                 ; check this against key press
000894 EF?? F???          M         goto    Exit
                          M 
000898                    M Next
000898 6A89               M         clrf    LATA                ; clear pins before proceeding
00089A 6A8A               M         clrf    LATB
00089C 6A8B               M         clrf    LATC
00089E 6A8C               M         clrf    LATD
0008A0 EF?? F???          M         goto    PERM_LOG
                          M 
0008A4                    M Exit
0008A4 0000               M         nop
0008A6 D???           01063         bra HOLD_PLOG_DETAILS
                      01064         
                      01065 ;*******************************************************************************
                      01066 ; pc interface
                      01067 ;*******************************************************************************
                      01068 
0008A8                01069 PC_MODE
0008A8 6A38           01070         clrf    inStandby
0008AA EC?? F???      01071         call    ClrLCD
                      01072         Display PC1
  0000                    M         local   loop
0008AE 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0008B0 6EF8               M         movwf   TBLPTRU
0008B2 0E??               M         movlw   high PC1        ; Move Table<15:8>
0008B4 6EF7               M         movwf   TBLPTRH
0008B6 0E??               M         movlw   low PC1         ; Move Table<7:0>
0008B8 6EF6               M         movwf   TBLPTRL
0008BA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008BC 50F5               M         movf    TABLAT, W
0008BE                    M loop
0008BE EC?? F???          M         call    WR_DATA         ; write to LCD
0008C2 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008C4 50F5               M         movf    TABLAT, W
0008C6 E1??               M         bnz     loop
0008C8 EC?? F???      01073         call    LCD_L2
                      01074         Display PC2
  0000                    M         local   loop
0008CC 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0008CE 6EF8               M         movwf   TBLPTRU
0008D0 0E??               M         movlw   high PC2        ; Move Table<15:8>
0008D2 6EF7               M         movwf   TBLPTRH
0008D4 0E??               M         movlw   low PC2         ; Move Table<7:0>
0008D6 6EF6               M         movwf   TBLPTRL
0008D8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008DA 50F5               M         movf    TABLAT, W
0008DC                    M loop
0008DC EC?? F???          M         call    WR_DATA         ; write to LCD
0008E0 000B               M         tblrd+*                 ; next row in table
0008E2 50F5               M         movf    TABLAT, W
0008E4 E1??               M         bnz     loop
0008E6 CFF9 F029      01075         movff   PCL, PC_PCL
0008EA CFFA F02A      01076         movff   PCLATH, PC_PCLATH
0008EE CFFB F02B      01077         movff   PCLATU, PC_PCLATU
                      01078         
0008F2                01079 HOLD_PC
0008F2 EC?? F???      01080         call    READ_KEY
                      01081         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008F6 0E0D               M         movlw   key0                ; poll for mode
0008F8 6210               M         cpfseq  KEY                 ; check this against key press
0008FA EF?? F???          M         goto    Exit
                          M 
0008FE                    M Next
0008FE 6A89               M         clrf    LATA                ; clear pins before proceeding
000900 6A8A               M         clrf    LATB
000902 6A8B               M         clrf    LATC
000904 6A8C               M         clrf    LATD
000906 EF?? F???          M         goto    STANDBY
                          M 
00090A                    M Exit
00090A 0000               M         nop
                      01082         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
00090C 0E0E               M         movlw   keyH                ; poll for mode
00090E 6210               M         cpfseq  KEY                 ; check this against key press
000910 EF?? F???          M         goto    Exit
                          M 
000914                    M Next
000914 6A89               M         clrf    LATA                ; clear pins before proceeding
000916 6A8A               M         clrf    LATB
000918 6A8B               M         clrf    LATC
00091A 6A8C               M         clrf    LATD
00091C EF?? F???          M         goto    PC_TRANSFER
                          M 
000920                    M Exit
000920 0000               M         nop
000922 D???           01083         bra     HOLD_PC
                      01084 
000924                01085 PC_TRANSFER
000924 6828           01086         setf    transferring
000926 EC?? F???      01087         call    ClrLCD
                      01088         Display PCTransfer
  0000                    M         local   loop
00092A 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
00092C 6EF8               M         movwf   TBLPTRU
00092E 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000930 6EF7               M         movwf   TBLPTRH
000932 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000934 6EF6               M         movwf   TBLPTRL
000936 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000938 50F5               M         movf    TABLAT, W
00093A                    M loop
00093A EC?? F???          M         call    WR_DATA         ; write to LCD
00093E 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000940 50F5               M         movf    TABLAT, W
000942 E1??               M         bnz     loop
000944 EC?? F???      01089         call    DataUSART
000948 6A28           01090         clrf    transferring
00094A EF?? F???      01091         goto    STANDBY
                      01092         
                      01093 ;*******************************************************************************
                      01094 ; subroutines
                      01095 ;*******************************************************************************
                      01096 
00094E                01097 SaveData
00094E C02D FFE8      01098         movff       ESKA, WREG
000952 0F30           01099         addlw       0x30
                      01100         WriteEE     WREG, H_EE, L_EE
000954 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000958 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00095C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000960 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000962 D???               M         bra     $-2
                          M 
000964 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000966 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000968 84A6               M         bsf     EECON1, WREN        ; enable write
00096A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00096C 98A1               M         bcf     PIR2, EEIF
                          M 
00096E 0E55               M         movlw   0x55
000970 6EA7               M         movwf   EECON2              ; write 55h
000972 0EAA               M         movlw   0xaa
000974 6EA7               M         movwf   EECON2              ; write 0xaa
000976 82A6               M         bsf     EECON1, WR          ; begin write
000978 B2A6               M         btfsc   EECON1, WR
00097A D???               M         bra     $-2
                          M 
00097C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00097E 94A6               M         bcf     EECON1, WREN        ; disable writes
000980 2A21           01101         incf        L_EE
                      01102         
000982 C02E FFE8      01103         movff       ESKA_NOCAP, WREG
000986 0F30           01104         addlw       0x30
                      01105         WriteEE     WREG, H_EE, L_EE
000988 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00098C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000990 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000994 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000996 D???               M         bra     $-2
                          M 
000998 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00099A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00099C 84A6               M         bsf     EECON1, WREN        ; enable write
00099E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009A0 98A1               M         bcf     PIR2, EEIF
                          M 
0009A2 0E55               M         movlw   0x55
0009A4 6EA7               M         movwf   EECON2              ; write 55h
0009A6 0EAA               M         movlw   0xaa
0009A8 6EA7               M         movwf   EECON2              ; write 0xaa
0009AA 82A6               M         bsf     EECON1, WR          ; begin write
0009AC B2A6               M         btfsc   EECON1, WR
0009AE D???               M         bra     $-2
                          M 
0009B0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009B2 94A6               M         bcf     EECON1, WREN        ; disable writes
0009B4 2A21           01106         incf        L_EE
                      01107         
0009B6 C02F FFE8      01108         movff       YOP, WREG
0009BA 0F30           01109         addlw       0x30
                      01110         WriteEE     WREG, H_EE, L_EE
0009BC C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009C0 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009C4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009C8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009CA D???               M         bra     $-2
                          M 
0009CC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009CE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009D0 84A6               M         bsf     EECON1, WREN        ; enable write
0009D2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009D4 98A1               M         bcf     PIR2, EEIF
                          M 
0009D6 0E55               M         movlw   0x55
0009D8 6EA7               M         movwf   EECON2              ; write 55h
0009DA 0EAA               M         movlw   0xaa
0009DC 6EA7               M         movwf   EECON2              ; write 0xaa
0009DE 82A6               M         bsf     EECON1, WR          ; begin write
0009E0 B2A6               M         btfsc   EECON1, WR
0009E2 D???               M         bra     $-2
                          M 
0009E4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009E6 94A6               M         bcf     EECON1, WREN        ; disable writes
0009E8 2A21           01111         incf        L_EE
                      01112         
0009EA C030 FFE8      01113         movff       YOP_NOCAP, WREG
0009EE 0F30           01114         addlw       0x30
                      01115         WriteEE     WREG, H_EE, L_EE
0009F0 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009F4 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009F8 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009FC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009FE D???               M         bra     $-2
                          M 
000A00 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A02 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A04 84A6               M         bsf     EECON1, WREN        ; enable write
000A06 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A08 98A1               M         bcf     PIR2, EEIF
                          M 
000A0A 0E55               M         movlw   0x55
000A0C 6EA7               M         movwf   EECON2              ; write 55h
000A0E 0EAA               M         movlw   0xaa
000A10 6EA7               M         movwf   EECON2              ; write 0xaa
000A12 82A6               M         bsf     EECON1, WR          ; begin write
000A14 B2A6               M         btfsc   EECON1, WR
000A16 D???               M         bra     $-2
                          M 
000A18 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A1A 94A6               M         bcf     EECON1, WREN        ; disable writes
000A1C 2A21           01116         incf        L_EE
                      01117         
000A1E C037 FFE8      01118         movff       STOP_CONDITION, WREG
000A22 0F30           01119         addlw       0x30
                      01120         WriteEE     WREG, H_EE, L_EE
000A24 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A28 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A2C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A30 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A32 D???               M         bra     $-2
                          M 
000A34 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A36 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A38 84A6               M         bsf     EECON1, WREN        ; enable write
000A3A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A3C 98A1               M         bcf     PIR2, EEIF
                          M 
000A3E 0E55               M         movlw   0x55
000A40 6EA7               M         movwf   EECON2              ; write 55h
000A42 0EAA               M         movlw   0xaa
000A44 6EA7               M         movwf   EECON2              ; write 0xaa
000A46 82A6               M         bsf     EECON1, WR          ; begin write
000A48 B2A6               M         btfsc   EECON1, WR
000A4A D???               M         bra     $-2
                          M 
000A4C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A4E 94A6               M         bcf     EECON1, WREN        ; disable writes
000A50 2A21           01121         incf        L_EE
                      01122         
000A52 0E00           01123         movlw       d'0'
000A54 6E20           01124         movwf       H_EE
000A56 0EA8           01125         movlw       d'168'              ; take d'168' as last
000A58 6E21           01126         movwf       L_EE
000A5A 0E00           01127         movlw       d'0'
000A5C 6E23           01128         movwf       tempH_EE
000A5E 0EDC           01129         movlw       d'220'              ; temp for low constant
000A60 6E24           01130         movwf       tempL_EE
                      01131         
000A62 6A16           01132         clrf        counter2
000A64 6A15           01133         clrf        counter
                      01134         
000A66                01135 ShiftLoop
000A66 2A15           01136         incf            counter
                      01137         READEE          REG_EE, H_EE, L_EE
000A68 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A6C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000A70 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A72 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A74 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A76 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000A7A 0E15           01138         movlw           d'21'
000A7C 2621           01139         addwf           L_EE
                      01140         WriteEE         REG_EE, H_EE, L_EE
000A7E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A82 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A86 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000A8A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A8C D???               M         bra     $-2
                          M 
000A8E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A90 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A92 84A6               M         bsf     EECON1, WREN        ; enable write
000A94 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A96 98A1               M         bcf     PIR2, EEIF
                          M 
000A98 0E55               M         movlw   0x55
000A9A 6EA7               M         movwf   EECON2              ; write 55h
000A9C 0EAA               M         movlw   0xaa
000A9E 6EA7               M         movwf   EECON2              ; write 0xaa
000AA0 82A6               M         bsf     EECON1, WR          ; begin write
000AA2 B2A6               M         btfsc   EECON1, WR
000AA4 D???               M         bra     $-2
                          M 
000AA6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000AA8 94A6               M         bcf     EECON1, WREN        ; disable writes
000AAA 0E14           01141         movlw           d'20'
000AAC 5E21           01142         subwf           L_EE
000AAE 0E15           01143         movlw           d'21'
000AB0 6215           01144         cpfseq          counter
000AB2 EF?? F???      01145         goto            ShiftLoop
                      01146         
                      01147         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000AB6 0E2A           01148         movlw           d'42'
000AB8 5E21           01149         subwf           L_EE
000ABA 0EDC           01150         movlw           d'220'
000ABC 6E24           01151         movwf           tempL_EE
000ABE 6A15           01152         clrf            counter
000AC0 2A16           01153         incf            counter2
000AC2 0E09           01154         movlw           d'9'
000AC4 6216           01155         cpfseq          counter2        ; Skip if 9 shifts were made
000AC6 EF?? F???      01156         goto            ShiftLoop
                      01157 
000ACA 0012           01158         return
                      01159         
000ACC                01160 RTC_INIT
                      01161         ; set sda and scl to high
000ACC 9882           01162         bcf     PORTC, 4
000ACE 9682           01163         bcf     PORTC, 3
000AD0 8894           01164         bsf     TRISC, 4
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AD2 8694           01165         bsf     TRISC, 3
                      01166         
000AD4 EC?? F???      01167         call    INIT_RTC
                      01168         
                      01169         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000AD8 0012           01170 return
                      01171         
000ADA                01172 SAVE_TIME
                      01173         rtc_read    0x02        ; hours     ; need to call this twice idk y
000ADA 0E02               M     movlw   0x02
000ADC 6E??               M     movwf   regaddress
000ADE EC?? F???          M     call    read_rtc
000AE2 C??? FFE8          M     movff   datachar, WREG
000AE6 EC?? F???          M     call    rtc_convert
                      01174         rtc_read    0x02        ; hours
000AEA 0E02               M     movlw   0x02
000AEC 6E??               M     movwf   regaddress
000AEE EC?? F???          M     call    read_rtc
000AF2 C??? FFE8          M     movff   datachar, WREG
000AF6 EC?? F???          M     call    rtc_convert
000AFA EC?? F???      01175         call    WriteEE_RTC
                      01176         rtc_read    0x01        ; minutes
000AFE 0E01               M     movlw   0x01
000B00 6E??               M     movwf   regaddress
000B02 EC?? F???          M     call    read_rtc
000B06 C??? FFE8          M     movff   datachar, WREG
000B0A EC?? F???          M     call    rtc_convert
000B0E EC?? F???      01177         call    WriteEE_RTC
                      01178         rtc_read    0x06        ; years
000B12 0E06               M     movlw   0x06
000B14 6E??               M     movwf   regaddress
000B16 EC?? F???          M     call    read_rtc
000B1A C??? FFE8          M     movff   datachar, WREG
000B1E EC?? F???          M     call    rtc_convert
000B22 EC?? F???      01179         call    WriteEE_RTC
                      01180         rtc_read    0x05        ; months
000B26 0E05               M     movlw   0x05
000B28 6E??               M     movwf   regaddress
000B2A EC?? F???          M     call    read_rtc
000B2E C??? FFE8          M     movff   datachar, WREG
000B32 EC?? F???          M     call    rtc_convert
000B36 EC?? F???      01181         call    WriteEE_RTC
                      01182         rtc_read    0x04        ; days
000B3A 0E04               M     movlw   0x04
000B3C 6E??               M     movwf   regaddress
000B3E EC?? F???          M     call    read_rtc
000B42 C??? FFE8          M     movff   datachar, WREG
000B46 EC?? F???          M     call    rtc_convert
000B4A EC?? F???      01183         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000B4E 0012           01184 return
                      01185         
000B50                01186 SAVE_EXE_TIME
                      01187         
Warning[202]: Argument out of range.  Least significant bits used.
000B50 3818           01188         swapf   OP_sec, WREG    ; 100's seconds
000B52 6E17           01189         movwf   temp
000B54 0E0F           01190         movlw   0x0f
000B56 1617           01191         andwf   temp
000B58 C017 FFE8      01192         movff   temp, WREG
000B5C 0F30           01193         addlw   0x30    
                      01194         WriteEE WREG, H_EE, L_EE
000B5E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B62 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B66 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B6A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B6C D???               M         bra     $-2
                          M 
000B6E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B70 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B72 84A6               M         bsf     EECON1, WREN        ; enable write
000B74 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B76 98A1               M         bcf     PIR2, EEIF
                          M 
000B78 0E55               M         movlw   0x55
000B7A 6EA7               M         movwf   EECON2              ; write 55h
000B7C 0EAA               M         movlw   0xaa
000B7E 6EA7               M         movwf   EECON2              ; write 0xaa
000B80 82A6               M         bsf     EECON1, WR          ; begin write
000B82 B2A6               M         btfsc   EECON1, WR
000B84 D???               M         bra     $-2
                          M 
000B86 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B88 94A6               M         bcf     EECON1, WREN        ; disable writes
000B8A 2A21           01195         incf    L_EE
                      01196         
000B8C C018 F017      01197         movff   OP_sec, temp    ; 10's seconds
000B90 0E0F           01198         movlw   0x0f
000B92 1617           01199         andwf   temp            ; Temp = lower nibble of Op_sec
000B94 C017 FFE8      01200         movff   temp, WREG      ; W = Temp
000B98 0F30           01201         addlw   0x30            ; Convert to ASCII
                      01202         WriteEE WREG, H_EE, L_EE
000B9A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B9E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000BA2 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000BA6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BA8 D???               M         bra     $-2
                          M 
000BAA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BAC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BAE 84A6               M         bsf     EECON1, WREN        ; enable write
000BB0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BB2 98A1               M         bcf     PIR2, EEIF
                          M 
000BB4 0E55               M         movlw   0x55
000BB6 6EA7               M         movwf   EECON2              ; write 55h
000BB8 0EAA               M         movlw   0xaa
000BBA 6EA7               M         movwf   EECON2              ; write 0xaa
000BBC 82A6               M         bsf     EECON1, WR          ; begin write
000BBE B2A6               M         btfsc   EECON1, WR
000BC0 D???               M         bra     $-2
                          M 
000BC2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BC4 94A6               M         bcf     EECON1, WREN        ; disable writes
000BC6 2A21           01203         incf    L_EE
                      01204         
Warning[202]: Argument out of range.  Least significant bits used.
000BC8 3819           01205         swapf   OP_INT, WREG    ;1's seconds
000BCA 6E17           01206         movwf   temp
000BCC 0E0F           01207         movlw   0x0f
000BCE 1617           01208         andwf   temp
000BD0 C017 FFE8      01209         movff   temp, WREG
000BD4 0F30           01210         addlw   0x30
                      01211         WriteEE WREG, H_EE, L_EE
000BD6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000BDA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000BDE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000BE2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BE4 D???               M         bra     $-2
                          M 
000BE6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BE8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BEA 84A6               M         bsf     EECON1, WREN        ; enable write
000BEC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BEE 98A1               M         bcf     PIR2, EEIF
                          M 
000BF0 0E55               M         movlw   0x55
000BF2 6EA7               M         movwf   EECON2              ; write 55h
000BF4 0EAA               M         movlw   0xaa
000BF6 6EA7               M         movwf   EECON2              ; write 0xaa
000BF8 82A6               M         bsf     EECON1, WR          ; begin write
000BFA B2A6               M         btfsc   EECON1, WR
000BFC D???               M         bra     $-2
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BFE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C00 94A6               M         bcf     EECON1, WREN        ; disable writes
000C02 2A21           01212         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000C04 0012           01213 return
                      01214         
                      01215                 
000C06                01216 DISPLAY_RTC
                      01217         ; display data in this format hh/minmin/yy yy/mm/dd
                      01218         
                      01219         rtc_read    0x02            ; 0x02 from DS1307 - hours
000C06 0E02               M     movlw   0x02
000C08 6E??               M     movwf   regaddress
000C0A EC?? F???          M     call    read_rtc
000C0E C??? FFE8          M     movff   datachar, WREG
000C12 EC?? F???          M     call    rtc_convert
000C16 C??? FFE8      01220         movff   tens_digit,WREG
000C1A EC?? F???      01221         call    WR_DATA
000C1E C??? FFE8      01222         movff   ones_digit,WREG
000C22 EC?? F???      01223         call    WR_DATA
000C26 0E68           01224         movlw   "h"
000C28 EC?? F???      01225         call    WR_DATA
                      01226         
                      01227         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000C2C 0E01               M     movlw   0x01
000C2E 6E??               M     movwf   regaddress
000C30 EC?? F???          M     call    read_rtc
000C34 C??? FFE8          M     movff   datachar, WREG
000C38 EC?? F???          M     call    rtc_convert
000C3C C??? FFE8      01228         movff   tens_digit,WREG
000C40 EC?? F???      01229         call    WR_DATA
000C44 C??? FFE8      01230         movff   ones_digit,WREG
000C48 EC?? F???      01231         call    WR_DATA
                      01232         
                      01233         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000C4C 0E00               M     movlw   0x00
000C4E 6E??               M     movwf   regaddress
000C50 EC?? F???          M     call    read_rtc
000C54 C??? FFE8          M     movff   datachar, WREG
000C58 EC?? F???          M     call    rtc_convert
000C5C C??? FFE8      01234         movff   tens_digit,WREG
000C60 EC?? F???      01235         call    WR_DATA
000C64 C??? FFE8      01236         movff   ones_digit,WREG
000C68 EC?? F???      01237         call    WR_DATA
000C6C 0E20           01238         movlw   " "
000C6E EC?? F???      01239         call    WR_DATA
                      01240         
                      01241         rtc_read    0x06            ; 0x06 from DS1307 - years
000C72 0E06               M     movlw   0x06
000C74 6E??               M     movwf   regaddress
000C76 EC?? F???          M     call    read_rtc
000C7A C??? FFE8          M     movff   datachar, WREG
000C7E EC?? F???          M     call    rtc_convert
000C82 C??? FFE8      01242         movff   tens_digit,WREG
000C86 EC?? F???      01243         call    WR_DATA
000C8A C??? FFE8      01244         movff   ones_digit,WREG
000C8E EC?? F???      01245         call    WR_DATA
000C92 0E2F           01246         movlw   "/"
000C94 EC?? F???      01247         call    WR_DATA
                      01248         
                      01249         rtc_read    0x05            ; 0x05 from DS1307 - months
000C98 0E05               M     movlw   0x05
000C9A 6E??               M     movwf   regaddress
000C9C EC?? F???          M     call    read_rtc
000CA0 C??? FFE8          M     movff   datachar, WREG
000CA4 EC?? F???          M     call    rtc_convert
000CA8 C??? FFE8      01250         movff   tens_digit,WREG
000CAC EC?? F???      01251         call    WR_DATA
000CB0 C??? FFE8      01252         movff   ones_digit,WREG
000CB4 EC?? F???      01253         call    WR_DATA
000CB8 0E2F           01254         movlw   "/"
000CBA EC?? F???      01255         call    WR_DATA
                      01256         
                      01257         rtc_read    0x04            ; 0x04 from DS1307 - days
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CBE 0E04               M     movlw   0x04
000CC0 6E??               M     movwf   regaddress
000CC2 EC?? F???          M     call    read_rtc
000CC6 C??? FFE8          M     movff   datachar, WREG
000CCA EC?? F???          M     call    rtc_convert
000CCE C??? FFE8      01258         movff   tens_digit,WREG
000CD2 EC?? F???      01259         call    WR_DATA
000CD6 C??? FFE8      01260         movff   ones_digit,WREG
000CDA EC?? F???      01261         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000CDE 0012           01262 return
                      01263         
000CE0                01264 SET_TIME
                      01265         rtc_resetAll
                          M 
000CE0 6A??               M     clrf    databyte
000CE2 0E06               M     movlw   6
000CE4 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000CE6                    M     del_loop0
000CE6 EC?? F???          M     call    write_rtc
000CEA 2E??               M     decfsz  regaddress
000CEC D???               M     bra     del_loop0
000CEE EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01266         
                      01267         rtc_set 0x00,   b'10000000'
000CF2 0E00               M     movlw   0x00
000CF4 6E??               M     movwf   regaddress
000CF6 0E80               M     movlw   b'10000000'
000CF8 6E??               M     movwf   databyte
000CFA EC?? F???          M     call    write_rtc
                      01268 
                      01269         rtc_set 0x06,   b'00010111'             ; Year 17
000CFE 0E06               M     movlw   0x06
000D00 6E??               M     movwf   regaddress
000D02 0E17               M     movlw   b'00010111'
000D04 6E??               M     movwf   databyte
000D06 EC?? F???          M     call    write_rtc
                      01270         rtc_set 0x05,   b'00000011'             ; Month 03
000D0A 0E05               M     movlw   0x05
000D0C 6E??               M     movwf   regaddress
000D0E 0E03               M     movlw   b'00000011'
000D10 6E??               M     movwf   databyte
000D12 EC?? F???          M     call    write_rtc
                      01271         rtc_set 0x04,   b'00000100'             ; Date 04
000D16 0E04               M     movlw   0x04
000D18 6E??               M     movwf   regaddress
000D1A 0E04               M     movlw   b'00000100'
000D1C 6E??               M     movwf   databyte
000D1E EC?? F???          M     call    write_rtc
                      01272         rtc_set 0x02,   b'00010010'             ; Hours 12
000D22 0E02               M     movlw   0x02
000D24 6E??               M     movwf   regaddress
000D26 0E12               M     movlw   b'00010010'
000D28 6E??               M     movwf   databyte
000D2A EC?? F???          M     call    write_rtc
                      01273         rtc_set 0x01,   b'01001000'             ; Minutes 27
000D2E 0E01               M     movlw   0x01
000D30 6E??               M     movwf   regaddress
000D32 0E48               M     movlw   b'01001000'
000D34 6E??               M     movwf   databyte
000D36 EC?? F???          M     call    write_rtc
                      01274         rtc_set 0x00,   b'00000000'             ; Seconds 0
000D3A 0E00               M     movlw   0x00
000D3C 6E??               M     movwf   regaddress
000D3E 0E00               M     movlw   b'00000000'
000D40 6E??               M     movwf   databyte
000D42 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000D46 0012           01275 return
                      01276         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D48                01277 INIT_USART
                      01278         
000D48 8E94           01279         bsf     TRISC, 7        ; set RC7=USART RC
000D4A 9C94           01280         bcf     TRISC, 6        ; clear RC6=USART TX
                      01281 
000D4C 0E0F           01282         movlw   15              ; baud rate 9600
000D4E 6EAF           01283         movwf   SPBRG
000D50 6AAC           01284         clrf    TXSTA
                      01285         
000D52 6AAB           01286         clrf    RCSTA
000D54 8EAB           01287         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000D56 88AB           01288         bsf     RCSTA,CREN      ; continous receive
                      01289         
000D58 8AAC           01290         bsf     TXSTA, TXEN     ; transmit enabled
000D5A 0012           01291         return
                      01292 
000D5C                01293 DataUSART
000D5C 0E02           01294         movlw   0x02
000D5E EC?? F???      01295         call    USART_WAIT
000D62 0E0D           01296         movlw   0x0D
000D64 EC?? F???      01297         call    USART_WAIT
                      01298         
000D68 6A15           01299         clrf    counter         ; used to cycle through past 9 eeprom logs
000D6A 6A16           01300         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01301         
000D6C                01302 TRANSFER_LOGS
000D6C 0E15           01303         movlw   d'21'           ; logs are 21 bits apart
000D6E 0215           01304         mulwf   counter         ; log number one starts at eeprom address 0
000D70 CFF3 F021      01305         movff   PRODL, L_EE     ; low address now points to count X 21
000D74 6A16           01306         clrf    counter2
                      01307         
000D76                01308 TRANSFER_DATA   
                      01309         READEE  WREG, H_EE, L_EE
000D76 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D7A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D7E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D80 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D82 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D84 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D88 EC?? F???      01310         call    USART_WAIT      ; transfer bit
000D8C 2A21           01311         incf    L_EE
                      01312         
000D8E 2A16           01313         incf    counter2
000D90 0E12           01314         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000D92 6216           01315         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000D94 D???           01316         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01317         
000D96 EC?? F???      01318         call    USART_LINE      ; new line because a e s t h e t i c
                      01319         
000D9A 2A15           01320         incf    counter
000D9C 0E08           01321         movlw   d'8'            ; we save up to the last 9 permanent logs
000D9E 6215           01322         cpfseq  counter
000DA0 D???           01323         bra     TRANSFER_LOGS
                      01324         
000DA2 EC?? F???      01325         call    LCD_L2
                      01326         Display PCComplete
  0000                    M         local   loop
000DA6 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000DA8 6EF8               M         movwf   TBLPTRU
000DAA 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000DAC 6EF7               M         movwf   TBLPTRH
000DAE 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000DB0 6EF6               M         movwf   TBLPTRL
000DB2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000DB4 50F5               M         movf    TABLAT, W
000DB6                    M loop
000DB6 EC?? F???          M         call    WR_DATA         ; write to LCD
000DBA 000B               M         tblrd+*                 ; next row in table
000DBC 50F5               M         movf    TABLAT, W
000DBE E1??               M         bnz     loop
                      01327         Delay50N delayR, 0x28   
  0000                    M         local   loop
000DC0 0E28               M         movlw   0x28
000DC2 6E1A               M         movwf   delayR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000DC4                    M loop
000DC4 EC?? F???          M         call    Delay50ms
000DC8 2E1A               M         decfsz  delayR
000DCA EF?? F???          M         goto    loop
000DCE 0012           01328         return                  ; done transmitting data
                      01329         
000DD0                01330 USART_WAIT
000DD0 6EAD           01331         movwf   TXREG
000DD2 A2AC           01332         btfss   TXSTA, 1
000DD4 EF?? F???      01333         goto    $-2
000DD8 0012           01334         return
                      01335 
000DDA                01336 USART_LINE
000DDA 0E0A           01337         movlw   0x0A
000DDC EC?? F???      01338         call    USART_WAIT
000DE0 0E0D           01339         movlw   0x0D
000DE2 EC?? F???      01340         call    USART_WAIT
000DE6 0012           01341         return
                      01342         
000DE8                01343 Delay5us
000DE8 0E78           01344         movlw   d'120'
000DEA 6E1B           01345         movwf   d5us
                      01346 
000DEC                01347 loop5us
000DEC 2E1B           01348         decfsz  d5us
000DEE EF?? F???      01349         goto    loop5us
000DF2 0000           01350         nop
000DF4 0012           01351         return
                      01352 
000DF6                01353 Delay200us
000DF6 0EA4           01354         movlw   0xA4
000DF8 6E1C           01355         movwf   d200us
                      01356 
000DFA                01357 loop200us
000DFA 2E1C           01358         decfsz  d200us
000DFC EF?? F???      01359         goto    loop200us
000E00 0000           01360         nop
000E02 0012           01361         return
                      01362 
000E04                01363 Delay50ms
000E04 0EF9           01364         movlw   0xF9
000E06 6E1D           01365         movwf   d50ms
                      01366 
000E08                01367 loop50ms
000E08 EC?? F???      01368         call    Delay200us
000E0C 2E1D           01369         decfsz  d50ms
                      01370 
000E0E                01371 Cycles
000E0E EF?? F???      01372         goto    loop50ms
000E12 EC?? F???      01373         call    Delay200us
000E16 0012           01374         return
                      01375 
000E18                01376 WriteEE_RTC
                      01377         WriteEE tens_digit, H_EE, L_EE
000E18 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E1C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E20 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000E24 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E26 D???               M         bra     $-2
                          M 
000E28 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E2A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E2C 84A6               M         bsf     EECON1, WREN        ; enable write
000E2E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E30 98A1               M         bcf     PIR2, EEIF
                          M 
000E32 0E55               M         movlw   0x55
000E34 6EA7               M         movwf   EECON2              ; write 55h
000E36 0EAA               M         movlw   0xaa
000E38 6EA7               M         movwf   EECON2              ; write 0xaa
000E3A 82A6               M         bsf     EECON1, WR          ; begin write
000E3C B2A6               M         btfsc   EECON1, WR
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E3E D???               M         bra     $-2
                          M 
000E40 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E42 94A6               M         bcf     EECON1, WREN        ; disable writes
000E44 2A21           01378         incf    L_EE
                      01379         WriteEE ones_digit, H_EE, L_EE
000E46 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E4A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E4E C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000E52 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E54 D???               M         bra     $-2
                          M 
000E56 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E58 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E5A 84A6               M         bsf     EECON1, WREN        ; enable write
000E5C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E5E 98A1               M         bcf     PIR2, EEIF
                          M 
000E60 0E55               M         movlw   0x55
000E62 6EA7               M         movwf   EECON2              ; write 55h
000E64 0EAA               M         movlw   0xaa
000E66 6EA7               M         movwf   EECON2              ; write 0xaa
000E68 82A6               M         bsf     EECON1, WR          ; begin write
000E6A B2A6               M         btfsc   EECON1, WR
000E6C D???               M         bra     $-2
                          M 
000E6E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E70 94A6               M         bcf     EECON1, WREN        ; disable writes
000E72 2A21           01380         incf    L_EE
000E74 0012           01381         return
                      01382 
000E76                01383 ClearEEPROM_21
000E76 6A20           01384         clrf    H_EE
000E78 6A21           01385         clrf    L_EE
000E7A 681F           01386         setf    clear_EE
000E7C 6A15           01387         clrf    counter
000E7E                01388 ClearNext
                      01389         WriteEE         clear_EE, H_EE, L_EE
000E7E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E82 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E86 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000E8A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E8C D???               M         bra     $-2
                          M 
000E8E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E90 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E92 84A6               M         bsf     EECON1, WREN        ; enable write
000E94 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E96 98A1               M         bcf     PIR2, EEIF
                          M 
000E98 0E55               M         movlw   0x55
000E9A 6EA7               M         movwf   EECON2              ; write 55h
000E9C 0EAA               M         movlw   0xaa
000E9E 6EA7               M         movwf   EECON2              ; write 0xaa
000EA0 82A6               M         bsf     EECON1, WR          ; begin write
000EA2 B2A6               M         btfsc   EECON1, WR
000EA4 D???               M         bra     $-2
                          M 
000EA6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000EA8 94A6               M         bcf     EECON1, WREN        ; disable writes
000EAA 2A15           01390         incf            counter
000EAC 2A21           01391         incf            L_EE
000EAE 0E15           01392         movlw           d'21'
000EB0 6215           01393         cpfseq          counter
000EB2 EF?? F???      01394         goto            ClearNext
000EB6 6A20           01395         clrf            H_EE
000EB8 6A21           01396         clrf            L_EE
000EBA 0012           01397         return
                      01398         
000EBC                01399 READ_KEY
000EBC A281           01400         btfss   PORTB, 1        ; check for keypad interrupt
000EBE EF?? F???      01401         goto    READ_KEY
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EC2 3881           01402         swapf   PORTB, W
000EC4 0B0F           01403         andlw   0x0f
000EC6 6E10           01404         movwf   KEY
000EC8 B281           01405         btfsc   PORTB, 1
000ECA EF?? F???      01406         goto    $-2
000ECE 0012           01407         return
                      01408 
000ED0                01409 DisplayExeTime
                      01410         READEE  REG_EE, H_EE, L_EE
000ED0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000ED4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000ED8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EDA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EDC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EDE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EE2 0EFF           01411         movlw   0xFF
000EE4 6222           01412         cpfseq  REG_EE
000EE6 EF?? F???      01413         goto    NoSkipDispExeTime
                      01414         Display NoData
  0000                    M         local   loop
000EEA 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EEC 6EF8               M         movwf   TBLPTRU
000EEE 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EF0 6EF7               M         movwf   TBLPTRH
000EF2 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EF4 6EF6               M         movwf   TBLPTRL
000EF6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EF8 50F5               M         movf    TABLAT, W
000EFA                    M loop
000EFA EC?? F???          M         call    WR_DATA         ; write to LCD
000EFE 000B               M         tblrd+*                 ; next row in table
000F00 50F5               M         movf    TABLAT, W
000F02 E1??               M         bnz     loop
000F04 0EFF           01415         movlw   0xFF
000F06 6022           01416         cpfslt  REG_EE
000F08 EF?? F???      01417         goto    SkipDispExeTime
000F0C 0012           01418         return
                      01419 
000F0E                01420 NoSkipDispExeTime
                      01421         READEE  WREG, H_EE, L_EE
000F0E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F12 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F16 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F18 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F1A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F1C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F20 EC?? F???      01422         call    WR_DATA
000F24 2A21           01423         incf    L_EE
                      01424         
                      01425         READEE  WREG, H_EE, L_EE
000F26 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F2A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F2E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F30 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F32 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F34 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F38 EC?? F???      01426         call    WR_DATA
000F3C 2A21           01427         incf    L_EE
                      01428         
                      01429         READEE  WREG, H_EE, L_EE
000F3E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F42 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F46 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F48 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F4A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F4C CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F50 EC?? F???      01430         call    WR_DATA
000F54 2A21           01431         incf    L_EE
                      01432 
000F56 0E73           01433         movlw   0x73
000F58 EC?? F???      01434         call    WR_DATA
000F5C EC?? F???      01435         call    LCD_L2
000F60                01436 SkipDispExeTime
000F60 0012           01437         return
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01438 
000F62                01439 DispOpSort
                      01440         READEE  REG_EE, H_EE, L_EE
000F62 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F66 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F6A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F6C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F6E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F70 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F74 0EFF           01441         movlw   0xff
000F76 6222           01442         cpfseq  REG_EE
000F78 EF?? F???      01443         goto    NoSkipDispOpSort
                      01444         Display NoData
  0000                    M         local   loop
000F7C 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F7E 6EF8               M         movwf   TBLPTRU
000F80 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F82 6EF7               M         movwf   TBLPTRH
000F84 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F86 6EF6               M         movwf   TBLPTRL
000F88 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F8A 50F5               M         movf    TABLAT, W
000F8C                    M loop
000F8C EC?? F???          M         call    WR_DATA         ; write to LCD
000F90 000B               M         tblrd+*                 ; next row in table
000F92 50F5               M         movf    TABLAT, W
000F94 E1??               M         bnz     loop
000F96 0EFF           01445         movlw   0xff
000F98 6022           01446         cpfslt  REG_EE
000F9A EF?? F???      01447         goto    SkipDispOpSort
                      01448 
000F9E                01449 NoSkipDispOpSort
000F9E 0E61           01450         movlw   "a"
000FA0 EC?? F???      01451         call    WR_DATA
                      01452         
                      01453         READEE  REG_EE, H_EE, L_EE
000FA4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FA8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FAC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FAE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FB0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FB2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FB6 C022 FFE8      01454         movff   REG_EE, WREG
000FBA EC?? F???      01455         call    WR_DATA
000FBE 2A21           01456         incf    L_EE
                      01457         
000FC0 0E20           01458         movlw   " "
000FC2 EC?? F???      01459         call    WR_DATA
                      01460         
000FC6 0E62           01461         movlw   "b"
000FC8 EC?? F???      01462         call    WR_DATA
                      01463         
                      01464         READEE  REG_EE, H_EE, L_EE
000FCC C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FD0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FD4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FD6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FD8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FDA CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FDE C022 FFE8      01465         movff   REG_EE, WREG
000FE2 EC?? F???      01466         call    WR_DATA
000FE6 2A21           01467         incf    L_EE
                      01468         
000FE8 0E20           01469         movlw   " "
000FEA EC?? F???      01470         call    WR_DATA
                      01471         
000FEE 0E63           01472         movlw   "c"
000FF0 EC?? F???      01473         call    WR_DATA
                      01474         
                      01475         READEE  REG_EE, H_EE, L_EE
000FF4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FF8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FFC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FFE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001000 80A6               M         bsf     EECON1, RD          ; read EEPROM
001002 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001006 C022 FFE8      01476         movff   REG_EE, WREG
00100A EC?? F???      01477         call    WR_DATA
00100E 2A21           01478         incf    L_EE
                      01479         
001010 0E20           01480         movlw   " "
001012 EC?? F???      01481         call    WR_DATA
                      01482         
001016 0E64           01483         movlw   "d"
001018 EC?? F???      01484         call    WR_DATA
                      01485         
                      01486         READEE  REG_EE, H_EE, L_EE
00101C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001020 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001024 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001026 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001028 80A6               M         bsf     EECON1, RD          ; read EEPROM
00102A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00102E C022 FFE8      01487         movff   REG_EE, WREG
001032 EC?? F???      01488         call    WR_DATA
001036 2A21           01489         incf    L_EE
                      01490 
001038                01491 SkipDispOpSort
001038 0012           01492         return
                      01493         
00103A                01494 DispOpRTC
                      01495         READEE  REG_EE, H_EE, L_EE
00103A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00103E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001042 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001044 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001046 80A6               M         bsf     EECON1, RD          ; read EEPROM
001048 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00104C 0EFF           01496         movlw   0xff
00104E 6222           01497         cpfseq  REG_EE
001050 EF?? F???      01498         goto    NoSkipDispOpRTC
                      01499         Display NoData
  0000                    M         local   loop
001054 0E??               M         movlw   upper NoData    ; Move Table<20:16>
001056 6EF8               M         movwf   TBLPTRU
001058 0E??               M         movlw   high NoData     ; Move Table<15:8>
00105A 6EF7               M         movwf   TBLPTRH
00105C 0E??               M         movlw   low NoData      ; Move Table<7:0>
00105E 6EF6               M         movwf   TBLPTRL
001060 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
001062 50F5               M         movf    TABLAT, W
001064                    M loop
001064 EC?? F???          M         call    WR_DATA         ; write to LCD
001068 000B               M         tblrd+*                 ; next row in table
00106A 50F5               M         movf    TABLAT, W
00106C E1??               M         bnz     loop
00106E 0EFF           01500         movlw   0xff
001070 6022           01501         cpfslt  REG_EE
001072 EF?? F???      01502         goto    SkipDispOpRTC
                      01503 
001076                01504 NoSkipDispOpRTC
                      01505         READEE  REG_EE, H_EE, L_EE
001076 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
00107A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00107E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001080 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001082 80A6               M         bsf     EECON1, RD          ; read EEPROM
001084 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001088 C022 FFE8      01506         movff   REG_EE, WREG
00108C EC?? F???      01507         call    WR_DATA
001090 2A21           01508         incf    L_EE
                      01509         
                      01510         READEE  REG_EE, H_EE, L_EE
001092 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001096 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00109A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00109C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00109E 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   3-10-2017  21:26:01         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010A0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010A4 C022 FFE8      01511         movff   REG_EE, WREG
0010A8 EC?? F???      01512         call    WR_DATA
0010AC 2A21           01513         incf    L_EE
                      01514 
0010AE 0E68           01515         movlw   "h"
0010B0 EC?? F???      01516         call    WR_DATA
                      01517         
0010B4 EC?? F???      01518         call    DispOpRTC_Helper
                      01519         
0010B8 0E20           01520         movlw   " "
0010BA EC?? F???      01521         call    WR_DATA
                      01522         
0010BE EC?? F???      01523         call    DispOpRTC_Helper
0010C2 0E2F           01524         movlw   "/"
0010C4 EC?? F???      01525         call    WR_DATA
                      01526 
0010C8 EC?? F???      01527         call    DispOpRTC_Helper
0010CC 0E2F           01528         movlw   "/"
0010CE EC?? F???      01529         call    WR_DATA
0010D2 EC?? F???      01530         call    DispOpRTC_Helper
0010D6                01531 SkipDispOpRTC
0010D6 0012           01532                 return
0010D8                01533 DispOpRTC_Helper
                      01534         READEE          REG_EE, H_EE, L_EE
0010D8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010DC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010E0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010E2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010E4 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010E6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010EA C022 FFE8      01535         movff           REG_EE, WREG
0010EE EC?? F???      01536         call            WR_DATA
0010F2 2A21           01537         incf            L_EE
                      01538         READEE          REG_EE, H_EE, L_EE
0010F4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010F8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010FC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010FE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001100 80A6               M         bsf     EECON1, RD          ; read EEPROM
001102 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001106 C022 FFE8      01539         movff           REG_EE, WREG
00110A EC?? F???      01540         call            WR_DATA
00110E 2A21           01541         incf            L_EE
001110 0012           01542         return
Warning[205]: Found directive in column 1. (end)
                      01543 end

Errors   :     0
Warnings :    38 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

