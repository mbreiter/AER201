MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movf    datachar,w
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   datachar, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   datachar, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   datachar, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   datachar, red+1
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   datachar, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   datachar, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   datachar, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   datachar, blue+1
                      00102     endm
                      00103     
                      00019 
                      00020     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00021     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00022     CONFIG WDT = OFF, WDTPS = 32768
                      00023     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00024     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00025     CONFIG DEBUG = OFF
                      00026     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00027     CONFIG CPB = OFF, CPD = OFF
                      00028     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00029     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00030     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00031     CONFIG EBTRB = OFF
                      00032 
                      00033 ;*******************************************************************************
                      00034 ; variable and constants
                      00035 ;*******************************************************************************
                      00036     CODE
                      00037             
                      00038     cblock 0x00
  00000000            00039         key1
  00000001            00040         key2
  00000002            00041         key3
  00000003            00042         keyA
  00000004            00043         key4
  00000005            00044         key5
  00000006            00045         key6
  00000007            00046         keyB
  00000008            00047         key7
  00000009            00048         key8
  0000000A            00049         key9
  0000000B            00050         keyC
  0000000C            00051         keyS
  0000000D            00052         key0
  0000000E            00053         keyH
  0000000F            00054         keyD
  00000010            00055         KEY
  00000011            00056         temp_KEY
  00000012            00057         KEY_ISR
  00000013            00058         temp_S  
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000014            00059         temp_W
  00000015            00060         counter
  00000016            00061         counter2
  00000017            00062         temp
  00000018            00063         OP_sec
  00000019            00064         OP_INT
  0000001A            00065         temp_ISR
  0000001B            00066         delayR
  0000001C            00067         d5us
  0000001D            00068         d200us
  0000001E            00069         d50ms
  0000001F            00070         inExecution
  00000020            00071         clear_EE
  00000021            00072         H_EE    
  00000022            00073         L_EE    
  00000023            00074         REG_EE  
  00000024            00075         tempH_EE
  00000025            00076         tempL_EE
  00000026            00077         tempL_EEC
  00000027            00078         MAX_EE   
  00000028            00079         READ_EE
  00000029            00080         last_log
  0000002A            00081         startHt
  0000002B            00082         startHo
  0000002C            00083         startMt
  0000002D            00084         startMo
  0000002E            00085         endHt
  0000002F            00086         endHo
  00000030            00087         endMt
  00000031            00088         endMo
  00000032            00089         LED_Count
  00000033            00090         SkipCount
  00000034            00091         exe_sec
  00000035            00092         exe_int
  00000036            00093         timer_H
  00000037            00094         timer_L
  00000038            00095         convert_buffer
  00000039            00096         transferring
  0000003A            00097         PC_PCL
  0000003B            00098         PC_PCLATH
  0000003C            00099         PC_PCLATU
  0000003D            00100         TIMCNT
  0000003E            00101         CPCNT
  0000003F            00102         TDATA
  00000040            00103         CLEAR:2
  00000042            00104         RED:2
  00000044            00105         GREEN:2
  00000046            00106         BLUE:2
  00000048            00107         temp_colour:2   
                      00108     endc
                      00109     
                      00110 ;*******************************************************************************
                      00111 ; tables
                      00112 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00113     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00114     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00115     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00116     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00117     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00118     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00119     LogInfo2    db          "Back <0>", 0
       3E30 0000 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00120     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00121     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00122     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00123     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00124     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00125     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00126     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00127     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Op_Time)
00009E 6954 656D 203A 00128     Op_Time     db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00129     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00130     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00131     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00132     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00133         
                      00134 ;*******************************************************************************
                      00135 ; macros
                      00136 ;*******************************************************************************
                      00137 
                      00138 TransferTable macro table
                      00139         local loop
                      00140         
                      00141         movlw   upper table
                      00142         movwf   TBLPTRU
                      00143         movlw   high table
                      00144         movwf   TBLPTRH
                      00145         movlw   low table
                      00146         movwf   TBLPTRL
                      00147         tblrd*
                      00148         movf    TABLAT, W
                      00149 loop
                      00150         call    USART_WAIT
                      00151         tblrd+*
                      00152         movf    TABLAT, W
                      00153         bnz     loop
                      00154         endm
                      00155         
                      00156 ConfigLCD   macro
                      00157           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00158           call      WR_INS
                      00159 
                      00160           movlw     b'00001100'    ; display on/off
                      00161           call      WR_INS
                      00162          ; movlw     B'00000110'    ; Entry mode
                      00163          ; call      WR_INS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164           movlw     b'00000001'    ; Clear ram
                      00165           call      WR_INS
                      00166           endm
                      00167         
                      00168 movMSB  macro   port
                      00169         andlw   0xF0
                      00170         iorwf   port, f
                      00171         iorlw   0x0F
                      00172         andwf   port, f
                      00173         endm
                      00174 
                      00175 Delay50N macro count, N
                      00176         local   loop
                      00177         movlw   N
                      00178         movwf   count
                      00179 
                      00180 loop
                      00181         call    Delay50ms
                      00182         decfsz  count
                      00183         goto    loop
                      00184         endm
                      00185 
                      00186 Display macro   Message
                      00187         local   loop
                      00188         movlw   upper Message   ; Move Table<20:16>
                      00189         movwf   TBLPTRU
                      00190         movlw   high Message    ; Move Table<15:8>
                      00191         movwf   TBLPTRH
                      00192         movlw   low Message     ; Move Table<7:0>
                      00193         movwf   TBLPTRL
                      00194         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00195         movf    TABLAT, W
                      00196 loop
                      00197         call    WR_DATA         ; write to LCD
                      00198         tblrd+*                 ; next row in table
                      00199         movf    TABLAT, W
                      00200         bnz     loop
                      00201         endm
                      00202 
                      00203 DisplayLog  macro   addrH, addrL
                      00204             local   Again, Finish
                      00205             
                      00206             clrf    SkipCount
                      00207             clrf    MAX_EE
                      00208 
                      00209             ; Check if there is No Data first
                      00210             READEE      REG_EE, addrH, addrL
                      00211             movlw       0xFF
                      00212             cpfseq      REG_EE
                      00213             goto        Again
                      00214             Display     NoData
                      00215             goto        Finish
                      00216 Again
                      00217             ; Put a space every 3 Writes
                      00218             movlw       d'3'
                      00219             cpfslt      SkipCount
                      00220             cpfslt      MAX_EE
                      00221             goto        Finish
                      00222 
                      00223             ; read EEPROM
                      00224             READEE      REG_EE, addrH, addrL
                      00225             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00226             goto        Finish
                      00227 Finish
                      00228             endm
                      00229             
                      00230 ;TransferLog macro   addrH, addrL
                      00231         
                      00232 
                      00233 incf_BCD    macro   BCD
                      00234         local ones, endBCD
                      00235         movff   BCD, temp
                      00236         
                      00237         ;process ones digit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00238         movlw   0x0F
                      00239         andwf   temp
                      00240         movlw   d'9'
                      00241         
                      00242         ;skip if ones digit is 9
                      00243         cpfseq  temp
                      00244         goto    ones
                      00245         
                      00246         movlw   b'00010000'
                      00247         addwf   BCD
                      00248         movlw   0x0F
                      00249         andwf   BCD
                      00250         movlw   0xA0
                      00251         cpfslt  BCD
                      00252         
                      00253         clrf    BCD
                      00254         goto    endBCD
                      00255         
                      00256 ones
                      00257         incf    BCD
                      00258         goto    endBCD
                      00259 endBCD
                      00260         nop
                      00261         endm
                      00262         
                      00263 SUB16   macro   x, y        ; does not modify x nor y
                      00264         local RESULTS
                      00265         movf    y+1, WREG   ; move high y into working register
                      00266         subwf   x+1, 0      ; do subtraction x - w => w
                      00267         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00268         goto    RESULTS     ; if it is, need to check lower bytes
                      00269         
                      00270         movf    y, WREG
                      00271         subwf   x, 0    
                      00272 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00273         endm
                      00274 
                      00275 WriteRTC    macro
                      00276         movf    tens_digit, W
                      00277         call    WR_DATA
                      00278         movf    ones_digit, W
                      00279         call    WR_DATA
                      00280         endm
                      00281 
                      00282 WriteEE macro   word, addH, addL
                      00283         movff   addH, EEADRH    ; High address
                      00284         movff   addL, EEADRH    ; Low address
                      00285         movff   word, EEDATA    ; set word
                      00286 
                      00287         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00288         bra     $-2
                      00289 
                      00290         bcf     EECON1, EEPGD   ; Point to data memory
                      00291         bcf     EECON1, CFGS    ; Access EEPROM
                      00292         bsf     EECON1, WREN    ; enable write
                      00293         bcf     EECON1, GIE         ; disable interrupts during write
                      00294         bcf     PIR2, EEIF
                      00295 
                      00296         movlw   0x55
                      00297         movwf   EECON2      ; write 55h
                      00298         movlw   0xAA
                      00299         movwf   EECON2      ; write 0xAA
                      00300         bsf     EECON1, WR          ; begin write
                      00301         btfsc   EECON1, WR
                      00302         bra     $-2
                      00303 
                      00304         bsf     EECON1, GIE         ; enable interrupts after write
                      00305         bcf     EECON1, WREN        ; disable writes
                      00306         endm
                      00307 
                      00308 READEE  macro   file, addH, addL
                      00309         movff   addH, EEADRH        ; read to high
                      00310         movff   addL, EEADR         ; read to low
                      00311         bcf     EECON1, EEPGD       ; point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312         bcf     EECON1, CFGS        ; access to EEPROM
                      00313         bsf     EECON1, RD          ; read EEPROM
                      00314         movff   EEDATA, file        ; put data into file
                      00315         endm
                      00316 
                      00317 ChangeMode  macro   ModeId, NextMode
                      00318         local Next, Exit
                      00319 
                      00320         movlw   ModeId              ; poll for mode
                      00321         cpfseq  KEY                 ; check this against key press
                      00322         goto    Exit
                      00323 
                      00324 Next
                      00325         clrf    LATA                ; clear pins before proceeding
                      00326         clrf    LATB
                      00327         clrf    LATC
                      00328         clrf    LATD
                      00329         goto    NextMode
                      00330 
                      00331 Exit
                      00332         nop
                      00333         endm
                      00334 
                      00335 saveContext macro
                      00336     movff   STATUS, temp_S          ; save STATUS first
                      00337     movwf   temp_W                  ; save W
                      00338     endm
                      00339 
                      00340 restoreContext macro
                      00341     swapf   temp_W, W               ; restore W first
                      00342     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00343     endm
                      00344 ;*******************************************************************************
                      00345 ; reset vector and isrs
                      00346 ;*******************************************************************************
                      00347         ORG     0x000               ; processor reset vector
000000 EF?? F???      00348         goto    INIT                ; go to beginning of program
                      00349 
                      00350         ORG     0x008
000008 EF?? F???      00351         goto    ISR_HIGH
                      00352 
                      00353         ORG     0x018
000018 EF?? F???      00354         goto    ISR_LOW
                      00355 
00001C                00356 ISR_HIGH
                      00357         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00358 
                      00359         ;reset timer
000022 0E0B           00360         movlw   0xb
000024 6ED7           00361         movwf   TMR0H
000026 0EDC           00362         movlw   0xdc
000028 6ED6           00363         movwf   TMR0L
                      00364         
                      00365         ;call   DISPLAY_RTC
                      00366         
                      00367         ;timer interrupt
00002A A4F2           00368         btfss   INTCON, TMR0IF
00002C EF?? F???      00369         goto    END_ISR_HIGH
                      00370         
                      00371         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000030 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000034 0E0F               M         movlw   0x0F
000036 1617               M         andwf   temp
000038 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00003A 6217               M         cpfseq  temp
00003C EF?? F???          M         goto    ones
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000040 0E10               M         movlw   b'00010000'
000042 2619               M         addwf   OP_INT
000044 0E0F               M         movlw   0x0F
000046 1619               M         andwf   OP_INT
000048 0EA0               M         movlw   0xA0
00004A 6019               M         cpfslt  OP_INT
                          M         
00004C 6A19               M         clrf    OP_INT
00004E EF?? F???          M         goto    endBCD
                          M         
000052                    M ones
000052 2A19               M         incf    OP_INT
000054 EF?? F???          M         goto    endBCD
000058                    M endBCD
000058 0000               M         nop
00005A 0E00           00372         movlw   d'0'
00005C 6219           00373         cpfseq  OP_INT
00005E EF?? F???      00374         goto    END_ISR_HIGH
                      00375         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
000062 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000066 0E0F               M         movlw   0x0F
000068 1617               M         andwf   temp
00006A 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00006C 6217               M         cpfseq  temp
00006E EF?? F???          M         goto    ones
                          M         
000072 0E10               M         movlw   b'00010000'
000074 2618               M         addwf   OP_sec
000076 0E0F               M         movlw   0x0F
000078 1618               M         andwf   OP_sec
00007A 0EA0               M         movlw   0xA0
00007C 6018               M         cpfslt  OP_sec
                          M         
00007E 6A18               M         clrf    OP_sec
000080 EF?? F???          M         goto    endBCD
                          M         
000084                    M ones
000084 2A18               M         incf    OP_sec
000086 EF?? F???          M         goto    endBCD
00008A                    M endBCD
00008A 0000               M         nop
                      00376 
00008C                00377 END_ISR_HIGH
00008C 94F2           00378         bcf     INTCON, TMR0IF
                      00379         restoreContext
00008E 3814               M     swapf   temp_W, W               ; restore W first
000090 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000094 0010           00380         retfie
                      00381 
000096                00382 ISR_LOW
                      00383         saveContext
000096 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00009A 6E14               M     movwf   temp_W                  ; save W
                      00384         ; KEYPAD INTERRUPT
00009C A0F0           00385         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
00009E EF?? F???      00386         goto            END_ISR_LOW
                      00387 
                      00388         ;Check operation status
                      00389 ;       movlw           0xFF                                    ; If in operation, skip return
                      00390 ;       cpfseq          InExecution
                      00391 ;       goto            END_ISR_LOW
                      00392 
                      00393         ; Process KEY
0000A2 3881           00394         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000A4 0B0F           00395         andlw           0x0F
0000A6 6E12           00396         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00397 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00398 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000A8 EF?? F???      00399         goto            END_ISR_LOW
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00400 
                      00401         ; Reset program counter
0000AC 6AFF           00402         clrf            TOSU
0000AE 6AFE           00403         clrf            TOSH
0000B0 6AFD           00404         clrf            TOSL
                      00405 
0000B2                00406 END_ISR_LOW
0000B2 90F0           00407         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00408         restoreContext
0000B4 3814               M     swapf   temp_W, W               ; restore W first
0000B6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00409         
0000BA 6E14           00410         movwf   temp_W              ; save current W
0000BC CFD8 F013      00411         movff   STATUS, temp_S      ; save status
                      00412 
                      00413         ; ISR_Low routines
0000C0 C013 FFD8      00414         movff   temp_S, STATUS      ; retreive status
0000C4 3A14           00415         swapf   temp_W, f
0000C6 3814           00416         swapf   temp_W, w           ; restore W
0000C8 0010           00417         retfie
                      00418 
                      00419 ;*******************************************************************************
                      00420 ; main
                      00421 ;*******************************************************************************
0000CA                00422 INIT
                      00423         ; i/o
0000CA 0EFF           00424         movlw   b'11111111'
0000CC 6E92           00425         movwf   TRISA
0000CE 0EFF           00426         movlw   b'11111111'
0000D0 6E93           00427         movwf   TRISB               ; keypad
0000D2 0E00           00428         movlw   b'00000000'
0000D4 6E94           00429         movwf   TRISC
0000D6 0E00           00430         movlw   b'00000000'
0000D8 6E95           00431         movwf   TRISD
0000DA 0E07           00432         movlw   b'00000111'
0000DC 6E96           00433         movwf   TRISE
                      00434 
                      00435         ; analog/digital pins
0000DE 0E0F           00436         movlw   b'00001111'     ; Set all AN pins to Digital
0000E0 6EC1           00437         movwf   ADCON1
                      00438 
                      00439         ; clear ports
0000E2 6A89           00440         clrf    LATA
0000E4 6A8A           00441         clrf    LATB
                      00442 ;       bcf     TRISC, SCL
                      00443 ;       bcf     TRISC, SDA
0000E6 6A8B           00444         clrf    LATC
0000E8 6A8C           00445         clrf    LATD
0000EA 6A8D           00446         clrf    LATE
                      00447         
0000EC 0E00           00448         movlw   b'00000000'
0000EE 6EC2           00449         movwf   ADCON0
0000F0 0EFF           00450         movlw   b'11111111'
0000F2 6EC1           00451         movwf   ADCON1
                      00452         
                      00453         ; initializations
                      00454         
0000F4 EC?? F???      00455         call    InitLCD
                      00456         ConfigLCD
0000F8 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
0000FA EC?? F???          M           call      WR_INS
                          M 
0000FE 0E0C               M           movlw     b'00001100'    ; display on/off
000100 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000104 0E01               M           movlw     b'00000001'    ; Clear ram
000106 EC?? F???          M           call      WR_INS
                      00457         
00010A EC?? F???      00458         call    RTC_INIT
00010E EC?? F???      00459         call    Delay50ms
                      00460         
                      00461         COLOUR_INIT
                          M         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000112 0E00               M         movlw   0x00
000114 6E??               M         movwf   regaddress
000116 0E01               M         movlw   0x01
000118 6E??               M         movwf   databyte
00011A EC?? F???          M         call    WRITE_COLOUR_I2C
00011E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
000122 0E00               M         movlw   0x00
000124 6E??               M         movwf   regaddress
000126 0E03               M         movlw   0x03
000128 6E??               M         movwf   databyte
00012A EC?? F???          M         call    WRITE_COLOUR_I2C
00012E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
000132 0E01               M         movlw   0x01
000134 6E??               M         movwf   regaddress
000136 0ED6               M         movlw   0xd6
000138 6E??               M         movwf   databyte
00013A EC?? F???          M         call    WRITE_COLOUR_I2C
00013E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
000142 0E0F               M         movlw   0x0f
000144 6E??               M         movwf   regaddress
000146 0E03               M         movlw   0x03
000148 6E??               M         movwf   databyte
00014A EC?? F???          M         call    WRITE_COLOUR_I2C
00014E EC?? F???          M         call    delay5ms
                      00462         
000152 EC?? F???      00463         call    INIT_USART
                      00464 
                      00465         ; interrupts
000156 6AD0           00466         clrf    RCON
000158 6AF2           00467         clrf    INTCON
00015A 6AF1           00468         clrf    INTCON2
00015C 6AF0           00469         clrf    INTCON3
00015E 8ED0           00470         bsf     RCON, IPEN          ; priority mode
000160 8EF2           00471         bsf     INTCON, GIEH        ; permit global interrupts
000162 8CF2           00472         bsf     INTCON, GIEL
000164 8AF1           00473         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000166 8AF2           00474         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000168 84F2           00475         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
00016A 84F1           00476         bsf     INTCON2, TMR0IP     ; set to high priority
00016C 86F0           00477         bsf     INTCON3, INT1IE
00016E 9CF0           00478         bcf     INTCON3, INT1IP
                      00479         
                      00480         ; setting up timer to sychronize with 1 second clock intervals
000170 9CD5           00481         bcf     T0CON, T08BIT
000172 9AD5           00482         bcf     T0CON, T0CS
000174 96D5           00483         bcf     T0CON, PSA
000176 84D5           00484         bsf     T0CON, T0PS2
000178 92D5           00485         bcf     T0CON, T0PS1
00017A 90D5           00486         bcf     T0CON, T0PS0
                      00487 
00017C 6A21           00488         clrf    H_EE
00017E 6A22           00489         clrf    L_EE
000180 6A??           00490         clrf    tens_digit
000182 6A??           00491         clrf    ones_digit
000184 6A40           00492         clrf    CLEAR
000186 6A44           00493         clrf    GREEN
000188 6A42           00494         clrf    RED
00018A 6A46           00495         clrf    BLUE
                      00496         
00018C 0EF2           00497         movlw     b'11110010'    ; Set required keypad inputs
00018E 6E93           00498         movwf     TRISB
                      00499         
                      00500         Display Welcome
  0000                    M         local   loop
000190 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
000192 6EF8               M         movwf   TBLPTRU
000194 0E??               M         movlw   high Welcome    ; Move Table<15:8>
000196 6EF7               M         movwf   TBLPTRH
000198 0E??               M         movlw   low Welcome     ; Move Table<7:0>
00019A 6EF6               M         movwf   TBLPTRL
00019C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00019E 50F5               M         movf    TABLAT, W
0001A0                    M loop
0001A0 EC?? F???          M         call    WR_DATA         ; write to LCD
0001A4 000B               M         tblrd+*                 ; next row in table
0001A6 50F5               M         movf    TABLAT, W
0001A8 E1??               M         bnz     loop
0001AA EC?? F???      00501         call LCD_L2
                      00502         Display Team
  0000                    M         local   loop
0001AE 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001B0 6EF8               M         movwf   TBLPTRU
0001B2 0E??               M         movlw   high Team       ; Move Table<15:8>
0001B4 6EF7               M         movwf   TBLPTRH
0001B6 0E??               M         movlw   low Team        ; Move Table<7:0>
0001B8 6EF6               M         movwf   TBLPTRL
0001BA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001BC 50F5               M         movf    TABLAT, W
0001BE                    M loop
0001BE EC?? F???          M         call    WR_DATA         ; write to LCD
0001C2 000B               M         tblrd+*                 ; next row in table
0001C4 50F5               M         movf    TABLAT, W
0001C6 E1??               M         bnz     loop
                      00503         
                      00504         Delay50N delayR, 0x14
  0000                    M         local   loop
0001C8 0E14               M         movlw   0x14
0001CA 6E1B               M         movwf   delayR
                          M 
0001CC                    M loop
0001CC EC?? F???          M         call    Delay50ms
0001D0 2E1B               M         decfsz  delayR
0001D2 EF?? F???          M         goto    loop
                      00505 
                      00506 ;*******************************************************************************
                      00507 ; standby mode
                      00508 ;*******************************************************************************
0001D6                00509 STANDBY
0001D6 EC?? F???      00510         call    ClrLCD
                      00511         Display StandBy
  0000                    M         local   loop
0001DA 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
0001DC 6EF8               M         movwf   TBLPTRU
0001DE 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0001E0 6EF7               M         movwf   TBLPTRH
0001E2 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0001E4 6EF6               M         movwf   TBLPTRL
0001E6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001E8 50F5               M         movf    TABLAT, W
0001EA                    M loop
0001EA EC?? F???          M         call    WR_DATA         ; write to LCD
0001EE 000B               M         tblrd+*                 ; next row in table
0001F0 50F5               M         movf    TABLAT, W
0001F2 E1??               M         bnz     loop
                      00512 
0001F4                00513 HOLD_STANDBY
0001F4 EC?? F???      00514         call    READ_KEY_TIME
                      00515         ChangeMode key5, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
0001F8 0E05               M         movlw   key5                ; poll for mode
0001FA 6210               M         cpfseq  KEY                 ; check this against key press
0001FC EF?? F???          M         goto    Exit
                          M 
000200                    M Next
000200 6A89               M         clrf    LATA                ; clear pins before proceeding
000202 6A8A               M         clrf    LATB
000204 6A8B               M         clrf    LATC
000206 6A8C               M         clrf    LATD
000208 EF?? F???          M         goto    COLOUR_TEST
                          M 
00020C                    M Exit
00020C 0000               M         nop
                      00516         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00020E 0E03               M         movlw   keyA                ; poll for mode
000210 6210               M         cpfseq  KEY                 ; check this against key press
000212 EF?? F???          M         goto    Exit
                          M 
000216                    M Next
000216 6A89               M         clrf    LATA                ; clear pins before proceeding
000218 6A8A               M         clrf    LATB
00021A 6A8B               M         clrf    LATC
00021C 6A8C               M         clrf    LATD
00021E EF?? F???          M         goto    EXECUTION
                          M 
000222                    M Exit
000222 0000               M         nop
                      00517         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
000224 0E07               M         movlw   keyB                ; poll for mode
000226 6210               M         cpfseq  KEY                 ; check this against key press
000228 EF?? F???          M         goto    Exit
                          M 
00022C                    M Next
00022C 6A89               M         clrf    LATA                ; clear pins before proceeding
00022E 6A8A               M         clrf    LATB
000230 6A8B               M         clrf    LATC
000232 6A8C               M         clrf    LATD
000234 EF?? F???          M         goto    LOG
                          M 
000238                    M Exit
000238 0000               M         nop
                      00518         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
00023A 0E0B               M         movlw   keyC                ; poll for mode
00023C 6210               M         cpfseq  KEY                 ; check this against key press
00023E EF?? F???          M         goto    Exit
                          M 
000242                    M Next
000242 6A89               M         clrf    LATA                ; clear pins before proceeding
000244 6A8A               M         clrf    LATB
000246 6A8B               M         clrf    LATC
000248 6A8C               M         clrf    LATD
00024A EF?? F???          M         goto    PERM_LOG
                          M 
00024E                    M Exit
00024E 0000               M         nop
                      00519         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000250 0E0F               M         movlw   keyD                ; poll for mode
000252 6210               M         cpfseq  KEY                 ; check this against key press
000254 EF?? F???          M         goto    Exit
                          M 
000258                    M Next
000258 6A89               M         clrf    LATA                ; clear pins before proceeding
00025A 6A8A               M         clrf    LATB
00025C 6A8B               M         clrf    LATC
00025E 6A8C               M         clrf    LATD
000260 EF?? F???          M         goto    PC_MODE
                          M 
000264                    M Exit
000264 0000               M         nop
000266 D???           00520         bra     HOLD_STANDBY
                      00521 
                      00522 ;*******************************************************************************
                      00523 ; execution mode
                      00524 ;*******************************************************************************
                      00525 
000268                00526 CHECK_CLEAR
                      00527         SUB16   CLEAR, RED                  ; check first against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000268 5043               M         movf    RED+1, WREG ; move high y into working register
00026A 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00026C B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00026E EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000272 5042               M         movf    RED, WREG
000274 5C40               M         subwf   CLEAR, 0 
000276                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000276 A0D8           00528         btfss   STATUS, C
000278 0012           00529         return                              ; RED > CLEAR
                      00530         
                      00531         SUB16   CLEAR, GREEN                ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00027A 5045               M         movf    GREEN+1, WREG ; move high y into working register
00027C 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
00027E B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000280 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000284 5044               M         movf    GREEN, WREG
000286 5C40               M         subwf   CLEAR, 0 
000288                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000288 A0D8           00532         btfss   STATUS, C
00028A 0012           00533         return                              ; GREEN > CLEAR
                      00534         
                      00535         SUB16   CLEAR, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00028C 5047               M         movf    BLUE+1, WREG ; move high y into working register
00028E 5C41               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
000290 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000292 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000296 5046               M         movf    BLUE, WREG
000298 5C40               M         subwf   CLEAR, 0 
00029A                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00029A A0D8           00536         btfss   STATUS, C
00029C 0012           00537         return                              ; BLUE > CLEAR
                      00538         
00029E 0E63           00539         movlw   'c'                         ; CLEAR > everything else
0002A0 EC?? F???      00540         call    WR_DATA
0002A4 D???           00541         bra     LOOPING
                      00542 
0002A6                00543 CHECK_RED
                      00544         SUB16   RED, CLEAR                  ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002A6 5041               M         movf    CLEAR+1, WREG ; move high y into working register
0002A8 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002AA B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002AC EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002B0 5040               M         movf    CLEAR, WREG
0002B2 5C42               M         subwf   RED, 0  
0002B4                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002B4 A0D8           00545         btfss   STATUS, C
0002B6 0012           00546         return                              ; CLEAR > RED
                      00547         
                      00548         SUB16   RED, GREEN                  ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002B8 5045               M         movf    GREEN+1, WREG ; move high y into working register
0002BA 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002BC B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002BE EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002C2 5044               M         movf    GREEN, WREG
0002C4 5C42               M         subwf   RED, 0  
0002C6                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002C6 A0D8           00549         btfss   STATUS, C
0002C8 0012           00550         return                              ; GREEN > RED
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00551         
                      00552         SUB16   RED, BLUE                   ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002CA 5047               M         movf    BLUE+1, WREG ; move high y into working register
0002CC 5C43               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002CE B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002D0 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002D4 5046               M         movf    BLUE, WREG
0002D6 5C42               M         subwf   RED, 0  
0002D8                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002D8 A0D8           00553         btfss   STATUS, C
0002DA 0012           00554         return                              ; BLUE > RED
                      00555         
0002DC 0E72           00556         movlw   'r'                         ; RED > everything else
0002DE EC?? F???      00557         call    WR_DATA
0002E2 D???           00558         bra     LOOPING
                      00559         
0002E4                00560 CHECK_GREEN
                      00561         SUB16   GREEN, CLEAR                ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002E4 5041               M         movf    CLEAR+1, WREG ; move high y into working register
0002E6 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
0002E8 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002EA EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002EE 5040               M         movf    CLEAR, WREG
0002F0 5C44               M         subwf   GREEN, 0 
0002F2                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002F2 A0D8           00562         btfss   STATUS, C
0002F4 0012           00563         return                              ; CLEAR > GREEN
                      00564         
                      00565         SUB16   GREEN, RED                  ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002F6 5043               M         movf    RED+1, WREG ; move high y into working register
0002F8 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
0002FA B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002FC EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000300 5042               M         movf    RED, WREG
000302 5C44               M         subwf   GREEN, 0 
000304                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000304 A0D8           00566         btfss   STATUS, C
000306 0012           00567         return                              ; RED > GREEN
                      00568         
                      00569         SUB16   GREEN, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000308 5047               M         movf    BLUE+1, WREG ; move high y into working register
00030A 5C45               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
00030C B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00030E EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000312 5046               M         movf    BLUE, WREG
000314 5C44               M         subwf   GREEN, 0 
000316                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000316 A0D8           00570         btfss   STATUS, C
000318 0012           00571         return                              ; BLUE > GREEN
                      00572         
00031A 0E67           00573         movlw   'g'                         ; GREEN > everything else
00031C EC?? F???      00574         call    WR_DATA
000320 D???           00575         bra     LOOPING
                      00576         
000322                00577 CHECK_BLUE
                      00578         SUB16   BLUE, CLEAR                 ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000322 5041               M         movf    CLEAR+1, WREG ; move high y into working register
000324 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000326 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000328 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00032C 5040               M         movf    CLEAR, WREG
00032E 5C46               M         subwf   BLUE, 0 
000330                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000330 A0D8           00579         btfss   STATUS, C
000332 0012           00580         return                              ; CLEAR > BLUE
                      00581         
                      00582         SUB16   BLUE, RED                   ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000334 5043               M         movf    RED+1, WREG ; move high y into working register
000336 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000338 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00033A EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00033E 5042               M         movf    RED, WREG
000340 5C46               M         subwf   BLUE, 0 
000342                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000342 A0D8           00583         btfss   STATUS, C
000344 0012           00584         return                              ; RED > BLUE
                      00585 
                      00586         SUB16   BLUE, GREEN                 ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000346 5045               M         movf    GREEN+1, WREG ; move high y into working register
000348 5C47               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
00034A B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
00034C EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000350 5044               M         movf    GREEN, WREG
000352 5C46               M         subwf   BLUE, 0 
000354                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000354 A0D8           00587         btfss   STATUS, C
000356 0012           00588         return                              ; GREEN > CLEAR
                      00589         
000358 0E62           00590         movlw   'b'                         ; BLUE > everything else
00035A EC?? F???      00591         call    WR_DATA
00035E 0012           00592         return
                      00593         
000360                00594 COLOUR_TEST
                      00595 
000360                00596 LOOPING
                      00597         Delay50N delayR, 0x28
  0000                    M         local   loop
000360 0E28               M         movlw   0x28
000362 6E1B               M         movwf   delayR
                          M 
000364                    M loop
000364 EC?? F???          M         call    Delay50ms
000368 2E1B               M         decfsz  delayR
00036A EF?? F???          M         goto    loop
00036E EC?? F???      00598         call    ClrLCD
                      00599         COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
000372 EC?? F???          M         call    delay5ms
                          M         
                          M         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
000376 0E14               M         movlw   0x14
000378 6E??               M         movwf   regaddress
00037A EC?? F???          M         call    READ_COLOUR_I2C
00037E C??? F040          M         movff   datachar, CLEAR+0
                          M         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
000382 0E15               M         movlw   0x15
000384 6E??               M         movwf   regaddress
000386 EC?? F???          M         call    READ_COLOUR_I2C
00038A C??? F041          M         movff   datachar, CLEAR+1
                          M                 
                          M         COLOUR_READ 0x16    ; read red colour address low, command bits set later
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00038E 0E16               M         movlw   0x16
000390 6E??               M         movwf   regaddress
000392 EC?? F???          M         call    READ_COLOUR_I2C
000396 C??? F042          M         movff   datachar, RED+0
                          M         COLOUR_READ 0x17    ; read red colour address high, command bits set later
00039A 0E17               M         movlw   0x17
00039C 6E??               M         movwf   regaddress
00039E EC?? F???          M         call    READ_COLOUR_I2C
0003A2 C??? F043          M         movff   datachar, RED+1
                          M         
                          M         COLOUR_READ 0x18    ; read green colour address low, command bits set later
0003A6 0E18               M         movlw   0x18
0003A8 6E??               M         movwf   regaddress
0003AA EC?? F???          M         call    READ_COLOUR_I2C
0003AE C??? F044          M         movff   datachar, GREEN+0
                          M         COLOUR_READ 0x19    ; read green colour address high, command bits set later
0003B2 0E19               M         movlw   0x19
0003B4 6E??               M         movwf   regaddress
0003B6 EC?? F???          M         call    READ_COLOUR_I2C
0003BA C??? F045          M         movff   datachar, GREEN+1
                          M         
                          M         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
0003BE 0E1A               M         movlw   0x1a
0003C0 6E??               M         movwf   regaddress
0003C2 EC?? F???          M         call    READ_COLOUR_I2C
0003C6 C??? F046          M         movff   datachar, BLUE+0
                          M         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
0003CA 0E1B               M         movlw   0x1b
0003CC 6E??               M         movwf   regaddress
0003CE EC?? F???          M         call    READ_COLOUR_I2C
0003D2 C??? F047          M         movff   datachar, BLUE+1
                      00600         
0003D6 EC?? F???      00601         call    CHECK_CLEAR
0003DA EC?? F???      00602         call    CHECK_RED
0003DE EC?? F???      00603         call    CHECK_GREEN
0003E2 EC?? F???      00604         call    CHECK_BLUE
0003E6 D???           00605         bra LOOPING
                      00606         
0003E8                00607 EXECUTION
                      00608         ; save the starting time
0003E8 EC?? F???      00609         call        SAVE_TIME
                      00610                 
                      00611         ; display
0003EC 681F           00612         setf        inExecution
0003EE EC?? F???      00613         call        ClrLCD
                      00614         Display     Exe1
  0000                    M         local   loop
0003F2 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003F4 6EF8               M         movwf   TBLPTRU
0003F6 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003F8 6EF7               M         movwf   TBLPTRH
0003FA 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003FC 6EF6               M         movwf   TBLPTRL
0003FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000400 50F5               M         movf    TABLAT, W
000402                    M loop
000402 EC?? F???          M         call    WR_DATA         ; write to LCD
000406 000B               M         tblrd+*                 ; next row in table
000408 50F5               M         movf    TABLAT, W
00040A E1??               M         bnz     loop
00040C EC?? F???      00615         call        LCD_L2
                      00616         Display     Exe2
  0000                    M         local   loop
000410 0E??               M         movlw   upper Exe2      ; Move Table<20:16>
000412 6EF8               M         movwf   TBLPTRU
000414 0E??               M         movlw   high Exe2       ; Move Table<15:8>
000416 6EF7               M         movwf   TBLPTRH
000418 0E??               M         movlw   low Exe2        ; Move Table<7:0>
00041A 6EF6               M         movwf   TBLPTRL
00041C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00041E 50F5               M         movf    TABLAT, W
000420                    M loop
000420 EC?? F???          M         call    WR_DATA         ; write to LCD
000424 000B               M         tblrd+*                 ; next row in table
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000426 50F5               M         movf    TABLAT, W
000428 E1??               M         bnz     loop
                      00617         
                      00618         ; start timer
                      00619         
00042A 0E0B           00620         movlw   0xb
00042C 6ED7           00621         movwf   TMR0H
00042E 0EDC           00622         movlw   0xdc
000430 6ED6           00623         movwf   TMR0L
                      00624         
000432 8ED5           00625         bsf         T0CON, TMR0ON                       ; Turn on timer
000434 EC?? F???      00626         call        ClearEEPROM_21
                      00627         
                      00628         ; initialize variables
000438 6A18           00629         clrf        OP_sec
00043A 6A19           00630         clrf        OP_INT
                      00631 
00043C                00632 HOLD_EXE
00043C EC?? F???      00633         call        READ_KEY
                      00634         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000440 0E0C               M         movlw   keyS                ; poll for mode
000442 6210               M         cpfseq  KEY                 ; check this against key press
000444 EF?? F???          M         goto    Exit
                          M 
000448                    M Next
000448 6A89               M         clrf    LATA                ; clear pins before proceeding
00044A 6A8A               M         clrf    LATB
00044C 6A8B               M         clrf    LATC
00044E 6A8C               M         clrf    LATD
000450 EF?? F???          M         goto    EXIT_EXE
                          M 
000454                    M Exit
000454 0000               M         nop
000456 D???           00635         bra         HOLD_EXE
                      00636         
000458                00637 EXIT_EXE
                      00638         WriteEE     OP_sec, H_EE, L_EE
000458 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00045C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000460 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000464 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000466 D???               M         bra     $-2
                          M 
000468 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00046A 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00046C 84A6               M         bsf     EECON1, WREN    ; enable write
00046E 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000470 98A1               M         bcf     PIR2, EEIF
                          M 
000472 0E55               M         movlw   0x55
000474 6EA7               M         movwf   EECON2      ; write 55h
000476 0EAA               M         movlw   0xAA
000478 6EA7               M         movwf   EECON2      ; write 0xAA
00047A 82A6               M         bsf     EECON1, WR          ; begin write
00047C B2A6               M         btfsc   EECON1, WR
00047E D???               M         bra     $-2
                          M 
000480 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000482 94A6               M         bcf     EECON1, WREN        ; disable writes
000484 2A22           00639         incf        L_EE
                      00640         WriteEE     OP_INT, H_EE, L_EE
000486 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00048A C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
00048E C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
000492 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000494 D???               M         bra     $-2
                          M 
000496 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000498 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00049A 84A6               M         bsf     EECON1, WREN    ; enable write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00049C 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
00049E 98A1               M         bcf     PIR2, EEIF
                          M 
0004A0 0E55               M         movlw   0x55
0004A2 6EA7               M         movwf   EECON2      ; write 55h
0004A4 0EAA               M         movlw   0xAA
0004A6 6EA7               M         movwf   EECON2      ; write 0xAA
0004A8 82A6               M         bsf     EECON1, WR          ; begin write
0004AA B2A6               M         btfsc   EECON1, WR
0004AC D???               M         bra     $-2
                          M 
0004AE 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0004B0 94A6               M         bcf     EECON1, WREN        ; disable writes
0004B2 2A22           00641         incf        L_EE
                      00642         
0004B4 EC?? F???      00643         call        SAVE_TIME
                      00644         
                      00645         ; Clear inExecution flag to stop '*' interrupts
0004B8 6A1F           00646         clrf        inExecution
0004BA EF?? F???      00647         goto        SaveData
                      00648 
0004BE                00649 SaveData
0004BE EC?? F???      00650         call        ClrLCD
                      00651         Display     SAVE
  0000                    M         local   loop
0004C2 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0004C4 6EF8               M         movwf   TBLPTRU
0004C6 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0004C8 6EF7               M         movwf   TBLPTRH
0004CA 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0004CC 6EF6               M         movwf   TBLPTRL
0004CE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004D0 50F5               M         movf    TABLAT, W
0004D2                    M loop
0004D2 EC?? F???          M         call    WR_DATA         ; write to LCD
0004D6 000B               M         tblrd+*                 ; next row in table
0004D8 50F5               M         movf    TABLAT, W
0004DA E1??               M         bnz     loop
                      00652 
0004DC 0E00           00653         movlw       d'0'
0004DE 6E21           00654         movwf       H_EE
0004E0 0EA8           00655         movlw       d'168'              ; take d'168' as last
0004E2 6E22           00656         movwf       L_EE
0004E4 0E00           00657         movlw       d'0'
0004E6 6E24           00658         movwf       tempH_EE
0004E8 0EDC           00659         movlw       d'220'              ; temp for low constant
0004EA 6E25           00660         movwf       tempL_EE
                      00661         
0004EC 6A16           00662         clrf        counter2
0004EE 6A15           00663         clrf        counter
                      00664 
0004F0                00665 ShiftLoop
0004F0 2A15           00666         incf            counter
                      00667         READEE          REG_EE, H_EE, L_EE
0004F2 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0004F6 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0004FA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0004FC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0004FE 80A6               M         bsf     EECON1, RD          ; read EEPROM
000500 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000504 0E15           00668         movlw           d'21'
000506 2622           00669         addwf           L_EE
                      00670         WriteEE         REG_EE, H_EE, L_EE
000508 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00050C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000510 C023 FFA8          M         movff   REG_EE, EEDATA  ; set word
                          M 
000514 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000516 D???               M         bra     $-2
                          M 
000518 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00051A 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00051C 84A6               M         bsf     EECON1, WREN    ; enable write
00051E 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000520 98A1               M         bcf     PIR2, EEIF
                          M 
000522 0E55               M         movlw   0x55
000524 6EA7               M         movwf   EECON2      ; write 55h
000526 0EAA               M         movlw   0xAA
000528 6EA7               M         movwf   EECON2      ; write 0xAA
00052A 82A6               M         bsf     EECON1, WR          ; begin write
00052C B2A6               M         btfsc   EECON1, WR
00052E D???               M         bra     $-2
                          M 
000530 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000532 94A6               M         bcf     EECON1, WREN        ; disable writes
000534 0E14           00671         movlw           d'20'
000536 5E22           00672         subwf           L_EE
000538 0E15           00673         movlw           d'21'
00053A 6215           00674         cpfseq          counter
00053C EF?? F???      00675         goto            ShiftLoop
                      00676         
                      00677         ; Set EEPROM address to the previous 21 byte block, and reset TempEEPROM address
000540 0E2A           00678         movlw           d'42'
000542 5E22           00679         subwf           L_EE
000544 0EDC           00680         movlw           d'220'
000546 6E25           00681         movwf           tempL_EE
000548 6A15           00682         clrf            counter
00054A 2A16           00683         incf            counter2
00054C 0E09           00684         movlw           d'9'
00054E 6216           00685         cpfseq          counter2        ; Skip if 9 shifts were made
000550 EF?? F???      00686         goto            ShiftLoop
                      00687         
                      00688         ; Finish Saving Data
                      00689         ; Stop Timer and goto logs
000554 9ED5           00690         bcf             T0CON, TMR0ON
000556 0E09           00691         movlw           d'9'
000558 6E22           00692         movwf           L_EE
                      00693         WriteEE         OP_sec, H_EE, L_EE
00055A C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00055E C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000562 C018 FFA8          M         movff   OP_sec, EEDATA  ; set word
                          M 
000566 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000568 D???               M         bra     $-2
                          M 
00056A 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00056C 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00056E 84A6               M         bsf     EECON1, WREN    ; enable write
000570 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000572 98A1               M         bcf     PIR2, EEIF
                          M 
000574 0E55               M         movlw   0x55
000576 6EA7               M         movwf   EECON2      ; write 55h
000578 0EAA               M         movlw   0xAA
00057A 6EA7               M         movwf   EECON2      ; write 0xAA
00057C 82A6               M         bsf     EECON1, WR          ; begin write
00057E B2A6               M         btfsc   EECON1, WR
000580 D???               M         bra     $-2
                          M 
000582 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000584 94A6               M         bcf     EECON1, WREN        ; disable writes
000586 2A22           00694         incf            L_EE
                      00695         WriteEE         OP_INT, H_EE, L_EE
000588 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
00058C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000590 C019 FFA8          M         movff   OP_INT, EEDATA  ; set word
                          M 
000594 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000596 D???               M         bra     $-2
                          M 
000598 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
00059A 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
00059C 84A6               M         bsf     EECON1, WREN    ; enable write
00059E 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
0005A0 98A1               M         bcf     PIR2, EEIF
                          M 
0005A2 0E55               M         movlw   0x55
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005A4 6EA7               M         movwf   EECON2      ; write 55h
0005A6 0EAA               M         movlw   0xAA
0005A8 6EA7               M         movwf   EECON2      ; write 0xAA
0005AA 82A6               M         bsf     EECON1, WR          ; begin write
0005AC B2A6               M         btfsc   EECON1, WR
0005AE D???               M         bra     $-2
                          M 
0005B0 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
0005B2 94A6               M         bcf     EECON1, WREN        ; disable writes
0005B4 2A22           00696         incf            L_EE
0005B6 EF?? F???      00697         goto            LOG
                      00698 
                      00699 ;*******************************************************************************
                      00700 ; sorting statistics log mode
                      00701 ;*******************************************************************************
                      00702         
0005BA                00703 LOG
0005BA EC?? F???      00704         call    ClrLCD
                      00705         Display Log1
  0000                    M         local   loop
0005BE 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0005C0 6EF8               M         movwf   TBLPTRU
0005C2 0E??               M         movlw   high Log1       ; Move Table<15:8>
0005C4 6EF7               M         movwf   TBLPTRH
0005C6 0E??               M         movlw   low Log1        ; Move Table<7:0>
0005C8 6EF6               M         movwf   TBLPTRL
0005CA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005CC 50F5               M         movf    TABLAT, W
0005CE                    M loop
0005CE EC?? F???          M         call    WR_DATA         ; write to LCD
0005D2 000B               M         tblrd+*                 ; next row in table
0005D4 50F5               M         movf    TABLAT, W
0005D6 E1??               M         bnz     loop
                      00706 
                      00707         ; display most recent run data
0005D8 0E09           00708         movlw   d'9'
0005DA 6E22           00709         movwf   L_EE
                      00710         READEE  OP_sec, H_EE, L_EE
0005DC C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005E0 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005E4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005E6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005E8 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005EA CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0005EE 2A22           00711         incf    L_EE
                      00712         READEE  OP_INT, H_EE, L_EE
0005F0 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005F4 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005F8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005FA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005FC 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005FE CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000602 2A22           00713         incf    L_EE
000604 EC?? F???      00714         call    DisplayTime
                      00715 
000608 EC?? F???      00716         call    LCD_L2
00060C 6A22           00717         clrf    L_EE
00060E EC?? F???      00718         call    DispOpRTC
                      00719 
000612                00720 HOLD_LOG
000612 EC?? F???      00721         call    READ_KEY
                      00722         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000616 0E07               M         movlw   keyB                ; poll for mode
000618 6210               M         cpfseq  KEY                 ; check this against key press
00061A EF?? F???          M         goto    Exit
                          M 
00061E                    M Next
00061E 6A89               M         clrf    LATA                ; clear pins before proceeding
000620 6A8A               M         clrf    LATB
000622 6A8B               M         clrf    LATC
000624 6A8C               M         clrf    LATD
000626 EF?? F???          M         goto    LOG_INFO
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00062A                    M Exit
00062A 0000               M         nop
                      00723         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00062C 0E0D               M         movlw   key0                ; poll for mode
00062E 6210               M         cpfseq  KEY                 ; check this against key press
000630 EF?? F???          M         goto    Exit
                          M 
000634                    M Next
000634 6A89               M         clrf    LATA                ; clear pins before proceeding
000636 6A8A               M         clrf    LATB
000638 6A8B               M         clrf    LATC
00063A 6A8C               M         clrf    LATD
00063C EF?? F???          M         goto    STANDBY
                          M 
000640                    M Exit
000640 0000               M         nop
000642 D???           00724         bra     HOLD_LOG
                      00725 
000644                00726 LOG_INFO
000644 EC?? F???      00727         call    ClrLCD
                      00728         Display LogInfo1
  0000                    M         local   loop
000648 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
00064A 6EF8               M         movwf   TBLPTRU
00064C 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
00064E 6EF7               M         movwf   TBLPTRH
000650 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000652 6EF6               M         movwf   TBLPTRL
000654 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000656 50F5               M         movf    TABLAT, W
000658                    M loop
000658 EC?? F???          M         call    WR_DATA         ; write to LCD
00065C 000B               M         tblrd+*                 ; next row in table
00065E 50F5               M         movf    TABLAT, W
000660 E1??               M         bnz     loop
000662 EC?? F???      00729         call    LCD_L2
                      00730         Display LogInfo2
  0000                    M         local   loop
000666 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
000668 6EF8               M         movwf   TBLPTRU
00066A 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00066C 6EF7               M         movwf   TBLPTRH
00066E 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000670 6EF6               M         movwf   TBLPTRL
000672 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000674 50F5               M         movf    TABLAT, W
000676                    M loop
000676 EC?? F???          M         call    WR_DATA         ; write to LCD
00067A 000B               M         tblrd+*                 ; next row in table
00067C 50F5               M         movf    TABLAT, W
00067E E1??               M         bnz     loop
000680 6A21           00731         clrf    H_EE
000682 6A22           00732         clrf    L_EE
                      00733         DisplayLog  H_EE, L_EE
  0000                    M             local   Again, Finish
                          M             
000684 6A33               M             clrf    SkipCount
000686 6A27               M             clrf    MAX_EE
                          M 
                          M             ; Check if there is No Data first
                          M             READEE      REG_EE, H_EE,  L_EE
000688 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00068C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000690 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000692 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000694 80A6               M         bsf     EECON1, RD          ; read EEPROM
000696 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
00069A 0EFF               M             movlw       0xFF
00069C 6223               M             cpfseq      REG_EE
00069E EF?? F???          M             goto        Again
                          M             Display     NoData
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local   loop
0006A2 0E??               M         movlw   upper NoData    ; Move Table<20:16>
0006A4 6EF8               M         movwf   TBLPTRU
0006A6 0E??               M         movlw   high NoData     ; Move Table<15:8>
0006A8 6EF7               M         movwf   TBLPTRH
0006AA 0E??               M         movlw   low NoData      ; Move Table<7:0>
0006AC 6EF6               M         movwf   TBLPTRL
0006AE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006B0 50F5               M         movf    TABLAT, W
0006B2                    M loop
0006B2 EC?? F???          M         call    WR_DATA         ; write to LCD
0006B6 000B               M         tblrd+*                 ; next row in table
0006B8 50F5               M         movf    TABLAT, W
0006BA E1??               M         bnz     loop
0006BC EF?? F???          M             goto        Finish
0006C0                    M Again
                          M             ; Put a space every 3 Writes
0006C0 0E03               M             movlw       d'3'
0006C2 6033               M             cpfslt      SkipCount
0006C4 6027               M             cpfslt      MAX_EE
0006C6 EF?? F???          M             goto        Finish
                          M 
                          M             ; read EEPROM
                          M             READEE      REG_EE, H_EE,  L_EE
0006CA C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0006CE C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0006D2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0006D4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0006D6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0006D8 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0006DC BE23               M             btfsc       REG_EE, 7       ; if bit 7 set then done
0006DE EF?? F???          M             goto        Finish
0006E2                    M Finish
0006E2                00734 HOLD_LOG_INFO
0006E2 EC?? F???      00735         call    READ_KEY
                      00736         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0006E6 0E0D               M         movlw   key0                ; poll for mode
0006E8 6210               M         cpfseq  KEY                 ; check this against key press
0006EA EF?? F???          M         goto    Exit
                          M 
0006EE                    M Next
0006EE 6A89               M         clrf    LATA                ; clear pins before proceeding
0006F0 6A8A               M         clrf    LATB
0006F2 6A8B               M         clrf    LATC
0006F4 6A8C               M         clrf    LATD
0006F6 EF?? F???          M         goto    LOG
                          M 
0006FA                    M Exit
0006FA 0000               M         nop
0006FC D???           00737         bra     HOLD_LOG
                      00738         
                      00739 ;*******************************************************************************
                      00740 ; permanent logs
                      00741 ;*******************************************************************************
                      00742 
0006FE                00743 PERM_LOG
0006FE EC?? F???      00744         call    ClrLCD
                      00745         Display PermLog1
  0000                    M         local   loop
000702 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000704 6EF8               M         movwf   TBLPTRU
000706 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000708 6EF7               M         movwf   TBLPTRH
00070A 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00070C 6EF6               M         movwf   TBLPTRL
00070E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000710 50F5               M         movf    TABLAT, W
000712                    M loop
000712 EC?? F???          M         call    WR_DATA         ; write to LCD
000716 000B               M         tblrd+*                 ; next row in table
000718 50F5               M         movf    TABLAT, W
00071A E1??               M         bnz     loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00071C EC?? F???      00746         call    LCD_L2
                      00747         Display PermLog2
  0000                    M         local   loop
000720 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000722 6EF8               M         movwf   TBLPTRU
000724 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000726 6EF7               M         movwf   TBLPTRH
000728 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
00072A 6EF6               M         movwf   TBLPTRL
00072C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00072E 50F5               M         movf    TABLAT, W
000730                    M loop
000730 EC?? F???          M         call    WR_DATA         ; write to LCD
000734 000B               M         tblrd+*                 ; next row in table
000736 50F5               M         movf    TABLAT, W
000738 E1??               M         bnz     loop
                      00748         
00073A                00749 HOLD_PERM_LOG
00073A EC?? F???      00750         call    READ_KEY
                      00751         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00073E 0E0D               M         movlw   key0                ; poll for mode
000740 6210               M         cpfseq  KEY                 ; check this against key press
000742 EF?? F???          M         goto    Exit
                          M 
000746                    M Next
000746 6A89               M         clrf    LATA                ; clear pins before proceeding
000748 6A8A               M         clrf    LATB
00074A 6A8B               M         clrf    LATC
00074C 6A8C               M         clrf    LATD
00074E EF?? F???          M         goto    STANDBY
                          M 
000752                    M Exit
000752 0000               M         nop
                      00752         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000754 0E00               M         movlw   key1                ; poll for mode
000756 6210               M         cpfseq  KEY                 ; check this against key press
000758 EF?? F???          M         goto    Exit
                          M 
00075C                    M Next
00075C 6A89               M         clrf    LATA                ; clear pins before proceeding
00075E 6A8A               M         clrf    LATB
000760 6A8B               M         clrf    LATC
000762 6A8C               M         clrf    LATD
000764 EF?? F???          M         goto    PLOG
                          M 
000768                    M Exit
000768 0000               M         nop
                      00753         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00076A 0E01               M         movlw   key2                ; poll for mode
00076C 6210               M         cpfseq  KEY                 ; check this against key press
00076E EF?? F???          M         goto    Exit
                          M 
000772                    M Next
000772 6A89               M         clrf    LATA                ; clear pins before proceeding
000774 6A8A               M         clrf    LATB
000776 6A8B               M         clrf    LATC
000778 6A8C               M         clrf    LATD
00077A EF?? F???          M         goto    PLOG
                          M 
00077E                    M Exit
00077E 0000               M         nop
                      00754         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000780 0E02               M         movlw   key3                ; poll for mode
000782 6210               M         cpfseq  KEY                 ; check this against key press
000784 EF?? F???          M         goto    Exit
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000788                    M Next
000788 6A89               M         clrf    LATA                ; clear pins before proceeding
00078A 6A8A               M         clrf    LATB
00078C 6A8B               M         clrf    LATC
00078E 6A8C               M         clrf    LATD
000790 EF?? F???          M         goto    PLOG
                          M 
000794                    M Exit
000794 0000               M         nop
                      00755         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
000796 0E04               M         movlw   key4                ; poll for mode
000798 6210               M         cpfseq  KEY                 ; check this against key press
00079A EF?? F???          M         goto    Exit
                          M 
00079E                    M Next
00079E 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A0 6A8A               M         clrf    LATB
0007A2 6A8B               M         clrf    LATC
0007A4 6A8C               M         clrf    LATD
0007A6 EF?? F???          M         goto    PLOG
                          M 
0007AA                    M Exit
0007AA 0000               M         nop
                      00756         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0007AC 0E05               M         movlw   key5                ; poll for mode
0007AE 6210               M         cpfseq  KEY                 ; check this against key press
0007B0 EF?? F???          M         goto    Exit
                          M 
0007B4                    M Next
0007B4 6A89               M         clrf    LATA                ; clear pins before proceeding
0007B6 6A8A               M         clrf    LATB
0007B8 6A8B               M         clrf    LATC
0007BA 6A8C               M         clrf    LATD
0007BC EF?? F???          M         goto    PLOG
                          M 
0007C0                    M Exit
0007C0 0000               M         nop
                      00757         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0007C2 0E06               M         movlw   key6                ; poll for mode
0007C4 6210               M         cpfseq  KEY                 ; check this against key press
0007C6 EF?? F???          M         goto    Exit
                          M 
0007CA                    M Next
0007CA 6A89               M         clrf    LATA                ; clear pins before proceeding
0007CC 6A8A               M         clrf    LATB
0007CE 6A8B               M         clrf    LATC
0007D0 6A8C               M         clrf    LATD
0007D2 EF?? F???          M         goto    PLOG
                          M 
0007D6                    M Exit
0007D6 0000               M         nop
                      00758         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
0007D8 0E08               M         movlw   key7                ; poll for mode
0007DA 6210               M         cpfseq  KEY                 ; check this against key press
0007DC EF?? F???          M         goto    Exit
                          M 
0007E0                    M Next
0007E0 6A89               M         clrf    LATA                ; clear pins before proceeding
0007E2 6A8A               M         clrf    LATB
0007E4 6A8B               M         clrf    LATC
0007E6 6A8C               M         clrf    LATD
0007E8 EF?? F???          M         goto    PLOG
                          M 
0007EC                    M Exit
0007EC 0000               M         nop
                      00759         ChangeMode  key8, PLOG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
0007EE 0E09               M         movlw   key8                ; poll for mode
0007F0 6210               M         cpfseq  KEY                 ; check this against key press
0007F2 EF?? F???          M         goto    Exit
                          M 
0007F6                    M Next
0007F6 6A89               M         clrf    LATA                ; clear pins before proceeding
0007F8 6A8A               M         clrf    LATB
0007FA 6A8B               M         clrf    LATC
0007FC 6A8C               M         clrf    LATD
0007FE EF?? F???          M         goto    PLOG
                          M 
000802                    M Exit
000802 0000               M         nop
                      00760         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000804 0E0A               M         movlw   key9                ; poll for mode
000806 6210               M         cpfseq  KEY                 ; check this against key press
000808 EF?? F???          M         goto    Exit
                          M 
00080C                    M Next
00080C 6A89               M         clrf    LATA                ; clear pins before proceeding
00080E 6A8A               M         clrf    LATB
000810 6A8B               M         clrf    LATC
000812 6A8C               M         clrf    LATD
000814 EF?? F???          M         goto    PLOG
                          M 
000818                    M Exit
000818 0000               M         nop
00081A D???           00761         bra HOLD_PERM_LOG
                      00762         
00081C                00763 PLOG
00081C EC?? F???      00764         call    ClrLCD
                      00765         Display PermLog1
  0000                    M         local   loop
000820 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000822 6EF8               M         movwf   TBLPTRU
000824 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000826 6EF7               M         movwf   TBLPTRH
000828 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00082A 6EF6               M         movwf   TBLPTRL
00082C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00082E 50F5               M         movf    TABLAT, W
000830                    M loop
000830 EC?? F???          M         call    WR_DATA         ; write to LCD
000834 000B               M         tblrd+*                 ; next row in table
000836 50F5               M         movf    TABLAT, W
000838 E1??               M         bnz     loop
                      00766         
                      00767         ; find the key press value
00083A C010 FFE8      00768         movff   KEY, WREG
00083E 2AE8           00769         incf    WREG        ; W = KEY+1
000840 6E17           00770         movwf   temp
                      00771         
000842 42E8           00772         rrncf   WREG        ; division by 4
000844 9EE8           00773         bcf     WREG, 7     ; clear last bit, overflow from rotate
000846 42E8           00774         rrncf   WREG        
000848 9EE8           00775         bcf     WREG, 7
00084A 5E17           00776         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00084C C017 FFE8      00777         movff   temp, WREG
000850 C017 F011      00778         movff   temp, temp_KEY
000854 0D15           00779         mullw   d'21'       ; indexed as mutliples of 21
                      00780 
000856                00781 displayNum
000856 C011 FFE8      00782         movff   temp_KEY, WREG
00085A 0F30           00783         addlw   0x30
00085C EC?? F???      00784         call    WR_DATA
000860 0E3A           00785         movlw   ":"
000862 EC?? F???      00786         call    WR_DATA
000866 0E20           00787         movlw   " "
000868 EC?? F???      00788         call    WR_DATA
                      00789         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00086C CFF3 F022      00790         movff   PRODL, L_EE
000870 0E00           00791         movlw   d'0'
000872 2622           00792         addwf   L_EE
                      00793         READEE  OP_sec, H_EE, L_EE
000874 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000878 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
00087C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00087E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000880 80A6               M         bsf     EECON1, RD          ; read EEPROM
000882 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
000886 2A22           00794         incf    L_EE
                      00795         READEE  OP_INT, H_EE, L_EE
000888 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00088C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000890 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000892 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000894 80A6               M         bsf     EECON1, RD          ; read EEPROM
000896 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00089A 2A22           00796         incf    L_EE
00089C EC?? F???      00797         call    DisplayTime
0008A0 CFF3 F022      00798         movff   PRODL, L_EE
                      00799         
                      00800         ; reset eeprom to beginning
0008A4 EC?? F???      00801         call    LCD_L2
0008A8 CFF3 F022      00802         movff   PRODL, L_EE
0008AC EC?? F???      00803         call    DispOpRTC
                      00804         
0008B0                00805 HOLD_PLOG
0008B0 EC?? F???      00806         call    READ_KEY
                      00807         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0008B4 0E0D               M         movlw   key0                ; poll for mode
0008B6 6210               M         cpfseq  KEY                 ; check this against key press
0008B8 EF?? F???          M         goto    Exit
                          M 
0008BC                    M Next
0008BC 6A89               M         clrf    LATA                ; clear pins before proceeding
0008BE 6A8A               M         clrf    LATB
0008C0 6A8B               M         clrf    LATC
0008C2 6A8C               M         clrf    LATD
0008C4 EF?? F???          M         goto    PERM_LOG
                          M 
0008C8                    M Exit
0008C8 0000               M         nop
0008CA D???           00808         bra HOLD_PERM_LOG
                      00809         
                      00810 ;*******************************************************************************
                      00811 ; pc interface
                      00812 ;*******************************************************************************
                      00813 
0008CC                00814 PC_MODE
0008CC EC?? F???      00815         call    ClrLCD
                      00816         Display PC1
  0000                    M         local   loop
0008D0 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0008D2 6EF8               M         movwf   TBLPTRU
0008D4 0E??               M         movlw   high PC1        ; Move Table<15:8>
0008D6 6EF7               M         movwf   TBLPTRH
0008D8 0E??               M         movlw   low PC1         ; Move Table<7:0>
0008DA 6EF6               M         movwf   TBLPTRL
0008DC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008DE 50F5               M         movf    TABLAT, W
0008E0                    M loop
0008E0 EC?? F???          M         call    WR_DATA         ; write to LCD
0008E4 000B               M         tblrd+*                 ; next row in table
0008E6 50F5               M         movf    TABLAT, W
0008E8 E1??               M         bnz     loop
0008EA EC?? F???      00817         call    LCD_L2
                      00818         Display PC2
  0000                    M         local   loop
0008EE 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0008F0 6EF8               M         movwf   TBLPTRU
0008F2 0E??               M         movlw   high PC2        ; Move Table<15:8>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008F4 6EF7               M         movwf   TBLPTRH
0008F6 0E??               M         movlw   low PC2         ; Move Table<7:0>
0008F8 6EF6               M         movwf   TBLPTRL
0008FA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008FC 50F5               M         movf    TABLAT, W
0008FE                    M loop
0008FE EC?? F???          M         call    WR_DATA         ; write to LCD
000902 000B               M         tblrd+*                 ; next row in table
000904 50F5               M         movf    TABLAT, W
000906 E1??               M         bnz     loop
000908 CFF9 F03A      00819         movff   PCL, PC_PCL
00090C CFFA F03B      00820         movff   PCLATH, PC_PCLATH
000910 CFFB F03C      00821         movff   PCLATU, PC_PCLATU
                      00822         
000914                00823 HOLD_PC
000914 EC?? F???      00824         call    READ_KEY
                      00825         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000918 0E0D               M         movlw   key0                ; poll for mode
00091A 6210               M         cpfseq  KEY                 ; check this against key press
00091C EF?? F???          M         goto    Exit
                          M 
000920                    M Next
000920 6A89               M         clrf    LATA                ; clear pins before proceeding
000922 6A8A               M         clrf    LATB
000924 6A8B               M         clrf    LATC
000926 6A8C               M         clrf    LATD
000928 EF?? F???          M         goto    STANDBY
                          M 
00092C                    M Exit
00092C 0000               M         nop
                      00826         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
00092E 0E0E               M         movlw   keyH                ; poll for mode
000930 6210               M         cpfseq  KEY                 ; check this against key press
000932 EF?? F???          M         goto    Exit
                          M 
000936                    M Next
000936 6A89               M         clrf    LATA                ; clear pins before proceeding
000938 6A8A               M         clrf    LATB
00093A 6A8B               M         clrf    LATC
00093C 6A8C               M         clrf    LATD
00093E EF?? F???          M         goto    PC_TRANSFER
                          M 
000942                    M Exit
000942 0000               M         nop
000944 D???           00827         bra     HOLD_PC
                      00828 
000946                00829 PC_TRANSFER
000946 6839           00830         setf    transferring
000948 EC?? F???      00831         call    ClrLCD
                      00832         Display PCTransfer
  0000                    M         local   loop
00094C 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
00094E 6EF8               M         movwf   TBLPTRU
000950 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000952 6EF7               M         movwf   TBLPTRH
000954 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
000956 6EF6               M         movwf   TBLPTRL
000958 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00095A 50F5               M         movf    TABLAT, W
00095C                    M loop
00095C EC?? F???          M         call    WR_DATA         ; write to LCD
000960 000B               M         tblrd+*                 ; next row in table
000962 50F5               M         movf    TABLAT, W
000964 E1??               M         bnz     loop
                      00833         ;call   DataUSART
000966 6A39           00834         clrf    transferring
000968 D???           00835         bra     HOLD_PC
                      00836         
                      00837 ;*******************************************************************************
                      00838 ; subroutines
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00839 ;*******************************************************************************
                      00840 
00096A                00841 RTC_INIT
                      00842         ; set sda and scl to high-z
00096A 9882           00843         bcf     PORTC, 4
00096C 9682           00844         bcf     PORTC, 3
00096E 8894           00845         bsf     TRISC, 4
000970 8694           00846         bsf     TRISC, 3
                      00847         
000972 EC?? F???      00848         call    i2c_common_setup
                      00849         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000976 0012           00850 return
                      00851         
000978                00852 SAVE_TIME   
                      00853         rtc_read    0x02        ; hours
000978 0E02               M     movlw   0x02
00097A 6E??               M     movwf   regaddress
00097C EC?? F???          M     call    read_rtc
000980 50??               M     movf    datachar,w
000982 EC?? F???          M     call    rtc_convert
000986 EC?? F???      00854         call    WriteEE_RTC
                      00855         rtc_read    0x01        ; minutes
00098A 0E01               M     movlw   0x01
00098C 6E??               M     movwf   regaddress
00098E EC?? F???          M     call    read_rtc
000992 50??               M     movf    datachar,w
000994 EC?? F???          M     call    rtc_convert
000998 EC?? F???      00856         call    WriteEE_RTC
                      00857         rtc_read    0x06        ; years
00099C 0E06               M     movlw   0x06
00099E 6E??               M     movwf   regaddress
0009A0 EC?? F???          M     call    read_rtc
0009A4 50??               M     movf    datachar,w
0009A6 EC?? F???          M     call    rtc_convert
0009AA EC?? F???      00858         call    WriteEE_RTC
                      00859         rtc_read    0x05        ; months
0009AE 0E05               M     movlw   0x05
0009B0 6E??               M     movwf   regaddress
0009B2 EC?? F???          M     call    read_rtc
0009B6 50??               M     movf    datachar,w
0009B8 EC?? F???          M     call    rtc_convert
0009BC EC?? F???      00860         call    WriteEE_RTC
                      00861         rtc_read    0x04        ; days
0009C0 0E04               M     movlw   0x04
0009C2 6E??               M     movwf   regaddress
0009C4 EC?? F???          M     call    read_rtc
0009C8 50??               M     movf    datachar,w
0009CA EC?? F???          M     call    rtc_convert
0009CE EC?? F???      00862         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
0009D2 0012           00863 return
                      00864                 
0009D4                00865 DISPLAY_RTC
                      00866         
                      00867         ; display data in this format hh/minmin/yy yy/mm/dd
                      00868         rtc_read    0x02            ; 0x02 from DS1307 - hours
0009D4 0E02               M     movlw   0x02
0009D6 6E??               M     movwf   regaddress
0009D8 EC?? F???          M     call    read_rtc
0009DC 50??               M     movf    datachar,w
0009DE EC?? F???          M     call    rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
0009E2 5000           00869         movf    tens_digit,WREG
0009E4 EC?? F???      00870         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
0009E8 5000           00871         movf    ones_digit,WREG
0009EA EC?? F???      00872         call    WR_DATA
0009EE 0E68           00873         movlw   "h"
0009F0 EC?? F???      00874         call    WR_DATA
                      00875         
                      00876         rtc_read    0x01            ; 0x01 from DS1307 - minutes
0009F4 0E01               M     movlw   0x01
0009F6 6E??               M     movwf   regaddress
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009F8 EC?? F???          M     call    read_rtc
0009FC 50??               M     movf    datachar,w
0009FE EC?? F???          M     call    rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000A02 5000           00877         movf    tens_digit,WREG
000A04 EC?? F???      00878         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000A08 5000           00879         movf    ones_digit,WREG
000A0A EC?? F???      00880         call    WR_DATA
                      00881         
                      00882         rtc_read    0x00            ; 0x01 from DS1307 - seconds
000A0E 0E00               M     movlw   0x00
000A10 6E??               M     movwf   regaddress
000A12 EC?? F???          M     call    read_rtc
000A16 50??               M     movf    datachar,w
000A18 EC?? F???          M     call    rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000A1C 5000           00883         movf    tens_digit,WREG
000A1E EC?? F???      00884         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000A22 5000           00885         movf    ones_digit,WREG
000A24 EC?? F???      00886         call    WR_DATA
000A28 0E20           00887         movlw   " "
000A2A EC?? F???      00888         call    WR_DATA
                      00889         
                      00890         rtc_read    0x06            ; 0x06 from DS1307 - years
000A2E 0E06               M     movlw   0x06
000A30 6E??               M     movwf   regaddress
000A32 EC?? F???          M     call    read_rtc
000A36 50??               M     movf    datachar,w
000A38 EC?? F???          M     call    rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000A3C 5000           00891         movf    tens_digit,WREG
000A3E EC?? F???      00892         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000A42 5000           00893         movf    ones_digit,WREG
000A44 EC?? F???      00894         call    WR_DATA
000A48 0E2F           00895         movlw   "/"
000A4A EC?? F???      00896         call    WR_DATA
                      00897         
                      00898         rtc_read    0x05            ; 0x05 from DS1307 - months
000A4E 0E05               M     movlw   0x05
000A50 6E??               M     movwf   regaddress
000A52 EC?? F???          M     call    read_rtc
000A56 50??               M     movf    datachar,w
000A58 EC?? F???          M     call    rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000A5C 5000           00899         movf    tens_digit,WREG
000A5E EC?? F???      00900         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000A62 5000           00901         movf    ones_digit,WREG
000A64 EC?? F???      00902         call    WR_DATA
000A68 0E2F           00903         movlw   "/"
000A6A EC?? F???      00904         call    WR_DATA
                      00905         
                      00906         rtc_read    0x04            ; 0x04 from DS1307 - days
000A6E 0E04               M     movlw   0x04
000A70 6E??               M     movwf   regaddress
000A72 EC?? F???          M     call    read_rtc
000A76 50??               M     movf    datachar,w
000A78 EC?? F???          M     call    rtc_convert
Warning[202]: Argument out of range.  Least significant bits used.
000A7C 5000           00907         movf    tens_digit,WREG
000A7E EC?? F???      00908         call    WR_DATA
Warning[202]: Argument out of range.  Least significant bits used.
000A82 5000           00909         movf    ones_digit,WREG
000A84 EC?? F???      00910         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000A88 0012           00911 return
                      00912         
000A8A                00913 SET_TIME
                      00914         rtc_resetAll
                          M 
000A8A 6A??               M     clrf    databyte
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A8C 0E06               M     movlw   6
000A8E 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000A90                    M     del_loop0
000A90 EC?? F???          M     call    write_rtc
000A94 2E??               M     decfsz  regaddress
000A96 D???               M     bra     del_loop0
000A98 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      00915         
                      00916         rtc_set 0x00,   b'10000000'
000A9C 0E00               M     movlw   0x00
000A9E 6E??               M     movwf   regaddress
000AA0 0E80               M     movlw   b'10000000'
000AA2 6E??               M     movwf   databyte
000AA4 EC?? F???          M     call    write_rtc
                      00917 
                      00918         rtc_set 0x06,   b'00010111'             ; Year 17
000AA8 0E06               M     movlw   0x06
000AAA 6E??               M     movwf   regaddress
000AAC 0E17               M     movlw   b'00010111'
000AAE 6E??               M     movwf   databyte
000AB0 EC?? F???          M     call    write_rtc
                      00919         rtc_set 0x05,   b'00000010'             ; Month 2
000AB4 0E05               M     movlw   0x05
000AB6 6E??               M     movwf   regaddress
000AB8 0E02               M     movlw   b'00000010'
000ABA 6E??               M     movwf   databyte
000ABC EC?? F???          M     call    write_rtc
                      00920         rtc_set 0x04,   b'00011001'             ; Date 19
000AC0 0E04               M     movlw   0x04
000AC2 6E??               M     movwf   regaddress
000AC4 0E19               M     movlw   b'00011001'
000AC6 6E??               M     movwf   databyte
000AC8 EC?? F???          M     call    write_rtc
                      00921         rtc_set 0x02,   b'00010001'             ; Hours 11
000ACC 0E02               M     movlw   0x02
000ACE 6E??               M     movwf   regaddress
000AD0 0E11               M     movlw   b'00010001'
000AD2 6E??               M     movwf   databyte
000AD4 EC?? F???          M     call    write_rtc
                      00922         rtc_set 0x01,   b'00111000'             ; Minutes 38
000AD8 0E01               M     movlw   0x01
000ADA 6E??               M     movwf   regaddress
000ADC 0E38               M     movlw   b'00111000'
000ADE 6E??               M     movwf   databyte
000AE0 EC?? F???          M     call    write_rtc
                      00923         rtc_set 0x00,   b'00000000'             ; Seconds 0
000AE4 0E00               M     movlw   0x00
000AE6 6E??               M     movwf   regaddress
000AE8 0E00               M     movlw   b'00000000'
000AEA 6E??               M     movwf   databyte
000AEC EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000AF0 0012           00924 return
                      00925         
000AF2                00926 INIT_USART
000AF2 0E0F           00927         movlw   15      ; baud rate 9600
000AF4 6EAF           00928         movwf   SPBRG
000AF6 6AAC           00929         clrf    TXSTA
                      00930         
000AF8 6AAB           00931         clrf    RCSTA
000AFA 8EAB           00932         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000AFC 88AB           00933         bsf     RCSTA,CREN      ; continous receive
                      00934         
000AFE 8AAC           00935         bsf     TXSTA, TXEN     ; transmit enabled
000B00 0012           00936         return
                      00937 
                      00938 ;DataUSART
                      00939 ;       
                      00940 ;       movlw   0x02
                      00941 ;       call    USART_WAIT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00942 ;       movlw   0x0D
                      00943 ;       call    USART_WAIT
                      00944 ;       
                      00945 ;       movlw   d'21'       ; start of permanent logs
                      00946 ;       movff   w, L_EE
                      00947 ;       TransferTable   PCLog1
                      00948 ;       
                      00949 ;       ; display time here
                      00950 ;;      rtc_read        0x02
                      00951 ;;              movf        tens_digit, W
                      00952 ;;        andlw       b'00000001'
                      00953 ;;        addlw       0x30
                      00954 ;;        call        TransmitWaitUSART
                      00955 ;;        movf        ones_digit, W
                      00956 ;;        call        TransmitWaitUSART
                      00957 ;;              movlw           ":"
                      00958 ;;              call            TransmitWaitUSART
                      00959 ;;              ; Dispay minutes
                      00960 ;;              rtc_read        0x01
                      00961 ;;              call        SendRTC_USART
                      00962 ;;              ; Dispay AM/PM
                      00963 ;;              rtc_read        0x02
                      00964 ;;        movlw       "P"
                      00965 ;;        btfss       tens_digit, 1
                      00966 ;;        movlw       "A"
                      00967 ;;        call        TransmitWaitUSART
                      00968 ;;        movlw       "M"
                      00969 ;;        call        TransmitWaitUSART
                      00970 ;;              movlw           " "
                      00971 ;;        call        TransmitWaitUSART
                      00972 ;;              ; Display month
                      00973 ;;              rtc_read        0x05
                      00974 ;;              call        SendRTC_USART
                      00975 ;;              movlw           0x2F            ; ASCII '/'
                      00976 ;;              call            TransmitWaitUSART
                      00977 ;;              ; Display day
                      00978 ;;              rtc_read        0x04
                      00979 ;;              call        SendRTC_USART
                      00980 ;;              movlw           0x2F            ; ASCII '/'
                      00981 ;;              call            TransmitWaitUSART
                      00982 ;;              ; Display year
                      00983 ;;              rtc_read        0x06
                      00984 ;;              call        SendRTC_USART
                      00985 ;       
                      00986 ;       call    USART_LINE
                      00987 ;       call    USART_LINE
                      00988 ;       
                      00989 ;       clrf    counter
                      00990 ;       incf    counter
                      00991 ;
                      00992 ;USART_TRANSFER
                      00993 ;       movlw   d'21'
                      00994 ;       mulwf   counter
                      00995 ;       movff   PRODL, L_EE
                      00996 ;       movlw   d'9'
                      00997 ;       addwf   L_EE
                      00998 ;       READEE  OP_sec, H_EE, L_EE
                      00999 ;       incf    L_EE
                      01000 ;       READEE  OP_INT, H_EE, L_EE
                      01001 ;       incf    L_EE
                      01002 ;       ; call  TransferTime
                      01003 ;       
                      01004 ;       ; send rtc
                      01005 ;       movlw   0x09
                      01006 ;       call    USART_WAIT
                      01007 ;       movff   PRODL, L_EE
                      01008 ;       ;call   TransferRTC
                      01009 ;       call    USART_LINE
                      01010 ;       
                      01011 ;       
                      01012 ;       
                      01013 ;       
                      01014 ;USART_WAIT
                      01015 ;       movwf   TXREG
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01016 ;       btfss   TXSTA,1
                      01017 ;       goto    $-2
                      01018 ;       return
                      01019 ;
                      01020 ;USART_LINE
                      01021 ;       movlw   0x0A
                      01022 ;       call    USART_WAIT
                      01023 ;       movlw   0x0D
                      01024 ;       call    USART_WAIT
                      01025 ;       return
                      01026         
                      01027         
000B02                01028 Delay5us
000B02 0E78           01029         movlw   d'120'
000B04 6E1C           01030         movwf   d5us
                      01031 
000B06                01032 loop5us
000B06 2E1C           01033         decfsz  d5us
000B08 EF?? F???      01034         goto    loop5us
000B0C 0000           01035         nop
000B0E 0012           01036         return
                      01037 
000B10                01038 Delay200us
000B10 0EA4           01039         movlw   0xA4
000B12 6E1D           01040         movwf   d200us
                      01041 
000B14                01042 loop200us
000B14 2E1D           01043         decfsz  d200us
000B16 EF?? F???      01044         goto    loop200us
000B1A 0000           01045         nop
000B1C 0012           01046         return
                      01047 
000B1E                01048 Delay50ms
000B1E 0EF9           01049         movlw   0xF9
000B20 6E1E           01050         movwf   d50ms
                      01051 
000B22                01052 loop50ms
000B22 EC?? F???      01053         call    Delay200us
000B26 2E1E           01054         decfsz  d50ms
                      01055 
000B28                01056 Cycles
000B28 EF?? F???      01057         goto    loop50ms
000B2C EC?? F???      01058         call    Delay200us
000B30 0012           01059         return
                      01060 
000B32                01061 WriteEE_RTC
                      01062         WriteEE tens_digit, H_EE, L_EE
000B32 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000B36 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000B3A C??? FFA8          M         movff   tens_digit, EEDATA ; set word
                          M 
000B3E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B40 D???               M         bra     $-2
                          M 
000B42 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000B44 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000B46 84A6               M         bsf     EECON1, WREN    ; enable write
000B48 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000B4A 98A1               M         bcf     PIR2, EEIF
                          M 
000B4C 0E55               M         movlw   0x55
000B4E 6EA7               M         movwf   EECON2      ; write 55h
000B50 0EAA               M         movlw   0xAA
000B52 6EA7               M         movwf   EECON2      ; write 0xAA
000B54 82A6               M         bsf     EECON1, WR          ; begin write
000B56 B2A6               M         btfsc   EECON1, WR
000B58 D???               M         bra     $-2
                          M 
000B5A 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000B5C 94A6               M         bcf     EECON1, WREN        ; disable writes
000B5E 2A22           01063         incf    L_EE
                      01064         WriteEE ones_digit, H_EE, L_EE
000B60 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000B64 C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B68 C??? FFA8          M         movff   ones_digit, EEDATA ; set word
                          M 
000B6C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B6E D???               M         bra     $-2
                          M 
000B70 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000B72 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000B74 84A6               M         bsf     EECON1, WREN    ; enable write
000B76 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000B78 98A1               M         bcf     PIR2, EEIF
                          M 
000B7A 0E55               M         movlw   0x55
000B7C 6EA7               M         movwf   EECON2      ; write 55h
000B7E 0EAA               M         movlw   0xAA
000B80 6EA7               M         movwf   EECON2      ; write 0xAA
000B82 82A6               M         bsf     EECON1, WR          ; begin write
000B84 B2A6               M         btfsc   EECON1, WR
000B86 D???               M         bra     $-2
                          M 
000B88 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000B8A 94A6               M         bcf     EECON1, WREN        ; disable writes
000B8C 2A22           01065         incf    L_EE
000B8E 0012           01066         return
                      01067 
000B90                01068 ClearEEPROM_21
000B90 6A21           01069         clrf    H_EE
000B92 6A22           01070         clrf    L_EE
000B94 6820           01071         setf    clear_EE
000B96 6A15           01072         clrf    counter
000B98                01073 ClearNext
                      01074         WriteEE         clear_EE, H_EE, L_EE
000B98 C021 FFAA          M         movff   H_EE, EEADRH    ; High address
000B9C C022 FFAA          M         movff   L_EE, EEADRH    ; Low address
000BA0 C020 FFA8          M         movff   clear_EE, EEDATA ; set word
                          M 
000BA4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BA6 D???               M         bra     $-2
                          M 
000BA8 9EA6               M         bcf     EECON1, EEPGD   ; Point to data memory
000BAA 9CA6               M         bcf     EECON1, CFGS    ; Access EEPROM
000BAC 84A6               M         bsf     EECON1, WREN    ; enable write
000BAE 9EA6               M         bcf     EECON1, GIE         ; disable interrupts during write
000BB0 98A1               M         bcf     PIR2, EEIF
                          M 
000BB2 0E55               M         movlw   0x55
000BB4 6EA7               M         movwf   EECON2      ; write 55h
000BB6 0EAA               M         movlw   0xAA
000BB8 6EA7               M         movwf   EECON2      ; write 0xAA
000BBA 82A6               M         bsf     EECON1, WR          ; begin write
000BBC B2A6               M         btfsc   EECON1, WR
000BBE D???               M         bra     $-2
                          M 
000BC0 8EA6               M         bsf     EECON1, GIE         ; enable interrupts after write
000BC2 94A6               M         bcf     EECON1, WREN        ; disable writes
000BC4 2A15           01075         incf            counter
000BC6 2A22           01076         incf            L_EE
000BC8 0E15           01077         movlw           d'21'
000BCA 6215           01078         cpfseq          counter
000BCC EF?? F???      01079         goto            ClearNext
000BD0 6A21           01080         clrf            H_EE            ; reset EEPROMaddr
000BD2 6A22           01081         clrf            L_EE
000BD4 0012           01082         return
                      01083         
000BD6                01084 READ_KEY
000BD6 A281           01085         btfss   PORTB, 1        ; check for keypad interrupt
000BD8 EF?? F???      01086         goto    READ_KEY
000BDC 3881           01087         swapf   PORTB, W
000BDE 0B0F           01088         andlw   0x0F
000BE0 6E10           01089         movwf   KEY
000BE2 B281           01090         btfsc   PORTB, 1
000BE4 EF?? F???      01091         goto    $-2
000BE8 0012           01092         return
                      01093 
000BEA                01094 READ_KEY_TIME
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BEA EC?? F???      01095         call        LCD_L2          ; go to second line to print RTC
                      01096 
                      01097         ; display the time
000BEE EC?? F???      01098         call    DISPLAY_RTC
                      01099 
000BF2 A281           01100         btfss       PORTB, 1    ; keypad interrupt
000BF4 EF?? F???      01101         goto        READ_KEY_TIME
000BF8 3881           01102         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000BFA 0B0F           01103         andlw       0x0F        ; only want W3:0
000BFC 6E10           01104         movwf       KEY         ; write this value to the KEY
000BFE B281           01105         btfsc       PORTB, 1    ; wait for release
000C00 EF?? F???      01106         goto        $-2         ; go back one instruction
000C04 0012           01107         return
                      01108 
000C06                01109 DisplayTime
                      01110         READEE  REG_EE, H_EE, L_EE
000C06 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C0A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C0E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C10 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C12 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C14 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000C18 0EFF           01111         movlw   0xFF
000C1A 6223           01112         cpfseq  REG_EE
000C1C EF?? F???      01113         goto    NoSkipDispOpTime
                      01114         Display NoData
  0000                    M         local   loop
000C20 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000C22 6EF8               M         movwf   TBLPTRU
000C24 0E??               M         movlw   high NoData     ; Move Table<15:8>
000C26 6EF7               M         movwf   TBLPTRH
000C28 0E??               M         movlw   low NoData      ; Move Table<7:0>
000C2A 6EF6               M         movwf   TBLPTRL
000C2C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000C2E 50F5               M         movf    TABLAT, W
000C30                    M loop
000C30 EC?? F???          M         call    WR_DATA         ; write to LCD
000C34 000B               M         tblrd+*                 ; next row in table
000C36 50F5               M         movf    TABLAT, W
000C38 E1??               M         bnz     loop
000C3A 0EFF           01115         movlw   0xFF
000C3C 6023           01116         cpfslt  REG_EE
000C3E EF?? F???      01117         goto    SkipDispOpTime
000C42 0012           01118         return
                      01119 
000C44                01120 NoSkipDispOpTime
000C44 0E21           01121         movlw   b'00100001'
000C46 6E18           01122         movwf   OP_sec
000C48 3818           01123         swapf   OP_sec, W
000C4A 6E17           01124         movwf   temp
000C4C 0E0F           01125         movlw   0x0F
000C4E 1617           01126         andwf   temp
000C50 C017 FFE8      01127         movff   temp, WREG
000C54 0F30           01128         addlw   0x30
000C56 EC?? F???      01129         call    WR_DATA
                      01130 
000C5A C018 F017      01131         movff   OP_sec, temp    ; 1's seconds
000C5E 0E0F           01132         movlw   0x0F
000C60 1617           01133         andwf   temp            ; Temp = lower nibble of Op_sec
000C62 C017 FFE8      01134         movff   temp, WREG      ; W = Temp
000C66 0F30           01135         addlw   0x30            ; Convert to ASCII
000C68 EC?? F???      01136         call    WR_DATA
                      01137 
000C6C 0E73           01138         movlw   0x73            ; Write 's'
000C6E EC?? F???      01139         call    WR_DATA
000C72 EC?? F???      01140         call    LCD_L2
000C76                01141 SkipDispOpTime
000C76 0012           01142         return
                      01143 
000C78                01144 DispOpRTC
000C78 0E0B           01145         movlw   d'11'
000C7A 2622           01146         addwf   L_EE
                      01147 
                      01148         READEE  REG_EE, H_EE, L_EE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C7C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C80 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000C84 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000C86 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000C88 80A6               M         bsf     EECON1, RD          ; read EEPROM
000C8A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000C8E 0EFF           01149         movlw   0xFF
000C90 6223           01150         cpfseq  REG_EE
000C92 EF?? F???      01151         goto    NoSkipDispOpRTC
                      01152         Display NoData
  0000                    M         local   loop
000C96 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000C98 6EF8               M         movwf   TBLPTRU
000C9A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000C9C 6EF7               M         movwf   TBLPTRH
000C9E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000CA0 6EF6               M         movwf   TBLPTRL
000CA2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CA4 50F5               M         movf    TABLAT, W
000CA6                    M loop
000CA6 EC?? F???          M         call    WR_DATA         ; write to LCD
000CAA 000B               M         tblrd+*                 ; next row in table
000CAC 50F5               M         movf    TABLAT, W
000CAE E1??               M         bnz     loop
000CB0 0EFF           01153         movlw   0xFF
000CB2 6023           01154         cpfslt  REG_EE
000CB4 EF?? F???      01155         goto    SkipDispOpRTC
                      01156 
000CB8                01157 NoSkipDispOpRTC
                      01158         READEE  REG_EE, H_EE, L_EE
000CB8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CBC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CC0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CC2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CC4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CC6 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000CCA C023 FFE8      01159         movff   REG_EE, WREG
000CCE 0BF1           01160         andlw   b'11110001'
000CD0 EC?? F???      01161         call    WR_DATA
                      01162         
000CD4 2A22           01163         incf    L_EE
                      01164         READEE  REG_EE, H_EE, L_EE
000CD6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CDA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CDE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CE0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CE2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CE4 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000CE8 C023 FFE8      01165         movff   REG_EE, WREG
000CEC EC?? F???      01166         call    WR_DATA
000CF0 2A22           01167         incf    L_EE
                      01168 
000CF2 0E68           01169         movlw           "h"
000CF4 EC?? F???      01170         call            WR_DATA
000CF8 EC?? F???      01171         call DispOpRTC_Helper
000CFC 0E20           01172         movlw           " "
000CFE EC?? F???      01173         call            WR_DATA
000D02 EC?? F???      01174         call DispOpRTC_Helper
000D06 0E2F           01175         movlw           "/"
000D08 EC?? F???      01176         call            WR_DATA
000D0C EC?? F???      01177         call DispOpRTC_Helper
000D10 0E2F           01178         movlw           "/"
000D12 EC?? F???      01179         call            WR_DATA
000D16 EC?? F???      01180         call DispOpRTC_Helper
000D1A                01181 SkipDispOpRTC
000D1A 0012           01182                 return
000D1C                01183 DispOpRTC_Helper
                      01184         READEE          REG_EE, H_EE, L_EE
000D1C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D20 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D24 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D26 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D28 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D2A CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-20-2017  15:28:14         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D2E C023 FFE8      01185         movff           REG_EE, WREG
000D32 EC?? F???      01186         call            WR_DATA
000D36 2A22           01187         incf            L_EE
                      01188         READEE          REG_EE, H_EE, L_EE
000D38 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D3C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D40 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D42 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D44 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D46 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D4A C023 FFE8      01189         movff           REG_EE, WREG
000D4E EC?? F???      01190         call            WR_DATA
000D52 2A22           01191         incf            L_EE
000D54 0012           01192         return
Warning[205]: Found directive in column 1. (end)
                      01193 end

Errors   :     0
Warnings :    73 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

