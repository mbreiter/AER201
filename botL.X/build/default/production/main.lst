MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008     
                      00009     
                      00010 
                      00011 
                      00012 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00047         keyB
  00000008            00048         key7
  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit, databyte
  0000                00100     extern WRITE_ARDUINO, READ_ARDUINO, INIT_RTC, INIT_ARDUINO
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7473 6E61 6964 00107     StandBy     db          "standing by ... ... standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7473 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 613C 733E 726F 00108     StandbyInfo db          "<a>sort <b>last log <c>perm logs <d>pc", 0
       2074 623C 6C3E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7361 2074 6F6C 
       2067 633C 703E 
       7265 206D 6F6C 
       7367 3C20 3E64 
       6370 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6974 656D 003A 00109     Log1        db          "time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6173 6576 3A64 00111     LogInfo1    db          "saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 623C 6361 3E6B 00112     LogInfo2    db          "<back> to stats", 0
       7420 206F 7473 
       7461 0073 
Warning[207]: Found label after column 1. (PermLog1)
00008C 6570 6D72 6E61 00113     PermLog1    db          "permanent logs ", 0
       6E65 2074 6F6C 
       7367 0020 
Warning[207]: Found label after column 1. (PermLog2)
00009C 7270 7365 2073 00114     PermLog2    db          "press <1> to <9>", 0       
       313C 203E 6F74 
       3C20 3E39 0000 
Warning[207]: Found label after column 1. (Exe1)
0000AE 6F73 7472 6E69 00115     Exe1        db          "sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000BA 653C 646E 003E 00116     Exe2        db          "<end>", 0
Warning[207]: Found label after column 1. (PC1)
0000C0 6370 6920 746E 00117     PC1         db          "pc interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000CE 783C 6566 3E72 00118     PC2         db          "<xfer> to begin", 0
       7420 206F 6562 
       6967 006E 
Warning[207]: Found label after column 1. (PCTransfer)
0000DE 7274 6E61 6673 00119     PCTransfer  db          "transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000EE 6F63 706D 656C 00120     PCComplete  db          "complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000F8 6173 6976 676E 00121     SAVE        db          "saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
000102 2F6E 0061      00122     NoData      db          "n/a", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 LOAD_STANDBY_TIME
00001C AED5           00271         btfss   T0CON, TMR0ON
00001E 0012           00272         return
                      00273         
000020 0EFF           00274         movlw   0xff
000022 6ED7           00275         movwf   TMR0H
000024 0EFF           00276         movlw   0xff
000026 6ED6           00277         movwf   TMR0L
                      00278 
000028 0012           00279         return  
                      00280 
00002A                00281 LOAD_EXE_TIME
00002A AED5           00282         btfss   T0CON, TMR0ON
00002C 0012           00283         return
                      00284         
00002E 0EC3           00285         movlw   0xc3
000030 6ED7           00286         movwf   TMR0H
000032 0E28           00287         movlw   0x28
000034 6ED6           00288         movwf   TMR0L
                      00289         
000036 0012           00290         return
                      00291         
000038                00292 ISR_HIGH
                      00293         saveContext
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000038 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00003C 6E14               M     movwf   temp_W                  ; save W
                      00294         
00003E 0E00           00295         movlw   0x00
000040 6238           00296         cpfseq  inStandby
000042 EC?? F???      00297         call    Shift
                      00298         
                      00299         ;reset timer, but need to check which time increment 
000046 0E00           00300         movlw   0x00
000048 6238           00301         cpfseq  inStandby
00004A EC?? F???      00302         call    LOAD_STANDBY_TIME
                      00303         
00004E 0EFF           00304         movlw   0xff
000050 6238           00305         cpfseq  inStandby
000052 EC?? F???      00306         call    LOAD_EXE_TIME
                      00307                 
                      00308         ;timer interrupt
000056 A4F2           00309         btfss   INTCON, TMR0IF
000058 EF?? F???      00310         goto    END_ISR_HIGH
                      00311         
                      00312         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00005C C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000060 0E0F               M         movlw   0x0f
000062 1617               M         andwf   temp
000064 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000066 6217               M         cpfseq  temp
000068 EF?? F???          M         goto    ones
                          M         
00006C 0E10               M         movlw   b'00010000'
00006E 2619               M         addwf   OP_INT
000070 0EF0               M         movlw   0xf0
000072 1619               M         andwf   OP_INT
000074 0EA0               M         movlw   0xa0
000076 6019               M         cpfslt  OP_INT
                          M         
000078 6A19               M         clrf    OP_INT
00007A EF?? F???          M         goto    endBCD
                          M         
00007E                    M ones
00007E 2A19               M         incf    OP_INT
000080 EF?? F???          M         goto    endBCD
000084                    M endBCD
000084 0000               M         nop
000086 0E00           00313         movlw   d'0'
000088 6219           00314         cpfseq  OP_INT
00008A EF?? F???      00315         goto    END_ISR_HIGH
                      00316         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
00008E C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
000092 0E0F               M         movlw   0x0f
000094 1617               M         andwf   temp
000096 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000098 6217               M         cpfseq  temp
00009A EF?? F???          M         goto    ones
                          M         
00009E 0E10               M         movlw   b'00010000'
0000A0 2618               M         addwf   OP_sec
0000A2 0EF0               M         movlw   0xf0
0000A4 1618               M         andwf   OP_sec
0000A6 0EA0               M         movlw   0xa0
0000A8 6018               M         cpfslt  OP_sec
                          M         
0000AA 6A18               M         clrf    OP_sec
0000AC EF?? F???          M         goto    endBCD
                          M         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000B0                    M ones
0000B0 2A18               M         incf    OP_sec
0000B2 EF?? F???          M         goto    endBCD
0000B6                    M endBCD
0000B6 0000               M         nop
                      00317 
0000B8                00318 END_ISR_HIGH
0000B8 94F2           00319         bcf     INTCON, TMR0IF
                      00320         restoreContext
0000BA 3814               M     swapf   temp_W, 0               ; restore W first
0000BC C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000C0 0010           00321         retfie
                      00322 
0000C2                00323 ISR_LOW
                      00324         saveContext
0000C2 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000C6 6E14               M     movwf   temp_W                  ; save W
                      00325         ; KEYPAD INTERRUPT
0000C8 A0F0           00326         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000CA EF?? F???      00327         goto    END_ISR_LOW
                      00328 
                      00329         ; check operation status
0000CE 0EFF           00330         movlw   0xff                    ; If in operation, skip return
0000D0 621E           00331         cpfseq  inExecution
0000D2 EF?? F???      00332         goto    END_ISR_LOW
                      00333 
                      00334         ; process KEY
0000D6 3881           00335         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000D8 0B0F           00336         andlw   0x0f
0000DA 6E12           00337         movwf   KEY_ISR
                      00338         
0000DC 0E0C           00339         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
0000DE 6212           00340         cpfseq  KEY_ISR                 ; If key was '*', skip return
0000E0 EF?? F???      00341         goto    END_ISR_LOW
                      00342         
                      00343         ; reset program counter - emergency stop recorded. 
0000E4 9ED5           00344         bcf     T0CON, TMR0ON
0000E6 EC?? F???      00345         call    SAVE_EXE_TIME
                      00346                 
                      00347         ; Clear inExecution flag to stop '*' interrupts
0000EA 6A1E           00348         clrf    inExecution
0000EC 0E01           00349         movlw   d'1'
0000EE 6E37           00350         movwf   STOP_CONDITION
                      00351 
0000F0 EC?? F???      00352         call    SaveData
                      00353         
0000F4 6AFF           00354         clrf    TOSU
0000F6 6AFE           00355         clrf    TOSH
0000F8 6AFD           00356         clrf    TOSL
0000FA 90F0           00357         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00358         restoreContext
0000FC 3814               M     swapf   temp_W, 0               ; restore W first
0000FE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000102 0010           00359         retfie
                      00360 
000104                00361 END_ISR_LOW
000104 90F0           00362         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00363         restoreContext
000106 3814               M     swapf   temp_W, 0               ; restore W first
000108 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00010C 0010           00364         retfie
                      00365 
                      00366 ;*******************************************************************************
                      00367 ; main
                      00368 ;*******************************************************************************
00010E                00369 INIT
00010E 0E70           00370         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000110 6ED3           00371         movwf   OSCCON
                      00372         
                      00373         ; i/o
000112 0E00           00374         movlw   b'00000000'
000114 6E92           00375         movwf   TRISA
000116 0EFF           00376         movlw   b'11111111'
000118 6E93           00377         movwf   TRISB               ; keypad
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00011A 0E00           00378         movlw   b'00000000'
00011C 6E94           00379         movwf   TRISC
00011E 0E00           00380         movlw   b'00000000'
000120 6E95           00381         movwf   TRISD
000122 0E03           00382         movlw   b'00000011'
000124 6E96           00383         movwf   TRISE
                      00384 
                      00385         ; clear ports
000126 0E00           00386         movlw   b'00000000'
000128 6E89           00387         movwf   LATA
00012A 0E00           00388         movlw   b'00000000'
00012C 6E8A           00389         movwf   LATB
00012E 0E00           00390         movlw   b'00000000'
000130 6E8B           00391         movwf   LATC
000132 0E00           00392         movlw   b'00000000'
000134 6E8C           00393         movwf   LATD
000136 0E00           00394         movlw   b'00000000'
000138 6E8D           00395         movwf   LATE
                      00396         
00013A 0E00           00397         movlw   b'00000000'
00013C 6EC2           00398         movwf   ADCON0
                      00399         
                      00400         ; initializations
00013E EC?? F???      00401         call    InitLCD
                      00402         ConfigLCD
000142 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000144 EC?? F???          M           call      WR_INS
                          M 
000148 0E0C               M           movlw     b'00001100'    ; display on/off
00014A EC?? F???          M           call      WR_INS
00014E 0E01               M           movlw     b'00000001'    ; Clear ram
000150 EC?? F???          M           call      WR_INS
                      00403         
000154 EC?? F???      00404         call    i2c_common_setup
000158 EC?? F???      00405         call    RTC_INIT
00015C EC?? F???      00406         call    INIT_ARDUINO
000160 EC?? F???      00407         call    INIT_USART
                      00408         
000164 EC?? F???      00409         call    ClrLCD
                      00410         Display Welcome
  0000                    M         local   loop
000168 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
00016A 6EF8               M         movwf   TBLPTRU
00016C 0E??               M         movlw   high Welcome    ; Move Table<15:8>
00016E 6EF7               M         movwf   TBLPTRH
000170 0E??               M         movlw   low Welcome     ; Move Table<7:0>
000172 6EF6               M         movwf   TBLPTRL
000174 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000176 50F5               M         movf    TABLAT, W
000178                    M loop
000178 EC?? F???          M         call    WR_DATA         ; write to LCD
00017C 000B               M         tblrd+*                 ; next row in table
00017E 50F5               M         movf    TABLAT, W
000180 E1??               M         bnz     loop
000182 EC?? F???      00411         call    LCD_L2
                      00412         Display Team
  0000                    M         local   loop
000186 0E??               M         movlw   upper Team      ; Move Table<20:16>
000188 6EF8               M         movwf   TBLPTRU
00018A 0E??               M         movlw   high Team       ; Move Table<15:8>
00018C 6EF7               M         movwf   TBLPTRH
00018E 0E??               M         movlw   low Team        ; Move Table<7:0>
000190 6EF6               M         movwf   TBLPTRL
000192 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000194 50F5               M         movf    TABLAT, W
000196                    M loop
000196 EC?? F???          M         call    WR_DATA         ; write to LCD
00019A 000B               M         tblrd+*                 ; next row in table
00019C 50F5               M         movf    TABLAT, W
00019E E1??               M         bnz     loop
                      00413         
                      00414         Delay50N delayR, 0x05
  0000                    M         local   loop
0001A0 0E05               M         movlw   0x05
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001A2 6E1A               M         movwf   delayR
                          M 
0001A4                    M loop
0001A4 EC?? F???          M         call    Delay50ms
0001A8 2E1A               M         decfsz  delayR
0001AA EF?? F???          M         goto    loop
                      00415         ; request eska
0001AE 0E02           00416         movlw   d'2'
0001B0 CFE8 F???      00417         movff   WREG, databyte
0001B4 EC?? F???      00418         call    WRITE_ARDUINO
                      00419         Delay50N delayR, 0x05
  0000                    M         local   loop
0001B8 0E05               M         movlw   0x05
0001BA 6E1A               M         movwf   delayR
                          M 
0001BC                    M loop
0001BC EC?? F???          M         call    Delay50ms
0001C0 2E1A               M         decfsz  delayR
0001C2 EF?? F???          M         goto    loop
                      00420         ; get eska
0001C6 EC?? F???      00421         call    READ_ARDUINO
0001CA 6E2D           00422         movwf   ESKA
                      00423         
                      00424         Delay50N delayR, 0x05
  0000                    M         local   loop
0001CC 0E05               M         movlw   0x05
0001CE 6E1A               M         movwf   delayR
                          M 
0001D0                    M loop
0001D0 EC?? F???          M         call    Delay50ms
0001D4 2E1A               M         decfsz  delayR
0001D6 EF?? F???          M         goto    loop
                      00425         ; request eska without a cap
0001DA 0E03           00426         movlw   d'3'
0001DC CFE8 F???      00427         movff   WREG, databyte
0001E0 EC?? F???      00428         call    WRITE_ARDUINO
                      00429         Delay50N delayR, 0x05
  0000                    M         local   loop
0001E4 0E05               M         movlw   0x05
0001E6 6E1A               M         movwf   delayR
                          M 
0001E8                    M loop
0001E8 EC?? F???          M         call    Delay50ms
0001EC 2E1A               M         decfsz  delayR
0001EE EF?? F???          M         goto    loop
                      00430         ; get eska without a cap
0001F2 EC?? F???      00431         call    READ_ARDUINO
0001F6 6E2E           00432         movwf   ESKA_NOCAP
                      00433         
                      00434         Delay50N delayR, 0x05
  0000                    M         local   loop
0001F8 0E05               M         movlw   0x05
0001FA 6E1A               M         movwf   delayR
                          M 
0001FC                    M loop
0001FC EC?? F???          M         call    Delay50ms
000200 2E1A               M         decfsz  delayR
000202 EF?? F???          M         goto    loop
                      00435         ; request yop
000206 0E04           00436         movlw   d'4'
000208 CFE8 F???      00437         movff   WREG, databyte
00020C EC?? F???      00438         call    WRITE_ARDUINO
                      00439         Delay50N delayR, 0x05
  0000                    M         local   loop
000210 0E05               M         movlw   0x05
000212 6E1A               M         movwf   delayR
                          M 
000214                    M loop
000214 EC?? F???          M         call    Delay50ms
000218 2E1A               M         decfsz  delayR
00021A EF?? F???          M         goto    loop
                      00440         ; get yop
00021E EC?? F???      00441         call    READ_ARDUINO
000222 6E2F           00442         movwf   YOP
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00443         
                      00444         Delay50N delayR, 0x05
  0000                    M         local   loop
000224 0E05               M         movlw   0x05
000226 6E1A               M         movwf   delayR
                          M 
000228                    M loop
000228 EC?? F???          M         call    Delay50ms
00022C 2E1A               M         decfsz  delayR
00022E EF?? F???          M         goto    loop
                      00445         ; request yop without a cap
000232 0E05           00446         movlw   d'5'
000234 CFE8 F???      00447         movff   WREG, databyte
000238 EC?? F???      00448         call    WRITE_ARDUINO
                      00449         Delay50N delayR, 0x05
  0000                    M         local   loop
00023C 0E05               M         movlw   0x05
00023E 6E1A               M         movwf   delayR
                          M 
000240                    M loop
000240 EC?? F???          M         call    Delay50ms
000244 2E1A               M         decfsz  delayR
000246 EF?? F???          M         goto    loop
                      00450         ; get yop without a cap
00024A EC?? F???      00451         call    READ_ARDUINO
00024E 6E30           00452         movwf   YOP_NOCAP
                      00453         
                      00454         ; interrupts
000250 6AD0           00455         clrf    RCON
000252 6AF2           00456         clrf    INTCON
000254 6AF1           00457         clrf    INTCON2
000256 6AF0           00458         clrf    INTCON3
000258 8ED0           00459         bsf     RCON, IPEN          ; priority mode
00025A 8EF2           00460         bsf     INTCON, GIEH        ; permit global interrupts
00025C 8CF2           00461         bsf     INTCON, GIEL
00025E 8AF1           00462         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000260 8AF2           00463         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000262 84F2           00464         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000264 84F1           00465         bsf     INTCON2, TMR0IP     ; set to high priority
000266 86F0           00466         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
000268 9CF0           00467         bcf     INTCON3, INT1IP     ; keyboard to low priority
                      00468         
                      00469         ; setting up timer to sychronize with 1 second clock intervals
00026A 9ED5           00470         bcf     T0CON, TMR0ON
00026C 9CD5           00471         bcf     T0CON, T08BIT
00026E 9AD5           00472         bcf     T0CON, T0CS
000270 98D5           00473         bcf     T0CON, T0SE
000272 96D5           00474         bcf     T0CON, PSA
000274 94D5           00475         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
000276 82D5           00476         bsf     T0CON, T0PS1
000278 80D5           00477         bsf     T0CON, T0PS0
                      00478 
00027A 6A20           00479         clrf    H_EE
00027C 6A21           00480         clrf    L_EE
00027E 6A??           00481         clrf    tens_digit
000280 6A??           00482         clrf    ones_digit
                      00483                 
                      00484 ;       clrf    DETECTION_VAL
                      00485 ;       clrf    ESKA
                      00486 ;       clrf    ESKA_NOCAP
                      00487 ;       clrf    YOP
                      00488 ;       clrf    YOP_NOCAP
                      00489 ;       clrf    TOTAL_BOTTLES
                      00490 ;       clrf    COLLECTIONS_COUNT
                      00491         
000282 0EF2           00492         movlw   b'11110010'    ; Set required keypad inputs
000284 6E93           00493         movwf   TRISB
000286 0E03           00494         movlw   b'00000011'
000288 6E96           00495         movwf   TRISE
00028A D???           00496         bra     STANDBY
                      00497                 
                      00498 ;*******************************************************************************
                      00499 ; standby mode
                      00500 ;*******************************************************************************
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00028C                00501 STANDBY
00028C 0E00           00502         movlw   b'00000000'
00028E 6E84           00503         movwf   PORTE
000290 0E00           00504         movlw   b'00000000'
000292 6E80           00505         movwf   PORTA
                      00506         
000294 6838           00507         setf    inStandby       
000296 EC?? F???      00508         call    ClrLCD
                      00509         Display StandBy
  0000                    M         local   loop
00029A 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
00029C 6EF8               M         movwf   TBLPTRU
00029E 0E??               M         movlw   high StandBy    ; Move Table<15:8>
0002A0 6EF7               M         movwf   TBLPTRH
0002A2 0E??               M         movlw   low StandBy     ; Move Table<7:0>
0002A4 6EF6               M         movwf   TBLPTRL
0002A6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002A8 50F5               M         movf    TABLAT, W
0002AA                    M loop
0002AA EC?? F???          M         call    WR_DATA         ; write to LCD
0002AE 000B               M         tblrd+*                 ; next row in table
0002B0 50F5               M         movf    TABLAT, W
0002B2 E1??               M         bnz     loop
0002B4 EC?? F???      00510         call    LCD_L2
                      00511         Display StandbyInfo
  0000                    M         local   loop
0002B8 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
0002BA 6EF8               M         movwf   TBLPTRU
0002BC 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
0002BE 6EF7               M         movwf   TBLPTRH
0002C0 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
0002C2 6EF6               M         movwf   TBLPTRL
0002C4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0002C6 50F5               M         movf    TABLAT, W
0002C8                    M loop
0002C8 EC?? F???          M         call    WR_DATA         ; write to LCD
0002CC 000B               M         tblrd+*                 ; next row in table
0002CE 50F5               M         movf    TABLAT, W
0002D0 E1??               M         bnz     loop
                      00512         
0002D2 0EFF           00513         movlw   0xff
0002D4 6ED7           00514         movwf   TMR0H
0002D6 0EFF           00515         movlw   0xff
0002D8 6ED6           00516         movwf   TMR0L
0002DA 8ED5           00517         bsf     T0CON, TMR0ON       ; turning on timer (for scrolling screen)
                      00518 
0002DC                00519 HOLD_STANDBY
0002DC EC?? F???      00520         call    READ_KEY_TIME
                      00521 
                      00522         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
0002E0 0E03               M         movlw   keyA                ; poll for mode
0002E2 6210               M         cpfseq  KEY                 ; check this against key press
0002E4 EF?? F???          M         goto    Exit
                          M 
0002E8                    M Next
0002E8 6A89               M         clrf    LATA                ; clear pins before proceeding
0002EA 6A8A               M         clrf    LATB
0002EC 6A8B               M         clrf    LATC
0002EE 6A8C               M         clrf    LATD
0002F0 EF?? F???          M         goto    EXECUTION
                          M 
0002F4                    M Exit
0002F4 0000               M         nop
                      00523         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002F6 0E07               M         movlw   keyB                ; poll for mode
0002F8 6210               M         cpfseq  KEY                 ; check this against key press
0002FA EF?? F???          M         goto    Exit
                          M 
0002FE                    M Next
0002FE 6A89               M         clrf    LATA                ; clear pins before proceeding
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000300 6A8A               M         clrf    LATB
000302 6A8B               M         clrf    LATC
000304 6A8C               M         clrf    LATD
000306 EF?? F???          M         goto    LOG
                          M 
00030A                    M Exit
00030A 0000               M         nop
                      00524         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
00030C 0E0B               M         movlw   keyC                ; poll for mode
00030E 6210               M         cpfseq  KEY                 ; check this against key press
000310 EF?? F???          M         goto    Exit
                          M 
000314                    M Next
000314 6A89               M         clrf    LATA                ; clear pins before proceeding
000316 6A8A               M         clrf    LATB
000318 6A8B               M         clrf    LATC
00031A 6A8C               M         clrf    LATD
00031C EF?? F???          M         goto    PERM_LOG
                          M 
000320                    M Exit
000320 0000               M         nop
                      00525         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000322 0E0F               M         movlw   keyD                ; poll for mode
000324 6210               M         cpfseq  KEY                 ; check this against key press
000326 EF?? F???          M         goto    Exit
                          M 
00032A                    M Next
00032A 6A89               M         clrf    LATA                ; clear pins before proceeding
00032C 6A8A               M         clrf    LATB
00032E 6A8B               M         clrf    LATC
000330 6A8C               M         clrf    LATD
000332 EF?? F???          M         goto    PC_MODE
                          M 
000336                    M Exit
000336 0000               M         nop
000338 D???           00526         bra     HOLD_STANDBY
                      00527 
                      00528 ;*******************************************************************************
                      00529 ; execution mode
                      00530 ;*******************************************************************************
                      00531         
00033A                00532 EXECUTION
                      00533         ;bcf    T0CON, TMR0ON       ; turning off standby timer
00033A 6A38           00534         clrf    inStandby       
00033C EC?? F???      00535         call    ClearEEPROM_21
                      00536         
                      00537         ; save the starting time
000340 EC?? F???      00538         call    SAVE_TIME
                      00539                 
                      00540         ; display
000344 681E           00541         setf    inExecution
000346 EC?? F???      00542         call    ClrLCD
                      00543         Display Exe1
  0000                    M         local   loop
00034A 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
00034C 6EF8               M         movwf   TBLPTRU
00034E 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000350 6EF7               M         movwf   TBLPTRH
000352 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000354 6EF6               M         movwf   TBLPTRL
000356 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000358 50F5               M         movf    TABLAT, W
00035A                    M loop
00035A EC?? F???          M         call    WR_DATA         ; write to LCD
00035E 000B               M         tblrd+*                 ; next row in table
000360 50F5               M         movf    TABLAT, W
000362 E1??               M         bnz     loop
                      00544         
000364 0EC3           00545         movlw   0xc3
000366 6ED7           00546         movwf   TMR0H
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000368 0E28           00547         movlw   0x28
00036A 6ED6           00548         movwf   TMR0L
                      00549         
00036C 8ED5           00550         bsf     T0CON, TMR0ON       ; turning on timer
                      00551         
                      00552         ; initialize variables
00036E 6A18           00553         clrf    OP_sec
000370 6A19           00554         clrf    OP_INT
                      00555         
                      00556         ; turn motors on and begin the sort
000372 0E01           00557         movlw   d'1'
000374 CFE8 F???      00558         movff   WREG, databyte
000378 EC?? F???      00559         call    WRITE_ARDUINO
                      00560         Delay50N delayR, 0x03
  0000                    M         local   loop
00037C 0E03               M         movlw   0x03
00037E 6E1A               M         movwf   delayR
                          M 
000380                    M loop
000380 EC?? F???          M         call    Delay50ms
000384 2E1A               M         decfsz  delayR
000386 EF?? F???          M         goto    loop
                      00561         
00038A EF?? F???      00562         goto    DETECTIONS
                      00563         
00038E                00564 CHECK_TIMEOUT
00038E 3818           00565     swapf       OP_sec, 0; 100's seconds
000390 6E17           00566     movwf       temp
000392 0E0F           00567     movlw       0x0f
000394 1617           00568     andwf       temp
000396 0E00           00569     movlw       d'0'
000398 5E17           00570     subwf       temp
00039A E0??           00571     bz  EXIT_EXE        ; if 100 second, continue to check for 150s then 120s.
                      00572 
00039C 0012           00573     return
                      00574         
00039E                00575 DETECTIONS
                      00576         ; displaying the execution time in seconds
00039E EC?? F???      00577         call    LCD_L2
0003A2 3818           00578         swapf   OP_sec, 0       ; 100's seconds
0003A4 6E17           00579         movwf   temp
0003A6 0E0F           00580         movlw   0x0f
0003A8 1617           00581         andwf   temp
0003AA C017 FFE8      00582         movff   temp, WREG
0003AE 0F30           00583         addlw   0x30
0003B0 EC?? F???      00584         call    WR_DATA
                      00585 
0003B4 C018 F017      00586         movff   OP_sec, temp    ; 10's seconds
0003B8 0E0F           00587         movlw   0x0f
0003BA 1617           00588         andwf   temp            ; Temp = lower nibble of Op_sec
0003BC C017 FFE8      00589         movff   temp, WREG      ; W = Temp
0003C0 0F30           00590         addlw   0x30            ; Convert to ASCII
0003C2 EC?? F???      00591         call    WR_DATA
                      00592         
Warning[202]: Argument out of range.  Least significant bits used.
0003C6 3819           00593         swapf   OP_INT, WREG    ;1's seconds
0003C8 6E17           00594         movwf   temp
0003CA 0E0F           00595         movlw   0x0f
0003CC 1617           00596         andwf   temp
0003CE C017 FFE8      00597         movff   temp, WREG
0003D2 0F30           00598         addlw   0x30
0003D4 EC?? F???      00599         call    WR_DATA
                      00600 
0003D8 0E73           00601         movlw   0x73            ; Write 's'
0003DA EC?? F???      00602         call    WR_DATA
                      00603         
0003DE CF80 F017      00604         movff   PORTA, temp     ; putting the value of port a into temp
0003E2 B817           00605         btfsc   temp, 4         ; testing if to proceed or not
0003E4 D???           00606         bra     DETECTIONS
                      00607         
0003E6 D???           00608         bra     EXIT_EXE
                      00609         
0003E8                00610 EXIT_EXE
                      00611         ; stop timer and save the execution time to eeprom
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003E8 9ED5           00612         bcf     T0CON, TMR0ON
0003EA EC?? F???      00613         call    SAVE_EXE_TIME
0003EE EC?? F???      00614         call    ClrLCD
                      00615         Display SAVE
  0000                    M         local   loop
0003F2 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
0003F4 6EF8               M         movwf   TBLPTRU
0003F6 0E??               M         movlw   high SAVE       ; Move Table<15:8>
0003F8 6EF7               M         movwf   TBLPTRH
0003FA 0E??               M         movlw   low SAVE        ; Move Table<7:0>
0003FC 6EF6               M         movwf   TBLPTRL
0003FE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000400 50F5               M         movf    TABLAT, W
000402                    M loop
000402 EC?? F???          M         call    WR_DATA         ; write to LCD
000406 000B               M         tblrd+*                 ; next row in table
000408 50F5               M         movf    TABLAT, W
00040A E1??               M         bnz     loop
                      00616                 
                      00617         ; Clear inExecution flag to stop '*' interrupts
00040C 6A1E           00618         clrf    inExecution
00040E EC?? F???      00619         call    SaveData
000412 D???           00620         bra     INIT
                      00621 
                      00622 ;*******************************************************************************
                      00623 ; sorting statistics log mode
                      00624 ;*******************************************************************************
                      00625         
000414                00626 LOG
000414 6A38           00627         clrf    inStandby
000416 EC?? F???      00628         call    ClrLCD
                      00629         Display Log1
  0000                    M         local   loop
00041A 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00041C 6EF8               M         movwf   TBLPTRU
00041E 0E??               M         movlw   high Log1       ; Move Table<15:8>
000420 6EF7               M         movwf   TBLPTRH
000422 0E??               M         movlw   low Log1        ; Move Table<7:0>
000424 6EF6               M         movwf   TBLPTRL
000426 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000428 50F5               M         movf    TABLAT, W
00042A                    M loop
00042A EC?? F???          M         call    WR_DATA         ; write to LCD
00042E 000B               M         tblrd+*                 ; next row in table
000430 50F5               M         movf    TABLAT, W
000432 E1??               M         bnz     loop
                      00630 
                      00631         ; display most recent run data
000434 0E0A           00632         movlw   d'10'
000436 6E21           00633         movwf   L_EE
000438 EC?? F???      00634         call    DisplayExeTime
                      00635 
00043C EC?? F???      00636         call    LCD_L2
000440 0E0D           00637         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
000442 6E21           00638         movwf   L_EE
000444 EC?? F???      00639         call    DispOpSort
                      00640 
000448                00641 HOLD_LOG
000448 EC?? F???      00642         call    READ_KEY
                      00643         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
00044C 0E07               M         movlw   keyB                ; poll for mode
00044E 6210               M         cpfseq  KEY                 ; check this against key press
000450 EF?? F???          M         goto    Exit
                          M 
000454                    M Next
000454 6A89               M         clrf    LATA                ; clear pins before proceeding
000456 6A8A               M         clrf    LATB
000458 6A8B               M         clrf    LATC
00045A 6A8C               M         clrf    LATD
00045C EF?? F???          M         goto    LOG_INFO
                          M 
000460                    M Exit
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000460 0000               M         nop
                      00644         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000462 0E0D               M         movlw   key0                ; poll for mode
000464 6210               M         cpfseq  KEY                 ; check this against key press
000466 EF?? F???          M         goto    Exit
                          M 
00046A                    M Next
00046A 6A89               M         clrf    LATA                ; clear pins before proceeding
00046C 6A8A               M         clrf    LATB
00046E 6A8B               M         clrf    LATC
000470 6A8C               M         clrf    LATD
000472 EF?? F???          M         goto    STANDBY
                          M 
000476                    M Exit
000476 0000               M         nop
000478 D???           00645         bra     HOLD_LOG
                      00646 
00047A                00647 LOG_INFO
00047A EC?? F???      00648         call    ClrLCD
00047E 6A21           00649         clrf    L_EE
000480 EC?? F???      00650         call    DispOpRTC
                      00651         
000484 EC?? F???      00652         call    LCD_L2
                      00653         Display LogInfo2
  0000                    M         local   loop
000488 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00048A 6EF8               M         movwf   TBLPTRU
00048C 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00048E 6EF7               M         movwf   TBLPTRH
000490 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000492 6EF6               M         movwf   TBLPTRL
000494 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000496 50F5               M         movf    TABLAT, W
000498                    M loop
000498 EC?? F???          M         call    WR_DATA         ; write to LCD
00049C 000B               M         tblrd+*                 ; next row in table
00049E 50F5               M         movf    TABLAT, W
0004A0 E1??               M         bnz     loop
0004A2 6A20           00654         clrf    H_EE
0004A4 6A21           00655         clrf    L_EE
0004A6                00656 HOLD_LOG_INFO
0004A6 EC?? F???      00657         call    READ_KEY
                      00658         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0004AA 0E0D               M         movlw   key0                ; poll for mode
0004AC 6210               M         cpfseq  KEY                 ; check this against key press
0004AE EF?? F???          M         goto    Exit
                          M 
0004B2                    M Next
0004B2 6A89               M         clrf    LATA                ; clear pins before proceeding
0004B4 6A8A               M         clrf    LATB
0004B6 6A8B               M         clrf    LATC
0004B8 6A8C               M         clrf    LATD
0004BA EF?? F???          M         goto    LOG
                          M 
0004BE                    M Exit
0004BE 0000               M         nop
0004C0 D???           00659         bra     HOLD_LOG
                      00660         
                      00661 ;*******************************************************************************
                      00662 ; permanent logs
                      00663 ;*******************************************************************************
                      00664 
0004C2                00665 PERM_LOG
0004C2 6A38           00666         clrf    inStandby
0004C4 EC?? F???      00667         call    ClrLCD
                      00668         Display PermLog1
  0000                    M         local   loop
0004C8 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0004CA 6EF8               M         movwf   TBLPTRU
0004CC 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004CE 6EF7               M         movwf   TBLPTRH
0004D0 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0004D2 6EF6               M         movwf   TBLPTRL
0004D4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004D6 50F5               M         movf    TABLAT, W
0004D8                    M loop
0004D8 EC?? F???          M         call    WR_DATA         ; write to LCD
0004DC 000B               M         tblrd+*                 ; next row in table
0004DE 50F5               M         movf    TABLAT, W
0004E0 E1??               M         bnz     loop
0004E2 EC?? F???      00669         call    LCD_L2
                      00670         Display PermLog2
  0000                    M         local   loop
0004E6 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0004E8 6EF8               M         movwf   TBLPTRU
0004EA 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0004EC 6EF7               M         movwf   TBLPTRH
0004EE 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0004F0 6EF6               M         movwf   TBLPTRL
0004F2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0004F4 50F5               M         movf    TABLAT, W
0004F6                    M loop
0004F6 EC?? F???          M         call    WR_DATA         ; write to LCD
0004FA 000B               M         tblrd+*                 ; next row in table
0004FC 50F5               M         movf    TABLAT, W
0004FE E1??               M         bnz     loop
                      00671         
000500                00672 HOLD_PERM_LOG
000500 EC?? F???      00673         call    READ_KEY
                      00674         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000504 0E0D               M         movlw   key0                ; poll for mode
000506 6210               M         cpfseq  KEY                 ; check this against key press
000508 EF?? F???          M         goto    Exit
                          M 
00050C                    M Next
00050C 6A89               M         clrf    LATA                ; clear pins before proceeding
00050E 6A8A               M         clrf    LATB
000510 6A8B               M         clrf    LATC
000512 6A8C               M         clrf    LATD
000514 EF?? F???          M         goto    STANDBY
                          M 
000518                    M Exit
000518 0000               M         nop
                      00675         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
00051A 0E00               M         movlw   key1                ; poll for mode
00051C 6210               M         cpfseq  KEY                 ; check this against key press
00051E EF?? F???          M         goto    Exit
                          M 
000522                    M Next
000522 6A89               M         clrf    LATA                ; clear pins before proceeding
000524 6A8A               M         clrf    LATB
000526 6A8B               M         clrf    LATC
000528 6A8C               M         clrf    LATD
00052A EF?? F???          M         goto    PLOG
                          M 
00052E                    M Exit
00052E 0000               M         nop
                      00676         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
000530 0E01               M         movlw   key2                ; poll for mode
000532 6210               M         cpfseq  KEY                 ; check this against key press
000534 EF?? F???          M         goto    Exit
                          M 
000538                    M Next
000538 6A89               M         clrf    LATA                ; clear pins before proceeding
00053A 6A8A               M         clrf    LATB
00053C 6A8B               M         clrf    LATC
00053E 6A8C               M         clrf    LATD
000540 EF?? F???          M         goto    PLOG
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000544                    M Exit
000544 0000               M         nop
                      00677         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000546 0E02               M         movlw   key3                ; poll for mode
000548 6210               M         cpfseq  KEY                 ; check this against key press
00054A EF?? F???          M         goto    Exit
                          M 
00054E                    M Next
00054E 6A89               M         clrf    LATA                ; clear pins before proceeding
000550 6A8A               M         clrf    LATB
000552 6A8B               M         clrf    LATC
000554 6A8C               M         clrf    LATD
000556 EF?? F???          M         goto    PLOG
                          M 
00055A                    M Exit
00055A 0000               M         nop
                      00678         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
00055C 0E04               M         movlw   key4                ; poll for mode
00055E 6210               M         cpfseq  KEY                 ; check this against key press
000560 EF?? F???          M         goto    Exit
                          M 
000564                    M Next
000564 6A89               M         clrf    LATA                ; clear pins before proceeding
000566 6A8A               M         clrf    LATB
000568 6A8B               M         clrf    LATC
00056A 6A8C               M         clrf    LATD
00056C EF?? F???          M         goto    PLOG
                          M 
000570                    M Exit
000570 0000               M         nop
                      00679         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000572 0E05               M         movlw   key5                ; poll for mode
000574 6210               M         cpfseq  KEY                 ; check this against key press
000576 EF?? F???          M         goto    Exit
                          M 
00057A                    M Next
00057A 6A89               M         clrf    LATA                ; clear pins before proceeding
00057C 6A8A               M         clrf    LATB
00057E 6A8B               M         clrf    LATC
000580 6A8C               M         clrf    LATD
000582 EF?? F???          M         goto    PLOG
                          M 
000586                    M Exit
000586 0000               M         nop
                      00680         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000588 0E06               M         movlw   key6                ; poll for mode
00058A 6210               M         cpfseq  KEY                 ; check this against key press
00058C EF?? F???          M         goto    Exit
                          M 
000590                    M Next
000590 6A89               M         clrf    LATA                ; clear pins before proceeding
000592 6A8A               M         clrf    LATB
000594 6A8B               M         clrf    LATC
000596 6A8C               M         clrf    LATD
000598 EF?? F???          M         goto    PLOG
                          M 
00059C                    M Exit
00059C 0000               M         nop
                      00681         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
00059E 0E08               M         movlw   key7                ; poll for mode
0005A0 6210               M         cpfseq  KEY                 ; check this against key press
0005A2 EF?? F???          M         goto    Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005A6                    M Next
0005A6 6A89               M         clrf    LATA                ; clear pins before proceeding
0005A8 6A8A               M         clrf    LATB
0005AA 6A8B               M         clrf    LATC
0005AC 6A8C               M         clrf    LATD
0005AE EF?? F???          M         goto    PLOG
                          M 
0005B2                    M Exit
0005B2 0000               M         nop
                      00682         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0005B4 0E09               M         movlw   key8                ; poll for mode
0005B6 6210               M         cpfseq  KEY                 ; check this against key press
0005B8 EF?? F???          M         goto    Exit
                          M 
0005BC                    M Next
0005BC 6A89               M         clrf    LATA                ; clear pins before proceeding
0005BE 6A8A               M         clrf    LATB
0005C0 6A8B               M         clrf    LATC
0005C2 6A8C               M         clrf    LATD
0005C4 EF?? F???          M         goto    PLOG
                          M 
0005C8                    M Exit
0005C8 0000               M         nop
                      00683         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
0005CA 0E0A               M         movlw   key9                ; poll for mode
0005CC 6210               M         cpfseq  KEY                 ; check this against key press
0005CE EF?? F???          M         goto    Exit
                          M 
0005D2                    M Next
0005D2 6A89               M         clrf    LATA                ; clear pins before proceeding
0005D4 6A8A               M         clrf    LATB
0005D6 6A8B               M         clrf    LATC
0005D8 6A8C               M         clrf    LATD
0005DA EF?? F???          M         goto    PLOG
                          M 
0005DE                    M Exit
0005DE 0000               M         nop
0005E0 D???           00684         bra HOLD_PERM_LOG
                      00685         
0005E2                00686 PLOG
0005E2 6A38           00687         clrf    inStandby
0005E4 EC?? F???      00688         call    ClrLCD
                      00689         Display PermLog1
  0000                    M         local   loop
0005E8 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0005EA 6EF8               M         movwf   TBLPTRU
0005EC 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0005EE 6EF7               M         movwf   TBLPTRH
0005F0 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0005F2 6EF6               M         movwf   TBLPTRL
0005F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0005F6 50F5               M         movf    TABLAT, W
0005F8                    M loop
0005F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0005FC 000B               M         tblrd+*                 ; next row in table
0005FE 50F5               M         movf    TABLAT, W
000600 E1??               M         bnz     loop
                      00690         
                      00691         ; find the key press value
000602 C010 FFE8      00692         movff   KEY, WREG
000606 2AE8           00693         incf    WREG        ; W = KEY+1
000608 6E17           00694         movwf   temp
                      00695         
00060A 42E8           00696         rrncf   WREG        ; division by 4
00060C 9EE8           00697         bcf     WREG, 7     ; clear last bit, overflow from rotate
00060E 42E8           00698         rrncf   WREG        
000610 9EE8           00699         bcf     WREG, 7
000612 5E17           00700         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000614 C017 FFE8      00701         movff   temp, WREG
000618 C017 F011      00702         movff   temp, temp_KEY
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00061C 0D15           00703         mullw   d'21'       ; indexed as mutliples of 21
                      00704 
00061E                00705 displayNum
00061E C011 FFE8      00706         movff   temp_KEY, WREG
000622 0F30           00707         addlw   0x30
000624 EC?? F???      00708         call    WR_DATA
000628 0E3A           00709         movlw   ":"
00062A EC?? F???      00710         call    WR_DATA
00062E 0E20           00711         movlw   " "
000630 EC?? F???      00712         call    WR_DATA
                      00713         
000634 CFF3 F021      00714         movff   PRODL, L_EE
000638 0E00           00715         movlw   d'0'
00063A 2621           00716         addwf   L_EE
                      00717         READEE  OP_sec, H_EE, L_EE
00063C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000640 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000644 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000646 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000648 80A6               M         bsf     EECON1, RD          ; read EEPROM
00064A CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
00064E 2A21           00718         incf    L_EE
                      00719         READEE  OP_INT, H_EE, L_EE
000650 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000654 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000658 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00065A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00065C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00065E CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
000662 2A21           00720         incf    L_EE
000664 EC?? F???      00721         call    DisplayExeTime
000668 CFF3 F021      00722         movff   PRODL, L_EE
                      00723         
                      00724         ; reset eeprom to beginning
00066C EC?? F???      00725         call    LCD_L2
000670 CFF3 F021      00726         movff   PRODL, L_EE
000674 EC?? F???      00727         call    DispOpRTC
                      00728         
000678                00729 HOLD_PLOG
000678 EC?? F???      00730         call    READ_KEY
                      00731         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
00067C 0E03               M         movlw   keyA                ; poll for mode
00067E 6210               M         cpfseq  KEY                 ; check this against key press
000680 EF?? F???          M         goto    Exit
                          M 
000684                    M Next
000684 6A89               M         clrf    LATA                ; clear pins before proceeding
000686 6A8A               M         clrf    LATB
000688 6A8B               M         clrf    LATC
00068A 6A8C               M         clrf    LATD
00068C EF?? F???          M         goto    PLOG_DETAILS
                          M 
000690                    M Exit
000690 0000               M         nop
                      00732         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000692 0E0D               M         movlw   key0                ; poll for mode
000694 6210               M         cpfseq  KEY                 ; check this against key press
000696 EF?? F???          M         goto    Exit
                          M 
00069A                    M Next
00069A 6A89               M         clrf    LATA                ; clear pins before proceeding
00069C 6A8A               M         clrf    LATB
00069E 6A8B               M         clrf    LATC
0006A0 6A8C               M         clrf    LATD
0006A2 EF?? F???          M         goto    PERM_LOG
                          M 
0006A6                    M Exit
0006A6 0000               M         nop
0006A8 D???           00733         bra HOLD_PLOG
                      00734         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006AA                00735 PLOG_DETAILS
0006AA EC?? F???      00736         call    ClrLCD
                      00737         
                      00738         Display Log1
  0000                    M         local   loop
0006AE 0E??               M         movlw   upper Log1      ; Move Table<20:16>
0006B0 6EF8               M         movwf   TBLPTRU
0006B2 0E??               M         movlw   high Log1       ; Move Table<15:8>
0006B4 6EF7               M         movwf   TBLPTRH
0006B6 0E??               M         movlw   low Log1        ; Move Table<7:0>
0006B8 6EF6               M         movwf   TBLPTRL
0006BA 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006BC 50F5               M         movf    TABLAT, W
0006BE                    M loop
0006BE EC?? F???          M         call    WR_DATA         ; write to LCD
0006C2 000B               M         tblrd+*                 ; next row in table
0006C4 50F5               M         movf    TABLAT, W
0006C6 E1??               M         bnz     loop
0006C8 EC?? F???      00739         call    DisplayExeTime
                      00740         
0006CC EC?? F???      00741         call    LCD_L2
0006D0 EC?? F???      00742         call    DispOpSort
                      00743         
0006D4                00744 HOLD_PLOG_DETAILS
0006D4 EC?? F???      00745         call    READ_KEY
                      00746         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0006D8 0E0D               M         movlw   key0                ; poll for mode
0006DA 6210               M         cpfseq  KEY                 ; check this against key press
0006DC EF?? F???          M         goto    Exit
                          M 
0006E0                    M Next
0006E0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E2 6A8A               M         clrf    LATB
0006E4 6A8B               M         clrf    LATC
0006E6 6A8C               M         clrf    LATD
0006E8 EF?? F???          M         goto    PERM_LOG
                          M 
0006EC                    M Exit
0006EC 0000               M         nop
0006EE D???           00747         bra HOLD_PLOG_DETAILS
                      00748         
                      00749 ;*******************************************************************************
                      00750 ; pc interface
                      00751 ;*******************************************************************************
                      00752 
0006F0                00753 PC_MODE
0006F0 6A38           00754         clrf    inStandby
0006F2 EC?? F???      00755         call    ClrLCD
                      00756         Display PC1
  0000                    M         local   loop
0006F6 0E??               M         movlw   upper PC1       ; Move Table<20:16>
0006F8 6EF8               M         movwf   TBLPTRU
0006FA 0E??               M         movlw   high PC1        ; Move Table<15:8>
0006FC 6EF7               M         movwf   TBLPTRH
0006FE 0E??               M         movlw   low PC1         ; Move Table<7:0>
000700 6EF6               M         movwf   TBLPTRL
000702 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000704 50F5               M         movf    TABLAT, W
000706                    M loop
000706 EC?? F???          M         call    WR_DATA         ; write to LCD
00070A 000B               M         tblrd+*                 ; next row in table
00070C 50F5               M         movf    TABLAT, W
00070E E1??               M         bnz     loop
000710 EC?? F???      00757         call    LCD_L2
                      00758         Display PC2
  0000                    M         local   loop
000714 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000716 6EF8               M         movwf   TBLPTRU
000718 0E??               M         movlw   high PC2        ; Move Table<15:8>
00071A 6EF7               M         movwf   TBLPTRH
00071C 0E??               M         movlw   low PC2         ; Move Table<7:0>
00071E 6EF6               M         movwf   TBLPTRL
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000720 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000722 50F5               M         movf    TABLAT, W
000724                    M loop
000724 EC?? F???          M         call    WR_DATA         ; write to LCD
000728 000B               M         tblrd+*                 ; next row in table
00072A 50F5               M         movf    TABLAT, W
00072C E1??               M         bnz     loop
00072E CFF9 F029      00759         movff   PCL, PC_PCL
000732 CFFA F02A      00760         movff   PCLATH, PC_PCLATH
000736 CFFB F02B      00761         movff   PCLATU, PC_PCLATU
                      00762         
00073A                00763 HOLD_PC
00073A EC?? F???      00764         call    READ_KEY
                      00765         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00073E 0E0D               M         movlw   key0                ; poll for mode
000740 6210               M         cpfseq  KEY                 ; check this against key press
000742 EF?? F???          M         goto    Exit
                          M 
000746                    M Next
000746 6A89               M         clrf    LATA                ; clear pins before proceeding
000748 6A8A               M         clrf    LATB
00074A 6A8B               M         clrf    LATC
00074C 6A8C               M         clrf    LATD
00074E EF?? F???          M         goto    STANDBY
                          M 
000752                    M Exit
000752 0000               M         nop
                      00766         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
000754 0E0E               M         movlw   keyH                ; poll for mode
000756 6210               M         cpfseq  KEY                 ; check this against key press
000758 EF?? F???          M         goto    Exit
                          M 
00075C                    M Next
00075C 6A89               M         clrf    LATA                ; clear pins before proceeding
00075E 6A8A               M         clrf    LATB
000760 6A8B               M         clrf    LATC
000762 6A8C               M         clrf    LATD
000764 EF?? F???          M         goto    PC_TRANSFER
                          M 
000768                    M Exit
000768 0000               M         nop
00076A D???           00767         bra     HOLD_PC
                      00768 
00076C                00769 PC_TRANSFER
00076C 6A38           00770         clrf    inStandby
00076E 6828           00771         setf    transferring
000770 EC?? F???      00772         call    ClrLCD
                      00773         Display PCTransfer
  0000                    M         local   loop
000774 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000776 6EF8               M         movwf   TBLPTRU
000778 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
00077A 6EF7               M         movwf   TBLPTRH
00077C 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
00077E 6EF6               M         movwf   TBLPTRL
000780 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000782 50F5               M         movf    TABLAT, W
000784                    M loop
000784 EC?? F???          M         call    WR_DATA         ; write to LCD
000788 000B               M         tblrd+*                 ; next row in table
00078A 50F5               M         movf    TABLAT, W
00078C E1??               M         bnz     loop
00078E EC?? F???      00774         call    DataUSART
000792 6A28           00775         clrf    transferring
000794 EF?? F???      00776         goto    STANDBY
                      00777         
                      00778 ;*******************************************************************************
                      00779 ; subroutines
                      00780 ;*******************************************************************************
                      00781 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000798                00782 SaveData
000798 C02D FFE8      00783         movff       ESKA, WREG
00079C 0F30           00784         addlw       0x30
                      00785         WriteEE     WREG, H_EE, L_EE
00079E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0007A2 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0007A6 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0007AA B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0007AC D???               M         bra     $-2
                          M 
0007AE 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0007B0 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0007B2 84A6               M         bsf     EECON1, WREN        ; enable write
0007B4 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0007B6 98A1               M         bcf     PIR2, EEIF
                          M 
0007B8 0E55               M         movlw   0x55
0007BA 6EA7               M         movwf   EECON2              ; write 55h
0007BC 0EAA               M         movlw   0xaa
0007BE 6EA7               M         movwf   EECON2              ; write 0xaa
0007C0 82A6               M         bsf     EECON1, WR          ; begin write
0007C2 B2A6               M         btfsc   EECON1, WR
0007C4 D???               M         bra     $-2
                          M 
0007C6 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0007C8 94A6               M         bcf     EECON1, WREN        ; disable writes
0007CA 2A21           00786         incf        L_EE
                      00787         
0007CC C02E FFE8      00788         movff       ESKA_NOCAP, WREG
0007D0 0F30           00789         addlw       0x30
                      00790         WriteEE     WREG, H_EE, L_EE
0007D2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0007D6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0007DA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0007DE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0007E0 D???               M         bra     $-2
                          M 
0007E2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0007E4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0007E6 84A6               M         bsf     EECON1, WREN        ; enable write
0007E8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0007EA 98A1               M         bcf     PIR2, EEIF
                          M 
0007EC 0E55               M         movlw   0x55
0007EE 6EA7               M         movwf   EECON2              ; write 55h
0007F0 0EAA               M         movlw   0xaa
0007F2 6EA7               M         movwf   EECON2              ; write 0xaa
0007F4 82A6               M         bsf     EECON1, WR          ; begin write
0007F6 B2A6               M         btfsc   EECON1, WR
0007F8 D???               M         bra     $-2
                          M 
0007FA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0007FC 94A6               M         bcf     EECON1, WREN        ; disable writes
0007FE 2A21           00791         incf        L_EE
                      00792         
000800 C02F FFE8      00793         movff       YOP, WREG
000804 0F30           00794         addlw       0x30
                      00795         WriteEE     WREG, H_EE, L_EE
000806 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00080A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00080E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000812 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000814 D???               M         bra     $-2
                          M 
000816 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000818 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00081A 84A6               M         bsf     EECON1, WREN        ; enable write
00081C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00081E 98A1               M         bcf     PIR2, EEIF
                          M 
000820 0E55               M         movlw   0x55
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000822 6EA7               M         movwf   EECON2              ; write 55h
000824 0EAA               M         movlw   0xaa
000826 6EA7               M         movwf   EECON2              ; write 0xaa
000828 82A6               M         bsf     EECON1, WR          ; begin write
00082A B2A6               M         btfsc   EECON1, WR
00082C D???               M         bra     $-2
                          M 
00082E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000830 94A6               M         bcf     EECON1, WREN        ; disable writes
000832 2A21           00796         incf        L_EE
                      00797         
000834 C030 FFE8      00798         movff       YOP_NOCAP, WREG
000838 0F30           00799         addlw       0x30
                      00800         WriteEE     WREG, H_EE, L_EE
00083A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00083E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000842 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000846 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000848 D???               M         bra     $-2
                          M 
00084A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00084C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00084E 84A6               M         bsf     EECON1, WREN        ; enable write
000850 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000852 98A1               M         bcf     PIR2, EEIF
                          M 
000854 0E55               M         movlw   0x55
000856 6EA7               M         movwf   EECON2              ; write 55h
000858 0EAA               M         movlw   0xaa
00085A 6EA7               M         movwf   EECON2              ; write 0xaa
00085C 82A6               M         bsf     EECON1, WR          ; begin write
00085E B2A6               M         btfsc   EECON1, WR
000860 D???               M         bra     $-2
                          M 
000862 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000864 94A6               M         bcf     EECON1, WREN        ; disable writes
000866 2A21           00801         incf        L_EE
                      00802         
000868 C037 FFE8      00803         movff       STOP_CONDITION, WREG
00086C 0F30           00804         addlw       0x30
                      00805         WriteEE     WREG, H_EE, L_EE
00086E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000872 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000876 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00087A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00087C D???               M         bra     $-2
                          M 
00087E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000880 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000882 84A6               M         bsf     EECON1, WREN        ; enable write
000884 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000886 98A1               M         bcf     PIR2, EEIF
                          M 
000888 0E55               M         movlw   0x55
00088A 6EA7               M         movwf   EECON2              ; write 55h
00088C 0EAA               M         movlw   0xaa
00088E 6EA7               M         movwf   EECON2              ; write 0xaa
000890 82A6               M         bsf     EECON1, WR          ; begin write
000892 B2A6               M         btfsc   EECON1, WR
000894 D???               M         bra     $-2
                          M 
000896 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000898 94A6               M         bcf     EECON1, WREN        ; disable writes
00089A 2A21           00806         incf        L_EE
                      00807         
00089C 0E00           00808         movlw       d'0'
00089E 6E20           00809         movwf       H_EE
0008A0 0EA8           00810         movlw       d'168'              ; take d'168' as last
0008A2 6E21           00811         movwf       L_EE
0008A4 0E00           00812         movlw       d'0'
0008A6 6E23           00813         movwf       tempH_EE
0008A8 0EDC           00814         movlw       d'220'              ; temp for low constant
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008AA 6E24           00815         movwf       tempL_EE
                      00816         
0008AC 6A16           00817         clrf        counter2
0008AE 6A15           00818         clrf        counter
                      00819         
0008B0                00820 ShiftLoop
0008B0 2A15           00821         incf            counter
                      00822         READEE          REG_EE, H_EE, L_EE
0008B2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0008B6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0008BA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0008BC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0008BE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0008C0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0008C4 0E15           00823         movlw           d'21'
0008C6 2621           00824         addwf           L_EE
                      00825         WriteEE         REG_EE, H_EE, L_EE
0008C8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0008CC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0008D0 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0008D4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0008D6 D???               M         bra     $-2
                          M 
0008D8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0008DA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0008DC 84A6               M         bsf     EECON1, WREN        ; enable write
0008DE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0008E0 98A1               M         bcf     PIR2, EEIF
                          M 
0008E2 0E55               M         movlw   0x55
0008E4 6EA7               M         movwf   EECON2              ; write 55h
0008E6 0EAA               M         movlw   0xaa
0008E8 6EA7               M         movwf   EECON2              ; write 0xaa
0008EA 82A6               M         bsf     EECON1, WR          ; begin write
0008EC B2A6               M         btfsc   EECON1, WR
0008EE D???               M         bra     $-2
                          M 
0008F0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0008F2 94A6               M         bcf     EECON1, WREN        ; disable writes
0008F4 0E14           00826         movlw           d'20'
0008F6 5E21           00827         subwf           L_EE
0008F8 0E15           00828         movlw           d'21'
0008FA 6215           00829         cpfseq          counter
0008FC EF?? F???      00830         goto            ShiftLoop
                      00831         
                      00832         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000900 0E2A           00833         movlw           d'42'
000902 5E21           00834         subwf           L_EE
000904 0EDC           00835         movlw           d'220'
000906 6E24           00836         movwf           tempL_EE
000908 6A15           00837         clrf            counter
00090A 2A16           00838         incf            counter2
00090C 0E09           00839         movlw           d'9'
00090E 6216           00840         cpfseq          counter2        ; skip if 9 shifts were made
000910 EF?? F???      00841         goto            ShiftLoop
                      00842 
000914 0012           00843         return
                      00844         
000916                00845 RTC_INIT
                      00846         ; set sda and scl to high
000916 9882           00847         bcf     PORTC, 4
000918 9682           00848         bcf     PORTC, 3
00091A 8894           00849         bsf     TRISC, 4
00091C 8694           00850         bsf     TRISC, 3
                      00851         
00091E EC?? F???      00852         call    INIT_RTC
                      00853         
                      00854         ;call   SET_TIME                ; comment this out to reset/change rtc
Warning[203]: Found opcode in column 1. (return)
000922 0012           00855 return
                      00856         
000924                00857 SAVE_TIME
                      00858         rtc_read    0x02        ; hours     ; need to call this twice idk y
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000924 0E02               M     movlw   0x02
000926 6E??               M     movwf   regaddress
000928 EC?? F???          M     call    read_rtc
00092C C??? FFE8          M     movff   datachar, WREG
000930 EC?? F???          M     call    rtc_convert
                      00859         rtc_read    0x02        ; hours
000934 0E02               M     movlw   0x02
000936 6E??               M     movwf   regaddress
000938 EC?? F???          M     call    read_rtc
00093C C??? FFE8          M     movff   datachar, WREG
000940 EC?? F???          M     call    rtc_convert
000944 EC?? F???      00860         call    WriteEE_RTC
                      00861         rtc_read    0x01        ; minutes
000948 0E01               M     movlw   0x01
00094A 6E??               M     movwf   regaddress
00094C EC?? F???          M     call    read_rtc
000950 C??? FFE8          M     movff   datachar, WREG
000954 EC?? F???          M     call    rtc_convert
000958 EC?? F???      00862         call    WriteEE_RTC
                      00863         rtc_read    0x06        ; years
00095C 0E06               M     movlw   0x06
00095E 6E??               M     movwf   regaddress
000960 EC?? F???          M     call    read_rtc
000964 C??? FFE8          M     movff   datachar, WREG
000968 EC?? F???          M     call    rtc_convert
00096C EC?? F???      00864         call    WriteEE_RTC
                      00865         rtc_read    0x05        ; months
000970 0E05               M     movlw   0x05
000972 6E??               M     movwf   regaddress
000974 EC?? F???          M     call    read_rtc
000978 C??? FFE8          M     movff   datachar, WREG
00097C EC?? F???          M     call    rtc_convert
000980 EC?? F???      00866         call    WriteEE_RTC
                      00867         rtc_read    0x04        ; days
000984 0E04               M     movlw   0x04
000986 6E??               M     movwf   regaddress
000988 EC?? F???          M     call    read_rtc
00098C C??? FFE8          M     movff   datachar, WREG
000990 EC?? F???          M     call    rtc_convert
000994 EC?? F???      00868         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000998 0012           00869 return
                      00870         
00099A                00871 SAVE_EXE_TIME
                      00872         
Warning[202]: Argument out of range.  Least significant bits used.
00099A 3818           00873         swapf   OP_sec, WREG    ; 100's seconds
00099C 6E17           00874         movwf   temp
00099E 0E0F           00875         movlw   0x0f
0009A0 1617           00876         andwf   temp
0009A2 C017 FFE8      00877         movff   temp, WREG
0009A6 0F30           00878         addlw   0x30    
                      00879         WriteEE WREG, H_EE, L_EE
0009A8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009AC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009B0 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009B4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009B6 D???               M         bra     $-2
                          M 
0009B8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009BA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009BC 84A6               M         bsf     EECON1, WREN        ; enable write
0009BE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009C0 98A1               M         bcf     PIR2, EEIF
                          M 
0009C2 0E55               M         movlw   0x55
0009C4 6EA7               M         movwf   EECON2              ; write 55h
0009C6 0EAA               M         movlw   0xaa
0009C8 6EA7               M         movwf   EECON2              ; write 0xaa
0009CA 82A6               M         bsf     EECON1, WR          ; begin write
0009CC B2A6               M         btfsc   EECON1, WR
0009CE D???               M         bra     $-2
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009D0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009D2 94A6               M         bcf     EECON1, WREN        ; disable writes
0009D4 2A21           00880         incf    L_EE
                      00881         
0009D6 C018 F017      00882         movff   OP_sec, temp    ; 10's seconds
0009DA 0E0F           00883         movlw   0x0f
0009DC 1617           00884         andwf   temp            ; Temp = lower nibble of Op_sec
0009DE C017 FFE8      00885         movff   temp, WREG      ; W = Temp
0009E2 0F30           00886         addlw   0x30            ; Convert to ASCII
                      00887         WriteEE WREG, H_EE, L_EE
0009E4 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009E8 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009EC CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009F0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009F2 D???               M         bra     $-2
                          M 
0009F4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009F6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009F8 84A6               M         bsf     EECON1, WREN        ; enable write
0009FA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009FC 98A1               M         bcf     PIR2, EEIF
                          M 
0009FE 0E55               M         movlw   0x55
000A00 6EA7               M         movwf   EECON2              ; write 55h
000A02 0EAA               M         movlw   0xaa
000A04 6EA7               M         movwf   EECON2              ; write 0xaa
000A06 82A6               M         bsf     EECON1, WR          ; begin write
000A08 B2A6               M         btfsc   EECON1, WR
000A0A D???               M         bra     $-2
                          M 
000A0C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A0E 94A6               M         bcf     EECON1, WREN        ; disable writes
000A10 2A21           00888         incf    L_EE
                      00889         
Warning[202]: Argument out of range.  Least significant bits used.
000A12 3819           00890         swapf   OP_INT, WREG    ;1's seconds
000A14 6E17           00891         movwf   temp
000A16 0E0F           00892         movlw   0x0f
000A18 1617           00893         andwf   temp
000A1A C017 FFE8      00894         movff   temp, WREG
000A1E 0F30           00895         addlw   0x30
                      00896         WriteEE WREG, H_EE, L_EE
000A20 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A24 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A28 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A2C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A2E D???               M         bra     $-2
                          M 
000A30 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A32 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A34 84A6               M         bsf     EECON1, WREN        ; enable write
000A36 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A38 98A1               M         bcf     PIR2, EEIF
                          M 
000A3A 0E55               M         movlw   0x55
000A3C 6EA7               M         movwf   EECON2              ; write 55h
000A3E 0EAA               M         movlw   0xaa
000A40 6EA7               M         movwf   EECON2              ; write 0xaa
000A42 82A6               M         bsf     EECON1, WR          ; begin write
000A44 B2A6               M         btfsc   EECON1, WR
000A46 D???               M         bra     $-2
                          M 
000A48 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A4A 94A6               M         bcf     EECON1, WREN        ; disable writes
000A4C 2A21           00897         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000A4E 0012           00898 return
                      00899         
                      00900                 
000A50                00901 DISPLAY_RTC
                      00902         ; display data in this format hh/minmin/yy yy/mm/dd
                      00903         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00904         rtc_read    0x02            ; 0x02 from DS1307 - hours
000A50 0E02               M     movlw   0x02
000A52 6E??               M     movwf   regaddress
000A54 EC?? F???          M     call    read_rtc
000A58 C??? FFE8          M     movff   datachar, WREG
000A5C EC?? F???          M     call    rtc_convert
000A60 C??? FFE8      00905         movff   tens_digit,WREG
000A64 EC?? F???      00906         call    WR_DATA
000A68 C??? FFE8      00907         movff   ones_digit,WREG
000A6C EC?? F???      00908         call    WR_DATA
000A70 0E68           00909         movlw   "h"
000A72 EC?? F???      00910         call    WR_DATA
                      00911         
                      00912         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000A76 0E01               M     movlw   0x01
000A78 6E??               M     movwf   regaddress
000A7A EC?? F???          M     call    read_rtc
000A7E C??? FFE8          M     movff   datachar, WREG
000A82 EC?? F???          M     call    rtc_convert
000A86 C??? FFE8      00913         movff   tens_digit,WREG
000A8A EC?? F???      00914         call    WR_DATA
000A8E C??? FFE8      00915         movff   ones_digit,WREG
000A92 EC?? F???      00916         call    WR_DATA
                      00917         
                      00918         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000A96 0E00               M     movlw   0x00
000A98 6E??               M     movwf   regaddress
000A9A EC?? F???          M     call    read_rtc
000A9E C??? FFE8          M     movff   datachar, WREG
000AA2 EC?? F???          M     call    rtc_convert
000AA6 C??? FFE8      00919         movff   tens_digit,WREG
000AAA EC?? F???      00920         call    WR_DATA
000AAE C??? FFE8      00921         movff   ones_digit,WREG
000AB2 EC?? F???      00922         call    WR_DATA
000AB6 0E20           00923         movlw   " "
000AB8 EC?? F???      00924         call    WR_DATA
                      00925         
                      00926         rtc_read    0x06            ; 0x06 from DS1307 - years
000ABC 0E06               M     movlw   0x06
000ABE 6E??               M     movwf   regaddress
000AC0 EC?? F???          M     call    read_rtc
000AC4 C??? FFE8          M     movff   datachar, WREG
000AC8 EC?? F???          M     call    rtc_convert
000ACC C??? FFE8      00927         movff   tens_digit,WREG
000AD0 EC?? F???      00928         call    WR_DATA
000AD4 C??? FFE8      00929         movff   ones_digit,WREG
000AD8 EC?? F???      00930         call    WR_DATA
000ADC 0E2F           00931         movlw   "/"
000ADE EC?? F???      00932         call    WR_DATA
                      00933         
                      00934         rtc_read    0x05            ; 0x05 from DS1307 - months
000AE2 0E05               M     movlw   0x05
000AE4 6E??               M     movwf   regaddress
000AE6 EC?? F???          M     call    read_rtc
000AEA C??? FFE8          M     movff   datachar, WREG
000AEE EC?? F???          M     call    rtc_convert
000AF2 C??? FFE8      00935         movff   tens_digit,WREG
000AF6 EC?? F???      00936         call    WR_DATA
000AFA C??? FFE8      00937         movff   ones_digit,WREG
000AFE EC?? F???      00938         call    WR_DATA
000B02 0E2F           00939         movlw   "/"
000B04 EC?? F???      00940         call    WR_DATA
                      00941         
                      00942         rtc_read    0x04            ; 0x04 from DS1307 - days
000B08 0E04               M     movlw   0x04
000B0A 6E??               M     movwf   regaddress
000B0C EC?? F???          M     call    read_rtc
000B10 C??? FFE8          M     movff   datachar, WREG
000B14 EC?? F???          M     call    rtc_convert
000B18 C??? FFE8      00943         movff   tens_digit,WREG
000B1C EC?? F???      00944         call    WR_DATA
000B20 C??? FFE8      00945         movff   ones_digit,WREG
000B24 EC?? F???      00946         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B28 0012           00947 return
                      00948         
000B2A                00949 SET_TIME
                      00950         rtc_resetAll
                          M 
000B2A 6A??               M     clrf    databyte
000B2C 0E06               M     movlw   6
000B2E 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000B30                    M     del_loop0
000B30 EC?? F???          M     call    write_rtc
000B34 2E??               M     decfsz  regaddress
000B36 D???               M     bra     del_loop0
000B38 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      00951         
                      00952         rtc_set 0x00,   b'10000000'
000B3C 0E00               M     movlw   0x00
000B3E 6E??               M     movwf   regaddress
000B40 0E80               M     movlw   b'10000000'
000B42 6E??               M     movwf   databyte
000B44 EC?? F???          M     call    write_rtc
                      00953 
                      00954         rtc_set 0x06,   b'00010111'             ; year 17
000B48 0E06               M     movlw   0x06
000B4A 6E??               M     movwf   regaddress
000B4C 0E17               M     movlw   b'00010111'
000B4E 6E??               M     movwf   databyte
000B50 EC?? F???          M     call    write_rtc
                      00955         rtc_set 0x05,   b'00000100'             ; month 04
000B54 0E05               M     movlw   0x05
000B56 6E??               M     movwf   regaddress
000B58 0E04               M     movlw   b'00000100'
000B5A 6E??               M     movwf   databyte
000B5C EC?? F???          M     call    write_rtc
                      00956         rtc_set 0x04,   b'00000110'             ; day of month 06
000B60 0E04               M     movlw   0x04
000B62 6E??               M     movwf   regaddress
000B64 0E06               M     movlw   b'00000110'
000B66 6E??               M     movwf   databyte
000B68 EC?? F???          M     call    write_rtc
                      00957         rtc_set 0x02,   b'00100010'             ; hours 22
000B6C 0E02               M     movlw   0x02
000B6E 6E??               M     movwf   regaddress
000B70 0E22               M     movlw   b'00100010'
000B72 6E??               M     movwf   databyte
000B74 EC?? F???          M     call    write_rtc
                      00958         rtc_set 0x01,   b'00010101'             ; minutes 13
000B78 0E01               M     movlw   0x01
000B7A 6E??               M     movwf   regaddress
000B7C 0E15               M     movlw   b'00010101'
000B7E 6E??               M     movwf   databyte
000B80 EC?? F???          M     call    write_rtc
                      00959         rtc_set 0x00,   b'00000000'             ; seconds 0
000B84 0E00               M     movlw   0x00
000B86 6E??               M     movwf   regaddress
000B88 0E00               M     movlw   b'00000000'
000B8A 6E??               M     movwf   databyte
000B8C EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000B90 0012           00960 return
                      00961         
000B92                00962 INIT_USART
                      00963         
000B92 8E94           00964         bsf     TRISC, 7        ; set RC7=USART RC
000B94 9C94           00965         bcf     TRISC, 6        ; clear RC6=USART TX
                      00966 
000B96 0E0F           00967         movlw   15              ; baud rate 9600
000B98 6EAF           00968         movwf   SPBRG
000B9A 6AAC           00969         clrf    TXSTA
                      00970         
000B9C 6AAB           00971         clrf    RCSTA
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B9E 8EAB           00972         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000BA0 88AB           00973         bsf     RCSTA,CREN      ; continous receive
                      00974         
000BA2 8AAC           00975         bsf     TXSTA, TXEN     ; transmit enabled
000BA4 0012           00976         return
                      00977 
000BA6                00978 DataUSART
000BA6 0E02           00979         movlw   0x02
000BA8 EC?? F???      00980         call    USART_WAIT
000BAC 0E0D           00981         movlw   0x0D
000BAE EC?? F???      00982         call    USART_WAIT
                      00983         
000BB2 6A15           00984         clrf    counter         ; used to cycle through past 9 eeprom logs
000BB4 6A16           00985         clrf    counter2        ; used to transmit all 18 bits of saved data
                      00986         
000BB6                00987 TRANSFER_LOGS
000BB6 0E15           00988         movlw   d'21'           ; logs are 21 bits apart
000BB8 0215           00989         mulwf   counter         ; log number one starts at eeprom address 0
000BBA CFF3 F021      00990         movff   PRODL, L_EE     ; low address now points to count X 21
000BBE 6A16           00991         clrf    counter2
                      00992         
000BC0                00993 TRANSFER_DATA   
                      00994         READEE  WREG, H_EE, L_EE
000BC0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000BC4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000BC8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000BCA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000BCC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000BCE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000BD2 EC?? F???      00995         call    USART_WAIT      ; transfer bit
000BD6 2A21           00996         incf    L_EE
                      00997         
000BD8 2A16           00998         incf    counter2
000BDA 0E12           00999         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000BDC 6216           01000         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000BDE D???           01001         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01002         
000BE0 EC?? F???      01003         call    USART_LINE      ; new line because a e s t h e t i c
                      01004         
000BE4 2A15           01005         incf    counter
000BE6 0E08           01006         movlw   d'8'            ; we save up to the last 9 permanent logs
000BE8 6215           01007         cpfseq  counter
000BEA D???           01008         bra     TRANSFER_LOGS
                      01009         
000BEC EC?? F???      01010         call    LCD_L2
                      01011         Display PCComplete
  0000                    M         local   loop
000BF0 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000BF2 6EF8               M         movwf   TBLPTRU
000BF4 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000BF6 6EF7               M         movwf   TBLPTRH
000BF8 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000BFA 6EF6               M         movwf   TBLPTRL
000BFC 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000BFE 50F5               M         movf    TABLAT, W
000C00                    M loop
000C00 EC?? F???          M         call    WR_DATA         ; write to LCD
000C04 000B               M         tblrd+*                 ; next row in table
000C06 50F5               M         movf    TABLAT, W
000C08 E1??               M         bnz     loop
                      01012         Delay50N delayR, 0x28   
  0000                    M         local   loop
000C0A 0E28               M         movlw   0x28
000C0C 6E1A               M         movwf   delayR
                          M 
000C0E                    M loop
000C0E EC?? F???          M         call    Delay50ms
000C12 2E1A               M         decfsz  delayR
000C14 EF?? F???          M         goto    loop
000C18 0012           01013         return                  ; done transmitting data
                      01014         
000C1A                01015 USART_WAIT
000C1A 6EAD           01016         movwf   TXREG
000C1C A2AC           01017         btfss   TXSTA, 1
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C1E EF?? F???      01018         goto    $-2
000C22 0012           01019         return
                      01020 
000C24                01021 USART_LINE
000C24 0E0A           01022         movlw   0x0A
000C26 EC?? F???      01023         call    USART_WAIT
000C2A 0E0D           01024         movlw   0x0D
000C2C EC?? F???      01025         call    USART_WAIT
000C30 0012           01026         return
                      01027         
000C32                01028 Delay5us
000C32 0E78           01029         movlw   d'120'
000C34 6E1B           01030         movwf   d5us
                      01031 
000C36                01032 loop5us
000C36 2E1B           01033         decfsz  d5us
000C38 EF?? F???      01034         goto    loop5us
000C3C 0000           01035         nop
000C3E 0012           01036         return
                      01037 
000C40                01038 Delay200us
000C40 0EA4           01039         movlw   0xA4
000C42 6E1C           01040         movwf   d200us
                      01041 
000C44                01042 loop200us
000C44 2E1C           01043         decfsz  d200us
000C46 EF?? F???      01044         goto    loop200us
000C4A 0000           01045         nop
000C4C 0012           01046         return
                      01047 
000C4E                01048 Delay50ms
000C4E 0EF9           01049         movlw   0xF9
000C50 6E1D           01050         movwf   d50ms
                      01051 
000C52                01052 loop50ms
000C52 EC?? F???      01053         call    Delay200us
000C56 2E1D           01054         decfsz  d50ms
                      01055 
000C58                01056 Cycles
000C58 EF?? F???      01057         goto    loop50ms
000C5C EC?? F???      01058         call    Delay200us
000C60 0012           01059         return
                      01060 
000C62                01061 WriteEE_RTC
                      01062         WriteEE tens_digit, H_EE, L_EE
000C62 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000C66 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000C6A C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000C6E B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C70 D???               M         bra     $-2
                          M 
000C72 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C74 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C76 84A6               M         bsf     EECON1, WREN        ; enable write
000C78 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C7A 98A1               M         bcf     PIR2, EEIF
                          M 
000C7C 0E55               M         movlw   0x55
000C7E 6EA7               M         movwf   EECON2              ; write 55h
000C80 0EAA               M         movlw   0xaa
000C82 6EA7               M         movwf   EECON2              ; write 0xaa
000C84 82A6               M         bsf     EECON1, WR          ; begin write
000C86 B2A6               M         btfsc   EECON1, WR
000C88 D???               M         bra     $-2
                          M 
000C8A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C8C 94A6               M         bcf     EECON1, WREN        ; disable writes
000C8E 2A21           01063         incf    L_EE
                      01064         WriteEE ones_digit, H_EE, L_EE
000C90 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000C94 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000C98 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C9C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C9E D???               M         bra     $-2
                          M 
000CA0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CA2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CA4 84A6               M         bsf     EECON1, WREN        ; enable write
000CA6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CA8 98A1               M         bcf     PIR2, EEIF
                          M 
000CAA 0E55               M         movlw   0x55
000CAC 6EA7               M         movwf   EECON2              ; write 55h
000CAE 0EAA               M         movlw   0xaa
000CB0 6EA7               M         movwf   EECON2              ; write 0xaa
000CB2 82A6               M         bsf     EECON1, WR          ; begin write
000CB4 B2A6               M         btfsc   EECON1, WR
000CB6 D???               M         bra     $-2
                          M 
000CB8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CBA 94A6               M         bcf     EECON1, WREN        ; disable writes
000CBC 2A21           01065         incf    L_EE
000CBE 0012           01066         return
                      01067 
000CC0                01068 ClearEEPROM_21
000CC0 6A20           01069         clrf    H_EE
000CC2 6A21           01070         clrf    L_EE
000CC4 681F           01071         setf    clear_EE
000CC6 6A15           01072         clrf    counter
000CC8                01073 ClearNext
                      01074         WriteEE         clear_EE, H_EE, L_EE
000CC8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000CCC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000CD0 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000CD4 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000CD6 D???               M         bra     $-2
                          M 
000CD8 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000CDA 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000CDC 84A6               M         bsf     EECON1, WREN        ; enable write
000CDE 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000CE0 98A1               M         bcf     PIR2, EEIF
                          M 
000CE2 0E55               M         movlw   0x55
000CE4 6EA7               M         movwf   EECON2              ; write 55h
000CE6 0EAA               M         movlw   0xaa
000CE8 6EA7               M         movwf   EECON2              ; write 0xaa
000CEA 82A6               M         bsf     EECON1, WR          ; begin write
000CEC B2A6               M         btfsc   EECON1, WR
000CEE D???               M         bra     $-2
                          M 
000CF0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000CF2 94A6               M         bcf     EECON1, WREN        ; disable writes
000CF4 2A15           01075         incf            counter
000CF6 2A21           01076         incf            L_EE
000CF8 0E15           01077         movlw           d'21'
000CFA 6215           01078         cpfseq          counter
000CFC EF?? F???      01079         goto            ClearNext
000D00 6A20           01080         clrf            H_EE
000D02 6A21           01081         clrf            L_EE
000D04 0012           01082         return
                      01083         
000D06                01084 READ_KEY
000D06 A281           01085         btfss   PORTB, 1        ; check for keypad interrupt
000D08 EF?? F???      01086         goto    READ_KEY
000D0C 3881           01087         swapf   PORTB, W
000D0E 0B0F           01088         andlw   0x0F
000D10 6E10           01089         movwf   KEY
000D12 B281           01090         btfsc   PORTB, 1
000D14 EF?? F???      01091         goto    $-2
000D18 0012           01092         return
                      01093 
000D1A                01094 READ_KEY_TIME
                      01095         ; display the time
                      01096         ; call      DISPLAY_RTC 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01097 
000D1A A281           01098         btfss       PORTB, 1    ; keypad interrupt
000D1C EF?? F???      01099         goto        READ_KEY_TIME
000D20 3881           01100         swapf       PORTB, 0    ; copy PORTB7:4 to W3:0
000D22 0B0F           01101         andlw       0x0F        ; only want W3:0
000D24 6E10           01102         movwf       KEY         ; write this value to the KEY
000D26 B281           01103         btfsc       PORTB, 1    ; wait for release
000D28 EF?? F???      01104         goto        $-2         ; go back one instruction
000D2C 0012           01105         return
                      01106 
000D2E                01107 DisplayExeTime
                      01108         READEE  REG_EE, H_EE, L_EE
000D2E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D32 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D36 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D38 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D3A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D3C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000D40 0EFF           01109         movlw   0xFF
000D42 6222           01110         cpfseq  REG_EE
000D44 EF?? F???      01111         goto    NoSkipDispExeTime
                      01112         Display NoData
  0000                    M         local   loop
000D48 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D4A 6EF8               M         movwf   TBLPTRU
000D4C 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D4E 6EF7               M         movwf   TBLPTRH
000D50 0E??               M         movlw   low NoData      ; Move Table<7:0>
000D52 6EF6               M         movwf   TBLPTRL
000D54 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D56 50F5               M         movf    TABLAT, W
000D58                    M loop
000D58 EC?? F???          M         call    WR_DATA         ; write to LCD
000D5C 000B               M         tblrd+*                 ; next row in table
000D5E 50F5               M         movf    TABLAT, W
000D60 E1??               M         bnz     loop
000D62 0EFF           01113         movlw   0xFF
000D64 6022           01114         cpfslt  REG_EE
000D66 EF?? F???      01115         goto    SkipDispExeTime
000D6A 0012           01116         return
                      01117 
000D6C                01118 NoSkipDispExeTime
                      01119         READEE  WREG, H_EE, L_EE
000D6C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D70 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D74 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D76 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D78 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D7A CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D7E EC?? F???      01120         call    WR_DATA
000D82 2A21           01121         incf    L_EE
                      01122         
                      01123         READEE  WREG, H_EE, L_EE
000D84 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D88 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D8C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D8E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D90 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D92 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D96 EC?? F???      01124         call    WR_DATA
000D9A 2A21           01125         incf    L_EE
                      01126         
                      01127         READEE  WREG, H_EE, L_EE
000D9C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DA0 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DA4 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DA6 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DA8 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DAA CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000DAE EC?? F???      01128         call    WR_DATA
000DB2 2A21           01129         incf    L_EE
                      01130 
000DB4 0E73           01131         movlw   0x73            ; Write 's'
000DB6 EC?? F???      01132         call    WR_DATA
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DBA EC?? F???      01133         call    LCD_L2
000DBE                01134 SkipDispExeTime
000DBE 0012           01135         return
                      01136 
000DC0                01137 DispOpSort
                      01138         READEE  REG_EE, H_EE, L_EE
000DC0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DC4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000DC8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DCA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DCC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DCE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000DD2 0EFF           01139         movlw   0xff
000DD4 6222           01140         cpfseq  REG_EE
000DD6 EF?? F???      01141         goto    NoSkipDispOpSort
                      01142         Display NoData
  0000                    M         local   loop
000DDA 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000DDC 6EF8               M         movwf   TBLPTRU
000DDE 0E??               M         movlw   high NoData     ; Move Table<15:8>
000DE0 6EF7               M         movwf   TBLPTRH
000DE2 0E??               M         movlw   low NoData      ; Move Table<7:0>
000DE4 6EF6               M         movwf   TBLPTRL
000DE6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000DE8 50F5               M         movf    TABLAT, W
000DEA                    M loop
000DEA EC?? F???          M         call    WR_DATA         ; write to LCD
000DEE 000B               M         tblrd+*                 ; next row in table
000DF0 50F5               M         movf    TABLAT, W
000DF2 E1??               M         bnz     loop
000DF4 0EFF           01143         movlw   0xff
000DF6 6022           01144         cpfslt  REG_EE
000DF8 EF?? F???      01145         goto    SkipDispOpSort
                      01146 
000DFC                01147 NoSkipDispOpSort
000DFC 0E61           01148         movlw   "a"
000DFE EC?? F???      01149         call    WR_DATA
                      01150         
                      01151         READEE  REG_EE, H_EE, L_EE
000E02 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E06 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E0A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E0C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E0E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E10 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E14 C022 FFE8      01152         movff   REG_EE, WREG
000E18 EC?? F???      01153         call    WR_DATA
000E1C 2A21           01154         incf    L_EE
                      01155         
000E1E 0E20           01156         movlw   " "
000E20 EC?? F???      01157         call    WR_DATA
                      01158         
000E24 0E62           01159         movlw   "b"
000E26 EC?? F???      01160         call    WR_DATA
                      01161         
                      01162         READEE  REG_EE, H_EE, L_EE
000E2A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E2E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E32 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E34 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E36 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E38 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E3C C022 FFE8      01163         movff   REG_EE, WREG
000E40 EC?? F???      01164         call    WR_DATA
000E44 2A21           01165         incf    L_EE
                      01166         
000E46 0E20           01167         movlw   " "
000E48 EC?? F???      01168         call    WR_DATA
                      01169         
000E4C 0E63           01170         movlw   "c"
000E4E EC?? F???      01171         call    WR_DATA
                      01172         
                      01173         READEE  REG_EE, H_EE, L_EE
000E52 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E56 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E5A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E5C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E5E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E60 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E64 C022 FFE8      01174         movff   REG_EE, WREG
000E68 EC?? F???      01175         call    WR_DATA
000E6C 2A21           01176         incf    L_EE
                      01177         
000E6E 0E20           01178         movlw   " "
000E70 EC?? F???      01179         call    WR_DATA
                      01180         
000E74 0E64           01181         movlw   "d"
000E76 EC?? F???      01182         call    WR_DATA
                      01183         
                      01184         READEE  REG_EE, H_EE, L_EE
000E7A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E7E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000E82 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000E84 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000E86 80A6               M         bsf     EECON1, RD          ; read EEPROM
000E88 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000E8C C022 FFE8      01185         movff   REG_EE, WREG
000E90 EC?? F???      01186         call    WR_DATA
000E94 2A21           01187         incf    L_EE
                      01188 
000E96                01189 SkipDispOpSort
000E96 0012           01190         return
                      01191         
000E98                01192 DispOpRTC
                      01193         READEE  REG_EE, H_EE, L_EE
000E98 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E9C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EA0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EA2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EA4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EA6 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EAA 0EFF           01194         movlw   0xff
000EAC 6222           01195         cpfseq  REG_EE
000EAE EF?? F???      01196         goto    NoSkipDispOpRTC
                      01197         Display NoData
  0000                    M         local   loop
000EB2 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EB4 6EF8               M         movwf   TBLPTRU
000EB6 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EB8 6EF7               M         movwf   TBLPTRH
000EBA 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EBC 6EF6               M         movwf   TBLPTRL
000EBE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EC0 50F5               M         movf    TABLAT, W
000EC2                    M loop
000EC2 EC?? F???          M         call    WR_DATA         ; write to LCD
000EC6 000B               M         tblrd+*                 ; next row in table
000EC8 50F5               M         movf    TABLAT, W
000ECA E1??               M         bnz     loop
000ECC 0EFF           01198         movlw   0xff
000ECE 6022           01199         cpfslt  REG_EE
000ED0 EF?? F???      01200         goto    SkipDispOpRTC
                      01201 
000ED4                01202 NoSkipDispOpRTC
                      01203         READEE  REG_EE, H_EE, L_EE
000ED4 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000ED8 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EDC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EDE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EE0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EE2 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EE6 C022 FFE8      01204         movff   REG_EE, WREG
000EEA EC?? F???      01205         call    WR_DATA
000EEE 2A21           01206         incf    L_EE
                      01207         
                      01208         READEE  REG_EE, H_EE, L_EE
000EF0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EF4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   4-9-2017  10:35:48         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EF8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EFA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EFC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EFE CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F02 C022 FFE8      01209         movff   REG_EE, WREG
000F06 EC?? F???      01210         call    WR_DATA
000F0A 2A21           01211         incf    L_EE
                      01212 
000F0C 0E68           01213         movlw   "h"
000F0E EC?? F???      01214         call    WR_DATA
                      01215         
000F12 EC?? F???      01216         call    DispOpRTC_Helper
                      01217         
000F16 0E20           01218         movlw   " "
000F18 EC?? F???      01219         call    WR_DATA
                      01220         
000F1C EC?? F???      01221         call    DispOpRTC_Helper
000F20 0E2F           01222         movlw   "/"
000F22 EC?? F???      01223         call    WR_DATA
                      01224 
000F26 EC?? F???      01225         call    DispOpRTC_Helper
000F2A 0E2F           01226         movlw   "/"
000F2C EC?? F???      01227         call    WR_DATA
000F30 EC?? F???      01228         call    DispOpRTC_Helper
000F34                01229 SkipDispOpRTC
000F34 0012           01230                 return
000F36                01231 DispOpRTC_Helper
                      01232         READEE          REG_EE, H_EE, L_EE
000F36 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F3A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F3E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F40 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F42 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F44 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F48 C022 FFE8      01233         movff           REG_EE, WREG
000F4C EC?? F???      01234         call            WR_DATA
000F50 2A21           01235         incf            L_EE
                      01236         READEE          REG_EE, H_EE, L_EE
000F52 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F56 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F5A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F5C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F5E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F60 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F64 C022 FFE8      01237         movff           REG_EE, WREG
000F68 EC?? F???      01238         call            WR_DATA
000F6C 2A21           01239         incf            L_EE
000F6E 0012           01240         return
Warning[205]: Found directive in column 1. (end)
                      01241 end

Errors   :     0
Warnings :    40 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

