MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: Bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Nov 17 2016
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movf    datachar,w
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, data_colourL, data_col
                            ourH, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (COLOUR_WRITE)
                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   datachar, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   datachar, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   datachar, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   datachar, red+1
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   datachar, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   datachar, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   datachar, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   datachar, blue+1
                      00102     endm
                      00103     
                      00019 
                      00020     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00021     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00022     CONFIG WDT = OFF, WDTPS = 32768
                      00023     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00024     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00025     CONFIG DEBUG = ON
                      00026     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00027     CONFIG CPB = OFF, CPD = OFF
                      00028     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00029     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00030     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00031     CONFIG EBTRB = OFF
                      00032 
                      00033 ;*******************************************************************************
                      00034 ; variable and constants
                      00035 ;*******************************************************************************
                      00036     CODE
                      00037             
                      00038     cblock 0x00
  00000000            00039         key1
  00000001            00040         key2
  00000002            00041         key3
  00000003            00042         keyA
  00000004            00043         key4
  00000005            00044         key5
  00000006            00045         key6
  00000007            00046         keyB
  00000008            00047         key7
  00000009            00048         key8
  0000000A            00049         key9
  0000000B            00050         keyC
  0000000C            00051         keyS
  0000000D            00052         key0
  0000000E            00053         keyH
  0000000F            00054         keyD
  00000010            00055         KEY
  00000011            00056         temp_KEY
  00000012            00057         KEY_ISR
  00000013            00058         temp_S  
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000014            00059         temp_W
  00000015            00060         counter
  00000016            00061         counter2
  00000017            00062         temp
  00000018            00063         OP_sec
  00000019            00064         OP_INT
  0000001A            00065         temp_ISR
  0000001B            00066         delayR
  0000001C            00067         d5us
  0000001D            00068         d200us
  0000001E            00069         d50ms
  0000001F            00070         inExecution
  00000020            00071         clear_EE
  00000021            00072         H_EE    
  00000022            00073         L_EE    
  00000023            00074         REG_EE  
  00000024            00075         tempH_EE
  00000025            00076         tempL_EE
  00000026            00077         tempL_EEC
  00000027            00078         MAX_EE   
  00000028            00079         READ_EE
  00000029            00080         last_log
  0000002A            00081         startHt
  0000002B            00082         startHo
  0000002C            00083         startMt
  0000002D            00084         startMo
  0000002E            00085         endHt
  0000002F            00086         endHo
  00000030            00087         endMt
  00000031            00088         endMo
  00000032            00089         LED_Count
  00000033            00090         SkipCount
  00000034            00091         exe_sec
  00000035            00092         exe_int
  00000036            00093         timer_H
  00000037            00094         timer_L
  00000038            00095         convert_buffer
  00000039            00096         transferring
  0000003A            00097         PC_PCL
  0000003B            00098         PC_PCLATH
  0000003C            00099         PC_PCLATU
  0000003D            00100         TIMCNT
  0000003E            00101         CPCNT
  0000003F            00102         TDATA
  00000040            00103         ESKA
  00000041            00104         ESKA_CAP
  00000042            00105         YOP
  00000043            00106         YOP_CAP
  00000044            00107         CLEAR:2
  00000046            00108         RED:2
  00000048            00109         GREEN:2
  0000004A            00110         BLUE:2
  0000004C            00111         temp_colour:2
                      00112     endc
                      00113     
  0000                00114     extern tens_digit, ones_digit
                      00115     
                      00116 ;*******************************************************************************
                      00117 ; tables
                      00118 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00119     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00120     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6264 00121     StandBy     db          "Standby", 0
       0079 
Warning[207]: Found label after column 1. (Log1)
000018 6954 656D 003A 00122     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
00001E 3231 303A 2030 00123     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (LogInfo1)
00002C 6153 6576 3A64 00124     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
000034 6142 6B63 3C20 00125     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
00003E 6550 6D72 6E61 00126     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
00004E 313C 203E 2E2E 00127     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
00005A 6F53 7472 6E69 00128     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
000066 4E45 2044 2A3C 00129     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
00006E 4350 4920 746E 00130     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
00007C 6542 6967 206E 00131     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
000086 7254 6E61 6673 00132     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (Stopped)
000096 7453 706F 6570 00133     Stopped     db          "Stopped", 0
       0064 
Warning[207]: Found label after column 1. (Exe_Time)
00009E 6954 656D 203A 00134     Exe_Time    db          "Time: ", 0
       0000 
Warning[207]: Found label after column 1. (SAVE)
0000A6 6153 6976 676E 00135     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (Safety)
0000B0 6153 6566 7974 00136     Safety      db          "Safety check...", 0
       6320 6568 6B63 
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000C0 2F4E 0041      00137     NoData      db          "N/A", 0
Warning[207]: Found label after column 1. (PCLog1)
0000C4 6954 656D 6120 00138     PCLog1      db          "Time and Date:", 0
       646E 4420 7461 
       3A65 0000 
                      00139         
                      00140 ;*******************************************************************************
                      00141 ; macros
                      00142 ;*******************************************************************************
                      00143 
                      00144 TransferTable macro table
                      00145         local loop
                      00146         
                      00147         movlw   upper table
                      00148         movwf   TBLPTRU
                      00149         movlw   high table
                      00150         movwf   TBLPTRH
                      00151         movlw   low table
                      00152         movwf   TBLPTRL
                      00153         tblrd*
                      00154         movff   TABLAT, WREG
                      00155 loop
                      00156         call    USART_WAIT
                      00157         tblrd+*
                      00158         movff   TABLAT, WREG
                      00159         bnz     loop
                      00160         endm
                      00161         
                      00162 ConfigLCD   macro
                      00163           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164           call      WR_INS
                      00165 
                      00166           movlw     b'00001100'    ; display on/off
                      00167           call      WR_INS
                      00168          ; movlw     B'00000110'    ; Entry mode
                      00169          ; call      WR_INS
                      00170           movlw     b'00000001'    ; Clear ram
                      00171           call      WR_INS
                      00172           endm
                      00173         
                      00174 movMSB  macro   port
                      00175         andlw   0xF0
                      00176         iorwf   port, f
                      00177         iorlw   0x0F
                      00178         andwf   port, f
                      00179         endm
                      00180 
                      00181 Delay50N macro count, N
                      00182         local   loop
                      00183         movlw   N
                      00184         movwf   count
                      00185 
                      00186 loop
                      00187         call    Delay50ms
                      00188         decfsz  count
                      00189         goto    loop
                      00190         endm
                      00191 
                      00192 Display macro   Message
                      00193         local   loop
                      00194         movlw   upper Message   ; Move Table<20:16>
                      00195         movwf   TBLPTRU
                      00196         movlw   high Message    ; Move Table<15:8>
                      00197         movwf   TBLPTRH
                      00198         movlw   low Message     ; Move Table<7:0>
                      00199         movwf   TBLPTRL
                      00200         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00201         movf    TABLAT, W
                      00202 loop
                      00203         call    WR_DATA         ; write to LCD
                      00204         tblrd+*                 ; next row in table
                      00205         movf    TABLAT, W
                      00206         bnz     loop
                      00207         endm
                      00208 
                      00209 DisplayLog  macro   addrH, addrL
                      00210             local   Again, Finish
                      00211             
                      00212             clrf    SkipCount
                      00213             clrf    MAX_EE
                      00214 
                      00215             ; Check if there is No Data first
                      00216             READEE      REG_EE, addrH, addrL
                      00217             movlw       0xFF
                      00218             cpfseq      REG_EE
                      00219             goto        Again
                      00220             Display     NoData
                      00221             goto        Finish
                      00222 Again
                      00223             ; Put a space every 3 Writes
                      00224             movlw       d'3'
                      00225             cpfslt      SkipCount
                      00226             cpfslt      MAX_EE
                      00227             goto        Finish
                      00228 
                      00229             ; read EEPROM
                      00230             READEE      REG_EE, addrH, addrL
                      00231             btfsc       REG_EE, 7       ; if bit 7 set then done
                      00232             goto        Finish
                      00233 Finish
                      00234             endm
                      00235             
                      00236 ;TransferLog macro   addrH, addrL
                      00237         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00238 
                      00239 incf_BCD    macro   BCD
                      00240         local ones, endBCD
                      00241         movff   BCD, temp
                      00242         
                      00243         ;process ones digit
                      00244         movlw   0x0f
                      00245         andwf   temp
                      00246         movlw   d'9'
                      00247         
                      00248         ;skip if ones digit is 9
                      00249         cpfseq  temp
                      00250         goto    ones
                      00251         
                      00252         movlw   b'00010000'
                      00253         addwf   BCD
                      00254         movlw   0xf0
                      00255         andwf   BCD
                      00256         movlw   0xa0
                      00257         cpfslt  BCD
                      00258         
                      00259         clrf    BCD
                      00260         goto    endBCD
                      00261         
                      00262 ones
                      00263         incf    BCD
                      00264         goto    endBCD
                      00265 endBCD
                      00266         nop
                      00267         endm
                      00268         
                      00269 SUB16   macro   x, y        ; does not modify x nor y
                      00270         local RESULTS
                      00271         movf    y+1, WREG   ; move high y into working register
                      00272         subwf   x+1, 0      ; do subtraction x - w => w
                      00273         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
                      00274         goto    RESULTS     ; if it is, need to check lower bytes
                      00275         
                      00276         movf    y, WREG
                      00277         subwf   x, 0    
                      00278 RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
                      00279         endm
                      00280 
                      00281 WriteRTC    macro
                      00282         movff   tens_digit, WREG
                      00283         call    WR_DATA
                      00284         movff   ones_digit, WREG
                      00285         call    WR_DATA
                      00286         endm
                      00287 
                      00288 WriteEE macro   word, addH, addL
                      00289         movff   addH, EEADRH        ; High address
                      00290         movff   addL, EEADR         ; Low address
                      00291         movff   word, EEDATA        ; set word
                      00292 
                      00293         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00294         bra     $-2
                      00295 
                      00296         bcf     EECON1, EEPGD       ; Point to data memory
                      00297         bcf     EECON1, CFGS        ; Access EEPROM
                      00298         bsf     EECON1, WREN        ; enable write
                      00299         bcf     INTCON, GIE         ; disable interrupts during write
                      00300         bcf     PIR2, EEIF
                      00301 
                      00302         movlw   0x55
                      00303         movwf   EECON2              ; write 55h
                      00304         movlw   0xaa
                      00305         movwf   EECON2              ; write 0xaa
                      00306         bsf     EECON1, WR          ; begin write
                      00307         btfsc   EECON1, WR
                      00308         bra     $-2
                      00309 
                      00310         bsf     INTCON, GIE         ; enable interrupts after write
                      00311         bcf     EECON1, WREN        ; disable writes
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312         endm
                      00313 
                      00314 READEE  macro   file, addH, addL
                      00315         movff   addH, EEADRH        ; read to high
                      00316         movff   addL, EEADR         ; read to low
                      00317         bcf     EECON1, EEPGD       ; point to data memory
                      00318         bcf     EECON1, CFGS        ; access to EEPROM
                      00319         bsf     EECON1, RD          ; read EEPROM
                      00320         movff   EEDATA, file        ; put data into file
                      00321         endm
                      00322 
                      00323 ChangeMode  macro   ModeId, NextMode
                      00324         local Next, Exit
                      00325 
                      00326         movlw   ModeId              ; poll for mode
                      00327         cpfseq  KEY                 ; check this against key press
                      00328         goto    Exit
                      00329 
                      00330 Next
                      00331         clrf    LATA                ; clear pins before proceeding
                      00332         clrf    LATB
                      00333         clrf    LATC
                      00334         clrf    LATD
                      00335         goto    NextMode
                      00336 
                      00337 Exit
                      00338         nop
                      00339         endm
                      00340 
                      00341 saveContext macro
                      00342     movff   STATUS, temp_S          ; save STATUS first
                      00343     movwf   temp_W                  ; save W
                      00344     endm
                      00345 
                      00346 restoreContext macro
                      00347     swapf   temp_W, W               ; restore W first
                      00348     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00349     endm
                      00350 ;*******************************************************************************
                      00351 ; reset vector and isrs
                      00352 ;*******************************************************************************
                      00353         ORG     0x000               ; processor reset vector
000000 EF?? F???      00354         goto    INIT                ; go to beginning of program
                      00355 
                      00356         ORG     0x008
000008 EF?? F???      00357         goto    ISR_HIGH
                      00358 
                      00359         ORG     0x018
000018 EF?? F???      00360         goto    ISR_LOW
                      00361 
00001C                00362 ISR_HIGH
                      00363         saveContext
00001C CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
000020 6E14               M     movwf   temp_W                  ; save W
                      00364         
Warning[202]: Argument out of range.  Least significant bits used.
000022 3818           00365         swapf   OP_sec, WREG    ; 100's seconds
000024 6E17           00366         movwf   temp
000026 0E0F           00367         movlw   0x0F
000028 1617           00368         andwf   temp
00002A C017 FFE8      00369         movff   temp, WREG
00002E 0F30           00370         addlw   0x30
000030 EC?? F???      00371         call    WR_DATA
                      00372 
000034 C018 F017      00373         movff   OP_sec, temp    ; 10's seconds
000038 0E0F           00374         movlw   0x0F
00003A 1617           00375         andwf   temp            ; Temp = lower nibble of Op_sec
00003C C017 FFE8      00376         movff   temp, WREG      ; W = Temp
000040 0F30           00377         addlw   0x30            ; Convert to ASCII
000042 EC?? F???      00378         call    WR_DATA
                      00379         
Warning[202]: Argument out of range.  Least significant bits used.
000046 3819           00380         swapf   OP_INT, WREG    ;1's seconds
000048 6E17           00381         movwf   temp
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004A 0E0F           00382         movlw   0x0f
00004C 1617           00383         andwf   temp
00004E C017 FFE8      00384         movff   temp, WREG
000052 0F30           00385         addlw   0x30
000054 EC?? F???      00386         call    WR_DATA
                      00387 
000058 0E73           00388         movlw   0x73            ; Write 's'
00005A EC?? F???      00389         call    WR_DATA
00005E EC?? F???      00390         call    LCD_L2
                      00391 
                      00392         ;reset timer 
000062 0EC6           00393         movlw   0xc6
000064 6ED7           00394         movwf   TMR0H
000066 0E3E           00395         movlw   0x3e
000068 6ED6           00396         movwf   TMR0L
                      00397                 
                      00398         ;timer interrupt
00006A A4F2           00399         btfss   INTCON, TMR0IF
00006C EF?? F???      00400         goto    END_ISR_HIGH
                      00401         
                      00402         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
000070 C019 F017          M         movff   OP_INT, temp
                          M         
                          M         ;process ones digit
000074 0E0F               M         movlw   0x0f
000076 1617               M         andwf   temp
000078 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
00007A 6217               M         cpfseq  temp
00007C EF?? F???          M         goto    ones
                          M         
000080 0E10               M         movlw   b'00010000'
000082 2619               M         addwf   OP_INT
000084 0EF0               M         movlw   0xf0
000086 1619               M         andwf   OP_INT
000088 0EA0               M         movlw   0xa0
00008A 6019               M         cpfslt  OP_INT
                          M         
00008C 6A19               M         clrf    OP_INT
00008E EF?? F???          M         goto    endBCD
                          M         
000092                    M ones
000092 2A19               M         incf    OP_INT
000094 EF?? F???          M         goto    endBCD
000098                    M endBCD
000098 0000               M         nop
00009A 0E00           00403         movlw   d'0'
00009C 6219           00404         cpfseq  OP_INT
00009E EF?? F???      00405         goto    END_ISR_HIGH
                      00406         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000A2 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000A6 0E0F               M         movlw   0x0f
0000A8 1617               M         andwf   temp
0000AA 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000AC 6217               M         cpfseq  temp
0000AE EF?? F???          M         goto    ones
                          M         
0000B2 0E10               M         movlw   b'00010000'
0000B4 2618               M         addwf   OP_sec
0000B6 0EF0               M         movlw   0xf0
0000B8 1618               M         andwf   OP_sec
0000BA 0EA0               M         movlw   0xa0
0000BC 6018               M         cpfslt  OP_sec
                          M         
0000BE 6A18               M         clrf    OP_sec
0000C0 EF?? F???          M         goto    endBCD
                          M         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000C4                    M ones
0000C4 2A18               M         incf    OP_sec
0000C6 EF?? F???          M         goto    endBCD
0000CA                    M endBCD
0000CA 0000               M         nop
                      00407 
0000CC                00408 END_ISR_HIGH
0000CC 94F2           00409         bcf     INTCON, TMR0IF
                      00410         restoreContext
0000CE 3814               M     swapf   temp_W, W               ; restore W first
0000D0 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000D4 0010           00411         retfie
                      00412 
0000D6                00413 ISR_LOW
                      00414         saveContext
0000D6 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000DA 6E14               M     movwf   temp_W                  ; save W
                      00415         ; KEYPAD INTERRUPT
0000DC A0F0           00416         btfss           INTCON3, INT1IF                 ; If KEYPAD interrupt, skip return
0000DE EF?? F???      00417         goto            END_ISR_LOW
                      00418 
                      00419         ;Check operation status
                      00420 ;       movlw           0xff                                    ; If in operation, skip return
                      00421 ;       cpfseq          InExecution
                      00422 ;       goto            END_ISR_LOW
                      00423 
                      00424         ; Process KEY
0000E2 3881           00425         swapf           PORTB, W                                ; Read PORTB<7:4> into W<3:0>
0000E4 0B0F           00426         andlw           0x0f
0000E6 6E12           00427         movwf           KEY_ISR                                 ; Put W into KEY_ISR
                      00428 ;       movlw           keyS                                    ; Put keyStar into W to compare to KEY_ISR
                      00429 ;       cpfseq          KEY_ISR                                 ; If key was '*', skip return
0000E8 EF?? F???      00430         goto            END_ISR_LOW
                      00431 
                      00432         ; Reset program counter
0000EC 6AFF           00433         clrf            TOSU
0000EE 6AFE           00434         clrf            TOSH
0000F0 6AFD           00435         clrf            TOSL
                      00436 
0000F2                00437 END_ISR_LOW
0000F2 90F0           00438         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00439         restoreContext
0000F4 3814               M     swapf   temp_W, W               ; restore W first
0000F6 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00440         
0000FA 6E14           00441         movwf   temp_W              ; save current W
0000FC CFD8 F013      00442         movff   STATUS, temp_S      ; save status
                      00443 
                      00444         ; ISR_Low routines
000100 C013 FFD8      00445         movff   temp_S, STATUS      ; retreive status
000104 3A14           00446         swapf   temp_W, f
000106 3814           00447         swapf   temp_W, w           ; restore W
000108 0010           00448         retfie
                      00449 
                      00450 ;*******************************************************************************
                      00451 ; main
                      00452 ;*******************************************************************************
00010A                00453 INIT
                      00454         ; i/o
00010A 0EFF           00455         movlw   b'11111111'
00010C 6E92           00456         movwf   TRISA
00010E 0EFF           00457         movlw   b'11111111'
000110 6E93           00458         movwf   TRISB               ; keypad
000112 0E00           00459         movlw   b'00000000'
000114 6E94           00460         movwf   TRISC
000116 0E00           00461         movlw   b'00000000'
000118 6E95           00462         movwf   TRISD
00011A 0E07           00463         movlw   b'00000111'
00011C 6E96           00464         movwf   TRISE
                      00465 
                      00466         ; analog/digital pins
00011E 0E0F           00467         movlw   b'00001111'     ; Set all AN pins to Digital
000120 6EC1           00468         movwf   ADCON1
                      00469 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00470         ; clear ports
000122 6A89           00471         clrf    LATA
000124 6A8A           00472         clrf    LATB
                      00473 ;       bcf     TRISC, SCL
                      00474 ;       bcf     TRISC, SDA
000126 6A8B           00475         clrf    LATC
000128 6A8C           00476         clrf    LATD
00012A 6A8D           00477         clrf    LATE
                      00478         
00012C 0E00           00479         movlw   b'00000000'
00012E 6EC2           00480         movwf   ADCON0
000130 0EFF           00481         movlw   b'11111111'
000132 6EC1           00482         movwf   ADCON1
                      00483         
                      00484         ; initializations
                      00485         
000134 EC?? F???      00486         call    InitLCD
                      00487         ConfigLCD
000138 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
00013A EC?? F???          M           call      WR_INS
                          M 
00013E 0E0C               M           movlw     b'00001100'    ; display on/off
000140 EC?? F???          M           call      WR_INS
                          M          ; movlw     B'00000110'    ; Entry mode
                          M          ; call      WR_INS
000144 0E01               M           movlw     b'00000001'    ; Clear ram
000146 EC?? F???          M           call      WR_INS
                      00488         
00014A EC?? F???      00489         call    RTC_INIT
00014E EC?? F???      00490         call    Delay50ms
                      00491         
                      00492         COLOUR_INIT
                          M         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
000152 0E00               M         movlw   0x00
000154 6E??               M         movwf   regaddress
000156 0E01               M         movlw   0x01
000158 6E??               M         movwf   databyte
00015A EC?? F???          M         call    WRITE_COLOUR_I2C
00015E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x00, 0x03 ; Enable Register (0x00), RGBC enable (0x02)
000162 0E00               M         movlw   0x00
000164 6E??               M         movwf   regaddress
000166 0E03               M         movlw   0x03
000168 6E??               M         movwf   databyte
00016A EC?? F???          M         call    WRITE_COLOUR_I2C
00016E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x01, 0xd6 ; Timing Register (0x01), 100ms rgbc cycle
000172 0E01               M         movlw   0x01
000174 6E??               M         movwf   regaddress
000176 0ED6               M         movlw   0xd6
000178 6E??               M         movwf   databyte
00017A EC?? F???          M         call    WRITE_COLOUR_I2C
00017E EC?? F???          M         call    delay5ms
                          M         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
000182 0E0F               M         movlw   0x0f
000184 6E??               M         movwf   regaddress
000186 0E03               M         movlw   0x03
000188 6E??               M         movwf   databyte
00018A EC?? F???          M         call    WRITE_COLOUR_I2C
00018E EC?? F???          M         call    delay5ms
                      00493         
000192 EC?? F???      00494         call    INIT_USART
                      00495 
                      00496         ; interrupts
000196 6AD0           00497         clrf    RCON
000198 6AF2           00498         clrf    INTCON
00019A 6AF1           00499         clrf    INTCON2
00019C 6AF0           00500         clrf    INTCON3
00019E 8ED0           00501         bsf     RCON, IPEN          ; priority mode
0001A0 8EF2           00502         bsf     INTCON, GIEH        ; permit global interrupts
0001A2 8CF2           00503         bsf     INTCON, GIEL
0001A4 8AF1           00504         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
0001A6 8AF2           00505         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
0001A8 84F2           00506         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001AA 84F1           00507         bsf     INTCON2, TMR0IP     ; set to high priority
0001AC 86F0           00508         bsf     INTCON3, INT1IE
0001AE 9CF0           00509         bcf     INTCON3, INT1IP
                      00510         
                      00511         ; setting up timer to sychronize with 1 second clock intervals
0001B0 9ED5           00512         bcf     T0CON, TMR0ON
0001B2 9CD5           00513         bcf     T0CON, T08BIT
0001B4 9AD5           00514         bcf     T0CON, T0CS
0001B6 98D5           00515         bcf     T0CON, T0SE
0001B8 96D5           00516         bcf     T0CON, PSA
0001BA 94D5           00517         bcf     T0CON, T0PS2        ; set prescaling to 1:16. this allows for 
0001BC 82D5           00518         bsf     T0CON, T0PS1        ; a preloading of ~50750 or 0xc63e. very
0001BE 80D5           00519         bsf     T0CON, T0PS0        ; good approximation within 3 minutes.
                      00520 
0001C0 6A21           00521         clrf    H_EE
0001C2 6A22           00522         clrf    L_EE
0001C4 6A??           00523         clrf    tens_digit
0001C6 6A??           00524         clrf    ones_digit
0001C8 6A40           00525         clrf    ESKA
0001CA 6A41           00526         clrf    ESKA_CAP
0001CC 6A42           00527         clrf    YOP
0001CE 6A43           00528         clrf    YOP_CAP
                      00529         
0001D0 0EF2           00530         movlw     b'11110010'    ; Set required keypad inputs
0001D2 6E93           00531         movwf     TRISB
                      00532         
0001D4 EC?? F???      00533         call    ClrLCD
                      00534         Display Welcome
  0000                    M         local   loop
0001D8 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001DA 6EF8               M         movwf   TBLPTRU
0001DC 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001DE 6EF7               M         movwf   TBLPTRH
0001E0 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001E2 6EF6               M         movwf   TBLPTRL
0001E4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001E6 50F5               M         movf    TABLAT, W
0001E8                    M loop
0001E8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001EC 000B               M         tblrd+*                 ; next row in table
0001EE 50F5               M         movf    TABLAT, W
0001F0 E1??               M         bnz     loop
0001F2 EC?? F???      00535         call LCD_L2
                      00536         Display Team
  0000                    M         local   loop
0001F6 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001F8 6EF8               M         movwf   TBLPTRU
0001FA 0E??               M         movlw   high Team       ; Move Table<15:8>
0001FC 6EF7               M         movwf   TBLPTRH
0001FE 0E??               M         movlw   low Team        ; Move Table<7:0>
000200 6EF6               M         movwf   TBLPTRL
000202 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000204 50F5               M         movf    TABLAT, W
000206                    M loop
000206 EC?? F???          M         call    WR_DATA         ; write to LCD
00020A 000B               M         tblrd+*                 ; next row in table
00020C 50F5               M         movf    TABLAT, W
00020E E1??               M         bnz     loop
                      00537         
                      00538         Delay50N delayR, 0x28
  0000                    M         local   loop
000210 0E28               M         movlw   0x28
000212 6E1B               M         movwf   delayR
                          M 
000214                    M loop
000214 EC?? F???          M         call    Delay50ms
000218 2E1B               M         decfsz  delayR
00021A EF?? F???          M         goto    loop
                      00539 
                      00540 ;*******************************************************************************
                      00541 ; standby mode
                      00542 ;*******************************************************************************
00021E                00543 STANDBY
00021E EC?? F???      00544         call    ClrLCD
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00545         Display StandBy
  0000                    M         local   loop
000222 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000224 6EF8               M         movwf   TBLPTRU
000226 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000228 6EF7               M         movwf   TBLPTRH
00022A 0E??               M         movlw   low StandBy     ; Move Table<7:0>
00022C 6EF6               M         movwf   TBLPTRL
00022E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000230 50F5               M         movf    TABLAT, W
000232                    M loop
000232 EC?? F???          M         call    WR_DATA         ; write to LCD
000236 000B               M         tblrd+*                 ; next row in table
000238 50F5               M         movf    TABLAT, W
00023A E1??               M         bnz     loop
                      00546 
00023C                00547 HOLD_STANDBY
00023C EC?? F???      00548         call    READ_KEY_TIME
                      00549         ChangeMode key5, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000240 0E05               M         movlw   key5                ; poll for mode
000242 6210               M         cpfseq  KEY                 ; check this against key press
000244 EF?? F???          M         goto    Exit
                          M 
000248                    M Next
000248 6A89               M         clrf    LATA                ; clear pins before proceeding
00024A 6A8A               M         clrf    LATB
00024C 6A8B               M         clrf    LATC
00024E 6A8C               M         clrf    LATD
000250 EF?? F???          M         goto    COLOUR_TEST
                          M 
000254                    M Exit
000254 0000               M         nop
                      00550         ChangeMode keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000256 0E03               M         movlw   keyA                ; poll for mode
000258 6210               M         cpfseq  KEY                 ; check this against key press
00025A EF?? F???          M         goto    Exit
                          M 
00025E                    M Next
00025E 6A89               M         clrf    LATA                ; clear pins before proceeding
000260 6A8A               M         clrf    LATB
000262 6A8B               M         clrf    LATC
000264 6A8C               M         clrf    LATD
000266 EF?? F???          M         goto    EXECUTION
                          M 
00026A                    M Exit
00026A 0000               M         nop
                      00551         ChangeMode keyB, LOG
  0000                    M         local Next, Exit
                          M 
00026C 0E07               M         movlw   keyB                ; poll for mode
00026E 6210               M         cpfseq  KEY                 ; check this against key press
000270 EF?? F???          M         goto    Exit
                          M 
000274                    M Next
000274 6A89               M         clrf    LATA                ; clear pins before proceeding
000276 6A8A               M         clrf    LATB
000278 6A8B               M         clrf    LATC
00027A 6A8C               M         clrf    LATD
00027C EF?? F???          M         goto    LOG
                          M 
000280                    M Exit
000280 0000               M         nop
                      00552         ChangeMode keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
000282 0E0B               M         movlw   keyC                ; poll for mode
000284 6210               M         cpfseq  KEY                 ; check this against key press
000286 EF?? F???          M         goto    Exit
                          M 
00028A                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00028A 6A89               M         clrf    LATA                ; clear pins before proceeding
00028C 6A8A               M         clrf    LATB
00028E 6A8B               M         clrf    LATC
000290 6A8C               M         clrf    LATD
000292 EF?? F???          M         goto    PERM_LOG
                          M 
000296                    M Exit
000296 0000               M         nop
                      00553         ChangeMode keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
000298 0E0F               M         movlw   keyD                ; poll for mode
00029A 6210               M         cpfseq  KEY                 ; check this against key press
00029C EF?? F???          M         goto    Exit
                          M 
0002A0                    M Next
0002A0 6A89               M         clrf    LATA                ; clear pins before proceeding
0002A2 6A8A               M         clrf    LATB
0002A4 6A8B               M         clrf    LATC
0002A6 6A8C               M         clrf    LATD
0002A8 EF?? F???          M         goto    PC_MODE
                          M 
0002AC                    M Exit
0002AC 0000               M         nop
0002AE D???           00554         bra     HOLD_STANDBY
                      00555 
                      00556 ;*******************************************************************************
                      00557 ; execution mode
                      00558 ;*******************************************************************************
                      00559 
0002B0                00560 CHECK_CLEAR
                      00561         SUB16   CLEAR, RED                  ; check first against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002B0 5047               M         movf    RED+1, WREG ; move high y into working register
0002B2 5C45               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002B4 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002B6 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002BA 5046               M         movf    RED, WREG
0002BC 5C44               M         subwf   CLEAR, 0 
0002BE                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002BE A0D8           00562         btfss   STATUS, C
0002C0 0012           00563         return                              ; RED > CLEAR
                      00564         
                      00565         SUB16   CLEAR, GREEN                ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002C2 5049               M         movf    GREEN+1, WREG ; move high y into working register
0002C4 5C45               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002C6 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002C8 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002CC 5048               M         movf    GREEN, WREG
0002CE 5C44               M         subwf   CLEAR, 0 
0002D0                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002D0 A0D8           00566         btfss   STATUS, C
0002D2 0012           00567         return                              ; GREEN > CLEAR
                      00568         
                      00569         SUB16   CLEAR, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002D4 504B               M         movf    BLUE+1, WREG ; move high y into working register
0002D6 5C45               M         subwf   CLEAR+1, 0  ; do subtraction x - w => w
0002D8 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002DA EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002DE 504A               M         movf    BLUE, WREG
0002E0 5C44               M         subwf   CLEAR, 0 
0002E2                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002E2 A0D8           00570         btfss   STATUS, C
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002E4 0012           00571         return                              ; BLUE > CLEAR
                      00572         
0002E6 0E63           00573         movlw   'c'                         ; CLEAR > everything else
0002E8 EC?? F???      00574         call    WR_DATA
0002EC D???           00575         bra     LOOPING
                      00576 
0002EE                00577 CHECK_RED
                      00578         SUB16   RED, CLEAR                  ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
0002EE 5045               M         movf    CLEAR+1, WREG ; move high y into working register
0002F0 5C47               M         subwf   RED+1, 0    ; do subtraction x - w => w
0002F2 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
0002F4 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
0002F8 5044               M         movf    CLEAR, WREG
0002FA 5C46               M         subwf   RED, 0  
0002FC                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
0002FC A0D8           00579         btfss   STATUS, C
0002FE 0012           00580         return                              ; CLEAR > RED
                      00581         
                      00582         SUB16   RED, GREEN                  ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000300 5049               M         movf    GREEN+1, WREG ; move high y into working register
000302 5C47               M         subwf   RED+1, 0    ; do subtraction x - w => w
000304 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000306 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00030A 5048               M         movf    GREEN, WREG
00030C 5C46               M         subwf   RED, 0  
00030E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00030E A0D8           00583         btfss   STATUS, C
000310 0012           00584         return                              ; GREEN > RED
                      00585         
                      00586         SUB16   RED, BLUE                   ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000312 504B               M         movf    BLUE+1, WREG ; move high y into working register
000314 5C47               M         subwf   RED+1, 0    ; do subtraction x - w => w
000316 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000318 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00031C 504A               M         movf    BLUE, WREG
00031E 5C46               M         subwf   RED, 0  
000320                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000320 A0D8           00587         btfss   STATUS, C
000322 0012           00588         return                              ; BLUE > RED
                      00589         
000324 0E72           00590         movlw   'r'                         ; RED > everything else
000326 EC?? F???      00591         call    WR_DATA
00032A D???           00592         bra     LOOPING
                      00593         
00032C                00594 CHECK_GREEN
                      00595         SUB16   GREEN, CLEAR                ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00032C 5045               M         movf    CLEAR+1, WREG ; move high y into working register
00032E 5C49               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000330 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000332 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000336 5044               M         movf    CLEAR, WREG
000338 5C48               M         subwf   GREEN, 0 
00033A                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00033A A0D8           00596         btfss   STATUS, C
00033C 0012           00597         return                              ; CLEAR > GREEN
                      00598         
                      00599         SUB16   GREEN, RED                  ; check against red
  0000                    M         local RESULTS
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[202]: Argument out of range.  Least significant bits used.
00033E 5047               M         movf    RED+1, WREG ; move high y into working register
000340 5C49               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000342 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000344 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000348 5046               M         movf    RED, WREG
00034A 5C48               M         subwf   GREEN, 0 
00034C                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00034C A0D8           00600         btfss   STATUS, C
00034E 0012           00601         return                              ; RED > GREEN
                      00602         
                      00603         SUB16   GREEN, BLUE                 ; check against blue
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
000350 504B               M         movf    BLUE+1, WREG ; move high y into working register
000352 5C49               M         subwf   GREEN+1, 0  ; do subtraction x - w => w
000354 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000356 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
00035A 504A               M         movf    BLUE, WREG
00035C 5C48               M         subwf   GREEN, 0 
00035E                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00035E A0D8           00604         btfss   STATUS, C
000360 0012           00605         return                              ; BLUE > GREEN
                      00606         
000362 0E67           00607         movlw   'g'                         ; GREEN > everything else
000364 EC?? F???      00608         call    WR_DATA
000368 D???           00609         bra     LOOPING
                      00610         
00036A                00611 CHECK_BLUE
                      00612         SUB16   BLUE, CLEAR                 ; check first against clear
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00036A 5045               M         movf    CLEAR+1, WREG ; move high y into working register
00036C 5C4B               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
00036E B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000370 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000374 5044               M         movf    CLEAR, WREG
000376 5C4A               M         subwf   BLUE, 0 
000378                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
000378 A0D8           00613         btfss   STATUS, C
00037A 0012           00614         return                              ; CLEAR > BLUE
                      00615         
                      00616         SUB16   BLUE, RED                   ; check against red
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00037C 5047               M         movf    RED+1, WREG ; move high y into working register
00037E 5C4B               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000380 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000382 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000386 5046               M         movf    RED, WREG
000388 5C4A               M         subwf   BLUE, 0 
00038A                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00038A A0D8           00617         btfss   STATUS, C
00038C 0012           00618         return                              ; RED > BLUE
                      00619 
                      00620         SUB16   BLUE, GREEN                 ; check against green
  0000                    M         local RESULTS
Warning[202]: Argument out of range.  Least significant bits used.
00038E 5049               M         movf    GREEN+1, WREG ; move high y into working register
000390 5C4B               M         subwf   BLUE+1, 0   ; do subtraction x - w => w
000392 B4D8               M         btfsc   STATUS, Z   ; check if subtraction is zero (if Z=1)
000394 EF?? F???          M         goto    RESULTS     ; if it is, need to check lower bytes
                          M         
Warning[202]: Argument out of range.  Least significant bits used.
000398 5048               M         movf    GREEN, WREG
00039A 5C4A               M         subwf   BLUE, 0 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00039C                    M RESULTS                     ; if... x=y => z=1, x<y => c=0, x>=y => c=1
00039C A0D8           00621         btfss   STATUS, C
00039E 0012           00622         return                              ; GREEN > CLEAR
                      00623         
0003A0 0E62           00624         movlw   'b'                         ; BLUE > everything else
0003A2 EC?? F???      00625         call    WR_DATA
0003A6 0012           00626         return
                      00627         
0003A8                00628 COLOUR_TEST
                      00629 
0003A8                00630 LOOPING
                      00631         Delay50N delayR, 0x28
  0000                    M         local   loop
0003A8 0E28               M         movlw   0x28
0003AA 6E1B               M         movwf   delayR
                          M 
0003AC                    M loop
0003AC EC?? F???          M         call    Delay50ms
0003B0 2E1B               M         decfsz  delayR
0003B2 EF?? F???          M         goto    loop
0003B6 EC?? F???      00632         call    ClrLCD
                      00633         COLOUR_GET_DATA CLEAR, RED, GREEN, BLUE
0003BA EC?? F???          M         call    delay5ms
                          M         
                          M         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
0003BE 0E14               M         movlw   0x14
0003C0 6E??               M         movwf   regaddress
0003C2 EC?? F???          M         call    READ_COLOUR_I2C
0003C6 C??? F044          M         movff   datachar, CLEAR+0
                          M         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
0003CA 0E15               M         movlw   0x15
0003CC 6E??               M         movwf   regaddress
0003CE EC?? F???          M         call    READ_COLOUR_I2C
0003D2 C??? F045          M         movff   datachar, CLEAR+1
                          M                 
                          M         COLOUR_READ 0x16    ; read red colour address low, command bits set later
0003D6 0E16               M         movlw   0x16
0003D8 6E??               M         movwf   regaddress
0003DA EC?? F???          M         call    READ_COLOUR_I2C
0003DE C??? F046          M         movff   datachar, RED+0
                          M         COLOUR_READ 0x17    ; read red colour address high, command bits set later
0003E2 0E17               M         movlw   0x17
0003E4 6E??               M         movwf   regaddress
0003E6 EC?? F???          M         call    READ_COLOUR_I2C
0003EA C??? F047          M         movff   datachar, RED+1
                          M         
                          M         COLOUR_READ 0x18    ; read green colour address low, command bits set later
0003EE 0E18               M         movlw   0x18
0003F0 6E??               M         movwf   regaddress
0003F2 EC?? F???          M         call    READ_COLOUR_I2C
0003F6 C??? F048          M         movff   datachar, GREEN+0
                          M         COLOUR_READ 0x19    ; read green colour address high, command bits set later
0003FA 0E19               M         movlw   0x19
0003FC 6E??               M         movwf   regaddress
0003FE EC?? F???          M         call    READ_COLOUR_I2C
000402 C??? F049          M         movff   datachar, GREEN+1
                          M         
                          M         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
000406 0E1A               M         movlw   0x1a
000408 6E??               M         movwf   regaddress
00040A EC?? F???          M         call    READ_COLOUR_I2C
00040E C??? F04A          M         movff   datachar, BLUE+0
                          M         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
000412 0E1B               M         movlw   0x1b
000414 6E??               M         movwf   regaddress
000416 EC?? F???          M         call    READ_COLOUR_I2C
00041A C??? F04B          M         movff   datachar, BLUE+1
                      00634         
00041E EC?? F???      00635         call    CHECK_CLEAR
000422 EC?? F???      00636         call    CHECK_RED
000426 EC?? F???      00637         call    CHECK_GREEN
00042A EC?? F???      00638         call    CHECK_BLUE
00042E D???           00639         bra LOOPING
                      00640         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000430                00641 EXECUTION
000430 EC?? F???      00642         call        ClearEEPROM_21
                      00643         ; save the starting time
000434 EC?? F???      00644         call        SAVE_TIME
                      00645                 
                      00646         ; display
000438 681F           00647         setf        inExecution
00043A EC?? F???      00648         call        ClrLCD
                      00649         Display     Exe1
  0000                    M         local   loop
00043E 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
000440 6EF8               M         movwf   TBLPTRU
000442 0E??               M         movlw   high Exe1       ; Move Table<15:8>
000444 6EF7               M         movwf   TBLPTRH
000446 0E??               M         movlw   low Exe1        ; Move Table<7:0>
000448 6EF6               M         movwf   TBLPTRL
00044A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00044C 50F5               M         movf    TABLAT, W
00044E                    M loop
00044E EC?? F???          M         call    WR_DATA         ; write to LCD
000452 000B               M         tblrd+*                 ; next row in table
000454 50F5               M         movf    TABLAT, W
000456 E1??               M         bnz     loop
000458 EC?? F???      00650         call        LCD_L2
00045C 0EC5           00651         movlw       0xc5                    ; setting up timer
00045E 6ED7           00652         movwf       TMR0H
000460 0E44           00653         movlw       0x44    
000462 6ED6           00654         movwf       TMR0L
                      00655         
000464 8ED5           00656         bsf         T0CON, TMR0ON           ; turning on timer
                      00657         ; initialize variables
000466 6A18           00658         clrf        OP_sec
000468 6A19           00659         clrf        OP_INT
00046A 6A44           00660         clrf        CLEAR
00046C 6A48           00661         clrf        GREEN
00046E 6A46           00662         clrf        RED
000470 6A4A           00663         clrf        BLUE
                      00664         
                      00665 ;COLLECTIONS_STEP
                      00666 ;       
                      00667 ;TERM_CHECK
                      00668 ;       
                      00669 ;BOTTLE_CHECK
                      00670 ;
                      00671 ;COLOUR_ONE
                      00672 ;
                      00673 ;COLOUR_TWO
                      00674 ;       
                      00675 ;BRAINS
                      00676 ;       
                      00677 ;TRAY_STEP
                      00678 ;       
                      00679 
000472                00680 HOLD_EXE
000472 EC?? F???      00681         call        READ_KEY
                      00682         ChangeMode  keyS, EXIT_EXE
  0000                    M         local Next, Exit
                          M 
000476 0E0C               M         movlw   keyS                ; poll for mode
000478 6210               M         cpfseq  KEY                 ; check this against key press
00047A EF?? F???          M         goto    Exit
                          M 
00047E                    M Next
00047E 6A89               M         clrf    LATA                ; clear pins before proceeding
000480 6A8A               M         clrf    LATB
000482 6A8B               M         clrf    LATC
000484 6A8C               M         clrf    LATD
000486 EF?? F???          M         goto    EXIT_EXE
                          M 
00048A                    M Exit
00048A 0000               M         nop
00048C D???           00683         bra         HOLD_EXE
                      00684         
00048E                00685 EXIT_EXE
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00686         ; stop timer and save the execution time to eeprom
00048E 9ED5           00687         bcf         T0CON, TMR0ON
000490 EC?? F???      00688         call        SAVE_EXE_TIME
                      00689                 
                      00690         ; Clear inExecution flag to stop '*' interrupts
000494 6A1F           00691         clrf        inExecution
                      00692         
000496 C040 FFE8      00693         movff       ESKA, WREG
00049A 0F30           00694         addlw       0x30
                      00695         WriteEE     WREG, H_EE, L_EE
00049C C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004A0 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004A4 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004A8 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004AA D???               M         bra     $-2
                          M 
0004AC 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004AE 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004B0 84A6               M         bsf     EECON1, WREN        ; enable write
0004B2 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004B4 98A1               M         bcf     PIR2, EEIF
                          M 
0004B6 0E55               M         movlw   0x55
0004B8 6EA7               M         movwf   EECON2              ; write 55h
0004BA 0EAA               M         movlw   0xaa
0004BC 6EA7               M         movwf   EECON2              ; write 0xaa
0004BE 82A6               M         bsf     EECON1, WR          ; begin write
0004C0 B2A6               M         btfsc   EECON1, WR
0004C2 D???               M         bra     $-2
                          M 
0004C4 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004C6 94A6               M         bcf     EECON1, WREN        ; disable writes
0004C8 2A22           00696         incf        L_EE
                      00697         
0004CA C041 FFE8      00698         movff       ESKA_CAP, WREG
0004CE 0F30           00699         addlw       0x30
                      00700         WriteEE     WREG, H_EE, L_EE
0004D0 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0004D4 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0004D8 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0004DC B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0004DE D???               M         bra     $-2
                          M 
0004E0 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0004E2 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0004E4 84A6               M         bsf     EECON1, WREN        ; enable write
0004E6 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0004E8 98A1               M         bcf     PIR2, EEIF
                          M 
0004EA 0E55               M         movlw   0x55
0004EC 6EA7               M         movwf   EECON2              ; write 55h
0004EE 0EAA               M         movlw   0xaa
0004F0 6EA7               M         movwf   EECON2              ; write 0xaa
0004F2 82A6               M         bsf     EECON1, WR          ; begin write
0004F4 B2A6               M         btfsc   EECON1, WR
0004F6 D???               M         bra     $-2
                          M 
0004F8 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0004FA 94A6               M         bcf     EECON1, WREN        ; disable writes
0004FC 2A22           00701         incf        L_EE
                      00702         
0004FE C042 FFE8      00703         movff       YOP, WREG
000502 0F30           00704         addlw       0x30
                      00705         WriteEE     WREG, H_EE, L_EE
000504 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000508 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
00050C CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000510 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000512 D???               M         bra     $-2
                          M 
000514 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000516 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000518 84A6               M         bsf     EECON1, WREN        ; enable write
00051A 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00051C 98A1               M         bcf     PIR2, EEIF
                          M 
00051E 0E55               M         movlw   0x55
000520 6EA7               M         movwf   EECON2              ; write 55h
000522 0EAA               M         movlw   0xaa
000524 6EA7               M         movwf   EECON2              ; write 0xaa
000526 82A6               M         bsf     EECON1, WR          ; begin write
000528 B2A6               M         btfsc   EECON1, WR
00052A D???               M         bra     $-2
                          M 
00052C 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
00052E 94A6               M         bcf     EECON1, WREN        ; disable writes
000530 2A22           00706         incf        L_EE
                      00707         
000532 C043 FFE8      00708         movff       YOP_CAP, WREG
000536 0F30           00709         addlw       0x30
                      00710         WriteEE     WREG, H_EE, L_EE
000538 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
00053C C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000540 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000544 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000546 D???               M         bra     $-2
                          M 
000548 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00054A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00054C 84A6               M         bsf     EECON1, WREN        ; enable write
00054E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000550 98A1               M         bcf     PIR2, EEIF
                          M 
000552 0E55               M         movlw   0x55
000554 6EA7               M         movwf   EECON2              ; write 55h
000556 0EAA               M         movlw   0xaa
000558 6EA7               M         movwf   EECON2              ; write 0xaa
00055A 82A6               M         bsf     EECON1, WR          ; begin write
00055C B2A6               M         btfsc   EECON1, WR
00055E D???               M         bra     $-2
                          M 
000560 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000562 94A6               M         bcf     EECON1, WREN        ; disable writes
000564 2A22           00711         incf        L_EE
                      00712         
000566 EF?? F???      00713         goto        SaveData
                      00714 
00056A                00715 SaveData
00056A EC?? F???      00716         call        ClrLCD
                      00717         Display     SAVE
  0000                    M         local   loop
00056E 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000570 6EF8               M         movwf   TBLPTRU
000572 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000574 6EF7               M         movwf   TBLPTRH
000576 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000578 6EF6               M         movwf   TBLPTRL
00057A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00057C 50F5               M         movf    TABLAT, W
00057E                    M loop
00057E EC?? F???          M         call    WR_DATA         ; write to LCD
000582 000B               M         tblrd+*                 ; next row in table
000584 50F5               M         movf    TABLAT, W
000586 E1??               M         bnz     loop
                      00718 
000588 0E00           00719         movlw       d'0'
00058A 6E21           00720         movwf       H_EE
00058C 0EA8           00721         movlw       d'168'              ; take d'168' as last
00058E 6E22           00722         movwf       L_EE
000590 0E00           00723         movlw       d'0'
000592 6E24           00724         movwf       tempH_EE
000594 0EDC           00725         movlw       d'220'              ; temp for low constant
000596 6E25           00726         movwf       tempL_EE
                      00727         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000598 6A16           00728         clrf        counter2
00059A 6A15           00729         clrf        counter
                      00730         
00059C                00731 ShiftLoop
00059C 2A15           00732         incf            counter
                      00733         READEE          REG_EE, H_EE, L_EE
00059E C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
0005A2 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
0005A6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0005A8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0005AA 80A6               M         bsf     EECON1, RD          ; read EEPROM
0005AC CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
0005B0 0E15           00734         movlw           d'21'
0005B2 2622           00735         addwf           L_EE
                      00736         WriteEE         REG_EE, H_EE, L_EE
0005B4 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0005B8 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0005BC C023 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
0005C0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0005C2 D???               M         bra     $-2
                          M 
0005C4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0005C6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0005C8 84A6               M         bsf     EECON1, WREN        ; enable write
0005CA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0005CC 98A1               M         bcf     PIR2, EEIF
                          M 
0005CE 0E55               M         movlw   0x55
0005D0 6EA7               M         movwf   EECON2              ; write 55h
0005D2 0EAA               M         movlw   0xaa
0005D4 6EA7               M         movwf   EECON2              ; write 0xaa
0005D6 82A6               M         bsf     EECON1, WR          ; begin write
0005D8 B2A6               M         btfsc   EECON1, WR
0005DA D???               M         bra     $-2
                          M 
0005DC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0005DE 94A6               M         bcf     EECON1, WREN        ; disable writes
0005E0 0E14           00737         movlw           d'20'
0005E2 5E22           00738         subwf           L_EE
0005E4 0E15           00739         movlw           d'21'
0005E6 6215           00740         cpfseq          counter
0005E8 EF?? F???      00741         goto            ShiftLoop
                      00742         
                      00743         ; Set EEPROM address to the previous 21 byte block, and reset temp address
0005EC 0E2A           00744         movlw           d'42'
0005EE 5E22           00745         subwf           L_EE
0005F0 0EDC           00746         movlw           d'220'
0005F2 6E25           00747         movwf           tempL_EE
0005F4 6A15           00748         clrf            counter
0005F6 2A16           00749         incf            counter2
0005F8 0E09           00750         movlw           d'9'
0005FA 6216           00751         cpfseq          counter2        ; Skip if 9 shifts were made
0005FC EF?? F???      00752         goto            ShiftLoop
                      00753 
000600 EF?? F???      00754         goto            LOG
                      00755 
                      00756 ;*******************************************************************************
                      00757 ; sorting statistics log mode
                      00758 ;*******************************************************************************
                      00759         
000604                00760 LOG
000604 EC?? F???      00761         call    ClrLCD
                      00762         Display Log1
  0000                    M         local   loop
000608 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00060A 6EF8               M         movwf   TBLPTRU
00060C 0E??               M         movlw   high Log1       ; Move Table<15:8>
00060E 6EF7               M         movwf   TBLPTRH
000610 0E??               M         movlw   low Log1        ; Move Table<7:0>
000612 6EF6               M         movwf   TBLPTRL
000614 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000616 50F5               M         movf    TABLAT, W
000618                    M loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000618 EC?? F???          M         call    WR_DATA         ; write to LCD
00061C 000B               M         tblrd+*                 ; next row in table
00061E 50F5               M         movf    TABLAT, W
000620 E1??               M         bnz     loop
                      00763 
                      00764         ; display most recent run data
000622 0E0A           00765         movlw   d'10'
000624 6E22           00766         movwf   L_EE
                      00767 ;       READEE  OP_sec, H_EE, L_EE
                      00768 ;       incf    L_EE
                      00769 ;       READEE  OP_INT, H_EE, L_EE
                      00770 ;       incf    L_EE
000626 EC?? F???      00771         call    DisplayExeTime
                      00772 
00062A EC?? F???      00773         call    LCD_L2
00062E 6A22           00774         clrf    L_EE
000630 EC?? F???      00775         call    DispOpRTC
                      00776 
000634                00777 HOLD_LOG
000634 EC?? F???      00778         call    READ_KEY
                      00779         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
000638 0E07               M         movlw   keyB                ; poll for mode
00063A 6210               M         cpfseq  KEY                 ; check this against key press
00063C EF?? F???          M         goto    Exit
                          M 
000640                    M Next
000640 6A89               M         clrf    LATA                ; clear pins before proceeding
000642 6A8A               M         clrf    LATB
000644 6A8B               M         clrf    LATC
000646 6A8C               M         clrf    LATD
000648 EF?? F???          M         goto    LOG_INFO
                          M 
00064C                    M Exit
00064C 0000               M         nop
                      00780         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
00064E 0E0D               M         movlw   key0                ; poll for mode
000650 6210               M         cpfseq  KEY                 ; check this against key press
000652 EF?? F???          M         goto    Exit
                          M 
000656                    M Next
000656 6A89               M         clrf    LATA                ; clear pins before proceeding
000658 6A8A               M         clrf    LATB
00065A 6A8B               M         clrf    LATC
00065C 6A8C               M         clrf    LATD
00065E EF?? F???          M         goto    STANDBY
                          M 
000662                    M Exit
000662 0000               M         nop
000664 D???           00781         bra     HOLD_LOG
                      00782 
000666                00783 LOG_INFO
000666 EC?? F???      00784         call    ClrLCD
                      00785         Display LogInfo1
  0000                    M         local   loop
00066A 0E??               M         movlw   upper LogInfo1  ; Move Table<20:16>
00066C 6EF8               M         movwf   TBLPTRU
00066E 0E??               M         movlw   high LogInfo1   ; Move Table<15:8>
000670 6EF7               M         movwf   TBLPTRH
000672 0E??               M         movlw   low LogInfo1    ; Move Table<7:0>
000674 6EF6               M         movwf   TBLPTRL
000676 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000678 50F5               M         movf    TABLAT, W
00067A                    M loop
00067A EC?? F???          M         call    WR_DATA         ; write to LCD
00067E 000B               M         tblrd+*                 ; next row in table
000680 50F5               M         movf    TABLAT, W
000682 E1??               M         bnz     loop
000684 EC?? F???      00786         call    LCD_L2
                      00787         Display LogInfo2
  0000                    M         local   loop
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000688 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
00068A 6EF8               M         movwf   TBLPTRU
00068C 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
00068E 6EF7               M         movwf   TBLPTRH
000690 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
000692 6EF6               M         movwf   TBLPTRL
000694 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000696 50F5               M         movf    TABLAT, W
000698                    M loop
000698 EC?? F???          M         call    WR_DATA         ; write to LCD
00069C 000B               M         tblrd+*                 ; next row in table
00069E 50F5               M         movf    TABLAT, W
0006A0 E1??               M         bnz     loop
0006A2 6A21           00788         clrf    H_EE
0006A4 6A22           00789         clrf    L_EE
                      00790         ;DisplayLog  H_EE, L_EE
0006A6                00791 HOLD_LOG_INFO
0006A6 EC?? F???      00792         call    READ_KEY
                      00793         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
0006AA 0E0D               M         movlw   key0                ; poll for mode
0006AC 6210               M         cpfseq  KEY                 ; check this against key press
0006AE EF?? F???          M         goto    Exit
                          M 
0006B2                    M Next
0006B2 6A89               M         clrf    LATA                ; clear pins before proceeding
0006B4 6A8A               M         clrf    LATB
0006B6 6A8B               M         clrf    LATC
0006B8 6A8C               M         clrf    LATD
0006BA EF?? F???          M         goto    LOG
                          M 
0006BE                    M Exit
0006BE 0000               M         nop
0006C0 D???           00794         bra     HOLD_LOG
                      00795         
                      00796 ;*******************************************************************************
                      00797 ; permanent logs
                      00798 ;*******************************************************************************
                      00799 
0006C2                00800 PERM_LOG
0006C2 EC?? F???      00801         call    ClrLCD
                      00802         Display PermLog1
  0000                    M         local   loop
0006C6 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0006C8 6EF8               M         movwf   TBLPTRU
0006CA 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0006CC 6EF7               M         movwf   TBLPTRH
0006CE 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0006D0 6EF6               M         movwf   TBLPTRL
0006D2 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006D4 50F5               M         movf    TABLAT, W
0006D6                    M loop
0006D6 EC?? F???          M         call    WR_DATA         ; write to LCD
0006DA 000B               M         tblrd+*                 ; next row in table
0006DC 50F5               M         movf    TABLAT, W
0006DE E1??               M         bnz     loop
0006E0 EC?? F???      00803         call    LCD_L2
                      00804         Display PermLog2
  0000                    M         local   loop
0006E4 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
0006E6 6EF8               M         movwf   TBLPTRU
0006E8 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
0006EA 6EF7               M         movwf   TBLPTRH
0006EC 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
0006EE 6EF6               M         movwf   TBLPTRL
0006F0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0006F2 50F5               M         movf    TABLAT, W
0006F4                    M loop
0006F4 EC?? F???          M         call    WR_DATA         ; write to LCD
0006F8 000B               M         tblrd+*                 ; next row in table
0006FA 50F5               M         movf    TABLAT, W
0006FC E1??               M         bnz     loop
                      00805         
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006FE                00806 HOLD_PERM_LOG
0006FE EC?? F???      00807         call    READ_KEY
                      00808         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000702 0E0D               M         movlw   key0                ; poll for mode
000704 6210               M         cpfseq  KEY                 ; check this against key press
000706 EF?? F???          M         goto    Exit
                          M 
00070A                    M Next
00070A 6A89               M         clrf    LATA                ; clear pins before proceeding
00070C 6A8A               M         clrf    LATB
00070E 6A8B               M         clrf    LATC
000710 6A8C               M         clrf    LATD
000712 EF?? F???          M         goto    STANDBY
                          M 
000716                    M Exit
000716 0000               M         nop
                      00809         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
                          M 
000718 0E00               M         movlw   key1                ; poll for mode
00071A 6210               M         cpfseq  KEY                 ; check this against key press
00071C EF?? F???          M         goto    Exit
                          M 
000720                    M Next
000720 6A89               M         clrf    LATA                ; clear pins before proceeding
000722 6A8A               M         clrf    LATB
000724 6A8B               M         clrf    LATC
000726 6A8C               M         clrf    LATD
000728 EF?? F???          M         goto    PLOG
                          M 
00072C                    M Exit
00072C 0000               M         nop
                      00810         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00072E 0E01               M         movlw   key2                ; poll for mode
000730 6210               M         cpfseq  KEY                 ; check this against key press
000732 EF?? F???          M         goto    Exit
                          M 
000736                    M Next
000736 6A89               M         clrf    LATA                ; clear pins before proceeding
000738 6A8A               M         clrf    LATB
00073A 6A8B               M         clrf    LATC
00073C 6A8C               M         clrf    LATD
00073E EF?? F???          M         goto    PLOG
                          M 
000742                    M Exit
000742 0000               M         nop
                      00811         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
000744 0E02               M         movlw   key3                ; poll for mode
000746 6210               M         cpfseq  KEY                 ; check this against key press
000748 EF?? F???          M         goto    Exit
                          M 
00074C                    M Next
00074C 6A89               M         clrf    LATA                ; clear pins before proceeding
00074E 6A8A               M         clrf    LATB
000750 6A8B               M         clrf    LATC
000752 6A8C               M         clrf    LATD
000754 EF?? F???          M         goto    PLOG
                          M 
000758                    M Exit
000758 0000               M         nop
                      00812         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
00075A 0E04               M         movlw   key4                ; poll for mode
00075C 6210               M         cpfseq  KEY                 ; check this against key press
00075E EF?? F???          M         goto    Exit
                          M 
000762                    M Next
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000762 6A89               M         clrf    LATA                ; clear pins before proceeding
000764 6A8A               M         clrf    LATB
000766 6A8B               M         clrf    LATC
000768 6A8C               M         clrf    LATD
00076A EF?? F???          M         goto    PLOG
                          M 
00076E                    M Exit
00076E 0000               M         nop
                      00813         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
000770 0E05               M         movlw   key5                ; poll for mode
000772 6210               M         cpfseq  KEY                 ; check this against key press
000774 EF?? F???          M         goto    Exit
                          M 
000778                    M Next
000778 6A89               M         clrf    LATA                ; clear pins before proceeding
00077A 6A8A               M         clrf    LATB
00077C 6A8B               M         clrf    LATC
00077E 6A8C               M         clrf    LATD
000780 EF?? F???          M         goto    PLOG
                          M 
000784                    M Exit
000784 0000               M         nop
                      00814         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
000786 0E06               M         movlw   key6                ; poll for mode
000788 6210               M         cpfseq  KEY                 ; check this against key press
00078A EF?? F???          M         goto    Exit
                          M 
00078E                    M Next
00078E 6A89               M         clrf    LATA                ; clear pins before proceeding
000790 6A8A               M         clrf    LATB
000792 6A8B               M         clrf    LATC
000794 6A8C               M         clrf    LATD
000796 EF?? F???          M         goto    PLOG
                          M 
00079A                    M Exit
00079A 0000               M         nop
                      00815         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
00079C 0E08               M         movlw   key7                ; poll for mode
00079E 6210               M         cpfseq  KEY                 ; check this against key press
0007A0 EF?? F???          M         goto    Exit
                          M 
0007A4                    M Next
0007A4 6A89               M         clrf    LATA                ; clear pins before proceeding
0007A6 6A8A               M         clrf    LATB
0007A8 6A8B               M         clrf    LATC
0007AA 6A8C               M         clrf    LATD
0007AC EF?? F???          M         goto    PLOG
                          M 
0007B0                    M Exit
0007B0 0000               M         nop
                      00816         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
0007B2 0E09               M         movlw   key8                ; poll for mode
0007B4 6210               M         cpfseq  KEY                 ; check this against key press
0007B6 EF?? F???          M         goto    Exit
                          M 
0007BA                    M Next
0007BA 6A89               M         clrf    LATA                ; clear pins before proceeding
0007BC 6A8A               M         clrf    LATB
0007BE 6A8B               M         clrf    LATC
0007C0 6A8C               M         clrf    LATD
0007C2 EF?? F???          M         goto    PLOG
                          M 
0007C6                    M Exit
0007C6 0000               M         nop
                      00817         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0007C8 0E0A               M         movlw   key9                ; poll for mode
0007CA 6210               M         cpfseq  KEY                 ; check this against key press
0007CC EF?? F???          M         goto    Exit
                          M 
0007D0                    M Next
0007D0 6A89               M         clrf    LATA                ; clear pins before proceeding
0007D2 6A8A               M         clrf    LATB
0007D4 6A8B               M         clrf    LATC
0007D6 6A8C               M         clrf    LATD
0007D8 EF?? F???          M         goto    PLOG
                          M 
0007DC                    M Exit
0007DC 0000               M         nop
0007DE D???           00818         bra HOLD_PERM_LOG
                      00819         
0007E0                00820 PLOG
0007E0 EC?? F???      00821         call    ClrLCD
                      00822         Display PermLog1
  0000                    M         local   loop
0007E4 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
0007E6 6EF8               M         movwf   TBLPTRU
0007E8 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
0007EA 6EF7               M         movwf   TBLPTRH
0007EC 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
0007EE 6EF6               M         movwf   TBLPTRL
0007F0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0007F2 50F5               M         movf    TABLAT, W
0007F4                    M loop
0007F4 EC?? F???          M         call    WR_DATA         ; write to LCD
0007F8 000B               M         tblrd+*                 ; next row in table
0007FA 50F5               M         movf    TABLAT, W
0007FC E1??               M         bnz     loop
                      00823         
                      00824         ; find the key press value
0007FE C010 FFE8      00825         movff   KEY, WREG
000802 2AE8           00826         incf    WREG        ; W = KEY+1
000804 6E17           00827         movwf   temp
                      00828         
000806 42E8           00829         rrncf   WREG        ; division by 4
000808 9EE8           00830         bcf     WREG, 7     ; clear last bit, overflow from rotate
00080A 42E8           00831         rrncf   WREG        
00080C 9EE8           00832         bcf     WREG, 7
00080E 5E17           00833         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
000810 C017 FFE8      00834         movff   temp, WREG
000814 C017 F011      00835         movff   temp, temp_KEY
000818 0D15           00836         mullw   d'21'       ; indexed as mutliples of 21
                      00837 
00081A                00838 displayNum
00081A C011 FFE8      00839         movff   temp_KEY, WREG
00081E 0F30           00840         addlw   0x30
000820 EC?? F???      00841         call    WR_DATA
000824 0E3A           00842         movlw   ":"
000826 EC?? F???      00843         call    WR_DATA
00082A 0E20           00844         movlw   " "
00082C EC?? F???      00845         call    WR_DATA
                      00846         
000830 CFF3 F022      00847         movff   PRODL, L_EE
000834 0E00           00848         movlw   d'0'
000836 2622           00849         addwf   L_EE
                      00850         READEE  OP_sec, H_EE, L_EE
000838 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
00083C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000840 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000842 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000844 80A6               M         bsf     EECON1, RD          ; read EEPROM
000846 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
00084A 2A22           00851         incf    L_EE
                      00852         READEE  OP_INT, H_EE, L_EE
00084C C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000850 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000854 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000856 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000858 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00085A CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
00085E 2A22           00853         incf    L_EE
000860 EC?? F???      00854         call    DisplayExeTime
000864 CFF3 F022      00855         movff   PRODL, L_EE
                      00856         
                      00857         ; reset eeprom to beginning
000868 EC?? F???      00858         call    LCD_L2
00086C CFF3 F022      00859         movff   PRODL, L_EE
000870 EC?? F???      00860         call    DispOpRTC
                      00861         
000874                00862 HOLD_PLOG
000874 EC?? F???      00863         call    READ_KEY
                      00864         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000878 0E0D               M         movlw   key0                ; poll for mode
00087A 6210               M         cpfseq  KEY                 ; check this against key press
00087C EF?? F???          M         goto    Exit
                          M 
000880                    M Next
000880 6A89               M         clrf    LATA                ; clear pins before proceeding
000882 6A8A               M         clrf    LATB
000884 6A8B               M         clrf    LATC
000886 6A8C               M         clrf    LATD
000888 EF?? F???          M         goto    PERM_LOG
                          M 
00088C                    M Exit
00088C 0000               M         nop
00088E D???           00865         bra HOLD_PLOG
                      00866         
                      00867 ;*******************************************************************************
                      00868 ; pc interface
                      00869 ;*******************************************************************************
                      00870 
000890                00871 PC_MODE
000890 EC?? F???      00872         call    ClrLCD
                      00873         Display PC1
  0000                    M         local   loop
000894 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000896 6EF8               M         movwf   TBLPTRU
000898 0E??               M         movlw   high PC1        ; Move Table<15:8>
00089A 6EF7               M         movwf   TBLPTRH
00089C 0E??               M         movlw   low PC1         ; Move Table<7:0>
00089E 6EF6               M         movwf   TBLPTRL
0008A0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008A2 50F5               M         movf    TABLAT, W
0008A4                    M loop
0008A4 EC?? F???          M         call    WR_DATA         ; write to LCD
0008A8 000B               M         tblrd+*                 ; next row in table
0008AA 50F5               M         movf    TABLAT, W
0008AC E1??               M         bnz     loop
0008AE EC?? F???      00874         call    LCD_L2
                      00875         Display PC2
  0000                    M         local   loop
0008B2 0E??               M         movlw   upper PC2       ; Move Table<20:16>
0008B4 6EF8               M         movwf   TBLPTRU
0008B6 0E??               M         movlw   high PC2        ; Move Table<15:8>
0008B8 6EF7               M         movwf   TBLPTRH
0008BA 0E??               M         movlw   low PC2         ; Move Table<7:0>
0008BC 6EF6               M         movwf   TBLPTRL
0008BE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008C0 50F5               M         movf    TABLAT, W
0008C2                    M loop
0008C2 EC?? F???          M         call    WR_DATA         ; write to LCD
0008C6 000B               M         tblrd+*                 ; next row in table
0008C8 50F5               M         movf    TABLAT, W
0008CA E1??               M         bnz     loop
0008CC CFF9 F03A      00876         movff   PCL, PC_PCL
0008D0 CFFA F03B      00877         movff   PCLATH, PC_PCLATH
0008D4 CFFB F03C      00878         movff   PCLATU, PC_PCLATU
                      00879         
0008D8                00880 HOLD_PC
0008D8 EC?? F???      00881         call    READ_KEY
                      00882         ChangeMode  key0, STANDBY
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M         local Next, Exit
                          M 
0008DC 0E0D               M         movlw   key0                ; poll for mode
0008DE 6210               M         cpfseq  KEY                 ; check this against key press
0008E0 EF?? F???          M         goto    Exit
                          M 
0008E4                    M Next
0008E4 6A89               M         clrf    LATA                ; clear pins before proceeding
0008E6 6A8A               M         clrf    LATB
0008E8 6A8B               M         clrf    LATC
0008EA 6A8C               M         clrf    LATD
0008EC EF?? F???          M         goto    STANDBY
                          M 
0008F0                    M Exit
0008F0 0000               M         nop
                      00883         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008F2 0E0E               M         movlw   keyH                ; poll for mode
0008F4 6210               M         cpfseq  KEY                 ; check this against key press
0008F6 EF?? F???          M         goto    Exit
                          M 
0008FA                    M Next
0008FA 6A89               M         clrf    LATA                ; clear pins before proceeding
0008FC 6A8A               M         clrf    LATB
0008FE 6A8B               M         clrf    LATC
000900 6A8C               M         clrf    LATD
000902 EF?? F???          M         goto    PC_TRANSFER
                          M 
000906                    M Exit
000906 0000               M         nop
000908 D???           00884         bra     HOLD_PC
                      00885 
00090A                00886 PC_TRANSFER
00090A 6839           00887         setf    transferring
00090C EC?? F???      00888         call    ClrLCD
                      00889         Display PCTransfer
  0000                    M         local   loop
000910 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
000912 6EF8               M         movwf   TBLPTRU
000914 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
000916 6EF7               M         movwf   TBLPTRH
000918 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
00091A 6EF6               M         movwf   TBLPTRL
00091C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00091E 50F5               M         movf    TABLAT, W
000920                    M loop
000920 EC?? F???          M         call    WR_DATA         ; write to LCD
000924 000B               M         tblrd+*                 ; next row in table
000926 50F5               M         movf    TABLAT, W
000928 E1??               M         bnz     loop
                      00890         ;call   DataUSART
00092A 6A39           00891         clrf    transferring
00092C D???           00892         bra     HOLD_PC
                      00893         
                      00894 ;*******************************************************************************
                      00895 ; subroutines
                      00896 ;*******************************************************************************
                      00897 
00092E                00898 RTC_INIT
                      00899         ; set sda and scl to high-z
00092E 9882           00900         bcf     PORTC, 4
000930 9682           00901         bcf     PORTC, 3
000932 8894           00902         bsf     TRISC, 4
000934 8694           00903         bsf     TRISC, 3
                      00904         
000936 EC?? F???      00905         call    i2c_common_setup
                      00906         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
00093A 0012           00907 return
                      00908         
00093C                00909 SAVE_TIME   
                      00910         rtc_read    0x02        ; hours
00093C 0E02               M     movlw   0x02
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00093E 6E??               M     movwf   regaddress
000940 EC?? F???          M     call    read_rtc
000944 50??               M     movf    datachar,w
000946 EC?? F???          M     call    rtc_convert
00094A EC?? F???      00911         call    WriteEE_RTC
                      00912         rtc_read    0x01        ; minutes
00094E 0E01               M     movlw   0x01
000950 6E??               M     movwf   regaddress
000952 EC?? F???          M     call    read_rtc
000956 50??               M     movf    datachar,w
000958 EC?? F???          M     call    rtc_convert
00095C EC?? F???      00913         call    WriteEE_RTC
                      00914         rtc_read    0x06        ; years
000960 0E06               M     movlw   0x06
000962 6E??               M     movwf   regaddress
000964 EC?? F???          M     call    read_rtc
000968 50??               M     movf    datachar,w
00096A EC?? F???          M     call    rtc_convert
00096E EC?? F???      00915         call    WriteEE_RTC
                      00916         rtc_read    0x05        ; months
000972 0E05               M     movlw   0x05
000974 6E??               M     movwf   regaddress
000976 EC?? F???          M     call    read_rtc
00097A 50??               M     movf    datachar,w
00097C EC?? F???          M     call    rtc_convert
000980 EC?? F???      00917         call    WriteEE_RTC
                      00918         rtc_read    0x04        ; days
000984 0E04               M     movlw   0x04
000986 6E??               M     movwf   regaddress
000988 EC?? F???          M     call    read_rtc
00098C 50??               M     movf    datachar,w
00098E EC?? F???          M     call    rtc_convert
000992 EC?? F???      00919         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000996 0012           00920 return
                      00921         
000998                00922 SAVE_EXE_TIME
                      00923         
Warning[202]: Argument out of range.  Least significant bits used.
000998 3818           00924         swapf   OP_sec, WREG    ; 100's seconds
00099A 6E17           00925         movwf   temp
00099C 0E0F           00926         movlw   0x0F
00099E 1617           00927         andwf   temp
0009A0 C017 FFE8      00928         movff   temp, WREG
0009A4 0F30           00929         addlw   0x30    
                      00930         WriteEE WREG, H_EE, L_EE
0009A6 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0009AA C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0009AE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009B2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009B4 D???               M         bra     $-2
                          M 
0009B6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009B8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009BA 84A6               M         bsf     EECON1, WREN        ; enable write
0009BC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009BE 98A1               M         bcf     PIR2, EEIF
                          M 
0009C0 0E55               M         movlw   0x55
0009C2 6EA7               M         movwf   EECON2              ; write 55h
0009C4 0EAA               M         movlw   0xaa
0009C6 6EA7               M         movwf   EECON2              ; write 0xaa
0009C8 82A6               M         bsf     EECON1, WR          ; begin write
0009CA B2A6               M         btfsc   EECON1, WR
0009CC D???               M         bra     $-2
                          M 
0009CE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009D0 94A6               M         bcf     EECON1, WREN        ; disable writes
0009D2 2A22           00931         incf    L_EE
                      00932         
0009D4 C018 F017      00933         movff   OP_sec, temp    ; 10's seconds
0009D8 0E0F           00934         movlw   0x0F
0009DA 1617           00935         andwf   temp            ; Temp = lower nibble of Op_sec
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009DC C017 FFE8      00936         movff   temp, WREG      ; W = Temp
0009E0 0F30           00937         addlw   0x30            ; Convert to ASCII
                      00938         WriteEE WREG, H_EE, L_EE
0009E2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
0009E6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
0009EA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009EE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009F0 D???               M         bra     $-2
                          M 
0009F2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009F4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009F6 84A6               M         bsf     EECON1, WREN        ; enable write
0009F8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009FA 98A1               M         bcf     PIR2, EEIF
                          M 
0009FC 0E55               M         movlw   0x55
0009FE 6EA7               M         movwf   EECON2              ; write 55h
000A00 0EAA               M         movlw   0xaa
000A02 6EA7               M         movwf   EECON2              ; write 0xaa
000A04 82A6               M         bsf     EECON1, WR          ; begin write
000A06 B2A6               M         btfsc   EECON1, WR
000A08 D???               M         bra     $-2
                          M 
000A0A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A0C 94A6               M         bcf     EECON1, WREN        ; disable writes
000A0E 2A22           00939         incf    L_EE
                      00940         
Warning[202]: Argument out of range.  Least significant bits used.
000A10 3819           00941         swapf   OP_INT, WREG    ;1's seconds
000A12 6E17           00942         movwf   temp
000A14 0E0F           00943         movlw   0x0f
000A16 1617           00944         andwf   temp
000A18 C017 FFE8      00945         movff   temp, WREG
000A1C 0F30           00946         addlw   0x30
                      00947         WriteEE WREG, H_EE, L_EE
000A1E C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000A22 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000A26 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000A2A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A2C D???               M         bra     $-2
                          M 
000A2E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A30 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A32 84A6               M         bsf     EECON1, WREN        ; enable write
000A34 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A36 98A1               M         bcf     PIR2, EEIF
                          M 
000A38 0E55               M         movlw   0x55
000A3A 6EA7               M         movwf   EECON2              ; write 55h
000A3C 0EAA               M         movlw   0xaa
000A3E 6EA7               M         movwf   EECON2              ; write 0xaa
000A40 82A6               M         bsf     EECON1, WR          ; begin write
000A42 B2A6               M         btfsc   EECON1, WR
000A44 D???               M         bra     $-2
                          M 
000A46 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A48 94A6               M         bcf     EECON1, WREN        ; disable writes
000A4A 2A22           00948         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000A4C 0012           00949 return
                      00950         
                      00951                 
000A4E                00952 DISPLAY_RTC     
                      00953         ; display data in this format hh/minmin/yy yy/mm/dd
                      00954         rtc_read    0x02            ; 0x02 from DS1307 - hours
000A4E 0E02               M     movlw   0x02
000A50 6E??               M     movwf   regaddress
000A52 EC?? F???          M     call    read_rtc
000A56 50??               M     movf    datachar,w
000A58 EC?? F???          M     call    rtc_convert
000A5C C??? FFE8      00955         movff   tens_digit,WREG
000A60 EC?? F???      00956         call    WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A64 C??? FFE8      00957         movff   ones_digit,WREG
000A68 EC?? F???      00958         call    WR_DATA
000A6C 0E68           00959         movlw   "h"
000A6E EC?? F???      00960         call    WR_DATA
                      00961         
                      00962         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000A72 0E01               M     movlw   0x01
000A74 6E??               M     movwf   regaddress
000A76 EC?? F???          M     call    read_rtc
000A7A 50??               M     movf    datachar,w
000A7C EC?? F???          M     call    rtc_convert
000A80 C??? FFE8      00963         movff   tens_digit,WREG
000A84 EC?? F???      00964         call    WR_DATA
000A88 C??? FFE8      00965         movff   ones_digit,WREG
000A8C EC?? F???      00966         call    WR_DATA
                      00967         
                      00968         rtc_read    0x00            ; 0x01 from DS1307 - seconds
000A90 0E00               M     movlw   0x00
000A92 6E??               M     movwf   regaddress
000A94 EC?? F???          M     call    read_rtc
000A98 50??               M     movf    datachar,w
000A9A EC?? F???          M     call    rtc_convert
000A9E C??? FFE8      00969         movff   tens_digit,WREG
000AA2 EC?? F???      00970         call    WR_DATA
000AA6 C??? FFE8      00971         movff   ones_digit,WREG
000AAA EC?? F???      00972         call    WR_DATA
000AAE 0E20           00973         movlw   " "
000AB0 EC?? F???      00974         call    WR_DATA
                      00975         
                      00976         rtc_read    0x06            ; 0x06 from DS1307 - years
000AB4 0E06               M     movlw   0x06
000AB6 6E??               M     movwf   regaddress
000AB8 EC?? F???          M     call    read_rtc
000ABC 50??               M     movf    datachar,w
000ABE EC?? F???          M     call    rtc_convert
000AC2 C??? FFE8      00977         movff   tens_digit,WREG
000AC6 EC?? F???      00978         call    WR_DATA
000ACA C??? FFE8      00979         movff   ones_digit,WREG
000ACE EC?? F???      00980         call    WR_DATA
000AD2 0E2F           00981         movlw   "/"
000AD4 EC?? F???      00982         call    WR_DATA
                      00983         
                      00984         rtc_read    0x05            ; 0x05 from DS1307 - months
000AD8 0E05               M     movlw   0x05
000ADA 6E??               M     movwf   regaddress
000ADC EC?? F???          M     call    read_rtc
000AE0 50??               M     movf    datachar,w
000AE2 EC?? F???          M     call    rtc_convert
000AE6 C??? FFE8      00985         movff   tens_digit,WREG
000AEA EC?? F???      00986         call    WR_DATA
000AEE C??? FFE8      00987         movff   ones_digit,WREG
000AF2 EC?? F???      00988         call    WR_DATA
000AF6 0E2F           00989         movlw   "/"
000AF8 EC?? F???      00990         call    WR_DATA
                      00991         
                      00992         rtc_read    0x04            ; 0x04 from DS1307 - days
000AFC 0E04               M     movlw   0x04
000AFE 6E??               M     movwf   regaddress
000B00 EC?? F???          M     call    read_rtc
000B04 50??               M     movf    datachar,w
000B06 EC?? F???          M     call    rtc_convert
000B0A C??? FFE8      00993         movff   tens_digit,WREG
000B0E EC?? F???      00994         call    WR_DATA
000B12 C??? FFE8      00995         movff   ones_digit,WREG
000B16 EC?? F???      00996         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000B1A 0012           00997 return
                      00998         
000B1C                00999 SET_TIME
                      01000         rtc_resetAll
                          M 
000B1C 6A??               M     clrf    databyte
000B1E 0E06               M     movlw   6
000B20 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
Warning[207]: Found label after column 1. (del_loop0)
000B22                    M     del_loop0
000B22 EC?? F???          M     call    write_rtc
000B26 2E??               M     decfsz  regaddress
000B28 D???               M     bra     del_loop0
000B2A EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01001         
                      01002         rtc_set 0x00,   b'10000000'
000B2E 0E00               M     movlw   0x00
000B30 6E??               M     movwf   regaddress
000B32 0E80               M     movlw   b'10000000'
000B34 6E??               M     movwf   databyte
000B36 EC?? F???          M     call    write_rtc
                      01003 
                      01004         rtc_set 0x06,   b'00010111'             ; Year 17
000B3A 0E06               M     movlw   0x06
000B3C 6E??               M     movwf   regaddress
000B3E 0E17               M     movlw   b'00010111'
000B40 6E??               M     movwf   databyte
000B42 EC?? F???          M     call    write_rtc
                      01005         rtc_set 0x05,   b'00000010'             ; Month 2
000B46 0E05               M     movlw   0x05
000B48 6E??               M     movwf   regaddress
000B4A 0E02               M     movlw   b'00000010'
000B4C 6E??               M     movwf   databyte
000B4E EC?? F???          M     call    write_rtc
                      01006         rtc_set 0x04,   b'00011001'             ; Date 19
000B52 0E04               M     movlw   0x04
000B54 6E??               M     movwf   regaddress
000B56 0E19               M     movlw   b'00011001'
000B58 6E??               M     movwf   databyte
000B5A EC?? F???          M     call    write_rtc
                      01007         rtc_set 0x02,   b'00010001'             ; Hours 11
000B5E 0E02               M     movlw   0x02
000B60 6E??               M     movwf   regaddress
000B62 0E11               M     movlw   b'00010001'
000B64 6E??               M     movwf   databyte
000B66 EC?? F???          M     call    write_rtc
                      01008         rtc_set 0x01,   b'00111000'             ; Minutes 38
000B6A 0E01               M     movlw   0x01
000B6C 6E??               M     movwf   regaddress
000B6E 0E38               M     movlw   b'00111000'
000B70 6E??               M     movwf   databyte
000B72 EC?? F???          M     call    write_rtc
                      01009         rtc_set 0x00,   b'00000000'             ; Seconds 0
000B76 0E00               M     movlw   0x00
000B78 6E??               M     movwf   regaddress
000B7A 0E00               M     movlw   b'00000000'
000B7C 6E??               M     movwf   databyte
000B7E EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000B82 0012           01010 return
                      01011         
000B84                01012 INIT_USART
000B84 0E0F           01013         movlw   15      ; baud rate 9600
000B86 6EAF           01014         movwf   SPBRG
000B88 6AAC           01015         clrf    TXSTA
                      01016         
000B8A 6AAB           01017         clrf    RCSTA
000B8C 8EAB           01018         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000B8E 88AB           01019         bsf     RCSTA,CREN      ; continous receive
                      01020         
000B90 8AAC           01021         bsf     TXSTA, TXEN     ; transmit enabled
000B92 0012           01022         return
                      01023 
                      01024 ;DataUSART
                      01025 ;       
                      01026 ;       movlw   0x02
                      01027 ;       call    USART_WAIT
                      01028 ;       movlw   0x0D
                      01029 ;       call    USART_WAIT
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01030 ;       
                      01031 ;       movlw   d'21'       ; start of permanent logs
                      01032 ;       movff   w, L_EE
                      01033 ;       TransferTable   PCLog1
                      01034 ;       
                      01035 ;       ; display time here
                      01036 ;;      rtc_read        0x02
                      01037 ;;              movf        tens_digit, W
                      01038 ;;        andlw       b'00000001'
                      01039 ;;        addlw       0x30
                      01040 ;;        call        TransmitWaitUSART
                      01041 ;;        movf        ones_digit, W
                      01042 ;;        call        TransmitWaitUSART
                      01043 ;;              movlw           ":"
                      01044 ;;              call            TransmitWaitUSART
                      01045 ;;              ; Dispay minutes
                      01046 ;;              rtc_read        0x01
                      01047 ;;              call        SendRTC_USART
                      01048 ;;              ; Dispay AM/PM
                      01049 ;;              rtc_read        0x02
                      01050 ;;        movlw       "P"
                      01051 ;;        btfss       tens_digit, 1
                      01052 ;;        movlw       "A"
                      01053 ;;        call        TransmitWaitUSART
                      01054 ;;        movlw       "M"
                      01055 ;;        call        TransmitWaitUSART
                      01056 ;;              movlw           " "
                      01057 ;;        call        TransmitWaitUSART
                      01058 ;;              ; Display month
                      01059 ;;              rtc_read        0x05
                      01060 ;;              call        SendRTC_USART
                      01061 ;;              movlw           0x2F            ; ASCII '/'
                      01062 ;;              call            TransmitWaitUSART
                      01063 ;;              ; Display day
                      01064 ;;              rtc_read        0x04
                      01065 ;;              call        SendRTC_USART
                      01066 ;;              movlw           0x2F            ; ASCII '/'
                      01067 ;;              call            TransmitWaitUSART
                      01068 ;;              ; Display year
                      01069 ;;              rtc_read        0x06
                      01070 ;;              call        SendRTC_USART
                      01071 ;       
                      01072 ;       call    USART_LINE
                      01073 ;       call    USART_LINE
                      01074 ;       
                      01075 ;       clrf    counter
                      01076 ;       incf    counter
                      01077 ;
                      01078 ;USART_TRANSFER
                      01079 ;       movlw   d'21'
                      01080 ;       mulwf   counter
                      01081 ;       movff   PRODL, L_EE
                      01082 ;       movlw   d'9'
                      01083 ;       addwf   L_EE
                      01084 ;       READEE  OP_sec, H_EE, L_EE
                      01085 ;       incf    L_EE
                      01086 ;       READEE  OP_INT, H_EE, L_EE
                      01087 ;       incf    L_EE
                      01088 ;       ; call  TransferTime
                      01089 ;       
                      01090 ;       ; send rtc
                      01091 ;       movlw   0x09
                      01092 ;       call    USART_WAIT
                      01093 ;       movff   PRODL, L_EE
                      01094 ;       ;call   TransferRTC
                      01095 ;       call    USART_LINE
                      01096 ;       
                      01097 ;       
                      01098 ;       
                      01099 ;       
                      01100 ;USART_WAIT
                      01101 ;       movwf   TXREG
                      01102 ;       btfss   TXSTA,1
                      01103 ;       goto    $-2
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01104 ;       return
                      01105 ;
                      01106 ;USART_LINE
                      01107 ;       movlw   0x0A
                      01108 ;       call    USART_WAIT
                      01109 ;       movlw   0x0D
                      01110 ;       call    USART_WAIT
                      01111 ;       return
                      01112         
                      01113         
000B94                01114 Delay5us
000B94 0E78           01115         movlw   d'120'
000B96 6E1C           01116         movwf   d5us
                      01117 
000B98                01118 loop5us
000B98 2E1C           01119         decfsz  d5us
000B9A EF?? F???      01120         goto    loop5us
000B9E 0000           01121         nop
000BA0 0012           01122         return
                      01123 
000BA2                01124 Delay200us
000BA2 0EA4           01125         movlw   0xA4
000BA4 6E1D           01126         movwf   d200us
                      01127 
000BA6                01128 loop200us
000BA6 2E1D           01129         decfsz  d200us
000BA8 EF?? F???      01130         goto    loop200us
000BAC 0000           01131         nop
000BAE 0012           01132         return
                      01133 
000BB0                01134 Delay50ms
000BB0 0EF9           01135         movlw   0xF9
000BB2 6E1E           01136         movwf   d50ms
                      01137 
000BB4                01138 loop50ms
000BB4 EC?? F???      01139         call    Delay200us
000BB8 2E1E           01140         decfsz  d50ms
                      01141 
000BBA                01142 Cycles
000BBA EF?? F???      01143         goto    loop50ms
000BBE EC?? F???      01144         call    Delay200us
000BC2 0012           01145         return
                      01146 
000BC4                01147 WriteEE_RTC
                      01148         WriteEE tens_digit, H_EE, L_EE
000BC4 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BC8 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BCC C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
000BD0 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000BD2 D???               M         bra     $-2
                          M 
000BD4 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000BD6 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000BD8 84A6               M         bsf     EECON1, WREN        ; enable write
000BDA 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BDC 98A1               M         bcf     PIR2, EEIF
                          M 
000BDE 0E55               M         movlw   0x55
000BE0 6EA7               M         movwf   EECON2              ; write 55h
000BE2 0EAA               M         movlw   0xaa
000BE4 6EA7               M         movwf   EECON2              ; write 0xaa
000BE6 82A6               M         bsf     EECON1, WR          ; begin write
000BE8 B2A6               M         btfsc   EECON1, WR
000BEA D???               M         bra     $-2
                          M 
000BEC 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BEE 94A6               M         bcf     EECON1, WREN        ; disable writes
000BF0 2A22           01149         incf    L_EE
                      01150         WriteEE ones_digit, H_EE, L_EE
000BF2 C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000BF6 C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000BFA C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BFE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C00 D???               M         bra     $-2
                          M 
000C02 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C04 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C06 84A6               M         bsf     EECON1, WREN        ; enable write
000C08 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C0A 98A1               M         bcf     PIR2, EEIF
                          M 
000C0C 0E55               M         movlw   0x55
000C0E 6EA7               M         movwf   EECON2              ; write 55h
000C10 0EAA               M         movlw   0xaa
000C12 6EA7               M         movwf   EECON2              ; write 0xaa
000C14 82A6               M         bsf     EECON1, WR          ; begin write
000C16 B2A6               M         btfsc   EECON1, WR
000C18 D???               M         bra     $-2
                          M 
000C1A 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C1C 94A6               M         bcf     EECON1, WREN        ; disable writes
000C1E 2A22           01151         incf    L_EE
000C20 0012           01152         return
                      01153 
000C22                01154 ClearEEPROM_21
000C22 6A21           01155         clrf    H_EE
000C24 6A22           01156         clrf    L_EE
000C26 6820           01157         setf    clear_EE
000C28 6A15           01158         clrf    counter
000C2A                01159 ClearNext
                      01160         WriteEE         clear_EE, H_EE, L_EE
000C2A C021 FFAA          M         movff   H_EE, EEADRH        ; High address
000C2E C022 FFA9          M         movff   L_EE, EEADR         ; Low address
000C32 C020 FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000C36 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000C38 D???               M         bra     $-2
                          M 
000C3A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000C3C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000C3E 84A6               M         bsf     EECON1, WREN        ; enable write
000C40 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000C42 98A1               M         bcf     PIR2, EEIF
                          M 
000C44 0E55               M         movlw   0x55
000C46 6EA7               M         movwf   EECON2              ; write 55h
000C48 0EAA               M         movlw   0xaa
000C4A 6EA7               M         movwf   EECON2              ; write 0xaa
000C4C 82A6               M         bsf     EECON1, WR          ; begin write
000C4E B2A6               M         btfsc   EECON1, WR
000C50 D???               M         bra     $-2
                          M 
000C52 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000C54 94A6               M         bcf     EECON1, WREN        ; disable writes
000C56 2A15           01161         incf            counter
000C58 2A22           01162         incf            L_EE
000C5A 0E15           01163         movlw           d'21'
000C5C 6215           01164         cpfseq          counter
000C5E EF?? F???      01165         goto            ClearNext
000C62 6A21           01166         clrf            H_EE
000C64 6A22           01167         clrf            L_EE
000C66 0012           01168         return
                      01169         
000C68                01170 READ_KEY
000C68 A281           01171         btfss   PORTB, 1        ; check for keypad interrupt
000C6A EF?? F???      01172         goto    READ_KEY
000C6E 3881           01173         swapf   PORTB, W
000C70 0B0F           01174         andlw   0x0F
000C72 6E10           01175         movwf   KEY
000C74 B281           01176         btfsc   PORTB, 1
000C76 EF?? F???      01177         goto    $-2
000C7A 0012           01178         return
                      01179 
000C7C                01180 READ_KEY_TIME
000C7C EC?? F???      01181         call        LCD_L2          ; go to second line to print RTC
                      01182 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01183         ; display the time
000C80 EC?? F???      01184         call    DISPLAY_RTC
                      01185 
000C84 A281           01186         btfss       PORTB, 1    ; keypad interrupt
000C86 EF?? F???      01187         goto        READ_KEY_TIME
000C8A 3881           01188         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000C8C 0B0F           01189         andlw       0x0F        ; only want W3:0
000C8E 6E10           01190         movwf       KEY         ; write this value to the KEY
000C90 B281           01191         btfsc       PORTB, 1    ; wait for release
000C92 EF?? F???      01192         goto        $-2         ; go back one instruction
000C96 0012           01193         return
                      01194 
000C98                01195 DisplayExeTime
                      01196         READEE  REG_EE, H_EE, L_EE
000C98 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000C9C C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CA0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CA2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CA4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CA6 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000CAA 0EFF           01197         movlw   0xFF
000CAC 6223           01198         cpfseq  REG_EE
000CAE EF?? F???      01199         goto    NoSkipDispExeTime
                      01200         Display NoData
  0000                    M         local   loop
000CB2 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000CB4 6EF8               M         movwf   TBLPTRU
000CB6 0E??               M         movlw   high NoData     ; Move Table<15:8>
000CB8 6EF7               M         movwf   TBLPTRH
000CBA 0E??               M         movlw   low NoData      ; Move Table<7:0>
000CBC 6EF6               M         movwf   TBLPTRL
000CBE 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000CC0 50F5               M         movf    TABLAT, W
000CC2                    M loop
000CC2 EC?? F???          M         call    WR_DATA         ; write to LCD
000CC6 000B               M         tblrd+*                 ; next row in table
000CC8 50F5               M         movf    TABLAT, W
000CCA E1??               M         bnz     loop
000CCC 0EFF           01201         movlw   0xFF
000CCE 6023           01202         cpfslt  REG_EE
000CD0 EF?? F???      01203         goto    SkipDispExeTime
000CD4 0012           01204         return
                      01205 
000CD6                01206 NoSkipDispExeTime
                      01207         READEE  WREG, H_EE, L_EE
000CD6 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CDA C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CDE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CE0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CE2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CE4 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000CE8 EC?? F???      01208         call    WR_DATA
000CEC 2A22           01209         incf    L_EE
                      01210         
                      01211         READEE  WREG, H_EE, L_EE
000CEE C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000CF2 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000CF6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000CF8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000CFA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000CFC CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D00 EC?? F???      01212         call    WR_DATA
000D04 2A22           01213         incf    L_EE
                      01214         
                      01215         READEE  WREG, H_EE, L_EE
000D06 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D0A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D0E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D10 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D12 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D14 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D18 EC?? F???      01216         call    WR_DATA
000D1C 2A22           01217         incf    L_EE
                      01218 
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D1E 0E73           01219         movlw   0x73            ; Write 's'
000D20 EC?? F???      01220         call    WR_DATA
000D24 EC?? F???      01221         call    LCD_L2
000D28                01222 SkipDispExeTime
000D28 0012           01223         return
                      01224 
000D2A                01225 DispOpRTC
                      01226         READEE  REG_EE, H_EE, L_EE
000D2A C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D2E C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D32 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D34 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D36 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D38 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D3C 0EFF           01227         movlw   0xff
000D3E 6223           01228         cpfseq  REG_EE
000D40 EF?? F???      01229         goto    NoSkipDispOpRTC
                      01230         Display NoData
  0000                    M         local   loop
000D44 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000D46 6EF8               M         movwf   TBLPTRU
000D48 0E??               M         movlw   high NoData     ; Move Table<15:8>
000D4A 6EF7               M         movwf   TBLPTRH
000D4C 0E??               M         movlw   low NoData      ; Move Table<7:0>
000D4E 6EF6               M         movwf   TBLPTRL
000D50 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D52 50F5               M         movf    TABLAT, W
000D54                    M loop
000D54 EC?? F???          M         call    WR_DATA         ; write to LCD
000D58 000B               M         tblrd+*                 ; next row in table
000D5A 50F5               M         movf    TABLAT, W
000D5C E1??               M         bnz     loop
000D5E 0EFF           01231         movlw   0xff
000D60 6023           01232         cpfslt  REG_EE
000D62 EF?? F???      01233         goto    SkipDispOpRTC
                      01234 
000D66                01235 NoSkipDispOpRTC
                      01236         READEE  REG_EE, H_EE, L_EE
000D66 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D6A C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D6E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D70 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D72 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D74 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D78 C023 FFE8      01237         movff   REG_EE, WREG
000D7C EC?? F???      01238         call    WR_DATA
000D80 2A22           01239         incf    L_EE
                      01240         
                      01241         READEE  REG_EE, H_EE, L_EE
000D82 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D86 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000D8A 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D8C 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D8E 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D90 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000D94 C023 FFE8      01242         movff   REG_EE, WREG
000D98 EC?? F???      01243         call    WR_DATA
000D9C 2A22           01244         incf    L_EE
                      01245 
000D9E 0E68           01246         movlw   "h"
000DA0 EC?? F???      01247         call    WR_DATA
                      01248         
000DA4 EC?? F???      01249         call    DispOpRTC_Helper
                      01250         
000DA8 0E20           01251         movlw   " "
000DAA EC?? F???      01252         call    WR_DATA
                      01253         
000DAE EC?? F???      01254         call    DispOpRTC_Helper
000DB2 0E2F           01255         movlw   "/"
000DB4 EC?? F???      01256         call    WR_DATA
                      01257 
000DB8 EC?? F???      01258         call    DispOpRTC_Helper
000DBC 0E2F           01259         movlw   "/"
000DBE EC?? F???      01260         call    WR_DATA
MPASM 5.71  /USERS/MREITER/DESKTOP/AER201/BO   2-22-2017  0:15:33         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DC2 EC?? F???      01261         call    DispOpRTC_Helper
000DC6                01262 SkipDispOpRTC
000DC6 0012           01263                 return
000DC8                01264 DispOpRTC_Helper
                      01265         READEE          REG_EE, H_EE, L_EE
000DC8 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DCC C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DD0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DD2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DD4 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DD6 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000DDA C023 FFE8      01266         movff           REG_EE, WREG
000DDE EC?? F???      01267         call            WR_DATA
000DE2 2A22           01268         incf            L_EE
                      01269         READEE          REG_EE, H_EE, L_EE
000DE4 C021 FFAA          M         movff   H_EE, EEADRH        ; read to high
000DE8 C022 FFA9          M         movff   L_EE, EEADR         ; read to low
000DEC 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000DEE 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000DF0 80A6               M         bsf     EECON1, RD          ; read EEPROM
000DF2 CFA8 F023          M         movff   EEDATA, REG_EE      ; put data into file
000DF6 C023 FFE8      01270         movff           REG_EE, WREG
000DFA EC?? F???      01271         call            WR_DATA
000DFE 2A22           01272         incf            L_EE
000E00 0012           01273         return
Warning[205]: Found directive in column 1. (end)
                      01274 end

Errors   :     0
Warnings :    66 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

