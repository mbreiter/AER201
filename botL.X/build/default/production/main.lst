MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;
                      00003 ;    Filename: main.asm
                      00004 ;    Date: 2 Feb 2017
                      00005 ;    File Version: 1.0
                      00006 ;    Author: Matthew Reiter
                      00007 ;    Course: AER201
                      00008 ;    Description: botL - a pastic bottle sorting machine
                      00009  
                      00010 ;*******************************************************************************
                      00011 ; configuration settings
                      00012 ;*******************************************************************************
                      00013 
Warning[205]: Found directive in column 1. (list)
                      00014 list    P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00015 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 30 2017
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00016 #include <lcd.inc>
  0000                00001     extern      InitLCD,WrtLCD,ClrLCD,ClkLCD,WR_INS,WR_DATA,LCD_L1,LCD_L2,delay5ms,Shift
                      00002 
                      00003 
                      00004 
                      00005 
                      00006 
                      00007 
                      00017 #include <rtc.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup, regaddress, databyte, datachar,tens_digit,ones_digit
                      00002 
Warning[205]: Found directive in column 1. (variable)
  0000                00003 variable _loopknt=0
                      00004 
                      00005 rtc_resetAll macro
                      00006 
                      00007     clrf    databyte
                      00008     movlw   6
                      00009     movwf   regaddress ;start at 6 and go down, and set all to 0
                      00010 
                      00011     del_loop#v(_loopknt)
                      00012     call    write_rtc
                      00013     decfsz  regaddress
                      00014     bra     del_loop#v(_loopknt)
                      00015     call    write_rtc ;sets registers 0-6 to zero
                      00016     _loopknt set _loopknt+1
Warning[205]: Found directive in column 1. (endm)
                      00017 endm
                      00018 
                      00019 rtc_set macro addliteral,datliteral
                      00020     movlw   addliteral
                      00021     movwf   regaddress
                      00022     movlw   datliteral
                      00023     movwf   databyte
                      00024     call    write_rtc
Warning[205]: Found directive in column 1. (endm)
                      00025 endm
                      00026 
                      00027 rtc_read macro addliteral
                      00028     movlw   addliteral
                      00029     movwf   regaddress
                      00030     call    read_rtc
                      00031     movff   datachar, WREG
                      00032     call    rtc_convert
Warning[205]: Found directive in column 1. (endm)
                      00033 endm
                      00018 #include <colour.inc>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00001     extern      i2c_common_setup, regaddress, databyte, datachar, READ_COLOUR_I2C, WRITE_COLOUR_I2C, WR_DATA, delay5ms
                      00002 
                      00003 ;    #define TCS34725_ADDRESS          (0x29)
                      00004 ;
                      00005 ;    #define TCS34725_COMMAND_BIT      (0x80)
                      00006 ;
                      00007 ;    #define TCS34725_ENABLE           (0x00)
                      00008 ;    #define TCS34725_ENABLE_AIEN      (0x10)    /* RGBC Interrupt Enable */
                      00009 ;    #define TCS34725_ENABLE_WEN       (0x08)    /* Wait enable - Writing 1 activates the wait timer */
                      00010 ;    #define TCS34725_ENABLE_AEN       (0x02)    /* RGBC Enable - Writing 1 actives the ADC, 0 disables it */
                      00011 ;    #define TCS34725_ENABLE_PON       (0x01)    /* Power on - Writing 1 activates the internal oscillator, 0 disables it */
                      00012 ;    #define TCS34725_ATIME            (0x01)    /* Integration time */
                      00013 ;    #define TCS34725_WTIME            (0x03)    /* Wait time (if TCS34725_ENABLE_WEN is asserted) */
                      00014 ;    #define TCS34725_WTIME_2_4MS      (0xFF)    /* WLONG0 = 2.4ms   WLONG1 = 0.029s */
                      00015 ;    #define TCS34725_WTIME_204MS      (0xAB)    /* WLONG0 = 204ms   WLONG1 = 2.45s  */
                      00016 ;    #define TCS34725_WTIME_614MS      (0x00)    /* WLONG0 = 614ms   WLONG1 = 7.4s   */
                      00017 ;    #define TCS34725_AILTL            (0x04)    /* Clear channel lower interrupt threshold */
                      00018 ;    #define TCS34725_AILTH            (0x05)
                      00019 ;    #define TCS34725_AIHTL            (0x06)    /* Clear channel upper interrupt threshold */
                      00020 ;    #define TCS34725_AIHTH            (0x07)
                      00021 ;    #define TCS34725_PERS             (0x0C)    /* Persistence register - basic SW filtering mechanism for interrupts */
                      00022 ;    #define TCS34725_PERS_NONE        (0b0000)  /* Every RGBC cycle generates an interrupt                                */
                      00023 ;    #define TCS34725_PERS_1_CYCLE     (0b0001)  /* 1 clean channel value outside threshold range generates an interrupt   */
                      00024 ;    #define TCS34725_PERS_2_CYCLE     (0b0010)  /* 2 clean channel values outside threshold range generates an interrupt  */
                      00025 ;    #define TCS34725_PERS_3_CYCLE     (0b0011)  /* 3 clean channel values outside threshold range generates an interrupt  */
                      00026 ;    #define TCS34725_PERS_5_CYCLE     (0b0100)  /* 5 clean channel values outside threshold range generates an interrupt  */
                      00027 ;    #define TCS34725_PERS_10_CYCLE    (0b0101)  /* 10 clean channel values outside threshold range generates an interrupt */
                      00028 ;    #define TCS34725_PERS_15_CYCLE    (0b0110)  /* 15 clean channel values outside threshold range generates an interrupt */
                      00029 ;    #define TCS34725_PERS_20_CYCLE    (0b0111)  /* 20 clean channel values outside threshold range generates an interrupt */
                      00030 ;    #define TCS34725_PERS_25_CYCLE    (0b1000)  /* 25 clean channel values outside threshold range generates an interrupt */
                      00031 ;    #define TCS34725_PERS_30_CYCLE    (0b1001)  /* 30 clean channel values outside threshold range generates an interrupt */
                      00032 ;    #define TCS34725_PERS_35_CYCLE    (0b1010)  /* 35 clean channel values outside threshold range generates an interrupt */
                      00033 ;    #define TCS34725_PERS_40_CYCLE    (0b1011)  /* 40 clean channel values outside threshold range generates an interrupt */
                      00034 ;    #define TCS34725_PERS_45_CYCLE    (0b1100)  /* 45 clean channel values outside threshold range generates an interrupt */
                      00035 ;    #define TCS34725_PERS_50_CYCLE    (0b1101)  /* 50 clean channel values outside threshold range generates an interrupt */
                      00036 ;    #define TCS34725_PERS_55_CYCLE    (0b1110)  /* 55 clean channel values outside threshold range generates an interrupt */
                      00037 ;    #define TCS34725_PERS_60_CYCLE    (0b1111)  /* 60 clean channel values outside threshold range generates an interrupt */
                      00038 ;    #define TCS34725_CONFIG           (0x0D)
                      00039 ;    #define TCS34725_CONFIG_WLONG     (0x02)    /* Choose between short and long (12x) wait times via TCS34725_WTIME */
                      00040 ;    #define TCS34725_CONTROL          (0x0F)    /* Set the gain level for the sensor */
                      00041 ;    #define TCS34725_ID               (0x12)    /* 0x44 = TCS34721/TCS34725, 0x4D = TCS34723/TCS34727 */
                      00042 ;    #define TCS34725_STATUS           (0x13)
                      00043 ;    #define TCS34725_STATUS_AINT      (0x10)    /* RGBC Clean channel interrupt */
                      00044 ;    #define TCS34725_STATUS_AVALID    (0x01)    /* Indicates that the RGBC channels have completed an integration cycle */
                      00045 ;    #define TCS34725_CDATAL           (0x14)    /* Clear channel data */
                      00046 ;    #define TCS34725_CDATAH           (0x15)
                      00047 ;    #define TCS34725_RDATAL           (0x16)    /* Red channel data */
                      00048 ;    #define TCS34725_RDATAH           (0x17)
                      00049 ;    #define TCS34725_GDATAL           (0x18)    /* Green channel data */
                      00050 ;    #define TCS34725_GDATAH           (0x19)
                      00051 ;    #define TCS34725_BDATAL           (0x1A)    /* Blue channel data */
                      00052 ;    #define TCS34725_BDATAH           (0x1B)
                      00053 
                      00054 
Warning[207]: Found label after column 1. (COLOUR_INIT)
                      00055     COLOUR_INIT macro
                      00056         COLOUR_WRITE    0x00, 0x01 ; Enable Register (0x00), Power ON (0x01)
                      00057         call    delay5ms
                      00058         COLOUR_WRITE    0x00, 0x02 ; Enable Register (0x00), RGBC enable (0x02)
                      00059         call    delay5ms
                      00060         COLOUR_WRITE    0x01, 0xff ; Timing Register (0x01), 2.4ms (0xff) cycle
                      00061         call    delay5ms
                      00062         COLOUR_WRITE    0x0f, 0x03 ; Control Register (0x0f), 60x gain (0x03)
                      00063         call    delay5ms
                      00064     endm
                      00065     
Warning[207]: Found label after column 1. (COLOUR_READ)
                      00066     COLOUR_READ  macro  address
                      00067         movlw   address
                      00068         movwf   regaddress
                      00069         call    READ_COLOUR_I2C
                      00070     endm
                      00071     
Warning[207]: Found label after column 1. (COLOUR_WRITE)
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072     COLOUR_WRITE macro address, datliteral
                      00073         movlw   address
                      00074         movwf   regaddress
                      00075         movlw   datliteral
                      00076         movwf   databyte
                      00077         call    WRITE_COLOUR_I2C
                      00078     endm
                      00079     
Warning[207]: Found label after column 1. (COLOUR_GET_DATA)
                      00080     COLOUR_GET_DATA macro clear, red, green, blue
                      00081         call    delay5ms
                      00082         
                      00083         COLOUR_READ 0x14    ; read clear colour address low, command bits set later
                      00084         movff   databyte, clear+0
                      00085         COLOUR_READ 0x15    ; read clear colour address high, command bits set later
                      00086         movff   databyte, clear+1
                      00087                 
                      00088         COLOUR_READ 0x16    ; read red colour address low, command bits set later
                      00089         movff   databyte, red+0
                      00090         COLOUR_READ 0x17    ; read red colour address high, command bits set later
                      00091         movff   databyte, red+0
                      00092         
                      00093         COLOUR_READ 0x18    ; read green colour address low, command bits set later
                      00094         movff   databyte, green+0
                      00095         COLOUR_READ 0x19    ; read green colour address high, command bits set later
                      00096         movff   databyte, green+1
                      00097         
                      00098         COLOUR_READ 0x1a    ; read blue colour address low, command bits set later
                      00099         movff   databyte, blue+0
                      00100         COLOUR_READ 0x1b    ; read blue colour address high, command bits set later
                      00101         movff   databyte, blue+1
                      00102     endm
                      00103     
                      00019 #include <sorting.inc>
  0000                00001     extern  i2c_common_setup, regaddress, databyte, datachar, READ_ARDUINO, INIT_ARDUINO, WR_DATA, delay5ms
                      00002     
Warning[207]: Found label after column 1. (ARDUINO_READ)
                      00003     ARDUINO_READ macro bottle_sort
                      00004         call    READ_ARDUINO
                      00005         movff   WREG, bottle_sort
                      00006     endm
                      00007     
                      00008 
                      00009 
                      00010 
                      00020 
                      00021     CONFIG OSC=HS, FCMEN=OFF, IESO=OFF
                      00022     CONFIG PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00023     CONFIG WDT = OFF, WDTPS = 32768
                      00024     CONFIG MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF
                      00025     CONFIG STVREN = ON, LVP = OFF, XINST = OFF
                      00026     CONFIG DEBUG = OFF
                      00027     CONFIG CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF
                      00028     CONFIG CPB = OFF, CPD = OFF
                      00029     CONFIG WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00030     CONFIG WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00031     CONFIG EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF
                      00032     CONFIG EBTRB = OFF
                      00033 
                      00034 ;*******************************************************************************
                      00035 ; variable and constants
                      00036 ;*******************************************************************************
                      00037     CODE
                      00038             
                      00039     cblock 0x00
  00000000            00040         key1
  00000001            00041         key2
  00000002            00042         key3
  00000003            00043         keyA
  00000004            00044         key4
  00000005            00045         key5
  00000006            00046         key6
  00000007            00047         keyB
  00000008            00048         key7
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00049         key8
  0000000A            00050         key9
  0000000B            00051         keyC
  0000000C            00052         keyS
  0000000D            00053         key0
  0000000E            00054         keyH
  0000000F            00055         keyD
  00000010            00056         KEY
  00000011            00057         temp_KEY
  00000012            00058         KEY_ISR
  00000013            00059         temp_S  
  00000014            00060         temp_W
  00000015            00061         counter
  00000016            00062         counter2
  00000017            00063         temp
  00000018            00064         OP_sec
  00000019            00065         OP_INT
  0000001A            00066         delayR
  0000001B            00067         d5us
  0000001C            00068         d200us
  0000001D            00069         d50ms
  0000001E            00070         inExecution
  0000001F            00071         clear_EE
  00000020            00072         H_EE    
  00000021            00073         L_EE    
  00000022            00074         REG_EE  
  00000023            00075         tempH_EE
  00000024            00076         tempL_EE
  00000025            00077         tempL_EEC
  00000026            00078         MAX_EE   
  00000027            00079         last_log
  00000028            00080         transferring
  00000029            00081         PC_PCL
  0000002A            00082         PC_PCLATH
  0000002B            00083         PC_PCLATU
  0000002C            00084         DETECTION_VAL
  0000002D            00085         ESKA
  0000002E            00086         ESKA_NOCAP
  0000002F            00087         YOP
  00000030            00088         YOP_NOCAP
  00000031            00089         TOTAL_BOTTLES
  00000032            00090         COLLECTIONS_COUNT
  00000033            00091         TRAY_COUNT
  00000034            00092         TRAY_DELAY
  00000035            00093         TRAY_CURRENT
  00000036            00094         TRAY_GOTO
  00000037            00095         STOP_CONDITION
  00000038            00096         inStandby
                      00097     endc
                      00098     
  0000                00099     extern tens_digit, ones_digit
  0000                00100     extern READ_ARDUINO, INIT_RTC
                      00101     
                      00102 ;*******************************************************************************
                      00103 ; tables
                      00104 ;*******************************************************************************
Warning[207]: Found label after column 1. (Welcome)
000000 6F62 4C74 0000 00105     Welcome     db          "botL", 0
Warning[207]: Found label after column 1. (Team)
000006 726D 6820 206C 00106     Team        db          "mr hl hg", 0
       6768 0000 
Warning[207]: Found label after column 1. (StandBy)
000010 7453 6E61 6964 00107     StandBy     db          "Standing by ... ... Standing by ... ...", 0
       676E 6220 2079 
       2E2E 202E 2E2E 
       202E 7453 6E61 
       6964 676E 6220 
       2079 2E2E 202E 
       2E2E 002E 
Warning[207]: Found label after column 1. (StandbyInfo)
000038 413C 533E 726F 00108     StandbyInfo db          "<A>Sort <B>Last Log <C>Perm Logs <D>PC", 0
       2074 423C 4C3E 
       7361 2074 6F4C 
       2067 433C 503E 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       7265 206D 6F4C 
       7367 3C20 3E44 
       4350 0000 
Warning[207]: Found label after column 1. (Log1)
000060 6954 656D 003A 00109     Log1        db          "Time:",0
Warning[207]: Found label after column 1. (Log2)
000066 3231 303A 2030 00110     Log2        db          "12:00 2/3/14", 0
       2F32 2F33 3431 
       0000 
Warning[207]: Found label after column 1. (LogInfo1)
000074 6153 6576 3A64 00111     LogInfo1    db          "Saved:", 0
       0000 
Warning[207]: Found label after column 1. (LogInfo2)
00007C 6142 6B63 3C20 00112     LogInfo2    db          "Back <0>", 0
       3E30 0000 
Warning[207]: Found label after column 1. (PermLog1)
000086 6550 6D72 6E61 00113     PermLog1    db          "Permanent Logs", 0
       6E65 2074 6F4C 
       7367 0000 
Warning[207]: Found label after column 1. (PermLog2)
000096 313C 203E 2E2E 00114     PermLog2    db          "<1> ... <9>", 0    
       202E 393C 003E 
Warning[207]: Found label after column 1. (Exe1)
0000A2 6F53 7472 6E69 00115     Exe1        db          "Sorting...", 0
       2E67 2E2E 0000 
Warning[207]: Found label after column 1. (Exe2)
0000AE 4E45 2044 2A3C 00116     Exe2        db          "END <*>", 0
       003E 
Warning[207]: Found label after column 1. (PC1)
0000B6 4350 4920 746E 00117     PC1         db          "PC Interface", 0
       7265 6166 6563 
       0000 
Warning[207]: Found label after column 1. (PC2)
0000C4 6542 6967 206E 00118     PC2         db          "Begin <#>", 0
       233C 003E 
Warning[207]: Found label after column 1. (PCTransfer)
0000CE 7254 6E61 6673 00119     PCTransfer  db          "Transferring...", 0
       7265 6972 676E 
       2E2E 002E 
Warning[207]: Found label after column 1. (PCComplete)
0000DE 6F43 706D 656C 00120     PCComplete  db          "Complete!", 0
       6574 0021 
Warning[207]: Found label after column 1. (SAVE)
0000E8 6153 6976 676E 00121     SAVE        db          "Saving...", 0
       2E2E 002E 
Warning[207]: Found label after column 1. (NoData)
0000F2 2F4E 0041      00122     NoData      db          "N/A", 0
                      00123         
                      00124 ;*******************************************************************************
                      00125 ; macros
                      00126 ;*******************************************************************************
                      00127         
                      00128 ConfigLCD   macro
                      00129           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
                      00130           call      WR_INS
                      00131 
                      00132           movlw     b'00001100'    ; display on/off
                      00133           call      WR_INS
                      00134           movlw     b'00000001'    ; Clear ram
                      00135           call      WR_INS
                      00136           endm
                      00137 
                      00138 Delay50N macro count, N
                      00139         local   loop
                      00140         movlw   N
                      00141         movwf   count
                      00142 
                      00143 loop
                      00144         call    Delay50ms
                      00145         decfsz  count
                      00146         goto    loop
                      00147         endm
                      00148 
                      00149 Display macro   Message
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150         local   loop
                      00151         movlw   upper Message   ; Move Table<20:16>
                      00152         movwf   TBLPTRU
                      00153         movlw   high Message    ; Move Table<15:8>
                      00154         movwf   TBLPTRH
                      00155         movlw   low Message     ; Move Table<7:0>
                      00156         movwf   TBLPTRL
                      00157         tblrd*                  ; Read byte from TBLPTRL to TABLAT
                      00158         movf    TABLAT, W
                      00159 loop
                      00160         call    WR_DATA         ; write to LCD
                      00161         tblrd+*                 ; next row in table
                      00162         movf    TABLAT, W
                      00163         bnz     loop
                      00164         endm    
                      00165 
                      00166 incf_BCD    macro   BCD
                      00167         local ones, endBCD
                      00168         movff   BCD, temp
                      00169         
                      00170         ;process ones digit
                      00171         movlw   0x0f
                      00172         andwf   temp
                      00173         movlw   d'9'
                      00174         
                      00175         ;skip if ones digit is 9
                      00176         cpfseq  temp
                      00177         goto    ones
                      00178         
                      00179         movlw   b'00010000'
                      00180         addwf   BCD
                      00181         movlw   0xf0
                      00182         andwf   BCD
                      00183         movlw   0xa0
                      00184         cpfslt  BCD
                      00185         
                      00186         clrf    BCD
                      00187         goto    endBCD
                      00188         
                      00189 ones
                      00190         incf    BCD
                      00191         goto    endBCD
                      00192 endBCD
                      00193         nop
                      00194         endm
                      00195 
                      00196 WriteEE macro   word, addH, addL
                      00197         movff   addH, EEADRH        ; High address
                      00198         movff   addL, EEADR         ; Low address
                      00199         movff   word, EEDATA        ; set word
                      00200 
                      00201         btfsc   EECON1, WR          ; test if WR=0, skip if so
                      00202         bra     $-2
                      00203 
                      00204         bcf     EECON1, EEPGD       ; Point to data memory
                      00205         bcf     EECON1, CFGS        ; Access EEPROM
                      00206         bsf     EECON1, WREN        ; enable write
                      00207         bcf     INTCON, GIE         ; disable interrupts during write
                      00208         bcf     PIR2, EEIF
                      00209 
                      00210         movlw   0x55
                      00211         movwf   EECON2              ; write 55h
                      00212         movlw   0xaa
                      00213         movwf   EECON2              ; write 0xaa
                      00214         bsf     EECON1, WR          ; begin write
                      00215         btfsc   EECON1, WR
                      00216         bra     $-2
                      00217 
                      00218         bsf     INTCON, GIE         ; enable interrupts after write
                      00219         bcf     EECON1, WREN        ; disable writes
                      00220         endm
                      00221 
                      00222 READEE  macro   file, addH, addL
                      00223         movff   addH, EEADRH        ; read to high
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00224         movff   addL, EEADR         ; read to low
                      00225         bcf     EECON1, EEPGD       ; point to data memory
                      00226         bcf     EECON1, CFGS        ; access to EEPROM
                      00227         bsf     EECON1, RD          ; read EEPROM
                      00228         movff   EEDATA, file        ; put data into file
                      00229         endm
                      00230 
                      00231 ChangeMode  macro   ModeId, NextMode
                      00232         local Next, Exit
                      00233 
                      00234         movlw   ModeId              ; poll for mode
                      00235         cpfseq  KEY                 ; check this against key press
                      00236         goto    Exit
                      00237 
                      00238 Next
                      00239         clrf    LATA                ; clear pins before proceeding
                      00240         clrf    LATB
                      00241         clrf    LATC
                      00242         clrf    LATD
                      00243         goto    NextMode
                      00244 
                      00245 Exit
                      00246         nop
                      00247         endm
                      00248 
                      00249 saveContext macro
                      00250     movff   STATUS, temp_S          ; save STATUS first
                      00251     movwf   temp_W                  ; save W
                      00252     endm
                      00253 
                      00254 restoreContext macro
                      00255     swapf   temp_W, 0               ; restore W first
                      00256     movff   temp_S, STATUS          ; restore STATUS last without affecting W
                      00257     endm
                      00258 ;*******************************************************************************
                      00259 ; reset vector and isrs
                      00260 ;*******************************************************************************
                      00261         ORG     0x000               ; processor reset vector
000000 EF?? F???      00262         goto    INIT                ; go to beginning of program
                      00263 
                      00264         ORG     0x008
000008 EF?? F???      00265         goto    ISR_HIGH
                      00266 
                      00267         ORG     0x018
000018 EF?? F???      00268         goto    ISR_LOW
                      00269 
00001C                00270 EMERGENCY_STOP
                      00271         ; first check if we're currently sorting - else, no need to restart
00001C 0EFF           00272         movlw   0xff                ; if in operation, skip return
00001E 621E           00273         cpfseq  inExecution
000020 EF?? F???      00274         goto    END_ISR_HIGH
                      00275         
                      00276         ; reset program counter - emergency stop recorded. 
000024 9ED5           00277         bcf     T0CON, TMR0ON
000026 EC?? F???      00278         call    SAVE_EXE_TIME
                      00279         
                      00280         ; reset emergency stop interrupt bit
00002A 92F2           00281         bcf     INTCON, INT0IF
                      00282                 
                      00283         ; clear inExecution flag
00002C 6A1E           00284         clrf    inExecution
00002E 0E01           00285         movlw   d'1'
000030 6E37           00286         movwf   STOP_CONDITION
000032 EC?? F???      00287         call    SaveData
                      00288         
000036 6AFF           00289         clrf    TOSU
000038 6AFE           00290         clrf    TOSH
00003A 6AFD           00291         clrf    TOSL
00003C 90F0           00292         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00293         restoreContext
00003E 3814               M     swapf   temp_W, 0               ; restore W first
000040 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000044 0010           00294         retfie
                      00295 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000046                00296 LOAD_STANDBY_TIME
000046 0EFF           00297         movlw   0xff
000048 6ED7           00298         movwf   TMR0H
00004A 0EFF           00299         movlw   0xff
00004C 6ED6           00300         movwf   TMR0L
                      00301 
00004E 0012           00302         return  
                      00303 
000050                00304 LOAD_EXE_TIME
000050 0EC3           00305         movlw   0xc3
000052 6ED7           00306         movwf   TMR0H
000054 0E25           00307         movlw   0x25
000056 6ED6           00308         movwf   TMR0L
                      00309         
000058 0012           00310         return
                      00311         
00005A                00312 ISR_HIGH
                      00313         saveContext
00005A CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
00005E 6E14               M     movwf   temp_W                  ; save W
                      00314         
                      00315 ;       btfsc   INTCON, INT0IF
                      00316 ;       call    EMERGENCY_STOP
                      00317         
000060 0E00           00318         movlw   0x00
000062 6238           00319         cpfseq  inStandby
000064 EC?? F???      00320         call    Shift
                      00321         
                      00322         ;reset timer, but need to check which time increment 
000068 0E00           00323         movlw   0x00
00006A 6238           00324         cpfseq  inStandby
00006C EC?? F???      00325         call    LOAD_STANDBY_TIME
                      00326         
000070 0EFF           00327         movlw   0xff
000072 6238           00328         cpfseq  inStandby
000074 EC?? F???      00329         call    LOAD_EXE_TIME
                      00330 
                      00331                 
                      00332         ; displaying the execution time in seconds
                      00333 ;       swapf   OP_sec, 0       ; 100's seconds
                      00334 ;       movwf   temp
                      00335 ;       movlw   0x0f
                      00336 ;       andwf   temp
                      00337 ;       movff   temp, WREG
                      00338 ;       addlw   0x30
                      00339 ;       call    WR_DATA
                      00340 ;
                      00341 ;       movff   OP_sec, temp    ; 10's seconds
                      00342 ;       movlw   0x0f
                      00343 ;       andwf   temp            ; Temp = lower nibble of Op_sec
                      00344 ;       movff   temp, WREG      ; W = Temp
                      00345 ;       addlw   0x30            ; Convert to ASCII
                      00346 ;       call    WR_DATA
                      00347 ;       
                      00348 ;       swapf   OP_INT, WREG    ;1's seconds
                      00349 ;       movwf   temp
                      00350 ;       movlw   0x0f
                      00351 ;       andwf   temp
                      00352 ;       movff   temp, WREG
                      00353 ;       addlw   0x30
                      00354 ;       call    WR_DATA
                      00355 ;
                      00356 ;       movlw   0x73            ; Write 's'
                      00357 ;       call    WR_DATA
                      00358 ;       call    LCD_L2
                      00359                 
                      00360         ;timer interrupt
000078 A4F2           00361         btfss   INTCON, TMR0IF
00007A EF?? F???      00362         goto    END_ISR_HIGH
                      00363         
                      00364         incf_BCD    OP_INT
  0000                    M         local ones, endBCD
00007E C019 F017          M         movff   OP_INT, temp
                          M         
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;process ones digit
000082 0E0F               M         movlw   0x0f
000084 1617               M         andwf   temp
000086 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
000088 6217               M         cpfseq  temp
00008A EF?? F???          M         goto    ones
                          M         
00008E 0E10               M         movlw   b'00010000'
000090 2619               M         addwf   OP_INT
000092 0EF0               M         movlw   0xf0
000094 1619               M         andwf   OP_INT
000096 0EA0               M         movlw   0xa0
000098 6019               M         cpfslt  OP_INT
                          M         
00009A 6A19               M         clrf    OP_INT
00009C EF?? F???          M         goto    endBCD
                          M         
0000A0                    M ones
0000A0 2A19               M         incf    OP_INT
0000A2 EF?? F???          M         goto    endBCD
0000A6                    M endBCD
0000A6 0000               M         nop
0000A8 0E00           00365         movlw   d'0'
0000AA 6219           00366         cpfseq  OP_INT
0000AC EF?? F???      00367         goto    END_ISR_HIGH
                      00368         incf_BCD    OP_sec
  0000                    M         local ones, endBCD
0000B0 C018 F017          M         movff   OP_sec, temp
                          M         
                          M         ;process ones digit
0000B4 0E0F               M         movlw   0x0f
0000B6 1617               M         andwf   temp
0000B8 0E09               M         movlw   d'9'
                          M         
                          M         ;skip if ones digit is 9
0000BA 6217               M         cpfseq  temp
0000BC EF?? F???          M         goto    ones
                          M         
0000C0 0E10               M         movlw   b'00010000'
0000C2 2618               M         addwf   OP_sec
0000C4 0EF0               M         movlw   0xf0
0000C6 1618               M         andwf   OP_sec
0000C8 0EA0               M         movlw   0xa0
0000CA 6018               M         cpfslt  OP_sec
                          M         
0000CC 6A18               M         clrf    OP_sec
0000CE EF?? F???          M         goto    endBCD
                          M         
0000D2                    M ones
0000D2 2A18               M         incf    OP_sec
0000D4 EF?? F???          M         goto    endBCD
0000D8                    M endBCD
0000D8 0000               M         nop
                      00369 
0000DA                00370 END_ISR_HIGH
0000DA 94F2           00371         bcf     INTCON, TMR0IF
                      00372         restoreContext
0000DC 3814               M     swapf   temp_W, 0               ; restore W first
0000DE C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
0000E2 0010           00373         retfie
                      00374 
0000E4                00375 ISR_LOW
                      00376         saveContext
0000E4 CFD8 F013          M     movff   STATUS, temp_S          ; save STATUS first
0000E8 6E14               M     movwf   temp_W                  ; save W
                      00377         ; KEYPAD INTERRUPT
0000EA A0F0           00378         btfss   INTCON3, INT1IF         ; If KEYPAD interrupt, skip return
0000EC EF?? F???      00379         goto    END_ISR_LOW
                      00380 
                      00381         ; check operation status
0000F0 0EFF           00382         movlw   0xff                    ; If in operation, skip return
0000F2 621E           00383         cpfseq  inExecution
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000F4 EF?? F???      00384         goto    END_ISR_LOW
                      00385 
                      00386         ; process KEY
0000F8 3881           00387         swapf   PORTB, 0                ; Read PORTB<7:4> into W<3:0>
0000FA 0B0F           00388         andlw   0x0f
0000FC 6E12           00389         movwf   KEY_ISR
                      00390         
0000FE 0E0C           00391         movlw   keyS                    ; Put keyStar into W to compare to KEY_ISR
000100 6212           00392         cpfseq  KEY_ISR                 ; If key was '*', skip return
000102 EF?? F???      00393         goto    END_ISR_LOW
                      00394         
                      00395         ; reset program counter - emergency stop recorded. 
000106 9ED5           00396         bcf     T0CON, TMR0ON
000108 EC?? F???      00397         call    SAVE_EXE_TIME
                      00398                 
                      00399         ; Clear inExecution flag to stop '*' interrupts
00010C 6A1E           00400         clrf    inExecution
00010E 0E01           00401         movlw   d'1'
000110 6E37           00402         movwf   STOP_CONDITION
000112 EC?? F???      00403         call    SaveData
                      00404         
000116 6AFF           00405         clrf    TOSU
000118 6AFE           00406         clrf    TOSH
00011A 6AFD           00407         clrf    TOSL
00011C 90F0           00408         bcf     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00409         restoreContext
00011E 3814               M     swapf   temp_W, 0               ; restore W first
000120 C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
000124 0010           00410         retfie
                      00411 
000126                00412 END_ISR_LOW
000126 90F0           00413         bcf                     INTCON3, INT1IF         ; Clear flag for next interrupt
                      00414         restoreContext
000128 3814               M     swapf   temp_W, 0               ; restore W first
00012A C013 FFD8          M     movff   temp_S, STATUS          ; restore STATUS last without affecting W
00012E 0010           00415         retfie
                      00416 
                      00417 ;*******************************************************************************
                      00418 ; main
                      00419 ;*******************************************************************************
000130                00420 INIT
000130 0E70           00421         movlw   b'01110000'     ;Set internal oscillator frequency to 8MHz
000132 6ED3           00422         movwf   OSCCON
                      00423         
                      00424         ; i/o
000134 0E00           00425         movlw   b'00000000'
000136 6E92           00426         movwf   TRISA
000138 0EFF           00427         movlw   b'11111111'
00013A 6E93           00428         movwf   TRISB               ; keypad
00013C 0E00           00429         movlw   b'00000000'
00013E 6E94           00430         movwf   TRISC
000140 0E00           00431         movlw   b'00000000'
000142 6E95           00432         movwf   TRISD
000144 0E00           00433         movlw   b'00000000'
000146 6E96           00434         movwf   TRISE
                      00435 
                      00436         ; clear ports
000148 0E00           00437         movlw   b'00000000'
00014A 6E89           00438         movwf   LATA
00014C 0E00           00439         movlw   b'00000000'
00014E 6E8A           00440         movwf   LATB
000150 0E00           00441         movlw   b'00000000'
000152 6E8B           00442         movwf   LATC
000154 0E00           00443         movlw   b'00000000'
000156 6E8C           00444         movwf   LATD
000158 0E00           00445         movlw   b'00000000'
00015A 6E8D           00446         movwf   LATE
                      00447         
00015C 0E00           00448         movlw   b'00000000'
00015E 6EC2           00449         movwf   ADCON0
                      00450 ;       movlw   b'11111111'
                      00451 ;       movwf   ADCON1
                      00452         
                      00453         ; setting up pwm
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00454 ;       clrf    CM1CONO         ; disable comparators
                      00455 ;       clrf    CM2CONO
                      00456 ;       movlw   0x3c            ; pwm mode and 2 lsb of duty cycle
                      00457 ;       movwf   CCP2CON
                      00458 ;       movlw   0x00            ; bits 9:2 of pwm duty cycle
                      00459 ;       movwf   CCPR2L
                      00460 ;       
                      00461 ;       bcf     PIR1, TMR2IF
                      00462 ;       bcf     T2CON, T2CKPS1
                      00463 ;       bsf     T2CON, TMR2ON
                      00464         
                      00465         ; initializations
000160 EC?? F???      00466         call    InitLCD
                      00467         ConfigLCD
000164 0E28               M           movlw     b'00101000'    ; 4 bits, 2 lines,5X7 dots seems to work best instead of the above setting
000166 EC?? F???          M           call      WR_INS
                          M 
00016A 0E0C               M           movlw     b'00001100'    ; display on/off
00016C EC?? F???          M           call      WR_INS
000170 0E01               M           movlw     b'00000001'    ; Clear ram
000172 EC?? F???          M           call      WR_INS
                      00468         
000176 EC?? F???      00469         call    i2c_common_setup
                      00470         
00017A EC?? F???      00471         call    RTC_INIT
                      00472         ;COLOUR_INIT
00017E EC?? F???      00473         call    INIT_USART
                      00474 
                      00475         ; interrupts
000182 6AD0           00476         clrf    RCON
000184 6AF2           00477         clrf    INTCON
000186 6AF1           00478         clrf    INTCON2
000188 6AF0           00479         clrf    INTCON3
00018A 8ED0           00480         bsf     RCON, IPEN          ; priority mode
00018C 8EF2           00481         bsf     INTCON, GIEH        ; permit global interrupts
00018E 8CF2           00482         bsf     INTCON, GIEL
000190 8AF1           00483         bsf     INTCON2, INTEDG1    ; INTEDG1 on rising edge
000192 8AF2           00484         bsf     INTCON, TMR0IE      ; clear timer0 overflow interrupt flag
000194 84F2           00485         bsf     INTCON, TMR0IF      ; clear timer0 overflow interrupt flag
000196 84F1           00486         bsf     INTCON2, TMR0IP     ; set to high priority
000198 86F0           00487         bsf     INTCON3, INT1IE     ; enable interrupts on rb1 for keyboard
00019A 9CF0           00488         bcf     INTCON3, INT1IP     ; keyboard to low priority
                      00489 ;       bsf     INTCON, INT0IE      ; enable high interrupts on rb0 for emergency stop
                      00490 ;       bcf     INTCON, INT0IF      ; clear emergency stop interrupt
                      00491         
                      00492         ; setting up timer to sychronize with 1 second clock intervals
00019C 9ED5           00493         bcf     T0CON, TMR0ON
00019E 9CD5           00494         bcf     T0CON, T08BIT
0001A0 9AD5           00495         bcf     T0CON, T0CS
0001A2 98D5           00496         bcf     T0CON, T0SE
0001A4 96D5           00497         bcf     T0CON, PSA
0001A6 94D5           00498         bcf     T0CON, T0PS2        ; set prescaling to 1:16.
0001A8 82D5           00499         bsf     T0CON, T0PS1
0001AA 80D5           00500         bsf     T0CON, T0PS0
                      00501 
0001AC 6A20           00502         clrf    H_EE
0001AE 6A21           00503         clrf    L_EE
0001B0 6A??           00504         clrf    tens_digit
0001B2 6A??           00505         clrf    ones_digit
                      00506         
0001B4 6A2C           00507         clrf    DETECTION_VAL
0001B6 6A2D           00508         clrf    ESKA
0001B8 6A2E           00509         clrf    ESKA_NOCAP
0001BA 6A2F           00510         clrf    YOP
0001BC 6A30           00511         clrf    YOP_NOCAP
0001BE 6A31           00512         clrf    TOTAL_BOTTLES
0001C0 6A32           00513         clrf    COLLECTIONS_COUNT
                      00514         
0001C2 0EF2           00515         movlw     b'11110010'    ; Set required keypad inputs
0001C4 6E93           00516         movwf     TRISB
                      00517         
0001C6 EC?? F???      00518         call    ClrLCD
                      00519         Display Welcome
  0000                    M         local   loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001CA 0E??               M         movlw   upper Welcome   ; Move Table<20:16>
0001CC 6EF8               M         movwf   TBLPTRU
0001CE 0E??               M         movlw   high Welcome    ; Move Table<15:8>
0001D0 6EF7               M         movwf   TBLPTRH
0001D2 0E??               M         movlw   low Welcome     ; Move Table<7:0>
0001D4 6EF6               M         movwf   TBLPTRL
0001D6 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001D8 50F5               M         movf    TABLAT, W
0001DA                    M loop
0001DA EC?? F???          M         call    WR_DATA         ; write to LCD
0001DE 000B               M         tblrd+*                 ; next row in table
0001E0 50F5               M         movf    TABLAT, W
0001E2 E1??               M         bnz     loop
0001E4 EC?? F???      00520         call LCD_L2
                      00521         Display Team
  0000                    M         local   loop
0001E8 0E??               M         movlw   upper Team      ; Move Table<20:16>
0001EA 6EF8               M         movwf   TBLPTRU
0001EC 0E??               M         movlw   high Team       ; Move Table<15:8>
0001EE 6EF7               M         movwf   TBLPTRH
0001F0 0E??               M         movlw   low Team        ; Move Table<7:0>
0001F2 6EF6               M         movwf   TBLPTRL
0001F4 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0001F6 50F5               M         movf    TABLAT, W
0001F8                    M loop
0001F8 EC?? F???          M         call    WR_DATA         ; write to LCD
0001FC 000B               M         tblrd+*                 ; next row in table
0001FE 50F5               M         movf    TABLAT, W
000200 E1??               M         bnz     loop
                      00522         
                      00523         Delay50N delayR, 0x28
  0000                    M         local   loop
000202 0E28               M         movlw   0x28
000204 6E1A               M         movwf   delayR
                          M 
000206                    M loop
000206 EC?? F???          M         call    Delay50ms
00020A 2E1A               M         decfsz  delayR
00020C EF?? F???          M         goto    loop
                      00524 
                      00525 ;*******************************************************************************
                      00526 ; standby mode
                      00527 ;*******************************************************************************
000210                00528 STANDBY
000210 0E00           00529         movlw   b'00000000'
000212 6E84           00530         movwf   PORTE
000214 0E00           00531         movlw   b'00000000'
000216 6E80           00532         movwf   PORTA
                      00533         
000218 6838           00534         setf    inStandby       
00021A EC?? F???      00535         call    ClrLCD
                      00536         Display StandBy
  0000                    M         local   loop
00021E 0E??               M         movlw   upper StandBy   ; Move Table<20:16>
000220 6EF8               M         movwf   TBLPTRU
000222 0E??               M         movlw   high StandBy    ; Move Table<15:8>
000224 6EF7               M         movwf   TBLPTRH
000226 0E??               M         movlw   low StandBy     ; Move Table<7:0>
000228 6EF6               M         movwf   TBLPTRL
00022A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00022C 50F5               M         movf    TABLAT, W
00022E                    M loop
00022E EC?? F???          M         call    WR_DATA         ; write to LCD
000232 000B               M         tblrd+*                 ; next row in table
000234 50F5               M         movf    TABLAT, W
000236 E1??               M         bnz     loop
000238 EC?? F???      00537         call    LCD_L2
                      00538         Display StandbyInfo
  0000                    M         local   loop
00023C 0E??               M         movlw   upper StandbyInfo ; Move Table<20:16>
00023E 6EF8               M         movwf   TBLPTRU
000240 0E??               M         movlw   high StandbyInfo ; Move Table<15:8>
000242 6EF7               M         movwf   TBLPTRH
000244 0E??               M         movlw   low StandbyInfo ; Move Table<7:0>
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000246 6EF6               M         movwf   TBLPTRL
000248 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00024A 50F5               M         movf    TABLAT, W
00024C                    M loop
00024C EC?? F???          M         call    WR_DATA         ; write to LCD
000250 000B               M         tblrd+*                 ; next row in table
000252 50F5               M         movf    TABLAT, W
000254 E1??               M         bnz     loop
                      00539         
000256 0EFF           00540         movlw   0xff
000258 6ED7           00541         movwf   TMR0H
00025A 0EFF           00542         movlw   0xff
00025C 6ED6           00543         movwf   TMR0L
00025E 8ED5           00544         bsf     T0CON, TMR0ON       ; turning on timer
                      00545 
                      00546 
000260                00547 HOLD_STANDBY
000260 EC?? F???      00548         call    READ_KEY_TIME
                      00549 
                      00550         ChangeMode  key1, COLOUR_TEST
  0000                    M         local Next, Exit
                          M 
000264 0E00               M         movlw   key1                ; poll for mode
000266 6210               M         cpfseq  KEY                 ; check this against key press
000268 EF?? F???          M         goto    Exit
                          M 
00026C                    M Next
00026C 6A89               M         clrf    LATA                ; clear pins before proceeding
00026E 6A8A               M         clrf    LATB
000270 6A8B               M         clrf    LATC
000272 6A8C               M         clrf    LATD
000274 EF?? F???          M         goto    COLOUR_TEST
                          M 
000278                    M Exit
000278 0000               M         nop
                      00551         ChangeMode  key2, STEP_TEST
  0000                    M         local Next, Exit
                          M 
00027A 0E01               M         movlw   key2                ; poll for mode
00027C 6210               M         cpfseq  KEY                 ; check this against key press
00027E EF?? F???          M         goto    Exit
                          M 
000282                    M Next
000282 6A89               M         clrf    LATA                ; clear pins before proceeding
000284 6A8A               M         clrf    LATB
000286 6A8B               M         clrf    LATC
000288 6A8C               M         clrf    LATD
00028A EF?? F???          M         goto    STEP_TEST
                          M 
00028E                    M Exit
00028E 0000               M         nop
                      00552         ChangeMode  keyA, EXECUTION
  0000                    M         local Next, Exit
                          M 
000290 0E03               M         movlw   keyA                ; poll for mode
000292 6210               M         cpfseq  KEY                 ; check this against key press
000294 EF?? F???          M         goto    Exit
                          M 
000298                    M Next
000298 6A89               M         clrf    LATA                ; clear pins before proceeding
00029A 6A8A               M         clrf    LATB
00029C 6A8B               M         clrf    LATC
00029E 6A8C               M         clrf    LATD
0002A0 EF?? F???          M         goto    EXECUTION
                          M 
0002A4                    M Exit
0002A4 0000               M         nop
                      00553         ChangeMode  keyB, LOG
  0000                    M         local Next, Exit
                          M 
0002A6 0E07               M         movlw   keyB                ; poll for mode
0002A8 6210               M         cpfseq  KEY                 ; check this against key press
0002AA EF?? F???          M         goto    Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002AE                    M Next
0002AE 6A89               M         clrf    LATA                ; clear pins before proceeding
0002B0 6A8A               M         clrf    LATB
0002B2 6A8B               M         clrf    LATC
0002B4 6A8C               M         clrf    LATD
0002B6 EF?? F???          M         goto    LOG
                          M 
0002BA                    M Exit
0002BA 0000               M         nop
                      00554         ChangeMode  keyC, PERM_LOG
  0000                    M         local Next, Exit
                          M 
0002BC 0E0B               M         movlw   keyC                ; poll for mode
0002BE 6210               M         cpfseq  KEY                 ; check this against key press
0002C0 EF?? F???          M         goto    Exit
                          M 
0002C4                    M Next
0002C4 6A89               M         clrf    LATA                ; clear pins before proceeding
0002C6 6A8A               M         clrf    LATB
0002C8 6A8B               M         clrf    LATC
0002CA 6A8C               M         clrf    LATD
0002CC EF?? F???          M         goto    PERM_LOG
                          M 
0002D0                    M Exit
0002D0 0000               M         nop
                      00555         ChangeMode  keyD, PC_MODE
  0000                    M         local Next, Exit
                          M 
0002D2 0E0F               M         movlw   keyD                ; poll for mode
0002D4 6210               M         cpfseq  KEY                 ; check this against key press
0002D6 EF?? F???          M         goto    Exit
                          M 
0002DA                    M Next
0002DA 6A89               M         clrf    LATA                ; clear pins before proceeding
0002DC 6A8A               M         clrf    LATB
0002DE 6A8B               M         clrf    LATC
0002E0 6A8C               M         clrf    LATD
0002E2 EF?? F???          M         goto    PC_MODE
                          M 
0002E6                    M Exit
0002E6 0000               M         nop
0002E8 D???           00556         bra     HOLD_STANDBY
                      00557         
                      00558 ;*******************************************************************************
                      00559 ; super fun awesome tests that are my favorite thing to do at 3am yay fun great
                      00560 ;*******************************************************************************
                      00561         
0002EA                00562 STEP_TEST
0002EA 6A38           00563         clrf    inStandby
0002EC 6A32           00564         clrf    COLLECTIONS_COUNT
                      00565         Delay50N    delayR, 0x14
  0000                    M         local   loop
0002EE 0E14               M         movlw   0x14
0002F0 6E1A               M         movwf   delayR
                          M 
0002F2                    M loop
0002F2 EC?? F???          M         call    Delay50ms
0002F6 2E1A               M         decfsz  delayR
0002F8 EF?? F???          M         goto    loop
                      00566     
0002FC                00567 ROTATE_90_TEST                      ; actually 45, but dont care to change label
0002FC 0E23           00568         movlw   b'00100011'
0002FE 6E80           00569         movwf   PORTA
000300 EC?? F???      00570         call    delay5ms
000304 EC?? F???      00571         call    delay5ms
000308 EC?? F???      00572         call    delay5ms
00030C EC?? F???      00573         call    delay5ms
000310 EC?? F???      00574         call    delay5ms
000314 EC?? F???      00575         call    delay5ms
000318 EC?? F???      00576         call    delay5ms
00031C EC?? F???      00577         call    delay5ms
                      00578 ;       incf    COLLECTIONS_COUNT
                      00579 ;       
                      00580 ;       movlw   d'15'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00581 ;       subwf   COLLECTIONS_COUNT, 0
                      00582 ;       bz      STEP_TEST
                      00583 
000320 0E26           00584         movlw   b'00100110'
000322 6E80           00585         movwf   PORTA
000324 EC?? F???      00586         call    delay5ms
000328 EC?? F???      00587         call    delay5ms
00032C EC?? F???      00588         call    delay5ms
000330 EC?? F???      00589         call    delay5ms
000334 EC?? F???      00590         call    delay5ms
000338 EC?? F???      00591         call    delay5ms
00033C EC?? F???      00592         call    delay5ms
000340 EC?? F???      00593         call    delay5ms
                      00594 ;       incf    COLLECTIONS_COUNT
                      00595         
000344 0E2C           00596         movlw   b'00101100'
000346 6E80           00597         movwf   PORTA
000348 EC?? F???      00598         call    delay5ms
00034C EC?? F???      00599         call    delay5ms
000350 EC?? F???      00600         call    delay5ms
000354 EC?? F???      00601         call    delay5ms
000358 EC?? F???      00602         call    delay5ms
00035C EC?? F???      00603         call    delay5ms
000360 EC?? F???      00604         call    delay5ms
000364 EC?? F???      00605         call    delay5ms
                      00606 ;       incf    COLLECTIONS_COUNT
                      00607 
000368 0E29           00608         movlw   b'00101001'
00036A 6E80           00609         movwf   PORTA
00036C EC?? F???      00610         call    delay5ms
000370 EC?? F???      00611         call    delay5ms
000374 EC?? F???      00612         call    delay5ms
000378 EC?? F???      00613         call    delay5ms
00037C EC?? F???      00614         call    delay5ms
000380 EC?? F???      00615         call    delay5ms
000384 EC?? F???      00616         call    delay5ms
000388 EC?? F???      00617         call    delay5ms        
00038C 2A32           00618         incf    COLLECTIONS_COUNT
                      00619         
00038E 0E02           00620         movlw   d'2'                        ; 7 ~ 45 degrees
000390 6232           00621         cpfseq  COLLECTIONS_COUNT
000392 D???           00622         bra     ROTATE_90_TEST
                      00623         
000394 D???           00624         bra     STEP_TEST
                      00625 
000396                00626 COLOUR_TEST
000396 EC?? F???      00627         call    ClrLCD
00039A 6A38           00628         clrf    inStandby
00039C 0E01           00629         movlw   b'00000001'
00039E 6E84           00630         movwf   PORTE
                      00631 
0003A0                00632 LOOPING
                      00633         Delay50N delayR, 0x28
  0000                    M         local   loop
0003A0 0E28               M         movlw   0x28
0003A2 6E1A               M         movwf   delayR
                          M 
0003A4                    M loop
0003A4 EC?? F???          M         call    Delay50ms
0003A8 2E1A               M         decfsz  delayR
0003AA EF?? F???          M         goto    loop
                      00634 
                      00635 ;       movlw   d'1000'
                      00636 ;       movwf   TRAY_DELAY
                      00637         
                      00638         ; reading data from arduino 
                      00639         ; expect:   1 for eska cap
                      00640         ;           2 for eska no cap
                      00641         ;           3 for yop cap
                      00642         ;           4 for yop no cap
                      00643         ;           5 for no bottle, get outta here
0003AE EC?? F???      00644         call    READ_ARDUINO
0003B2 6E2C           00645         movwf   DETECTION_VAL
0003B4 0F30           00646         addlw   0x30
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003B6 EC?? F???      00647         call    WR_DATA
                      00648         Delay50N delayR, 0x3c
  0000                    M         local   loop
0003BA 0E3C               M         movlw   0x3c
0003BC 6E1A               M         movwf   delayR
                          M 
0003BE                    M loop
0003BE EC?? F???          M         call    Delay50ms
0003C2 2E1A               M         decfsz  delayR
0003C4 EF?? F???          M         goto    loop
                      00649         
0003C8 D???           00650         bra COLOUR_TEST
                      00651 
                      00652 ;*******************************************************************************
                      00653 ; execution mode
                      00654 ;*******************************************************************************
                      00655         
0003CA                00656 EXECUTION
0003CA 9ED5           00657         bcf     T0CON, TMR0ON       ; turning on timer
0003CC 6A38           00658         clrf    inStandby       
0003CE EC?? F???      00659         call    ClearEEPROM_21
                      00660         
                      00661         ; save the starting time
0003D2 EC?? F???      00662         call        SAVE_TIME
                      00663                 
                      00664         ; display
0003D6 681E           00665         setf        inExecution
0003D8 EC?? F???      00666         call        ClrLCD
                      00667         Display     Exe1
  0000                    M         local   loop
0003DC 0E??               M         movlw   upper Exe1      ; Move Table<20:16>
0003DE 6EF8               M         movwf   TBLPTRU
0003E0 0E??               M         movlw   high Exe1       ; Move Table<15:8>
0003E2 6EF7               M         movwf   TBLPTRH
0003E4 0E??               M         movlw   low Exe1        ; Move Table<7:0>
0003E6 6EF6               M         movwf   TBLPTRL
0003E8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0003EA 50F5               M         movf    TABLAT, W
0003EC                    M loop
0003EC EC?? F???          M         call    WR_DATA         ; write to LCD
0003F0 000B               M         tblrd+*                 ; next row in table
0003F2 50F5               M         movf    TABLAT, W
0003F4 E1??               M         bnz     loop
0003F6 EC?? F???      00668         call        LCD_L2
                      00669         
0003FA 0EC3           00670         movlw   0xc3
0003FC 6ED7           00671         movwf   TMR0H
0003FE 0E25           00672         movlw   0x25
000400 6ED6           00673         movwf   TMR0L
                      00674         
000402 8ED5           00675         bsf         T0CON, TMR0ON           ; turning on timer
                      00676         
                      00677         ; initialize variables
000404 6A18           00678         clrf        OP_sec
000406 6A19           00679         clrf        OP_INT
                      00680         
000408 6A2D           00681         clrf        ESKA
00040A 6A2E           00682         clrf        ESKA_NOCAP
00040C 6A2F           00683         clrf        YOP
00040E 6A30           00684         clrf        YOP_NOCAP
000410 6A31           00685         clrf        TOTAL_BOTTLES
000412 0E01           00686         movlw       d'1'
000414 6E35           00687         movwf       TRAY_CURRENT
000416 6A34           00688         clrf        TRAY_DELAY
                      00689         
000418 0E01           00690         movlw   b'00000001'
00041A 6E84           00691         movwf   PORTE
                      00692         
                      00693         ; todo: make sure tray is in position one on reset, add some delay
                      00694         
00041C EF?? F???      00695         goto        DETECTIONS
                      00696 
000420                00697 COLLECTIONS_CORRECTION
000420 0E00           00698         movlw       d'0'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000422 6E33           00699         movwf       TRAY_COUNT
                      00700         
000424 0E1A           00701         movlw       d'26'
000426 6E34           00702         movwf       TRAY_DELAY
000428 D???           00703         bra         ROTATE_45
                      00704         
00042A                00705 COLLECTIONS_VALUE
00042A 0E01           00706         movlw       d'1'
00042C 6E33           00707         movwf       TRAY_COUNT
                      00708         
00042E 0E19           00709         movlw       d'25'
000430 6E34           00710         movwf       TRAY_DELAY
000432 D???           00711         bra         ROTATE_45
                      00712         
000434                00713 COLLECTIONS_STEP
000434 6A32           00714         clrf        COLLECTIONS_COUNT
000436 0E00           00715         movlw       d'0'
                      00716 ;       cpfseq      TRAY_COUNT
                      00717 ;       bra         COLLECTIONS_CORRECTION
                      00718 ;       bra         COLLECTIONS_VALUE
                      00719         Delay50N    delayR, 0x14
  0000                    M         local   loop
000438 0E14               M         movlw   0x14
00043A 6E1A               M         movwf   delayR
                          M 
00043C                    M loop
00043C EC?? F???          M         call    Delay50ms
000440 2E1A               M         decfsz  delayR
000442 EF?? F???          M         goto    loop
                      00720 
                      00721 
000446                00722 ROTATE_45                       ; count needs to be 25 for 45 (45/1.8=25)
000446 0E23           00723         movlw   b'00100011'
000448 6E80           00724         movwf   PORTA
                      00725         Delay50N    delayR, 0x03
  0000                    M         local   loop
00044A 0E03               M         movlw   0x03
00044C 6E1A               M         movwf   delayR
                          M 
00044E                    M loop
00044E EC?? F???          M         call    Delay50ms
000452 2E1A               M         decfsz  delayR
000454 EF?? F???          M         goto    loop
000458 2A32           00726         incf    COLLECTIONS_COUNT
                      00727         
00045A C034 FFE8      00728         movff   TRAY_DELAY, WREG
00045E 0E19           00729         movlw   d'25'
000460 5C32           00730         subwf   COLLECTIONS_COUNT, 0
000462 E0??           00731         bz      DETECTIONS
                      00732 
000464 0E26           00733         movlw   b'00100110'
000466 6E80           00734         movwf   PORTA
                      00735         Delay50N    delayR, 0x03
  0000                    M         local   loop
000468 0E03               M         movlw   0x03
00046A 6E1A               M         movwf   delayR
                          M 
00046C                    M loop
00046C EC?? F???          M         call    Delay50ms
000470 2E1A               M         decfsz  delayR
000472 EF?? F???          M         goto    loop
000476 2A32           00736         incf    COLLECTIONS_COUNT
                      00737         
                      00738 ;       movff   TRAY_DELAY, WREG
                      00739 ;       subwf   COLLECTIONS_COUNT, 0
                      00740 ;       bz      DETECTIONS
                      00741         
000478 0E2C           00742         movlw   b'00101100'
00047A 6E80           00743         movwf   PORTA
                      00744         Delay50N    delayR, 0x03
  0000                    M         local   loop
00047C 0E03               M         movlw   0x03
00047E 6E1A               M         movwf   delayR
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000480                    M loop
000480 EC?? F???          M         call    Delay50ms
000484 2E1A               M         decfsz  delayR
000486 EF?? F???          M         goto    loop
00048A 2A32           00745         incf    COLLECTIONS_COUNT
                      00746         
                      00747 ;       movff   TRAY_DELAY, WREG
                      00748 ;       subwf   COLLECTIONS_COUNT, 0
                      00749 ;       bz      DETECTIONS
                      00750 
00048C 0E29           00751         movlw   b'00101001'
00048E 6E80           00752         movwf   PORTA
                      00753         Delay50N    delayR, 0x03
  0000                    M         local   loop
000490 0E03               M         movlw   0x03
000492 6E1A               M         movwf   delayR
                          M 
000494                    M loop
000494 EC?? F???          M         call    Delay50ms
000498 2E1A               M         decfsz  delayR
00049A EF?? F???          M         goto    loop
00049E 2A32           00754         incf    COLLECTIONS_COUNT
                      00755         
                      00756 ;       movff   TRAY_DELAY, WREG
                      00757 ;       subwf   COLLECTIONS_COUNT, 0
                      00758 ;       bz      DETECTIONS
0004A0 EF?? F???      00759         goto    ROTATE_45
                      00760         
0004A4                00761 DETECTIONS      
                      00762 ;       movff   OP_sec, temp    ; 10's seconds
                      00763 ;       movlw   0x0f
                      00764 ;       andwf   temp
                      00765 ;       movlw   d'1'
                      00766 ;       subwf   temp, 0
                      00767 ;       bz      EXIT_EXE        ; if 150 second, terminate
                      00768         
                      00769         ; reading data from arduino 
                      00770         ; expect:   1 for eska cap
                      00771         ;           2 for eska no cap
                      00772         ;           3 for yop cap
                      00773         ;           4 for yop no cap
                      00774         ;           5 for no bottle, get outta here
0004A4 EC?? F???      00775         call    READ_ARDUINO
                      00776         Delay50N    delayR, 0x28
  0000                    M         local   loop
0004A8 0E28               M         movlw   0x28
0004AA 6E1A               M         movwf   delayR
                          M 
0004AC                    M loop
0004AC EC?? F???          M         call    Delay50ms
0004B0 2E1A               M         decfsz  delayR
0004B2 EF?? F???          M         goto    loop
                      00777         Delay50N    delayR, 0x28
  0000                    M         local   loop
0004B6 0E28               M         movlw   0x28
0004B8 6E1A               M         movwf   delayR
                          M 
0004BA                    M loop
0004BA EC?? F???          M         call    Delay50ms
0004BE 2E1A               M         decfsz  delayR
0004C0 EF?? F???          M         goto    loop
                      00778 
                      00779         ;movlw  d'2'                    ; testing!!!
0004C4 6E2C           00780         movwf   DETECTION_VAL
                      00781         
                      00782         ; first check if there was a bottle detected, if so go to COLLECTIONS_STEP
0004C6 0E05           00783         movlw   d'5'
0004C8 5C2C           00784         subwf   DETECTION_VAL, 0
0004CA E0??           00785         bz      COLLECTIONS_STEP
                      00786         
                      00787         ; okay we have a bottle, first increment total count then see what it is
0004CC 2A31           00788         incf    TOTAL_BOTTLES
                      00789         
                      00790         ; yop no cap
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004CE 0E04           00791         movlw   d'4'
0004D0 5C2C           00792         subwf   DETECTION_VAL, 0
0004D2 E0??           00793         bz      INC_YOPNOCAP
                      00794         
                      00795         ; yop with cap
0004D4 0E03           00796         movlw   d'3'
0004D6 5C2C           00797         subwf   DETECTION_VAL, 0
0004D8 E0??           00798         bz      INC_YOPCAP
                      00799         
                      00800         ; eska no cap
0004DA 0E02           00801         movlw   d'2'
0004DC 5C2C           00802         subwf   DETECTION_VAL, 0
0004DE E0??           00803         bz      INC_ESKANOCAP
                      00804         
                      00805         ; eksa with cap
0004E0 0E01           00806         movlw   d'1'
0004E2 5C2C           00807         subwf   DETECTION_VAL, 0
0004E4 E0??           00808         bz      INC_ESKACAP
                      00809         
                      00810         ; edge case, cant determine bottle so check if done sorting
0004E6 D???           00811         bra     CHECK_DONE
                      00812         
0004E8                00813 INC_YOPNOCAP
0004E8 2A30           00814         incf    YOP_NOCAP
0004EA D???           00815         bra     CHECK_DONE
                      00816         
0004EC                00817 INC_YOPCAP
0004EC 2A2F           00818         incf    YOP
0004EE D???           00819         bra     CHECK_DONE
                      00820         
0004F0                00821 INC_ESKANOCAP
0004F0 2A2E           00822         incf    ESKA_NOCAP
0004F2 D???           00823         bra     CHECK_DONE
                      00824         
0004F4                00825 INC_ESKACAP
0004F4 2A2D           00826         incf    ESKA
0004F6 D???           00827         bra     CHECK_DONE
                      00828         
0004F8                00829 CHECK_DONE
                      00830         ; Challenging:  logic to figure out when the machine is done sorting 
                      00831         ;               if the TOTAL_BOTTLES count is less than 10. 
                      00832         
                      00833         ; OPTIMAL/MAX QUALIFIED TIME: 
                      00834         ; if the execution time exceeds the optimal threshold of 120s, check for 
                      00835         ; qualified run and then stop. if the time exceeds the max threshold of 
                      00836         ; 150s then stop.
0004F8 3818           00837         swapf   OP_sec, 0       ; 100's seconds
0004FA 6E17           00838         movwf   temp
0004FC 0E0F           00839         movlw   0x0f
0004FE 1617           00840         andwf   temp
000500 0E00           00841         movlw   d'0'
000502 6417           00842         cpfsgt  temp
000504 EF?? F???      00843         goto    DETECTIONS      ; if 100 second, continue to check for 150s then 120s.
                      00844 
                      00845         ; MAX
000508 0E02           00846         movlw   d'2'
00050A 6E37           00847         movwf   STOP_CONDITION  ; timeout stop, saved in eeprom as 2
00050C C018 F017      00848         movff   OP_sec, temp    ; 10's seconds
000510 0E0F           00849         movlw   0x0f
000512 1617           00850         andwf   temp
000514 0E05           00851         movlw   d'5'
000516 5C17           00852         subwf   temp, 0
000518 E0??           00853         bz      EXIT_EXE        ; if 150 second, terminate
                      00854         
                      00855         ; NUMBER: 
                      00856         ; if the total bottle count is 10, then we are done (most basic end condition)
00051A 6A37           00857         clrf    STOP_CONDITION  ; denote regular stop, saved in eeprom as 0
00051C 0E0A           00858         movlw   d'10'
00051E 5C31           00859         subwf   TOTAL_BOTTLES, 0
000520 E0??           00860         bz      EXIT_EXE
                      00861         
                      00862         ; here we know that bottles < 10 and 100 < time < 150, so check for qualified run
                      00863         ; qualified run has at least 4 bottles, with 1 of each different kind
000522 0E03           00864         movlw   d'3'
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000524 6431           00865         cpfsgt  TOTAL_BOTTLES
000526 EF?? F???      00866         goto    DETECTIONS
                      00867 
00052A 0E00           00868         movlw   d'0'
00052C 6430           00869         cpfsgt  YOP_NOCAP, 0
00052E EF?? F???      00870         goto    DETECTIONS
                      00871         
000532 0E00           00872         movlw   d'0'
000534 642F           00873         cpfsgt  YOP, 0
000536 EF?? F???      00874         goto    DETECTIONS
                      00875         
00053A 0E00           00876         movlw   d'0'
00053C 642E           00877         cpfsgt  ESKA_NOCAP, 0
00053E EF?? F???      00878         goto    DETECTIONS
                      00879         
000542 0E00           00880         movlw   d'0'
000544 642D           00881         cpfsgt  ESKA, 0
000546 EF?? F???      00882         goto    DETECTIONS
                      00883         
                      00884         ; finally, if we get here then consider the termination optimized.
00054A 0E03           00885         movlw   d'3'
00054C 6E37           00886         movwf   STOP_CONDITION  ; optimized stop, saved in eeprom as 3
00054E EF?? F???      00887         goto    EXIT_EXE
                      00888         
000552                00889 EXIT_EXE
                      00890         ; stop timer and save the execution time to eeprom
000552 9ED5           00891         bcf         T0CON, TMR0ON
000554 EC?? F???      00892         call        SAVE_EXE_TIME
                      00893                 
                      00894         ; Clear inExecution flag to stop '*' interrupts
000558 6A1E           00895         clrf        inExecution
                      00896         
00055A EC?? F???      00897         call        ClrLCD
                      00898         Display     SAVE
  0000                    M         local   loop
00055E 0E??               M         movlw   upper SAVE      ; Move Table<20:16>
000560 6EF8               M         movwf   TBLPTRU
000562 0E??               M         movlw   high SAVE       ; Move Table<15:8>
000564 6EF7               M         movwf   TBLPTRH
000566 0E??               M         movlw   low SAVE        ; Move Table<7:0>
000568 6EF6               M         movwf   TBLPTRL
00056A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00056C 50F5               M         movf    TABLAT, W
00056E                    M loop
00056E EC?? F???          M         call    WR_DATA         ; write to LCD
000572 000B               M         tblrd+*                 ; next row in table
000574 50F5               M         movf    TABLAT, W
000576 E1??               M         bnz     loop
000578 EC?? F???      00899         call        SaveData
00057C EF?? F???      00900         goto        LOG
                      00901 
                      00902 ;*******************************************************************************
                      00903 ; sorting statistics log mode
                      00904 ;*******************************************************************************
                      00905         
000580                00906 LOG
000580 6A38           00907         clrf    inStandby
000582 EC?? F???      00908         call    ClrLCD
                      00909         Display Log1
  0000                    M         local   loop
000586 0E??               M         movlw   upper Log1      ; Move Table<20:16>
000588 6EF8               M         movwf   TBLPTRU
00058A 0E??               M         movlw   high Log1       ; Move Table<15:8>
00058C 6EF7               M         movwf   TBLPTRH
00058E 0E??               M         movlw   low Log1        ; Move Table<7:0>
000590 6EF6               M         movwf   TBLPTRL
000592 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000594 50F5               M         movf    TABLAT, W
000596                    M loop
000596 EC?? F???          M         call    WR_DATA         ; write to LCD
00059A 000B               M         tblrd+*                 ; next row in table
00059C 50F5               M         movf    TABLAT, W
00059E E1??               M         bnz     loop
                      00910 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00911         ; display most recent run data
0005A0 0E0A           00912         movlw   d'10'
0005A2 6E21           00913         movwf   L_EE
0005A4 EC?? F???      00914         call    DisplayExeTime
                      00915 
0005A8 EC?? F???      00916         call    LCD_L2
0005AC 0E0D           00917         movlw   d'13'               ; sorting stats begin at bit 14 in eeprom
0005AE 6E21           00918         movwf   L_EE
0005B0 EC?? F???      00919         call    DispOpSort
                      00920 
0005B4                00921 HOLD_LOG
0005B4 EC?? F???      00922         call    READ_KEY
                      00923         ChangeMode  keyB, LOG_INFO
  0000                    M         local Next, Exit
                          M 
0005B8 0E07               M         movlw   keyB                ; poll for mode
0005BA 6210               M         cpfseq  KEY                 ; check this against key press
0005BC EF?? F???          M         goto    Exit
                          M 
0005C0                    M Next
0005C0 6A89               M         clrf    LATA                ; clear pins before proceeding
0005C2 6A8A               M         clrf    LATB
0005C4 6A8B               M         clrf    LATC
0005C6 6A8C               M         clrf    LATD
0005C8 EF?? F???          M         goto    LOG_INFO
                          M 
0005CC                    M Exit
0005CC 0000               M         nop
                      00924         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0005CE 0E0D               M         movlw   key0                ; poll for mode
0005D0 6210               M         cpfseq  KEY                 ; check this against key press
0005D2 EF?? F???          M         goto    Exit
                          M 
0005D6                    M Next
0005D6 6A89               M         clrf    LATA                ; clear pins before proceeding
0005D8 6A8A               M         clrf    LATB
0005DA 6A8B               M         clrf    LATC
0005DC 6A8C               M         clrf    LATD
0005DE EF?? F???          M         goto    STANDBY
                          M 
0005E2                    M Exit
0005E2 0000               M         nop
0005E4 D???           00925         bra     HOLD_LOG
                      00926 
0005E6                00927 LOG_INFO
0005E6 EC?? F???      00928         call    ClrLCD
0005EA 6A21           00929         clrf    L_EE
0005EC EC?? F???      00930         call    DispOpRTC
                      00931         
0005F0 EC?? F???      00932         call    LCD_L2
                      00933         Display LogInfo2
  0000                    M         local   loop
0005F4 0E??               M         movlw   upper LogInfo2  ; Move Table<20:16>
0005F6 6EF8               M         movwf   TBLPTRU
0005F8 0E??               M         movlw   high LogInfo2   ; Move Table<15:8>
0005FA 6EF7               M         movwf   TBLPTRH
0005FC 0E??               M         movlw   low LogInfo2    ; Move Table<7:0>
0005FE 6EF6               M         movwf   TBLPTRL
000600 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000602 50F5               M         movf    TABLAT, W
000604                    M loop
000604 EC?? F???          M         call    WR_DATA         ; write to LCD
000608 000B               M         tblrd+*                 ; next row in table
00060A 50F5               M         movf    TABLAT, W
00060C E1??               M         bnz     loop
00060E 6A20           00934         clrf    H_EE
000610 6A21           00935         clrf    L_EE
000612                00936 HOLD_LOG_INFO
000612 EC?? F???      00937         call    READ_KEY
                      00938         ChangeMode key0, LOG
  0000                    M         local Next, Exit
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000616 0E0D               M         movlw   key0                ; poll for mode
000618 6210               M         cpfseq  KEY                 ; check this against key press
00061A EF?? F???          M         goto    Exit
                          M 
00061E                    M Next
00061E 6A89               M         clrf    LATA                ; clear pins before proceeding
000620 6A8A               M         clrf    LATB
000622 6A8B               M         clrf    LATC
000624 6A8C               M         clrf    LATD
000626 EF?? F???          M         goto    LOG
                          M 
00062A                    M Exit
00062A 0000               M         nop
00062C D???           00939         bra     HOLD_LOG
                      00940         
                      00941 ;*******************************************************************************
                      00942 ; permanent logs
                      00943 ;*******************************************************************************
                      00944 
00062E                00945 PERM_LOG
00062E 6A38           00946         clrf    inStandby
000630 EC?? F???      00947         call    ClrLCD
                      00948         Display PermLog1
  0000                    M         local   loop
000634 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000636 6EF8               M         movwf   TBLPTRU
000638 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
00063A 6EF7               M         movwf   TBLPTRH
00063C 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00063E 6EF6               M         movwf   TBLPTRL
000640 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000642 50F5               M         movf    TABLAT, W
000644                    M loop
000644 EC?? F???          M         call    WR_DATA         ; write to LCD
000648 000B               M         tblrd+*                 ; next row in table
00064A 50F5               M         movf    TABLAT, W
00064C E1??               M         bnz     loop
00064E EC?? F???      00949         call    LCD_L2
                      00950         Display PermLog2
  0000                    M         local   loop
000652 0E??               M         movlw   upper PermLog2  ; Move Table<20:16>
000654 6EF8               M         movwf   TBLPTRU
000656 0E??               M         movlw   high PermLog2   ; Move Table<15:8>
000658 6EF7               M         movwf   TBLPTRH
00065A 0E??               M         movlw   low PermLog2    ; Move Table<7:0>
00065C 6EF6               M         movwf   TBLPTRL
00065E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000660 50F5               M         movf    TABLAT, W
000662                    M loop
000662 EC?? F???          M         call    WR_DATA         ; write to LCD
000666 000B               M         tblrd+*                 ; next row in table
000668 50F5               M         movf    TABLAT, W
00066A E1??               M         bnz     loop
                      00951         
00066C                00952 HOLD_PERM_LOG
00066C EC?? F???      00953         call    READ_KEY
                      00954         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
000670 0E0D               M         movlw   key0                ; poll for mode
000672 6210               M         cpfseq  KEY                 ; check this against key press
000674 EF?? F???          M         goto    Exit
                          M 
000678                    M Next
000678 6A89               M         clrf    LATA                ; clear pins before proceeding
00067A 6A8A               M         clrf    LATB
00067C 6A8B               M         clrf    LATC
00067E 6A8C               M         clrf    LATD
000680 EF?? F???          M         goto    STANDBY
                          M 
000684                    M Exit
000684 0000               M         nop
                      00955         ChangeMode  key1, PLOG
  0000                    M         local Next, Exit
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000686 0E00               M         movlw   key1                ; poll for mode
000688 6210               M         cpfseq  KEY                 ; check this against key press
00068A EF?? F???          M         goto    Exit
                          M 
00068E                    M Next
00068E 6A89               M         clrf    LATA                ; clear pins before proceeding
000690 6A8A               M         clrf    LATB
000692 6A8B               M         clrf    LATC
000694 6A8C               M         clrf    LATD
000696 EF?? F???          M         goto    PLOG
                          M 
00069A                    M Exit
00069A 0000               M         nop
                      00956         ChangeMode  key2, PLOG
  0000                    M         local Next, Exit
                          M 
00069C 0E01               M         movlw   key2                ; poll for mode
00069E 6210               M         cpfseq  KEY                 ; check this against key press
0006A0 EF?? F???          M         goto    Exit
                          M 
0006A4                    M Next
0006A4 6A89               M         clrf    LATA                ; clear pins before proceeding
0006A6 6A8A               M         clrf    LATB
0006A8 6A8B               M         clrf    LATC
0006AA 6A8C               M         clrf    LATD
0006AC EF?? F???          M         goto    PLOG
                          M 
0006B0                    M Exit
0006B0 0000               M         nop
                      00957         ChangeMode  key3, PLOG
  0000                    M         local Next, Exit
                          M 
0006B2 0E02               M         movlw   key3                ; poll for mode
0006B4 6210               M         cpfseq  KEY                 ; check this against key press
0006B6 EF?? F???          M         goto    Exit
                          M 
0006BA                    M Next
0006BA 6A89               M         clrf    LATA                ; clear pins before proceeding
0006BC 6A8A               M         clrf    LATB
0006BE 6A8B               M         clrf    LATC
0006C0 6A8C               M         clrf    LATD
0006C2 EF?? F???          M         goto    PLOG
                          M 
0006C6                    M Exit
0006C6 0000               M         nop
                      00958         ChangeMode  key4, PLOG
  0000                    M         local Next, Exit
                          M 
0006C8 0E04               M         movlw   key4                ; poll for mode
0006CA 6210               M         cpfseq  KEY                 ; check this against key press
0006CC EF?? F???          M         goto    Exit
                          M 
0006D0                    M Next
0006D0 6A89               M         clrf    LATA                ; clear pins before proceeding
0006D2 6A8A               M         clrf    LATB
0006D4 6A8B               M         clrf    LATC
0006D6 6A8C               M         clrf    LATD
0006D8 EF?? F???          M         goto    PLOG
                          M 
0006DC                    M Exit
0006DC 0000               M         nop
                      00959         ChangeMode  key5, PLOG
  0000                    M         local Next, Exit
                          M 
0006DE 0E05               M         movlw   key5                ; poll for mode
0006E0 6210               M         cpfseq  KEY                 ; check this against key press
0006E2 EF?? F???          M         goto    Exit
                          M 
0006E6                    M Next
0006E6 6A89               M         clrf    LATA                ; clear pins before proceeding
0006E8 6A8A               M         clrf    LATB
0006EA 6A8B               M         clrf    LATC
0006EC 6A8C               M         clrf    LATD
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006EE EF?? F???          M         goto    PLOG
                          M 
0006F2                    M Exit
0006F2 0000               M         nop
                      00960         ChangeMode  key6, PLOG
  0000                    M         local Next, Exit
                          M 
0006F4 0E06               M         movlw   key6                ; poll for mode
0006F6 6210               M         cpfseq  KEY                 ; check this against key press
0006F8 EF?? F???          M         goto    Exit
                          M 
0006FC                    M Next
0006FC 6A89               M         clrf    LATA                ; clear pins before proceeding
0006FE 6A8A               M         clrf    LATB
000700 6A8B               M         clrf    LATC
000702 6A8C               M         clrf    LATD
000704 EF?? F???          M         goto    PLOG
                          M 
000708                    M Exit
000708 0000               M         nop
                      00961         ChangeMode  key7, PLOG
  0000                    M         local Next, Exit
                          M 
00070A 0E08               M         movlw   key7                ; poll for mode
00070C 6210               M         cpfseq  KEY                 ; check this against key press
00070E EF?? F???          M         goto    Exit
                          M 
000712                    M Next
000712 6A89               M         clrf    LATA                ; clear pins before proceeding
000714 6A8A               M         clrf    LATB
000716 6A8B               M         clrf    LATC
000718 6A8C               M         clrf    LATD
00071A EF?? F???          M         goto    PLOG
                          M 
00071E                    M Exit
00071E 0000               M         nop
                      00962         ChangeMode  key8, PLOG
  0000                    M         local Next, Exit
                          M 
000720 0E09               M         movlw   key8                ; poll for mode
000722 6210               M         cpfseq  KEY                 ; check this against key press
000724 EF?? F???          M         goto    Exit
                          M 
000728                    M Next
000728 6A89               M         clrf    LATA                ; clear pins before proceeding
00072A 6A8A               M         clrf    LATB
00072C 6A8B               M         clrf    LATC
00072E 6A8C               M         clrf    LATD
000730 EF?? F???          M         goto    PLOG
                          M 
000734                    M Exit
000734 0000               M         nop
                      00963         ChangeMode  key9, PLOG
  0000                    M         local Next, Exit
                          M 
000736 0E0A               M         movlw   key9                ; poll for mode
000738 6210               M         cpfseq  KEY                 ; check this against key press
00073A EF?? F???          M         goto    Exit
                          M 
00073E                    M Next
00073E 6A89               M         clrf    LATA                ; clear pins before proceeding
000740 6A8A               M         clrf    LATB
000742 6A8B               M         clrf    LATC
000744 6A8C               M         clrf    LATD
000746 EF?? F???          M         goto    PLOG
                          M 
00074A                    M Exit
00074A 0000               M         nop
00074C D???           00964         bra HOLD_PERM_LOG
                      00965         
00074E                00966 PLOG
00074E EC?? F???      00967         call    ClrLCD
                      00968         Display PermLog1
  0000                    M         local   loop
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000752 0E??               M         movlw   upper PermLog1  ; Move Table<20:16>
000754 6EF8               M         movwf   TBLPTRU
000756 0E??               M         movlw   high PermLog1   ; Move Table<15:8>
000758 6EF7               M         movwf   TBLPTRH
00075A 0E??               M         movlw   low PermLog1    ; Move Table<7:0>
00075C 6EF6               M         movwf   TBLPTRL
00075E 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000760 50F5               M         movf    TABLAT, W
000762                    M loop
000762 EC?? F???          M         call    WR_DATA         ; write to LCD
000766 000B               M         tblrd+*                 ; next row in table
000768 50F5               M         movf    TABLAT, W
00076A E1??               M         bnz     loop
                      00969         
                      00970         ; find the key press value
00076C C010 FFE8      00971         movff   KEY, WREG
000770 2AE8           00972         incf    WREG        ; W = KEY+1
000772 6E17           00973         movwf   temp
                      00974         
000774 42E8           00975         rrncf   WREG        ; division by 4
000776 9EE8           00976         bcf     WREG, 7     ; clear last bit, overflow from rotate
000778 42E8           00977         rrncf   WREG        
00077A 9EE8           00978         bcf     WREG, 7
00077C 5E17           00979         subwf   temp        ; temp = (KEY+1) - (KEY+1)/4
00077E C017 FFE8      00980         movff   temp, WREG
000782 C017 F011      00981         movff   temp, temp_KEY
000786 0D15           00982         mullw   d'21'       ; indexed as mutliples of 21
                      00983 
000788                00984 displayNum
000788 C011 FFE8      00985         movff   temp_KEY, WREG
00078C 0F30           00986         addlw   0x30
00078E EC?? F???      00987         call    WR_DATA
000792 0E3A           00988         movlw   ":"
000794 EC?? F???      00989         call    WR_DATA
000798 0E20           00990         movlw   " "
00079A EC?? F???      00991         call    WR_DATA
                      00992         
00079E CFF3 F021      00993         movff   PRODL, L_EE
0007A2 0E00           00994         movlw   d'0'
0007A4 2621           00995         addwf   L_EE
                      00996         READEE  OP_sec, H_EE, L_EE
0007A6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007AA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007AE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007B0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007B2 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007B4 CFA8 F018          M         movff   EEDATA, OP_sec      ; put data into file
0007B8 2A21           00997         incf    L_EE
                      00998         READEE  OP_INT, H_EE, L_EE
0007BA C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0007BE C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0007C2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0007C4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0007C6 80A6               M         bsf     EECON1, RD          ; read EEPROM
0007C8 CFA8 F019          M         movff   EEDATA, OP_INT      ; put data into file
0007CC 2A21           00999         incf    L_EE
0007CE EC?? F???      01000         call    DisplayExeTime
0007D2 CFF3 F021      01001         movff   PRODL, L_EE
                      01002         
                      01003         ; reset eeprom to beginning
0007D6 EC?? F???      01004         call    LCD_L2
0007DA CFF3 F021      01005         movff   PRODL, L_EE
0007DE EC?? F???      01006         call    DispOpRTC
                      01007         
0007E2                01008 HOLD_PLOG
0007E2 EC?? F???      01009         call    READ_KEY
                      01010         ChangeMode  keyA, PLOG_DETAILS
  0000                    M         local Next, Exit
                          M 
0007E6 0E03               M         movlw   keyA                ; poll for mode
0007E8 6210               M         cpfseq  KEY                 ; check this against key press
0007EA EF?? F???          M         goto    Exit
                          M 
0007EE                    M Next
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007EE 6A89               M         clrf    LATA                ; clear pins before proceeding
0007F0 6A8A               M         clrf    LATB
0007F2 6A8B               M         clrf    LATC
0007F4 6A8C               M         clrf    LATD
0007F6 EF?? F???          M         goto    PLOG_DETAILS
                          M 
0007FA                    M Exit
0007FA 0000               M         nop
                      01011         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
0007FC 0E0D               M         movlw   key0                ; poll for mode
0007FE 6210               M         cpfseq  KEY                 ; check this against key press
000800 EF?? F???          M         goto    Exit
                          M 
000804                    M Next
000804 6A89               M         clrf    LATA                ; clear pins before proceeding
000806 6A8A               M         clrf    LATB
000808 6A8B               M         clrf    LATC
00080A 6A8C               M         clrf    LATD
00080C EF?? F???          M         goto    PERM_LOG
                          M 
000810                    M Exit
000810 0000               M         nop
000812 D???           01012         bra HOLD_PLOG
                      01013         
000814                01014 PLOG_DETAILS
000814 EC?? F???      01015         call    ClrLCD
                      01016         
                      01017         Display Log1
  0000                    M         local   loop
000818 0E??               M         movlw   upper Log1      ; Move Table<20:16>
00081A 6EF8               M         movwf   TBLPTRU
00081C 0E??               M         movlw   high Log1       ; Move Table<15:8>
00081E 6EF7               M         movwf   TBLPTRH
000820 0E??               M         movlw   low Log1        ; Move Table<7:0>
000822 6EF6               M         movwf   TBLPTRL
000824 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000826 50F5               M         movf    TABLAT, W
000828                    M loop
000828 EC?? F???          M         call    WR_DATA         ; write to LCD
00082C 000B               M         tblrd+*                 ; next row in table
00082E 50F5               M         movf    TABLAT, W
000830 E1??               M         bnz     loop
000832 EC?? F???      01018         call    DisplayExeTime
                      01019         
000836 EC?? F???      01020         call    LCD_L2
00083A EC?? F???      01021         call    DispOpSort
                      01022         
00083E                01023 HOLD_PLOG_DETAILS
00083E EC?? F???      01024         call    READ_KEY
                      01025         ChangeMode  key0, PERM_LOG      ; back to perm log menu
  0000                    M         local Next, Exit
                          M 
000842 0E0D               M         movlw   key0                ; poll for mode
000844 6210               M         cpfseq  KEY                 ; check this against key press
000846 EF?? F???          M         goto    Exit
                          M 
00084A                    M Next
00084A 6A89               M         clrf    LATA                ; clear pins before proceeding
00084C 6A8A               M         clrf    LATB
00084E 6A8B               M         clrf    LATC
000850 6A8C               M         clrf    LATD
000852 EF?? F???          M         goto    PERM_LOG
                          M 
000856                    M Exit
000856 0000               M         nop
000858 D???           01026         bra HOLD_PLOG_DETAILS
                      01027         
                      01028 ;*******************************************************************************
                      01029 ; pc interface
                      01030 ;*******************************************************************************
                      01031 
00085A                01032 PC_MODE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00085A 6A38           01033         clrf    inStandby
00085C EC?? F???      01034         call    ClrLCD
                      01035         Display PC1
  0000                    M         local   loop
000860 0E??               M         movlw   upper PC1       ; Move Table<20:16>
000862 6EF8               M         movwf   TBLPTRU
000864 0E??               M         movlw   high PC1        ; Move Table<15:8>
000866 6EF7               M         movwf   TBLPTRH
000868 0E??               M         movlw   low PC1         ; Move Table<7:0>
00086A 6EF6               M         movwf   TBLPTRL
00086C 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00086E 50F5               M         movf    TABLAT, W
000870                    M loop
000870 EC?? F???          M         call    WR_DATA         ; write to LCD
000874 000B               M         tblrd+*                 ; next row in table
000876 50F5               M         movf    TABLAT, W
000878 E1??               M         bnz     loop
00087A EC?? F???      01036         call    LCD_L2
                      01037         Display PC2
  0000                    M         local   loop
00087E 0E??               M         movlw   upper PC2       ; Move Table<20:16>
000880 6EF8               M         movwf   TBLPTRU
000882 0E??               M         movlw   high PC2        ; Move Table<15:8>
000884 6EF7               M         movwf   TBLPTRH
000886 0E??               M         movlw   low PC2         ; Move Table<7:0>
000888 6EF6               M         movwf   TBLPTRL
00088A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00088C 50F5               M         movf    TABLAT, W
00088E                    M loop
00088E EC?? F???          M         call    WR_DATA         ; write to LCD
000892 000B               M         tblrd+*                 ; next row in table
000894 50F5               M         movf    TABLAT, W
000896 E1??               M         bnz     loop
000898 CFF9 F029      01038         movff   PCL, PC_PCL
00089C CFFA F02A      01039         movff   PCLATH, PC_PCLATH
0008A0 CFFB F02B      01040         movff   PCLATU, PC_PCLATU
                      01041         
0008A4                01042 HOLD_PC
0008A4 EC?? F???      01043         call    READ_KEY
                      01044         ChangeMode  key0, STANDBY
  0000                    M         local Next, Exit
                          M 
0008A8 0E0D               M         movlw   key0                ; poll for mode
0008AA 6210               M         cpfseq  KEY                 ; check this against key press
0008AC EF?? F???          M         goto    Exit
                          M 
0008B0                    M Next
0008B0 6A89               M         clrf    LATA                ; clear pins before proceeding
0008B2 6A8A               M         clrf    LATB
0008B4 6A8B               M         clrf    LATC
0008B6 6A8C               M         clrf    LATD
0008B8 EF?? F???          M         goto    STANDBY
                          M 
0008BC                    M Exit
0008BC 0000               M         nop
                      01045         ChangeMode  keyH, PC_TRANSFER
  0000                    M         local Next, Exit
                          M 
0008BE 0E0E               M         movlw   keyH                ; poll for mode
0008C0 6210               M         cpfseq  KEY                 ; check this against key press
0008C2 EF?? F???          M         goto    Exit
                          M 
0008C6                    M Next
0008C6 6A89               M         clrf    LATA                ; clear pins before proceeding
0008C8 6A8A               M         clrf    LATB
0008CA 6A8B               M         clrf    LATC
0008CC 6A8C               M         clrf    LATD
0008CE EF?? F???          M         goto    PC_TRANSFER
                          M 
0008D2                    M Exit
0008D2 0000               M         nop
0008D4 D???           01046         bra     HOLD_PC
                      01047 
0008D6                01048 PC_TRANSFER
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008D6 6828           01049         setf    transferring
0008D8 EC?? F???      01050         call    ClrLCD
                      01051         Display PCTransfer
  0000                    M         local   loop
0008DC 0E??               M         movlw   upper PCTransfer ; Move Table<20:16>
0008DE 6EF8               M         movwf   TBLPTRU
0008E0 0E??               M         movlw   high PCTransfer ; Move Table<15:8>
0008E2 6EF7               M         movwf   TBLPTRH
0008E4 0E??               M         movlw   low PCTransfer  ; Move Table<7:0>
0008E6 6EF6               M         movwf   TBLPTRL
0008E8 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
0008EA 50F5               M         movf    TABLAT, W
0008EC                    M loop
0008EC EC?? F???          M         call    WR_DATA         ; write to LCD
0008F0 000B               M         tblrd+*                 ; next row in table
0008F2 50F5               M         movf    TABLAT, W
0008F4 E1??               M         bnz     loop
0008F6 EC?? F???      01052         call    DataUSART
0008FA 6A28           01053         clrf    transferring
0008FC EF?? F???      01054         goto    STANDBY
                      01055         
                      01056 ;*******************************************************************************
                      01057 ; subroutines
                      01058 ;*******************************************************************************
                      01059 
000900                01060 SaveData
000900 C02D FFE8      01061         movff       ESKA, WREG
000904 0F30           01062         addlw       0x30
                      01063         WriteEE     WREG, H_EE, L_EE
000906 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00090A C021 FFA9          M         movff   L_EE, EEADR         ; Low address
00090E CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000912 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000914 D???               M         bra     $-2
                          M 
000916 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000918 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00091A 84A6               M         bsf     EECON1, WREN        ; enable write
00091C 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
00091E 98A1               M         bcf     PIR2, EEIF
                          M 
000920 0E55               M         movlw   0x55
000922 6EA7               M         movwf   EECON2              ; write 55h
000924 0EAA               M         movlw   0xaa
000926 6EA7               M         movwf   EECON2              ; write 0xaa
000928 82A6               M         bsf     EECON1, WR          ; begin write
00092A B2A6               M         btfsc   EECON1, WR
00092C D???               M         bra     $-2
                          M 
00092E 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000930 94A6               M         bcf     EECON1, WREN        ; disable writes
000932 2A21           01064         incf        L_EE
                      01065         
000934 C02E FFE8      01066         movff       ESKA_NOCAP, WREG
000938 0F30           01067         addlw       0x30
                      01068         WriteEE     WREG, H_EE, L_EE
00093A C020 FFAA          M         movff   H_EE, EEADRH        ; High address
00093E C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000942 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000946 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000948 D???               M         bra     $-2
                          M 
00094A 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
00094C 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
00094E 84A6               M         bsf     EECON1, WREN        ; enable write
000950 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000952 98A1               M         bcf     PIR2, EEIF
                          M 
000954 0E55               M         movlw   0x55
000956 6EA7               M         movwf   EECON2              ; write 55h
000958 0EAA               M         movlw   0xaa
00095A 6EA7               M         movwf   EECON2              ; write 0xaa
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00095C 82A6               M         bsf     EECON1, WR          ; begin write
00095E B2A6               M         btfsc   EECON1, WR
000960 D???               M         bra     $-2
                          M 
000962 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000964 94A6               M         bcf     EECON1, WREN        ; disable writes
000966 2A21           01069         incf        L_EE
                      01070         
000968 C02F FFE8      01071         movff       YOP, WREG
00096C 0F30           01072         addlw       0x30
                      01073         WriteEE     WREG, H_EE, L_EE
00096E C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000972 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000976 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
00097A B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
00097C D???               M         bra     $-2
                          M 
00097E 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000980 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000982 84A6               M         bsf     EECON1, WREN        ; enable write
000984 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000986 98A1               M         bcf     PIR2, EEIF
                          M 
000988 0E55               M         movlw   0x55
00098A 6EA7               M         movwf   EECON2              ; write 55h
00098C 0EAA               M         movlw   0xaa
00098E 6EA7               M         movwf   EECON2              ; write 0xaa
000990 82A6               M         bsf     EECON1, WR          ; begin write
000992 B2A6               M         btfsc   EECON1, WR
000994 D???               M         bra     $-2
                          M 
000996 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000998 94A6               M         bcf     EECON1, WREN        ; disable writes
00099A 2A21           01074         incf        L_EE
                      01075         
00099C C030 FFE8      01076         movff       YOP_NOCAP, WREG
0009A0 0F30           01077         addlw       0x30
                      01078         WriteEE     WREG, H_EE, L_EE
0009A2 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009A6 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009AA CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009AE B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009B0 D???               M         bra     $-2
                          M 
0009B2 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009B4 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009B6 84A6               M         bsf     EECON1, WREN        ; enable write
0009B8 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009BA 98A1               M         bcf     PIR2, EEIF
                          M 
0009BC 0E55               M         movlw   0x55
0009BE 6EA7               M         movwf   EECON2              ; write 55h
0009C0 0EAA               M         movlw   0xaa
0009C2 6EA7               M         movwf   EECON2              ; write 0xaa
0009C4 82A6               M         bsf     EECON1, WR          ; begin write
0009C6 B2A6               M         btfsc   EECON1, WR
0009C8 D???               M         bra     $-2
                          M 
0009CA 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
0009CC 94A6               M         bcf     EECON1, WREN        ; disable writes
0009CE 2A21           01079         incf        L_EE
                      01080         
0009D0 C037 FFE8      01081         movff       STOP_CONDITION, WREG
0009D4 0F30           01082         addlw       0x30
                      01083         WriteEE     WREG, H_EE, L_EE
0009D6 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
0009DA C021 FFA9          M         movff   L_EE, EEADR         ; Low address
0009DE CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
0009E2 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
0009E4 D???               M         bra     $-2
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009E6 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
0009E8 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
0009EA 84A6               M         bsf     EECON1, WREN        ; enable write
0009EC 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
0009EE 98A1               M         bcf     PIR2, EEIF
                          M 
0009F0 0E55               M         movlw   0x55
0009F2 6EA7               M         movwf   EECON2              ; write 55h
0009F4 0EAA               M         movlw   0xaa
0009F6 6EA7               M         movwf   EECON2              ; write 0xaa
0009F8 82A6               M         bsf     EECON1, WR          ; begin write
0009FA B2A6               M         btfsc   EECON1, WR
0009FC D???               M         bra     $-2
                          M 
0009FE 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A00 94A6               M         bcf     EECON1, WREN        ; disable writes
000A02 2A21           01084         incf        L_EE
                      01085         
000A04 0E00           01086         movlw       d'0'
000A06 6E20           01087         movwf       H_EE
000A08 0EA8           01088         movlw       d'168'              ; take d'168' as last
000A0A 6E21           01089         movwf       L_EE
000A0C 0E00           01090         movlw       d'0'
000A0E 6E23           01091         movwf       tempH_EE
000A10 0EDC           01092         movlw       d'220'              ; temp for low constant
000A12 6E24           01093         movwf       tempL_EE
                      01094         
000A14 6A16           01095         clrf        counter2
000A16 6A15           01096         clrf        counter
                      01097         
000A18                01098 ShiftLoop
000A18 2A15           01099         incf            counter
                      01100         READEE          REG_EE, H_EE, L_EE
000A1A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000A1E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000A22 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000A24 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000A26 80A6               M         bsf     EECON1, RD          ; read EEPROM
000A28 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000A2C 0E15           01101         movlw           d'21'
000A2E 2621           01102         addwf           L_EE
                      01103         WriteEE         REG_EE, H_EE, L_EE
000A30 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000A34 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000A38 C022 FFA8          M         movff   REG_EE, EEDATA      ; set word
                          M 
000A3C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000A3E D???               M         bra     $-2
                          M 
000A40 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000A42 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000A44 84A6               M         bsf     EECON1, WREN        ; enable write
000A46 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000A48 98A1               M         bcf     PIR2, EEIF
                          M 
000A4A 0E55               M         movlw   0x55
000A4C 6EA7               M         movwf   EECON2              ; write 55h
000A4E 0EAA               M         movlw   0xaa
000A50 6EA7               M         movwf   EECON2              ; write 0xaa
000A52 82A6               M         bsf     EECON1, WR          ; begin write
000A54 B2A6               M         btfsc   EECON1, WR
000A56 D???               M         bra     $-2
                          M 
000A58 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000A5A 94A6               M         bcf     EECON1, WREN        ; disable writes
000A5C 0E14           01104         movlw           d'20'
000A5E 5E21           01105         subwf           L_EE
000A60 0E15           01106         movlw           d'21'
000A62 6215           01107         cpfseq          counter
000A64 EF?? F???      01108         goto            ShiftLoop
                      01109         
                      01110         ; Set EEPROM address to the previous 21 byte block, and reset temp address
000A68 0E2A           01111         movlw           d'42'
000A6A 5E21           01112         subwf           L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A6C 0EDC           01113         movlw           d'220'
000A6E 6E24           01114         movwf           tempL_EE
000A70 6A15           01115         clrf            counter
000A72 2A16           01116         incf            counter2
000A74 0E09           01117         movlw           d'9'
000A76 6216           01118         cpfseq          counter2        ; Skip if 9 shifts were made
000A78 EF?? F???      01119         goto            ShiftLoop
                      01120 
000A7C 0012           01121         return
                      01122         
000A7E                01123 RTC_INIT
                      01124         ; set sda and scl to high
000A7E 9882           01125         bcf     PORTC, 4
000A80 9682           01126         bcf     PORTC, 3
000A82 8894           01127         bsf     TRISC, 4
000A84 8694           01128         bsf     TRISC, 3
                      01129         
000A86 EC?? F???      01130         call    INIT_RTC
                      01131         
                      01132         ;call   SET_TIME
Warning[203]: Found opcode in column 1. (return)
000A8A 0012           01133 return
                      01134         
000A8C                01135 SAVE_TIME
                      01136         rtc_read    0x02        ; hours     ; need to call this twice idk y
000A8C 0E02               M     movlw   0x02
000A8E 6E??               M     movwf   regaddress
000A90 EC?? F???          M     call    read_rtc
000A94 C??? FFE8          M     movff   datachar, WREG
000A98 EC?? F???          M     call    rtc_convert
                      01137         rtc_read    0x02        ; hours
000A9C 0E02               M     movlw   0x02
000A9E 6E??               M     movwf   regaddress
000AA0 EC?? F???          M     call    read_rtc
000AA4 C??? FFE8          M     movff   datachar, WREG
000AA8 EC?? F???          M     call    rtc_convert
000AAC EC?? F???      01138         call    WriteEE_RTC
                      01139         rtc_read    0x01        ; minutes
000AB0 0E01               M     movlw   0x01
000AB2 6E??               M     movwf   regaddress
000AB4 EC?? F???          M     call    read_rtc
000AB8 C??? FFE8          M     movff   datachar, WREG
000ABC EC?? F???          M     call    rtc_convert
000AC0 EC?? F???      01140         call    WriteEE_RTC
                      01141         rtc_read    0x06        ; years
000AC4 0E06               M     movlw   0x06
000AC6 6E??               M     movwf   regaddress
000AC8 EC?? F???          M     call    read_rtc
000ACC C??? FFE8          M     movff   datachar, WREG
000AD0 EC?? F???          M     call    rtc_convert
000AD4 EC?? F???      01142         call    WriteEE_RTC
                      01143         rtc_read    0x05        ; months
000AD8 0E05               M     movlw   0x05
000ADA 6E??               M     movwf   regaddress
000ADC EC?? F???          M     call    read_rtc
000AE0 C??? FFE8          M     movff   datachar, WREG
000AE4 EC?? F???          M     call    rtc_convert
000AE8 EC?? F???      01144         call    WriteEE_RTC
                      01145         rtc_read    0x04        ; days
000AEC 0E04               M     movlw   0x04
000AEE 6E??               M     movwf   regaddress
000AF0 EC?? F???          M     call    read_rtc
000AF4 C??? FFE8          M     movff   datachar, WREG
000AF8 EC?? F???          M     call    rtc_convert
000AFC EC?? F???      01146         call    WriteEE_RTC
Warning[203]: Found opcode in column 1. (return)
000B00 0012           01147 return
                      01148         
000B02                01149 SAVE_EXE_TIME
                      01150         
Warning[202]: Argument out of range.  Least significant bits used.
000B02 3818           01151         swapf   OP_sec, WREG    ; 100's seconds
000B04 6E17           01152         movwf   temp
000B06 0E0F           01153         movlw   0x0f
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B08 1617           01154         andwf   temp
000B0A C017 FFE8      01155         movff   temp, WREG
000B0E 0F30           01156         addlw   0x30    
                      01157         WriteEE WREG, H_EE, L_EE
000B10 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B14 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B18 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B1C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B1E D???               M         bra     $-2
                          M 
000B20 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B22 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B24 84A6               M         bsf     EECON1, WREN        ; enable write
000B26 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B28 98A1               M         bcf     PIR2, EEIF
                          M 
000B2A 0E55               M         movlw   0x55
000B2C 6EA7               M         movwf   EECON2              ; write 55h
000B2E 0EAA               M         movlw   0xaa
000B30 6EA7               M         movwf   EECON2              ; write 0xaa
000B32 82A6               M         bsf     EECON1, WR          ; begin write
000B34 B2A6               M         btfsc   EECON1, WR
000B36 D???               M         bra     $-2
                          M 
000B38 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B3A 94A6               M         bcf     EECON1, WREN        ; disable writes
000B3C 2A21           01158         incf    L_EE
                      01159         
000B3E C018 F017      01160         movff   OP_sec, temp    ; 10's seconds
000B42 0E0F           01161         movlw   0x0f
000B44 1617           01162         andwf   temp            ; Temp = lower nibble of Op_sec
000B46 C017 FFE8      01163         movff   temp, WREG      ; W = Temp
000B4A 0F30           01164         addlw   0x30            ; Convert to ASCII
                      01165         WriteEE WREG, H_EE, L_EE
000B4C C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B50 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B54 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B58 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B5A D???               M         bra     $-2
                          M 
000B5C 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B5E 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B60 84A6               M         bsf     EECON1, WREN        ; enable write
000B62 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000B64 98A1               M         bcf     PIR2, EEIF
                          M 
000B66 0E55               M         movlw   0x55
000B68 6EA7               M         movwf   EECON2              ; write 55h
000B6A 0EAA               M         movlw   0xaa
000B6C 6EA7               M         movwf   EECON2              ; write 0xaa
000B6E 82A6               M         bsf     EECON1, WR          ; begin write
000B70 B2A6               M         btfsc   EECON1, WR
000B72 D???               M         bra     $-2
                          M 
000B74 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000B76 94A6               M         bcf     EECON1, WREN        ; disable writes
000B78 2A21           01166         incf    L_EE
                      01167         
Warning[202]: Argument out of range.  Least significant bits used.
000B7A 3819           01168         swapf   OP_INT, WREG    ;1's seconds
000B7C 6E17           01169         movwf   temp
000B7E 0E0F           01170         movlw   0x0f
000B80 1617           01171         andwf   temp
000B82 C017 FFE8      01172         movff   temp, WREG
000B86 0F30           01173         addlw   0x30
                      01174         WriteEE WREG, H_EE, L_EE
000B88 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000B8C C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000B90 CFE8 FFA8          M         movff   WREG, EEDATA        ; set word
                          M 
000B94 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000B96 D???               M         bra     $-2
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000B98 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000B9A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000B9C 84A6               M         bsf     EECON1, WREN        ; enable write
000B9E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000BA0 98A1               M         bcf     PIR2, EEIF
                          M 
000BA2 0E55               M         movlw   0x55
000BA4 6EA7               M         movwf   EECON2              ; write 55h
000BA6 0EAA               M         movlw   0xaa
000BA8 6EA7               M         movwf   EECON2              ; write 0xaa
000BAA 82A6               M         bsf     EECON1, WR          ; begin write
000BAC B2A6               M         btfsc   EECON1, WR
000BAE D???               M         bra     $-2
                          M 
000BB0 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000BB2 94A6               M         bcf     EECON1, WREN        ; disable writes
000BB4 2A21           01175         incf    L_EE
Warning[203]: Found opcode in column 1. (return)
000BB6 0012           01176 return
                      01177         
                      01178                 
000BB8                01179 DISPLAY_RTC
                      01180         ; display data in this format hh/minmin/yy yy/mm/dd
                      01181         
                      01182         rtc_read    0x02            ; 0x02 from DS1307 - hours
000BB8 0E02               M     movlw   0x02
000BBA 6E??               M     movwf   regaddress
000BBC EC?? F???          M     call    read_rtc
000BC0 C??? FFE8          M     movff   datachar, WREG
000BC4 EC?? F???          M     call    rtc_convert
000BC8 C??? FFE8      01183         movff   tens_digit,WREG
000BCC EC?? F???      01184         call    WR_DATA
000BD0 C??? FFE8      01185         movff   ones_digit,WREG
000BD4 EC?? F???      01186         call    WR_DATA
000BD8 0E68           01187         movlw   "h"
000BDA EC?? F???      01188         call    WR_DATA
                      01189         
                      01190         rtc_read    0x01            ; 0x01 from DS1307 - minutes
000BDE 0E01               M     movlw   0x01
000BE0 6E??               M     movwf   regaddress
000BE2 EC?? F???          M     call    read_rtc
000BE6 C??? FFE8          M     movff   datachar, WREG
000BEA EC?? F???          M     call    rtc_convert
000BEE C??? FFE8      01191         movff   tens_digit,WREG
000BF2 EC?? F???      01192         call    WR_DATA
000BF6 C??? FFE8      01193         movff   ones_digit,WREG
000BFA EC?? F???      01194         call    WR_DATA
                      01195         
                      01196         rtc_read    0x00            ; 0x00 from DS1307 - seconds
000BFE 0E00               M     movlw   0x00
000C00 6E??               M     movwf   regaddress
000C02 EC?? F???          M     call    read_rtc
000C06 C??? FFE8          M     movff   datachar, WREG
000C0A EC?? F???          M     call    rtc_convert
000C0E C??? FFE8      01197         movff   tens_digit,WREG
000C12 EC?? F???      01198         call    WR_DATA
000C16 C??? FFE8      01199         movff   ones_digit,WREG
000C1A EC?? F???      01200         call    WR_DATA
000C1E 0E20           01201         movlw   " "
000C20 EC?? F???      01202         call    WR_DATA
                      01203         
                      01204         rtc_read    0x06            ; 0x06 from DS1307 - years
000C24 0E06               M     movlw   0x06
000C26 6E??               M     movwf   regaddress
000C28 EC?? F???          M     call    read_rtc
000C2C C??? FFE8          M     movff   datachar, WREG
000C30 EC?? F???          M     call    rtc_convert
000C34 C??? FFE8      01205         movff   tens_digit,WREG
000C38 EC?? F???      01206         call    WR_DATA
000C3C C??? FFE8      01207         movff   ones_digit,WREG
000C40 EC?? F???      01208         call    WR_DATA
000C44 0E2F           01209         movlw   "/"
000C46 EC?? F???      01210         call    WR_DATA
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01211         
                      01212         rtc_read    0x05            ; 0x05 from DS1307 - months
000C4A 0E05               M     movlw   0x05
000C4C 6E??               M     movwf   regaddress
000C4E EC?? F???          M     call    read_rtc
000C52 C??? FFE8          M     movff   datachar, WREG
000C56 EC?? F???          M     call    rtc_convert
000C5A C??? FFE8      01213         movff   tens_digit,WREG
000C5E EC?? F???      01214         call    WR_DATA
000C62 C??? FFE8      01215         movff   ones_digit,WREG
000C66 EC?? F???      01216         call    WR_DATA
000C6A 0E2F           01217         movlw   "/"
000C6C EC?? F???      01218         call    WR_DATA
                      01219         
                      01220         rtc_read    0x04            ; 0x04 from DS1307 - days
000C70 0E04               M     movlw   0x04
000C72 6E??               M     movwf   regaddress
000C74 EC?? F???          M     call    read_rtc
000C78 C??? FFE8          M     movff   datachar, WREG
000C7C EC?? F???          M     call    rtc_convert
000C80 C??? FFE8      01221         movff   tens_digit,WREG
000C84 EC?? F???      01222         call    WR_DATA
000C88 C??? FFE8      01223         movff   ones_digit,WREG
000C8C EC?? F???      01224         call    WR_DATA
Warning[203]: Found opcode in column 1. (return)
000C90 0012           01225 return
                      01226         
000C92                01227 SET_TIME
                      01228         rtc_resetAll
                          M 
000C92 6A??               M     clrf    databyte
000C94 0E06               M     movlw   6
000C96 6E??               M     movwf   regaddress ;start at 6 and go down, and set all to 0
                          M 
Warning[207]: Found label after column 1. (del_loop0)
000C98                    M     del_loop0
000C98 EC?? F???          M     call    write_rtc
000C9C 2E??               M     decfsz  regaddress
000C9E D???               M     bra     del_loop0
000CA0 EC?? F???          M     call    write_rtc ;sets registers 0-6 to zero
Warning[207]: Found label after column 1. (_loopknt)
  00000001                M     _loopknt set _loopknt+1
                      01229         
                      01230         rtc_set 0x00,   b'10000000'
000CA4 0E00               M     movlw   0x00
000CA6 6E??               M     movwf   regaddress
000CA8 0E80               M     movlw   b'10000000'
000CAA 6E??               M     movwf   databyte
000CAC EC?? F???          M     call    write_rtc
                      01231 
                      01232         rtc_set 0x06,   b'00010111'             ; Year 17
000CB0 0E06               M     movlw   0x06
000CB2 6E??               M     movwf   regaddress
000CB4 0E17               M     movlw   b'00010111'
000CB6 6E??               M     movwf   databyte
000CB8 EC?? F???          M     call    write_rtc
                      01233         rtc_set 0x05,   b'00000011'             ; Month 03
000CBC 0E05               M     movlw   0x05
000CBE 6E??               M     movwf   regaddress
000CC0 0E03               M     movlw   b'00000011'
000CC2 6E??               M     movwf   databyte
000CC4 EC?? F???          M     call    write_rtc
                      01234         rtc_set 0x04,   b'00000100'             ; Date 04
000CC8 0E04               M     movlw   0x04
000CCA 6E??               M     movwf   regaddress
000CCC 0E04               M     movlw   b'00000100'
000CCE 6E??               M     movwf   databyte
000CD0 EC?? F???          M     call    write_rtc
                      01235         rtc_set 0x02,   b'00010010'             ; Hours 12
000CD4 0E02               M     movlw   0x02
000CD6 6E??               M     movwf   regaddress
000CD8 0E12               M     movlw   b'00010010'
000CDA 6E??               M     movwf   databyte
000CDC EC?? F???          M     call    write_rtc
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01236         rtc_set 0x01,   b'01001000'             ; Minutes 27
000CE0 0E01               M     movlw   0x01
000CE2 6E??               M     movwf   regaddress
000CE4 0E48               M     movlw   b'01001000'
000CE6 6E??               M     movwf   databyte
000CE8 EC?? F???          M     call    write_rtc
                      01237         rtc_set 0x00,   b'00000000'             ; Seconds 0
000CEC 0E00               M     movlw   0x00
000CEE 6E??               M     movwf   regaddress
000CF0 0E00               M     movlw   b'00000000'
000CF2 6E??               M     movwf   databyte
000CF4 EC?? F???          M     call    write_rtc
Warning[203]: Found opcode in column 1. (return)
000CF8 0012           01238 return
                      01239         
000CFA                01240 INIT_USART
                      01241         
000CFA 8E94           01242         bsf     TRISC, 7        ; set RC7=USART RC
000CFC 9C94           01243         bcf     TRISC, 6        ; clear RC6=USART TX
                      01244 
000CFE 0E0F           01245         movlw   15              ; baud rate 9600
000D00 6EAF           01246         movwf   SPBRG
000D02 6AAC           01247         clrf    TXSTA
                      01248         
000D04 6AAB           01249         clrf    RCSTA
000D06 8EAB           01250         bsf     RCSTA,SPEN      ; asynchronous serial port enable
000D08 88AB           01251         bsf     RCSTA,CREN      ; continous receive
                      01252         
000D0A 8AAC           01253         bsf     TXSTA, TXEN     ; transmit enabled
000D0C 0012           01254         return
                      01255 
000D0E                01256 DataUSART
000D0E 0E02           01257         movlw   0x02
000D10 EC?? F???      01258         call    USART_WAIT
000D14 0E0D           01259         movlw   0x0D
000D16 EC?? F???      01260         call    USART_WAIT
                      01261         
000D1A 6A15           01262         clrf    counter         ; used to cycle through past 9 eeprom logs
000D1C 6A16           01263         clrf    counter2        ; used to transmit all 18 bits of saved data
                      01264         
000D1E                01265 TRANSFER_LOGS
000D1E 0E15           01266         movlw   d'21'           ; logs are 21 bits apart
000D20 0215           01267         mulwf   counter         ; log number one starts at eeprom address 0
000D22 CFF3 F021      01268         movff   PRODL, L_EE     ; low address now points to count X 21
000D26 6A16           01269         clrf    counter2
                      01270         
000D28                01271 TRANSFER_DATA   
                      01272         READEE  WREG, H_EE, L_EE
000D28 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000D2C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000D30 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000D32 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000D34 80A6               M         bsf     EECON1, RD          ; read EEPROM
000D36 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000D3A EC?? F???      01273         call    USART_WAIT      ; transfer bit
000D3E 2A21           01274         incf    L_EE
                      01275         
000D40 2A16           01276         incf    counter2
000D42 0E12           01277         movlw   d'18'           ; each perm log has 18 bits of saved data, so 
000D44 6216           01278         cpfseq  counter2        ; see if we're at 18. if so, we're done reading
000D46 D???           01279         bra TRANSFER_DATA       ; this permanent log and onto next.
                      01280         
000D48 EC?? F???      01281         call    USART_LINE      ; new line because a e s t h e t i c
                      01282         
000D4C 2A15           01283         incf    counter
000D4E 0E08           01284         movlw   d'8'            ; we save up to the last 9 permanent logs
000D50 6215           01285         cpfseq  counter
000D52 D???           01286         bra     TRANSFER_LOGS
                      01287         
000D54 EC?? F???      01288         call    LCD_L2
                      01289         Display PCComplete
  0000                    M         local   loop
000D58 0E??               M         movlw   upper PCComplete ; Move Table<20:16>
000D5A 6EF8               M         movwf   TBLPTRU
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D5C 0E??               M         movlw   high PCComplete ; Move Table<15:8>
000D5E 6EF7               M         movwf   TBLPTRH
000D60 0E??               M         movlw   low PCComplete  ; Move Table<7:0>
000D62 6EF6               M         movwf   TBLPTRL
000D64 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000D66 50F5               M         movf    TABLAT, W
000D68                    M loop
000D68 EC?? F???          M         call    WR_DATA         ; write to LCD
000D6C 000B               M         tblrd+*                 ; next row in table
000D6E 50F5               M         movf    TABLAT, W
000D70 E1??               M         bnz     loop
                      01290         Delay50N delayR, 0x28   
  0000                    M         local   loop
000D72 0E28               M         movlw   0x28
000D74 6E1A               M         movwf   delayR
                          M 
000D76                    M loop
000D76 EC?? F???          M         call    Delay50ms
000D7A 2E1A               M         decfsz  delayR
000D7C EF?? F???          M         goto    loop
000D80 0012           01291         return                  ; done transmitting data
                      01292         
000D82                01293 USART_WAIT
000D82 6EAD           01294         movwf   TXREG
000D84 A2AC           01295         btfss   TXSTA, 1
000D86 EF?? F???      01296         goto    $-2
000D8A 0012           01297         return
                      01298 
000D8C                01299 USART_LINE
000D8C 0E0A           01300         movlw   0x0A
000D8E EC?? F???      01301         call    USART_WAIT
000D92 0E0D           01302         movlw   0x0D
000D94 EC?? F???      01303         call    USART_WAIT
000D98 0012           01304         return
                      01305         
000D9A                01306 Delay5us
000D9A 0E78           01307         movlw   d'120'
000D9C 6E1B           01308         movwf   d5us
                      01309 
000D9E                01310 loop5us
000D9E 2E1B           01311         decfsz  d5us
000DA0 EF?? F???      01312         goto    loop5us
000DA4 0000           01313         nop
000DA6 0012           01314         return
                      01315 
000DA8                01316 Delay200us
000DA8 0EA4           01317         movlw   0xA4
000DAA 6E1C           01318         movwf   d200us
                      01319 
000DAC                01320 loop200us
000DAC 2E1C           01321         decfsz  d200us
000DAE EF?? F???      01322         goto    loop200us
000DB2 0000           01323         nop
000DB4 0012           01324         return
                      01325 
000DB6                01326 Delay50ms
000DB6 0EF9           01327         movlw   0xF9
000DB8 6E1D           01328         movwf   d50ms
                      01329 
000DBA                01330 loop50ms
000DBA EC?? F???      01331         call    Delay200us
000DBE 2E1D           01332         decfsz  d50ms
                      01333 
000DC0                01334 Cycles
000DC0 EF?? F???      01335         goto    loop50ms
000DC4 EC?? F???      01336         call    Delay200us
000DC8 0012           01337         return
                      01338 
000DCA                01339 WriteEE_RTC
                      01340         WriteEE tens_digit, H_EE, L_EE
000DCA C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DCE C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000DD2 C??? FFA8          M         movff   tens_digit, EEDATA  ; set word
                          M 
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DD6 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000DD8 D???               M         bra     $-2
                          M 
000DDA 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000DDC 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000DDE 84A6               M         bsf     EECON1, WREN        ; enable write
000DE0 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000DE2 98A1               M         bcf     PIR2, EEIF
                          M 
000DE4 0E55               M         movlw   0x55
000DE6 6EA7               M         movwf   EECON2              ; write 55h
000DE8 0EAA               M         movlw   0xaa
000DEA 6EA7               M         movwf   EECON2              ; write 0xaa
000DEC 82A6               M         bsf     EECON1, WR          ; begin write
000DEE B2A6               M         btfsc   EECON1, WR
000DF0 D???               M         bra     $-2
                          M 
000DF2 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000DF4 94A6               M         bcf     EECON1, WREN        ; disable writes
000DF6 2A21           01341         incf    L_EE
                      01342         WriteEE ones_digit, H_EE, L_EE
000DF8 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000DFC C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E00 C??? FFA8          M         movff   ones_digit, EEDATA  ; set word
                          M 
000E04 B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E06 D???               M         bra     $-2
                          M 
000E08 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E0A 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E0C 84A6               M         bsf     EECON1, WREN        ; enable write
000E0E 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E10 98A1               M         bcf     PIR2, EEIF
                          M 
000E12 0E55               M         movlw   0x55
000E14 6EA7               M         movwf   EECON2              ; write 55h
000E16 0EAA               M         movlw   0xaa
000E18 6EA7               M         movwf   EECON2              ; write 0xaa
000E1A 82A6               M         bsf     EECON1, WR          ; begin write
000E1C B2A6               M         btfsc   EECON1, WR
000E1E D???               M         bra     $-2
                          M 
000E20 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E22 94A6               M         bcf     EECON1, WREN        ; disable writes
000E24 2A21           01343         incf    L_EE
000E26 0012           01344         return
                      01345 
000E28                01346 ClearEEPROM_21
000E28 6A20           01347         clrf    H_EE
000E2A 6A21           01348         clrf    L_EE
000E2C 681F           01349         setf    clear_EE
000E2E 6A15           01350         clrf    counter
000E30                01351 ClearNext
                      01352         WriteEE         clear_EE, H_EE, L_EE
000E30 C020 FFAA          M         movff   H_EE, EEADRH        ; High address
000E34 C021 FFA9          M         movff   L_EE, EEADR         ; Low address
000E38 C01F FFA8          M         movff   clear_EE, EEDATA    ; set word
                          M 
000E3C B2A6               M         btfsc   EECON1, WR          ; test if WR=0, skip if so
000E3E D???               M         bra     $-2
                          M 
000E40 9EA6               M         bcf     EECON1, EEPGD       ; Point to data memory
000E42 9CA6               M         bcf     EECON1, CFGS        ; Access EEPROM
000E44 84A6               M         bsf     EECON1, WREN        ; enable write
000E46 9EF2               M         bcf     INTCON, GIE         ; disable interrupts during write
000E48 98A1               M         bcf     PIR2, EEIF
                          M 
000E4A 0E55               M         movlw   0x55
000E4C 6EA7               M         movwf   EECON2              ; write 55h
000E4E 0EAA               M         movlw   0xaa
000E50 6EA7               M         movwf   EECON2              ; write 0xaa
000E52 82A6               M         bsf     EECON1, WR          ; begin write
000E54 B2A6               M         btfsc   EECON1, WR
000E56 D???               M         bra     $-2
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000E58 8EF2               M         bsf     INTCON, GIE         ; enable interrupts after write
000E5A 94A6               M         bcf     EECON1, WREN        ; disable writes
000E5C 2A15           01353         incf            counter
000E5E 2A21           01354         incf            L_EE
000E60 0E15           01355         movlw           d'21'
000E62 6215           01356         cpfseq          counter
000E64 EF?? F???      01357         goto            ClearNext
000E68 6A20           01358         clrf            H_EE
000E6A 6A21           01359         clrf            L_EE
000E6C 0012           01360         return
                      01361         
000E6E                01362 READ_KEY
000E6E A281           01363         btfss   PORTB, 1        ; check for keypad interrupt
000E70 EF?? F???      01364         goto    READ_KEY
000E74 3881           01365         swapf   PORTB, W
000E76 0B0F           01366         andlw   0x0F
000E78 6E10           01367         movwf   KEY
000E7A B281           01368         btfsc   PORTB, 1
000E7C EF?? F???      01369         goto    $-2
000E80 0012           01370         return
                      01371 
000E82                01372 READ_KEY_TIME
000E82 EC?? F???      01373         call        LCD_L2          ; go to second line to print RTC    
                      01374         ; display the time
                      01375         ; call      DISPLAY_RTC 
                      01376 
000E86 A281           01377         btfss       PORTB, 1    ; keypad interrupt
000E88 EF?? F???      01378         goto        READ_KEY_TIME
000E8C 3881           01379         swapf       PORTB, W    ; copy PORTB7:4 to W3:0
000E8E 0B0F           01380         andlw       0x0F        ; only want W3:0
000E90 6E10           01381         movwf       KEY         ; write this value to the KEY
000E92 B281           01382         btfsc       PORTB, 1    ; wait for release
000E94 EF?? F???      01383         goto        $-2         ; go back one instruction
000E98 0012           01384         return
                      01385 
000E9A                01386 DisplayExeTime
                      01387         READEE  REG_EE, H_EE, L_EE
000E9A C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000E9E C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EA2 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EA4 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EA6 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EA8 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000EAC 0EFF           01388         movlw   0xFF
000EAE 6222           01389         cpfseq  REG_EE
000EB0 EF?? F???      01390         goto    NoSkipDispExeTime
                      01391         Display NoData
  0000                    M         local   loop
000EB4 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000EB6 6EF8               M         movwf   TBLPTRU
000EB8 0E??               M         movlw   high NoData     ; Move Table<15:8>
000EBA 6EF7               M         movwf   TBLPTRH
000EBC 0E??               M         movlw   low NoData      ; Move Table<7:0>
000EBE 6EF6               M         movwf   TBLPTRL
000EC0 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000EC2 50F5               M         movf    TABLAT, W
000EC4                    M loop
000EC4 EC?? F???          M         call    WR_DATA         ; write to LCD
000EC8 000B               M         tblrd+*                 ; next row in table
000ECA 50F5               M         movf    TABLAT, W
000ECC E1??               M         bnz     loop
000ECE 0EFF           01392         movlw   0xFF
000ED0 6022           01393         cpfslt  REG_EE
000ED2 EF?? F???      01394         goto    SkipDispExeTime
000ED6 0012           01395         return
                      01396 
000ED8                01397 NoSkipDispExeTime
                      01398         READEE  WREG, H_EE, L_EE
000ED8 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EDC C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EE0 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EE2 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EE4 80A6               M         bsf     EECON1, RD          ; read EEPROM
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EE6 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000EEA EC?? F???      01399         call    WR_DATA
000EEE 2A21           01400         incf    L_EE
                      01401         
                      01402         READEE  WREG, H_EE, L_EE
000EF0 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000EF4 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000EF8 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000EFA 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000EFC 80A6               M         bsf     EECON1, RD          ; read EEPROM
000EFE CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F02 EC?? F???      01403         call    WR_DATA
000F06 2A21           01404         incf    L_EE
                      01405         
                      01406         READEE  WREG, H_EE, L_EE
000F08 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F0C C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F10 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F12 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F14 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F16 CFA8 FFE8          M         movff   EEDATA, WREG        ; put data into file
000F1A EC?? F???      01407         call    WR_DATA
000F1E 2A21           01408         incf    L_EE
                      01409 
000F20 0E73           01410         movlw   0x73            ; Write 's'
000F22 EC?? F???      01411         call    WR_DATA
000F26 EC?? F???      01412         call    LCD_L2
000F2A                01413 SkipDispExeTime
000F2A 0012           01414         return
                      01415 
000F2C                01416 DispOpSort
                      01417         READEE  REG_EE, H_EE, L_EE
000F2C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F30 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F34 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F36 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F38 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F3A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F3E 0EFF           01418         movlw   0xff
000F40 6222           01419         cpfseq  REG_EE
000F42 EF?? F???      01420         goto    NoSkipDispOpSort
                      01421         Display NoData
  0000                    M         local   loop
000F46 0E??               M         movlw   upper NoData    ; Move Table<20:16>
000F48 6EF8               M         movwf   TBLPTRU
000F4A 0E??               M         movlw   high NoData     ; Move Table<15:8>
000F4C 6EF7               M         movwf   TBLPTRH
000F4E 0E??               M         movlw   low NoData      ; Move Table<7:0>
000F50 6EF6               M         movwf   TBLPTRL
000F52 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
000F54 50F5               M         movf    TABLAT, W
000F56                    M loop
000F56 EC?? F???          M         call    WR_DATA         ; write to LCD
000F5A 000B               M         tblrd+*                 ; next row in table
000F5C 50F5               M         movf    TABLAT, W
000F5E E1??               M         bnz     loop
000F60 0EFF           01422         movlw   0xff
000F62 6022           01423         cpfslt  REG_EE
000F64 EF?? F???      01424         goto    SkipDispOpSort
                      01425 
000F68                01426 NoSkipDispOpSort
000F68 0E61           01427         movlw   "a"
000F6A EC?? F???      01428         call    WR_DATA
                      01429         
                      01430         READEE  REG_EE, H_EE, L_EE
000F6E C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F72 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F76 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000F78 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000F7A 80A6               M         bsf     EECON1, RD          ; read EEPROM
000F7C CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000F80 C022 FFE8      01431         movff   REG_EE, WREG
000F84 EC?? F???      01432         call    WR_DATA
000F88 2A21           01433         incf    L_EE
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01434         
000F8A 0E20           01435         movlw   " "
000F8C EC?? F???      01436         call    WR_DATA
                      01437         
000F90 0E62           01438         movlw   "b"
000F92 EC?? F???      01439         call    WR_DATA
                      01440         
                      01441         READEE  REG_EE, H_EE, L_EE
000F96 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000F9A C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000F9E 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FA0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FA2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FA4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FA8 C022 FFE8      01442         movff   REG_EE, WREG
000FAC EC?? F???      01443         call    WR_DATA
000FB0 2A21           01444         incf    L_EE
                      01445         
000FB2 0E20           01446         movlw   " "
000FB4 EC?? F???      01447         call    WR_DATA
                      01448         
000FB8 0E63           01449         movlw   "c"
000FBA EC?? F???      01450         call    WR_DATA
                      01451         
                      01452         READEE  REG_EE, H_EE, L_EE
000FBE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FC2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FC6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FC8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FCA 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FCC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FD0 C022 FFE8      01453         movff   REG_EE, WREG
000FD4 EC?? F???      01454         call    WR_DATA
000FD8 2A21           01455         incf    L_EE
                      01456         
000FDA 0E20           01457         movlw   " "
000FDC EC?? F???      01458         call    WR_DATA
                      01459         
000FE0 0E64           01460         movlw   "d"
000FE2 EC?? F???      01461         call    WR_DATA
                      01462         
                      01463         READEE  REG_EE, H_EE, L_EE
000FE6 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
000FEA C021 FFA9          M         movff   L_EE, EEADR         ; read to low
000FEE 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
000FF0 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
000FF2 80A6               M         bsf     EECON1, RD          ; read EEPROM
000FF4 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
000FF8 C022 FFE8      01464         movff   REG_EE, WREG
000FFC EC?? F???      01465         call    WR_DATA
001000 2A21           01466         incf    L_EE
                      01467 
001002                01468 SkipDispOpSort
001002 0012           01469         return
                      01470         
001004                01471 DispOpRTC
                      01472         READEE  REG_EE, H_EE, L_EE
001004 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001008 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
00100C 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00100E 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001010 80A6               M         bsf     EECON1, RD          ; read EEPROM
001012 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001016 0EFF           01473         movlw   0xff
001018 6222           01474         cpfseq  REG_EE
00101A EF?? F???      01475         goto    NoSkipDispOpRTC
                      01476         Display NoData
  0000                    M         local   loop
00101E 0E??               M         movlw   upper NoData    ; Move Table<20:16>
001020 6EF8               M         movwf   TBLPTRU
001022 0E??               M         movlw   high NoData     ; Move Table<15:8>
001024 6EF7               M         movwf   TBLPTRH
001026 0E??               M         movlw   low NoData      ; Move Table<7:0>
001028 6EF6               M         movwf   TBLPTRL
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00102A 0008               M         tblrd*                  ; Read byte from TBLPTRL to TABLAT
00102C 50F5               M         movf    TABLAT, W
00102E                    M loop
00102E EC?? F???          M         call    WR_DATA         ; write to LCD
001032 000B               M         tblrd+*                 ; next row in table
001034 50F5               M         movf    TABLAT, W
001036 E1??               M         bnz     loop
001038 0EFF           01477         movlw   0xff
00103A 6022           01478         cpfslt  REG_EE
00103C EF?? F???      01479         goto    SkipDispOpRTC
                      01480 
001040                01481 NoSkipDispOpRTC
                      01482         READEE  REG_EE, H_EE, L_EE
001040 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001044 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001048 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
00104A 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
00104C 80A6               M         bsf     EECON1, RD          ; read EEPROM
00104E CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
001052 C022 FFE8      01483         movff   REG_EE, WREG
001056 EC?? F???      01484         call    WR_DATA
00105A 2A21           01485         incf    L_EE
                      01486         
                      01487         READEE  REG_EE, H_EE, L_EE
00105C C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
001060 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
001064 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
001066 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
001068 80A6               M         bsf     EECON1, RD          ; read EEPROM
00106A CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
00106E C022 FFE8      01488         movff   REG_EE, WREG
001072 EC?? F???      01489         call    WR_DATA
001076 2A21           01490         incf    L_EE
                      01491 
001078 0E68           01492         movlw   "h"
00107A EC?? F???      01493         call    WR_DATA
                      01494         
00107E EC?? F???      01495         call    DispOpRTC_Helper
                      01496         
001082 0E20           01497         movlw   " "
001084 EC?? F???      01498         call    WR_DATA
                      01499         
001088 EC?? F???      01500         call    DispOpRTC_Helper
00108C 0E2F           01501         movlw   "/"
00108E EC?? F???      01502         call    WR_DATA
                      01503 
001092 EC?? F???      01504         call    DispOpRTC_Helper
001096 0E2F           01505         movlw   "/"
001098 EC?? F???      01506         call    WR_DATA
00109C EC?? F???      01507         call    DispOpRTC_Helper
0010A0                01508 SkipDispOpRTC
0010A0 0012           01509                 return
0010A2                01510 DispOpRTC_Helper
                      01511         READEE          REG_EE, H_EE, L_EE
0010A2 C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010A6 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010AA 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010AC 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010AE 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010B0 CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010B4 C022 FFE8      01512         movff           REG_EE, WREG
0010B8 EC?? F???      01513         call            WR_DATA
0010BC 2A21           01514         incf            L_EE
                      01515         READEE          REG_EE, H_EE, L_EE
0010BE C020 FFAA          M         movff   H_EE, EEADRH        ; read to high
0010C2 C021 FFA9          M         movff   L_EE, EEADR         ; read to low
0010C6 9EA6               M         bcf     EECON1, EEPGD       ; point to data memory
0010C8 9CA6               M         bcf     EECON1, CFGS        ; access to EEPROM
0010CA 80A6               M         bsf     EECON1, RD          ; read EEPROM
0010CC CFA8 F022          M         movff   EEDATA, REG_EE      ; put data into file
0010D0 C022 FFE8      01516         movff           REG_EE, WREG
0010D4 EC?? F???      01517         call            WR_DATA
0010D8 2A21           01518         incf            L_EE
0010DA 0012           01519         return
MPASM 5.72  /USERS/MREITER/DESKTOP/AER201/BO   3-30-2017  21:51:36         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (end)
                      01520 end

Errors   :     0
Warnings :    39 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

